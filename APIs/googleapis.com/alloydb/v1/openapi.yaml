openapi: 3.0.0
servers:
  - url: https://alloydb.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: "AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. "
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: AlloyDB API
  version: v1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://alloydb.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: alloydb
externalDocs:
  url: https://cloud.google.com/alloydb/
tags:
  - name: projects
paths:
  /v1/{name}:
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: alloydb.projects.locations.operations.delete
      parameters:
        - description: The name of the operation resource to be deleted.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Optional. If set, the backend validates the request, but doesn't actually execute it.
          in: query
          name: validateOnly
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: alloydb.projects.locations.operations.get
      parameters:
        - description: The name of the operation resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The view of the instance to return.
          in: query
          name: view
          schema:
            enum:
              - INSTANCE_VIEW_UNSPECIFIED
              - INSTANCE_VIEW_BASIC
              - INSTANCE_VIEW_FULL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates the parameters of a single User.
      operationId: alloydb.projects.locations.clusters.users.patch
      parameters:
        - description: Output only. Name of the resource in the form of projects/{project}/locations/{location}/cluster/{cluster}/users/{user}.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. Allow missing fields in the update mask.
          in: query
          name: allowMissing
          schema:
            type: boolean
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Optional. Field mask is used to specify the fields to be overwritten in the User resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.
          in: query
          name: updateMask
          schema:
            type: string
        - description: Optional. If set, the backend validates the request, but doesn't actually execute it.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: alloydb.projects.locations.list
      parameters:
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results to return. If not set, the service selects a default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudLocationListLocationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}/operations:
    get:
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: alloydb.projects.locations.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: alloydb.projects.locations.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOperationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:failover:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Forces a Failover for a highly available instance. Failover promotes the HA standby instance as the new primary. Imperative only.
      operationId: alloydb.projects.locations.clusters.instances.failover
      parameters:
        - description: Required. The name of the resource. For the required format, see the comment on the Instance.name field.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FailoverInstanceRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:injectFault:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Injects fault in an instance. Imperative only.
      operationId: alloydb.projects.locations.clusters.instances.injectFault
      parameters:
        - description: Required. The name of the resource. For the required format, see the comment on the Instance.name field.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InjectFaultRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:promote:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Promotes a SECONDARY cluster. This turns down replication from the PRIMARY cluster and promotes a secondary cluster into its own standalone cluster. Imperative only.
      operationId: alloydb.projects.locations.clusters.promote
      parameters:
        - description: Required. The name of the resource. For the required format, see the comment on the Cluster.name field
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromoteClusterRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:restart:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Restart an Instance in a cluster. Imperative only.
      operationId: alloydb.projects.locations.clusters.instances.restart
      parameters:
        - description: Required. The name of the resource. For the required format, see the comment on the Instance.name field.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestartInstanceRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/backups:
    get:
      description: Lists Backups in a given project and location.
      operationId: alloydb.projects.locations.backups.list
      parameters:
        - description: Required. Parent value for ListBackupsRequest
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filtering results
          in: query
          name: filter
          schema:
            type: string
        - description: Hint for how to order the results
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListBackupsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new Backup in a given project and location.
      operationId: alloydb.projects.locations.backups.create
      parameters:
        - description: Required. Value for parent.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. ID of the requesting object.
          in: query
          name: backupId
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Optional. If set, the backend validates the request, but doesn't actually execute it.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Backup"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/clusters:
    get:
      description: Lists Clusters in a given project and location.
      operationId: alloydb.projects.locations.clusters.list
      parameters:
        - description: "Required. The name of the parent resource. For the required format, see the comment on the Cluster.name field. Additionally, you can perform an aggregated list operation by specifying a value with the following format: * projects/{project}/locations/-"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filtering results
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Hint for how to order the results
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListClustersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new Cluster in a given project and location.
      operationId: alloydb.projects.locations.clusters.create
      parameters:
        - description: Required. The location of the new cluster. For the required format, see the comment on the Cluster.name field.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. ID of the requesting object.
          in: query
          name: clusterId
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Optional. If set, performs request validation (e.g. permission checks and any other type of validation), but do not actually execute the create request.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cluster"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/clusters:createsecondary:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a cluster of type SECONDARY in the given location using the primary cluster as the source.
      operationId: alloydb.projects.locations.clusters.createsecondary
      parameters:
        - description: Required. The location of the new cluster. For the required format, see the comment on the Cluster.name field.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. ID of the requesting object (the secondary cluster).
          in: query
          name: clusterId
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Optional. If set, performs request validation (e.g. permission checks and any other type of validation), but do not actually execute the create request.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cluster"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/clusters:restore:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new Cluster in a given project and location, with a volume restored from the provided source, either a backup ID or a point-in-time and a source cluster.
      operationId: alloydb.projects.locations.clusters.restore
      parameters:
        - description: Required. The name of the parent resource. For the required format, see the comment on the Cluster.name field.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestoreClusterRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/connectionInfo:
    get:
      description: Get instance metadata used for a connection.
      operationId: alloydb.projects.locations.clusters.instances.getConnectionInfo
      parameters:
        - description: "Required. The name of the parent resource. The required format is: projects/{project}/locations/{location}/clusters/{cluster}/instances/{instance}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionInfo"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/instances:
    get:
      description: Lists Instances in a given project and location.
      operationId: alloydb.projects.locations.clusters.instances.list
      parameters:
        - description: "Required. The name of the parent resource. For the required format, see the comment on the Instance.name field. Additionally, you can perform an aggregated list operation by specifying a value with one of the following formats: * projects/{project}/locations/-/clusters/- * projects/{project}/locations/{region}/clusters/-"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filtering results
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Hint for how to order the results
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListInstancesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new Instance in a given project and location.
      operationId: alloydb.projects.locations.clusters.instances.create
      parameters:
        - description: Required. The name of the parent resource. For the required format, see the comment on the Instance.name field.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. ID of the requesting object.
          in: query
          name: instanceId
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Optional. If set, performs request validation (e.g. permission checks and any other type of validation), but do not actually execute the create request.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Instance"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/instances:createsecondary:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new SECONDARY Instance in a given project and location.
      operationId: alloydb.projects.locations.clusters.instances.createsecondary
      parameters:
        - description: Required. The name of the parent resource. For the required format, see the comment on the Instance.name field.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. ID of the requesting object.
          in: query
          name: instanceId
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Optional. If set, performs request validation (e.g. permission checks and any other type of validation), but do not actually execute the create request.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Instance"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/supportedDatabaseFlags:
    get:
      description: Lists SupportedDatabaseFlags for a given project and location.
      operationId: alloydb.projects.locations.supportedDatabaseFlags.list
      parameters:
        - description: "Required. The name of the parent resource. The required format is: * projects/{project}/locations/{location} Regardless of the parent specified here, as long it is contains a valid project and location, the service will return a static list of supported flags resources. Note that we do not yet support region-specific flags."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSupportedDatabaseFlagsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/users:
    get:
      description: Lists Users in a given project and location.
      operationId: alloydb.projects.locations.clusters.users.list
      parameters:
        - description: Required. Parent value for ListUsersRequest
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filtering results
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Hint for how to order the results
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. A token identifying a page of results the server should return.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUsersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new User in a given project, location, and cluster.
      operationId: alloydb.projects.locations.clusters.users.create
      parameters:
        - description: Required. Value for parent.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Required. ID of the requesting object.
          in: query
          name: userId
          schema:
            type: string
        - description: Optional. If set, the backend validates the request, but doesn't actually execute it.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}:generateClientCertificate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Generate a client certificate signed by a Cluster CA. The sole purpose of this endpoint is to support AlloyDB connectors and the Auth Proxy client. The endpoint's behavior is subject to change without notice, so do not rely on its behavior remaining constant. Future changes will not break AlloyDB connectors or the Auth Proxy client.
      operationId: alloydb.projects.locations.clusters.generateClientCertificate
      parameters:
        - description: "Required. The name of the parent resource. The required format is: * projects/{project}/locations/{location}/clusters/{cluster}"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateClientCertificateRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateClientCertificateResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AutomatedBackupPolicy:
      description: Message describing the user-specified automated backup policy. All fields in the automated backup policy are optional. Defaults for each field are provided if they are not set.
      properties:
        backupWindow:
          description: The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed. The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it defaults to 1 hour.
          format: google-duration
          type: string
        enabled:
          description: Whether automated automated backups are enabled. If not set, defaults to true.
          type: boolean
        encryptionConfig:
          $ref: "#/components/schemas/EncryptionConfig"
          description: Optional. The encryption config can be specified to encrypt the backups with a customer-managed encryption key (CMEK). When this field is not specified, the backup will then use default encryption scheme to protect the user data.
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to backups created using this configuration.
          type: object
        location:
          description: The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster. If empty, defaults to the region of the cluster.
          type: string
        quantityBasedRetention:
          $ref: "#/components/schemas/QuantityBasedRetention"
          description: Quantity-based Backup retention policy to retain recent backups.
        timeBasedRetention:
          $ref: "#/components/schemas/TimeBasedRetention"
          description: Time-based Backup retention policy.
        weeklySchedule:
          $ref: "#/components/schemas/WeeklySchedule"
          description: Weekly schedule for the Backup.
      type: object
    Backup:
      description: Message describing Backup object
      properties:
        annotations:
          additionalProperties:
            type: string
          description: Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels. https://google.aip.dev/128
          type: object
        clusterName:
          description: Required. The full resource name of the backup source cluster (e.g., projects/{project}/locations/{region}/clusters/{cluster_id}).
          type: string
        clusterUid:
          description: Output only. The system-generated UID of the cluster which was used to create this resource.
          readOnly: true
          type: string
        createTime:
          description: Output only. Create time stamp
          format: google-datetime
          readOnly: true
          type: string
        databaseVersion:
          description: Output only. The database engine major version of the cluster this backup was created from. Any restored cluster created from this backup will have the same database version.
          enum:
            - DATABASE_VERSION_UNSPECIFIED
            - POSTGRES_13
            - POSTGRES_14
            - POSTGRES_15
          readOnly: true
          type: string
          x-enumDeprecated:
            - false
            - true
            - false
            - false
        deleteTime:
          description: Output only. Delete time stamp
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: User-provided description of the backup.
          type: string
        displayName:
          description: User-settable and human-readable display name for the Backup.
          type: string
        encryptionConfig:
          $ref: "#/components/schemas/EncryptionConfig"
          description: Optional. The encryption config can be specified to encrypt the backup with a customer-managed encryption key (CMEK). When this field is not specified, the backup will then use default encryption scheme to protect the user data.
        encryptionInfo:
          $ref: "#/components/schemas/EncryptionInfo"
          description: Output only. The encryption information for the backup.
          readOnly: true
        etag:
          description: For Resource freshness validation (https://google.aip.dev/154)
          type: string
        expiryQuantity:
          $ref: "#/components/schemas/QuantityBasedExpiry"
          description: Output only. The QuantityBasedExpiry of the backup, specified by the backup's retention policy. Once the expiry quantity is over retention, the backup is eligible to be garbage collected.
          readOnly: true
        expiryTime:
          description: Output only. The time at which after the backup is eligible to be garbage collected. It is the duration specified by the backup's retention policy, added to the backup's create_time.
          format: google-datetime
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs
          type: object
        name:
          description: "Output only. The name of the backup resource with the format: * projects/{project}/locations/{region}/backups/{backup_id} where the cluster and backup ID segments should satisfy the regex expression `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`, e.g. 1-63 characters of lowercase letters, numbers, and dashes, starting with a letter, and ending with a letter or number. For more details see https://google.aip.dev/122. The prefix of the backup resource name is the name of the parent resource: * projects/{project}/locations/{region}"
          readOnly: true
          type: string
        reconciling:
          description: Output only. Reconciling (https://google.aip.dev/128#reconciliation), if true, indicates that the service is actively updating the resource. This can happen due to user-triggered updates or system actions like failover or maintenance.
          readOnly: true
          type: boolean
        satisfiesPzs:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        sizeBytes:
          description: Output only. The size of the backup in bytes.
          format: int64
          readOnly: true
          type: string
        state:
          description: Output only. The current state of the backup.
          enum:
            - STATE_UNSPECIFIED
            - READY
            - CREATING
            - FAILED
            - DELETING
          readOnly: true
          type: string
        type:
          description: The backup type, which suggests the trigger for the backup.
          enum:
            - TYPE_UNSPECIFIED
            - ON_DEMAND
            - AUTOMATED
            - CONTINUOUS
          type: string
        uid:
          description: Output only. The system-generated UID of the resource. The UID is assigned when the resource is created, and it is retained until it is deleted.
          readOnly: true
          type: string
        updateTime:
          description: Output only. Update time stamp
          format: google-datetime
          readOnly: true
          type: string
      type: object
    BackupSource:
      description: Message describing a BackupSource.
      properties:
        backupName:
          description: "Required. The name of the backup resource with the format: * projects/{project}/locations/{region}/backups/{backup_id}"
          type: string
        backupUid:
          description: Output only. The system-generated UID of the backup which was used to create this resource. The UID is generated when the backup is created, and it is retained until the backup is deleted.
          readOnly: true
          type: string
      type: object
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    ClientConnectionConfig:
      description: Client connection configuration
      properties:
        requireConnectors:
          description: "Optional. Configuration to enforce connectors only (ex: AuthProxy) connections to the database."
          type: boolean
        sslConfig:
          $ref: "#/components/schemas/SslConfig"
          description: Optional. SSL config option for this instance.
      type: object
    CloudControl2SharedOperationsReconciliationOperationMetadata:
      description: Operation metadata returned by the CLH during resource state reconciliation.
      properties:
        deleteResource:
          deprecated: true
          description: DEPRECATED. Use exclusive_action instead.
          type: boolean
        exclusiveAction:
          description: Excluisive action returned by the CLH.
          enum:
            - UNKNOWN_REPAIR_ACTION
            - DELETE
            - RETRY
          type: string
          x-enumDeprecated:
            - false
            - true
            - false
      type: object
    Cluster:
      description: A cluster is a collection of regional AlloyDB resources. It can include a primary instance and one or more read pool instances. All cluster resources share a storage layer, which scales as needed.
      properties:
        annotations:
          additionalProperties:
            type: string
          description: Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels. https://google.aip.dev/128
          type: object
        automatedBackupPolicy:
          $ref: "#/components/schemas/AutomatedBackupPolicy"
          description: The automated backup policy for this cluster. If no policy is provided then the default policy will be used. If backups are supported for the cluster, the default policy takes one backup a day, has a backup window of 1 hour, and retains backups for 14 days. For more information on the defaults, consult the documentation for the message type.
        backupSource:
          $ref: "#/components/schemas/BackupSource"
          description: Output only. Cluster created from backup.
          readOnly: true
        clusterType:
          description: Output only. The type of the cluster. This is an output-only field and it's populated at the Cluster creation time or the Cluster promotion time. The cluster type is determined by which RPC was used to create the cluster (i.e. `CreateCluster` vs. `CreateSecondaryCluster`
          enum:
            - CLUSTER_TYPE_UNSPECIFIED
            - PRIMARY
            - SECONDARY
          readOnly: true
          type: string
        continuousBackupConfig:
          $ref: "#/components/schemas/ContinuousBackupConfig"
          description: Optional. Continuous backup configuration for this cluster.
        continuousBackupInfo:
          $ref: "#/components/schemas/ContinuousBackupInfo"
          description: Output only. Continuous backup properties for this cluster.
          readOnly: true
        createTime:
          description: Output only. Create time stamp
          format: google-datetime
          readOnly: true
          type: string
        databaseVersion:
          description: Optional. The database engine major version. This is an optional field and it is populated at the Cluster creation time. If a database version is not supplied at cluster creation time, then a default database version will be used.
          enum:
            - DATABASE_VERSION_UNSPECIFIED
            - POSTGRES_13
            - POSTGRES_14
            - POSTGRES_15
          type: string
          x-enumDeprecated:
            - false
            - true
            - false
            - false
        deleteTime:
          description: Output only. Delete time stamp
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: User-settable and human-readable display name for the Cluster.
          type: string
        encryptionConfig:
          $ref: "#/components/schemas/EncryptionConfig"
          description: Optional. The encryption config can be specified to encrypt the data disks and other persistent data resources of a cluster with a customer-managed encryption key (CMEK). When this field is not specified, the cluster will then use default encryption scheme to protect the user data.
        encryptionInfo:
          $ref: "#/components/schemas/EncryptionInfo"
          description: Output only. The encryption information for the cluster.
          readOnly: true
        etag:
          description: For Resource freshness validation (https://google.aip.dev/154)
          type: string
        initialUser:
          $ref: "#/components/schemas/UserPassword"
          description: Input only. Initial user to setup during cluster creation. Required. If used in `RestoreCluster` this is ignored.
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs
          type: object
        migrationSource:
          $ref: "#/components/schemas/MigrationSource"
          description: Output only. Cluster created via DMS migration.
          readOnly: true
        name:
          description: "Output only. The name of the cluster resource with the format: * projects/{project}/locations/{region}/clusters/{cluster_id} where the cluster ID segment should satisfy the regex expression `[a-z0-9-]+`. For more details see https://google.aip.dev/122. The prefix of the cluster resource name is the name of the parent resource: * projects/{project}/locations/{region}"
          readOnly: true
          type: string
        network:
          deprecated: true
          description: "Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: `projects/{project}/global/networks/{network_id}`. This is required to create a cluster. Deprecated, use network_config.network instead."
          type: string
        networkConfig:
          $ref: "#/components/schemas/NetworkConfig"
        primaryConfig:
          $ref: "#/components/schemas/PrimaryConfig"
          description: Output only. Cross Region replication config specific to PRIMARY cluster.
          readOnly: true
        reconciling:
          description: Output only. Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the current state of Cluster does not match the user's intended state, and the service is actively updating the resource to reconcile them. This can happen due to user-triggered updates or system actions like failover or maintenance.
          readOnly: true
          type: boolean
        satisfiesPzs:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        secondaryConfig:
          $ref: "#/components/schemas/SecondaryConfig"
          description: Cross Region replication config specific to SECONDARY cluster.
        sslConfig:
          $ref: "#/components/schemas/SslConfig"
          deprecated: true
          description: SSL configuration for this AlloyDB cluster.
        state:
          description: Output only. The current serving state of the cluster.
          enum:
            - STATE_UNSPECIFIED
            - READY
            - STOPPED
            - EMPTY
            - CREATING
            - DELETING
            - FAILED
            - BOOTSTRAPPING
            - MAINTENANCE
            - PROMOTING
          readOnly: true
          type: string
        uid:
          description: Output only. The system-generated UID of the resource. The UID is assigned when the resource is created, and it is retained until it is deleted.
          readOnly: true
          type: string
        updateTime:
          description: Output only. Update time stamp
          format: google-datetime
          readOnly: true
          type: string
      type: object
    ConnectionInfo:
      description: ConnectionInfo singleton resource. https://google.aip.dev/156
      properties:
        instanceUid:
          description: Output only. The unique ID of the Instance.
          readOnly: true
          type: string
        ipAddress:
          description: Output only. The private network IP address for the Instance. This is the default IP for the instance and is always created (even if enable_public_ip is set). This is the connection endpoint for an end-user application.
          readOnly: true
          type: string
        name:
          description: "The name of the ConnectionInfo singleton resource, e.g.: projects/{project}/locations/{location}/clusters/*/instances/*/connectionInfo This field currently has no semantic meaning."
          type: string
      type: object
    ContinuousBackupConfig:
      description: ContinuousBackupConfig describes the continuous backups recovery configurations of a cluster.
      properties:
        enabled:
          description: Whether ContinuousBackup is enabled.
          type: boolean
        encryptionConfig:
          $ref: "#/components/schemas/EncryptionConfig"
          description: The encryption config can be specified to encrypt the backups with a customer-managed encryption key (CMEK). When this field is not specified, the backup will then use default encryption scheme to protect the user data.
        recoveryWindowDays:
          description: The number of days that are eligible to restore from using PITR. To support the entire recovery window, backups and logs are retained for one day more than the recovery window. If not set, defaults to 14 days.
          format: int32
          type: integer
      type: object
    ContinuousBackupInfo:
      description: ContinuousBackupInfo describes the continuous backup properties of a cluster.
      properties:
        earliestRestorableTime:
          description: Output only. The earliest restorable time that can be restored to. Output only field.
          format: google-datetime
          readOnly: true
          type: string
        enabledTime:
          description: Output only. When ContinuousBackup was most recently enabled. Set to null if ContinuousBackup is not enabled.
          format: google-datetime
          readOnly: true
          type: string
        encryptionInfo:
          $ref: "#/components/schemas/EncryptionInfo"
          description: Output only. The encryption information for the WALs and backups required for ContinuousBackup.
          readOnly: true
        schedule:
          description: Output only. Days of the week on which a continuous backup is taken. Output only field. Ignored if passed into the request.
          items:
            enum:
              - DAY_OF_WEEK_UNSPECIFIED
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
            type: string
          readOnly: true
          type: array
      type: object
    ContinuousBackupSource:
      description: Message describing a ContinuousBackupSource.
      properties:
        cluster:
          description: Required. The source cluster from which to restore. This cluster must have continuous backup enabled for this operation to succeed. For the required format, see the comment on the Cluster.name field.
          type: string
        pointInTime:
          description: Required. The point in time to restore to.
          format: google-datetime
          type: string
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    EncryptionConfig:
      description: EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
      properties:
        kmsKeyName:
          description: "The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME]"
          type: string
      type: object
    EncryptionInfo:
      description: EncryptionInfo describes the encryption information of a cluster or a backup.
      properties:
        encryptionType:
          description: Output only. Type of encryption.
          enum:
            - TYPE_UNSPECIFIED
            - GOOGLE_DEFAULT_ENCRYPTION
            - CUSTOMER_MANAGED_ENCRYPTION
          readOnly: true
          type: string
        kmsKeyVersions:
          description: Output only. Cloud KMS key versions that are being used to protect the database or the backup.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    FailoverInstanceRequest:
      description: Message for triggering failover on an Instance
      properties:
        requestId:
          description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
        validateOnly:
          description: Optional. If set, performs request validation (e.g. permission checks and any other type of validation), but do not actually execute the failover.
          type: boolean
      type: object
    GenerateClientCertificateRequest:
      description: Message for requests to generate a client certificate signed by the Cluster CA.
      properties:
        certDuration:
          description: Optional. An optional hint to the endpoint to generate the client certificate with the requested duration. The duration can be from 1 hour to 24 hours. The endpoint may or may not honor the hint. If the hint is left unspecified or is not honored, then the endpoint will pick an appropriate default duration.
          format: google-duration
          type: string
        publicKey:
          description: Optional. The public key from the client.
          type: string
        requestId:
          description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
        useMetadataExchange:
          description: Optional. An optional hint to the endpoint to generate a client ceritificate that can be used by AlloyDB connectors to exchange additional metadata with the server after TLS handshake.
          type: boolean
      type: object
    GenerateClientCertificateResponse:
      description: Message returned by a GenerateClientCertificate operation.
      properties:
        caCert:
          description: Optional. The pem-encoded cluster ca X.509 certificate.
          type: string
        pemCertificateChain:
          description: Output only. The pem-encoded chain that may be used to verify the X.509 certificate. Expected to be in issuer-to-root order according to RFC 5246.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    GoogleCloudLocationListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudLocationLocation"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    GoogleCloudLocationLocation:
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      type: object
    GoogleTypeTimeOfDay:
      description: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
      properties:
        hours:
          description: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
          format: int32
          type: integer
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          format: int32
          type: integer
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          format: int32
          type: integer
        seconds:
          description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
          format: int32
          type: integer
      type: object
    InjectFaultRequest:
      description: Message for triggering fault injection on an instance
      properties:
        faultType:
          description: Required. The type of fault to be injected in an instance.
          enum:
            - FAULT_TYPE_UNSPECIFIED
            - STOP_VM
          type: string
        requestId:
          description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
        validateOnly:
          description: Optional. If set, performs request validation (e.g. permission checks and any other type of validation), but do not actually execute the fault injection.
          type: boolean
      type: object
    Instance:
      description: An Instance is a computing unit that an end customer can connect to. It's the main unit of computing resources in AlloyDB.
      properties:
        annotations:
          additionalProperties:
            type: string
          description: Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels. https://google.aip.dev/128
          type: object
        availabilityType:
          description: Availability type of an Instance. If empty, defaults to REGIONAL for primary instances. For read pools, availability_type is always UNSPECIFIED. Instances in the read pools are evenly distributed across available zones within the region (i.e. read pools with more than one node will have a node in at least two zones).
          enum:
            - AVAILABILITY_TYPE_UNSPECIFIED
            - ZONAL
            - REGIONAL
          type: string
        clientConnectionConfig:
          $ref: "#/components/schemas/ClientConnectionConfig"
          description: Optional. Client connection specific configurations
        createTime:
          description: Output only. Create time stamp
          format: google-datetime
          readOnly: true
          type: string
        databaseFlags:
          additionalProperties:
            type: string
          description: "Database flags. Set at instance level. * They are copied from primary instance on read instance creation. * Read instances can set new or override existing flags that are relevant for reads, e.g. for enabling columnar cache on a read instance. Flags set on read instance may or may not be present on primary. This is a list of \"key\": \"value\" pairs. \"key\": The name of the flag. These flags are passed at instance setup time, so include both server options and system variables for Postgres. Flags are specified with underscores, not hyphens. \"value\": The value of the flag. Booleans are set to **on** for true and **off** for false. This field must be omitted if the flag doesn't take a value."
          type: object
        deleteTime:
          description: Output only. Delete time stamp
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: User-settable and human-readable display name for the Instance.
          type: string
        etag:
          description: For Resource freshness validation (https://google.aip.dev/154)
          type: string
        gceZone:
          description: The Compute Engine zone that the instance should serve from, per https://cloud.google.com/compute/docs/regions-zones This can ONLY be specified for ZONAL instances. If present for a REGIONAL instance, an error will be thrown. If this is absent for a ZONAL instance, instance is created in a random zone with available capacity.
          type: string
        instanceType:
          description: Required. The type of the instance. Specified at creation time.
          enum:
            - INSTANCE_TYPE_UNSPECIFIED
            - PRIMARY
            - READ_POOL
            - SECONDARY
          type: string
        ipAddress:
          description: Output only. The IP address for the Instance. This is the connection endpoint for an end-user application.
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs
          type: object
        machineConfig:
          $ref: "#/components/schemas/MachineConfig"
          description: Configurations for the machines that host the underlying database engine.
        name:
          description: "Output only. The name of the instance resource with the format: * projects/{project}/locations/{region}/clusters/{cluster_id}/instances/{instance_id} where the cluster and instance ID segments should satisfy the regex expression `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`, e.g. 1-63 characters of lowercase letters, numbers, and dashes, starting with a letter, and ending with a letter or number. For more details see https://google.aip.dev/122. The prefix of the instance resource name is the name of the parent resource: * projects/{project}/locations/{region}/clusters/{cluster_id}"
          readOnly: true
          type: string
        nodes:
          description: Output only. List of available read-only VMs in this instance, including the standby for a PRIMARY instance.
          items:
            $ref: "#/components/schemas/Node"
          readOnly: true
          type: array
        queryInsightsConfig:
          $ref: "#/components/schemas/QueryInsightsInstanceConfig"
          description: Configuration for query insights.
        readPoolConfig:
          $ref: "#/components/schemas/ReadPoolConfig"
          description: Read pool instance configuration. This is required if the value of instanceType is READ_POOL.
        reconciling:
          description: Output only. Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the current state of Instance does not match the user's intended state, and the service is actively updating the resource to reconcile them. This can happen due to user-triggered updates or system actions like failover or maintenance.
          readOnly: true
          type: boolean
        satisfiesPzs:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        state:
          description: Output only. The current serving state of the instance.
          enum:
            - STATE_UNSPECIFIED
            - READY
            - STOPPED
            - CREATING
            - DELETING
            - MAINTENANCE
            - FAILED
            - BOOTSTRAPPING
            - PROMOTING
          readOnly: true
          type: string
        uid:
          description: Output only. The system-generated UID of the resource. The UID is assigned when the resource is created, and it is retained until it is deleted.
          readOnly: true
          type: string
        updateTime:
          description: Output only. Update time stamp
          format: google-datetime
          readOnly: true
          type: string
        writableNode:
          $ref: "#/components/schemas/Node"
          description: Output only. This is set for the read-write VM of the PRIMARY instance only.
          readOnly: true
      type: object
    IntegerRestrictions:
      description: Restrictions on INTEGER type values.
      properties:
        maxValue:
          description: The maximum value that can be specified, if applicable.
          format: int64
          type: string
        minValue:
          description: The minimum value that can be specified, if applicable.
          format: int64
          type: string
      type: object
    ListBackupsResponse:
      description: Message for response to listing Backups
      properties:
        backups:
          description: The list of Backup
          items:
            $ref: "#/components/schemas/Backup"
          type: array
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListClustersResponse:
      description: Message for response to listing Clusters
      properties:
        clusters:
          description: The list of Cluster
          items:
            $ref: "#/components/schemas/Cluster"
          type: array
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListInstancesResponse:
      description: Message for response to listing Instances
      properties:
        instances:
          description: The list of Instance
          items:
            $ref: "#/components/schemas/Instance"
          type: array
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    ListSupportedDatabaseFlagsResponse:
      description: Message for response to listing SupportedDatabaseFlags.
      properties:
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        supportedDatabaseFlags:
          description: The list of SupportedDatabaseFlags.
          items:
            $ref: "#/components/schemas/SupportedDatabaseFlag"
          type: array
      type: object
    ListUsersResponse:
      description: Message for response to listing Users
      properties:
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        users:
          description: The list of User
          items:
            $ref: "#/components/schemas/User"
          type: array
      type: object
    MachineConfig:
      description: MachineConfig describes the configuration of a machine.
      properties:
        cpuCount:
          description: The number of CPU's in the VM instance.
          format: int32
          type: integer
      type: object
    MigrationSource:
      description: Subset of the source instance configuration that is available when reading the cluster resource.
      properties:
        hostPort:
          description: Output only. The host and port of the on-premises instance in host:port format
          readOnly: true
          type: string
        referenceId:
          description: Output only. Place holder for the external source identifier(e.g DMS job name) that created the cluster.
          readOnly: true
          type: string
        sourceType:
          description: Output only. Type of migration source.
          enum:
            - MIGRATION_SOURCE_TYPE_UNSPECIFIED
            - DMS
          readOnly: true
          type: string
      type: object
    NetworkConfig:
      description: Metadata related to network configuration.
      properties:
        allocatedIpRange:
          description: 'Optional. Name of the allocated IP range for the private IP AlloyDB cluster, for example: "google-managed-services-default". If set, the instance IPs for this cluster will be created in the allocated range. The range name must comply with RFC 1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. Field name is intended to be consistent with Cloud SQL.'
          type: string
        network:
          description: "Optional. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: `projects/{project_number}/global/networks/{network_id}`. This is required to create a cluster."
          type: string
      type: object
    Node:
      description: Details of a single node in the instance. Nodes in an AlloyDB instance are ephemereal, they can change during update, failover, autohealing and resize operations.
      properties:
        id:
          description: The identifier of the VM e.g. "test-read-0601-407e52be-ms3l".
          type: string
        ip:
          description: The private IP address of the VM e.g. "10.57.0.34".
          type: string
        state:
          description: "Determined by state of the compute VM and postgres-service health. Compute VM state can have values listed in https://cloud.google.com/compute/docs/instances/instance-life-cycle and postgres-service health can have values: HEALTHY and UNHEALTHY."
          type: string
        zoneId:
          description: The Compute Engine zone of the VM e.g. "us-central1-b".
          type: string
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    OperationMetadata:
      description: Represents the metadata of the long-running operation.
      properties:
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        requestedCancellation:
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
      type: object
    PrimaryConfig:
      description: Configuration for the primary cluster. It has the list of clusters that are replicating from this cluster. This should be set if and only if the cluster is of type PRIMARY.
      properties:
        secondaryClusterNames:
          description: Output only. Names of the clusters that are replicating from this cluster.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    PromoteClusterRequest:
      description: Message for promoting a Cluster
      properties:
        etag:
          description: Optional. The current etag of the Cluster. If an etag is provided and does not match the current etag of the Cluster, deletion will be blocked and an ABORTED error will be returned.
          type: string
        requestId:
          description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
        validateOnly:
          description: Optional. If set, performs request validation (e.g. permission checks and any other type of validation), but do not actually execute the delete.
          type: boolean
      type: object
    QuantityBasedExpiry:
      description: "A backup's position in a quantity-based retention queue, of backups with the same source cluster and type, with length, retention, specified by the backup's retention policy. Once the position is greater than the retention, the backup is eligible to be garbage collected. Example: 5 backups from the same source cluster and type with a quantity-based retention of 3 and denoted by backup_id (position, retention). Safe: backup_5 (1, 3), backup_4, (2, 3), backup_3 (3, 3). Awaiting garbage collection: backup_2 (4, 3), backup_1 (5, 3)"
      properties:
        retentionCount:
          description: Output only. The backup's position among its backups with the same source cluster and type, by descending chronological order create time(i.e. newest first).
          format: int32
          readOnly: true
          type: integer
        totalRetentionCount:
          description: Output only. The length of the quantity-based queue, specified by the backup's retention policy.
          format: int32
          readOnly: true
          type: integer
      type: object
    QuantityBasedRetention:
      description: A quantity based policy specifies that a certain number of the most recent successful backups should be retained.
      properties:
        count:
          description: The number of backups to retain.
          format: int32
          type: integer
      type: object
    QueryInsightsInstanceConfig:
      description: QueryInsights Instance specific configuration.
      properties:
        queryPlansPerMinute:
          description: Number of query execution plans captured by Insights per minute for all queries combined. The default value is 5. Any integer between 0 and 20 is considered valid.
          format: uint32
          type: integer
        queryStringLength:
          description: Query string length. The default value is 1024. Any integer between 256 and 4500 is considered valid.
          format: uint32
          type: integer
        recordApplicationTags:
          description: Record application tags for an instance. This flag is turned "on" by default.
          type: boolean
        recordClientAddress:
          description: Record client address for an instance. Client address is PII information. This flag is turned "on" by default.
          type: boolean
      type: object
    ReadPoolConfig:
      description: Configuration for a read pool instance.
      properties:
        nodeCount:
          description: Read capacity, i.e. number of nodes in a read pool instance.
          format: int32
          type: integer
      type: object
    RestartInstanceRequest:
      properties:
        requestId:
          description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
        validateOnly:
          description: Optional. If set, performs request validation (e.g. permission checks and any other type of validation), but do not actually execute the restart.
          type: boolean
      type: object
    RestoreClusterRequest:
      description: Message for restoring a Cluster from a backup or another cluster at a given point in time.
      properties:
        backupSource:
          $ref: "#/components/schemas/BackupSource"
          description: Backup source.
        cluster:
          $ref: "#/components/schemas/Cluster"
          description: Required. The resource being created
        clusterId:
          description: Required. ID of the requesting object.
          type: string
        continuousBackupSource:
          $ref: "#/components/schemas/ContinuousBackupSource"
          description: ContinuousBackup source. Continuous backup needs to be enabled in the source cluster for this operation to succeed.
        requestId:
          description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
        validateOnly:
          description: Optional. If set, performs request validation (e.g. permission checks and any other type of validation), but do not actually execute the import request.
          type: boolean
      type: object
    SecondaryConfig:
      description: Configuration information for the secondary cluster. This should be set if and only if the cluster is of type SECONDARY.
      properties:
        primaryClusterName:
          description: "The name of the primary cluster name with the format: * projects/{project}/locations/{region}/clusters/{cluster_id}"
          type: string
      type: object
    SslConfig:
      description: SSL configuration.
      properties:
        caSource:
          description: Optional. Certificate Authority (CA) source. Only CA_SOURCE_MANAGED is supported currently, and is the default value.
          enum:
            - CA_SOURCE_UNSPECIFIED
            - CA_SOURCE_MANAGED
          type: string
        sslMode:
          description: Optional. SSL mode. Specifies client-server SSL/TLS connection behavior.
          enum:
            - SSL_MODE_UNSPECIFIED
            - SSL_MODE_ALLOW
            - SSL_MODE_REQUIRE
            - SSL_MODE_VERIFY_CA
            - ALLOW_UNENCRYPTED_AND_ENCRYPTED
            - ENCRYPTED_ONLY
          type: string
          x-enumDeprecated:
            - false
            - true
            - true
            - true
            - false
            - false
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration:
      description: Configuration for availability of database instance
      properties:
        availabilityType:
          description: "Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data accessibility. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available)."
          enum:
            - AVAILABILITY_TYPE_UNSPECIFIED
            - ZONAL
            - REGIONAL
            - MULTI_REGIONAL
            - AVAILABILITY_TYPE_OTHER
          type: string
        externalReplicaConfigured:
          type: boolean
        promotableReplicaConfigured:
          type: boolean
      type: object
    StorageDatabasecenterPartnerapiV1mainBackupConfiguration:
      description: Configuration for automatic backups
      properties:
        automatedBackupEnabled:
          description: Whether customer visible automated backups are enabled on the instance.
          type: boolean
        backupRetentionSettings:
          $ref: "#/components/schemas/StorageDatabasecenterPartnerapiV1mainRetentionSettings"
          description: Backup retention settings.
        pointInTimeRecoveryEnabled:
          description: Whether point-in-time recovery is enabled. This is optional field, if the database service does not have this feature or metadata is not available in control plane, this can be omitted.
          type: boolean
      type: object
    StorageDatabasecenterPartnerapiV1mainBackupRun:
      description: A backup run.
      properties:
        endTime:
          description: The time the backup operation completed. REQUIRED
          format: google-datetime
          type: string
        error:
          $ref: "#/components/schemas/StorageDatabasecenterPartnerapiV1mainOperationError"
          description: Information about why the backup operation failed. This is only present if the run has the FAILED status. OPTIONAL
        startTime:
          description: The time the backup operation started. REQUIRED
          format: google-datetime
          type: string
        status:
          description: The status of this run. REQUIRED
          enum:
            - STATUS_UNSPECIFIED
            - SUCCESSFUL
            - FAILED
          type: string
      type: object
    StorageDatabasecenterPartnerapiV1mainCompliance:
      description: Contains compliance information about a security standard indicating unmet recommendations.
      properties:
        standard:
          description: Industry-wide compliance standards or benchmarks, such as CIS, PCI, and OWASP.
          type: string
        version:
          description: Version of the standard or benchmark, for example, 1.1
          type: string
      type: object
    StorageDatabasecenterPartnerapiV1mainCustomMetadataData:
      description: Any custom metadata associated with the resource. i.e. A spanner instance can have multiple databases with its own unique metadata. Information for these individual databases can be captured in custom metadata data
      properties:
        databaseMetadata:
          items:
            $ref: "#/components/schemas/StorageDatabasecenterPartnerapiV1mainDatabaseMetadata"
          type: array
      type: object
    StorageDatabasecenterPartnerapiV1mainDatabaseMetadata:
      description: Metadata for individual databases created in an instance. i.e. spanner instance can have multiple databases with unique configuration settings.
      properties:
        backupConfiguration:
          $ref: "#/components/schemas/StorageDatabasecenterPartnerapiV1mainBackupConfiguration"
          description: Backup configuration for this database
        backupRun:
          $ref: "#/components/schemas/StorageDatabasecenterPartnerapiV1mainBackupRun"
          description: Information about the last backup attempt for this database
        product:
          $ref: "#/components/schemas/StorageDatabasecenterProtoCommonProduct"
        resourceId:
          $ref: "#/components/schemas/StorageDatabasecenterPartnerapiV1mainDatabaseResourceId"
        resourceName:
          description: Required. Database name. Resource name to follow CAIS resource_name format as noted here go/condor-common-datamodel
          type: string
      type: object
    StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed:
      description: DatabaseResourceFeed is the top level proto to be used to ingest different database resource level events into Condor platform.
      properties:
        feedTimestamp:
          description: Required. Timestamp when feed is generated.
          format: google-datetime
          type: string
        feedType:
          description: Required. Type feed to be ingested into condor
          enum:
            - FEEDTYPE_UNSPECIFIED
            - RESOURCE_METADATA
            - OBSERVABILITY_DATA
            - SECURITY_FINDING_DATA
            - RECOMMENDATION_SIGNAL_DATA
          type: string
        recommendationSignalData:
          $ref: "#/components/schemas/StorageDatabasecenterPartnerapiV1mainDatabaseResourceRecommendationSignalData"
          description: More feed data would be added in subsequent CLs
        resourceHealthSignalData:
          $ref: "#/components/schemas/StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData"
        resourceId:
          $ref: "#/components/schemas/StorageDatabasecenterPartnerapiV1mainDatabaseResourceId"
          deprecated: true
          description: Primary key associated with the Resource. resource_id is available in individual feed level as well.
        resourceMetadata:
          $ref: "#/components/schemas/StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata"
      type: object
    StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData:
      description: Common model for database resource health signal data.
      properties:
        additionalMetadata:
          additionalProperties:
            description: Properties of the object.
          description: Any other additional metadata
          type: object
        compliance:
          description: Industry standards associated with this signal; if this signal is an issue, that could be a violation of the associated industry standard(s). For example, AUTO_BACKUP_DISABLED signal is associated with CIS GCP 1.1, CIS GCP 1.2, CIS GCP 1.3, NIST 800-53 and ISO-27001 compliance standards. If a database resource does not have automated backup enable, it will violate these following industry standards.
          items:
            $ref: "#/components/schemas/StorageDatabasecenterPartnerapiV1mainCompliance"
          type: array
        description:
          description: Description associated with signal
          type: string
        eventTime:
          description: Required. The last time at which the event described by this signal took place
          format: google-datetime
          type: string
        externalUri:
          description: The external-uri of the signal, using which more information about this signal can be obtained. In GCP, this will take user to SCC page to get more details about signals.
          type: string
        name:
          description: "Required. The name of the signal, ex: PUBLIC_SQL_INSTANCE, SQL_LOG_ERROR_VERBOSITY etc."
          type: string
        provider:
          description: "Cloud provider name. Ex: GCP/AWS/Azure/OnPrem/SelfManaged"
          enum:
            - PROVIDER_UNSPECIFIED
            - GCP
            - AWS
            - AZURE
            - ONPREM
            - SELFMANAGED
            - PROVIDER_OTHER
          type: string
        resourceContainer:
          description: Closest parent container of this resource. In GCP, 'container' refers to a Cloud Resource Manager project. It must be resource name of a Cloud Resource Manager project with the format of "provider//", such as "projects/123". For GCP provided resources, number should be project number.
          type: string
        resourceName:
          description: Required. Database resource name associated with the signal. Resource name to follow CAIS resource_name format as noted here go/condor-common-datamodel
          type: string
        signalClass:
          description: Required. The class of the signal, such as if it's a THREAT or VULNERABILITY.
          enum:
            - CLASS_UNSPECIFIED
            - THREAT
            - VULNERABILITY
            - MISCONFIGURATION
            - OBSERVATION
            - ERROR
          type: string
        signalId:
          description: Required. Unique identifier for the signal. This is an unique id which would be mainatined by partner to identify a signal.
          type: string
        signalType:
          description: Required. Type of signal, for example, `AVAILABLE_IN_MULTIPLE_ZONES`, `LOGGING_MOST_ERRORS`, etc.
          enum:
            - SIGNAL_TYPE_UNSPECIFIED
            - SIGNAL_TYPE_NOT_PROTECTED_BY_AUTOMATIC_FAILOVER
            - SIGNAL_TYPE_GROUP_NOT_REPLICATING_ACROSS_REGIONS
            - SIGNAL_TYPE_NOT_AVAILABLE_IN_MULTIPLE_ZONES
            - SIGNAL_TYPE_NOT_AVAILABLE_IN_MULTIPLE_REGIONS
            - SIGNAL_TYPE_NO_PROMOTABLE_REPLICA
            - SIGNAL_TYPE_NO_AUTOMATED_BACKUP_POLICY
            - SIGNAL_TYPE_SHORT_BACKUP_RETENTION
            - SIGNAL_TYPE_LAST_BACKUP_FAILED
            - SIGNAL_TYPE_LAST_BACKUP_OLD
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_2_0
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_3
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_2
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_1
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_0
            - SIGNAL_TYPE_VIOLATES_NIST_800_53
            - SIGNAL_TYPE_VIOLATES_ISO_27001
            - SIGNAL_TYPE_VIOLATES_PCI_DSS_V3_2_1
            - SIGNAL_TYPE_LOGS_NOT_OPTIMIZED_FOR_TROUBLESHOOTING
            - SIGNAL_TYPE_QUERY_DURATIONS_NOT_LOGGED
            - SIGNAL_TYPE_VERBOSE_ERROR_LOGGING
            - SIGNAL_TYPE_QUERY_LOCK_WAITS_NOT_LOGGED
            - SIGNAL_TYPE_LOGGING_MOST_ERRORS
            - SIGNAL_TYPE_LOGGING_ONLY_CRITICAL_ERRORS
            - SIGNAL_TYPE_MINIMAL_ERROR_LOGGING
            - SIGNAL_TYPE_QUERY_STATISTICS_LOGGED
            - SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_CLIENT_HOSTNAME
            - SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_PARSER_STATISTICS
            - SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_PLANNER_STATISTICS
            - SIGNAL_TYPE_NOT_LOGGING_ONLY_DDL_STATEMENTS
            - SIGNAL_TYPE_LOGGING_QUERY_STATISTICS
            - SIGNAL_TYPE_NOT_LOGGING_TEMPORARY_FILES
            - SIGNAL_TYPE_CONNECTION_MAX_NOT_CONFIGURED
            - SIGNAL_TYPE_USER_OPTIONS_CONFIGURED
            - SIGNAL_TYPE_EXPOSED_TO_PUBLIC_ACCESS
            - SIGNAL_TYPE_UNENCRYPTED_CONNECTIONS
            - SIGNAL_TYPE_NO_ROOT_PASSWORD
            - SIGNAL_TYPE_WEAK_ROOT_PASSWORD
            - SIGNAL_TYPE_ENCRYPTION_KEY_NOT_CUSTOMER_MANAGED
            - SIGNAL_TYPE_SERVER_AUTHENTICATION_NOT_REQUIRED
            - SIGNAL_TYPE_EXPOSED_BY_OWNERSHIP_CHAINING
            - SIGNAL_TYPE_EXPOSED_TO_EXTERNAL_SCRIPTS
            - SIGNAL_TYPE_EXPOSED_TO_LOCAL_DATA_LOADS
            - SIGNAL_TYPE_CONNECTION_ATTEMPTS_NOT_LOGGED
            - SIGNAL_TYPE_DISCONNECTIONS_NOT_LOGGED
            - SIGNAL_TYPE_LOGGING_EXCESSIVE_STATEMENT_INFO
            - SIGNAL_TYPE_EXPOSED_TO_REMOTE_ACCESS
            - SIGNAL_TYPE_DATABASE_NAMES_EXPOSED
            - SIGNAL_TYPE_SENSITIVE_TRACE_INFO_NOT_MASKED
            - SIGNAL_TYPE_PUBLIC_IP_ENABLED
            - SIGNAL_TYPE_IDLE
            - SIGNAL_TYPE_OVERPROVISIONED
            - SIGNAL_TYPE_HIGH_NUMBER_OF_OPEN_TABLES
            - SIGNAL_TYPE_HIGH_NUMBER_OF_TABLES
            - SIGNAL_TYPE_HIGH_TRANSACTION_ID_UTILIZATION
            - SIGNAL_TYPE_UNDERPROVISIONED
            - SIGNAL_TYPE_OUT_OF_DISK
            - SIGNAL_TYPE_SERVER_CERTIFICATE_NEAR_EXPIRY
            - SIGNAL_TYPE_DATABASE_AUDITING_DISABLED
            - SIGNAL_TYPE_RESTRICT_AUTHORIZED_NETWORKS
            - SIGNAL_TYPE_VIOLATE_POLICY_RESTRICT_PUBLIC_IP
          type: string
          x-enumDeprecated:
            - false
            - false
            - false
            - true
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
        state:
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - RESOLVED
            - MUTED
          type: string
      type: object
    StorageDatabasecenterPartnerapiV1mainDatabaseResourceId:
      description: DatabaseResourceId will serve as primary key for any resource ingestion event.
      properties:
        provider:
          description: "Required. Cloud provider name. Ex: GCP/AWS/Azure/OnPrem/SelfManaged"
          enum:
            - PROVIDER_UNSPECIFIED
            - GCP
            - AWS
            - AZURE
            - ONPREM
            - SELFMANAGED
            - PROVIDER_OTHER
          type: string
        providerDescription:
          description: Optional. Needs to be used only when the provider is PROVIDER_OTHER.
          type: string
        resourceType:
          description: Required. The type of resource this ID is identifying. Ex redis.googleapis.com/Instance, redis.googleapis.com/Cluster, alloydb.googleapis.com/Cluster, alloydb.googleapis.com/Instance, spanner.googleapis.com/Instance REQUIRED Please refer go/condor-common-datamodel
          type: string
        uniqueId:
          description: Required. A service-local token that distinguishes this resource from other resources within the same service.
          type: string
      type: object
    StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata:
      description: Common model for database resource instance metadata.
      properties:
        availabilityConfiguration:
          $ref: "#/components/schemas/StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration"
          description: Availability configuration for this instance
        backupConfiguration:
          $ref: "#/components/schemas/StorageDatabasecenterPartnerapiV1mainBackupConfiguration"
          description: Backup configuration for this instance
        backupRun:
          $ref: "#/components/schemas/StorageDatabasecenterPartnerapiV1mainBackupRun"
          description: Latest backup run information for this instance
        creationTime:
          description: The creation time of the resource, i.e. the time when resource is created and recorded in partner service.
          format: google-datetime
          type: string
        currentState:
          description: Current state of the instance.
          enum:
            - STATE_UNSPECIFIED
            - HEALTHY
            - UNHEALTHY
            - SUSPENDED
            - DELETED
            - STATE_OTHER
          type: string
        customMetadata:
          $ref: "#/components/schemas/StorageDatabasecenterPartnerapiV1mainCustomMetadataData"
          description: Any custom metadata associated with the resource
        entitlements:
          description: Entitlements associated with the resource
          items:
            $ref: "#/components/schemas/StorageDatabasecenterPartnerapiV1mainEntitlement"
          type: array
        expectedState:
          description: The state that the instance is expected to be in. For example, an instance state can transition to UNHEALTHY due to wrong patch update, while the expected state will remain at the HEALTHY.
          enum:
            - STATE_UNSPECIFIED
            - HEALTHY
            - UNHEALTHY
            - SUSPENDED
            - DELETED
            - STATE_OTHER
          type: string
        id:
          $ref: "#/components/schemas/StorageDatabasecenterPartnerapiV1mainDatabaseResourceId"
          description: Required. Unique identifier for a Database resource
        instanceType:
          description: The type of the instance. Specified at creation time.
          enum:
            - INSTANCE_TYPE_UNSPECIFIED
            - SUB_RESOURCE_TYPE_UNSPECIFIED
            - PRIMARY
            - SECONDARY
            - READ_REPLICA
            - OTHER
            - SUB_RESOURCE_TYPE_PRIMARY
            - SUB_RESOURCE_TYPE_SECONDARY
            - SUB_RESOURCE_TYPE_READ_REPLICA
            - SUB_RESOURCE_TYPE_OTHER
          type: string
          x-enumDeprecated:
            - true
            - false
            - true
            - true
            - true
            - true
            - false
            - false
            - false
            - false
        location:
          description: The resource location. REQUIRED
          type: string
        primaryResourceId:
          $ref: "#/components/schemas/StorageDatabasecenterPartnerapiV1mainDatabaseResourceId"
          description: Identifier for this resource's immediate parent/primary resource if the current resource is a replica or derived form of another Database resource. Else it would be NULL. REQUIRED if the immediate parent exists when first time resource is getting ingested
        product:
          $ref: "#/components/schemas/StorageDatabasecenterProtoCommonProduct"
          description: The product this resource represents.
        resourceContainer:
          description: Closest parent Cloud Resource Manager container of this resource. It must be resource name of a Cloud Resource Manager project with the format of "/", such as "projects/123". For GCP provided resources, number should be project number.
          type: string
        resourceName:
          description: Required. Different from DatabaseResourceId.unique_id, a resource name can be reused over time. That is, after a resource named "ABC" is deleted, the name "ABC" can be used to to create a new resource within the same source. Resource name to follow CAIS resource_name format as noted here go/condor-common-datamodel
          type: string
        updationTime:
          description: The time at which the resource was updated and recorded at partner service.
          format: google-datetime
          type: string
        userLabels:
          additionalProperties:
            type: string
          description: User-provided labels, represented as a dictionary where each label is a single key value pair.
          type: object
      type: object
    StorageDatabasecenterPartnerapiV1mainDatabaseResourceRecommendationSignalData:
      description: Common model for database resource recommendation signal data.
      properties:
        additionalMetadata:
          additionalProperties:
            description: Properties of the object.
          description: Optional. Any other additional metadata specific to recommendation
          type: object
        lastRefreshTime:
          description: Required. last time recommendationw as refreshed
          format: google-datetime
          type: string
        recommendationState:
          description: Required. Recommendation state
          enum:
            - UNSPECIFIED
            - ACTIVE
            - CLAIMED
            - SUCCEEDED
            - FAILED
            - DISMISSED
          type: string
        recommender:
          description: "Required. Name of recommendation. Examples: organizations/1234/locations/us-central1/recommenders/google.cloudsql.instance.PerformanceRecommender/recommendations/9876"
          type: string
        recommenderId:
          description: 'Required. ID of recommender. Examples: "google.cloudsql.instance.PerformanceRecommender"'
          type: string
        recommenderSubtype:
          description: 'Required. Contains an identifier for a subtype of recommendations produced for the same recommender. Subtype is a function of content and impact, meaning a new subtype might be added when significant changes to `content` or `primary_impact.category` are introduced. See the Recommenders section to see a list of subtypes for a given Recommender. Examples: For recommender = "google.cloudsql.instance.PerformanceRecommender", recommender_subtype can be "MYSQL_HIGH_NUMBER_OF_OPEN_TABLES_BEST_PRACTICE"/"POSTGRES_HIGH_TRANSACTION_ID_UTILIZATION_BEST_PRACTICE"'
          type: string
        resourceName:
          description: Required. Database resource name associated with the signal. Resource name to follow CAIS resource_name format as noted here go/condor-common-datamodel
          type: string
        signalType:
          description: Required. Type of signal, for example, `SIGNAL_TYPE_IDLE`, `SIGNAL_TYPE_HIGH_NUMBER_OF_TABLES`, etc.
          enum:
            - SIGNAL_TYPE_UNSPECIFIED
            - SIGNAL_TYPE_NOT_PROTECTED_BY_AUTOMATIC_FAILOVER
            - SIGNAL_TYPE_GROUP_NOT_REPLICATING_ACROSS_REGIONS
            - SIGNAL_TYPE_NOT_AVAILABLE_IN_MULTIPLE_ZONES
            - SIGNAL_TYPE_NOT_AVAILABLE_IN_MULTIPLE_REGIONS
            - SIGNAL_TYPE_NO_PROMOTABLE_REPLICA
            - SIGNAL_TYPE_NO_AUTOMATED_BACKUP_POLICY
            - SIGNAL_TYPE_SHORT_BACKUP_RETENTION
            - SIGNAL_TYPE_LAST_BACKUP_FAILED
            - SIGNAL_TYPE_LAST_BACKUP_OLD
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_2_0
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_3
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_2
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_1
            - SIGNAL_TYPE_VIOLATES_CIS_GCP_FOUNDATION_1_0
            - SIGNAL_TYPE_VIOLATES_NIST_800_53
            - SIGNAL_TYPE_VIOLATES_ISO_27001
            - SIGNAL_TYPE_VIOLATES_PCI_DSS_V3_2_1
            - SIGNAL_TYPE_LOGS_NOT_OPTIMIZED_FOR_TROUBLESHOOTING
            - SIGNAL_TYPE_QUERY_DURATIONS_NOT_LOGGED
            - SIGNAL_TYPE_VERBOSE_ERROR_LOGGING
            - SIGNAL_TYPE_QUERY_LOCK_WAITS_NOT_LOGGED
            - SIGNAL_TYPE_LOGGING_MOST_ERRORS
            - SIGNAL_TYPE_LOGGING_ONLY_CRITICAL_ERRORS
            - SIGNAL_TYPE_MINIMAL_ERROR_LOGGING
            - SIGNAL_TYPE_QUERY_STATISTICS_LOGGED
            - SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_CLIENT_HOSTNAME
            - SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_PARSER_STATISTICS
            - SIGNAL_TYPE_EXCESSIVE_LOGGING_OF_PLANNER_STATISTICS
            - SIGNAL_TYPE_NOT_LOGGING_ONLY_DDL_STATEMENTS
            - SIGNAL_TYPE_LOGGING_QUERY_STATISTICS
            - SIGNAL_TYPE_NOT_LOGGING_TEMPORARY_FILES
            - SIGNAL_TYPE_CONNECTION_MAX_NOT_CONFIGURED
            - SIGNAL_TYPE_USER_OPTIONS_CONFIGURED
            - SIGNAL_TYPE_EXPOSED_TO_PUBLIC_ACCESS
            - SIGNAL_TYPE_UNENCRYPTED_CONNECTIONS
            - SIGNAL_TYPE_NO_ROOT_PASSWORD
            - SIGNAL_TYPE_WEAK_ROOT_PASSWORD
            - SIGNAL_TYPE_ENCRYPTION_KEY_NOT_CUSTOMER_MANAGED
            - SIGNAL_TYPE_SERVER_AUTHENTICATION_NOT_REQUIRED
            - SIGNAL_TYPE_EXPOSED_BY_OWNERSHIP_CHAINING
            - SIGNAL_TYPE_EXPOSED_TO_EXTERNAL_SCRIPTS
            - SIGNAL_TYPE_EXPOSED_TO_LOCAL_DATA_LOADS
            - SIGNAL_TYPE_CONNECTION_ATTEMPTS_NOT_LOGGED
            - SIGNAL_TYPE_DISCONNECTIONS_NOT_LOGGED
            - SIGNAL_TYPE_LOGGING_EXCESSIVE_STATEMENT_INFO
            - SIGNAL_TYPE_EXPOSED_TO_REMOTE_ACCESS
            - SIGNAL_TYPE_DATABASE_NAMES_EXPOSED
            - SIGNAL_TYPE_SENSITIVE_TRACE_INFO_NOT_MASKED
            - SIGNAL_TYPE_PUBLIC_IP_ENABLED
            - SIGNAL_TYPE_IDLE
            - SIGNAL_TYPE_OVERPROVISIONED
            - SIGNAL_TYPE_HIGH_NUMBER_OF_OPEN_TABLES
            - SIGNAL_TYPE_HIGH_NUMBER_OF_TABLES
            - SIGNAL_TYPE_HIGH_TRANSACTION_ID_UTILIZATION
            - SIGNAL_TYPE_UNDERPROVISIONED
            - SIGNAL_TYPE_OUT_OF_DISK
            - SIGNAL_TYPE_SERVER_CERTIFICATE_NEAR_EXPIRY
            - SIGNAL_TYPE_DATABASE_AUDITING_DISABLED
            - SIGNAL_TYPE_RESTRICT_AUTHORIZED_NETWORKS
            - SIGNAL_TYPE_VIOLATE_POLICY_RESTRICT_PUBLIC_IP
          type: string
          x-enumDeprecated:
            - false
            - false
            - false
            - true
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
      type: object
    StorageDatabasecenterPartnerapiV1mainEntitlement:
      description: "Proto representing the access that a user has to a specific feature/service. NextId: 3."
      properties:
        entitlementState:
          description: The current state of user's accessibility to a feature/benefit.
          enum:
            - ENTITLEMENT_STATE_UNSPECIFIED
            - ENTITLED
            - REVOKED
          type: string
        type:
          description: An enum that represents the type of this entitlement.
          enum:
            - ENTITLEMENT_TYPE_UNSPECIFIED
            - DUET_AI
          type: string
      type: object
    StorageDatabasecenterPartnerapiV1mainOperationError:
      description: An error that occurred during a backup creation operation.
      properties:
        code:
          description: Identifies the specific error that occurred. REQUIRED
          type: string
        errorType:
          enum:
            - OPERATION_ERROR_TYPE_UNSPECIFIED
            - KMS_KEY_ERROR
            - DATABASE_ERROR
            - STOCKOUT_ERROR
            - CANCELLATION_ERROR
            - SQLSERVER_ERROR
            - INTERNAL_ERROR
          type: string
        message:
          description: Additional information about the error encountered. REQUIRED
          type: string
      type: object
    StorageDatabasecenterPartnerapiV1mainRetentionSettings:
      properties:
        quantityBasedRetention:
          format: int32
          type: integer
        retentionUnit:
          description: The unit that 'retained_backups' represents.
          enum:
            - RETENTION_UNIT_UNSPECIFIED
            - COUNT
            - TIME
            - RETENTION_UNIT_OTHER
          type: string
        timeBasedRetention:
          format: google-duration
          type: string
      type: object
    StorageDatabasecenterProtoCommonProduct:
      description: Product specification for Condor resources.
      properties:
        engine:
          description: The specific engine that the underlying database is running.
          enum:
            - ENGINE_UNSPECIFIED
            - ENGINE_MYSQL
            - MYSQL
            - ENGINE_POSTGRES
            - POSTGRES
            - ENGINE_SQL_SERVER
            - SQL_SERVER
            - ENGINE_NATIVE
            - NATIVE
            - ENGINE_CLOUD_SPANNER_WITH_POSTGRES_DIALECT
            - ENGINE_CLOUD_SPANNER_WITH_GOOGLESQL_DIALECT
            - ENGINE_MEMORYSTORE_FOR_REDIS
            - ENGINE_MEMORYSTORE_FOR_REDIS_CLUSTER
            - ENGINE_OTHER
          type: string
          x-enumDeprecated:
            - false
            - false
            - true
            - false
            - true
            - false
            - true
            - false
            - true
            - false
            - false
            - false
            - false
            - false
        type:
          description: Type of specific database product. It could be CloudSQL, AlloyDB etc..
          enum:
            - PRODUCT_TYPE_UNSPECIFIED
            - PRODUCT_TYPE_CLOUD_SQL
            - CLOUD_SQL
            - PRODUCT_TYPE_ALLOYDB
            - ALLOYDB
            - PRODUCT_TYPE_SPANNER
            - PRODUCT_TYPE_ON_PREM
            - ON_PREM
            - PRODUCT_TYPE_MEMORYSTORE
            - PRODUCT_TYPE_OTHER
          type: string
          x-enumDeprecated:
            - false
            - false
            - true
            - false
            - true
            - false
            - false
            - true
            - false
            - false
        version:
          description: 'Version of the underlying database engine. Example values: For MySQL, it could be "8.0", "5.7" etc.. For Postgres, it could be "14", "15" etc..'
          type: string
      type: object
    StringRestrictions:
      description: Restrictions on STRING type values
      properties:
        allowedValues:
          description: The list of allowed values, if bounded. This field will be empty if there is a unbounded number of allowed values.
          items:
            type: string
          type: array
      type: object
    SupportedDatabaseFlag:
      description: SupportedDatabaseFlag gives general information about a database flag, like type and allowed values. This is a static value that is defined on the server side, and it cannot be modified by callers. To set the Database flags on a particular Instance, a caller should modify the Instance.database_flags field.
      properties:
        acceptsMultipleValues:
          description: Whether the database flag accepts multiple values. If true, a comma-separated list of stringified values may be specified.
          type: boolean
        flagName:
          description: The name of the database flag, e.g. "max_allowed_packets". The is a possibly key for the Instance.database_flags map field.
          type: string
        integerRestrictions:
          $ref: "#/components/schemas/IntegerRestrictions"
          description: Restriction on INTEGER type value.
        name:
          description: "The name of the flag resource, following Google Cloud conventions, e.g.: * projects/{project}/locations/{location}/flags/{flag} This field currently has no semantic meaning."
          type: string
        requiresDbRestart:
          description: Whether setting or updating this flag on an Instance requires a database restart. If a flag that requires database restart is set, the backend will automatically restart the database (making sure to satisfy any availability SLO's).
          type: boolean
        stringRestrictions:
          $ref: "#/components/schemas/StringRestrictions"
          description: Restriction on STRING type value.
        supportedDbVersions:
          description: Major database engine versions for which this flag is supported.
          items:
            enum:
              - DATABASE_VERSION_UNSPECIFIED
              - POSTGRES_13
              - POSTGRES_14
              - POSTGRES_15
            type: string
            x-enumDeprecated:
              - false
              - true
              - false
              - false
          type: array
        valueType:
          enum:
            - VALUE_TYPE_UNSPECIFIED
            - STRING
            - INTEGER
            - FLOAT
            - NONE
          type: string
      type: object
    TimeBasedRetention:
      description: A time based retention policy specifies that all backups within a certain time period should be retained.
      properties:
        retentionPeriod:
          description: The retention period.
          format: google-duration
          type: string
      type: object
    User:
      description: Message describing User object.
      properties:
        databaseRoles:
          description: Optional. List of database roles this user has. The database role strings are subject to the PostgreSQL naming conventions.
          items:
            type: string
          type: array
        name:
          description: Output only. Name of the resource in the form of projects/{project}/locations/{location}/cluster/{cluster}/users/{user}.
          readOnly: true
          type: string
        password:
          description: Input only. Password for the user.
          type: string
        userType:
          description: Optional. Type of this user.
          enum:
            - USER_TYPE_UNSPECIFIED
            - ALLOYDB_BUILT_IN
            - ALLOYDB_IAM_USER
          type: string
      type: object
    UserPassword:
      description: The username/password for a database user. Used for specifying initial users at cluster creation time.
      properties:
        password:
          description: The initial password for the user.
          type: string
        user:
          description: The database username.
          type: string
      type: object
    WeeklySchedule:
      description: A weekly schedule starts a backup at prescribed start times within a day, for the specified days of the week. The weekly schedule message is flexible and can be used to create many types of schedules. For example, to have a daily backup that starts at 22:00, configure the `start_times` field to have one element "22:00" and the `days_of_week` field to have all seven days of the week.
      properties:
        daysOfWeek:
          description: The days of the week to perform a backup. If this field is left empty, the default of every day of the week is used.
          items:
            enum:
              - DAY_OF_WEEK_UNSPECIFIED
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
            type: string
          type: array
        startTimes:
          description: The times during the day to start a backup. The start times are assumed to be in UTC and to be an exact hour (e.g., 04:00:00). If no start times are provided, a single fixed start time is chosen arbitrarily.
          items:
            $ref: "#/components/schemas/GoogleTypeTimeOfDay"
          type: array
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
