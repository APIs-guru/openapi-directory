# coding: utf-8

"""
    AlloyDB API

    AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_backups_response import ListBackupsResponse

class TestListBackupsResponse(unittest.TestCase):
    """ListBackupsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListBackupsResponse:
        """Test ListBackupsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListBackupsResponse`
        """
        model = ListBackupsResponse()
        if include_optional:
            return ListBackupsResponse(
                backups = [
                    openapi_client.models.backup.Backup(
                        annotations = {
                            'key' : ''
                            }, 
                        cluster_name = '', 
                        cluster_uid = '', 
                        create_time = '', 
                        database_version = 'DATABASE_VERSION_UNSPECIFIED', 
                        delete_time = '', 
                        description = '', 
                        display_name = '', 
                        encryption_config = openapi_client.models.encryption_config.EncryptionConfig(
                            kms_key_name = '', ), 
                        encryption_info = openapi_client.models.encryption_info.EncryptionInfo(
                            encryption_type = 'TYPE_UNSPECIFIED', 
                            kms_key_versions = [
                                ''
                                ], ), 
                        etag = '', 
                        expiry_quantity = openapi_client.models.quantity_based_expiry.QuantityBasedExpiry(
                            retention_count = 56, 
                            total_retention_count = 56, ), 
                        expiry_time = '', 
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        reconciling = True, 
                        satisfies_pzi = True, 
                        satisfies_pzs = True, 
                        size_bytes = '', 
                        state = 'STATE_UNSPECIFIED', 
                        type = 'TYPE_UNSPECIFIED', 
                        uid = '', 
                        update_time = '', )
                    ],
                next_page_token = '',
                unreachable = [
                    ''
                    ]
            )
        else:
            return ListBackupsResponse(
        )
        """

    def testListBackupsResponse(self):
        """Test ListBackupsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
