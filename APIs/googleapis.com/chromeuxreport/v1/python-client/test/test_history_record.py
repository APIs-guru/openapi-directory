# coding: utf-8

"""
    Chrome UX Report API

    The Chrome UX Report API lets you view real user experience data for millions of websites. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.history_record import HistoryRecord

class TestHistoryRecord(unittest.TestCase):
    """HistoryRecord unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HistoryRecord:
        """Test HistoryRecord
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HistoryRecord`
        """
        model = HistoryRecord()
        if include_optional:
            return HistoryRecord(
                collection_periods = [
                    openapi_client.models.collection_period.CollectionPeriod(
                        first_date = openapi_client.models.date.Date(
                            day = 56, 
                            month = 56, 
                            year = 56, ), 
                        last_date = openapi_client.models.date.Date(
                            day = 56, 
                            month = 56, 
                            year = 56, ), )
                    ],
                key = openapi_client.models.history_key.HistoryKey(
                    form_factor = 'ALL_FORM_FACTORS', 
                    origin = '', 
                    url = '', ),
                metrics = {
                    'key' : openapi_client.models.metric_timeseries.MetricTimeseries(
                        fraction_timeseries = {
                            'key' : openapi_client.models.fraction_timeseries.FractionTimeseries(
                                fractions = [
                                    1.337
                                    ], )
                            }, 
                        histogram_timeseries = [
                            openapi_client.models.timeseries_bin.TimeseriesBin(
                                densities = [
                                    1.337
                                    ], 
                                end = null, 
                                start = null, )
                            ], 
                        percentiles_timeseries = openapi_client.models.timeseries_percentiles.TimeseriesPercentiles(
                            p75s = [
                                null
                                ], ), )
                    }
            )
        else:
            return HistoryRecord(
        )
        """

    def testHistoryRecord(self):
        """Test HistoryRecord"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
