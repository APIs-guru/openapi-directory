# coding: utf-8

"""
    Chrome UX Report API

    The Chrome UX Report API lets you view real user experience data for millions of websites. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.query_response import QueryResponse

class TestQueryResponse(unittest.TestCase):
    """QueryResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> QueryResponse:
        """Test QueryResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `QueryResponse`
        """
        model = QueryResponse()
        if include_optional:
            return QueryResponse(
                record = openapi_client.models.record.Record(
                    collection_period = openapi_client.models.collection_period.CollectionPeriod(
                        first_date = openapi_client.models.date.Date(
                            day = 56, 
                            month = 56, 
                            year = 56, ), 
                        last_date = openapi_client.models.date.Date(
                            day = 56, 
                            month = 56, 
                            year = 56, ), ), 
                    key = openapi_client.models.key.Key(
                        effective_connection_type = '', 
                        form_factor = 'ALL_FORM_FACTORS', 
                        origin = '', 
                        url = '', ), 
                    metrics = {
                        'key' : openapi_client.models.metric.Metric(
                            fractions = {
                                'key' : 1.337
                                }, 
                            histogram = [
                                openapi_client.models.bin.Bin(
                                    density = 1.337, 
                                    end = null, 
                                    start = null, )
                                ], 
                            percentiles = openapi_client.models.percentiles.Percentiles(
                                p75 = null, ), )
                        }, ),
                url_normalization_details = openapi_client.models.url_normalization.UrlNormalization(
                    normalized_url = '', 
                    original_url = '', )
            )
        else:
            return QueryResponse(
        )
        """

    def testQueryResponse(self):
        """Test QueryResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
