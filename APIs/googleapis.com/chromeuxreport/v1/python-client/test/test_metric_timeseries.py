# coding: utf-8

"""
    Chrome UX Report API

    The Chrome UX Report API lets you view real user experience data for millions of websites. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.metric_timeseries import MetricTimeseries

class TestMetricTimeseries(unittest.TestCase):
    """MetricTimeseries unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MetricTimeseries:
        """Test MetricTimeseries
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MetricTimeseries`
        """
        model = MetricTimeseries()
        if include_optional:
            return MetricTimeseries(
                fraction_timeseries = {
                    'key' : openapi_client.models.fraction_timeseries.FractionTimeseries(
                        fractions = [
                            1.337
                            ], )
                    },
                histogram_timeseries = [
                    openapi_client.models.timeseries_bin.TimeseriesBin(
                        densities = [
                            1.337
                            ], 
                        end = null, 
                        start = null, )
                    ],
                percentiles_timeseries = openapi_client.models.timeseries_percentiles.TimeseriesPercentiles(
                    p75s = [
                        null
                        ], )
            )
        else:
            return MetricTimeseries(
        )
        """

    def testMetricTimeseries(self):
        """Test MetricTimeseries"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
