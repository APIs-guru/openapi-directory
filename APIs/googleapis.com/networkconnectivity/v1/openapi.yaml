openapi: 3.0.0
servers:
  - url: https://networkconnectivity.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: This API enables connectivity with and between Google Cloud resources.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Network Connectivity API
  version: v1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://networkconnectivity.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: networkconnectivity
externalDocs:
  url: https://cloud.google.com/network-connectivity/docs/reference/networkconnectivity/rest
tags:
  - name: projects
paths:
  /v1/{name}:
    delete:
      description: Deletes a Network Connectivity Center spoke.
      operationId: networkconnectivity.projects.locations.spokes.delete
      parameters:
        - description: Required. The name of the spoke to delete.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets details about a Network Connectivity Center spoke.
      operationId: networkconnectivity.projects.locations.spokes.get
      parameters:
        - description: Required. The name of the spoke resource.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Spoke"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates the parameters of a Network Connectivity Center spoke.
      operationId: networkconnectivity.projects.locations.spokes.patch
      parameters:
        - description: "Immutable. The name of the spoke. Spoke names must be unique. They use the following form: `projects/{project_number}/locations/{region}/spokes/{spoke_id}`"
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Optional. In the case of an update to an existing spoke, field mask is used to specify the fields to be overwritten. The fields specified in the update_mask are relative to the resource, not the full request. A field is overwritten if it is in the mask. If the user does not provide a mask, then all fields are overwritten.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Spoke"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: networkconnectivity.projects.locations.list
      parameters:
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results to return. If not set, the service selects a default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}/operations:
    get:
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: networkconnectivity.projects.locations.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:acceptSpoke:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Accepts a proposal to attach a Network Connectivity Center spoke to a hub.
      operationId: networkconnectivity.projects.locations.global.hubs.acceptSpoke
      parameters:
        - description: Required. The name of the hub into which to accept the spoke.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcceptHubSpokeRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: networkconnectivity.projects.locations.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleLongrunningCancelOperationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:listSpokes:
    get:
      description: Lists the Network Connectivity Center spokes associated with a specified hub and location. The list includes both spokes that are attached to the hub and spokes that have been proposed but not yet accepted.
      operationId: networkconnectivity.projects.locations.global.hubs.listSpokes
      parameters:
        - description: Required. The name of the hub.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: An expression that filters the list of results.
          in: query
          name: filter
          schema:
            type: string
        - description: Sort the results by name or create_time.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of results to return per page.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: "A list of locations. Specify one of the following: `[global]`, a single region (for example, `[us-central1]`), or a combination of values (for example, `[global, us-central1, us-west1]`). If the spoke_locations field is populated, the list of results includes only spokes in the specified location. If the spoke_locations field is not populated, the list of results includes spokes in all locations."
          explode: true
          in: query
          name: spokeLocations
          schema:
            items:
              type: string
            type: array
          style: form
        - description: The view of the spoke to return. The view that you use determines which spoke fields are included in the response.
          in: query
          name: view
          schema:
            enum:
              - SPOKE_VIEW_UNSPECIFIED
              - BASIC
              - DETAILED
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListHubSpokesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:rejectSpoke:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Rejects a Network Connectivity Center spoke from being attached to a hub. If the spoke was previously in the `ACTIVE` state, it transitions to the `INACTIVE` state and is no longer able to connect to other spokes that are attached to the hub.
      operationId: networkconnectivity.projects.locations.global.hubs.rejectSpoke
      parameters:
        - description: Required. The name of the hub from which to reject the spoke.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectHubSpokeRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/groups:
    get:
      description: Lists groups in a given hub.
      operationId: networkconnectivity.projects.locations.global.hubs.groups.list
      parameters:
        - description: Required. The parent resource's name.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: An expression that filters the list of results.
          in: query
          name: filter
          schema:
            type: string
        - description: Sort the results by a certain order.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of results to return per page.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGroupsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/hubs:
    get:
      description: Lists the Network Connectivity Center hubs associated with a given project.
      operationId: networkconnectivity.projects.locations.global.hubs.list
      parameters:
        - description: Required. The parent resource's name.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: An expression that filters the list of results.
          in: query
          name: filter
          schema:
            type: string
        - description: Sort the results by a certain order.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of results per page to return.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListHubsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new Network Connectivity Center hub in the specified project.
      operationId: networkconnectivity.projects.locations.global.hubs.create
      parameters:
        - description: Required. The parent resource.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. A unique identifier for the hub.
          in: query
          name: hubId
          schema:
            type: string
        - description: Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Hub"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/internalRanges:
    get:
      description: Lists internal ranges in a given project and location.
      operationId: networkconnectivity.projects.locations.internalRanges.list
      parameters:
        - description: Required. The parent resource's name.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: A filter expression that filters the results listed in the response.
          in: query
          name: filter
          schema:
            type: string
        - description: Sort the results by a certain order.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of results per page that should be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListInternalRangesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new internal range in a given project and location.
      operationId: networkconnectivity.projects.locations.internalRanges.create
      parameters:
        - description: Required. The parent resource's name of the internal range.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/internalRanges/foo') See https://google.aip.dev/122#resource-id-segments Unique per location.
          in: query
          name: internalRangeId
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InternalRange"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/policyBasedRoutes:
    get:
      description: Lists policy-based routes in a given project and location.
      operationId: networkconnectivity.projects.locations.global.policyBasedRoutes.list
      parameters:
        - description: Required. The parent resource's name.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: A filter expression that filters the results listed in the response.
          in: query
          name: filter
          schema:
            type: string
        - description: Sort the results by a certain order.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of results per page that should be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPolicyBasedRoutesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new policy-based route in a given project and location.
      operationId: networkconnectivity.projects.locations.global.policyBasedRoutes.create
      parameters:
        - description: Required. The parent resource's name of the PolicyBasedRoute.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. Unique id for the policy-based route to create.
          in: query
          name: policyBasedRouteId
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PolicyBasedRoute"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/routeTables:
    get:
      description: Lists route tables in a given hub.
      operationId: networkconnectivity.projects.locations.global.hubs.routeTables.list
      parameters:
        - description: Required. The parent resource's name.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: An expression that filters the list of results.
          in: query
          name: filter
          schema:
            type: string
        - description: Sort the results by a certain order.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of results to return per page.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRouteTablesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/routes:
    get:
      description: Lists routes in a given route table.
      operationId: networkconnectivity.projects.locations.global.hubs.routeTables.routes.list
      parameters:
        - description: Required. The parent resource's name.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: An expression that filters the list of results.
          in: query
          name: filter
          schema:
            type: string
        - description: Sort the results by a certain order.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of results to return per page.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRoutesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/serviceClasses:
    get:
      description: Lists ServiceClasses in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceClasses.list
      parameters:
        - description: Required. The parent resource's name. ex. projects/123/locations/us-east1
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: A filter expression that filters the results listed in the response.
          in: query
          name: filter
          schema:
            type: string
        - description: Sort the results by a certain order.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of results per page that should be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListServiceClassesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/serviceConnectionMaps:
    get:
      description: Lists ServiceConnectionMaps in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionMaps.list
      parameters:
        - description: Required. The parent resource's name. ex. projects/123/locations/us-east1
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: A filter expression that filters the results listed in the response.
          in: query
          name: filter
          schema:
            type: string
        - description: Sort the results by a certain order.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of results per page that should be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListServiceConnectionMapsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new ServiceConnectionMap in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionMaps.create
      parameters:
        - description: Required. The parent resource's name of the ServiceConnectionMap. ex. projects/123/locations/us-east1
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/serviceConnectionMaps/foo') See https://google.aip.dev/122#resource-id-segments Unique per location. If one is not provided, one will be generated.
          in: query
          name: serviceConnectionMapId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceConnectionMap"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/serviceConnectionPolicies:
    get:
      description: Lists ServiceConnectionPolicies in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionPolicies.list
      parameters:
        - description: Required. The parent resource's name. ex. projects/123/locations/us-east1
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: A filter expression that filters the results listed in the response.
          in: query
          name: filter
          schema:
            type: string
        - description: Sort the results by a certain order.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of results per page that should be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListServiceConnectionPoliciesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new ServiceConnectionPolicy in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionPolicies.create
      parameters:
        - description: Required. The parent resource's name of the ServiceConnectionPolicy. ex. projects/123/locations/us-east1
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/serviceConnectionPolicies/foo') See https://google.aip.dev/122#resource-id-segments Unique per location.
          in: query
          name: serviceConnectionPolicyId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceConnectionPolicy"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/serviceConnectionTokens:
    get:
      description: Lists ServiceConnectionTokens in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionTokens.list
      parameters:
        - description: Required. The parent resource's name. ex. projects/123/locations/us-east1
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: A filter expression that filters the results listed in the response.
          in: query
          name: filter
          schema:
            type: string
        - description: Sort the results by a certain order.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of results per page that should be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListServiceConnectionTokensResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new ServiceConnectionToken in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionTokens.create
      parameters:
        - description: Required. The parent resource's name of the ServiceConnectionToken. ex. projects/123/locations/us-east1
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/ServiceConnectionTokens/foo') See https://google.aip.dev/122#resource-id-segments Unique per location. If one is not provided, one will be generated.
          in: query
          name: serviceConnectionTokenId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceConnectionToken"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/spokes:
    get:
      description: Lists the Network Connectivity Center spokes in a specified project and location.
      operationId: networkconnectivity.projects.locations.spokes.list
      parameters:
        - description: Required. The parent resource.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: An expression that filters the list of results.
          in: query
          name: filter
          schema:
            type: string
        - description: Sort the results by a certain order.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of results to return per page.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSpokesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a Network Connectivity Center spoke.
      operationId: networkconnectivity.projects.locations.spokes.create
      parameters:
        - description: Required. The parent resource.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Required. Unique id for the spoke to create.
          in: query
          name: spokeId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Spoke"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{resource}:getIamPolicy:
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: networkconnectivity.projects.locations.spokes.getIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{resource}:setIamPolicy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: networkconnectivity.projects.locations.spokes.setIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetIamPolicyRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{resource}:testIamPermissions:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: networkconnectivity.projects.locations.spokes.testIamPermissions
      parameters:
        - description: "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestIamPermissionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AcceptHubSpokeRequest:
      description: The request for HubService.AcceptHubSpoke.
      properties:
        requestId:
          description: Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
        spokeUri:
          description: Required. The URI of the spoke to accept into the hub.
          type: string
      type: object
    AcceptHubSpokeResponse:
      description: The response for HubService.AcceptHubSpoke.
      properties:
        spoke:
          $ref: "#/components/schemas/Spoke"
          description: The spoke that was operated on.
      type: object
    AuditConfig:
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: "#/components/schemas/AuditLogConfig"
          type: array
        service:
          description: Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
          type: string
      type: object
    AuditLogConfig:
      description: "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
      properties:
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
      type: object
    Binding:
      description: Associates `members`, or principals, with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
          description: The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        members:
          description: "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`."
          items:
            type: string
          type: array
        role:
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
      type: object
    ConsumerPscConfig:
      description: Allow the producer to specify which consumers can connect to it.
      properties:
        disableGlobalAccess:
          description: This is used in PSC consumer ForwardingRule to control whether the PSC endpoint can be accessed from another region.
          type: boolean
        network:
          description: "The resource path of the consumer network where PSC connections are allowed to be created in. Note, this network does not need be in the ConsumerPscConfig.project in the case of SharedVPC. Example: projects/{projectNumOrId}/global/networks/{networkId}."
          type: string
        project:
          description: The consumer project where PSC connections are allowed to be created in.
          type: string
        state:
          description: Output only. Overall state of PSC Connections management for this consumer psc config.
          enum:
            - STATE_UNSPECIFIED
            - VALID
            - CONNECTION_POLICY_MISSING
            - POLICY_LIMIT_REACHED
          readOnly: true
          type: string
      type: object
    ConsumerPscConnection:
      description: PSC connection details on consumer side.
      properties:
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          deprecated: true
          description: The most recent error during operating this connection.
        errorInfo:
          $ref: "#/components/schemas/GoogleRpcErrorInfo"
          description: Output only. The error info for the latest error during operating this connection.
          readOnly: true
        errorType:
          description: The error type indicates whether the error is consumer facing, producer facing or system internal.
          enum:
            - CONNECTION_ERROR_TYPE_UNSPECIFIED
            - ERROR_INTERNAL
            - ERROR_CONSUMER_SIDE
            - ERROR_PRODUCER_SIDE
          type: string
        forwardingRule:
          description: "The URI of the consumer forwarding rule created. Example: projects/{projectNumOrId}/regions/us-east1/networks/{resourceId}."
          type: string
        gceOperation:
          description: The last Compute Engine operation to setup PSC connection.
          type: string
        ip:
          description: The IP literal allocated on the consumer network for the PSC forwarding rule that is created to connect to the producer service attachment in this service connection map.
          type: string
        network:
          description: The consumer network whose PSC forwarding rule is connected to the service attachments in this service connection map. Note that the network could be on a different project (shared VPC).
          type: string
        project:
          description: The consumer project whose PSC forwarding rule is connected to the service attachments in this service connection map.
          type: string
        pscConnectionId:
          description: The PSC connection id of the PSC forwarding rule connected to the service attachments in this service connection map.
          type: string
        selectedSubnetwork:
          description: Output only. The URI of the selected subnetwork selected to allocate IP address for this connection.
          readOnly: true
          type: string
        serviceAttachmentUri:
          description: The URI of a service attachment which is the target of the PSC connection.
          type: string
        state:
          description: The state of the PSC connection.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - FAILED
            - CREATING
            - DELETING
          type: string
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    Expr:
      description: "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
      properties:
        description:
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
          type: string
      type: object
    Filter:
      description: Filter matches L4 traffic.
      properties:
        destRange:
          description: Optional. The destination IP range of outgoing packets that this policy-based route applies to. Default is "0.0.0.0/0" if protocol version is IPv4.
          type: string
        ipProtocol:
          description: Optional. The IP protocol that this policy-based route applies to. Valid values are 'TCP', 'UDP', and 'ALL'. Default is 'ALL'.
          type: string
        protocolVersion:
          description: Required. Internet protocol versions this policy-based route applies to. For this version, only IPV4 is supported.
          enum:
            - PROTOCOL_VERSION_UNSPECIFIED
            - IPV4
          type: string
        srcRange:
          description: Optional. The source IP range of outgoing packets that this policy-based route applies to. Default is "0.0.0.0/0" if protocol version is IPv4.
          type: string
      type: object
    GoogleLongrunningCancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    GoogleLongrunningListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleLongrunningOperation"
          type: array
      type: object
    GoogleLongrunningOperation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    GoogleRpcErrorInfo:
      description: 'Describes the cause of the error with structured details. Example of an error when contacting the "pubsub.googleapis.com" API when it is not enabled: { "reason": "API_DISABLED" "domain": "googleapis.com" "metadata": { "resource": "projects/123", "service": "pubsub.googleapis.com" } } This response indicates that the pubsub.googleapis.com API is not enabled. Example of an error that is returned when attempting to create a Spanner instance in a region that is out of stock: { "reason": "STOCKOUT" "domain": "spanner.googleapis.com", "metadata": { "availableRegions": "us-central1,us-east2" } }'
      properties:
        domain:
          description: 'The logical grouping to which the "reason" belongs. The error domain is typically the registered service name of the tool or product that generates the error. Example: "pubsub.googleapis.com". If the error is generated by some common infrastructure, the error domain must be a globally unique value that identifies the infrastructure. For Google API infrastructure, the error domain is "googleapis.com".'
          type: string
        metadata:
          additionalProperties:
            type: string
          description: 'Additional structured details about this error. Keys should match /[a-zA-Z0-9-_]/ and be limited to 64 characters in length. When identifying the current value of an exceeded limit, the units should be contained in the key, not the value. For example, rather than {"instanceLimit": "100/request"}, should be returned as, {"instanceLimitPerRequest": "100"}, if the client exceeds the number of instances that can be created in a single (batch) request.'
          type: object
        reason:
          description: The reason of the error. This is a constant value that identifies the proximate cause of the error. Error reasons are unique within a particular domain of errors. This should be at most 63 characters and match a regular expression of `A-Z+[A-Z0-9]`, which represents UPPER_SNAKE_CASE.
          type: string
      type: object
    GoogleRpcStatus:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    Group:
      description: A group represents a subset of spokes attached to a hub.
      properties:
        createTime:
          description: Output only. The time the group was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. The description of the group.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. Labels in key-value pair format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
          type: object
        name:
          description: "Immutable. The name of the group. Group names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub}/groups/{group_id}`"
          type: string
        state:
          description: Output only. The current lifecycle state of this group.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ACCEPTING
            - REJECTING
            - UPDATING
            - INACTIVE
            - OBSOLETE
          readOnly: true
          type: string
        uid:
          description: Output only. The Google-generated UUID for the group. This value is unique across all group resources. If a group is deleted and another with the same name is created, the new route table is assigned a different unique_id.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time the group was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    Hub:
      description: A Network Connectivity Center hub is a global management resource to which you attach spokes. A single hub can contain spokes from multiple regions. However, if any of a hub's spokes use the site-to-site data transfer feature, the resources associated with those spokes must all be in the same VPC network. Spokes that do not use site-to-site data transfer can be associated with any VPC network in your project.
      properties:
        createTime:
          description: Output only. The time the hub was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: An optional description of the hub.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional labels in key-value pair format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
          type: object
        name:
          description: "Immutable. The name of the hub. Hub names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}`"
          type: string
        routeTables:
          description: "Output only. The route tables that belong to this hub. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}/routeTables/{route_table_id}` This field is read-only. Network Connectivity Center automatically populates it based on the route tables nested under the hub."
          items:
            type: string
          readOnly: true
          type: array
        routingVpcs:
          description: The VPC networks associated with this hub's spokes. This field is read-only. Network Connectivity Center automatically populates it based on the set of spokes attached to the hub.
          items:
            $ref: "#/components/schemas/RoutingVPC"
          type: array
        spokeSummary:
          $ref: "#/components/schemas/SpokeSummary"
          description: Output only. A summary of the spokes associated with a hub. The summary includes a count of spokes according to type and according to state. If any spokes are inactive, the summary also lists the reasons they are inactive, including a count for each reason.
          readOnly: true
        state:
          description: Output only. The current lifecycle state of this hub.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ACCEPTING
            - REJECTING
            - UPDATING
            - INACTIVE
            - OBSOLETE
          readOnly: true
          type: string
        uniqueId:
          description: Output only. The Google-generated UUID for the hub. This value is unique across all hub resources. If a hub is deleted and another with the same name is created, the new hub is assigned a different unique_id.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time the hub was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    InterconnectAttachment:
      description: InterconnectAttachment that this route applies to.
      properties:
        region:
          description: Optional. Cloud region to install this policy-based route on interconnect attachment. Use `all` to install it on all interconnect attachments.
          type: string
      type: object
    InternalRange:
      description: The internal range resource for IPAM operations within a VPC network. Used to represent a private address range along with behavioral characterstics of that range (its usage and peering behavior). Networking resources can link to this range if they are created as belonging to it.
      properties:
        createTime:
          description: Time when the internal range was created.
          format: google-datetime
          type: string
        description:
          description: A description of this resource.
          type: string
        ipCidrRange:
          description: The IP range that this internal range defines.
          type: string
        labels:
          additionalProperties:
            type: string
          description: User-defined labels.
          type: object
        name:
          description: "Immutable. The name of an internal range. Format: projects/{project}/locations/{location}/internalRanges/{internal_range} See: https://google.aip.dev/122#fields-representing-resource-names"
          type: string
        network:
          description: "The URL or resource ID of the network in which to reserve the internal range. The network cannot be deleted if there are any reserved internal ranges referring to it. Legacy networks are not supported. This can only be specified for a global internal address. Example: - URL: /compute/v1/projects/{project}/global/networks/{resourceId} - ID: network123"
          type: string
        overlaps:
          description: Optional. Types of resources that are allowed to overlap with the current internal range.
          items:
            enum:
              - OVERLAP_UNSPECIFIED
              - OVERLAP_ROUTE_RANGE
              - OVERLAP_EXISTING_SUBNET_RANGE
            type: string
          type: array
        peering:
          description: The type of peering set for this internal range.
          enum:
            - PEERING_UNSPECIFIED
            - FOR_SELF
            - FOR_PEER
            - NOT_SHARED
          type: string
        prefixLength:
          description: An alternate to ip_cidr_range. Can be set when trying to create a reservation that automatically finds a free range of the given size. If both ip_cidr_range and prefix_length are set, there is an error if the range sizes do not match. Can also be used during updates to change the range size.
          format: int32
          type: integer
        targetCidrRange:
          description: Optional. Can be set to narrow down or pick a different address space while searching for a free range. If not set, defaults to the "10.0.0.0/8" address space. This can be used to search in other rfc-1918 address spaces like "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918 address spaces used in the VPC.
          items:
            type: string
          type: array
        updateTime:
          description: Time when the internal range was updated.
          format: google-datetime
          type: string
        usage:
          description: The type of usage set for this InternalRange.
          enum:
            - USAGE_UNSPECIFIED
            - FOR_VPC
            - EXTERNAL_TO_VPC
          type: string
        users:
          description: Output only. The list of resources that refer to this internal range. Resources that use the internal range for their range allocation are referred to as users of the range. Other resources mark themselves as users while doing so by creating a reference to this internal range. Having a user, based on this reference, prevents deletion of the internal range referred to. Can be empty.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    LinkedInterconnectAttachments:
      description: A collection of VLAN attachment resources. These resources should be redundant attachments that all advertise the same prefixes to Google Cloud. Alternatively, in active/passive configurations, all attachments should be capable of advertising the same prefixes.
      properties:
        siteToSiteDataTransfer:
          description: A value that controls whether site-to-site data transfer is enabled for these resources. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
          type: boolean
        uris:
          description: The URIs of linked interconnect attachment resources
          items:
            type: string
          type: array
        vpcNetwork:
          description: Output only. The VPC network where these VLAN attachments are located.
          readOnly: true
          type: string
      type: object
    LinkedRouterApplianceInstances:
      description: A collection of router appliance instances. If you configure multiple router appliance instances to receive data from the same set of sites outside of Google Cloud, we recommend that you associate those instances with the same spoke.
      properties:
        instances:
          description: The list of router appliance instances.
          items:
            $ref: "#/components/schemas/RouterApplianceInstance"
          type: array
        siteToSiteDataTransfer:
          description: A value that controls whether site-to-site data transfer is enabled for these resources. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
          type: boolean
        vpcNetwork:
          description: Output only. The VPC network where these router appliance instances are located.
          readOnly: true
          type: string
      type: object
    LinkedVpcNetwork:
      description: An existing VPC network.
      properties:
        excludeExportRanges:
          description: Optional. IP ranges encompassing the subnets to be excluded from peering.
          items:
            type: string
          type: array
        uri:
          description: Required. The URI of the VPC network resource.
          type: string
      type: object
    LinkedVpnTunnels:
      description: A collection of Cloud VPN tunnel resources. These resources should be redundant HA VPN tunnels that all advertise the same prefixes to Google Cloud. Alternatively, in a passive/active configuration, all tunnels should be capable of advertising the same prefixes.
      properties:
        siteToSiteDataTransfer:
          description: A value that controls whether site-to-site data transfer is enabled for these resources. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
          type: boolean
        uris:
          description: The URIs of linked VPN tunnel resources.
          items:
            type: string
          type: array
        vpcNetwork:
          description: Output only. The VPC network where these VPN tunnels are located.
          readOnly: true
          type: string
      type: object
    ListGroupsResponse:
      description: Response for HubService.ListGroups method.
      properties:
        groups:
          description: The requested groups.
          items:
            $ref: "#/components/schemas/Group"
          type: array
        nextPageToken:
          description: The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.
          type: string
        unreachable:
          description: Hubs that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListHubSpokesResponse:
      description: The response for HubService.ListHubSpokes.
      properties:
        nextPageToken:
          description: The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.
          type: string
        spokes:
          description: The requested spokes. The spoke fields can be partially populated based on the `view` field in the request message.
          items:
            $ref: "#/components/schemas/Spoke"
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListHubsResponse:
      description: Response for HubService.ListHubs method.
      properties:
        hubs:
          description: The requested hubs.
          items:
            $ref: "#/components/schemas/Hub"
          type: array
        nextPageToken:
          description: The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListInternalRangesResponse:
      description: Response for InternalRange.ListInternalRanges
      properties:
        internalRanges:
          description: Internal ranges to be returned.
          items:
            $ref: "#/components/schemas/InternalRange"
          type: array
        nextPageToken:
          description: The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListPolicyBasedRoutesResponse:
      description: Response for PolicyBasedRouting.ListPolicyBasedRoutes method.
      properties:
        nextPageToken:
          description: The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.
          type: string
        policyBasedRoutes:
          description: Policy-based routes to be returned.
          items:
            $ref: "#/components/schemas/PolicyBasedRoute"
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListRouteTablesResponse:
      description: Response for HubService.ListRouteTables method.
      properties:
        nextPageToken:
          description: The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.
          type: string
        routeTables:
          description: The requested route tables.
          items:
            $ref: "#/components/schemas/RouteTable"
          type: array
        unreachable:
          description: Hubs that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListRoutesResponse:
      description: Response for HubService.ListRoutes method.
      properties:
        nextPageToken:
          description: The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.
          type: string
        routes:
          description: The requested routes.
          items:
            $ref: "#/components/schemas/Route"
          type: array
        unreachable:
          description: RouteTables that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListServiceClassesResponse:
      description: Response for ListServiceClasses.
      properties:
        nextPageToken:
          description: The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.
          type: string
        serviceClasses:
          description: ServiceClasses to be returned.
          items:
            $ref: "#/components/schemas/ServiceClass"
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListServiceConnectionMapsResponse:
      description: Response for ListServiceConnectionMaps.
      properties:
        nextPageToken:
          description: The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.
          type: string
        serviceConnectionMaps:
          description: ServiceConnectionMaps to be returned.
          items:
            $ref: "#/components/schemas/ServiceConnectionMap"
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListServiceConnectionPoliciesResponse:
      description: Response for ListServiceConnectionPolicies.
      properties:
        nextPageToken:
          description: The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.
          type: string
        serviceConnectionPolicies:
          description: ServiceConnectionPolicies to be returned.
          items:
            $ref: "#/components/schemas/ServiceConnectionPolicy"
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListServiceConnectionTokensResponse:
      description: Response for ListServiceConnectionTokens.
      properties:
        nextPageToken:
          description: The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.
          type: string
        serviceConnectionTokens:
          description: ServiceConnectionTokens to be returned.
          items:
            $ref: "#/components/schemas/ServiceConnectionToken"
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListSpokesResponse:
      description: The response for HubService.ListSpokes.
      properties:
        nextPageToken:
          description: The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.
          type: string
        spokes:
          description: The requested spokes.
          items:
            $ref: "#/components/schemas/Spoke"
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    Location:
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      type: object
    LocationMetadata:
      description: Metadata about locations
      properties:
        locationFeatures:
          description: List of supported features
          items:
            enum:
              - LOCATION_FEATURE_UNSPECIFIED
              - SITE_TO_CLOUD_SPOKES
              - SITE_TO_SITE_SPOKES
            type: string
          type: array
      type: object
    NextHopVpcNetwork:
      properties:
        uri:
          description: The URI of the VPC network resource
          type: string
      type: object
    OperationMetadata:
      description: Represents the metadata of the long-running operation.
      properties:
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        requestedCancellation:
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
      type: object
    Policy:
      description: "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/AuditConfig"
          type: array
        bindings:
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
          format: byte
          type: string
        version:
          description: "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
          format: int32
          type: integer
      type: object
    PolicyBasedRoute:
      description: Policy-based routes route L4 network traffic based on not just destination IP address, but also source IP address, protocol, and more. If a policy-based route conflicts with other types of routes, the policy-based route always take precedence.
      properties:
        createTime:
          description: Output only. Time when the policy-based route was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. An optional description of this resource. Provide this field when you create the resource.
          type: string
        filter:
          $ref: "#/components/schemas/Filter"
          description: Required. The filter to match L4 traffic.
        interconnectAttachment:
          $ref: "#/components/schemas/InterconnectAttachment"
          description: Optional. The interconnect attachments that this policy-based route applies to.
        kind:
          description: Output only. Type of this resource. Always networkconnectivity#policyBasedRoute for policy-based Route resources.
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: User-defined labels.
          type: object
        name:
          description: Immutable. A unique name of the resource in the form of `projects/{project_number}/locations/global/PolicyBasedRoutes/{policy_based_route_id}`
          type: string
        network:
          description: "Required. Fully-qualified URL of the network that this route applies to, for example: projects/my-project/global/networks/my-network."
          type: string
        nextHopIlbIp:
          description: Optional. The IP address of a global-access-enabled L4 ILB that is the next hop for matching packets. For this version, only nextHopIlbIp is supported.
          type: string
        nextHopOtherRoutes:
          description: Optional. Other routes that will be referenced to determine the next hop of the packet.
          enum:
            - OTHER_ROUTES_UNSPECIFIED
            - DEFAULT_ROUTING
          type: string
        priority:
          description: Optional. The priority of this policy-based route. Priority is used to break ties in cases where there are more than one matching policy-based routes found. In cases where multiple policy-based routes are matched, the one with the lowest-numbered priority value wins. The default value is 1000. The priority value must be from 1 to 65535, inclusive.
          format: int32
          type: integer
        selfLink:
          description: Output only. Server-defined fully-qualified URL for this resource.
          readOnly: true
          type: string
        updateTime:
          description: Output only. Time when the policy-based route was updated.
          format: google-datetime
          readOnly: true
          type: string
        virtualMachine:
          $ref: "#/components/schemas/VirtualMachine"
          description: Optional. VM instances to which this policy-based route applies to.
        warnings:
          description: Output only. If potential misconfigurations are detected for this route, this field will be populated with warning messages.
          items:
            $ref: "#/components/schemas/Warnings"
          readOnly: true
          type: array
      type: object
    ProducerPscConfig:
      description: The PSC configurations on producer side.
      properties:
        serviceAttachmentUri:
          description: "The resource path of a service attachment. Example: projects/{projectNumOrId}/regions/{region}/serviceAttachments/{resourceId}."
          type: string
      type: object
    PscConfig:
      description: Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
      properties:
        limit:
          description: Optional. Max number of PSC connections for this policy.
          format: int64
          type: string
        subnetworks:
          description: "The resource paths of subnetworks to use for IP address management. Example: projects/{projectNumOrId}/regions/{region}/subnetworks/{resourceId}."
          items:
            type: string
          type: array
      type: object
    PscConnection:
      description: Information about a specific Private Service Connect connection.
      properties:
        consumerAddress:
          description: The resource reference of the consumer address.
          type: string
        consumerForwardingRule:
          description: The resource reference of the PSC Forwarding Rule within the consumer VPC.
          type: string
        consumerTargetProject:
          description: The project where the PSC connection is created.
          type: string
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          deprecated: true
          description: The most recent error during operating this connection.
        errorInfo:
          $ref: "#/components/schemas/GoogleRpcErrorInfo"
          description: Output only. The error info for the latest error during operating this connection.
          readOnly: true
        errorType:
          description: The error type indicates whether the error is consumer facing, producer facing or system internal.
          enum:
            - CONNECTION_ERROR_TYPE_UNSPECIFIED
            - ERROR_INTERNAL
            - ERROR_CONSUMER_SIDE
            - ERROR_PRODUCER_SIDE
          type: string
        gceOperation:
          description: The last Compute Engine operation to setup PSC connection.
          type: string
        pscConnectionId:
          description: The PSC connection id of the PSC forwarding rule.
          type: string
        selectedSubnetwork:
          description: Output only. The URI of the subnetwork selected to allocate IP address for this connection.
          readOnly: true
          type: string
        state:
          description: State of the PSC Connection
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - FAILED
            - CREATING
            - DELETING
          type: string
      type: object
    RejectHubSpokeRequest:
      description: The request for HubService.RejectHubSpoke.
      properties:
        details:
          description: Optional. Additional information provided by the hub administrator.
          type: string
        requestId:
          description: Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
        spokeUri:
          description: Required. The URI of the spoke to reject from the hub.
          type: string
      type: object
    RejectHubSpokeResponse:
      description: The response for HubService.RejectHubSpoke.
      properties:
        spoke:
          $ref: "#/components/schemas/Spoke"
          description: The spoke that was operated on.
      type: object
    Route:
      description: A route defines a path from VM instances within a spoke to a specific destination resource. Only VPC spokes have routes.
      properties:
        createTime:
          description: Output only. The time the route was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: An optional description of the route.
          type: string
        ipCidrRange:
          description: The destination IP address range.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional labels in key-value pair format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
          type: object
        location:
          description: 'Output only. The location of the route. Uses the following form: "projects/{project}/locations/{location}" Example: projects/1234/locations/us-central1'
          readOnly: true
          type: string
        name:
          description: "Immutable. The name of the route. Route names must be unique. Route names use the following form: `projects/{project_number}/locations/global/hubs/{hub}/routeTables/{route_table_id}/routes/{route_id}`"
          type: string
        nextHopVpcNetwork:
          $ref: "#/components/schemas/NextHopVpcNetwork"
          description: Immutable. The destination VPC network for packets on this route.
        spoke:
          description: "Immutable. The spoke that this route leads to. Example: projects/12345/locations/global/spokes/SPOKE"
          type: string
        state:
          description: Output only. The current lifecycle state of the route.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ACCEPTING
            - REJECTING
            - UPDATING
            - INACTIVE
            - OBSOLETE
          readOnly: true
          type: string
        type:
          description: Output only. The route's type. Its type is determined by the properties of its IP address range.
          enum:
            - ROUTE_TYPE_UNSPECIFIED
            - VPC_PRIMARY_SUBNET
            - VPC_SECONDARY_SUBNET
          readOnly: true
          type: string
        uid:
          description: Output only. The Google-generated UUID for the route. This value is unique across all Network Connectivity Center route resources. If a route is deleted and another with the same name is created, the new route is assigned a different `uid`.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time the route was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    RouteTable:
      properties:
        createTime:
          description: Output only. The time the route table was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: An optional description of the route table.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional labels in key-value pair format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
          type: object
        name:
          description: "Immutable. The name of the route table. Route table names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub}/routeTables/{route_table_id}`"
          type: string
        state:
          description: Output only. The current lifecycle state of this route table.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ACCEPTING
            - REJECTING
            - UPDATING
            - INACTIVE
            - OBSOLETE
          readOnly: true
          type: string
        uid:
          description: Output only. The Google-generated UUID for the route table. This value is unique across all route table resources. If a route table is deleted and another with the same name is created, the new route table is assigned a different `uid`.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time the route table was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    RouterApplianceInstance:
      description: A router appliance instance is a Compute Engine virtual machine (VM) instance that acts as a BGP speaker. A router appliance instance is specified by the URI of the VM and the internal IP address of one of the VM's network interfaces.
      properties:
        ipAddress:
          description: The IP address on the VM to use for peering.
          type: string
        virtualMachine:
          description: The URI of the VM.
          type: string
      type: object
    RoutingVPC:
      description: RoutingVPC contains information about the VPC networks associated with the spokes of a Network Connectivity Center hub.
      properties:
        requiredForNewSiteToSiteDataTransferSpokes:
          description: Output only. If true, indicates that this VPC network is currently associated with spokes that use the data transfer feature (spokes where the site_to_site_data_transfer field is set to true). If you create new spokes that use data transfer, they must be associated with this VPC network. At most, one VPC network will have this field set to true.
          readOnly: true
          type: boolean
        uri:
          description: The URI of the VPC network.
          type: string
      type: object
    ServiceClass:
      description: "The ServiceClass resource. Next id: 9"
      properties:
        createTime:
          description: Output only. Time when the ServiceClass was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: A description of this resource.
          type: string
        etag:
          description: Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
          type: string
        labels:
          additionalProperties:
            type: string
          description: User-defined labels.
          type: object
        name:
          description: "Immutable. The name of a ServiceClass resource. Format: projects/{project}/locations/{location}/serviceClasses/{service_class} See: https://google.aip.dev/122#fields-representing-resource-names"
          type: string
        serviceClass:
          description: Output only. The generated service class name. Use this name to refer to the Service class in Service Connection Maps and Service Connection Policies.
          readOnly: true
          type: string
        updateTime:
          description: Output only. Time when the ServiceClass was updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    ServiceConnectionMap:
      description: "The ServiceConnectionMap resource. Next id: 15"
      properties:
        consumerPscConfigs:
          description: The PSC configurations on consumer side.
          items:
            $ref: "#/components/schemas/ConsumerPscConfig"
          type: array
        consumerPscConnections:
          description: Output only. PSC connection details on consumer side.
          items:
            $ref: "#/components/schemas/ConsumerPscConnection"
          readOnly: true
          type: array
        createTime:
          description: Output only. Time when the ServiceConnectionMap was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: A description of this resource.
          type: string
        etag:
          description: Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
          type: string
        infrastructure:
          description: Output only. The infrastructure used for connections between consumers/producers.
          enum:
            - INFRASTRUCTURE_UNSPECIFIED
            - PSC
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: User-defined labels.
          type: object
        name:
          description: "Immutable. The name of a ServiceConnectionMap. Format: projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map} See: https://google.aip.dev/122#fields-representing-resource-names"
          type: string
        producerPscConfigs:
          description: The PSC configurations on producer side.
          items:
            $ref: "#/components/schemas/ProducerPscConfig"
          type: array
        serviceClass:
          description: The service class identifier this ServiceConnectionMap is for. The user of ServiceConnectionMap create API needs to have networkconnecitivty.serviceclasses.use iam permission for the service class.
          type: string
        serviceClassUri:
          description: Output only. The service class uri this ServiceConnectionMap is for.
          readOnly: true
          type: string
        token:
          description: The token provided by the consumer. This token authenticates that the consumer can create a connecton within the specified project and network.
          type: string
        updateTime:
          description: Output only. Time when the ServiceConnectionMap was updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    ServiceConnectionPolicy:
      description: "The ServiceConnectionPolicy resource. Next id: 12"
      properties:
        createTime:
          description: Output only. Time when the ServiceConnectionMap was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: A description of this resource.
          type: string
        etag:
          description: Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
          type: string
        infrastructure:
          description: Output only. The type of underlying resources used to create the connection.
          enum:
            - INFRASTRUCTURE_UNSPECIFIED
            - PSC
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: User-defined labels.
          type: object
        name:
          description: "Immutable. The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names"
          type: string
        network:
          description: "The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}."
          type: string
        pscConfig:
          $ref: "#/components/schemas/PscConfig"
          description: Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
        pscConnections:
          description: Output only. [Output only] Information about each Private Service Connect connection.
          items:
            $ref: "#/components/schemas/PscConnection"
          readOnly: true
          type: array
        serviceClass:
          description: The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass. It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.
          type: string
        updateTime:
          description: Output only. Time when the ServiceConnectionMap was updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    ServiceConnectionToken:
      description: "The ServiceConnectionToken resource. Next id: 10"
      properties:
        createTime:
          description: Output only. Time when the ServiceConnectionToken was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: A description of this resource.
          type: string
        etag:
          description: Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
          type: string
        expireTime:
          description: Output only. The time to which this token is valid.
          format: google-datetime
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: User-defined labels.
          type: object
        name:
          description: "Immutable. The name of a ServiceConnectionToken. Format: projects/{project}/locations/{location}/ServiceConnectionTokens/{service_connection_token} See: https://google.aip.dev/122#fields-representing-resource-names"
          type: string
        network:
          description: "The resource path of the network associated with this token. Example: projects/{projectNumOrId}/global/networks/{resourceId}."
          type: string
        token:
          description: Output only. The token generated by Automation.
          readOnly: true
          type: string
        updateTime:
          description: Output only. Time when the ServiceConnectionToken was updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
          description: "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        updateMask:
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          format: google-fieldmask
          type: string
      type: object
    Spoke:
      description: "A Network Connectivity Center spoke represents one or more network connectivity resources. When you create a spoke, you associate it with a hub. You must also identify a value for exactly one of the following fields: * linked_vpn_tunnels * linked_interconnect_attachments * linked_router_appliance_instances * linked_vpc_network"
      properties:
        createTime:
          description: Output only. The time the spoke was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: An optional description of the spoke.
          type: string
        group:
          description: Optional. The name of the group that this spoke is associated with.
          type: string
        hub:
          description: Immutable. The name of the hub that this spoke is attached to.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional labels in key-value pair format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
          type: object
        linkedInterconnectAttachments:
          $ref: "#/components/schemas/LinkedInterconnectAttachments"
          description: VLAN attachments that are associated with the spoke.
        linkedRouterApplianceInstances:
          $ref: "#/components/schemas/LinkedRouterApplianceInstances"
          description: Router appliance instances that are associated with the spoke.
        linkedVpcNetwork:
          $ref: "#/components/schemas/LinkedVpcNetwork"
          description: Optional. VPC network that is associated with the spoke.
        linkedVpnTunnels:
          $ref: "#/components/schemas/LinkedVpnTunnels"
          description: VPN tunnels that are associated with the spoke.
        name:
          description: "Immutable. The name of the spoke. Spoke names must be unique. They use the following form: `projects/{project_number}/locations/{region}/spokes/{spoke_id}`"
          type: string
        reasons:
          description: Output only. The reasons for current state of the spoke. Only present when the spoke is in the `INACTIVE` state.
          items:
            $ref: "#/components/schemas/StateReason"
          readOnly: true
          type: array
        spokeType:
          description: Output only. The type of resource associated with the spoke.
          enum:
            - SPOKE_TYPE_UNSPECIFIED
            - VPN_TUNNEL
            - INTERCONNECT_ATTACHMENT
            - ROUTER_APPLIANCE
            - VPC_NETWORK
          readOnly: true
          type: string
        state:
          description: Output only. The current lifecycle state of this spoke.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ACCEPTING
            - REJECTING
            - UPDATING
            - INACTIVE
            - OBSOLETE
          readOnly: true
          type: string
        uniqueId:
          description: Output only. The Google-generated UUID for the spoke. This value is unique across all spoke resources. If a spoke is deleted and another with the same name is created, the new spoke is assigned a different `unique_id`.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time the spoke was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    SpokeStateCount:
      description: The number of spokes that are in a particular state and associated with a given hub.
      properties:
        count:
          description: Output only. The total number of spokes that are in this state and associated with a given hub.
          format: int64
          readOnly: true
          type: string
        state:
          description: Output only. The state of the spokes.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - ACCEPTING
            - REJECTING
            - UPDATING
            - INACTIVE
            - OBSOLETE
          readOnly: true
          type: string
      type: object
    SpokeStateReasonCount:
      description: The number of spokes in the hub that are inactive for this reason.
      properties:
        count:
          description: Output only. The total number of spokes that are inactive for a particular reason and associated with a given hub.
          format: int64
          readOnly: true
          type: string
        stateReasonCode:
          description: Output only. The reason that a spoke is inactive.
          enum:
            - CODE_UNSPECIFIED
            - PENDING_REVIEW
            - REJECTED
            - PAUSED
            - FAILED
          readOnly: true
          type: string
      type: object
    SpokeSummary:
      description: Summarizes information about the spokes associated with a hub. The summary includes a count of spokes according to type and according to state. If any spokes are inactive, the summary also lists the reasons they are inactive, including a count for each reason.
      properties:
        spokeStateCounts:
          description: Output only. Counts the number of spokes that are in each state and associated with a given hub.
          items:
            $ref: "#/components/schemas/SpokeStateCount"
          readOnly: true
          type: array
        spokeStateReasonCounts:
          description: Output only. Counts the number of spokes that are inactive for each possible reason and associated with a given hub.
          items:
            $ref: "#/components/schemas/SpokeStateReasonCount"
          readOnly: true
          type: array
        spokeTypeCounts:
          description: Output only. Counts the number of spokes of each type that are associated with a specific hub.
          items:
            $ref: "#/components/schemas/SpokeTypeCount"
          readOnly: true
          type: array
      type: object
    SpokeTypeCount:
      description: The number of spokes of a given type that are associated with a specific hub. The type indicates what kind of resource is associated with the spoke.
      properties:
        count:
          description: Output only. The total number of spokes of this type that are associated with the hub.
          format: int64
          readOnly: true
          type: string
        spokeType:
          description: Output only. The type of the spokes.
          enum:
            - SPOKE_TYPE_UNSPECIFIED
            - VPN_TUNNEL
            - INTERCONNECT_ATTACHMENT
            - ROUTER_APPLIANCE
            - VPC_NETWORK
          readOnly: true
          type: string
      type: object
    StateReason:
      description: The reason a spoke is inactive.
      properties:
        code:
          description: The code associated with this reason.
          enum:
            - CODE_UNSPECIFIED
            - PENDING_REVIEW
            - REJECTED
            - PAUSED
            - FAILED
          type: string
        message:
          description: Human-readable details about this reason.
          type: string
        userDetails:
          description: Additional information provided by the user in the RejectSpoke call.
          type: string
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
          type: array
      type: object
    VirtualMachine:
      description: VM instances to which this policy-based route applies to.
      properties:
        tags:
          description: Optional. A list of VM instance tags the this policy-based route applies to. VM instances that have ANY of tags specified here will install this PBR.
          items:
            type: string
          type: array
      type: object
    Warnings:
      description: Informational warning message.
      properties:
        code:
          description: Output only. A warning code, if applicable.
          enum:
            - WARNING_UNSPECIFIED
            - RESOURCE_NOT_ACTIVE
            - RESOURCE_BEING_MODIFIED
          readOnly: true
          type: string
        data:
          additionalProperties:
            type: string
          description: "Output only. Metadata about this warning in key: value format. The key should provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement."
          readOnly: true
          type: object
        warningMessage:
          description: Output only. A human-readable description of the warning code.
          readOnly: true
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
