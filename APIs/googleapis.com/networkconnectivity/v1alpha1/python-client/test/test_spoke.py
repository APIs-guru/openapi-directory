# coding: utf-8

"""
    Network Connectivity API

    This API enables connectivity with and between Google Cloud resources.

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.spoke import Spoke

class TestSpoke(unittest.TestCase):
    """Spoke unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Spoke:
        """Test Spoke
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Spoke`
        """
        model = Spoke()
        if include_optional:
            return Spoke(
                create_time = '',
                description = '',
                hub = '',
                labels = {
                    'key' : ''
                    },
                linked_interconnect_attachments = [
                    ''
                    ],
                linked_router_appliance_instances = [
                    openapi_client.models.router_appliance_instance.RouterApplianceInstance(
                        ip_address = '', 
                        network_interface = '', 
                        virtual_machine = '', )
                    ],
                linked_vpn_tunnels = [
                    ''
                    ],
                name = '',
                state = 'STATE_UNSPECIFIED',
                unique_id = '',
                update_time = ''
            )
        else:
            return Spoke(
        )
        """

    def testSpoke(self):
        """Test Spoke"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
