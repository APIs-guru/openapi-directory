# coding: utf-8

"""
    Cloud Spanner API

    Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.mutation import Mutation

class TestMutation(unittest.TestCase):
    """Mutation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Mutation:
        """Test Mutation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Mutation`
        """
        model = Mutation()
        if include_optional:
            return Mutation(
                delete = openapi_client.models.delete.Delete(
                    key_set = openapi_client.models.key_set.KeySet(
                        all = True, 
                        keys = [
                            [
                                null
                                ]
                            ], 
                        ranges = [
                            openapi_client.models.key_range.KeyRange(
                                end_closed = [
                                    null
                                    ], 
                                end_open = [
                                    null
                                    ], 
                                start_closed = [
                                    null
                                    ], 
                                start_open = [
                                    null
                                    ], )
                            ], ), 
                    table = '', ),
                insert = openapi_client.models.write.Write(
                    columns = [
                        ''
                        ], 
                    table = '', 
                    values = [
                        [
                            null
                            ]
                        ], ),
                insert_or_update = openapi_client.models.write.Write(
                    columns = [
                        ''
                        ], 
                    table = '', 
                    values = [
                        [
                            null
                            ]
                        ], ),
                replace = openapi_client.models.write.Write(
                    columns = [
                        ''
                        ], 
                    table = '', 
                    values = [
                        [
                            null
                            ]
                        ], ),
                update = openapi_client.models.write.Write(
                    columns = [
                        ''
                        ], 
                    table = '', 
                    values = [
                        [
                            null
                            ]
                        ], )
            )
        else:
            return Mutation(
        )
        """

    def testMutation(self):
        """Test Mutation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
