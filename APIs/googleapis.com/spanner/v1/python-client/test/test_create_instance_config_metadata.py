# coding: utf-8

"""
    Cloud Spanner API

    Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_instance_config_metadata import CreateInstanceConfigMetadata

class TestCreateInstanceConfigMetadata(unittest.TestCase):
    """CreateInstanceConfigMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateInstanceConfigMetadata:
        """Test CreateInstanceConfigMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateInstanceConfigMetadata`
        """
        model = CreateInstanceConfigMetadata()
        if include_optional:
            return CreateInstanceConfigMetadata(
                cancel_time = '',
                instance_config = openapi_client.models.instance_config.InstanceConfig(
                    base_config = '', 
                    config_type = 'TYPE_UNSPECIFIED', 
                    display_name = '', 
                    etag = '', 
                    free_instance_availability = 'FREE_INSTANCE_AVAILABILITY_UNSPECIFIED', 
                    labels = {
                        'key' : ''
                        }, 
                    leader_options = [
                        ''
                        ], 
                    name = '', 
                    optional_replicas = [
                        openapi_client.models.replica_info.ReplicaInfo(
                            default_leader_location = True, 
                            location = '', 
                            type = 'TYPE_UNSPECIFIED', )
                        ], 
                    reconciling = True, 
                    replicas = [
                        openapi_client.models.replica_info.ReplicaInfo(
                            default_leader_location = True, 
                            location = '', 
                            type = 'TYPE_UNSPECIFIED', )
                        ], 
                    state = 'STATE_UNSPECIFIED', 
                    storage_limit_per_processing_unit = '', ),
                progress = openapi_client.models.instance_operation_progress.InstanceOperationProgress(
                    end_time = '', 
                    progress_percent = 56, 
                    start_time = '', )
            )
        else:
            return CreateInstanceConfigMetadata(
        )
        """

    def testCreateInstanceConfigMetadata(self):
        """Test CreateInstanceConfigMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
