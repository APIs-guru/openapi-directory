# coding: utf-8

"""
    Cloud Spanner API

    Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.batch_write_request import BatchWriteRequest

class TestBatchWriteRequest(unittest.TestCase):
    """BatchWriteRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BatchWriteRequest:
        """Test BatchWriteRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BatchWriteRequest`
        """
        model = BatchWriteRequest()
        if include_optional:
            return BatchWriteRequest(
                mutation_groups = [
                    openapi_client.models.mutation_group.MutationGroup(
                        mutations = [
                            openapi_client.models.mutation.Mutation(
                                delete = openapi_client.models.delete.Delete(
                                    key_set = openapi_client.models.key_set.KeySet(
                                        all = True, 
                                        keys = [
                                            [
                                                null
                                                ]
                                            ], 
                                        ranges = [
                                            openapi_client.models.key_range.KeyRange(
                                                end_closed = [
                                                    null
                                                    ], 
                                                end_open = [
                                                    null
                                                    ], 
                                                start_closed = [
                                                    null
                                                    ], 
                                                start_open = [
                                                    null
                                                    ], )
                                            ], ), 
                                    table = '', ), 
                                insert = openapi_client.models.write.Write(
                                    columns = [
                                        ''
                                        ], 
                                    table = '', 
                                    values = [
                                        [
                                            null
                                            ]
                                        ], ), 
                                insert_or_update = openapi_client.models.write.Write(
                                    table = '', ), 
                                replace = , 
                                update = , )
                            ], )
                    ],
                request_options = openapi_client.models.request_options.RequestOptions(
                    priority = 'PRIORITY_UNSPECIFIED', 
                    request_tag = '', 
                    transaction_tag = '', )
            )
        else:
            return BatchWriteRequest(
        )
        """

    def testBatchWriteRequest(self):
        """Test BatchWriteRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
