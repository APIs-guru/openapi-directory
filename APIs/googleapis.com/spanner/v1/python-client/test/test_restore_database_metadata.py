# coding: utf-8

"""
    Cloud Spanner API

    Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.restore_database_metadata import RestoreDatabaseMetadata

class TestRestoreDatabaseMetadata(unittest.TestCase):
    """RestoreDatabaseMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestoreDatabaseMetadata:
        """Test RestoreDatabaseMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestoreDatabaseMetadata`
        """
        model = RestoreDatabaseMetadata()
        if include_optional:
            return RestoreDatabaseMetadata(
                backup_info = openapi_client.models.backup_info.BackupInfo(
                    backup = '', 
                    create_time = '', 
                    source_database = '', 
                    version_time = '', ),
                cancel_time = '',
                name = '',
                optimize_database_operation_name = '',
                progress = openapi_client.models.operation_progress.OperationProgress(
                    end_time = '', 
                    progress_percent = 56, 
                    start_time = '', ),
                source_type = 'TYPE_UNSPECIFIED'
            )
        else:
            return RestoreDatabaseMetadata(
        )
        """

    def testRestoreDatabaseMetadata(self):
        """Test RestoreDatabaseMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
