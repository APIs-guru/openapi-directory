# coding: utf-8

"""
    Cloud Spanner API

    Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_instance_metadata import CreateInstanceMetadata

class TestCreateInstanceMetadata(unittest.TestCase):
    """CreateInstanceMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateInstanceMetadata:
        """Test CreateInstanceMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateInstanceMetadata`
        """
        model = CreateInstanceMetadata()
        if include_optional:
            return CreateInstanceMetadata(
                cancel_time = '',
                end_time = '',
                expected_fulfillment_period = 'FULFILLMENT_PERIOD_UNSPECIFIED',
                instance = openapi_client.models.instance.Instance(
                    autoscaling_config = openapi_client.models.autoscaling_config.AutoscalingConfig(
                        autoscaling_limits = openapi_client.models.autoscaling_limits.AutoscalingLimits(
                            max_nodes = 56, 
                            max_processing_units = 56, 
                            min_nodes = 56, 
                            min_processing_units = 56, ), 
                        autoscaling_targets = openapi_client.models.autoscaling_targets.AutoscalingTargets(
                            high_priority_cpu_utilization_percent = 56, 
                            storage_utilization_percent = 56, ), ), 
                    config = '', 
                    create_time = '', 
                    display_name = '', 
                    endpoint_uris = [
                        ''
                        ], 
                    free_instance_metadata = openapi_client.models.free_instance_metadata.FreeInstanceMetadata(
                        expire_behavior = 'EXPIRE_BEHAVIOR_UNSPECIFIED', 
                        expire_time = '', 
                        upgrade_time = '', ), 
                    instance_type = 'INSTANCE_TYPE_UNSPECIFIED', 
                    labels = {
                        'key' : ''
                        }, 
                    name = '', 
                    node_count = 56, 
                    processing_units = 56, 
                    state = 'STATE_UNSPECIFIED', 
                    update_time = '', ),
                start_time = ''
            )
        else:
            return CreateInstanceMetadata(
        )
        """

    def testCreateInstanceMetadata(self):
        """Test CreateInstanceMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
