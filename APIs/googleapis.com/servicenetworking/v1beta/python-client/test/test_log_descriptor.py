# coding: utf-8

"""
    Service Networking API

    Provides automatic management of network configurations necessary for certain services.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.log_descriptor import LogDescriptor

class TestLogDescriptor(unittest.TestCase):
    """LogDescriptor unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LogDescriptor:
        """Test LogDescriptor
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LogDescriptor`
        """
        model = LogDescriptor()
        if include_optional:
            return LogDescriptor(
                description = '',
                display_name = '',
                labels = [
                    openapi_client.models.label_descriptor.LabelDescriptor(
                        description = '', 
                        key = '', 
                        value_type = 'STRING', )
                    ],
                name = ''
            )
        else:
            return LogDescriptor(
        )
        """

    def testLogDescriptor(self):
        """Test LogDescriptor"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
