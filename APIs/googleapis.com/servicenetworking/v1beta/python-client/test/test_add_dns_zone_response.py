# coding: utf-8

"""
    Service Networking API

    Provides automatic management of network configurations necessary for certain services.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.add_dns_zone_response import AddDnsZoneResponse

class TestAddDnsZoneResponse(unittest.TestCase):
    """AddDnsZoneResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddDnsZoneResponse:
        """Test AddDnsZoneResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddDnsZoneResponse`
        """
        model = AddDnsZoneResponse()
        if include_optional:
            return AddDnsZoneResponse(
                consumer_peering_zone = openapi_client.models.dns_zone.DnsZone(
                    dns_suffix = '', 
                    name = '', ),
                producer_private_zone = openapi_client.models.dns_zone.DnsZone(
                    dns_suffix = '', 
                    name = '', )
            )
        else:
            return AddDnsZoneResponse(
        )
        """

    def testAddDnsZoneResponse(self):
        """Test AddDnsZoneResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
