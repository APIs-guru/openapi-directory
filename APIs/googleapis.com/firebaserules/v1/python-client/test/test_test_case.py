# coding: utf-8

"""
    Firebase Rules API

    Creates and manages rules that determine when a Firebase Rules-enabled service should permit a request. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.test_case import TestCase

class TestTestCase(unittest.TestCase):
    """TestCase unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TestCase:
        """Test TestCase
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TestCase`
        """
        model = TestCase()
        if include_optional:
            return TestCase(
                expectation = 'EXPECTATION_UNSPECIFIED',
                expression_report_level = 'LEVEL_UNSPECIFIED',
                function_mocks = [
                    openapi_client.models.function_mock.FunctionMock(
                        args = [
                            openapi_client.models.arg.Arg(
                                any_value = openapi_client.models.any_value.anyValue(), 
                                exact_value = null, )
                            ], 
                        function = '', 
                        result = openapi_client.models.result.Result(
                            undefined = openapi_client.models.any_value.anyValue(), 
                            value = null, ), )
                    ],
                path_encoding = 'ENCODING_UNSPECIFIED',
                request = None,
                resource = None
            )
        else:
            return TestCase(
        )
        """

    def testTestCase(self):
        """Test TestCase"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
