# coding: utf-8

"""
    Firebase Rules API

    Creates and manages rules that determine when a Firebase Rules-enabled service should permit a request. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.issue import Issue

class TestIssue(unittest.TestCase):
    """Issue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Issue:
        """Test Issue
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Issue`
        """
        model = Issue()
        if include_optional:
            return Issue(
                description = '',
                severity = 'SEVERITY_UNSPECIFIED',
                source_position = openapi_client.models.source_position.SourcePosition(
                    column = 56, 
                    current_offset = 56, 
                    end_offset = 56, 
                    file_name = '', 
                    line = 56, )
            )
        else:
            return Issue(
        )
        """

    def testIssue(self):
        """Test Issue"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
