# coding: utf-8

"""
    Dataflow API

    Manages Google Cloud Dataflow projects on Google Cloud Platform.

    The version of the OpenAPI document: v1b3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.worker_message_response import WorkerMessageResponse

class TestWorkerMessageResponse(unittest.TestCase):
    """WorkerMessageResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WorkerMessageResponse:
        """Test WorkerMessageResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WorkerMessageResponse`
        """
        model = WorkerMessageResponse()
        if include_optional:
            return WorkerMessageResponse(
                streaming_scaling_report_response = openapi_client.models.streaming_scaling_report_response.StreamingScalingReportResponse(
                    maximum_thread_count = 56, ),
                worker_health_report_response = openapi_client.models.worker_health_report_response.WorkerHealthReportResponse(
                    report_interval = '', ),
                worker_metrics_response = openapi_client.models.resource_utilization_report_response.ResourceUtilizationReportResponse(),
                worker_shutdown_notice_response = openapi_client.models.worker_shutdown_notice_response.WorkerShutdownNoticeResponse(),
                worker_thread_scaling_report_response = openapi_client.models.worker_thread_scaling_report_response.WorkerThreadScalingReportResponse(
                    recommended_thread_count = 56, )
            )
        else:
            return WorkerMessageResponse(
        )
        """

    def testWorkerMessageResponse(self):
        """Test WorkerMessageResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
