# coding: utf-8

"""
    Dataflow API

    Manages Google Cloud Dataflow projects on Google Cloud Platform.

    The version of the OpenAPI document: v1b3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.distribution_update import DistributionUpdate

class TestDistributionUpdate(unittest.TestCase):
    """DistributionUpdate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DistributionUpdate:
        """Test DistributionUpdate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DistributionUpdate`
        """
        model = DistributionUpdate()
        if include_optional:
            return DistributionUpdate(
                count = openapi_client.models.split_int64.SplitInt64(
                    high_bits = 56, 
                    low_bits = 56, ),
                histogram = openapi_client.models.histogram.Histogram(
                    bucket_counts = [
                        ''
                        ], 
                    first_bucket_offset = 56, ),
                max = openapi_client.models.split_int64.SplitInt64(
                    high_bits = 56, 
                    low_bits = 56, ),
                min = openapi_client.models.split_int64.SplitInt64(
                    high_bits = 56, 
                    low_bits = 56, ),
                sum = openapi_client.models.split_int64.SplitInt64(
                    high_bits = 56, 
                    low_bits = 56, ),
                sum_of_squares = 1.337
            )
        else:
            return DistributionUpdate(
        )
        """

    def testDistributionUpdate(self):
        """Test DistributionUpdate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
