# coding: utf-8

"""
    Dataflow API

    Manages Google Cloud Dataflow projects on Google Cloud Platform.

    The version of the OpenAPI document: v1b3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.parallel_instruction import ParallelInstruction

class TestParallelInstruction(unittest.TestCase):
    """ParallelInstruction unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ParallelInstruction:
        """Test ParallelInstruction
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ParallelInstruction`
        """
        model = ParallelInstruction()
        if include_optional:
            return ParallelInstruction(
                flatten = openapi_client.models.flatten_instruction.FlattenInstruction(
                    inputs = [
                        openapi_client.models.instruction_input.InstructionInput(
                            output_num = 56, 
                            producer_instruction_index = 56, )
                        ], ),
                name = '',
                original_name = '',
                outputs = [
                    openapi_client.models.instruction_output.InstructionOutput(
                        codec = {
                            'key' : null
                            }, 
                        name = '', 
                        only_count_key_bytes = True, 
                        only_count_value_bytes = True, 
                        original_name = '', 
                        system_name = '', )
                    ],
                par_do = openapi_client.models.par_do_instruction.ParDoInstruction(
                    input = openapi_client.models.instruction_input.InstructionInput(
                        output_num = 56, 
                        producer_instruction_index = 56, ), 
                    multi_output_infos = [
                        openapi_client.models.multi_output_info.MultiOutputInfo(
                            tag = '', )
                        ], 
                    num_outputs = 56, 
                    side_inputs = [
                        openapi_client.models.side_input_info.SideInputInfo(
                            kind = {
                                'key' : null
                                }, 
                            sources = [
                                openapi_client.models.source.Source(
                                    base_specs = [
                                        {
                                            'key' : null
                                            }
                                        ], 
                                    codec = {
                                        'key' : null
                                        }, 
                                    does_not_need_splitting = True, 
                                    metadata = openapi_client.models.source_metadata.SourceMetadata(
                                        estimated_size_bytes = '', 
                                        infinite = True, 
                                        produces_sorted_keys = True, ), 
                                    spec = {
                                        'key' : null
                                        }, )
                                ], 
                            tag = '', )
                        ], 
                    user_fn = {
                        'key' : null
                        }, ),
                partial_group_by_key = openapi_client.models.partial_group_by_key_instruction.PartialGroupByKeyInstruction(
                    input = openapi_client.models.instruction_input.InstructionInput(
                        output_num = 56, 
                        producer_instruction_index = 56, ), 
                    input_element_codec = {
                        'key' : null
                        }, 
                    original_combine_values_input_store_name = '', 
                    original_combine_values_step_name = '', 
                    side_inputs = [
                        openapi_client.models.side_input_info.SideInputInfo(
                            kind = {
                                'key' : null
                                }, 
                            sources = [
                                openapi_client.models.source.Source(
                                    base_specs = [
                                        {
                                            'key' : null
                                            }
                                        ], 
                                    codec = {
                                        'key' : null
                                        }, 
                                    does_not_need_splitting = True, 
                                    metadata = openapi_client.models.source_metadata.SourceMetadata(
                                        estimated_size_bytes = '', 
                                        infinite = True, 
                                        produces_sorted_keys = True, ), 
                                    spec = {
                                        'key' : null
                                        }, )
                                ], 
                            tag = '', )
                        ], 
                    value_combining_fn = {
                        'key' : null
                        }, ),
                read = openapi_client.models.read_instruction.ReadInstruction(
                    source = openapi_client.models.source.Source(
                        base_specs = [
                            {
                                'key' : null
                                }
                            ], 
                        codec = {
                            'key' : null
                            }, 
                        does_not_need_splitting = True, 
                        metadata = openapi_client.models.source_metadata.SourceMetadata(
                            estimated_size_bytes = '', 
                            infinite = True, 
                            produces_sorted_keys = True, ), 
                        spec = {
                            'key' : null
                            }, ), ),
                system_name = '',
                write = openapi_client.models.write_instruction.WriteInstruction(
                    input = openapi_client.models.instruction_input.InstructionInput(
                        output_num = 56, 
                        producer_instruction_index = 56, ), 
                    sink = openapi_client.models.sink.Sink(
                        codec = {
                            'key' : null
                            }, 
                        spec = {
                            'key' : null
                            }, ), )
            )
        else:
            return ParallelInstruction(
        )
        """

    def testParallelInstruction(self):
        """Test ParallelInstruction"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
