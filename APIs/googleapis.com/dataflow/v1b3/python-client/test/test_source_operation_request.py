# coding: utf-8

"""
    Dataflow API

    Manages Google Cloud Dataflow projects on Google Cloud Platform.

    The version of the OpenAPI document: v1b3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.source_operation_request import SourceOperationRequest

class TestSourceOperationRequest(unittest.TestCase):
    """SourceOperationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SourceOperationRequest:
        """Test SourceOperationRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SourceOperationRequest`
        """
        model = SourceOperationRequest()
        if include_optional:
            return SourceOperationRequest(
                get_metadata = openapi_client.models.source_get_metadata_request.SourceGetMetadataRequest(
                    source = openapi_client.models.source.Source(
                        base_specs = [
                            {
                                'key' : null
                                }
                            ], 
                        codec = {
                            'key' : null
                            }, 
                        does_not_need_splitting = True, 
                        metadata = openapi_client.models.source_metadata.SourceMetadata(
                            estimated_size_bytes = '', 
                            infinite = True, 
                            produces_sorted_keys = True, ), 
                        spec = {
                            'key' : null
                            }, ), ),
                name = '',
                original_name = '',
                split = openapi_client.models.source_split_request.SourceSplitRequest(
                    options = openapi_client.models.source_split_options.SourceSplitOptions(
                        desired_bundle_size_bytes = '', 
                        desired_shard_size_bytes = '', ), 
                    source = openapi_client.models.source.Source(
                        base_specs = [
                            {
                                'key' : null
                                }
                            ], 
                        codec = {
                            'key' : null
                            }, 
                        does_not_need_splitting = True, 
                        metadata = openapi_client.models.source_metadata.SourceMetadata(
                            estimated_size_bytes = '', 
                            infinite = True, 
                            produces_sorted_keys = True, ), 
                        spec = {
                            'key' : null
                            }, ), ),
                stage_name = '',
                system_name = ''
            )
        else:
            return SourceOperationRequest(
        )
        """

    def testSourceOperationRequest(self):
        """Test SourceOperationRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
