# coding: utf-8

"""
    Dataflow API

    Manages Google Cloud Dataflow projects on Google Cloud Platform.

    The version of the OpenAPI document: v1b3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.per_worker_metrics import PerWorkerMetrics

class TestPerWorkerMetrics(unittest.TestCase):
    """PerWorkerMetrics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PerWorkerMetrics:
        """Test PerWorkerMetrics
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PerWorkerMetrics`
        """
        model = PerWorkerMetrics()
        if include_optional:
            return PerWorkerMetrics(
                per_step_namespace_metrics = [
                    openapi_client.models.per_step_namespace_metrics.PerStepNamespaceMetrics(
                        metric_values = [
                            openapi_client.models.metric_value.MetricValue(
                                metric = '', 
                                metric_labels = {
                                    'key' : ''
                                    }, 
                                value_histogram = openapi_client.models.dataflow_histogram_value.DataflowHistogramValue(
                                    bucket_counts = [
                                        ''
                                        ], 
                                    bucket_options = openapi_client.models.bucket_options.BucketOptions(
                                        exponential = openapi_client.models.base2_exponent.Base2Exponent(
                                            number_of_buckets = 56, 
                                            scale = 56, ), 
                                        linear = openapi_client.models.linear.Linear(
                                            number_of_buckets = 56, 
                                            start = 1.337, 
                                            width = 1.337, ), ), 
                                    count = '', 
                                    outlier_stats = openapi_client.models.outlier_stats.OutlierStats(
                                        overflow_count = '', 
                                        overflow_mean = 1.337, 
                                        underflow_count = '', 
                                        underflow_mean = 1.337, ), ), 
                                value_int64 = '', )
                            ], 
                        metrics_namespace = '', 
                        original_step = '', )
                    ]
            )
        else:
            return PerWorkerMetrics(
        )
        """

    def testPerWorkerMetrics(self):
        """Test PerWorkerMetrics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
