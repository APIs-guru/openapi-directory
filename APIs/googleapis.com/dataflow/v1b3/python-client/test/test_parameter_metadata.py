# coding: utf-8

"""
    Dataflow API

    Manages Google Cloud Dataflow projects on Google Cloud Platform.

    The version of the OpenAPI document: v1b3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.parameter_metadata import ParameterMetadata

class TestParameterMetadata(unittest.TestCase):
    """ParameterMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ParameterMetadata:
        """Test ParameterMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ParameterMetadata`
        """
        model = ParameterMetadata()
        if include_optional:
            return ParameterMetadata(
                custom_metadata = {
                    'key' : ''
                    },
                default_value = '',
                enum_options = [
                    openapi_client.models.parameter_metadata_enum_option.ParameterMetadataEnumOption(
                        description = '', 
                        label = '', 
                        value = '', )
                    ],
                group_name = '',
                help_text = '',
                hidden_ui = True,
                is_optional = True,
                label = '',
                name = '',
                param_type = 'DEFAULT',
                parent_name = '',
                parent_trigger_values = [
                    ''
                    ],
                regexes = [
                    ''
                    ]
            )
        else:
            return ParameterMetadata(
        )
        """

    def testParameterMetadata(self):
        """Test ParameterMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
