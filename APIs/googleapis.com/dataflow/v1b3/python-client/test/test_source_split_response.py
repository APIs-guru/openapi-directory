# coding: utf-8

"""
    Dataflow API

    Manages Google Cloud Dataflow projects on Google Cloud Platform.

    The version of the OpenAPI document: v1b3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.source_split_response import SourceSplitResponse

class TestSourceSplitResponse(unittest.TestCase):
    """SourceSplitResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SourceSplitResponse:
        """Test SourceSplitResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SourceSplitResponse`
        """
        model = SourceSplitResponse()
        if include_optional:
            return SourceSplitResponse(
                bundles = [
                    openapi_client.models.derived_source.DerivedSource(
                        derivation_mode = 'SOURCE_DERIVATION_MODE_UNKNOWN', 
                        source = openapi_client.models.source.Source(
                            base_specs = [
                                {
                                    'key' : null
                                    }
                                ], 
                            codec = {
                                'key' : null
                                }, 
                            does_not_need_splitting = True, 
                            metadata = openapi_client.models.source_metadata.SourceMetadata(
                                estimated_size_bytes = '', 
                                infinite = True, 
                                produces_sorted_keys = True, ), 
                            spec = {
                                'key' : null
                                }, ), )
                    ],
                outcome = 'SOURCE_SPLIT_OUTCOME_UNKNOWN',
                shards = [
                    openapi_client.models.source_split_shard.SourceSplitShard(
                        derivation_mode = 'SOURCE_DERIVATION_MODE_UNKNOWN', 
                        source = openapi_client.models.source.Source(
                            base_specs = [
                                {
                                    'key' : null
                                    }
                                ], 
                            codec = {
                                'key' : null
                                }, 
                            does_not_need_splitting = True, 
                            metadata = openapi_client.models.source_metadata.SourceMetadata(
                                estimated_size_bytes = '', 
                                infinite = True, 
                                produces_sorted_keys = True, ), 
                            spec = {
                                'key' : null
                                }, ), )
                    ]
            )
        else:
            return SourceSplitResponse(
        )
        """

    def testSourceSplitResponse(self):
        """Test SourceSplitResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
