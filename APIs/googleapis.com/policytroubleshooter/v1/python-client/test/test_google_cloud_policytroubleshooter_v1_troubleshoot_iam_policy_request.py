# coding: utf-8

"""
    Policy Troubleshooter API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_policytroubleshooter_v1_troubleshoot_iam_policy_request import GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyRequest

class TestGoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyRequest(unittest.TestCase):
    """GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyRequest:
        """Test GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyRequest`
        """
        model = GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyRequest()
        if include_optional:
            return GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyRequest(
                access_tuple = openapi_client.models.google_cloud_policytroubleshooter_v1_access_tuple.GoogleCloudPolicytroubleshooterV1AccessTuple(
                    full_resource_name = '', 
                    permission = '', 
                    principal = '', )
            )
        else:
            return GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyRequest(
        )
        """

    def testGoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyRequest(self):
        """Test GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
