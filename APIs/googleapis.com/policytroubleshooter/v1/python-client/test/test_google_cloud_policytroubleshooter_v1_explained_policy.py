# coding: utf-8

"""
    Policy Troubleshooter API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_policytroubleshooter_v1_explained_policy import GoogleCloudPolicytroubleshooterV1ExplainedPolicy

class TestGoogleCloudPolicytroubleshooterV1ExplainedPolicy(unittest.TestCase):
    """GoogleCloudPolicytroubleshooterV1ExplainedPolicy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudPolicytroubleshooterV1ExplainedPolicy:
        """Test GoogleCloudPolicytroubleshooterV1ExplainedPolicy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudPolicytroubleshooterV1ExplainedPolicy`
        """
        model = GoogleCloudPolicytroubleshooterV1ExplainedPolicy()
        if include_optional:
            return GoogleCloudPolicytroubleshooterV1ExplainedPolicy(
                access = 'ACCESS_STATE_UNSPECIFIED',
                binding_explanations = [
                    openapi_client.models.google_cloud_policytroubleshooter_v1_binding_explanation.GoogleCloudPolicytroubleshooterV1BindingExplanation(
                        access = 'ACCESS_STATE_UNSPECIFIED', 
                        condition = openapi_client.models.google_type_expr.GoogleTypeExpr(
                            description = '', 
                            expression = '', 
                            location = '', 
                            title = '', ), 
                        memberships = {
                            'key' : openapi_client.models.google_cloud_policytroubleshooter_v1_binding_explanation_annotated_membership.GoogleCloudPolicytroubleshooterV1BindingExplanationAnnotatedMembership(
                                membership = 'MEMBERSHIP_UNSPECIFIED', 
                                relevance = 'HEURISTIC_RELEVANCE_UNSPECIFIED', )
                            }, 
                        relevance = 'HEURISTIC_RELEVANCE_UNSPECIFIED', 
                        role = '', 
                        role_permission = 'ROLE_PERMISSION_UNSPECIFIED', 
                        role_permission_relevance = 'HEURISTIC_RELEVANCE_UNSPECIFIED', )
                    ],
                full_resource_name = '',
                policy = openapi_client.models.google_iam_v1_policy.GoogleIamV1Policy(
                    audit_configs = [
                        openapi_client.models.google_iam_v1_audit_config.GoogleIamV1AuditConfig(
                            audit_log_configs = [
                                openapi_client.models.google_iam_v1_audit_log_config.GoogleIamV1AuditLogConfig(
                                    exempted_members = [
                                        ''
                                        ], 
                                    log_type = 'LOG_TYPE_UNSPECIFIED', )
                                ], 
                            service = '', )
                        ], 
                    bindings = [
                        openapi_client.models.google_iam_v1_binding.GoogleIamV1Binding(
                            condition = openapi_client.models.google_type_expr.GoogleTypeExpr(
                                description = '', 
                                expression = '', 
                                location = '', 
                                title = '', ), 
                            members = [
                                ''
                                ], 
                            role = '', )
                        ], 
                    etag = 'YQ==', 
                    version = 56, ),
                relevance = 'HEURISTIC_RELEVANCE_UNSPECIFIED'
            )
        else:
            return GoogleCloudPolicytroubleshooterV1ExplainedPolicy(
        )
        """

    def testGoogleCloudPolicytroubleshooterV1ExplainedPolicy(self):
        """Test GoogleCloudPolicytroubleshooterV1ExplainedPolicy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
