# coding: utf-8

"""
    Policy Troubleshooter API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_policytroubleshooter_v1beta_binding_explanation_annotated_membership import GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership

class TestGoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership(unittest.TestCase):
    """GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership:
        """Test GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership`
        """
        model = GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership()
        if include_optional:
            return GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership(
                membership = 'MEMBERSHIP_UNSPECIFIED',
                relevance = 'HEURISTIC_RELEVANCE_UNSPECIFIED'
            )
        else:
            return GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership(
        )
        """

    def testGoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership(self):
        """Test GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
