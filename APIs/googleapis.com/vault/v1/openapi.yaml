openapi: 3.0.0
servers:
  - url: https://vault.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: "Retention and eDiscovery for Google Workspace. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege. For example, to download an export, an account needs the **Manage Exports** privilege and the matter shared with them. "
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Google Vault API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/mermade/oas-kit
        version: 7.0.4
      format: google
      url: https://vault.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-providerName: googleapis.com
  x-serviceName: vault
externalDocs:
  url: https://developers.google.com/vault
tags:
  - name: matters
  - name: operations
paths:
  /v1/matters:
    get:
      description: Lists matters the requestor has access to.
      operationId: vault.matters.list
      parameters:
        - description: The number of matters to return in the response. Default and maximum are 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The pagination token as returned in the response.
          in: query
          name: pageToken
          schema:
            type: string
        - description: If set, lists only matters with the specified state. The default lists matters of all states.
          in: query
          name: state
          schema:
            enum:
              - STATE_UNSPECIFIED
              - OPEN
              - CLOSED
              - DELETED
            type: string
        - description: Specifies how much information about the matter to return in response.
          in: query
          name: view
          schema:
            enum:
              - VIEW_UNSPECIFIED
              - BASIC
              - FULL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMattersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      tags:
        - matters
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a matter with the given name and description. The initial state is open, and the owner is the method caller. Returns the created matter with default view.
      operationId: vault.matters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Matter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Matter"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  /v1/matters/{matterId}:
    delete:
      description: Deletes the specified matter. Returns the matter with updated state.
      operationId: vault.matters.delete
      parameters:
        - description: The matter ID
          in: path
          name: matterId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Matter"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
    get:
      description: Gets the specified matter.
      operationId: vault.matters.get
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: Specifies how much information about the matter to return in the response.
          in: query
          name: view
          schema:
            enum:
              - VIEW_UNSPECIFIED
              - BASIC
              - FULL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Matter"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      tags:
        - matters
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    put:
      description: Updates the specified matter. This updates only the name and description of the matter, identified by matter ID. Changes to any other fields are ignored. Returns the default view of the matter.
      operationId: vault.matters.update
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Matter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Matter"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  /v1/matters/{matterId}/exports:
    get:
      description: Lists details about the exports in the specified matter.
      operationId: vault.matters.exports.list
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: The number of exports to return in the response.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The pagination token as returned in the response.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListExportsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      tags:
        - matters
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an export.
      operationId: vault.matters.exports.create
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Export"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Export"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  /v1/matters/{matterId}/exports/{exportId}:
    delete:
      description: Deletes an export.
      operationId: vault.matters.exports.delete
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: The export ID.
          in: path
          name: exportId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
    get:
      description: Gets an export.
      operationId: vault.matters.exports.get
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: The export ID.
          in: path
          name: exportId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Export"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      tags:
        - matters
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/matters/{matterId}/holds:
    get:
      description: Lists the holds in a matter.
      operationId: vault.matters.holds.list
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: The number of holds to return in the response, between 0 and 100 inclusive. Leaving this empty, or as 0, is the same as **page_size** = 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The pagination token as returned in the response. An empty token means start from the beginning.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The amount of detail to return for a hold.
          in: query
          name: view
          schema:
            enum:
              - HOLD_VIEW_UNSPECIFIED
              - BASIC_HOLD
              - FULL_HOLD
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListHoldsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      tags:
        - matters
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a hold in the specified matter.
      operationId: vault.matters.holds.create
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Hold"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Hold"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  /v1/matters/{matterId}/holds/{holdId}:
    delete:
      description: Removes the specified hold and releases the accounts or organizational unit covered by the hold. If the data is not preserved by another hold or retention rule, it might be purged.
      operationId: vault.matters.holds.delete
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: The hold ID.
          in: path
          name: holdId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
    get:
      description: Gets the specified hold.
      operationId: vault.matters.holds.get
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: The hold ID.
          in: path
          name: holdId
          required: true
          schema:
            type: string
        - description: The amount of detail to return for a hold.
          in: query
          name: view
          schema:
            enum:
              - HOLD_VIEW_UNSPECIFIED
              - BASIC_HOLD
              - FULL_HOLD
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Hold"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      tags:
        - matters
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    put:
      description: Updates the scope (organizational unit or accounts) and query parameters of a hold. You cannot add accounts to a hold that covers an organizational unit, nor can you add organizational units to a hold that covers individual accounts. If you try, the unsupported values are ignored.
      operationId: vault.matters.holds.update
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: The ID of the hold.
          in: path
          name: holdId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Hold"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Hold"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  /v1/matters/{matterId}/holds/{holdId}/accounts:
    get:
      description: Lists the accounts covered by a hold. This can list only individually-specified accounts covered by the hold. If the hold covers an organizational unit, use the [Admin SDK](https://developers.google.com/admin-sdk/). to list the members of the organizational unit on hold.
      operationId: vault.matters.holds.accounts.list
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: The hold ID.
          in: path
          name: holdId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListHeldAccountsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      tags:
        - matters
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Adds an account to a hold. Accounts can be added only to a hold that does not have an organizational unit set. If you try to add an account to an organizational unit-based hold, an error is returned.
      operationId: vault.matters.holds.accounts.create
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: The hold ID.
          in: path
          name: holdId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HeldAccount"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HeldAccount"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  /v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}:
    delete:
      description: Removes an account from a hold.
      operationId: vault.matters.holds.accounts.delete
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: The hold ID.
          in: path
          name: holdId
          required: true
          schema:
            type: string
        - description: The ID of the account to remove from the hold.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/matters/{matterId}/holds/{holdId}:addHeldAccounts:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Adds accounts to a hold. Returns a list of accounts that have been successfully added. Accounts can be added only to an existing account-based hold.
      operationId: vault.matters.holds.addHeldAccounts
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: The hold ID.
          in: path
          name: holdId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddHeldAccountsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddHeldAccountsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  /v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Removes the specified accounts from a hold. Returns a list of statuses in the same order as the request.
      operationId: vault.matters.holds.removeHeldAccounts
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: The hold ID.
          in: path
          name: holdId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoveHeldAccountsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoveHeldAccountsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  /v1/matters/{matterId}/savedQueries:
    get:
      description: Lists the saved queries in a matter.
      operationId: vault.matters.savedQueries.list
      parameters:
        - description: The ID of the matter to get the saved queries for.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: The maximum number of saved queries to return.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The pagination token as returned in the previous response. An empty token means start from the beginning.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSavedQueriesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      tags:
        - matters
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a saved query.
      operationId: vault.matters.savedQueries.create
      parameters:
        - description: The ID of the matter to create the saved query in.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SavedQuery"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedQuery"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  /v1/matters/{matterId}/savedQueries/{savedQueryId}:
    delete:
      description: Deletes the specified saved query.
      operationId: vault.matters.savedQueries.delete
      parameters:
        - description: The ID of the matter to delete the saved query from.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: ID of the saved query to delete.
          in: path
          name: savedQueryId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
    get:
      description: Retrieves the specified saved query.
      operationId: vault.matters.savedQueries.get
      parameters:
        - description: The ID of the matter to get the saved query from.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: ID of the saved query to retrieve.
          in: path
          name: savedQueryId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedQuery"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      tags:
        - matters
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/matters/{matterId}:addPermissions:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Adds an account as a matter collaborator.
      operationId: vault.matters.addPermissions
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddMatterPermissionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MatterPermission"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  /v1/matters/{matterId}:close:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Closes the specified matter. Returns the matter with updated state.
      operationId: vault.matters.close
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloseMatterRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloseMatterResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  /v1/matters/{matterId}:count:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Counts the accounts processed by the specified query.
      operationId: vault.matters.count
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CountArtifactsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  /v1/matters/{matterId}:removePermissions:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Removes an account as a matter collaborator.
      operationId: vault.matters.removePermissions
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoveMatterPermissionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  /v1/matters/{matterId}:reopen:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Reopens the specified matter. Returns the matter with updated state.
      operationId: vault.matters.reopen
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReopenMatterRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReopenMatterResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  /v1/matters/{matterId}:undelete:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Undeletes the specified matter. Returns the matter with updated state.
      operationId: vault.matters.undelete
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UndeleteMatterRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Matter"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  /v1/{name}:
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: vault.operations.delete
      parameters:
        - description: The name of the operation resource to be deleted.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      tags:
        - operations
    get:
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: vault.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
          description: Successful response
      tags:
        - operations
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: vault.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOperationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      tags:
        - operations
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AccountCount:
      description: The results count for each account.
      properties:
        account:
          $ref: "#/components/schemas/UserInfo"
          description: Account owner.
        count:
          description: The number of results (messages or files) found for this account.
          format: int64
          type: string
      type: object
    AccountCountError:
      description: An error that occurred when querying a specific account
      properties:
        account:
          $ref: "#/components/schemas/UserInfo"
          description: Account owner.
        errorType:
          description: Account query error.
          enum:
            - ERROR_TYPE_UNSPECIFIED
            - WILDCARD_TOO_BROAD
            - TOO_MANY_TERMS
            - LOCATION_UNAVAILABLE
            - UNKNOWN
            - DEADLINE_EXCEEDED
          type: string
      type: object
    AccountInfo:
      description: The accounts to search
      properties:
        emails:
          description: A set of accounts to search.
          items:
            type: string
          type: array
      type: object
    AddHeldAccountResult:
      description: The status of each account creation, and the **HeldAccount**, if successful.
      properties:
        account:
          $ref: "#/components/schemas/HeldAccount"
          description: Returned when the account was successfully created.
        status:
          $ref: "#/components/schemas/Status"
          description: Reports the request status. If it failed, returns an error message.
      type: object
    AddHeldAccountsRequest:
      description: Add a list of accounts to a hold.
      properties:
        accountIds:
          description: A comma-separated list of the account IDs of the accounts to add to the hold. Specify either **emails** or **account_ids**, but not both.
          items:
            type: string
          type: array
        emails:
          description: A comma-separated list of the emails of the accounts to add to the hold. Specify either **emails** or **account_ids**, but not both.
          items:
            type: string
          type: array
      type: object
    AddHeldAccountsResponse:
      description: Response for batch create held accounts.
      properties:
        responses:
          description: The list of responses, in the same order as the batch request.
          items:
            $ref: "#/components/schemas/AddHeldAccountResult"
          type: array
      type: object
    AddMatterPermissionsRequest:
      description: Add an account with the permission specified. The role cannot be owner. If an account already has a role in the matter, the existing role is overwritten.
      properties:
        ccMe:
          description: Only relevant if **sendEmails** is **true**. To CC the requestor in the email message, set to **true**. To not CC requestor, set to **false**.
          type: boolean
        matterPermission:
          $ref: "#/components/schemas/MatterPermission"
          description: The account and its role to add.
        sendEmails:
          description: To send a notification email to the added account, set to **true**. To not send a notification email, set to **false**.
          type: boolean
      type: object
    CalendarExportOptions:
      description: The options for Calendar exports.
      properties:
        exportFormat:
          description: The file format for exported text messages.
          enum:
            - EXPORT_FORMAT_UNSPECIFIED
            - MBOX
            - PST
            - ICS
          type: string
      type: object
    CalendarOptions:
      description: Additional options for Calendar search
      properties:
        locationQuery:
          description: 'Matches only those events whose location contains all of the words in the given set. If the string contains quoted phrases, this method only matches those events whose location contain the exact phrase. Entries in the set are considered in "and". Word splitting example: ["New Zealand"] vs ["New","Zealand"] "New Zealand": matched by both "New and better Zealand": only matched by the later'
          items:
            type: string
          type: array
        minusWords:
          description: Matches only those events that do not contain any of the words in the given set in title, description, location, or attendees. Entries in the set are considered in "or".
          items:
            type: string
          type: array
        peopleQuery:
          description: Matches only those events whose attendees contain all of the words in the given set. Entries in the set are considered in "and".
          items:
            type: string
          type: array
        responseStatuses:
          description: Matches only events for which the custodian gave one of these responses. If the set is empty or contains ATTENDEE_RESPONSE_UNSPECIFIED there will be no filtering on responses.
          items:
            enum:
              - ATTENDEE_RESPONSE_UNSPECIFIED
              - ATTENDEE_RESPONSE_NEEDS_ACTION
              - ATTENDEE_RESPONSE_ACCEPTED
              - ATTENDEE_RESPONSE_DECLINED
              - ATTENDEE_RESPONSE_TENTATIVE
            type: string
          type: array
        versionDate:
          description: Search the current version of the Calendar event, but export the contents of the last version saved before 12:00 AM UTC on the specified date. Enter the date in UTC.
          format: google-datetime
          type: string
      type: object
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    CloseMatterRequest:
      description: Close a matter by ID.
      properties: {}
      type: object
    CloseMatterResponse:
      description: Response to a CloseMatterRequest.
      properties:
        matter:
          $ref: "#/components/schemas/Matter"
          description: The updated matter, with state **CLOSED**.
      type: object
    CloudStorageFile:
      description: The export file in Cloud Storage
      properties:
        bucketName:
          description: The name of the Cloud Storage bucket for the export file. You can use this value in the Cloud Storage [JSON API](https://cloud.google.com/storage/docs/json_api) or [XML API](https://cloud.google.com/storage/docs/xml-api), but not to list the bucket contents. Instead, you can [get individual export files](https://cloud.google.com/storage/docs/json_api/v1/objects/get) by object name.
          type: string
        md5Hash:
          description: The md5 hash of the file.
          type: string
        objectName:
          description: The name of the Cloud Storage object for the export file. You can use this value in the Cloud Storage [JSON API](https://cloud.google.com/storage/docs/json_api) or [XML API](https://cloud.google.com/storage/docs/xml-api).
          type: string
        size:
          description: The export file size.
          format: int64
          type: string
      type: object
    CloudStorageSink:
      description: Export sink for Cloud Storage files.
      properties:
        files:
          description: Output only. The exported files in Cloud Storage.
          items:
            $ref: "#/components/schemas/CloudStorageFile"
          type: array
      type: object
    CorpusQuery:
      description: Service-specific options for holds.
      properties:
        driveQuery:
          $ref: "#/components/schemas/HeldDriveQuery"
          description: Service-specific options for Drive holds. If set, **CorpusType** must be **DRIVE**.
        groupsQuery:
          $ref: "#/components/schemas/HeldGroupsQuery"
          description: Service-specific options for Groups holds. If set, **CorpusType** must be **GROUPS**.
        hangoutsChatQuery:
          $ref: "#/components/schemas/HeldHangoutsChatQuery"
          description: Service-specific options for Chat holds. If set, **CorpusType** must be **HANGOUTS_CHAT**.
        mailQuery:
          $ref: "#/components/schemas/HeldMailQuery"
          description: Service-specific options for Gmail holds. If set, **CorpusType** must be **MAIL**.
        voiceQuery:
          $ref: "#/components/schemas/HeldVoiceQuery"
          description: Service-specific options for Voice holds. If set, **CorpusType** must be **VOICE**.
      type: object
    CountArtifactsMetadata:
      description: Long running operation metadata for CountArtifacts.
      properties:
        endTime:
          description: End time of count operation. Available when operation is done.
          format: google-datetime
          type: string
        matterId:
          description: The matter ID of the associated matter.
          type: string
        query:
          $ref: "#/components/schemas/Query"
          description: The search query from the request.
        startTime:
          description: Creation time of count operation.
          format: google-datetime
          type: string
      type: object
    CountArtifactsRequest:
      description: Count artifacts request.
      properties:
        query:
          $ref: "#/components/schemas/Query"
          description: The search query.
        view:
          description: Sets the granularity of the count results.
          enum:
            - COUNT_RESULT_VIEW_UNSPECIFIED
            - TOTAL_COUNT
            - ALL
          type: string
      type: object
    CountArtifactsResponse:
      description: Definition of the response for method CountArtifacts.
      properties:
        groupsCountResult:
          $ref: "#/components/schemas/GroupsCountResult"
          description: Count metrics for Groups.
        mailCountResult:
          $ref: "#/components/schemas/MailCountResult"
          description: Count metrics for Gmail and classic Hangouts.
        totalCount:
          description: Total count of messages.
          format: int64
          type: string
      type: object
    DriveExportOptions:
      description: Options for Drive exports.
      properties:
        includeAccessInfo:
          description: To include access level information for users with [indirect access](https://support.google.com/vault/answer/6099459#metadata) to files, set to **true**.
          type: boolean
      type: object
    DriveOptions:
      description: Additional options for Drive search
      properties:
        clientSideEncryptedOption:
          description: Set whether the results include only content encrypted with [Google Workspace Client-side encryption](https://support.google.com/a?p=cse_ov) content, only unencrypted content, or both. Defaults to both. Currently supported for Drive.
          enum:
            - CLIENT_SIDE_ENCRYPTED_OPTION_UNSPECIFIED
            - CLIENT_SIDE_ENCRYPTED_OPTION_ANY
            - CLIENT_SIDE_ENCRYPTED_OPTION_ENCRYPTED
            - CLIENT_SIDE_ENCRYPTED_OPTION_UNENCRYPTED
          type: string
        includeSharedDrives:
          description: Set to **true** to include shared drives.
          type: boolean
        includeTeamDrives:
          deprecated: true
          description: Set to true to include Team Drive.
          type: boolean
        versionDate:
          description: Search the current version of the Drive file, but export the contents of the last version saved before 12:00 AM UTC on the specified date. Enter the date in UTC.
          format: google-datetime
          type: string
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    Export:
      description: An export. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.
      properties:
        cloudStorageSink:
          $ref: "#/components/schemas/CloudStorageSink"
          description: Output only. The sink for export files in Cloud Storage.
        createTime:
          description: Output only. The time when the export was created.
          format: google-datetime
          type: string
        exportOptions:
          $ref: "#/components/schemas/ExportOptions"
          description: Additional export options.
        id:
          description: Output only. The generated export ID.
          type: string
        matterId:
          description: Output only. The matter ID.
          type: string
        name:
          description: The export name. Don't use special characters (~!$'(),;@:/?) in the name, they can prevent you from downloading exports.
          type: string
        parentExportId:
          description: Output only. Identifies the parent export that spawned this child export. This is only set on child exports.
          readOnly: true
          type: string
        query:
          $ref: "#/components/schemas/Query"
          description: The query parameters used to create the export.
        requester:
          $ref: "#/components/schemas/UserInfo"
          description: Output only. The requester of the export.
        stats:
          $ref: "#/components/schemas/ExportStats"
          description: Output only. Details about the export progress and size.
        status:
          description: Output only. The status of the export.
          enum:
            - EXPORT_STATUS_UNSPECIFIED
            - COMPLETED
            - FAILED
            - IN_PROGRESS
          type: string
      type: object
    ExportOptions:
      description: Additional options for exports
      properties:
        calendarOptions:
          $ref: "#/components/schemas/CalendarExportOptions"
          description: Option available for Calendar export.
        driveOptions:
          $ref: "#/components/schemas/DriveExportOptions"
          description: Options for Drive exports.
        groupsOptions:
          $ref: "#/components/schemas/GroupsExportOptions"
          description: Options for Groups exports.
        hangoutsChatOptions:
          $ref: "#/components/schemas/HangoutsChatExportOptions"
          description: Options for Chat exports.
        mailOptions:
          $ref: "#/components/schemas/MailExportOptions"
          description: Options for Gmail exports.
        region:
          description: The requested data region for the export.
          enum:
            - EXPORT_REGION_UNSPECIFIED
            - ANY
            - US
            - EUROPE
          type: string
        voiceOptions:
          $ref: "#/components/schemas/VoiceExportOptions"
          description: Options for Voice exports.
      type: object
    ExportStats:
      description: Progress information for an export.
      properties:
        exportedArtifactCount:
          description: The number of messages or files already processed for export.
          format: int64
          type: string
        sizeInBytes:
          description: The size of export in bytes.
          format: int64
          type: string
        totalArtifactCount:
          description: The number of messages or files to be exported.
          format: int64
          type: string
      type: object
    GroupsCountResult:
      description: Groups specific count metrics.
      properties:
        accountCountErrors:
          description: Error occurred when querying these accounts.
          items:
            $ref: "#/components/schemas/AccountCountError"
          type: array
        accountCounts:
          description: Subtotal count per matching account that have more than zero messages.
          items:
            $ref: "#/components/schemas/AccountCount"
          type: array
        matchingAccountsCount:
          description: Total number of accounts that can be queried and have more than zero messages.
          format: int64
          type: string
        nonQueryableAccounts:
          description: When **DataScope** is **HELD_DATA**, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set.
          items:
            type: string
          type: array
        queriedAccountsCount:
          description: Total number of accounts involved in this count operation.
          format: int64
          type: string
      type: object
    GroupsExportOptions:
      description: Options for Groups exports.
      properties:
        exportFormat:
          description: The file format for exported messages.
          enum:
            - EXPORT_FORMAT_UNSPECIFIED
            - MBOX
            - PST
            - ICS
          type: string
      type: object
    HangoutsChatExportOptions:
      description: Options for Chat exports.
      properties:
        exportFormat:
          description: The file format for exported messages.
          enum:
            - EXPORT_FORMAT_UNSPECIFIED
            - MBOX
            - PST
            - ICS
          type: string
      type: object
    HangoutsChatInfo:
      description: The Chat spaces to search
      properties:
        roomId:
          description: A list of Chat spaces IDs, as provided by the [Chat API](https://developers.google.com/chat). There is a limit of exporting from 500 Chat spaces per request.
          items:
            type: string
          type: array
      type: object
    HangoutsChatOptions:
      description: Additional options for Google Chat search
      properties:
        includeRooms:
          description: For searches by account or organizational unit, set to **true** to include rooms.
          type: boolean
      type: object
    HeldAccount:
      description: An account covered by a hold. This structure is immutable. It can be an individual account or a Google Group, depending on the service. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.
      properties:
        accountId:
          description: The account ID, as provided by the [Admin SDK](https://developers.google.com/admin-sdk/).
          type: string
        email:
          description: The primary email address of the account. If used as an input, this takes precedence over **accountId**.
          type: string
        firstName:
          description: Output only. The first name of the account holder.
          type: string
        holdTime:
          description: Output only. When the account was put on hold.
          format: google-datetime
          type: string
        lastName:
          description: Output only. The last name of the account holder.
          type: string
      type: object
    HeldDriveQuery:
      description: Options for Drive holds.
      properties:
        includeSharedDriveFiles:
          description: To include files in shared drives in the hold, set to **true**.
          type: boolean
        includeTeamDriveFiles:
          deprecated: true
          description: To include files in Team Drives in the hold, set to **true**.
          type: boolean
      type: object
    HeldGroupsQuery:
      description: Query options for group holds.
      properties:
        endTime:
          description: The end time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.
          format: google-datetime
          type: string
        startTime:
          description: The start time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.
          format: google-datetime
          type: string
        terms:
          description: The [search operators](https://support.google.com/vault/answer/2474474) used to refine the messages covered by the hold.
          type: string
      type: object
    HeldHangoutsChatQuery:
      description: Options for Chat holds.
      properties:
        includeRooms:
          description: To include messages in Chat spaces the user was a member of, set to **true**.
          type: boolean
      type: object
    HeldMailQuery:
      description: Query options for Gmail holds.
      properties:
        endTime:
          description: The end time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.
          format: google-datetime
          type: string
        startTime:
          description: The start time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.
          format: google-datetime
          type: string
        terms:
          description: The [search operators](https://support.google.com/vault/answer/2474474) used to refine the messages covered by the hold.
          type: string
      type: object
    HeldOrgUnit:
      description: The organizational unit covered by a hold. This structure is immutable.
      properties:
        holdTime:
          description: When the organizational unit was put on hold. This property is immutable.
          format: google-datetime
          type: string
        orgUnitId:
          description: The organizational unit's immutable ID as provided by the [Admin SDK](https://developers.google.com/admin-sdk/).
          type: string
      type: object
    HeldVoiceQuery:
      description: Options for Voice holds.
      properties:
        coveredData:
          description: A list of data types covered by the hold. Should be non-empty. Order does not matter and duplicates are ignored.
          items:
            enum:
              - COVERED_DATA_UNSPECIFIED
              - TEXT_MESSAGES
              - VOICEMAILS
              - CALL_LOGS
            type: string
          type: array
      type: object
    Hold:
      description: A hold. A hold prevents the specified Google Workspace service from purging data for specific accounts or all members of an organizational unit. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.
      properties:
        accounts:
          description: If set, the hold applies to the specified accounts and **orgUnit** must be empty.
          items:
            $ref: "#/components/schemas/HeldAccount"
          type: array
        corpus:
          description: The service to be searched.
          enum:
            - CORPUS_TYPE_UNSPECIFIED
            - DRIVE
            - MAIL
            - GROUPS
            - HANGOUTS_CHAT
            - VOICE
            - CALENDAR
          type: string
        holdId:
          description: The unique immutable ID of the hold. Assigned during creation.
          type: string
        name:
          description: The name of the hold.
          type: string
        orgUnit:
          $ref: "#/components/schemas/HeldOrgUnit"
          description: If set, the hold applies to all members of the organizational unit and **accounts** must be empty. This property is mutable. For Groups holds, set **accounts**.
        query:
          $ref: "#/components/schemas/CorpusQuery"
          description: Service-specific options. If set, **CorpusQuery** must match **CorpusType**.
        updateTime:
          description: The last time this hold was modified.
          format: google-datetime
          type: string
      type: object
    ListExportsResponse:
      description: The exports for a matter.
      properties:
        exports:
          description: The list of exports.
          items:
            $ref: "#/components/schemas/Export"
          type: array
        nextPageToken:
          description: Page token to retrieve the next page of results in the list.
          type: string
      type: object
    ListHeldAccountsResponse:
      description: Returns a list of the accounts covered by a hold.
      properties:
        accounts:
          description: The held accounts on a hold.
          items:
            $ref: "#/components/schemas/HeldAccount"
          type: array
      type: object
    ListHoldsResponse:
      description: The holds for a matter.
      properties:
        holds:
          description: The list of holds.
          items:
            $ref: "#/components/schemas/Hold"
          type: array
        nextPageToken:
          description: Page token to retrieve the next page of results in the list. If this is empty, then there are no more holds to list.
          type: string
      type: object
    ListMattersResponse:
      description: Provides the list of matters.
      properties:
        matters:
          description: List of matters.
          items:
            $ref: "#/components/schemas/Matter"
          type: array
        nextPageToken:
          description: Page token to retrieve the next page of results in the list.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    ListSavedQueriesResponse:
      description: Definition of the response for method ListSaveQuery.
      properties:
        nextPageToken:
          description: Page token to retrieve the next page of results in the list. If this is empty, then there are no more saved queries to list.
          type: string
        savedQueries:
          description: List of saved queries.
          items:
            $ref: "#/components/schemas/SavedQuery"
          type: array
      type: object
    MailCountResult:
      description: Gmail and classic Hangouts-specific count metrics.
      properties:
        accountCountErrors:
          description: Errors occurred when querying these accounts.
          items:
            $ref: "#/components/schemas/AccountCountError"
          type: array
        accountCounts:
          description: Subtotal count per matching account that have more than zero messages.
          items:
            $ref: "#/components/schemas/AccountCount"
          type: array
        matchingAccountsCount:
          description: Total number of accounts that can be queried and have more than zero messages.
          format: int64
          type: string
        nonQueryableAccounts:
          description: When **DataScope** is **HELD_DATA** and when account emails are passed in explicitly, the list of accounts in the request that are not queried because they are not on hold in the matter. For other data scopes, this field is not set.
          items:
            type: string
          type: array
        queriedAccountsCount:
          description: Total number of accounts involved in this count operation.
          format: int64
          type: string
      type: object
    MailExportOptions:
      description: Options for Gmail exports.
      properties:
        exportFormat:
          description: The file format for exported messages.
          enum:
            - EXPORT_FORMAT_UNSPECIFIED
            - MBOX
            - PST
            - ICS
          type: string
        exportLinkedDriveFiles:
          description: Optional. To enable exporting linked Drive files, set to **true**.
          type: boolean
        showConfidentialModeContent:
          description: To export confidential mode content, set to **true**.
          type: boolean
        useNewExport:
          description: To use the new export system, set to **true**.
          type: boolean
      type: object
    MailOptions:
      description: Additional options for Gmail search
      properties:
        clientSideEncryptedOption:
          description: Specifies whether the results should include encrypted content, unencrypted content, or both. Defaults to including both.
          enum:
            - CLIENT_SIDE_ENCRYPTED_OPTION_UNSPECIFIED
            - CLIENT_SIDE_ENCRYPTED_OPTION_ANY
            - CLIENT_SIDE_ENCRYPTED_OPTION_ENCRYPTED
            - CLIENT_SIDE_ENCRYPTED_OPTION_UNENCRYPTED
          type: string
        excludeDrafts:
          description: Set to **true** to exclude drafts.
          type: boolean
      type: object
    Matter:
      description: Represents a matter. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.
      properties:
        description:
          description: An optional description for the matter.
          type: string
        matterId:
          description: The matter ID, which is generated by the server. Leave blank when creating a matter.
          type: string
        matterPermissions:
          description: Lists the users and their permission for the matter. Currently there is no programmer defined limit on the number of permissions a matter can have.
          items:
            $ref: "#/components/schemas/MatterPermission"
          type: array
        name:
          description: The name of the matter.
          type: string
        state:
          description: The state of the matter.
          enum:
            - STATE_UNSPECIFIED
            - OPEN
            - CLOSED
            - DELETED
          type: string
      type: object
    MatterPermission:
      description: Users can be matter owners or collaborators. Each matter has only one owner. All others users who can access the matter are collaborators. When an account is purged, its corresponding MatterPermission resources cease to exist.
      properties:
        accountId:
          description: The account ID, as provided by the [Admin SDK](https://developers.google.com/admin-sdk/).
          type: string
        role:
          description: The user's role for the matter.
          enum:
            - ROLE_UNSPECIFIED
            - COLLABORATOR
            - OWNER
          type: string
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    OrgUnitInfo:
      description: The organizational unit to search
      properties:
        orgUnitId:
          description: The name of the organizational unit to search, as provided by the [Admin SDK Directory API](https://developers.google.com/admin-sdk/directory/).
          type: string
      type: object
    Query:
      description: The query definition used for search and export.
      properties:
        accountInfo:
          $ref: "#/components/schemas/AccountInfo"
          description: Required when **SearchMethod** is **ACCOUNT**.
        calendarOptions:
          $ref: "#/components/schemas/CalendarOptions"
          description: Set Calendar search-specific options.
        corpus:
          description: The Google Workspace service to search.
          enum:
            - CORPUS_TYPE_UNSPECIFIED
            - DRIVE
            - MAIL
            - GROUPS
            - HANGOUTS_CHAT
            - VOICE
            - CALENDAR
          type: string
        dataScope:
          description: The data source to search.
          enum:
            - DATA_SCOPE_UNSPECIFIED
            - ALL_DATA
            - HELD_DATA
            - UNPROCESSED_DATA
          type: string
        driveOptions:
          $ref: "#/components/schemas/DriveOptions"
          description: Set Drive search-specific options.
        endTime:
          description: The end time for the search query. Specify in GMT. The value is rounded to 12 AM on the specified date.
          format: google-datetime
          type: string
        hangoutsChatInfo:
          $ref: "#/components/schemas/HangoutsChatInfo"
          description: Required when **SearchMethod** is **ROOM**. (read-only)
        hangoutsChatOptions:
          $ref: "#/components/schemas/HangoutsChatOptions"
          description: Set Chat search-specific options. (read-only)
        mailOptions:
          $ref: "#/components/schemas/MailOptions"
          description: Set Gmail search-specific options.
        method:
          description: The entity to search. This field replaces **searchMethod** to support shared drives. When **searchMethod** is **TEAM_DRIVE**, the response of this field is **SHARED_DRIVE**.
          enum:
            - SEARCH_METHOD_UNSPECIFIED
            - ACCOUNT
            - ORG_UNIT
            - TEAM_DRIVE
            - ENTIRE_ORG
            - ROOM
            - SITES_URL
            - SHARED_DRIVE
          type: string
          x-enumDeprecated:
            - false
            - false
            - false
            - true
            - false
            - false
            - false
            - false
        orgUnitInfo:
          $ref: "#/components/schemas/OrgUnitInfo"
          description: Required when **SearchMethod** is **ORG_UNIT**.
        searchMethod:
          deprecated: true
          description: The search method to use.
          enum:
            - SEARCH_METHOD_UNSPECIFIED
            - ACCOUNT
            - ORG_UNIT
            - TEAM_DRIVE
            - ENTIRE_ORG
            - ROOM
            - SITES_URL
            - SHARED_DRIVE
          type: string
          x-enumDeprecated:
            - false
            - false
            - false
            - true
            - false
            - false
            - false
            - false
        sharedDriveInfo:
          $ref: "#/components/schemas/SharedDriveInfo"
          description: Required when **SearchMethod** is **SHARED_DRIVE**.
        sitesUrlInfo:
          $ref: "#/components/schemas/SitesUrlInfo"
          description: Required when **SearchMethod** is **SITES_URL**.
        startTime:
          description: The start time for the search query. Specify in GMT. The value is rounded to 12 AM on the specified date.
          format: google-datetime
          type: string
        teamDriveInfo:
          $ref: "#/components/schemas/TeamDriveInfo"
          deprecated: true
          description: Required when **SearchMethod** is **TEAM_DRIVE**.
        terms:
          description: Service-specific [search operators](https://support.google.com/vault/answer/2474474) to filter search results.
          type: string
        timeZone:
          description: The time zone name. It should be an IANA TZ name, such as "America/Los_Angeles". For a list of time zone names, see [Time Zone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For more information about how Vault uses time zones, see [the Vault help center](https://support.google.com/vault/answer/6092995#time).
          type: string
        voiceOptions:
          $ref: "#/components/schemas/VoiceOptions"
          description: Set Voice search-specific options.
      type: object
    RemoveHeldAccountsRequest:
      description: Remove a list of accounts from a hold.
      properties:
        accountIds:
          description: The account IDs of the accounts to remove from the hold.
          items:
            type: string
          type: array
      type: object
    RemoveHeldAccountsResponse:
      description: Response for batch delete held accounts.
      properties:
        statuses:
          description: A list of statuses for the deleted accounts. Results have the same order as the request.
          items:
            $ref: "#/components/schemas/Status"
          type: array
      type: object
    RemoveMatterPermissionsRequest:
      description: Remove an account as a matter collaborator.
      properties:
        accountId:
          description: The account ID.
          type: string
      type: object
    ReopenMatterRequest:
      description: Reopen a matter by ID.
      properties: {}
      type: object
    ReopenMatterResponse:
      description: Response to a ReopenMatterRequest.
      properties:
        matter:
          $ref: "#/components/schemas/Matter"
          description: The updated matter, with state **OPEN**.
      type: object
    SavedQuery:
      description: The definition of a saved query. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.
      properties:
        createTime:
          description: Output only. The server-generated timestamp when the saved query was created.
          format: google-datetime
          type: string
        displayName:
          description: The name of the saved query.
          type: string
        matterId:
          description: Output only. The matter ID of the matter the saved query is saved in. The server does not use this field during create and always uses matter ID in the URL.
          type: string
        query:
          $ref: "#/components/schemas/Query"
          description: The search parameters of the saved query.
        savedQueryId:
          description: A unique identifier for the saved query.
          type: string
      type: object
    SharedDriveInfo:
      description: The shared drives to search
      properties:
        sharedDriveIds:
          description: A list of shared drive IDs, as provided by the [Drive API](https://developers.google.com/drive).
          items:
            type: string
          type: array
      type: object
    SitesUrlInfo:
      description: The published site URLs of new Google Sites to search
      properties:
        urls:
          description: A list of published site URLs.
          items:
            type: string
          type: array
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    TeamDriveInfo:
      deprecated: true
      description: Team Drives to search
      properties:
        teamDriveIds:
          deprecated: true
          description: List of Team Drive IDs, as provided by the [Drive API](https://developers.google.com/drive).
          items:
            type: string
          type: array
      type: object
    UndeleteMatterRequest:
      description: Undelete a matter by ID.
      properties: {}
      type: object
    UserInfo:
      description: User's information.
      properties:
        displayName:
          description: The displayed name of the user.
          type: string
        email:
          description: The email address of the user.
          type: string
      type: object
    VoiceExportOptions:
      description: The options for Voice exports.
      properties:
        exportFormat:
          description: The file format for exported text messages.
          enum:
            - EXPORT_FORMAT_UNSPECIFIED
            - MBOX
            - PST
            - ICS
          type: string
      type: object
    VoiceOptions:
      description: Additional options for Voice search
      properties:
        coveredData:
          description: Datatypes to search
          items:
            enum:
              - COVERED_DATA_UNSPECIFIED
              - TEXT_MESSAGES
              - VOICEMAILS
              - CALL_LOGS
            type: string
          type: array
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/ediscovery: Manage your eDiscovery data
            https://www.googleapis.com/auth/ediscovery.readonly: View your eDiscovery data
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/ediscovery: Manage your eDiscovery data
            https://www.googleapis.com/auth/ediscovery.readonly: View your eDiscovery data
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
