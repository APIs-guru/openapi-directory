# coding: utf-8

"""
    Google Vault API

    Retention and eDiscovery for Google Workspace. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege. For example, to download an export, an account needs the **Manage Exports** privilege and the matter shared with them. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.hold import Hold

class TestHold(unittest.TestCase):
    """Hold unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Hold:
        """Test Hold
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Hold`
        """
        model = Hold()
        if include_optional:
            return Hold(
                accounts = [
                    openapi_client.models.held_account.HeldAccount(
                        account_id = '', 
                        email = '', 
                        first_name = '', 
                        hold_time = '', 
                        last_name = '', )
                    ],
                corpus = 'CORPUS_TYPE_UNSPECIFIED',
                hold_id = '',
                name = '',
                org_unit = openapi_client.models.held_org_unit.HeldOrgUnit(
                    hold_time = '', 
                    org_unit_id = '', ),
                query = openapi_client.models.corpus_query.CorpusQuery(
                    drive_query = openapi_client.models.held_drive_query.HeldDriveQuery(
                        include_shared_drive_files = True, 
                        include_team_drive_files = True, ), 
                    groups_query = openapi_client.models.held_groups_query.HeldGroupsQuery(
                        end_time = '', 
                        start_time = '', 
                        terms = '', ), 
                    hangouts_chat_query = openapi_client.models.held_hangouts_chat_query.HeldHangoutsChatQuery(
                        include_rooms = True, ), 
                    mail_query = openapi_client.models.held_mail_query.HeldMailQuery(
                        end_time = '', 
                        start_time = '', 
                        terms = '', ), 
                    voice_query = openapi_client.models.held_voice_query.HeldVoiceQuery(
                        covered_data = [
                            'COVERED_DATA_UNSPECIFIED'
                            ], ), ),
                update_time = ''
            )
        else:
            return Hold(
        )
        """

    def testHold(self):
        """Test Hold"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
