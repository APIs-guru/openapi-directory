# coding: utf-8

"""
    Google Vault API

    Retention and eDiscovery for Google Workspace. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege. For example, to download an export, an account needs the **Manage Exports** privilege and the matter shared with them. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.export_options import ExportOptions

class TestExportOptions(unittest.TestCase):
    """ExportOptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExportOptions:
        """Test ExportOptions
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExportOptions`
        """
        model = ExportOptions()
        if include_optional:
            return ExportOptions(
                calendar_options = openapi_client.models.calendar_export_options.CalendarExportOptions(
                    export_format = 'EXPORT_FORMAT_UNSPECIFIED', ),
                drive_options = openapi_client.models.drive_export_options.DriveExportOptions(
                    include_access_info = True, ),
                groups_options = openapi_client.models.groups_export_options.GroupsExportOptions(
                    export_format = 'EXPORT_FORMAT_UNSPECIFIED', ),
                hangouts_chat_options = openapi_client.models.hangouts_chat_export_options.HangoutsChatExportOptions(
                    export_format = 'EXPORT_FORMAT_UNSPECIFIED', ),
                mail_options = openapi_client.models.mail_export_options.MailExportOptions(
                    export_format = 'EXPORT_FORMAT_UNSPECIFIED', 
                    export_linked_drive_files = True, 
                    show_confidential_mode_content = True, 
                    use_new_export = True, ),
                region = 'EXPORT_REGION_UNSPECIFIED',
                voice_options = openapi_client.models.voice_export_options.VoiceExportOptions(
                    export_format = 'EXPORT_FORMAT_UNSPECIFIED', )
            )
        else:
            return ExportOptions(
        )
        """

    def testExportOptions(self):
        """Test ExportOptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
