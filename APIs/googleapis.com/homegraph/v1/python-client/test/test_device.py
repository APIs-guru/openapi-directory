# coding: utf-8

"""
    HomeGraph API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.device import Device

class TestDevice(unittest.TestCase):
    """Device unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Device:
        """Test Device
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Device`
        """
        model = Device()
        if include_optional:
            return Device(
                attributes = {
                    'key' : null
                    },
                custom_data = {
                    'key' : null
                    },
                device_info = openapi_client.models.device_info.DeviceInfo(
                    hw_version = '', 
                    manufacturer = '', 
                    model = '', 
                    sw_version = '', ),
                id = '',
                name = openapi_client.models.device_names.DeviceNames(
                    default_names = [
                        ''
                        ], 
                    name = '', 
                    nicknames = [
                        ''
                        ], ),
                notification_supported_by_agent = True,
                other_device_ids = [
                    openapi_client.models.agent_other_device_id.AgentOtherDeviceId(
                        agent_id = '', 
                        device_id = '', )
                    ],
                room_hint = '',
                structure_hint = '',
                traits = [
                    ''
                    ],
                type = '',
                will_report_state = True
            )
        else:
            return Device(
        )
        """

    def testDevice(self):
        """Test Device"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
