# coding: utf-8

"""
    Cloud Run Admin API

    Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictInt, StrictStr, field_validator
from typing import Any, ClassVar, Dict, List, Optional
from openapi_client.models.google_cloud_run_v2_condition import GoogleCloudRunV2Condition
from openapi_client.models.google_cloud_run_v2_container import GoogleCloudRunV2Container
from openapi_client.models.google_cloud_run_v2_revision_scaling import GoogleCloudRunV2RevisionScaling
from openapi_client.models.google_cloud_run_v2_revision_scaling_status import GoogleCloudRunV2RevisionScalingStatus
from openapi_client.models.google_cloud_run_v2_volume import GoogleCloudRunV2Volume
from openapi_client.models.google_cloud_run_v2_vpc_access import GoogleCloudRunV2VpcAccess
from typing import Optional, Set
from typing_extensions import Self

class GoogleCloudRunV2Revision(BaseModel):
    """
    A Revision is an immutable snapshot of code and configuration. A Revision references a container image. Revisions are only created by updates to its parent Service.
    """ # noqa: E501
    annotations: Optional[Dict[str, StrictStr]] = Field(default=None, description="Output only. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.")
    conditions: Optional[List[GoogleCloudRunV2Condition]] = Field(default=None, description="Output only. The Condition of this Revision, containing its readiness status, and detailed error information in case it did not reach a serving state.")
    containers: Optional[List[GoogleCloudRunV2Container]] = Field(default=None, description="Holds the single container that defines the unit of execution for this Revision.")
    create_time: Optional[StrictStr] = Field(default=None, description="Output only. The creation time.", alias="createTime")
    delete_time: Optional[StrictStr] = Field(default=None, description="Output only. For a deleted resource, the deletion time. It is only populated as a response to a Delete request.", alias="deleteTime")
    encryption_key: Optional[StrictStr] = Field(default=None, description="A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek", alias="encryptionKey")
    encryption_key_revocation_action: Optional[StrictStr] = Field(default=None, description="The action to take if the encryption key is revoked.", alias="encryptionKeyRevocationAction")
    encryption_key_shutdown_duration: Optional[StrictStr] = Field(default=None, description="If encryption_key_revocation_action is SHUTDOWN, the duration before shutting down all instances. The minimum increment is 1 hour.", alias="encryptionKeyShutdownDuration")
    etag: Optional[StrictStr] = Field(default=None, description="Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.")
    execution_environment: Optional[StrictStr] = Field(default=None, description="The execution environment being used to host this Revision.", alias="executionEnvironment")
    expire_time: Optional[StrictStr] = Field(default=None, description="Output only. For a deleted resource, the time after which it will be permamently deleted. It is only populated as a response to a Delete request.", alias="expireTime")
    generation: Optional[StrictStr] = Field(default=None, description="Output only. A number that monotonically increases every time the user modifies the desired state.")
    labels: Optional[Dict[str, StrictStr]] = Field(default=None, description="Output only. Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.")
    launch_stage: Optional[StrictStr] = Field(default=None, description="The least stable launch stage needed to create this resource, as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. Note that this value might not be what was used as input. For example, if ALPHA was provided as input in the parent resource, but only BETA and GA-level features are were, this field will be BETA.", alias="launchStage")
    log_uri: Optional[StrictStr] = Field(default=None, description="Output only. The Google Console URI to obtain logs for the Revision.", alias="logUri")
    max_instance_request_concurrency: Optional[StrictInt] = Field(default=None, description="Sets the maximum number of requests that each serving instance can receive.", alias="maxInstanceRequestConcurrency")
    name: Optional[StrictStr] = Field(default=None, description="Output only. The unique name of this Revision.")
    observed_generation: Optional[StrictStr] = Field(default=None, description="Output only. The generation of this Revision currently serving traffic. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.", alias="observedGeneration")
    reconciling: Optional[StrictBool] = Field(default=None, description="Output only. Indicates whether the resource's reconciliation is still in progress. See comments in `Service.reconciling` for additional information on reconciliation process in Cloud Run.")
    satisfies_pzs: Optional[StrictBool] = Field(default=None, description="Output only. Reserved for future use.", alias="satisfiesPzs")
    scaling: Optional[GoogleCloudRunV2RevisionScaling] = None
    scaling_status: Optional[GoogleCloudRunV2RevisionScalingStatus] = Field(default=None, alias="scalingStatus")
    service: Optional[StrictStr] = Field(default=None, description="Output only. The name of the parent service.")
    service_account: Optional[StrictStr] = Field(default=None, description="Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has.", alias="serviceAccount")
    session_affinity: Optional[StrictBool] = Field(default=None, description="Enable session affinity.", alias="sessionAffinity")
    timeout: Optional[StrictStr] = Field(default=None, description="Max allowed time for an instance to respond to a request.")
    uid: Optional[StrictStr] = Field(default=None, description="Output only. Server assigned unique identifier for the Revision. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.")
    update_time: Optional[StrictStr] = Field(default=None, description="Output only. The last-modified time.", alias="updateTime")
    volumes: Optional[List[GoogleCloudRunV2Volume]] = Field(default=None, description="A list of Volumes to make available to containers.")
    vpc_access: Optional[GoogleCloudRunV2VpcAccess] = Field(default=None, alias="vpcAccess")
    __properties: ClassVar[List[str]] = ["annotations", "conditions", "containers", "createTime", "deleteTime", "encryptionKey", "encryptionKeyRevocationAction", "encryptionKeyShutdownDuration", "etag", "executionEnvironment", "expireTime", "generation", "labels", "launchStage", "logUri", "maxInstanceRequestConcurrency", "name", "observedGeneration", "reconciling", "satisfiesPzs", "scaling", "scalingStatus", "service", "serviceAccount", "sessionAffinity", "timeout", "uid", "updateTime", "volumes", "vpcAccess"]

    @field_validator('encryption_key_revocation_action')
    def encryption_key_revocation_action_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in set(['ENCRYPTION_KEY_REVOCATION_ACTION_UNSPECIFIED', 'PREVENT_NEW', 'SHUTDOWN']):
            raise ValueError("must be one of enum values ('ENCRYPTION_KEY_REVOCATION_ACTION_UNSPECIFIED', 'PREVENT_NEW', 'SHUTDOWN')")
        return value

    @field_validator('execution_environment')
    def execution_environment_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in set(['EXECUTION_ENVIRONMENT_UNSPECIFIED', 'EXECUTION_ENVIRONMENT_GEN1', 'EXECUTION_ENVIRONMENT_GEN2']):
            raise ValueError("must be one of enum values ('EXECUTION_ENVIRONMENT_UNSPECIFIED', 'EXECUTION_ENVIRONMENT_GEN1', 'EXECUTION_ENVIRONMENT_GEN2')")
        return value

    @field_validator('launch_stage')
    def launch_stage_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in set(['LAUNCH_STAGE_UNSPECIFIED', 'UNIMPLEMENTED', 'PRELAUNCH', 'EARLY_ACCESS', 'ALPHA', 'BETA', 'GA', 'DEPRECATED']):
            raise ValueError("must be one of enum values ('LAUNCH_STAGE_UNSPECIFIED', 'UNIMPLEMENTED', 'PRELAUNCH', 'EARLY_ACCESS', 'ALPHA', 'BETA', 'GA', 'DEPRECATED')")
        return value

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of GoogleCloudRunV2Revision from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        """
        excluded_fields: Set[str] = set([
            "annotations",
            "conditions",
            "create_time",
            "delete_time",
            "etag",
            "expire_time",
            "generation",
            "labels",
            "log_uri",
            "name",
            "observed_generation",
            "reconciling",
            "satisfies_pzs",
            "service",
            "uid",
            "update_time",
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of each item in conditions (list)
        _items = []
        if self.conditions:
            for _item_conditions in self.conditions:
                if _item_conditions:
                    _items.append(_item_conditions.to_dict())
            _dict['conditions'] = _items
        # override the default output from pydantic by calling `to_dict()` of each item in containers (list)
        _items = []
        if self.containers:
            for _item_containers in self.containers:
                if _item_containers:
                    _items.append(_item_containers.to_dict())
            _dict['containers'] = _items
        # override the default output from pydantic by calling `to_dict()` of scaling
        if self.scaling:
            _dict['scaling'] = self.scaling.to_dict()
        # override the default output from pydantic by calling `to_dict()` of scaling_status
        if self.scaling_status:
            _dict['scalingStatus'] = self.scaling_status.to_dict()
        # override the default output from pydantic by calling `to_dict()` of each item in volumes (list)
        _items = []
        if self.volumes:
            for _item_volumes in self.volumes:
                if _item_volumes:
                    _items.append(_item_volumes.to_dict())
            _dict['volumes'] = _items
        # override the default output from pydantic by calling `to_dict()` of vpc_access
        if self.vpc_access:
            _dict['vpcAccess'] = self.vpc_access.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of GoogleCloudRunV2Revision from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "annotations": obj.get("annotations"),
            "conditions": [GoogleCloudRunV2Condition.from_dict(_item) for _item in obj["conditions"]] if obj.get("conditions") is not None else None,
            "containers": [GoogleCloudRunV2Container.from_dict(_item) for _item in obj["containers"]] if obj.get("containers") is not None else None,
            "createTime": obj.get("createTime"),
            "deleteTime": obj.get("deleteTime"),
            "encryptionKey": obj.get("encryptionKey"),
            "encryptionKeyRevocationAction": obj.get("encryptionKeyRevocationAction"),
            "encryptionKeyShutdownDuration": obj.get("encryptionKeyShutdownDuration"),
            "etag": obj.get("etag"),
            "executionEnvironment": obj.get("executionEnvironment"),
            "expireTime": obj.get("expireTime"),
            "generation": obj.get("generation"),
            "labels": obj.get("labels"),
            "launchStage": obj.get("launchStage"),
            "logUri": obj.get("logUri"),
            "maxInstanceRequestConcurrency": obj.get("maxInstanceRequestConcurrency"),
            "name": obj.get("name"),
            "observedGeneration": obj.get("observedGeneration"),
            "reconciling": obj.get("reconciling"),
            "satisfiesPzs": obj.get("satisfiesPzs"),
            "scaling": GoogleCloudRunV2RevisionScaling.from_dict(obj["scaling"]) if obj.get("scaling") is not None else None,
            "scalingStatus": GoogleCloudRunV2RevisionScalingStatus.from_dict(obj["scalingStatus"]) if obj.get("scalingStatus") is not None else None,
            "service": obj.get("service"),
            "serviceAccount": obj.get("serviceAccount"),
            "sessionAffinity": obj.get("sessionAffinity"),
            "timeout": obj.get("timeout"),
            "uid": obj.get("uid"),
            "updateTime": obj.get("updateTime"),
            "volumes": [GoogleCloudRunV2Volume.from_dict(_item) for _item in obj["volumes"]] if obj.get("volumes") is not None else None,
            "vpcAccess": GoogleCloudRunV2VpcAccess.from_dict(obj["vpcAccess"]) if obj.get("vpcAccess") is not None else None
        })
        return _obj


