# coding: utf-8

"""
    Cloud Billing API

    Allows developers to manage billing for their Google Cloud Platform projects programmatically.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.workload_cost_estimate import WorkloadCostEstimate

class TestWorkloadCostEstimate(unittest.TestCase):
    """WorkloadCostEstimate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WorkloadCostEstimate:
        """Test WorkloadCostEstimate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WorkloadCostEstimate`
        """
        model = WorkloadCostEstimate()
        if include_optional:
            return WorkloadCostEstimate(
                name = '',
                sku_cost_estimates = [
                    openapi_client.models.sku_cost_estimate.SkuCostEstimate(
                        cost_estimate = openapi_client.models.cost_estimate.CostEstimate(
                            credit_estimates = [
                                openapi_client.models.credit_estimate.CreditEstimate(
                                    credit_amount = openapi_client.models.money.Money(
                                        currency_code = '', 
                                        nanos = 56, 
                                        units = '', ), 
                                    credit_description = '', 
                                    credit_type = '', )
                                ], 
                            net_cost_estimate = openapi_client.models.money.Money(
                                currency_code = '', 
                                nanos = 56, 
                                units = '', ), 
                            pre_credit_cost_estimate = , ), 
                        sku = '', 
                        usage_amount = 1.337, 
                        usage_unit = '', )
                    ],
                workload_total_cost_estimate = openapi_client.models.cost_estimate.CostEstimate(
                    credit_estimates = [
                        openapi_client.models.credit_estimate.CreditEstimate(
                            credit_amount = openapi_client.models.money.Money(
                                currency_code = '', 
                                nanos = 56, 
                                units = '', ), 
                            credit_description = '', 
                            credit_type = '', )
                        ], 
                    net_cost_estimate = openapi_client.models.money.Money(
                        currency_code = '', 
                        nanos = 56, 
                        units = '', ), 
                    pre_credit_cost_estimate = , )
            )
        else:
            return WorkloadCostEstimate(
        )
        """

    def testWorkloadCostEstimate(self):
        """Test WorkloadCostEstimate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
