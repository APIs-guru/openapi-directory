# coding: utf-8

"""
    Cloud Billing API

    Allows developers to manage billing for their Google Cloud Platform projects programmatically.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_billing_skugroupskus_v1beta_list_sku_group_skus_response import GoogleCloudBillingSkugroupskusV1betaListSkuGroupSkusResponse

class TestGoogleCloudBillingSkugroupskusV1betaListSkuGroupSkusResponse(unittest.TestCase):
    """GoogleCloudBillingSkugroupskusV1betaListSkuGroupSkusResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudBillingSkugroupskusV1betaListSkuGroupSkusResponse:
        """Test GoogleCloudBillingSkugroupskusV1betaListSkuGroupSkusResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudBillingSkugroupskusV1betaListSkuGroupSkusResponse`
        """
        model = GoogleCloudBillingSkugroupskusV1betaListSkuGroupSkusResponse()
        if include_optional:
            return GoogleCloudBillingSkugroupskusV1betaListSkuGroupSkusResponse(
                next_page_token = '',
                sku_group_skus = [
                    openapi_client.models.google_cloud_billing_skugroupskus_v1beta_sku_group_sku.GoogleCloudBillingSkugroupskusV1betaSkuGroupSku(
                        display_name = '', 
                        geo_taxonomy = openapi_client.models.google_cloud_billing_skugroupskus_v1beta_geo_taxonomy.GoogleCloudBillingSkugroupskusV1betaGeoTaxonomy(
                            global_metadata = openapi_client.models.global_metadata.globalMetadata(), 
                            multi_regional_metadata = openapi_client.models.google_cloud_billing_skugroupskus_v1beta_geo_taxonomy_multi_regional.GoogleCloudBillingSkugroupskusV1betaGeoTaxonomyMultiRegional(
                                regions = [
                                    openapi_client.models.google_cloud_billing_skugroupskus_v1beta_geo_taxonomy_region.GoogleCloudBillingSkugroupskusV1betaGeoTaxonomyRegion(
                                        region = '', )
                                    ], ), 
                            regional_metadata = openapi_client.models.google_cloud_billing_skugroupskus_v1beta_geo_taxonomy_regional.GoogleCloudBillingSkugroupskusV1betaGeoTaxonomyRegional(
                                region = openapi_client.models.google_cloud_billing_skugroupskus_v1beta_geo_taxonomy_region.GoogleCloudBillingSkugroupskusV1betaGeoTaxonomyRegion(), ), 
                            type = 'TYPE_UNSPECIFIED', ), 
                        name = '', 
                        product_taxonomy = openapi_client.models.google_cloud_billing_skugroupskus_v1beta_product_taxonomy.GoogleCloudBillingSkugroupskusV1betaProductTaxonomy(
                            taxonomy_categories = [
                                openapi_client.models.google_cloud_billing_skugroupskus_v1beta_taxonomy_category.GoogleCloudBillingSkugroupskusV1betaTaxonomyCategory(
                                    category = '', )
                                ], ), 
                        service = '', 
                        sku_id = '', )
                    ]
            )
        else:
            return GoogleCloudBillingSkugroupskusV1betaListSkuGroupSkusResponse(
        )
        """

    def testGoogleCloudBillingSkugroupskusV1betaListSkuGroupSkusResponse(self):
        """Test GoogleCloudBillingSkugroupskusV1betaListSkuGroupSkusResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
