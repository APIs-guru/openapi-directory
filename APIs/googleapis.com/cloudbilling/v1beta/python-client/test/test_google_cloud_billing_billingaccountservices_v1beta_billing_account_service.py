# coding: utf-8

"""
    Cloud Billing API

    Allows developers to manage billing for their Google Cloud Platform projects programmatically.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_billing_billingaccountservices_v1beta_billing_account_service import GoogleCloudBillingBillingaccountservicesV1betaBillingAccountService

class TestGoogleCloudBillingBillingaccountservicesV1betaBillingAccountService(unittest.TestCase):
    """GoogleCloudBillingBillingaccountservicesV1betaBillingAccountService unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudBillingBillingaccountservicesV1betaBillingAccountService:
        """Test GoogleCloudBillingBillingaccountservicesV1betaBillingAccountService
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudBillingBillingaccountservicesV1betaBillingAccountService`
        """
        model = GoogleCloudBillingBillingaccountservicesV1betaBillingAccountService()
        if include_optional:
            return GoogleCloudBillingBillingaccountservicesV1betaBillingAccountService(
                display_name = '',
                name = '',
                service_id = ''
            )
        else:
            return GoogleCloudBillingBillingaccountservicesV1betaBillingAccountService(
        )
        """

    def testGoogleCloudBillingBillingaccountservicesV1betaBillingAccountService(self):
        """Test GoogleCloudBillingBillingaccountservicesV1betaBillingAccountService"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
