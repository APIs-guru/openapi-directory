# coding: utf-8

"""
    Cloud Billing API

    Allows developers to manage billing for their Google Cloud Platform projects programmatically.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_billing_prices_v1beta_rate import GoogleCloudBillingPricesV1betaRate

class TestGoogleCloudBillingPricesV1betaRate(unittest.TestCase):
    """GoogleCloudBillingPricesV1betaRate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudBillingPricesV1betaRate:
        """Test GoogleCloudBillingPricesV1betaRate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudBillingPricesV1betaRate`
        """
        model = GoogleCloudBillingPricesV1betaRate()
        if include_optional:
            return GoogleCloudBillingPricesV1betaRate(
                aggregation_info = openapi_client.models.google_cloud_billing_prices_v1beta_aggregation_info.GoogleCloudBillingPricesV1betaAggregationInfo(
                    interval = 'INTERVAL_UNSPECIFIED', 
                    level = 'LEVEL_UNSPECIFIED', ),
                tiers = [
                    openapi_client.models.google_cloud_billing_prices_v1beta_rate_tier.GoogleCloudBillingPricesV1betaRateTier(
                        list_price = openapi_client.models.money.Money(
                            currency_code = '', 
                            nanos = 56, 
                            units = '', ), 
                        start_amount = openapi_client.models.decimal.Decimal(
                            value = '', ), )
                    ],
                unit_info = openapi_client.models.google_cloud_billing_prices_v1beta_unit_info.GoogleCloudBillingPricesV1betaUnitInfo(
                    unit = '', 
                    unit_description = '', 
                    unit_quantity = openapi_client.models.decimal.Decimal(
                        value = '', ), )
            )
        else:
            return GoogleCloudBillingPricesV1betaRate(
        )
        """

    def testGoogleCloudBillingPricesV1betaRate(self):
        """Test GoogleCloudBillingPricesV1betaRate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
