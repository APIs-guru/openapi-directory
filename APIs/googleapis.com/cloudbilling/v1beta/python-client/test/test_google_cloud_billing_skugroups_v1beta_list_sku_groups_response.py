# coding: utf-8

"""
    Cloud Billing API

    Allows developers to manage billing for their Google Cloud Platform projects programmatically.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_billing_skugroups_v1beta_list_sku_groups_response import GoogleCloudBillingSkugroupsV1betaListSkuGroupsResponse

class TestGoogleCloudBillingSkugroupsV1betaListSkuGroupsResponse(unittest.TestCase):
    """GoogleCloudBillingSkugroupsV1betaListSkuGroupsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudBillingSkugroupsV1betaListSkuGroupsResponse:
        """Test GoogleCloudBillingSkugroupsV1betaListSkuGroupsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudBillingSkugroupsV1betaListSkuGroupsResponse`
        """
        model = GoogleCloudBillingSkugroupsV1betaListSkuGroupsResponse()
        if include_optional:
            return GoogleCloudBillingSkugroupsV1betaListSkuGroupsResponse(
                next_page_token = '',
                sku_groups = [
                    openapi_client.models.google_cloud_billing_skugroups_v1beta_sku_group.GoogleCloudBillingSkugroupsV1betaSkuGroup(
                        display_name = '', 
                        name = '', )
                    ]
            )
        else:
            return GoogleCloudBillingSkugroupsV1betaListSkuGroupsResponse(
        )
        """

    def testGoogleCloudBillingSkugroupsV1betaListSkuGroupsResponse(self):
        """Test GoogleCloudBillingSkugroupsV1betaListSkuGroupsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
