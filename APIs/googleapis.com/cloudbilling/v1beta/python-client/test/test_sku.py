# coding: utf-8

"""
    Cloud Billing API

    Allows developers to manage billing for their Google Cloud Platform projects programmatically.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.sku import Sku

class TestSku(unittest.TestCase):
    """Sku unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Sku:
        """Test Sku
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Sku`
        """
        model = Sku()
        if include_optional:
            return Sku(
                display_name = '',
                prices = [
                    openapi_client.models.price.Price(
                        effective_time = openapi_client.models.estimation_time_point.EstimationTimePoint(
                            estimation_time_frame_offset = '', ), 
                        price_type = '', 
                        rate = openapi_client.models.rate.Rate(
                            tiers = [
                                openapi_client.models.rate_tier.RateTier(
                                    price = openapi_client.models.money.Money(
                                        currency_code = '', 
                                        nanos = 56, 
                                        units = '', ), 
                                    start_amount = 1.337, )
                                ], 
                            unit = '', 
                            unit_count = 1.337, ), )
                    ],
                sku = ''
            )
        else:
            return Sku(
        )
        """

    def testSku(self):
        """Test Sku"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
