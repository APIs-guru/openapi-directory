# coding: utf-8

"""
    Google Play Android Developer API

    Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.external_transaction import ExternalTransaction

class TestExternalTransaction(unittest.TestCase):
    """ExternalTransaction unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExternalTransaction:
        """Test ExternalTransaction
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExternalTransaction`
        """
        model = ExternalTransaction()
        if include_optional:
            return ExternalTransaction(
                create_time = '',
                current_pre_tax_amount = openapi_client.models.price.Price(
                    currency = '', 
                    price_micros = '', ),
                current_tax_amount = openapi_client.models.price.Price(
                    currency = '', 
                    price_micros = '', ),
                external_transaction_id = '',
                one_time_transaction = openapi_client.models.one_time_external_transaction.OneTimeExternalTransaction(
                    external_transaction_token = '', ),
                original_pre_tax_amount = openapi_client.models.price.Price(
                    currency = '', 
                    price_micros = '', ),
                original_tax_amount = openapi_client.models.price.Price(
                    currency = '', 
                    price_micros = '', ),
                package_name = '',
                recurring_transaction = openapi_client.models.recurring_external_transaction.RecurringExternalTransaction(
                    external_subscription = openapi_client.models.external_subscription.ExternalSubscription(
                        subscription_type = 'SUBSCRIPTION_TYPE_UNSPECIFIED', ), 
                    external_transaction_token = '', 
                    initial_external_transaction_id = '', 
                    migrated_transaction_program = 'EXTERNAL_TRANSACTION_PROGRAM_UNSPECIFIED', ),
                test_purchase = None,
                transaction_state = 'TRANSACTION_STATE_UNSPECIFIED',
                transaction_time = '',
                user_tax_address = openapi_client.models.external_transaction_address.ExternalTransactionAddress(
                    administrative_area = '', 
                    region_code = '', )
            )
        else:
            return ExternalTransaction(
        )
        """

    def testExternalTransaction(self):
        """Test ExternalTransaction"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
