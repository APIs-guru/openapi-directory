# coding: utf-8

"""
    Google Play Android Developer API

    Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.generated_apks_per_signing_key import GeneratedApksPerSigningKey

class TestGeneratedApksPerSigningKey(unittest.TestCase):
    """GeneratedApksPerSigningKey unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GeneratedApksPerSigningKey:
        """Test GeneratedApksPerSigningKey
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GeneratedApksPerSigningKey`
        """
        model = GeneratedApksPerSigningKey()
        if include_optional:
            return GeneratedApksPerSigningKey(
                certificate_sha256_hash = '',
                generated_asset_pack_slices = [
                    openapi_client.models.generated_asset_pack_slice.GeneratedAssetPackSlice(
                        download_id = '', 
                        module_name = '', 
                        slice_id = '', 
                        version = '', )
                    ],
                generated_recovery_modules = [
                    openapi_client.models.generated_recovery_apk.GeneratedRecoveryApk(
                        download_id = '', 
                        module_name = '', 
                        recovery_id = '', 
                        recovery_status = 'RECOVERY_STATUS_UNSPECIFIED', )
                    ],
                generated_split_apks = [
                    openapi_client.models.generated_split_apk.GeneratedSplitApk(
                        download_id = '', 
                        module_name = '', 
                        split_id = '', 
                        variant_id = 56, )
                    ],
                generated_standalone_apks = [
                    openapi_client.models.generated_standalone_apk.GeneratedStandaloneApk(
                        download_id = '', 
                        variant_id = 56, )
                    ],
                generated_universal_apk = openapi_client.models.generated_universal_apk.GeneratedUniversalApk(
                    download_id = '', ),
                targeting_info = openapi_client.models.targeting_info.TargetingInfo(
                    asset_slice_set = [
                        openapi_client.models.asset_slice_set.AssetSliceSet(
                            apk_description = [
                                openapi_client.models.apk_description.ApkDescription(
                                    asset_slice_metadata = openapi_client.models.split_apk_metadata.SplitApkMetadata(
                                        is_master_split = True, 
                                        split_id = '', ), 
                                    instant_apk_metadata = openapi_client.models.split_apk_metadata.SplitApkMetadata(
                                        is_master_split = True, 
                                        split_id = '', ), 
                                    path = '', 
                                    split_apk_metadata = , 
                                    standalone_apk_metadata = openapi_client.models.standalone_apk_metadata.StandaloneApkMetadata(
                                        fused_module_name = [
                                            ''
                                            ], ), 
                                    targeting = openapi_client.models.apk_targeting.ApkTargeting(
                                        abi_targeting = openapi_client.models.abi_targeting.AbiTargeting(
                                            alternatives = [
                                                openapi_client.models.abi.Abi(
                                                    alias = 'UNSPECIFIED_CPU_ARCHITECTURE', )
                                                ], 
                                            value = [
                                                openapi_client.models.abi.Abi(
                                                    alias = 'UNSPECIFIED_CPU_ARCHITECTURE', )
                                                ], ), 
                                        language_targeting = openapi_client.models.language_targeting.LanguageTargeting(), 
                                        multi_abi_targeting = openapi_client.models.multi_abi_targeting.MultiAbiTargeting(), 
                                        screen_density_targeting = openapi_client.models.screen_density_targeting.ScreenDensityTargeting(), 
                                        sdk_version_targeting = openapi_client.models.sdk_version_targeting.SdkVersionTargeting(), 
                                        texture_compression_format_targeting = openapi_client.models.texture_compression_format_targeting.TextureCompressionFormatTargeting(), ), )
                                ], 
                            asset_module_metadata = openapi_client.models.asset_module_metadata.AssetModuleMetadata(
                                delivery_type = 'UNKNOWN_DELIVERY_TYPE', 
                                name = '', ), )
                        ], 
                    package_name = '', 
                    variant = [
                        openapi_client.models.split_apk_variant.SplitApkVariant(
                            apk_set = [
                                openapi_client.models.apk_set.ApkSet(
                                    module_metadata = openapi_client.models.module_metadata.ModuleMetadata(
                                        delivery_type = 'UNKNOWN_DELIVERY_TYPE', 
                                        dependencies = [
                                            ''
                                            ], 
                                        module_type = 'UNKNOWN_MODULE_TYPE', 
                                        name = '', ), )
                                ], 
                            variant_number = 56, )
                        ], )
            )
        else:
            return GeneratedApksPerSigningKey(
        )
        """

    def testGeneratedApksPerSigningKey(self):
        """Test GeneratedApksPerSigningKey"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
