# coding: utf-8

"""
    Google Play Android Developer API

    Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_users_response import ListUsersResponse

class TestListUsersResponse(unittest.TestCase):
    """ListUsersResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListUsersResponse:
        """Test ListUsersResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListUsersResponse`
        """
        model = ListUsersResponse()
        if include_optional:
            return ListUsersResponse(
                next_page_token = '',
                users = [
                    openapi_client.models.user.User(
                        access_state = 'ACCESS_STATE_UNSPECIFIED', 
                        developer_account_permissions = [
                            'DEVELOPER_LEVEL_PERMISSION_UNSPECIFIED'
                            ], 
                        email = '', 
                        expiration_time = '', 
                        grants = [
                            openapi_client.models.grant.Grant(
                                app_level_permissions = [
                                    'APP_LEVEL_PERMISSION_UNSPECIFIED'
                                    ], 
                                name = '', 
                                package_name = '', )
                            ], 
                        name = '', 
                        partial = True, )
                    ]
            )
        else:
            return ListUsersResponse(
        )
        """

    def testListUsersResponse(self):
        """Test ListUsersResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
