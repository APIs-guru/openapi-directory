# coding: utf-8

"""
    Google Play Android Developer API

    Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.comment import Comment

class TestComment(unittest.TestCase):
    """Comment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Comment:
        """Test Comment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Comment`
        """
        model = Comment()
        if include_optional:
            return Comment(
                developer_comment = openapi_client.models.developer_comment.DeveloperComment(
                    last_modified = openapi_client.models.timestamp.Timestamp(
                        nanos = 56, 
                        seconds = '', ), 
                    text = '', ),
                user_comment = openapi_client.models.user_comment.UserComment(
                    android_os_version = 56, 
                    app_version_code = 56, 
                    app_version_name = '', 
                    device = '', 
                    device_metadata = openapi_client.models.device_metadata.DeviceMetadata(
                        cpu_make = '', 
                        cpu_model = '', 
                        device_class = '', 
                        gl_es_version = 56, 
                        manufacturer = '', 
                        native_platform = '', 
                        product_name = '', 
                        ram_mb = 56, 
                        screen_density_dpi = 56, 
                        screen_height_px = 56, 
                        screen_width_px = 56, ), 
                    last_modified = openapi_client.models.timestamp.Timestamp(
                        nanos = 56, 
                        seconds = '', ), 
                    original_text = '', 
                    reviewer_language = '', 
                    star_rating = 56, 
                    text = '', 
                    thumbs_down_count = 56, 
                    thumbs_up_count = 56, )
            )
        else:
            return Comment(
        )
        """

    def testComment(self):
        """Test Comment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
