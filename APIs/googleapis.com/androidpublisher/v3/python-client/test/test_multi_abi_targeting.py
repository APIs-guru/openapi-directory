# coding: utf-8

"""
    Google Play Android Developer API

    Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.multi_abi_targeting import MultiAbiTargeting

class TestMultiAbiTargeting(unittest.TestCase):
    """MultiAbiTargeting unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MultiAbiTargeting:
        """Test MultiAbiTargeting
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MultiAbiTargeting`
        """
        model = MultiAbiTargeting()
        if include_optional:
            return MultiAbiTargeting(
                alternatives = [
                    openapi_client.models.multi_abi.MultiAbi(
                        abi = [
                            openapi_client.models.abi.Abi(
                                alias = 'UNSPECIFIED_CPU_ARCHITECTURE', )
                            ], )
                    ],
                value = [
                    openapi_client.models.multi_abi.MultiAbi(
                        abi = [
                            openapi_client.models.abi.Abi(
                                alias = 'UNSPECIFIED_CPU_ARCHITECTURE', )
                            ], )
                    ]
            )
        else:
            return MultiAbiTargeting(
        )
        """

    def testMultiAbiTargeting(self):
        """Test MultiAbiTargeting"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
