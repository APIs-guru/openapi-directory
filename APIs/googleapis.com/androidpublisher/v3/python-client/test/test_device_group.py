# coding: utf-8

"""
    Google Play Android Developer API

    Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.device_group import DeviceGroup

class TestDeviceGroup(unittest.TestCase):
    """DeviceGroup unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceGroup:
        """Test DeviceGroup
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceGroup`
        """
        model = DeviceGroup()
        if include_optional:
            return DeviceGroup(
                device_selectors = [
                    openapi_client.models.device_selector.DeviceSelector(
                        device_ram = openapi_client.models.device_ram.DeviceRam(
                            max_bytes = '', 
                            min_bytes = '', ), 
                        excluded_device_ids = [
                            openapi_client.models.device_id.DeviceId(
                                build_brand = '', 
                                build_device = '', )
                            ], 
                        forbidden_system_features = [
                            openapi_client.models.system_feature.SystemFeature(
                                name = '', )
                            ], 
                        included_device_ids = [
                            openapi_client.models.device_id.DeviceId(
                                build_brand = '', 
                                build_device = '', )
                            ], 
                        required_system_features = [
                            openapi_client.models.system_feature.SystemFeature(
                                name = '', )
                            ], )
                    ],
                name = ''
            )
        else:
            return DeviceGroup(
        )
        """

    def testDeviceGroup(self):
        """Test DeviceGroup"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
