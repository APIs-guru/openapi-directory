# coding: utf-8

"""
    Google Play Android Developer API

    Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_recovery_action import AppRecoveryAction

class TestAppRecoveryAction(unittest.TestCase):
    """AppRecoveryAction unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppRecoveryAction:
        """Test AppRecoveryAction
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppRecoveryAction`
        """
        model = AppRecoveryAction()
        if include_optional:
            return AppRecoveryAction(
                app_recovery_id = '',
                cancel_time = '',
                create_time = '',
                deploy_time = '',
                last_update_time = '',
                remote_in_app_update_data = openapi_client.models.remote_in_app_update_data.RemoteInAppUpdateData(
                    remote_app_update_data_per_bundle = [
                        openapi_client.models.remote_in_app_update_data_per_bundle.RemoteInAppUpdateDataPerBundle(
                            recovered_device_count = '', 
                            total_device_count = '', 
                            version_code = '', )
                        ], ),
                status = 'RECOVERY_STATUS_UNSPECIFIED',
                targeting = openapi_client.models.targeting.Targeting(
                    all_users = openapi_client.models.all_users.AllUsers(
                        is_all_users_requested = True, ), 
                    android_sdks = openapi_client.models.android_sdks.AndroidSdks(
                        sdk_levels = [
                            ''
                            ], ), 
                    regions = openapi_client.models.regions.Regions(
                        region_code = [
                            ''
                            ], ), 
                    version_list = openapi_client.models.app_version_list.AppVersionList(
                        version_codes = [
                            ''
                            ], ), 
                    version_range = openapi_client.models.app_version_range.AppVersionRange(
                        version_code_end = '', 
                        version_code_start = '', ), )
            )
        else:
            return AppRecoveryAction(
        )
        """

    def testAppRecoveryAction(self):
        """Test AppRecoveryAction"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
