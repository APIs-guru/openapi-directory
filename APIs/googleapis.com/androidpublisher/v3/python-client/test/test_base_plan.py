# coding: utf-8

"""
    Google Play Android Developer API

    Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.base_plan import BasePlan

class TestBasePlan(unittest.TestCase):
    """BasePlan unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BasePlan:
        """Test BasePlan
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BasePlan`
        """
        model = BasePlan()
        if include_optional:
            return BasePlan(
                auto_renewing_base_plan_type = openapi_client.models.auto_renewing_base_plan_type.AutoRenewingBasePlanType(
                    account_hold_duration = '', 
                    billing_period_duration = '', 
                    grace_period_duration = '', 
                    legacy_compatible = True, 
                    legacy_compatible_subscription_offer_id = '', 
                    proration_mode = 'SUBSCRIPTION_PRORATION_MODE_UNSPECIFIED', 
                    resubscribe_state = 'RESUBSCRIBE_STATE_UNSPECIFIED', ),
                base_plan_id = '',
                offer_tags = [
                    openapi_client.models.offer_tag.OfferTag(
                        tag = '', )
                    ],
                other_regions_config = openapi_client.models.other_regions_base_plan_config.OtherRegionsBasePlanConfig(
                    eur_price = openapi_client.models.money.Money(
                        currency_code = '', 
                        nanos = 56, 
                        units = '', ), 
                    new_subscriber_availability = True, 
                    usd_price = openapi_client.models.money.Money(
                        currency_code = '', 
                        nanos = 56, 
                        units = '', ), ),
                prepaid_base_plan_type = openapi_client.models.prepaid_base_plan_type.PrepaidBasePlanType(
                    billing_period_duration = '', 
                    time_extension = 'TIME_EXTENSION_UNSPECIFIED', ),
                regional_configs = [
                    openapi_client.models.regional_base_plan_config.RegionalBasePlanConfig(
                        new_subscriber_availability = True, 
                        price = openapi_client.models.money.Money(
                            currency_code = '', 
                            nanos = 56, 
                            units = '', ), 
                        region_code = '', )
                    ],
                state = 'STATE_UNSPECIFIED'
            )
        else:
            return BasePlan(
        )
        """

    def testBasePlan(self):
        """Test BasePlan"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
