# coding: utf-8

"""
    Google Play Android Developer API

    Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.auto_renewing_plan import AutoRenewingPlan

class TestAutoRenewingPlan(unittest.TestCase):
    """AutoRenewingPlan unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AutoRenewingPlan:
        """Test AutoRenewingPlan
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AutoRenewingPlan`
        """
        model = AutoRenewingPlan()
        if include_optional:
            return AutoRenewingPlan(
                auto_renew_enabled = True,
                price_change_details = openapi_client.models.subscription_item_price_change_details.SubscriptionItemPriceChangeDetails(
                    expected_new_price_charge_time = '', 
                    new_price = openapi_client.models.money.Money(
                        currency_code = '', 
                        nanos = 56, 
                        units = '', ), 
                    price_change_mode = 'PRICE_CHANGE_MODE_UNSPECIFIED', 
                    price_change_state = 'PRICE_CHANGE_STATE_UNSPECIFIED', )
            )
        else:
            return AutoRenewingPlan(
        )
        """

    def testAutoRenewingPlan(self):
        """Test AutoRenewingPlan"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
