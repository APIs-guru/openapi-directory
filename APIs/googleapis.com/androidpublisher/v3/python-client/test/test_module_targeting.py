# coding: utf-8

"""
    Google Play Android Developer API

    Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. 

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.module_targeting import ModuleTargeting

class TestModuleTargeting(unittest.TestCase):
    """ModuleTargeting unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ModuleTargeting:
        """Test ModuleTargeting
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ModuleTargeting`
        """
        model = ModuleTargeting()
        if include_optional:
            return ModuleTargeting(
                device_feature_targeting = [
                    openapi_client.models.device_feature_targeting.DeviceFeatureTargeting(
                        required_feature = openapi_client.models.device_feature.DeviceFeature(
                            feature_name = '', 
                            feature_version = 56, ), )
                    ],
                sdk_version_targeting = openapi_client.models.sdk_version_targeting.SdkVersionTargeting(
                    alternatives = [
                        openapi_client.models.sdk_version.SdkVersion(
                            min = 56, )
                        ], 
                    value = [
                        openapi_client.models.sdk_version.SdkVersion(
                            min = 56, )
                        ], ),
                user_countries_targeting = openapi_client.models.user_countries_targeting.UserCountriesTargeting(
                    country_codes = [
                        ''
                        ], 
                    exclude = True, )
            )
        else:
            return ModuleTargeting(
        )
        """

    def testModuleTargeting(self):
        """Test ModuleTargeting"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
