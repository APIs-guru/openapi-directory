# coding: utf-8

"""
    Google Play Developer

    Accesses Android application developers' Google Play accounts.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.subscription_purchase import SubscriptionPurchase

class TestSubscriptionPurchase(unittest.TestCase):
    """SubscriptionPurchase unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubscriptionPurchase:
        """Test SubscriptionPurchase
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubscriptionPurchase`
        """
        model = SubscriptionPurchase()
        if include_optional:
            return SubscriptionPurchase(
                auto_renewing = True,
                cancel_reason = 56,
                cancel_survey_result = openapi_client.models.subscription_cancel_survey_result.SubscriptionCancelSurveyResult(
                    cancel_survey_reason = 56, 
                    user_input_cancel_reason = '', ),
                country_code = '',
                developer_payload = '',
                email_address = '',
                expiry_time_millis = '',
                family_name = '',
                given_name = '',
                kind = 'androidpublisher#subscriptionPurchase',
                linked_purchase_token = '',
                order_id = '',
                payment_state = 56,
                price_amount_micros = '',
                price_change = openapi_client.models.subscription_price_change.SubscriptionPriceChange(
                    new_price = openapi_client.models.price.Price(
                        currency = '', 
                        price_micros = '', ), 
                    state = 56, ),
                price_currency_code = '',
                profile_id = '',
                profile_name = '',
                purchase_type = 56,
                start_time_millis = '',
                user_cancellation_time_millis = ''
            )
        else:
            return SubscriptionPurchase(
        )
        """

    def testSubscriptionPurchase(self):
        """Test SubscriptionPurchase"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
