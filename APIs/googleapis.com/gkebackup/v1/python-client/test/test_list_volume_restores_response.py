# coding: utf-8

"""
    Backup for GKE API

    Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_volume_restores_response import ListVolumeRestoresResponse

class TestListVolumeRestoresResponse(unittest.TestCase):
    """ListVolumeRestoresResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListVolumeRestoresResponse:
        """Test ListVolumeRestoresResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListVolumeRestoresResponse`
        """
        model = ListVolumeRestoresResponse()
        if include_optional:
            return ListVolumeRestoresResponse(
                next_page_token = '',
                volume_restores = [
                    openapi_client.models.volume_restore.VolumeRestore(
                        complete_time = '', 
                        create_time = '', 
                        etag = '', 
                        name = '', 
                        state = 'STATE_UNSPECIFIED', 
                        state_message = '', 
                        target_pvc = openapi_client.models.namespaced_name.NamespacedName(
                            name = '', 
                            namespace = '', ), 
                        uid = '', 
                        update_time = '', 
                        volume_backup = '', 
                        volume_handle = '', 
                        volume_type = 'VOLUME_TYPE_UNSPECIFIED', )
                    ]
            )
        else:
            return ListVolumeRestoresResponse(
        )
        """

    def testListVolumeRestoresResponse(self):
        """Test ListVolumeRestoresResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
