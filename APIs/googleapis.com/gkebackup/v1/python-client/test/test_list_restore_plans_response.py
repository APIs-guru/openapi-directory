# coding: utf-8

"""
    Backup for GKE API

    Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_restore_plans_response import ListRestorePlansResponse

class TestListRestorePlansResponse(unittest.TestCase):
    """ListRestorePlansResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListRestorePlansResponse:
        """Test ListRestorePlansResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListRestorePlansResponse`
        """
        model = ListRestorePlansResponse()
        if include_optional:
            return ListRestorePlansResponse(
                next_page_token = '',
                restore_plans = [
                    openapi_client.models.restore_plan.RestorePlan(
                        backup_plan = '', 
                        cluster = '', 
                        create_time = '', 
                        description = '', 
                        etag = '', 
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        restore_config = openapi_client.models.restore_config.RestoreConfig(
                            all_namespaces = True, 
                            cluster_resource_conflict_policy = 'CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED', 
                            cluster_resource_restore_scope = openapi_client.models.cluster_resource_restore_scope.ClusterResourceRestoreScope(
                                all_group_kinds = True, 
                                excluded_group_kinds = [
                                    openapi_client.models.group_kind.GroupKind(
                                        resource_group = '', 
                                        resource_kind = '', )
                                    ], 
                                no_group_kinds = True, 
                                selected_group_kinds = [
                                    openapi_client.models.group_kind.GroupKind(
                                        resource_group = '', 
                                        resource_kind = '', )
                                    ], ), 
                            excluded_namespaces = openapi_client.models.namespaces.Namespaces(
                                namespaces = [
                                    ''
                                    ], ), 
                            namespaced_resource_restore_mode = 'NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED', 
                            no_namespaces = True, 
                            selected_applications = openapi_client.models.namespaced_names.NamespacedNames(
                                namespaced_names = [
                                    openapi_client.models.namespaced_name.NamespacedName(
                                        name = '', 
                                        namespace = '', )
                                    ], ), 
                            selected_namespaces = openapi_client.models.namespaces.Namespaces(), 
                            substitution_rules = [
                                openapi_client.models.substitution_rule.SubstitutionRule(
                                    new_value = '', 
                                    original_value_pattern = '', 
                                    target_group_kinds = [
                                        
                                        ], 
                                    target_json_path = '', 
                                    target_namespaces = [
                                        ''
                                        ], )
                                ], 
                            transformation_rules = [
                                openapi_client.models.transformation_rule.TransformationRule(
                                    description = '', 
                                    field_actions = [
                                        openapi_client.models.transformation_rule_action.TransformationRuleAction(
                                            from_path = '', 
                                            op = 'OP_UNSPECIFIED', 
                                            path = '', 
                                            value = '', )
                                        ], 
                                    resource_filter = openapi_client.models.resource_filter.ResourceFilter(
                                        group_kinds = [
                                            
                                            ], 
                                        json_path = '', ), )
                                ], 
                            volume_data_restore_policy = 'VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED', ), 
                        state = 'STATE_UNSPECIFIED', 
                        state_reason = '', 
                        uid = '', 
                        update_time = '', )
                    ],
                unreachable = [
                    ''
                    ]
            )
        else:
            return ListRestorePlansResponse(
        )
        """

    def testListRestorePlansResponse(self):
        """Test ListRestorePlansResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
