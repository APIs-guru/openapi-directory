# coding: utf-8

"""
    Backup for GKE API

    Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.backup_plan import BackupPlan

class TestBackupPlan(unittest.TestCase):
    """BackupPlan unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BackupPlan:
        """Test BackupPlan
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BackupPlan`
        """
        model = BackupPlan()
        if include_optional:
            return BackupPlan(
                backup_config = openapi_client.models.backup_config.BackupConfig(
                    all_namespaces = True, 
                    encryption_key = openapi_client.models.encryption_key.EncryptionKey(
                        gcp_kms_encryption_key = '', ), 
                    include_secrets = True, 
                    include_volume_data = True, 
                    selected_applications = openapi_client.models.namespaced_names.NamespacedNames(
                        namespaced_names = [
                            openapi_client.models.namespaced_name.NamespacedName(
                                name = '', 
                                namespace = '', )
                            ], ), 
                    selected_namespaces = openapi_client.models.namespaces.Namespaces(
                        namespaces = [
                            ''
                            ], ), ),
                backup_schedule = openapi_client.models.schedule.Schedule(
                    cron_schedule = '', 
                    paused = True, ),
                cluster = '',
                create_time = '',
                deactivated = True,
                description = '',
                etag = '',
                labels = {
                    'key' : ''
                    },
                name = '',
                protected_pod_count = 56,
                retention_policy = openapi_client.models.retention_policy.RetentionPolicy(
                    backup_delete_lock_days = 56, 
                    backup_retain_days = 56, 
                    locked = True, ),
                state = 'STATE_UNSPECIFIED',
                state_reason = '',
                uid = '',
                update_time = ''
            )
        else:
            return BackupPlan(
        )
        """

    def testBackupPlan(self):
        """Test BackupPlan"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
