# coding: utf-8

"""
    Backup for GKE API

    Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_backups_response import ListBackupsResponse

class TestListBackupsResponse(unittest.TestCase):
    """ListBackupsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListBackupsResponse:
        """Test ListBackupsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListBackupsResponse`
        """
        model = ListBackupsResponse()
        if include_optional:
            return ListBackupsResponse(
                backups = [
                    openapi_client.models.backup.Backup(
                        all_namespaces = True, 
                        cluster_metadata = openapi_client.models.cluster_metadata.ClusterMetadata(
                            anthos_version = '', 
                            backup_crd_versions = {
                                'key' : ''
                                }, 
                            cluster = '', 
                            gke_version = '', 
                            k8s_version = '', ), 
                        complete_time = '', 
                        config_backup_size_bytes = '', 
                        contains_secrets = True, 
                        contains_volume_data = True, 
                        create_time = '', 
                        delete_lock_days = 56, 
                        delete_lock_expire_time = '', 
                        description = '', 
                        encryption_key = openapi_client.models.encryption_key.EncryptionKey(
                            gcp_kms_encryption_key = '', ), 
                        etag = '', 
                        labels = {
                            'key' : ''
                            }, 
                        manual = True, 
                        name = '', 
                        pod_count = 56, 
                        resource_count = 56, 
                        retain_days = 56, 
                        retain_expire_time = '', 
                        selected_applications = openapi_client.models.namespaced_names.NamespacedNames(
                            namespaced_names = [
                                openapi_client.models.namespaced_name.NamespacedName(
                                    name = '', 
                                    namespace = '', )
                                ], ), 
                        selected_namespaces = openapi_client.models.namespaces.Namespaces(
                            namespaces = [
                                ''
                                ], ), 
                        size_bytes = '', 
                        state = 'STATE_UNSPECIFIED', 
                        state_reason = '', 
                        uid = '', 
                        update_time = '', 
                        volume_count = 56, )
                    ],
                next_page_token = ''
            )
        else:
            return ListBackupsResponse(
        )
        """

    def testListBackupsResponse(self):
        """Test ListBackupsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
