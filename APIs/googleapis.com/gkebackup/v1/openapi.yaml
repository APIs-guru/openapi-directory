openapi: 3.0.0
servers:
  - url: https://gkebackup.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Backup for GKE API
  version: v1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://gkebackup.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-providerName: googleapis.com
  x-serviceName: gkebackup
externalDocs:
  url: https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke
tags:
  - name: projects
paths:
  /v1/{name}:
    delete:
      description: Deletes an existing Restore.
      operationId: gkebackup.projects.locations.restorePlans.restores.delete
      parameters:
        - description: "Required. Full name of the Restore Format: `projects/*/locations/*/restorePlans/*/restores/*`"
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. If provided, this value must match the current value of the target Restore's etag field or the request is rejected.
          in: query
          name: etag
          schema:
            type: string
        - description: Optional. If set to true, any VolumeRestores below this restore will also be deleted. Otherwise, the request will only succeed if the restore has no VolumeRestores.
          in: query
          name: force
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Retrieve the details of a single VolumeRestore.
      operationId: gkebackup.projects.locations.restorePlans.restores.volumeRestores.get
      parameters:
        - description: "Required. Full name of the VolumeRestore resource. Format: `projects/*/locations/*/restorePlans/*/restores/*/volumeRestores/*`"
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VolumeRestore"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Update a Restore.
      operationId: gkebackup.projects.locations.restorePlans.restores.patch
      parameters:
        - description: "Output only. The full name of the Restore resource. Format: `projects/*/locations/*/restorePlans/*/restores/*`"
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. This is used to specify the fields to be overwritten in the Restore targeted for update. The values for each of these updated fields will be taken from the `restore` provided with this request. Field names are relative to the root of the resource. If no `update_mask` is provided, all fields in `restore` will be written to the target Restore resource. Note that OUTPUT_ONLY and IMMUTABLE fields in `restore` are ignored and are not used to update the target Restore.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Restore"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: gkebackup.projects.locations.list
      parameters:
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results to return. If not set, the service selects a default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}/operations:
    get:
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: gkebackup.projects.locations.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: gkebackup.projects.locations.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleLongrunningCancelOperationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/backupPlans:
    get:
      description: Lists BackupPlans in a given location.
      operationId: gkebackup.projects.locations.backupPlans.list
      parameters:
        - description: "Required. The location that contains the BackupPlans to list. Format: `projects/*/locations/*`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Field match expression used to filter the results.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Field by which to sort the results.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. The target number of results to return in a single response. If not specified, a default value will be chosen by the service. Note that the response may include a partial list and a caller should only rely on the response's next_page_token to determine if there are more instances left to be queried.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The value of next_page_token received from a previous `ListBackupPlans` call. Provide this to retrieve the subsequent page in a multi-page list of results. When paginating, all other parameters provided to `ListBackupPlans` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListBackupPlansResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new BackupPlan in a given location.
      operationId: gkebackup.projects.locations.backupPlans.create
      parameters:
        - description: "Required. The location within which to create the BackupPlan. Format: `projects/*/locations/*`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Required. The client-provided short name for the BackupPlan resource. This name must: - be between 1 and 63 characters long (inclusive) - consist of only lower-case ASCII letters, numbers, and dashes - start with a lower-case letter - end with a lower-case letter or number - be unique within the set of BackupPlans in this location"
          in: query
          name: backupPlanId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BackupPlan"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/backups:
    get:
      description: Lists the Backups for a given BackupPlan.
      operationId: gkebackup.projects.locations.backupPlans.backups.list
      parameters:
        - description: "Required. The BackupPlan that contains the Backups to list. Format: `projects/*/locations/*/backupPlans/*`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Field match expression used to filter the results.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Field by which to sort the results.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. The target number of results to return in a single response. If not specified, a default value will be chosen by the service. Note that the response may include a partial list and a caller should only rely on the response's next_page_token to determine if there are more instances left to be queried.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The value of next_page_token received from a previous `ListBackups` call. Provide this to retrieve the subsequent page in a multi-page list of results. When paginating, all other parameters provided to `ListBackups` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListBackupsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a Backup for the given BackupPlan.
      operationId: gkebackup.projects.locations.backupPlans.backups.create
      parameters:
        - description: "Required. The BackupPlan within which to create the Backup. Format: `projects/*/locations/*/backupPlans/*`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Optional. The client-provided short name for the Backup resource. This name must: - be between 1 and 63 characters long (inclusive) - consist of only lower-case ASCII letters, numbers, and dashes - start with a lower-case letter - end with a lower-case letter or number - be unique within the set of Backups in this BackupPlan"
          in: query
          name: backupId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Backup"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/restorePlans:
    get:
      description: Lists RestorePlans in a given location.
      operationId: gkebackup.projects.locations.restorePlans.list
      parameters:
        - description: "Required. The location that contains the RestorePlans to list. Format: `projects/*/locations/*`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Field match expression used to filter the results.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Field by which to sort the results.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. The target number of results to return in a single response. If not specified, a default value will be chosen by the service. Note that the response may include a partial list and a caller should only rely on the response's next_page_token to determine if there are more instances left to be queried.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The value of next_page_token received from a previous `ListRestorePlans` call. Provide this to retrieve the subsequent page in a multi-page list of results. When paginating, all other parameters provided to `ListRestorePlans` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRestorePlansResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new RestorePlan in a given location.
      operationId: gkebackup.projects.locations.restorePlans.create
      parameters:
        - description: "Required. The location within which to create the RestorePlan. Format: `projects/*/locations/*`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Required. The client-provided short name for the RestorePlan resource. This name must: - be between 1 and 63 characters long (inclusive) - consist of only lower-case ASCII letters, numbers, and dashes - start with a lower-case letter - end with a lower-case letter or number - be unique within the set of RestorePlans in this location"
          in: query
          name: restorePlanId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestorePlan"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/restores:
    get:
      description: Lists the Restores for a given RestorePlan.
      operationId: gkebackup.projects.locations.restorePlans.restores.list
      parameters:
        - description: "Required. The RestorePlan that contains the Restores to list. Format: `projects/*/locations/*/restorePlans/*`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Field match expression used to filter the results.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Field by which to sort the results.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. The target number of results to return in a single response. If not specified, a default value will be chosen by the service. Note that the response may include a partial list and a caller should only rely on the response's next_page_token to determine if there are more instances left to be queried.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The value of next_page_token received from a previous `ListRestores` call. Provide this to retrieve the subsequent page in a multi-page list of results. When paginating, all other parameters provided to `ListRestores` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRestoresResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new Restore for the given RestorePlan.
      operationId: gkebackup.projects.locations.restorePlans.restores.create
      parameters:
        - description: "Required. The RestorePlan within which to create the Restore. Format: `projects/*/locations/*/restorePlans/*`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Required. The client-provided short name for the Restore resource. This name must: - be between 1 and 63 characters long (inclusive) - consist of only lower-case ASCII letters, numbers, and dashes - start with a lower-case letter - end with a lower-case letter or number - be unique within the set of Restores in this RestorePlan."
          in: query
          name: restoreId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Restore"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/volumeBackups:
    get:
      description: Lists the VolumeBackups for a given Backup.
      operationId: gkebackup.projects.locations.backupPlans.backups.volumeBackups.list
      parameters:
        - description: "Required. The Backup that contains the VolumeBackups to list. Format: `projects/*/locations/*/backupPlans/*/backups/*`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Field match expression used to filter the results.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Field by which to sort the results.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. The target number of results to return in a single response. If not specified, a default value will be chosen by the service. Note that the response may include a partial list and a caller should only rely on the response's next_page_token to determine if there are more instances left to be queried.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The value of next_page_token received from a previous `ListVolumeBackups` call. Provide this to retrieve the subsequent page in a multi-page list of results. When paginating, all other parameters provided to `ListVolumeBackups` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListVolumeBackupsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/volumeRestores:
    get:
      description: Lists the VolumeRestores for a given Restore.
      operationId: gkebackup.projects.locations.restorePlans.restores.volumeRestores.list
      parameters:
        - description: "Required. The Restore that contains the VolumeRestores to list. Format: `projects/*/locations/*/restorePlans/*/restores/*`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Field match expression used to filter the results.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Field by which to sort the results.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. The target number of results to return in a single response. If not specified, a default value will be chosen by the service. Note that the response may include a partial list and a caller should only rely on the response's next_page_token to determine if there are more instances left to be queried.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The value of next_page_token received from a previous `ListVolumeRestores` call. Provide this to retrieve the subsequent page in a multi-page list of results. When paginating, all other parameters provided to `ListVolumeRestores` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListVolumeRestoresResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{resource}:getIamPolicy:
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkebackup.projects.locations.restorePlans.restores.volumeRestores.getIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{resource}:setIamPolicy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: gkebackup.projects.locations.restorePlans.restores.volumeRestores.setIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetIamPolicyRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{resource}:testIamPermissions:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkebackup.projects.locations.restorePlans.restores.volumeRestores.testIamPermissions
      parameters:
        - description: "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestIamPermissionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AuditConfig:
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: "#/components/schemas/AuditLogConfig"
          type: array
        service:
          description: Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
          type: string
      type: object
    AuditLogConfig:
      description: "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
      properties:
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
      type: object
    Backup:
      description: "Represents a request to perform a single point-in-time capture of some portion of the state of a GKE cluster, the record of the backup operation itself, and an anchor for the underlying artifacts that comprise the Backup (the config backup and VolumeBackups). Next id: 29"
      properties:
        allNamespaces:
          description: Output only. If True, all namespaces were included in the Backup.
          readOnly: true
          type: boolean
        clusterMetadata:
          $ref: "#/components/schemas/ClusterMetadata"
          description: Output only. Information about the GKE cluster from which this Backup was created.
          readOnly: true
        completeTime:
          description: Output only. Completion time of the Backup
          format: google-datetime
          readOnly: true
          type: string
        configBackupSizeBytes:
          description: Output only. The size of the config backup in bytes.
          format: int64
          readOnly: true
          type: string
        containsSecrets:
          description: Output only. Whether or not the Backup contains Kubernetes Secrets. Controlled by the parent BackupPlan's include_secrets value.
          readOnly: true
          type: boolean
        containsVolumeData:
          description: Output only. Whether or not the Backup contains volume data. Controlled by the parent BackupPlan's include_volume_data value.
          readOnly: true
          type: boolean
        createTime:
          description: Output only. The timestamp when this Backup resource was created.
          format: google-datetime
          readOnly: true
          type: string
        deleteLockDays:
          description: Optional. Minimum age for this Backup (in days). If this field is set to a non-zero value, the Backup will be "locked" against deletion (either manual or automatic deletion) for the number of days provided (measured from the creation time of the Backup). MUST be an integer value between 0-90 (inclusive). Defaults to parent BackupPlan's backup_delete_lock_days setting and may only be increased (either at creation time or in a subsequent update).
          format: int32
          type: integer
        deleteLockExpireTime:
          description: Output only. The time at which an existing delete lock will expire for this backup (calculated from create_time + delete_lock_days).
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. User specified descriptive string for this Backup.
          type: string
        encryptionKey:
          $ref: "#/components/schemas/EncryptionKey"
          description: Output only. The customer managed encryption key that was used to encrypt the Backup's artifacts. Inherited from the parent BackupPlan's encryption_key value.
          readOnly: true
        etag:
          description: "Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a backup from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform backup updates in order to avoid race conditions: An `etag` is returned in the response to `GetBackup`, and systems are expected to put that etag in the request to `UpdateBackup` or `DeleteBackup` to ensure that their change will be applied to the same version of the resource."
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. A set of custom labels supplied by user.
          type: object
        manual:
          description: Output only. This flag indicates whether this Backup resource was created manually by a user or via a schedule in the BackupPlan. A value of True means that the Backup was created manually.
          readOnly: true
          type: boolean
        name:
          description: Output only. The fully qualified name of the Backup. `projects/*/locations/*/backupPlans/*/backups/*`
          readOnly: true
          type: string
        podCount:
          description: Output only. The total number of Kubernetes Pods contained in the Backup.
          format: int32
          readOnly: true
          type: integer
        resourceCount:
          description: Output only. The total number of Kubernetes resources included in the Backup.
          format: int32
          readOnly: true
          type: integer
        retainDays:
          description: "Optional. The age (in days) after which this Backup will be automatically deleted. Must be an integer value >= 0: - If 0, no automatic deletion will occur for this Backup. - If not 0, this must be >= delete_lock_days and <= 365. Once a Backup is created, this value may only be increased. Defaults to the parent BackupPlan's backup_retain_days value."
          format: int32
          type: integer
        retainExpireTime:
          description: Output only. The time at which this Backup will be automatically deleted (calculated from create_time + retain_days).
          format: google-datetime
          readOnly: true
          type: string
        selectedApplications:
          $ref: "#/components/schemas/NamespacedNames"
          description: Output only. If set, the list of ProtectedApplications whose resources were included in the Backup.
          readOnly: true
        selectedNamespaces:
          $ref: "#/components/schemas/Namespaces"
          description: Output only. If set, the list of namespaces that were included in the Backup.
          readOnly: true
        sizeBytes:
          description: Output only. The total size of the Backup in bytes = config backup size + sum(volume backup sizes)
          format: int64
          readOnly: true
          type: string
        state:
          description: Output only. Current state of the Backup
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - DELETING
          readOnly: true
          type: string
        stateReason:
          description: Output only. Human-readable description of why the backup is in the current `state`.
          readOnly: true
          type: string
        uid:
          description: Output only. Server generated global unique identifier of [UUID4](https://en.wikipedia.org/wiki/Universally_unique_identifier)
          readOnly: true
          type: string
        updateTime:
          description: Output only. The timestamp when this Backup resource was last updated.
          format: google-datetime
          readOnly: true
          type: string
        volumeCount:
          description: Output only. The total number of volume backups contained in the Backup.
          format: int32
          readOnly: true
          type: integer
      type: object
    BackupConfig:
      description: BackupConfig defines the configuration of Backups created via this BackupPlan.
      properties:
        allNamespaces:
          description: If True, include all namespaced resources
          type: boolean
        encryptionKey:
          $ref: "#/components/schemas/EncryptionKey"
          description: 'Optional. This defines a customer managed encryption key that will be used to encrypt the "config" portion (the Kubernetes resources) of Backups created via this plan. Default (empty): Config backup artifacts will not be encrypted.'
        includeSecrets:
          description: "Optional. This flag specifies whether Kubernetes Secret resources should be included when they fall into the scope of Backups. Default: False"
          type: boolean
        includeVolumeData:
          description: "Optional. This flag specifies whether volume data should be backed up when PVCs are included in the scope of a Backup. Default: False"
          type: boolean
        selectedApplications:
          $ref: "#/components/schemas/NamespacedNames"
          description: If set, include just the resources referenced by the listed ProtectedApplications.
        selectedNamespaces:
          $ref: "#/components/schemas/Namespaces"
          description: If set, include just the resources in the listed namespaces.
      type: object
    BackupPlan:
      description: Defines the configuration and scheduling for a "line" of Backups.
      properties:
        backupConfig:
          $ref: "#/components/schemas/BackupConfig"
          description: Optional. Defines the configuration of Backups created via this BackupPlan.
        backupSchedule:
          $ref: "#/components/schemas/Schedule"
          description: Optional. Defines a schedule for automatic Backup creation via this BackupPlan.
        cluster:
          description: "Required. Immutable. The source cluster from which Backups will be created via this BackupPlan. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*`"
          type: string
        createTime:
          description: Output only. The timestamp when this BackupPlan resource was created.
          format: google-datetime
          readOnly: true
          type: string
        deactivated:
          description: "Optional. This flag indicates whether this BackupPlan has been deactivated. Setting this field to True locks the BackupPlan such that no further updates will be allowed (except deletes), including the deactivated field itself. It also prevents any new Backups from being created via this BackupPlan (including scheduled Backups). Default: False"
          type: boolean
        description:
          description: Optional. User specified descriptive string for this BackupPlan.
          type: string
        etag:
          description: "Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a backup plan from overwriting each other. It is strongly suggested that systems make use of the 'etag' in the read-modify-write cycle to perform BackupPlan updates in order to avoid race conditions: An `etag` is returned in the response to `GetBackupPlan`, and systems are expected to put that etag in the request to `UpdateBackupPlan` or `DeleteBackupPlan` to ensure that their change will be applied to the same version of the resource."
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. A set of custom labels supplied by user.
          type: object
        name:
          description: "Output only. The full name of the BackupPlan resource. Format: `projects/*/locations/*/backupPlans/*`"
          readOnly: true
          type: string
        protectedPodCount:
          description: Output only. The number of Kubernetes Pods backed up in the last successful Backup created via this BackupPlan.
          format: int32
          readOnly: true
          type: integer
        retentionPolicy:
          $ref: "#/components/schemas/RetentionPolicy"
          description: Optional. RetentionPolicy governs lifecycle of Backups created under this plan.
        state:
          description: Output only. State of the BackupPlan. This State field reflects the various stages a BackupPlan can be in during the Create operation. It will be set to "DEACTIVATED" if the BackupPlan is deactivated on an Update
          enum:
            - STATE_UNSPECIFIED
            - CLUSTER_PENDING
            - PROVISIONING
            - READY
            - FAILED
            - DEACTIVATED
            - DELETING
          readOnly: true
          type: string
        stateReason:
          description: Output only. Human-readable description of why BackupPlan is in the current `state`
          readOnly: true
          type: string
        uid:
          description: Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The timestamp when this BackupPlan resource was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    Binding:
      description: Associates `members`, or principals, with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
          description: The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        members:
          description: "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`."
          items:
            type: string
          type: array
        role:
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
      type: object
    ClusterMetadata:
      description: Information about the GKE cluster from which this Backup was created.
      properties:
        anthosVersion:
          description: Output only. Anthos version
          readOnly: true
          type: string
        backupCrdVersions:
          additionalProperties:
            type: string
          description: Output only. A list of the Backup for GKE CRD versions found in the cluster.
          readOnly: true
          type: object
        cluster:
          description: "Output only. The source cluster from which this Backup was created. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*` This is inherited from the parent BackupPlan's cluster field."
          readOnly: true
          type: string
        gkeVersion:
          description: Output only. GKE version
          readOnly: true
          type: string
        k8sVersion:
          description: Output only. The Kubernetes server version of the source cluster.
          readOnly: true
          type: string
      type: object
    ClusterResourceRestoreScope:
      description: Defines the scope of cluster-scoped resources to restore. Some group kinds are not reasonable choices for a restore, and will cause an error if selected here. Any scope selection that would restore "all valid" resources automatically excludes these group kinds. - gkebackup.gke.io/BackupJob - gkebackup.gke.io/RestoreJob - metrics.k8s.io/NodeMetrics - migration.k8s.io/StorageState - migration.k8s.io/StorageVersionMigration - Node - snapshot.storage.k8s.io/VolumeSnapshotContent - storage.k8s.io/CSINode Some group kinds are driven by restore configuration elsewhere, and will cause an error if selected here. - Namespace - PersistentVolume
      properties:
        allGroupKinds:
          description: Optional. If True, all valid cluster-scoped resources will be restored. Mutually exclusive to any other field in the message.
          type: boolean
        excludedGroupKinds:
          description: Optional. A list of cluster-scoped resource group kinds to NOT restore from the backup. If specified, all valid cluster-scoped resources will be restored except for those specified in the list. Mutually exclusive to any other field in the message.
          items:
            $ref: "#/components/schemas/GroupKind"
          type: array
        noGroupKinds:
          description: Optional. If True, no cluster-scoped resources will be restored. This has the same restore scope as if the message is not defined. Mutually exclusive to any other field in the message.
          type: boolean
        selectedGroupKinds:
          description: Optional. A list of cluster-scoped resource group kinds to restore from the backup. If specified, only the selected resources will be restored. Mutually exclusive to any other field in the message.
          items:
            $ref: "#/components/schemas/GroupKind"
          type: array
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    EncryptionKey:
      description: Defined a customer managed encryption key that will be used to encrypt Backup artifacts.
      properties:
        gcpKmsEncryptionKey:
          description: "Optional. Google Cloud KMS encryption key. Format: `projects/*/locations/*/keyRings/*/cryptoKeys/*`"
          type: string
      type: object
    Expr:
      description: "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
      properties:
        description:
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
          type: string
      type: object
    GoogleLongrunningCancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    GoogleLongrunningListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleLongrunningOperation"
          type: array
      type: object
    GoogleLongrunningOperation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    GoogleRpcStatus:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    GroupKind:
      description: This is a direct map to the Kubernetes GroupKind type [GroupKind](https://godoc.org/k8s.io/apimachinery/pkg/runtime/schema#GroupKind) and is used for identifying specific "types" of resources to restore.
      properties:
        resourceGroup:
          description: 'Optional. API group string of a Kubernetes resource, e.g. "apiextensions.k8s.io", "storage.k8s.io", etc. Note: use empty string for core API group'
          type: string
        resourceKind:
          description: Optional. Kind of a Kubernetes resource, must be in UpperCamelCase (PascalCase) and singular form. E.g. "CustomResourceDefinition", "StorageClass", etc.
          type: string
      type: object
    ListBackupPlansResponse:
      description: Response message for ListBackupPlans.
      properties:
        backupPlans:
          description: The list of BackupPlans matching the given criteria.
          items:
            $ref: "#/components/schemas/BackupPlan"
          type: array
        nextPageToken:
          description: A token which may be sent as page_token in a subsequent `ListBackupPlans` call to retrieve the next page of results. If this field is omitted or empty, then there are no more results to return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListBackupsResponse:
      description: Response message for ListBackups.
      properties:
        backups:
          description: The list of Backups matching the given criteria.
          items:
            $ref: "#/components/schemas/Backup"
          type: array
        nextPageToken:
          description: A token which may be sent as page_token in a subsequent `ListBackups` call to retrieve the next page of results. If this field is omitted or empty, then there are no more results to return.
          type: string
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListRestorePlansResponse:
      description: Response message for ListRestorePlans.
      properties:
        nextPageToken:
          description: A token which may be sent as page_token in a subsequent `ListRestorePlans` call to retrieve the next page of results. If this field is omitted or empty, then there are no more results to return.
          type: string
        restorePlans:
          description: The list of RestorePlans matching the given criteria.
          items:
            $ref: "#/components/schemas/RestorePlan"
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListRestoresResponse:
      description: Response message for ListRestores.
      properties:
        nextPageToken:
          description: A token which may be sent as page_token in a subsequent `ListRestores` call to retrieve the next page of results. If this field is omitted or empty, then there are no more results to return.
          type: string
        restores:
          description: The list of Restores matching the given criteria.
          items:
            $ref: "#/components/schemas/Restore"
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListVolumeBackupsResponse:
      description: Response message for ListVolumeBackups.
      properties:
        nextPageToken:
          description: A token which may be sent as page_token in a subsequent `ListVolumeBackups` call to retrieve the next page of results. If this field is omitted or empty, then there are no more results to return.
          type: string
        volumeBackups:
          description: The list of VolumeBackups matching the given criteria.
          items:
            $ref: "#/components/schemas/VolumeBackup"
          type: array
      type: object
    ListVolumeRestoresResponse:
      description: Response message for ListVolumeRestores.
      properties:
        nextPageToken:
          description: A token which may be sent as page_token in a subsequent `ListVolumeRestores` call to retrieve the next page of results. If this field is omitted or empty, then there are no more results to return.
          type: string
        volumeRestores:
          description: The list of VolumeRestores matching the given criteria.
          items:
            $ref: "#/components/schemas/VolumeRestore"
          type: array
      type: object
    Location:
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      type: object
    NamespacedName:
      description: A reference to a namespaced resource in Kubernetes.
      properties:
        name:
          description: Optional. The name of the Kubernetes resource.
          type: string
        namespace:
          description: Optional. The Namespace of the Kubernetes resource.
          type: string
      type: object
    NamespacedNames:
      description: A list of namespaced Kubernetes resources.
      properties:
        namespacedNames:
          description: Optional. A list of namespaced Kubernetes resources.
          items:
            $ref: "#/components/schemas/NamespacedName"
          type: array
      type: object
    Namespaces:
      description: A list of Kubernetes Namespaces
      properties:
        namespaces:
          description: Optional. A list of Kubernetes Namespaces
          items:
            type: string
          type: array
      type: object
    OperationMetadata:
      description: Represents the metadata of the long-running operation.
      properties:
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        requestedCancellation:
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
      type: object
    Policy:
      description: "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/AuditConfig"
          type: array
        bindings:
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
          format: byte
          type: string
        version:
          description: "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
          format: int32
          type: integer
      type: object
    ResourceFilter:
      description: ResourceFilter specifies matching criteria to limit the scope of a change to a specific set of kubernetes resources that are selected for restoration from a backup.
      properties:
        groupKinds:
          description: Optional. (Filtering parameter) Any resource subject to transformation must belong to one of the listed "types". If this field is not provided, no type filtering will be performed (all resources of all types matching previous filtering parameters will be candidates for transformation).
          items:
            $ref: "#/components/schemas/GroupKind"
          type: array
        jsonPath:
          description: Optional. This is a [JSONPath] (https://github.com/json-path/JsonPath/blob/master/README.md) expression that matches specific fields of candidate resources and it operates as a filtering parameter (resources that are not matched with this expression will not be candidates for transformation).
          type: string
        namespaces:
          description: Optional. (Filtering parameter) Any resource subject to transformation must be contained within one of the listed Kubernetes Namespace in the Backup. If this field is not provided, no namespace filtering will be performed (all resources in all Namespaces, including all cluster-scoped resources, will be candidates for transformation).
          items:
            type: string
          type: array
      type: object
    Restore:
      description: "Represents both a request to Restore some portion of a Backup into a target GKE cluster and a record of the restore operation itself. Next id: 20"
      properties:
        backup:
          description: "Required. Immutable. A reference to the Backup used as the source from which this Restore will restore. Note that this Backup must be a sub-resource of the RestorePlan's backup_plan. Format: `projects/*/locations/*/backupPlans/*/backups/*`."
          type: string
        cluster:
          description: "Output only. The target cluster into which this Restore will restore data. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*` Inherited from parent RestorePlan's cluster value."
          readOnly: true
          type: string
        completeTime:
          description: Output only. Timestamp of when the restore operation completed.
          format: google-datetime
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when this Restore resource was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: User specified descriptive string for this Restore.
          type: string
        etag:
          description: "Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform restore updates in order to avoid race conditions: An `etag` is returned in the response to `GetRestore`, and systems are expected to put that etag in the request to `UpdateRestore` or `DeleteRestore` to ensure that their change will be applied to the same version of the resource."
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: A set of custom labels supplied by user.
          type: object
        name:
          description: "Output only. The full name of the Restore resource. Format: `projects/*/locations/*/restorePlans/*/restores/*`"
          readOnly: true
          type: string
        resourcesExcludedCount:
          description: Output only. Number of resources excluded during the restore execution.
          format: int32
          readOnly: true
          type: integer
        resourcesFailedCount:
          description: Output only. Number of resources that failed to be restored during the restore execution.
          format: int32
          readOnly: true
          type: integer
        resourcesRestoredCount:
          description: Output only. Number of resources restored during the restore execution.
          format: int32
          readOnly: true
          type: integer
        restoreConfig:
          $ref: "#/components/schemas/RestoreConfig"
          description: Output only. Configuration of the Restore. Inherited from parent RestorePlan's restore_config.
          readOnly: true
        state:
          description: Output only. The current state of the Restore.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - DELETING
          readOnly: true
          type: string
        stateReason:
          description: Output only. Human-readable description of why the Restore is in its current state.
          readOnly: true
          type: string
        uid:
          description: Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The timestamp when this Restore resource was last updated.
          format: google-datetime
          readOnly: true
          type: string
        volumesRestoredCount:
          description: Output only. Number of volumes restored during the restore execution.
          format: int32
          readOnly: true
          type: integer
      type: object
    RestoreConfig:
      description: "Configuration of a restore. Next id: 14"
      properties:
        allNamespaces:
          description: Restore all namespaced resources in the Backup if set to "True". Specifying this field to "False" is an error.
          type: boolean
        clusterResourceConflictPolicy:
          description: Optional. Defines the behavior for handling the situation where cluster-scoped resources being restored already exist in the target cluster. This MUST be set to a value other than CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED if cluster_resource_restore_scope is not empty.
          enum:
            - CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED
            - USE_EXISTING_VERSION
            - USE_BACKUP_VERSION
          type: string
        clusterResourceRestoreScope:
          $ref: "#/components/schemas/ClusterResourceRestoreScope"
          description: Optional. Identifies the cluster-scoped resources to restore from the Backup. Not specifying it means NO cluster resource will be restored.
        excludedNamespaces:
          $ref: "#/components/schemas/Namespaces"
          description: A list of selected namespaces excluded from restoration. All namespaces except those in this list will be restored.
        namespacedResourceRestoreMode:
          description: Optional. Defines the behavior for handling the situation where sets of namespaced resources being restored already exist in the target cluster. This MUST be set to a value other than NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED.
          enum:
            - NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED
            - DELETE_AND_RESTORE
            - FAIL_ON_CONFLICT
          type: string
        noNamespaces:
          description: Do not restore any namespaced resources if set to "True". Specifying this field to "False" is not allowed.
          type: boolean
        selectedApplications:
          $ref: "#/components/schemas/NamespacedNames"
          description: A list of selected ProtectedApplications to restore. The listed ProtectedApplications and all the resources to which they refer will be restored.
        selectedNamespaces:
          $ref: "#/components/schemas/Namespaces"
          description: A list of selected Namespaces to restore from the Backup. The listed Namespaces and all resources contained in them will be restored.
        substitutionRules:
          description: Optional. A list of transformation rules to be applied against Kubernetes resources as they are selected for restoration from a Backup. Rules are executed in order defined - this order matters, as changes made by a rule may impact the filtering logic of subsequent rules. An empty list means no substitution will occur.
          items:
            $ref: "#/components/schemas/SubstitutionRule"
          type: array
        transformationRules:
          description: Optional. A list of transformation rules to be applied against Kubernetes resources as they are selected for restoration from a Backup. Rules are executed in order defined - this order matters, as changes made by a rule may impact the filtering logic of subsequent rules. An empty list means no transformation will occur.
          items:
            $ref: "#/components/schemas/TransformationRule"
          type: array
        volumeDataRestorePolicy:
          description: "Optional. Specifies the mechanism to be used to restore volume data. Default: VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED (will be treated as NO_VOLUME_DATA_RESTORATION)."
          enum:
            - VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED
            - RESTORE_VOLUME_DATA_FROM_BACKUP
            - REUSE_VOLUME_HANDLE_FROM_BACKUP
            - NO_VOLUME_DATA_RESTORATION
          type: string
      type: object
    RestorePlan:
      description: "The configuration of a potential series of Restore operations to be performed against Backups belong to a particular BackupPlan. Next id: 13"
      properties:
        backupPlan:
          description: "Required. Immutable. A reference to the BackupPlan from which Backups may be used as the source for Restores created via this RestorePlan. Format: `projects/*/locations/*/backupPlans/*`."
          type: string
        cluster:
          description: "Required. Immutable. The target cluster into which Restores created via this RestorePlan will restore data. NOTE: the cluster's region must be the same as the RestorePlan. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*`"
          type: string
        createTime:
          description: Output only. The timestamp when this RestorePlan resource was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. User specified descriptive string for this RestorePlan.
          type: string
        etag:
          description: "Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform restore updates in order to avoid race conditions: An `etag` is returned in the response to `GetRestorePlan`, and systems are expected to put that etag in the request to `UpdateRestorePlan` or `DeleteRestorePlan` to ensure that their change will be applied to the same version of the resource."
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. A set of custom labels supplied by user.
          type: object
        name:
          description: "Output only. The full name of the RestorePlan resource. Format: `projects/*/locations/*/restorePlans/*`."
          readOnly: true
          type: string
        restoreConfig:
          $ref: "#/components/schemas/RestoreConfig"
          description: Required. Configuration of Restores created via this RestorePlan.
        state:
          description: Output only. State of the RestorePlan. This State field reflects the various stages a RestorePlan can be in during the Create operation.
          enum:
            - STATE_UNSPECIFIED
            - CLUSTER_PENDING
            - READY
            - FAILED
            - DELETING
          readOnly: true
          type: string
        stateReason:
          description: Output only. Human-readable description of why RestorePlan is in the current `state`
          readOnly: true
          type: string
        uid:
          description: Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The timestamp when this RestorePlan resource was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    RetentionPolicy:
      description: RetentionPolicy defines a Backup retention policy for a BackupPlan.
      properties:
        backupDeleteLockDays:
          description: "Optional. Minimum age for Backups created via this BackupPlan (in days). This field MUST be an integer value between 0-90 (inclusive). A Backup created under this BackupPlan will NOT be deletable until it reaches Backup's (create_time + backup_delete_lock_days). Updating this field of a BackupPlan does NOT affect existing Backups under it. Backups created AFTER a successful update will inherit the new value. Default: 0 (no delete blocking)"
          format: int32
          type: integer
        backupRetainDays:
          description: "Optional. The default maximum age of a Backup created via this BackupPlan. This field MUST be an integer value >= 0 and <= 365. If specified, a Backup created under this BackupPlan will be automatically deleted after its age reaches (create_time + backup_retain_days). If not specified, Backups created under this BackupPlan will NOT be subject to automatic deletion. Updating this field does NOT affect existing Backups under it. Backups created AFTER a successful update will automatically pick up the new value. NOTE: backup_retain_days must be >= backup_delete_lock_days. If cron_schedule is defined, then this must be <= 360 * the creation interval. If rpo_config is defined, then this must be <= 360 * target_rpo_minutes / (1440minutes/day). Default: 0 (no automatic deletion)"
          format: int32
          type: integer
        locked:
          description: "Optional. This flag denotes whether the retention policy of this BackupPlan is locked. If set to True, no further update is allowed on this policy, including the `locked` field itself. Default: False"
          type: boolean
      type: object
    Schedule:
      description: Defines scheduling parameters for automatically creating Backups via this BackupPlan.
      properties:
        cronSchedule:
          description: "Optional. A standard [cron](https://wikipedia.com/wiki/cron) string that defines a repeating schedule for creating Backups via this BackupPlan. This is mutually exclusive with the rpo_config field since at most one schedule can be defined for a BackupPlan. If this is defined, then backup_retain_days must also be defined. Default (empty): no automatic backup creation will occur."
          type: string
        paused:
          description: "Optional. This flag denotes whether automatic Backup creation is paused for this BackupPlan. Default: False"
          type: boolean
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
          description: "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        updateMask:
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          format: google-fieldmask
          type: string
      type: object
    SubstitutionRule:
      description: A transformation rule to be applied against Kubernetes resources as they are selected for restoration from a Backup. A rule contains both filtering logic (which resources are subject to substitution) and substitution logic.
      properties:
        newValue:
          description: Optional. This is the new value to set for any fields that pass the filtering and selection criteria. To remove a value from a Kubernetes resource, either leave this field unspecified, or set it to the empty string ("").
          type: string
        originalValuePattern:
          description: Optional. (Filtering parameter) This is a [regular expression] (https://en.wikipedia.org/wiki/Regular_expression) that is compared against the fields matched by the target_json_path expression (and must also have passed the previous filters). Substitution will not be performed against fields whose value does not match this expression. If this field is NOT specified, then ALL fields matched by the target_json_path expression will undergo substitution. Note that an empty (e.g., "", rather than unspecified) value for this field will only match empty fields.
          type: string
        targetGroupKinds:
          description: Optional. (Filtering parameter) Any resource subject to substitution must belong to one of the listed "types". If this field is not provided, no type filtering will be performed (all resources of all types matching previous filtering parameters will be candidates for substitution).
          items:
            $ref: "#/components/schemas/GroupKind"
          type: array
        targetJsonPath:
          description: Required. This is a [JSONPath] (https://kubernetes.io/docs/reference/kubectl/jsonpath/) expression that matches specific fields of candidate resources and it operates as both a filtering parameter (resources that are not matched with this expression will not be candidates for substitution) as well as a field identifier (identifies exactly which fields out of the candidate resources will be modified).
          type: string
        targetNamespaces:
          description: Optional. (Filtering parameter) Any resource subject to substitution must be contained within one of the listed Kubernetes Namespace in the Backup. If this field is not provided, no namespace filtering will be performed (all resources in all Namespaces, including all cluster-scoped resources, will be candidates for substitution). To mix cluster-scoped and namespaced resources in the same rule, use an empty string ("") as one of the target namespaces.
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
          type: array
      type: object
    TransformationRule:
      description: A transformation rule to be applied against Kubernetes resources as they are selected for restoration from a Backup. A rule contains both filtering logic (which resources are subject to transform) and transformation logic.
      properties:
        description:
          description: Optional. The description is a user specified string description of the transformation rule.
          type: string
        fieldActions:
          description: Required. A list of transformation rule actions to take against candidate resources. Actions are executed in order defined - this order matters, as they could potentially interfere with each other and the first operation could affect the outcome of the second operation.
          items:
            $ref: "#/components/schemas/TransformationRuleAction"
          type: array
        resourceFilter:
          $ref: "#/components/schemas/ResourceFilter"
          description: Optional. This field is used to specify a set of fields that should be used to determine which resources in backup should be acted upon by the supplied transformation rule actions, and this will ensure that only specific resources are affected by transformation rule actions.
      type: object
    TransformationRuleAction:
      description: TransformationRuleAction defines a TransformationRule action based on the JSON Patch RFC (https://www.rfc-editor.org/rfc/rfc6902)
      properties:
        fromPath:
          description: Optional. A string containing a JSON Pointer value that references the location in the target document to move the value from.
          type: string
        op:
          description: Required. op specifies the operation to perform.
          enum:
            - OP_UNSPECIFIED
            - REMOVE
            - MOVE
            - COPY
            - ADD
            - TEST
            - REPLACE
          type: string
        path:
          description: Optional. A string containing a JSON-Pointer value that references a location within the target document where the operation is performed.
          type: string
        value:
          description: Optional. A string that specifies the desired value in string format to use for transformation.
          type: string
      type: object
    VolumeBackup:
      description: "Represents the backup of a specific persistent volume as a component of a Backup - both the record of the operation and a pointer to the underlying storage-specific artifacts. Next id: 14"
      properties:
        completeTime:
          description: Output only. The timestamp when the associated underlying volume backup operation completed.
          format: google-datetime
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when this VolumeBackup resource was created.
          format: google-datetime
          readOnly: true
          type: string
        diskSizeBytes:
          description: Output only. The minimum size of the disk to which this VolumeBackup can be restored.
          format: int64
          readOnly: true
          type: string
        etag:
          description: Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a volume backup from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform volume backup updates in order to avoid race conditions.
          readOnly: true
          type: string
        format:
          description: Output only. The format used for the volume backup.
          enum:
            - VOLUME_BACKUP_FORMAT_UNSPECIFIED
            - GCE_PERSISTENT_DISK
          readOnly: true
          type: string
        name:
          description: "Output only. The full name of the VolumeBackup resource. Format: `projects/*/locations/*/backupPlans/*/backups/*/volumeBackups/*`."
          readOnly: true
          type: string
        sourcePvc:
          $ref: "#/components/schemas/NamespacedName"
          description: Output only. A reference to the source Kubernetes PVC from which this VolumeBackup was created.
          readOnly: true
        state:
          description: Output only. The current state of this VolumeBackup.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - SNAPSHOTTING
            - UPLOADING
            - SUCCEEDED
            - FAILED
            - DELETING
          readOnly: true
          type: string
        stateMessage:
          description: Output only. A human readable message explaining why the VolumeBackup is in its current state.
          readOnly: true
          type: string
        storageBytes:
          description: Output only. The aggregate size of the underlying artifacts associated with this VolumeBackup in the backup storage. This may change over time when multiple backups of the same volume share the same backup storage location. In particular, this is likely to increase in size when the immediately preceding backup of the same volume is deleted.
          format: int64
          readOnly: true
          type: string
        uid:
          description: Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The timestamp when this VolumeBackup resource was last updated.
          format: google-datetime
          readOnly: true
          type: string
        volumeBackupHandle:
          description: Output only. A storage system-specific opaque handle to the underlying volume backup.
          readOnly: true
          type: string
      type: object
    VolumeRestore:
      description: "Represents the operation of restoring a volume from a VolumeBackup. Next id: 13"
      properties:
        completeTime:
          description: Output only. The timestamp when the associated underlying volume restoration completed.
          format: google-datetime
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when this VolumeRestore resource was created.
          format: google-datetime
          readOnly: true
          type: string
        etag:
          description: Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a volume restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform volume restore updates in order to avoid race conditions.
          readOnly: true
          type: string
        name:
          description: "Output only. Full name of the VolumeRestore resource. Format: `projects/*/locations/*/restorePlans/*/restores/*/volumeRestores/*`"
          readOnly: true
          type: string
        state:
          description: Output only. The current state of this VolumeRestore.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - RESTORING
            - SUCCEEDED
            - FAILED
            - DELETING
          readOnly: true
          type: string
        stateMessage:
          description: Output only. A human readable message explaining why the VolumeRestore is in its current state.
          readOnly: true
          type: string
        targetPvc:
          $ref: "#/components/schemas/NamespacedName"
          description: Output only. The reference to the target Kubernetes PVC to be restored.
          readOnly: true
        uid:
          description: Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The timestamp when this VolumeRestore resource was last updated.
          format: google-datetime
          readOnly: true
          type: string
        volumeBackup:
          description: "Output only. The full name of the VolumeBackup from which the volume will be restored. Format: `projects/*/locations/*/backupPlans/*/backups/*/volumeBackups/*`."
          readOnly: true
          type: string
        volumeHandle:
          description: Output only. A storage system-specific opaque handler to the underlying volume created for the target PVC from the volume backup.
          readOnly: true
          type: string
        volumeType:
          description: Output only. The type of volume provisioned
          enum:
            - VOLUME_TYPE_UNSPECIFIED
            - GCE_PERSISTENT_DISK
          readOnly: true
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
