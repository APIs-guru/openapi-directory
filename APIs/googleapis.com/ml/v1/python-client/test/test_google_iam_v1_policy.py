# coding: utf-8

"""
    AI Platform Training & Prediction API

    An API to enable creating and using machine learning models.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_iam_v1_policy import GoogleIamV1Policy

class TestGoogleIamV1Policy(unittest.TestCase):
    """GoogleIamV1Policy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleIamV1Policy:
        """Test GoogleIamV1Policy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleIamV1Policy`
        """
        model = GoogleIamV1Policy()
        if include_optional:
            return GoogleIamV1Policy(
                audit_configs = [
                    openapi_client.models.google_iam_v1__audit_config.GoogleIamV1__AuditConfig(
                        audit_log_configs = [
                            openapi_client.models.google_iam_v1__audit_log_config.GoogleIamV1__AuditLogConfig(
                                exempted_members = [
                                    ''
                                    ], 
                                log_type = 'LOG_TYPE_UNSPECIFIED', )
                            ], 
                        service = '', )
                    ],
                bindings = [
                    openapi_client.models.google_iam_v1__binding.GoogleIamV1__Binding(
                        condition = openapi_client.models.google_type__expr.GoogleType__Expr(
                            description = '', 
                            expression = '', 
                            location = '', 
                            title = '', ), 
                        members = [
                            ''
                            ], 
                        role = '', )
                    ],
                etag = 'YQ==',
                version = 56
            )
        else:
            return GoogleIamV1Policy(
        )
        """

    def testGoogleIamV1Policy(self):
        """Test GoogleIamV1Policy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
