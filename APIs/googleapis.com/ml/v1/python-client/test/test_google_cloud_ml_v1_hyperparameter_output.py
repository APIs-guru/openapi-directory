# coding: utf-8

"""
    AI Platform Training & Prediction API

    An API to enable creating and using machine learning models.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_ml_v1_hyperparameter_output import GoogleCloudMlV1HyperparameterOutput

class TestGoogleCloudMlV1HyperparameterOutput(unittest.TestCase):
    """GoogleCloudMlV1HyperparameterOutput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudMlV1HyperparameterOutput:
        """Test GoogleCloudMlV1HyperparameterOutput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudMlV1HyperparameterOutput`
        """
        model = GoogleCloudMlV1HyperparameterOutput()
        if include_optional:
            return GoogleCloudMlV1HyperparameterOutput(
                all_metrics = [
                    openapi_client.models.google_cloud_ml_v1_hyperparameter_output_hyperparameter_metric.GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetric(
                        objective_value = 1.337, 
                        training_step = '', )
                    ],
                built_in_algorithm_output = openapi_client.models.google_cloud_ml_v1__built_in_algorithm_output.GoogleCloudMlV1__BuiltInAlgorithmOutput(
                    framework = '', 
                    model_path = '', 
                    python_version = '', 
                    runtime_version = '', ),
                end_time = '',
                final_metric = openapi_client.models.google_cloud_ml_v1_hyperparameter_output_hyperparameter_metric.GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetric(
                    objective_value = 1.337, 
                    training_step = '', ),
                hyperparameters = {
                    'key' : ''
                    },
                is_trial_stopped_early = True,
                start_time = '',
                state = 'STATE_UNSPECIFIED',
                trial_id = '',
                web_access_uris = {
                    'key' : ''
                    }
            )
        else:
            return GoogleCloudMlV1HyperparameterOutput(
        )
        """

    def testGoogleCloudMlV1HyperparameterOutput(self):
        """Test GoogleCloudMlV1HyperparameterOutput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
