# coding: utf-8

"""
    AI Platform Training & Prediction API

    An API to enable creating and using machine learning models.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_ml_v1_container_spec import GoogleCloudMlV1ContainerSpec

class TestGoogleCloudMlV1ContainerSpec(unittest.TestCase):
    """GoogleCloudMlV1ContainerSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudMlV1ContainerSpec:
        """Test GoogleCloudMlV1ContainerSpec
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudMlV1ContainerSpec`
        """
        model = GoogleCloudMlV1ContainerSpec()
        if include_optional:
            return GoogleCloudMlV1ContainerSpec(
                args = [
                    ''
                    ],
                command = [
                    ''
                    ],
                env = [
                    openapi_client.models.google_cloud_ml_v1__env_var.GoogleCloudMlV1__EnvVar(
                        name = '', 
                        value = '', )
                    ],
                image = '',
                ports = [
                    openapi_client.models.google_cloud_ml_v1__container_port.GoogleCloudMlV1__ContainerPort(
                        container_port = 56, )
                    ]
            )
        else:
            return GoogleCloudMlV1ContainerSpec(
        )
        """

    def testGoogleCloudMlV1ContainerSpec(self):
        """Test GoogleCloudMlV1ContainerSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
