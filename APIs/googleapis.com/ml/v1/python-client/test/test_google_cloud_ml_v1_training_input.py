# coding: utf-8

"""
    AI Platform Training & Prediction API

    An API to enable creating and using machine learning models.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_ml_v1_training_input import GoogleCloudMlV1TrainingInput

class TestGoogleCloudMlV1TrainingInput(unittest.TestCase):
    """GoogleCloudMlV1TrainingInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudMlV1TrainingInput:
        """Test GoogleCloudMlV1TrainingInput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudMlV1TrainingInput`
        """
        model = GoogleCloudMlV1TrainingInput()
        if include_optional:
            return GoogleCloudMlV1TrainingInput(
                args = [
                    ''
                    ],
                enable_web_access = True,
                encryption_config = openapi_client.models.google_cloud_ml_v1__encryption_config.GoogleCloudMlV1__EncryptionConfig(
                    kms_key_name = '', ),
                evaluator_config = openapi_client.models.google_cloud_ml_v1__replica_config.GoogleCloudMlV1__ReplicaConfig(
                    accelerator_config = openapi_client.models.google_cloud_ml_v1__accelerator_config.GoogleCloudMlV1__AcceleratorConfig(
                        count = '', 
                        type = 'ACCELERATOR_TYPE_UNSPECIFIED', ), 
                    container_args = [
                        ''
                        ], 
                    container_command = [
                        ''
                        ], 
                    disk_config = openapi_client.models.google_cloud_ml_v1__disk_config.GoogleCloudMlV1__DiskConfig(
                        boot_disk_size_gb = 56, 
                        boot_disk_type = '', ), 
                    image_uri = '', 
                    tpu_tf_version = '', ),
                evaluator_count = '',
                evaluator_type = '',
                hyperparameters = openapi_client.models.google_cloud_ml_v1__hyperparameter_spec.GoogleCloudMlV1__HyperparameterSpec(
                    algorithm = 'ALGORITHM_UNSPECIFIED', 
                    enable_trial_early_stopping = True, 
                    goal = 'GOAL_TYPE_UNSPECIFIED', 
                    hyperparameter_metric_tag = '', 
                    max_failed_trials = 56, 
                    max_parallel_trials = 56, 
                    max_trials = 56, 
                    params = [
                        openapi_client.models.google_cloud_ml_v1__parameter_spec.GoogleCloudMlV1__ParameterSpec(
                            categorical_values = [
                                ''
                                ], 
                            discrete_values = [
                                1.337
                                ], 
                            max_value = 1.337, 
                            min_value = 1.337, 
                            parameter_name = '', 
                            scale_type = 'NONE', 
                            type = 'PARAMETER_TYPE_UNSPECIFIED', )
                        ], 
                    resume_previous_job_id = '', ),
                job_dir = '',
                master_config = openapi_client.models.google_cloud_ml_v1__replica_config.GoogleCloudMlV1__ReplicaConfig(
                    accelerator_config = openapi_client.models.google_cloud_ml_v1__accelerator_config.GoogleCloudMlV1__AcceleratorConfig(
                        count = '', 
                        type = 'ACCELERATOR_TYPE_UNSPECIFIED', ), 
                    container_args = [
                        ''
                        ], 
                    container_command = [
                        ''
                        ], 
                    disk_config = openapi_client.models.google_cloud_ml_v1__disk_config.GoogleCloudMlV1__DiskConfig(
                        boot_disk_size_gb = 56, 
                        boot_disk_type = '', ), 
                    image_uri = '', 
                    tpu_tf_version = '', ),
                master_type = '',
                network = '',
                package_uris = [
                    ''
                    ],
                parameter_server_config = openapi_client.models.google_cloud_ml_v1__replica_config.GoogleCloudMlV1__ReplicaConfig(
                    accelerator_config = openapi_client.models.google_cloud_ml_v1__accelerator_config.GoogleCloudMlV1__AcceleratorConfig(
                        count = '', 
                        type = 'ACCELERATOR_TYPE_UNSPECIFIED', ), 
                    container_args = [
                        ''
                        ], 
                    container_command = [
                        ''
                        ], 
                    disk_config = openapi_client.models.google_cloud_ml_v1__disk_config.GoogleCloudMlV1__DiskConfig(
                        boot_disk_size_gb = 56, 
                        boot_disk_type = '', ), 
                    image_uri = '', 
                    tpu_tf_version = '', ),
                parameter_server_count = '',
                parameter_server_type = '',
                python_module = '',
                python_version = '',
                region = '',
                runtime_version = '',
                scale_tier = 'BASIC',
                scheduling = openapi_client.models.google_cloud_ml_v1__scheduling.GoogleCloudMlV1__Scheduling(
                    max_running_time = '', 
                    max_wait_time = '', 
                    priority = 56, ),
                service_account = '',
                use_chief_in_tf_config = True,
                worker_config = openapi_client.models.google_cloud_ml_v1__replica_config.GoogleCloudMlV1__ReplicaConfig(
                    accelerator_config = openapi_client.models.google_cloud_ml_v1__accelerator_config.GoogleCloudMlV1__AcceleratorConfig(
                        count = '', 
                        type = 'ACCELERATOR_TYPE_UNSPECIFIED', ), 
                    container_args = [
                        ''
                        ], 
                    container_command = [
                        ''
                        ], 
                    disk_config = openapi_client.models.google_cloud_ml_v1__disk_config.GoogleCloudMlV1__DiskConfig(
                        boot_disk_size_gb = 56, 
                        boot_disk_type = '', ), 
                    image_uri = '', 
                    tpu_tf_version = '', ),
                worker_count = '',
                worker_type = ''
            )
        else:
            return GoogleCloudMlV1TrainingInput(
        )
        """

    def testGoogleCloudMlV1TrainingInput(self):
        """Test GoogleCloudMlV1TrainingInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
