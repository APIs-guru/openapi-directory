# coding: utf-8

"""
    AI Platform Training & Prediction API

    An API to enable creating and using machine learning models.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_ml_v1_operation_metadata import GoogleCloudMlV1OperationMetadata

class TestGoogleCloudMlV1OperationMetadata(unittest.TestCase):
    """GoogleCloudMlV1OperationMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudMlV1OperationMetadata:
        """Test GoogleCloudMlV1OperationMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudMlV1OperationMetadata`
        """
        model = GoogleCloudMlV1OperationMetadata()
        if include_optional:
            return GoogleCloudMlV1OperationMetadata(
                create_time = '',
                end_time = '',
                is_cancellation_requested = True,
                labels = {
                    'key' : ''
                    },
                model_name = '',
                operation_type = 'OPERATION_TYPE_UNSPECIFIED',
                project_number = '',
                start_time = '',
                version = openapi_client.models.google_cloud_ml_v1__version.GoogleCloudMlV1__Version(
                    accelerator_config = openapi_client.models.google_cloud_ml_v1__accelerator_config.GoogleCloudMlV1__AcceleratorConfig(
                        count = '', 
                        type = 'ACCELERATOR_TYPE_UNSPECIFIED', ), 
                    auto_scaling = openapi_client.models.google_cloud_ml_v1__auto_scaling.GoogleCloudMlV1__AutoScaling(
                        max_nodes = 56, 
                        metrics = [
                            openapi_client.models.google_cloud_ml_v1__metric_spec.GoogleCloudMlV1__MetricSpec(
                                name = 'METRIC_NAME_UNSPECIFIED', 
                                target = 56, )
                            ], 
                        min_nodes = 56, ), 
                    container = openapi_client.models.google_cloud_ml_v1__container_spec.GoogleCloudMlV1__ContainerSpec(
                        args = [
                            ''
                            ], 
                        command = [
                            ''
                            ], 
                        env = [
                            openapi_client.models.google_cloud_ml_v1__env_var.GoogleCloudMlV1__EnvVar(
                                name = '', 
                                value = '', )
                            ], 
                        image = '', 
                        ports = [
                            openapi_client.models.google_cloud_ml_v1__container_port.GoogleCloudMlV1__ContainerPort(
                                container_port = 56, )
                            ], ), 
                    create_time = '', 
                    deployment_uri = '', 
                    description = '', 
                    error_message = '', 
                    etag = 'YQ==', 
                    explanation_config = openapi_client.models.google_cloud_ml_v1__explanation_config.GoogleCloudMlV1__ExplanationConfig(
                        integrated_gradients_attribution = openapi_client.models.google_cloud_ml_v1__integrated_gradients_attribution.GoogleCloudMlV1__IntegratedGradientsAttribution(
                            num_integral_steps = 56, ), 
                        sampled_shapley_attribution = openapi_client.models.google_cloud_ml_v1__sampled_shapley_attribution.GoogleCloudMlV1__SampledShapleyAttribution(
                            num_paths = 56, ), 
                        xrai_attribution = openapi_client.models.google_cloud_ml_v1__xrai_attribution.GoogleCloudMlV1__XraiAttribution(
                            num_integral_steps = 56, ), ), 
                    framework = 'FRAMEWORK_UNSPECIFIED', 
                    is_default = True, 
                    labels = {
                        'key' : ''
                        }, 
                    last_migration_model_id = '', 
                    last_migration_time = '', 
                    last_use_time = '', 
                    machine_type = '', 
                    manual_scaling = openapi_client.models.google_cloud_ml_v1__manual_scaling.GoogleCloudMlV1__ManualScaling(
                        nodes = 56, ), 
                    name = '', 
                    package_uris = [
                        ''
                        ], 
                    prediction_class = '', 
                    python_version = '', 
                    request_logging_config = openapi_client.models.google_cloud_ml_v1__request_logging_config.GoogleCloudMlV1__RequestLoggingConfig(
                        bigquery_table_name = '', 
                        sampling_percentage = 1.337, ), 
                    routes = openapi_client.models.google_cloud_ml_v1__route_map.GoogleCloudMlV1__RouteMap(
                        health = '', 
                        predict = '', ), 
                    runtime_version = '', 
                    service_account = '', 
                    state = 'UNKNOWN', )
            )
        else:
            return GoogleCloudMlV1OperationMetadata(
        )
        """

    def testGoogleCloudMlV1OperationMetadata(self):
        """Test GoogleCloudMlV1OperationMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
