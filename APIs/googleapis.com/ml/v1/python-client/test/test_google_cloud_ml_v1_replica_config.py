# coding: utf-8

"""
    AI Platform Training & Prediction API

    An API to enable creating and using machine learning models.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_ml_v1_replica_config import GoogleCloudMlV1ReplicaConfig

class TestGoogleCloudMlV1ReplicaConfig(unittest.TestCase):
    """GoogleCloudMlV1ReplicaConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudMlV1ReplicaConfig:
        """Test GoogleCloudMlV1ReplicaConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudMlV1ReplicaConfig`
        """
        model = GoogleCloudMlV1ReplicaConfig()
        if include_optional:
            return GoogleCloudMlV1ReplicaConfig(
                accelerator_config = openapi_client.models.google_cloud_ml_v1__accelerator_config.GoogleCloudMlV1__AcceleratorConfig(
                    count = '', 
                    type = 'ACCELERATOR_TYPE_UNSPECIFIED', ),
                container_args = [
                    ''
                    ],
                container_command = [
                    ''
                    ],
                disk_config = openapi_client.models.google_cloud_ml_v1__disk_config.GoogleCloudMlV1__DiskConfig(
                    boot_disk_size_gb = 56, 
                    boot_disk_type = '', ),
                image_uri = '',
                tpu_tf_version = ''
            )
        else:
            return GoogleCloudMlV1ReplicaConfig(
        )
        """

    def testGoogleCloudMlV1ReplicaConfig(self):
        """Test GoogleCloudMlV1ReplicaConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
