# coding: utf-8

"""
    AI Platform Training & Prediction API

    An API to enable creating and using machine learning models.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_ml_v1_job import GoogleCloudMlV1Job

class TestGoogleCloudMlV1Job(unittest.TestCase):
    """GoogleCloudMlV1Job unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudMlV1Job:
        """Test GoogleCloudMlV1Job
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudMlV1Job`
        """
        model = GoogleCloudMlV1Job()
        if include_optional:
            return GoogleCloudMlV1Job(
                create_time = '',
                end_time = '',
                error_message = '',
                etag = 'YQ==',
                job_id = '',
                job_position = '',
                labels = {
                    'key' : ''
                    },
                prediction_input = openapi_client.models.google_cloud_ml_v1__prediction_input.GoogleCloudMlV1__PredictionInput(
                    batch_size = '', 
                    data_format = 'DATA_FORMAT_UNSPECIFIED', 
                    input_paths = [
                        ''
                        ], 
                    max_worker_count = '', 
                    model_name = '', 
                    output_data_format = 'DATA_FORMAT_UNSPECIFIED', 
                    output_path = '', 
                    region = '', 
                    runtime_version = '', 
                    signature_name = '', 
                    uri = '', 
                    version_name = '', ),
                prediction_output = openapi_client.models.google_cloud_ml_v1__prediction_output.GoogleCloudMlV1__PredictionOutput(
                    error_count = '', 
                    node_hours = 1.337, 
                    output_path = '', 
                    prediction_count = '', ),
                start_time = '',
                state = 'STATE_UNSPECIFIED',
                training_input = openapi_client.models.google_cloud_ml_v1__training_input.GoogleCloudMlV1__TrainingInput(
                    args = [
                        ''
                        ], 
                    enable_web_access = True, 
                    encryption_config = openapi_client.models.google_cloud_ml_v1__encryption_config.GoogleCloudMlV1__EncryptionConfig(
                        kms_key_name = '', ), 
                    evaluator_config = openapi_client.models.google_cloud_ml_v1__replica_config.GoogleCloudMlV1__ReplicaConfig(
                        accelerator_config = openapi_client.models.google_cloud_ml_v1__accelerator_config.GoogleCloudMlV1__AcceleratorConfig(
                            count = '', 
                            type = 'ACCELERATOR_TYPE_UNSPECIFIED', ), 
                        container_args = [
                            ''
                            ], 
                        container_command = [
                            ''
                            ], 
                        disk_config = openapi_client.models.google_cloud_ml_v1__disk_config.GoogleCloudMlV1__DiskConfig(
                            boot_disk_size_gb = 56, 
                            boot_disk_type = '', ), 
                        image_uri = '', 
                        tpu_tf_version = '', ), 
                    evaluator_count = '', 
                    evaluator_type = '', 
                    hyperparameters = openapi_client.models.google_cloud_ml_v1__hyperparameter_spec.GoogleCloudMlV1__HyperparameterSpec(
                        algorithm = 'ALGORITHM_UNSPECIFIED', 
                        enable_trial_early_stopping = True, 
                        goal = 'GOAL_TYPE_UNSPECIFIED', 
                        hyperparameter_metric_tag = '', 
                        max_failed_trials = 56, 
                        max_parallel_trials = 56, 
                        max_trials = 56, 
                        params = [
                            openapi_client.models.google_cloud_ml_v1__parameter_spec.GoogleCloudMlV1__ParameterSpec(
                                categorical_values = [
                                    ''
                                    ], 
                                discrete_values = [
                                    1.337
                                    ], 
                                max_value = 1.337, 
                                min_value = 1.337, 
                                parameter_name = '', 
                                scale_type = 'NONE', 
                                type = 'PARAMETER_TYPE_UNSPECIFIED', )
                            ], 
                        resume_previous_job_id = '', ), 
                    job_dir = '', 
                    master_config = openapi_client.models.google_cloud_ml_v1__replica_config.GoogleCloudMlV1__ReplicaConfig(
                        image_uri = '', 
                        tpu_tf_version = '', ), 
                    master_type = '', 
                    network = '', 
                    package_uris = [
                        ''
                        ], 
                    parameter_server_config = , 
                    parameter_server_count = '', 
                    parameter_server_type = '', 
                    python_module = '', 
                    python_version = '', 
                    region = '', 
                    runtime_version = '', 
                    scale_tier = 'BASIC', 
                    scheduling = openapi_client.models.google_cloud_ml_v1__scheduling.GoogleCloudMlV1__Scheduling(
                        max_running_time = '', 
                        max_wait_time = '', 
                        priority = 56, ), 
                    service_account = '', 
                    use_chief_in_tf_config = True, 
                    worker_config = , 
                    worker_count = '', 
                    worker_type = '', ),
                training_output = openapi_client.models.google_cloud_ml_v1__training_output.GoogleCloudMlV1__TrainingOutput(
                    built_in_algorithm_output = openapi_client.models.google_cloud_ml_v1__built_in_algorithm_output.GoogleCloudMlV1__BuiltInAlgorithmOutput(
                        framework = '', 
                        model_path = '', 
                        python_version = '', 
                        runtime_version = '', ), 
                    completed_trial_count = '', 
                    consumed_ml_units = 1.337, 
                    hyperparameter_metric_tag = '', 
                    is_built_in_algorithm_job = True, 
                    is_hyperparameter_tuning_job = True, 
                    trials = [
                        openapi_client.models.google_cloud_ml_v1__hyperparameter_output.GoogleCloudMlV1__HyperparameterOutput(
                            all_metrics = [
                                openapi_client.models.google_cloud_ml_v1_hyperparameter_output_hyperparameter_metric.GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetric(
                                    objective_value = 1.337, 
                                    training_step = '', )
                                ], 
                            end_time = '', 
                            final_metric = openapi_client.models.google_cloud_ml_v1_hyperparameter_output_hyperparameter_metric.GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetric(
                                objective_value = 1.337, 
                                training_step = '', ), 
                            hyperparameters = {
                                'key' : ''
                                }, 
                            is_trial_stopped_early = True, 
                            start_time = '', 
                            state = 'STATE_UNSPECIFIED', 
                            trial_id = '', 
                            web_access_uris = {
                                'key' : ''
                                }, )
                        ], 
                    web_access_uris = {
                        'key' : ''
                        }, )
            )
        else:
            return GoogleCloudMlV1Job(
        )
        """

    def testGoogleCloudMlV1Job(self):
        """Test GoogleCloudMlV1Job"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
