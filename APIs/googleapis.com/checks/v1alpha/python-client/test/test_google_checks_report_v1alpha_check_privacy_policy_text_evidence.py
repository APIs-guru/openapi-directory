# coding: utf-8

"""
    Checks API

    The Checks API contains powerful and easy-to-use privacy and compliance APIs that interact with the Checks product and its underlying technology.

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_checks_report_v1alpha_check_privacy_policy_text_evidence import GoogleChecksReportV1alphaCheckPrivacyPolicyTextEvidence

class TestGoogleChecksReportV1alphaCheckPrivacyPolicyTextEvidence(unittest.TestCase):
    """GoogleChecksReportV1alphaCheckPrivacyPolicyTextEvidence unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleChecksReportV1alphaCheckPrivacyPolicyTextEvidence:
        """Test GoogleChecksReportV1alphaCheckPrivacyPolicyTextEvidence
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleChecksReportV1alphaCheckPrivacyPolicyTextEvidence`
        """
        model = GoogleChecksReportV1alphaCheckPrivacyPolicyTextEvidence()
        if include_optional:
            return GoogleChecksReportV1alphaCheckPrivacyPolicyTextEvidence(
                policy_fragment = openapi_client.models.google_checks_report_v1alpha_policy_fragment.GoogleChecksReportV1alphaPolicyFragment(
                    html_content = '', 
                    source_uri = '', )
            )
        else:
            return GoogleChecksReportV1alphaCheckPrivacyPolicyTextEvidence(
        )
        """

    def testGoogleChecksReportV1alphaCheckPrivacyPolicyTextEvidence(self):
        """Test GoogleChecksReportV1alphaCheckPrivacyPolicyTextEvidence"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
