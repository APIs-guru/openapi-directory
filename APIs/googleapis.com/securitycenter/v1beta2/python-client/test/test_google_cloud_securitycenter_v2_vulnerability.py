# coding: utf-8

"""
    Security Command Center API

    Security Command Center API provides access to temporal views of assets and findings within an organization.

    The version of the OpenAPI document: v1beta2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_securitycenter_v2_vulnerability import GoogleCloudSecuritycenterV2Vulnerability

class TestGoogleCloudSecuritycenterV2Vulnerability(unittest.TestCase):
    """GoogleCloudSecuritycenterV2Vulnerability unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudSecuritycenterV2Vulnerability:
        """Test GoogleCloudSecuritycenterV2Vulnerability
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudSecuritycenterV2Vulnerability`
        """
        model = GoogleCloudSecuritycenterV2Vulnerability()
        if include_optional:
            return GoogleCloudSecuritycenterV2Vulnerability(
                cve = openapi_client.models.google_cloud_securitycenter_v2_cve.GoogleCloudSecuritycenterV2Cve(
                    cvssv3 = openapi_client.models.google_cloud_securitycenter_v2_cvssv3.GoogleCloudSecuritycenterV2Cvssv3(
                        attack_complexity = 'ATTACK_COMPLEXITY_UNSPECIFIED', 
                        attack_vector = 'ATTACK_VECTOR_UNSPECIFIED', 
                        availability_impact = 'IMPACT_UNSPECIFIED', 
                        base_score = 1.337, 
                        confidentiality_impact = 'IMPACT_UNSPECIFIED', 
                        integrity_impact = 'IMPACT_UNSPECIFIED', 
                        privileges_required = 'PRIVILEGES_REQUIRED_UNSPECIFIED', 
                        scope = 'SCOPE_UNSPECIFIED', 
                        user_interaction = 'USER_INTERACTION_UNSPECIFIED', ), 
                    exploitation_activity = 'EXPLOITATION_ACTIVITY_UNSPECIFIED', 
                    id = '', 
                    impact = 'RISK_RATING_UNSPECIFIED', 
                    observed_in_the_wild = True, 
                    references = [
                        openapi_client.models.google_cloud_securitycenter_v2_reference.GoogleCloudSecuritycenterV2Reference(
                            source = '', 
                            uri = '', )
                        ], 
                    upstream_fix_available = True, 
                    zero_day = True, ),
                fixed_package = openapi_client.models.google_cloud_securitycenter_v2_package.GoogleCloudSecuritycenterV2Package(
                    cpe_uri = '', 
                    package_name = '', 
                    package_type = '', 
                    package_version = '', ),
                offending_package = openapi_client.models.google_cloud_securitycenter_v2_package.GoogleCloudSecuritycenterV2Package(
                    cpe_uri = '', 
                    package_name = '', 
                    package_type = '', 
                    package_version = '', ),
                security_bulletin = openapi_client.models.google_cloud_securitycenter_v2_security_bulletin.GoogleCloudSecuritycenterV2SecurityBulletin(
                    bulletin_id = '', 
                    submission_time = '', 
                    suggested_upgrade_version = '', )
            )
        else:
            return GoogleCloudSecuritycenterV2Vulnerability(
        )
        """

    def testGoogleCloudSecuritycenterV2Vulnerability(self):
        """Test GoogleCloudSecuritycenterV2Vulnerability"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
