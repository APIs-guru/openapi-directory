# coding: utf-8

"""
    Security Command Center API

    Security Command Center API provides access to temporal views of assets and findings within an organization.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.simulate_security_health_analytics_custom_module_request import SimulateSecurityHealthAnalyticsCustomModuleRequest

class TestSimulateSecurityHealthAnalyticsCustomModuleRequest(unittest.TestCase):
    """SimulateSecurityHealthAnalyticsCustomModuleRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SimulateSecurityHealthAnalyticsCustomModuleRequest:
        """Test SimulateSecurityHealthAnalyticsCustomModuleRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SimulateSecurityHealthAnalyticsCustomModuleRequest`
        """
        model = SimulateSecurityHealthAnalyticsCustomModuleRequest()
        if include_optional:
            return SimulateSecurityHealthAnalyticsCustomModuleRequest(
                custom_config = openapi_client.models.google_cloud_securitycenter_v1_custom_config.GoogleCloudSecuritycenterV1CustomConfig(
                    custom_output = openapi_client.models.google_cloud_securitycenter_v1_custom_output_spec.GoogleCloudSecuritycenterV1CustomOutputSpec(
                        properties = [
                            openapi_client.models.google_cloud_securitycenter_v1_property.GoogleCloudSecuritycenterV1Property(
                                name = '', 
                                value_expression = openapi_client.models.expr.Expr(
                                    description = '', 
                                    expression = '', 
                                    location = '', 
                                    title = '', ), )
                            ], ), 
                    description = '', 
                    predicate = openapi_client.models.expr.Expr(
                        description = '', 
                        expression = '', 
                        location = '', 
                        title = '', ), 
                    recommendation = '', 
                    resource_selector = openapi_client.models.google_cloud_securitycenter_v1_resource_selector.GoogleCloudSecuritycenterV1ResourceSelector(
                        resource_types = [
                            ''
                            ], ), 
                    severity = 'SEVERITY_UNSPECIFIED', ),
                resource = openapi_client.models.simulated_resource.SimulatedResource(
                    iam_policy_data = openapi_client.models.policy.Policy(
                        audit_configs = [
                            openapi_client.models.audit_config.AuditConfig(
                                audit_log_configs = [
                                    openapi_client.models.audit_log_config.AuditLogConfig(
                                        exempted_members = [
                                            ''
                                            ], 
                                        log_type = 'LOG_TYPE_UNSPECIFIED', )
                                    ], 
                                service = '', )
                            ], 
                        bindings = [
                            openapi_client.models.binding.Binding(
                                condition = openapi_client.models.expr.Expr(
                                    description = '', 
                                    expression = '', 
                                    location = '', 
                                    title = '', ), 
                                members = [
                                    ''
                                    ], 
                                role = '', )
                            ], 
                        etag = 'YQ==', 
                        version = 56, ), 
                    resource_data = {
                        'key' : null
                        }, 
                    resource_type = '', )
            )
        else:
            return SimulateSecurityHealthAnalyticsCustomModuleRequest(
        )
        """

    def testSimulateSecurityHealthAnalyticsCustomModuleRequest(self):
        """Test SimulateSecurityHealthAnalyticsCustomModuleRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
