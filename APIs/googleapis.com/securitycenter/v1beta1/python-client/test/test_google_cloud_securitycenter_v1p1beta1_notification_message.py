# coding: utf-8

"""
    Security Command Center API

    Security Command Center API provides access to temporal views of assets and findings within an organization.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_securitycenter_v1p1beta1_notification_message import GoogleCloudSecuritycenterV1p1beta1NotificationMessage

class TestGoogleCloudSecuritycenterV1p1beta1NotificationMessage(unittest.TestCase):
    """GoogleCloudSecuritycenterV1p1beta1NotificationMessage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudSecuritycenterV1p1beta1NotificationMessage:
        """Test GoogleCloudSecuritycenterV1p1beta1NotificationMessage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudSecuritycenterV1p1beta1NotificationMessage`
        """
        model = GoogleCloudSecuritycenterV1p1beta1NotificationMessage()
        if include_optional:
            return GoogleCloudSecuritycenterV1p1beta1NotificationMessage(
                finding = openapi_client.models.google_cloud_securitycenter_v1p1beta1_finding.GoogleCloudSecuritycenterV1p1beta1Finding(
                    canonical_name = '', 
                    category = '', 
                    create_time = '', 
                    event_time = '', 
                    external_uri = '', 
                    name = '', 
                    parent = '', 
                    resource_name = '', 
                    security_marks = openapi_client.models.google_cloud_securitycenter_v1p1beta1_security_marks.GoogleCloudSecuritycenterV1p1beta1SecurityMarks(
                        canonical_name = '', 
                        marks = {
                            'key' : ''
                            }, 
                        name = '', ), 
                    severity = 'SEVERITY_UNSPECIFIED', 
                    source_properties = {
                        'key' : null
                        }, 
                    state = 'STATE_UNSPECIFIED', ),
                notification_config_name = '',
                resource = openapi_client.models.google_cloud_securitycenter_v1p1beta1_resource.GoogleCloudSecuritycenterV1p1beta1Resource(
                    folders = [
                        openapi_client.models.google_cloud_securitycenter_v1p1beta1_folder.GoogleCloudSecuritycenterV1p1beta1Folder(
                            resource_folder = '', 
                            resource_folder_display_name = '', )
                        ], 
                    name = '', 
                    parent = '', 
                    parent_display_name = '', 
                    project = '', 
                    project_display_name = '', )
            )
        else:
            return GoogleCloudSecuritycenterV1p1beta1NotificationMessage(
        )
        """

    def testGoogleCloudSecuritycenterV1p1beta1NotificationMessage(self):
        """Test GoogleCloudSecuritycenterV1p1beta1NotificationMessage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
