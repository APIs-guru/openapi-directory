openapi: 3.0.0
servers:
  - url: https://aiplatform.googleapis.com/
x-hasEquivalentPaths: true
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Train high-quality custom machine learning models with minimal machine learning expertise and effort.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Vertex AI API
  version: v1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://aiplatform.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: aiplatform
externalDocs:
  url: https://cloud.google.com/vertex-ai/
tags:
  - name: projects
  - name: publishers
paths:
  /v1/{artifact}:queryArtifactLineageSubgraph:
    get:
      description: Retrieves lineage of an Artifact represented through Artifacts and Executions connected by Event edges and returned as a LineageSubgraph.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.queryArtifactLineageSubgraph
      parameters:
        - description: "Required. The resource name of the Artifact whose Lineage needs to be retrieved as a LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}` The request may error with FAILED_PRECONDITION if the number of Artifacts, the number of Executions, or the number of Events that would be returned for the Context exceeds 1000."
          in: path
          name: artifact
          required: true
          schema:
            type: string
        - description: 'Filter specifying the boolean condition for the Artifacts to satisfy in order to be part of the Lineage Subgraph. The syntax to define filter query is based on https://google.aip.dev/160. The supported set of filters include the following: * **Attribute filtering**: For example: `display_name = "test"` Supported fields include: `name`, `display_name`, `uri`, `state`, `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format. For example: `create_time = "2020-11-19T11:30:00-04:00"` * **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..`. For example: `metadata.field_1.number_value = 10.0` In case the field name contains special characters (such as colon), one can embed it inside double quote. For example: `metadata."field:1".number_value = 10.0` Each of the above supported filter types can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example: `display_name = "test" AND metadata.field1.bool_value = true`.'
          in: query
          name: filter
          schema:
            type: string
        - description: "Specifies the size of the lineage graph in terms of number of hops from the specified artifact. Negative Value: INVALID_ARGUMENT error is returned 0: Only input artifact is returned. No value: Transitive closure is performed to return the complete graph."
          in: query
          name: maxHops
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1LineageSubgraph"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{context}:addContextArtifactsAndExecutions:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Adds a set of Artifacts and Executions to a Context. If any of the Artifacts or Executions have already been added to a Context, they are simply skipped.
      operationId: aiplatform.projects.locations.metadataStores.contexts.addContextArtifactsAndExecutions
      parameters:
        - description: "Required. The resource name of the Context that the Artifacts and Executions belong to. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`"
          in: path
          name: context
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{context}:addContextChildren:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Adds a set of Contexts as children to a parent Context. If any of the child Contexts have already been added to the parent Context, they are simply skipped. If this call would create a cycle or cause any Context to have more than 10 parents, the request will fail with an INVALID_ARGUMENT error.
      operationId: aiplatform.projects.locations.metadataStores.contexts.addContextChildren
      parameters:
        - description: "Required. The resource name of the parent Context. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`"
          in: path
          name: context
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1AddContextChildrenRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1AddContextChildrenResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{context}:queryContextLineageSubgraph:
    get:
      description: Retrieves Artifacts and Executions within the specified Context, connected by Event edges and returned as a LineageSubgraph.
      operationId: aiplatform.projects.locations.metadataStores.contexts.queryContextLineageSubgraph
      parameters:
        - description: "Required. The resource name of the Context whose Artifacts and Executions should be retrieved as a LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}` The request may error with FAILED_PRECONDITION if the number of Artifacts, the number of Executions, or the number of Events that would be returned for the Context exceeds 1000."
          in: path
          name: context
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1LineageSubgraph"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{context}:removeContextChildren:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Remove a set of children contexts from a parent Context. If any of the child Contexts were NOT added to the parent Context, they are simply skipped.
      operationId: aiplatform.projects.locations.metadataStores.contexts.removeContextChildren
      parameters:
        - description: "Required. The resource name of the parent Context. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`"
          in: path
          name: context
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1RemoveContextChildrenRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1RemoveContextChildrenResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{dataset}:searchDataItems:
    get:
      description: Searches DataItems in a Dataset.
      operationId: aiplatform.projects.locations.datasets.searchDataItems
      parameters:
        - description: "Required. The resource name of the Dataset from which to search DataItems. Format: `projects/{project}/locations/{location}/datasets/{dataset}`"
          in: path
          name: dataset
          required: true
          schema:
            type: string
        - description: An expression that specifies what Annotations will be returned per DataItem. Annotations satisfied either of the conditions will be returned. * `annotation_spec_id` - for = or !=. Must specify `saved_query_id=` - saved query id that annotations should belong to.
          explode: true
          in: query
          name: annotationFilters
          schema:
            items:
              type: string
            type: array
          style: form
        - description: An expression for filtering the Annotations that will be returned per DataItem. * `annotation_spec_id` - for = or !=.
          in: query
          name: annotationsFilter
          schema:
            type: string
        - description: If set, only up to this many of Annotations will be returned per DataItemView. The maximum value is 1000. If not set, the maximum value will be used.
          in: query
          name: annotationsLimit
          schema:
            type: integer
        - description: "An expression for filtering the DataItem that will be returned. * `data_item_id` - for = or !=. * `labeled` - for = or !=. * `has_annotation(ANNOTATION_SPEC_ID)` - true only for DataItem that have at least one annotation with annotation_spec_id = `ANNOTATION_SPEC_ID` in the context of SavedQuery or DataLabelingJob. For example: * `data_item=1` * `has_annotation(5)`"
          in: query
          name: dataItemFilter
          schema:
            type: string
        - description: "The resource name of a DataLabelingJob. Format: `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}` If this field is set, all of the search will be done in the context of this DataLabelingJob."
          in: query
          name: dataLabelingJob
          schema:
            type: string
        - description: Mask specifying which fields of DataItemView to read.
          in: query
          name: fieldMask
          schema:
            type: string
        - description: A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending.
          in: query
          name: orderBy
          schema:
            type: string
        - description: A comma-separated list of annotation fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Must also specify saved_query.
          in: query
          name: orderByAnnotation.orderBy
          schema:
            type: string
        - description: Required. Saved query of the Annotation. Only Annotations belong to this saved query will be considered for ordering.
          in: query
          name: orderByAnnotation.savedQuery
          schema:
            type: string
        - description: A comma-separated list of data item fields to order by, sorted in ascending order. Use "desc" after a field name for descending.
          in: query
          name: orderByDataItem
          schema:
            type: string
        - description: Requested page size. Server may return fewer results than requested. Default and maximum page size is 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results for the server to return Typically obtained via SearchDataItemsResponse.next_page_token of the previous DatasetService.SearchDataItems call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The resource name of a SavedQuery(annotation set in UI). Format: `projects/{project}/locations/{location}/datasets/{dataset}/savedQueries/{saved_query}` All of the search will be done in the context of this SavedQuery."
          in: query
          name: savedQuery
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1SearchDataItemsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{deploymentResourcePool}:queryDeployedModels:
    get:
      description: List DeployedModels that have been deployed on this DeploymentResourcePool.
      operationId: aiplatform.projects.locations.deploymentResourcePools.queryDeployedModels
      parameters:
        - description: "Required. The name of the target DeploymentResourcePool to query. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`"
          in: path
          name: deploymentResourcePool
          required: true
          schema:
            type: string
        - description: The maximum number of DeployedModels to return. The service may return fewer than this value.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `QueryDeployedModels` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `QueryDeployedModels` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1QueryDeployedModelsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{endpoint}:computeTokens:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Return a list of tokens based on the input text.
      operationId: aiplatform.projects.locations.publishers.models.computeTokens
      parameters:
        - description: Required. The name of the Endpoint requested to get lists of tokens and token ids.
          in: path
          name: endpoint
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1ComputeTokensRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ComputeTokensResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{endpoint}:countTokens:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Perform a token counting.
      operationId: aiplatform.projects.locations.publishers.models.countTokens
      parameters:
        - description: "Required. The name of the Endpoint requested to perform token counting. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`"
          in: path
          name: endpoint
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1CountTokensRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1CountTokensResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{endpoint}:deployModel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Deploys a Model into this Endpoint, creating a DeployedModel within it.
      operationId: aiplatform.projects.locations.endpoints.deployModel
      parameters:
        - description: "Required. The name of the Endpoint resource into which to deploy a Model. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`"
          in: path
          name: endpoint
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1DeployModelRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{endpoint}:directPredict:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Perform an unary online prediction request to a gRPC model server for Vertex first-party products and frameworks.
      operationId: aiplatform.projects.locations.endpoints.directPredict
      parameters:
        - description: "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`"
          in: path
          name: endpoint
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1DirectPredictRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1DirectPredictResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{endpoint}:directRawPredict:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Perform an unary online prediction request to a gRPC model server for custom containers.
      operationId: aiplatform.projects.locations.endpoints.directRawPredict
      parameters:
        - description: "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`"
          in: path
          name: endpoint
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1DirectRawPredictRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1DirectRawPredictResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{endpoint}:explain:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Perform an online explanation. If deployed_model_id is specified, the corresponding DeployModel must have explanation_spec populated. If deployed_model_id is not specified, all DeployedModels must have explanation_spec populated.
      operationId: aiplatform.projects.locations.endpoints.explain
      parameters:
        - description: "Required. The name of the Endpoint requested to serve the explanation. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`"
          in: path
          name: endpoint
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1ExplainRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ExplainResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{endpoint}:mutateDeployedModel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates an existing deployed model. Updatable fields include `min_replica_count`, `max_replica_count`, `autoscaling_metric_specs`, `disable_container_logging` (v1 only), and `enable_container_logging` (v1beta1 only).
      operationId: aiplatform.projects.locations.endpoints.mutateDeployedModel
      parameters:
        - description: "Required. The name of the Endpoint resource into which to mutate a DeployedModel. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`"
          in: path
          name: endpoint
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1MutateDeployedModelRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{endpoint}:predict:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Perform an online prediction.
      operationId: aiplatform.projects.locations.publishers.models.predict
      parameters:
        - description: "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`"
          in: path
          name: endpoint
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1PredictRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1PredictResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{endpoint}:rawPredict:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Perform an online prediction with an arbitrary HTTP payload. The response includes the following HTTP headers: * `X-Vertex-AI-Endpoint-Id`: ID of the Endpoint that served this prediction. * `X-Vertex-AI-Deployed-Model-Id`: ID of the Endpoint's DeployedModel that served this prediction."
      operationId: aiplatform.projects.locations.publishers.models.rawPredict
      parameters:
        - description: "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`"
          in: path
          name: endpoint
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1RawPredictRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleApiHttpBody"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{endpoint}:serverStreamingPredict:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Perform a server-side streaming online prediction request for Vertex LLM streaming.
      operationId: aiplatform.projects.locations.publishers.models.serverStreamingPredict
      parameters:
        - description: "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`"
          in: path
          name: endpoint
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1StreamingPredictRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1StreamingPredictResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{endpoint}:streamRawPredict:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Perform a streaming online prediction with an arbitrary HTTP payload.
      operationId: aiplatform.projects.locations.publishers.models.streamRawPredict
      parameters:
        - description: "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`"
          in: path
          name: endpoint
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1StreamRawPredictRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleApiHttpBody"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{endpoint}:undeployModel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Undeploys a Model from an Endpoint, removing a DeployedModel from it, and freeing all resources it's using.
      operationId: aiplatform.projects.locations.endpoints.undeployModel
      parameters:
        - description: "Required. The name of the Endpoint resource from which to undeploy a Model. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`"
          in: path
          name: endpoint
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1UndeployModelRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{entityType}:deleteFeatureValues:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Delete Feature values from Featurestore. The progress of the deletion is tracked by the returned operation. The deleted feature values are guaranteed to be invisible to subsequent read operations after the operation is marked as successfully done. If a delete feature values operation fails, the feature values returned from reads and exports may be inconsistent. If consistency is required, the caller must retry the same delete request again and wait till the new operation returned is marked as successfully done.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.deleteFeatureValues
      parameters:
        - description: "Required. The resource name of the EntityType grouping the Features for which values are being deleted from. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`"
          in: path
          name: entityType
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1DeleteFeatureValuesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{entityType}:exportFeatureValues:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Exports Feature values from all the entities of a target EntityType.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.exportFeatureValues
      parameters:
        - description: "Required. The resource name of the EntityType from which to export Feature values. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`"
          in: path
          name: entityType
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1ExportFeatureValuesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{entityType}:importFeatureValues:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Imports Feature values into the Featurestore from a source storage. The progress of the import is tracked by the returned operation. The imported features are guaranteed to be visible to subsequent read operations after the operation is marked as successfully done. If an import operation fails, the Feature values returned from reads and exports may be inconsistent. If consistency is required, the caller must retry the same import request again and wait till the new operation returned is marked as successfully done. There are also scenarios where the caller can cause inconsistency. - Source data for import contains multiple distinct Feature values for the same entity ID and timestamp. - Source is modified during an import. This includes adding, updating, or removing source data and/or metadata. Examples of updating metadata include but are not limited to changing storage location, storage class, or retention policy. - Online serving cluster is under-provisioned.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.importFeatureValues
      parameters:
        - description: "Required. The resource name of the EntityType grouping the Features for which values are being imported. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`"
          in: path
          name: entityType
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1ImportFeatureValuesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{entityType}:readFeatureValues:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Reads Feature values of a specific entity of an EntityType. For reading feature values of multiple entities of an EntityType, please use StreamingReadFeatureValues.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.readFeatureValues
      parameters:
        - description: "Required. The resource name of the EntityType for the entity being read. Value format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`. For example, for a machine learning model predicting user clicks on a website, an EntityType ID could be `user`."
          in: path
          name: entityType
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{entityType}:streamingReadFeatureValues:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Reads Feature values for multiple entities. Depending on their size, data for different entities may be broken up across multiple responses.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.streamingReadFeatureValues
      parameters:
        - description: "Required. The resource name of the entities' type. Value format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`. For example, for a machine learning model predicting user clicks on a website, an EntityType ID could be `user`."
          in: path
          name: entityType
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1StreamingReadFeatureValuesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{entityType}:writeFeatureValues:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Writes Feature values of one or more entities of an EntityType. The Feature values are merged into existing entities if any. The Feature values to be written must have timestamp within the online storage retention.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.writeFeatureValues
      parameters:
        - description: "Required. The resource name of the EntityType for the entities being written. Value format: `projects/{project}/locations/{location}/featurestores/ {featurestore}/entityTypes/{entityType}`. For example, for a machine learning model predicting user clicks on a website, an EntityType ID could be `user`."
          in: path
          name: entityType
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1WriteFeatureValuesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1WriteFeatureValuesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{execution}:addExecutionEvents:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Adds Events to the specified Execution. An Event indicates whether an Artifact was used as an input or output for an Execution. If an Event already exists between the Execution and the Artifact, the Event is skipped.
      operationId: aiplatform.projects.locations.metadataStores.executions.addExecutionEvents
      parameters:
        - description: "Required. The resource name of the Execution that the Events connect Artifacts with. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`"
          in: path
          name: execution
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1AddExecutionEventsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1AddExecutionEventsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{execution}:queryExecutionInputsAndOutputs:
    get:
      description: Obtains the set of input and output Artifacts for this Execution, in the form of LineageSubgraph that also contains the Execution and connecting Events.
      operationId: aiplatform.projects.locations.metadataStores.executions.queryExecutionInputsAndOutputs
      parameters:
        - description: "Required. The resource name of the Execution whose input and output Artifacts should be retrieved as a LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`"
          in: path
          name: execution
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1LineageSubgraph"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{featureView}:fetchFeatureValues:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Fetch feature values under a FeatureView.
      operationId: aiplatform.projects.locations.featureOnlineStores.featureViews.fetchFeatureValues
      parameters:
        - description: Required. FeatureView resource format `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}/featureViews/{featureView}`
          in: path
          name: featureView
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1FetchFeatureValuesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1FetchFeatureValuesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{featureView}:searchNearestEntities:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Search the nearest entities under a FeatureView. Search only works for indexable feature view; if a feature view isn't indexable, returns Invalid argument response.
      operationId: aiplatform.projects.locations.featureOnlineStores.featureViews.searchNearestEntities
      parameters:
        - description: Required. FeatureView resource format `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}/featureViews/{featureView}`
          in: path
          name: featureView
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1SearchNearestEntitiesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1SearchNearestEntitiesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{featureView}:sync:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Triggers on-demand sync for the FeatureView.
      operationId: aiplatform.projects.locations.featureOnlineStores.featureViews.sync
      parameters:
        - description: "Required. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`"
          in: path
          name: featureView
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1SyncFeatureViewRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1SyncFeatureViewResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{featurestore}:batchReadFeatureValues:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Batch reads Feature values from a Featurestore. This API enables batch reading Feature values, where each read instance in the batch may read Feature values of entities from one or more EntityTypes. Point-in-time correctness is guaranteed for Feature values of each read instance as of each instance's read timestamp.
      operationId: aiplatform.projects.locations.featurestores.batchReadFeatureValues
      parameters:
        - description: "Required. The resource name of the Featurestore from which to query Feature values. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`"
          in: path
          name: featurestore
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchReadFeatureValuesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{indexEndpoint}:deployIndex:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Deploys an Index into this IndexEndpoint, creating a DeployedIndex within it. Only non-empty Indexes can be deployed.
      operationId: aiplatform.projects.locations.indexEndpoints.deployIndex
      parameters:
        - description: "Required. The name of the IndexEndpoint resource into which to deploy an Index. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`"
          in: path
          name: indexEndpoint
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1DeployIndexRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{indexEndpoint}:findNeighbors:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Finds the nearest neighbors of each vector within the request.
      operationId: aiplatform.projects.locations.indexEndpoints.findNeighbors
      parameters:
        - description: "Required. The name of the index endpoint. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`"
          in: path
          name: indexEndpoint
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1FindNeighborsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1FindNeighborsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{indexEndpoint}:mutateDeployedIndex:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Update an existing DeployedIndex under an IndexEndpoint.
      operationId: aiplatform.projects.locations.indexEndpoints.mutateDeployedIndex
      parameters:
        - description: "Required. The name of the IndexEndpoint resource into which to deploy an Index. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`"
          in: path
          name: indexEndpoint
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1DeployedIndex"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{indexEndpoint}:readIndexDatapoints:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Reads the datapoints/vectors of the given IDs. A maximum of 1000 datapoints can be retrieved in a batch.
      operationId: aiplatform.projects.locations.indexEndpoints.readIndexDatapoints
      parameters:
        - description: "Required. The name of the index endpoint. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`"
          in: path
          name: indexEndpoint
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1ReadIndexDatapointsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ReadIndexDatapointsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{indexEndpoint}:undeployIndex:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Undeploys an Index from an IndexEndpoint, removing a DeployedIndex from it, and freeing all resources it's using.
      operationId: aiplatform.projects.locations.indexEndpoints.undeployIndex
      parameters:
        - description: "Required. The name of the IndexEndpoint resource from which to undeploy an Index. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`"
          in: path
          name: indexEndpoint
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1UndeployIndexRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{index}:removeDatapoints:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Remove Datapoints from an Index.
      operationId: aiplatform.projects.locations.indexes.removeDatapoints
      parameters:
        - description: "Required. The name of the Index resource to be updated. Format: `projects/{project}/locations/{location}/indexes/{index}`"
          in: path
          name: index
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1RemoveDatapointsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1RemoveDatapointsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{index}:upsertDatapoints:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Add/update Datapoints into an Index.
      operationId: aiplatform.projects.locations.indexes.upsertDatapoints
      parameters:
        - description: "Required. The name of the Index resource to be updated. Format: `projects/{project}/locations/{location}/indexes/{index}`"
          in: path
          name: index
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1UpsertDatapointsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1UpsertDatapointsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{location}/featurestores:searchFeatures:
    get:
      description: Searches Features matching a query in a given project.
      operationId: aiplatform.projects.locations.featurestores.searchFeatures
      parameters:
        - description: "Required. The resource name of the Location to search Features. Format: `projects/{project}/locations/{location}`"
          in: path
          name: location
          required: true
          schema:
            type: string
        - description: The maximum number of Features to return. The service may return fewer than this value. If unspecified, at most 100 Features will be returned. The maximum value is 100; any value greater than 100 will be coerced to 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous FeaturestoreService.SearchFeatures call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.SearchFeatures, except `page_size`, must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: "Query string that is a conjunction of field-restricted queries and/or field-restricted filters. Field-restricted queries and filters can be combined using `AND` to form a conjunction. A field query is in the form FIELD:QUERY. This implicitly checks if QUERY exists as a substring within Feature's FIELD. The QUERY and the FIELD are converted to a sequence of words (i.e. tokens) for comparison. This is done by: * Removing leading/trailing whitespace and tokenizing the search value. Characters that are not one of alphanumeric `[a-zA-Z0-9]`, underscore `_`, or asterisk `*` are treated as delimiters for tokens. `*` is treated as a wildcard that matches characters within a token. * Ignoring case. * Prepending an asterisk to the first and appending an asterisk to the last token in QUERY. A QUERY must be either a singular token or a phrase. A phrase is one or multiple words enclosed in double quotation marks (\"). With phrases, the order of the words is important. Words in the phrase must be matching in order and consecutively. Supported FIELDs for field-restricted queries: * `feature_id` * `description` * `entity_type_id` Examples: * `feature_id: foo` --> Matches a Feature with ID containing the substring `foo` (eg. `foo`, `foofeature`, `barfoo`). * `feature_id: foo*feature` --> Matches a Feature with ID containing the substring `foo*feature` (eg. `foobarfeature`). * `feature_id: foo AND description: bar` --> Matches a Feature with ID containing the substring `foo` and description containing the substring `bar`. Besides field queries, the following exact-match filters are supported. The exact-match filters do not support wildcards. Unlike field-restricted queries, exact-match filters are case-sensitive. * `feature_id`: Supports = comparisons. * `description`: Supports = comparisons. Multi-token filters should be enclosed in quotes. * `entity_type_id`: Supports = comparisons. * `value_type`: Supports = and != comparisons. * `labels`: Supports key-value equality as well as key presence. * `featurestore_id`: Supports = comparisons. Examples: * `description = \"foo bar\"` --> Any Feature with description exactly equal to `foo bar` * `value_type = DOUBLE` --> Features whose type is DOUBLE. * `labels.active = yes AND labels.env = prod` --> Features having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any Feature which has a label with `env` as the key."
          in: query
          name: query
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1SearchFeaturesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{modelDeploymentMonitoringJob}:searchModelDeploymentMonitoringStatsAnomalies:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Searches Model Monitoring Statistics generated within a given time window.
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.searchModelDeploymentMonitoringStatsAnomalies
      parameters:
        - description: "Required. ModelDeploymentMonitoring Job resource name. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`"
          in: path
          name: modelDeploymentMonitoringJob
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{model}:generateContent:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Generate content with multimodal inputs.
      operationId: aiplatform.projects.locations.publishers.models.generateContent
      parameters:
        - description: "Required. The name of the publisher model requested to serve the prediction. Format: `projects/{project}/locations/{location}/publishers/*/models/*`"
          in: path
          name: model
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1GenerateContentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1GenerateContentResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{model}:streamGenerateContent:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Generate content with multimodal inputs with streaming support.
      operationId: aiplatform.projects.locations.publishers.models.streamGenerateContent
      parameters:
        - description: "Required. The name of the publisher model requested to serve the prediction. Format: `projects/{project}/locations/{location}/publishers/*/models/*`"
          in: path
          name: model
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1GenerateContentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1GenerateContentResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{model}:updateExplanationDataset:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Incrementally update the dataset used for an examples model.
      operationId: aiplatform.projects.locations.models.updateExplanationDataset
      parameters:
        - description: "Required. The resource name of the Model to update. Format: `projects/{project}/locations/{location}/models/{model}`"
          in: path
          name: model
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1UpdateExplanationDatasetRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.trainingPipelines.operations.delete
      parameters:
        - description: The name of the operation resource to be deleted.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: If set to true, any specialist managers in this SpecialistPool will also be deleted. (Otherwise, the request will only work if the SpecialistPool has no specialist managers.)
          in: query
          name: force
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets a Model Garden publisher model.
      operationId: aiplatform.publishers.models.get
      parameters:
        - description: "Required. The name of the PublisherModel resource. Format: `publishers/{publisher}/models/{publisher_model}`"
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. The IETF BCP-47 language code representing the language in which the publisher model's text information should be written in (see go/bcp47).
          in: query
          name: languageCode
          schema:
            type: string
        - description: Optional. PublisherModel view specifying which fields to read.
          in: query
          name: view
          schema:
            enum:
              - PUBLISHER_MODEL_VIEW_UNSPECIFIED
              - PUBLISHER_MODEL_VIEW_BASIC
              - PUBLISHER_MODEL_VIEW_FULL
              - PUBLISHER_MODEL_VERSION_VIEW_BASIC
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1PublisherModel"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - publishers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a TensorboardTimeSeries.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.patch
      parameters:
        - description: Output only. Name of the TensorboardTimeSeries.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Required. Field mask is used to specify the fields to be overwritten in the TensorboardTimeSeries resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field is overwritten if it's in the mask. If the user does not provide a mask then all fields are overwritten if new values are specified.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: aiplatform.projects.locations.list
      parameters:
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results to return. If not set, the service selects a default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudLocationListLocationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}/operations:
    get:
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.trainingPipelines.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: aiplatform.projects.locations.trainingPipelines.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1CancelTrainingPipelineRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:complete:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Marks a Trial as complete.
      operationId: aiplatform.projects.locations.studies.trials.complete
      parameters:
        - description: "Required. The Trial's name. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1CompleteTrialRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1Trial"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:deleteVersion:
    delete:
      description: Deletes a Model version. Model version can only be deleted if there are no DeployedModels created from it. Deleting the only version in the Model is not allowed. Use DeleteModel for deleting the Model instead.
      operationId: aiplatform.projects.locations.models.deleteVersion
      parameters:
        - description: "Required. The name of the model version to be deleted, with a version ID explicitly included. Example: `projects/{project}/locations/{location}/models/{model}@1234`"
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:export:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Exports a trained, exportable Model to a location specified by the user. A Model is considered to be exportable if it has at least one supported export format.
      operationId: aiplatform.projects.locations.models.export
      parameters:
        - description: Required. The resource name of the Model to export. The resource name may contain version id or version alias to specify the version, if no version is specified, the default version will be exported.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1ExportModelRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:import:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Imports data into a Dataset.
      operationId: aiplatform.projects.locations.datasets.import
      parameters:
        - description: "Required. The name of the Dataset resource. Format: `projects/{project}/locations/{location}/datasets/{dataset}`"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1ImportDataRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:listVersions:
    get:
      description: Lists versions of the specified model.
      operationId: aiplatform.projects.locations.models.listVersions
      parameters:
        - description: Required. The name of the model to list versions for.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: 'An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels."a key"`. Some examples: * `labels.myKey="myValue"`'
          in: query
          name: filter
          schema:
            type: string
        - description: 'A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `create_time` * `update_time` Example: `update_time asc, create_time desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token. Typically obtained via next_page_token of the previous ListModelVersions call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListModelVersionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:mergeVersionAliases:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Merges a set of aliases for a Model version.
      operationId: aiplatform.projects.locations.models.mergeVersionAliases
      parameters:
        - description: "Required. The name of the model version to merge aliases, with a version ID explicitly included. Example: `projects/{project}/locations/{location}/models/{model}@1234`"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1MergeVersionAliasesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1Model"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:pause:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Pauses a Schedule. Will mark Schedule.state to 'PAUSED'. If the schedule is paused, no new runs will be created. Already created runs will NOT be paused or canceled.
      operationId: aiplatform.projects.locations.schedules.pause
      parameters:
        - description: "Required. The name of the Schedule resource to be paused. Format: `projects/{project}/locations/{location}/schedules/{schedule}`"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1PauseScheduleRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:restore:
    get:
      description: Restores a dataset version.
      operationId: aiplatform.projects.locations.datasets.datasetVersions.restore
      parameters:
        - description: "Required. The name of the DatasetVersion resource. Format: `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`"
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:resume:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Resumes a paused Schedule to start scheduling new runs. Will mark Schedule.state to 'ACTIVE'. Only paused Schedule can be resumed. When the Schedule is resumed, new runs will be scheduled starting from the next execution time after the current time based on the time_specification in the Schedule. If Schedule.catchUp is set up true, all missed runs will be scheduled for backfill first.
      operationId: aiplatform.projects.locations.schedules.resume
      parameters:
        - description: "Required. The name of the Schedule resource to be resumed. Format: `projects/{project}/locations/{location}/schedules/{schedule}`"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1ResumeScheduleRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:start:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts a NotebookRuntime.
      operationId: aiplatform.projects.locations.notebookRuntimes.start
      parameters:
        - description: Required. The name of the NotebookRuntime resource to be started. Instead of checking whether the name is in valid NotebookRuntime resource name format, directly throw NotFound exception if there is no such NotebookRuntime in spanner.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1StartNotebookRuntimeRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:stop:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Stops a Trial.
      operationId: aiplatform.projects.locations.studies.trials.stop
      parameters:
        - description: "Required. The Trial's name. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1StopTrialRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1Trial"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:upgrade:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Upgrades a NotebookRuntime.
      operationId: aiplatform.projects.locations.notebookRuntimes.upgrade
      parameters:
        - description: Required. The name of the NotebookRuntime resource to be upgrade. Instead of checking whether the name is in valid NotebookRuntime resource name format, directly throw NotFound exception if there is no such NotebookRuntime in spanner.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1UpgradeNotebookRuntimeRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:wait:
    get:
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: aiplatform.projects.locations.featureOnlineStores.operations.listWait
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.
      operationId: aiplatform.projects.locations.trainingPipelines.operations.wait
      parameters:
        - description: The name of the operation resource to wait on.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.
          in: query
          name: timeout
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/annotations:
    get:
      description: Lists Annotations belongs to a dataitem
      operationId: aiplatform.projects.locations.datasets.dataItems.annotations.list
      parameters:
        - description: "Required. The resource name of the DataItem to list Annotations from. Format: `projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListAnnotationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/artifacts:
    get:
      description: Lists Artifacts in the MetadataStore.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.list
      parameters:
        - description: "Required. The MetadataStore whose Artifacts should be listed. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'Filter specifying the boolean condition for the Artifacts to satisfy in order to be part of the result set. The syntax to define filter query is based on https://google.aip.dev/160. The supported set of filters include the following: * **Attribute filtering**: For example: `display_name = "test"`. Supported fields include: `name`, `display_name`, `uri`, `state`, `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format. For example: `create_time = "2020-11-19T11:30:00-04:00"` * **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..`. For example: `metadata.field_1.number_value = 10.0` In case the field name contains special characters (such as colon), one can embed it inside double quote. For example: `metadata."field:1".number_value = 10.0` * **Context based filtering**: To filter Artifacts based on the contexts to which they belong, use the function operator with the full resource name `in_context()`. For example: `in_context("projects//locations//metadataStores//contexts/")` Each of the above supported filter types can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example: `display_name = "test" AND metadata.field1.bool_value = true`.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'How the list of messages is ordered. Specify the values to order by and an ordering operation. The default sorting order is ascending. To specify descending order for a field, users append a " desc" suffix; for example: "foo desc, bar". Subfields are specified with a `.` character, such as foo.bar. see https://google.aip.dev/132#ordering for more details.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of Artifacts to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous MetadataService.ListArtifacts call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListArtifactsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an Artifact associated with a MetadataStore.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.create
      parameters:
        - description: "Required. The resource name of the MetadataStore where the Artifact should be created. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "The {artifact} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}` If not provided, the Artifact's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all Artifacts in the parent MetadataStore. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting Artifact.)"
          in: query
          name: artifactId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1Artifact"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1Artifact"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/artifacts:purge:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Purges Artifacts.
      operationId: aiplatform.projects.locations.metadataStores.artifacts.purge
      parameters:
        - description: "Required. The metadata store to purge Artifacts from. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1PurgeArtifactsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/batchPredictionJobs:
    get:
      description: Lists BatchPredictionJobs in a Location.
      operationId: aiplatform.projects.locations.batchPredictionJobs.list
      parameters:
        - description: "Required. The resource name of the Location to list the BatchPredictionJobs from. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `model_display_name` supports `=`, `!=` comparisons. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`'
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token. Typically obtained via ListBatchPredictionJobsResponse.next_page_token of the previous JobService.ListBatchPredictionJobs call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListBatchPredictionJobsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a BatchPredictionJob. A BatchPredictionJob once created will right away be attempted to start.
      operationId: aiplatform.projects.locations.batchPredictionJobs.create
      parameters:
        - description: "Required. The resource name of the Location to create the BatchPredictionJob in. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchPredictionJob"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchPredictionJob"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/contexts:
    get:
      description: Lists Contexts on the MetadataStore.
      operationId: aiplatform.projects.locations.metadataStores.contexts.list
      parameters:
        - description: "Required. The MetadataStore whose Contexts should be listed. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'Filter specifying the boolean condition for the Contexts to satisfy in order to be part of the result set. The syntax to define filter query is based on https://google.aip.dev/160. Following are the supported set of filters: * **Attribute filtering**: For example: `display_name = "test"`. Supported fields include: `name`, `display_name`, `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format. For example: `create_time = "2020-11-19T11:30:00-04:00"`. * **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..`. For example: `metadata.field_1.number_value = 10.0`. In case the field name contains special characters (such as colon), one can embed it inside double quote. For example: `metadata."field:1".number_value = 10.0` * **Parent Child filtering**: To filter Contexts based on parent-child relationship use the HAS operator as follows: ``` parent_contexts: "projects//locations//metadataStores//contexts/" child_contexts: "projects//locations//metadataStores//contexts/" ``` Each of the above supported filters can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example: `display_name = "test" AND metadata.field1.bool_value = true`.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'How the list of messages is ordered. Specify the values to order by and an ordering operation. The default sorting order is ascending. To specify descending order for a field, users append a " desc" suffix; for example: "foo desc, bar". Subfields are specified with a `.` character, such as foo.bar. see https://google.aip.dev/132#ordering for more details.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of Contexts to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous MetadataService.ListContexts call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListContextsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a Context associated with a MetadataStore.
      operationId: aiplatform.projects.locations.metadataStores.contexts.create
      parameters:
        - description: "Required. The resource name of the MetadataStore where the Context should be created. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "The {context} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`. If not provided, the Context's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all Contexts in the parent MetadataStore. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting Context.)"
          in: query
          name: contextId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1Context"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1Context"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/contexts:purge:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Purges Contexts.
      operationId: aiplatform.projects.locations.metadataStores.contexts.purge
      parameters:
        - description: "Required. The metadata store to purge Contexts from. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1PurgeContextsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/customJobs:
    get:
      description: Lists CustomJobs in a Location.
      operationId: aiplatform.projects.locations.customJobs.list
      parameters:
        - description: "Required. The resource name of the Location to list the CustomJobs from. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`'
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token. Typically obtained via ListCustomJobsResponse.next_page_token of the previous JobService.ListCustomJobs call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListCustomJobsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a CustomJob. A created CustomJob right away will be attempted to be run.
      operationId: aiplatform.projects.locations.customJobs.create
      parameters:
        - description: "Required. The resource name of the Location to create the CustomJob in. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1CustomJob"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1CustomJob"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/dataItems:
    get:
      description: Lists DataItems in a Dataset.
      operationId: aiplatform.projects.locations.datasets.dataItems.list
      parameters:
        - description: "Required. The resource name of the Dataset to list DataItems from. Format: `projects/{project}/locations/{location}/datasets/{dataset}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListDataItemsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/dataLabelingJobs:
    get:
      description: Lists DataLabelingJobs in a Location.
      operationId: aiplatform.projects.locations.dataLabelingJobs.list
      parameters:
        - description: "Required. The parent of the DataLabelingJob. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`'
          in: query
          name: filter
          schema:
            type: string
        - description: A comma-separated list of fields to order by, sorted in ascending order by default. Use `desc` after a field name for descending.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: 'Mask specifying which fields to read. FieldMask represents a set of symbolic field paths. For example, the mask can be `paths: "name"`. The "name" here is a field in DataLabelingJob. If this field is not set, all fields of the DataLabelingJob are returned.'
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListDataLabelingJobsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a DataLabelingJob.
      operationId: aiplatform.projects.locations.dataLabelingJobs.create
      parameters:
        - description: "Required. The parent of the DataLabelingJob. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1DataLabelingJob"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1DataLabelingJob"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/datasetVersions:
    get:
      description: Lists DatasetVersions in a Dataset.
      operationId: aiplatform.projects.locations.datasets.datasetVersions.list
      parameters:
        - description: "Required. The resource name of the Dataset to list DatasetVersions from. Format: `projects/{project}/locations/{location}/datasets/{dataset}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Optional. Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListDatasetVersionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Create a version from a Dataset.
      operationId: aiplatform.projects.locations.datasets.datasetVersions.create
      parameters:
        - description: "Required. The name of the Dataset resource. Format: `projects/{project}/locations/{location}/datasets/{dataset}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1DatasetVersion"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/datasets:
    get:
      description: Lists Datasets in a Location.
      operationId: aiplatform.projects.locations.datasets.list
      parameters:
        - description: "Required. The name of the Dataset's parent resource. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `display_name`: supports = and != * `metadata_schema_uri`: supports = and != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels."a key"`. Some examples: * `displayName="myDisplayName"` * `labels.myKey="myValue"`'
          in: query
          name: filter
          schema:
            type: string
        - description: 'A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time`'
          in: query
          name: orderBy
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListDatasetsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a Dataset.
      operationId: aiplatform.projects.locations.datasets.create
      parameters:
        - description: "Required. The resource name of the Location to create the Dataset in. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1Dataset"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/deploymentResourcePools:
    get:
      description: List DeploymentResourcePools in a location.
      operationId: aiplatform.projects.locations.deploymentResourcePools.list
      parameters:
        - description: "Required. The parent Location which owns this collection of DeploymentResourcePools. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of DeploymentResourcePools to return. The service may return fewer than this value.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListDeploymentResourcePools` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListDeploymentResourcePools` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListDeploymentResourcePoolsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Create a DeploymentResourcePool.
      operationId: aiplatform.projects.locations.deploymentResourcePools.create
      parameters:
        - description: "Required. The parent location resource where this DeploymentResourcePool will be created. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/endpoints:
    get:
      description: Lists Endpoints in a Location.
      operationId: aiplatform.projects.locations.endpoints.list
      parameters:
        - description: "Required. The resource name of the Location from which to list the Endpoints. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `endpoint` supports = and !=. `endpoint` represents the Endpoint ID, i.e. the last segment of the Endpoint's resource name. * `display_name` supports = and, != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels.\"a key\"`. Some examples: * `endpoint=1` * `displayName=\"myDisplayName\"` * `labels.myKey=\"myValue\"`"
          in: query
          name: filter
          schema:
            type: string
        - description: 'A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example: `display_name, create_time desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The standard list page token. Typically obtained via ListEndpointsResponse.next_page_token of the previous EndpointService.ListEndpoints call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Optional. Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListEndpointsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an Endpoint.
      operationId: aiplatform.projects.locations.endpoints.create
      parameters:
        - description: "Required. The resource name of the Location to create the Endpoint in. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Immutable. The ID to use for endpoint, which will become the final component of the endpoint resource name. If not provided, Vertex AI will generate a value for this ID. If the first character is a letter, this value may be up to 63 characters, and valid characters are `[a-z0-9-]`. The last character must be a letter or number. If the first character is a number, this value may be up to 9 characters, and valid characters are `[0-9]` with no leading zeros. When using HTTP/JSON, this field is populated based on a query string argument, such as `?endpoint_id=12345`. This is the fallback for fields that are not included in either the URI or the body.
          in: query
          name: endpointId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1Endpoint"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/entityTypes:
    get:
      description: Lists EntityTypes in a given Featurestore.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.list
      parameters:
        - description: "Required. The resource name of the Featurestore to list EntityTypes. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Lists the EntityTypes that match the filter expression. The following filters are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality as well as key presence. Examples: * `create_time > \\\"2020-01-31T15:30:00.000000Z\\\" OR update_time > \\\"2020-01-31T15:30:00.000000Z\\\"` --> EntityTypes created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND labels.env = prod` --> EntityTypes having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any EntityType which has a label with 'env' as the key."
          in: query
          name: filter
          schema:
            type: string
        - description: 'A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `entity_type_id` * `create_time` * `update_time`'
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of EntityTypes to return. The service may return fewer than this value. If unspecified, at most 1000 EntityTypes will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous FeaturestoreService.ListEntityTypes call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.ListEntityTypes must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListEntityTypesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new EntityType in a given Featurestore.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.create
      parameters:
        - description: "Required. The resource name of the Featurestore to create EntityTypes. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. The ID to use for the EntityType, which will become the final component of the EntityType's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a featurestore.
          in: query
          name: entityTypeId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1EntityType"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/evaluations:
    get:
      description: Lists ModelEvaluations in a Model.
      operationId: aiplatform.projects.locations.models.evaluations.list
      parameters:
        - description: "Required. The resource name of the Model to list the ModelEvaluations from. Format: `projects/{project}/locations/{location}/models/{model}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token. Typically obtained via ListModelEvaluationsResponse.next_page_token of the previous ModelService.ListModelEvaluations call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListModelEvaluationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/evaluations:import:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Imports an externally generated ModelEvaluation.
      operationId: aiplatform.projects.locations.models.evaluations.import
      parameters:
        - description: "Required. The name of the parent model resource. Format: `projects/{project}/locations/{location}/models/{model}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1ImportModelEvaluationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelEvaluation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/executions:
    get:
      description: Lists Executions in the MetadataStore.
      operationId: aiplatform.projects.locations.metadataStores.executions.list
      parameters:
        - description: "Required. The MetadataStore whose Executions should be listed. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'Filter specifying the boolean condition for the Executions to satisfy in order to be part of the result set. The syntax to define filter query is based on https://google.aip.dev/160. Following are the supported set of filters: * **Attribute filtering**: For example: `display_name = "test"`. Supported fields include: `name`, `display_name`, `state`, `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format. For example: `create_time = "2020-11-19T11:30:00-04:00"`. * **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..` For example: `metadata.field_1.number_value = 10.0` In case the field name contains special characters (such as colon), one can embed it inside double quote. For example: `metadata."field:1".number_value = 10.0` * **Context based filtering**: To filter Executions based on the contexts to which they belong use the function operator with the full resource name: `in_context()`. For example: `in_context("projects//locations//metadataStores//contexts/")` Each of the above supported filters can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example: `display_name = "test" AND metadata.field1.bool_value = true`.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'How the list of messages is ordered. Specify the values to order by and an ordering operation. The default sorting order is ascending. To specify descending order for a field, users append a " desc" suffix; for example: "foo desc, bar". Subfields are specified with a `.` character, such as foo.bar. see https://google.aip.dev/132#ordering for more details.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of Executions to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous MetadataService.ListExecutions call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with an INVALID_ARGUMENT error.)
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListExecutionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an Execution associated with a MetadataStore.
      operationId: aiplatform.projects.locations.metadataStores.executions.create
      parameters:
        - description: "Required. The resource name of the MetadataStore where the Execution should be created. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "The {execution} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}` If not provided, the Execution's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all Executions in the parent MetadataStore. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting Execution.)"
          in: query
          name: executionId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1Execution"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1Execution"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/executions:purge:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Purges Executions.
      operationId: aiplatform.projects.locations.metadataStores.executions.purge
      parameters:
        - description: "Required. The metadata store to purge Executions from. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1PurgeExecutionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/experiments:
    get:
      description: Lists TensorboardExperiments in a Location.
      operationId: aiplatform.projects.locations.tensorboards.experiments.list
      parameters:
        - description: "Required. The resource name of the Tensorboard to list TensorboardExperiments. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Lists the TensorboardExperiments that match the filter expression.
          in: query
          name: filter
          schema:
            type: string
        - description: Field to use to sort the list.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of TensorboardExperiments to return. The service may return fewer than this value. If unspecified, at most 50 TensorboardExperiments are returned. The maximum value is 1000; values above 1000 are coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous TensorboardService.ListTensorboardExperiments call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to TensorboardService.ListTensorboardExperiments must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListTensorboardExperimentsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a TensorboardExperiment.
      operationId: aiplatform.projects.locations.tensorboards.experiments.create
      parameters:
        - description: "Required. The resource name of the Tensorboard to create the TensorboardExperiment in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. The ID to use for the Tensorboard experiment, which becomes the final component of the Tensorboard experiment's resource name. This value should be 1-128 characters, and valid characters are `/a-z-/`.
          in: query
          name: tensorboardExperimentId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1TensorboardExperiment"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1TensorboardExperiment"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/featureGroups:
    get:
      description: Lists FeatureGroups in a given project and location.
      operationId: aiplatform.projects.locations.featureGroups.list
      parameters:
        - description: "Required. The resource name of the Location to list FeatureGroups. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'Lists the FeatureGroups that match the filter expression. The following fields are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality and key presence. Examples: * `create_time > "2020-01-01" OR update_time > "2020-01-01"` FeatureGroups created or updated after 2020-01-01. * `labels.env = "prod"` FeatureGroups with label "env" set to "prod".'
          in: query
          name: filter
          schema:
            type: string
        - description: 'A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported Fields: * `create_time` * `update_time`'
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of FeatureGroups to return. The service may return fewer than this value. If unspecified, at most 100 FeatureGroups will be returned. The maximum value is 100; any value greater than 100 will be coerced to 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous FeatureGroupAdminService.ListFeatureGroups call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeatureGroupAdminService.ListFeatureGroups must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListFeatureGroupsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new FeatureGroup in a given project and location.
      operationId: aiplatform.projects.locations.featureGroups.create
      parameters:
        - description: "Required. The resource name of the Location to create FeatureGroups. Format: `projects/{project}/locations/{location}'`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. The ID to use for this FeatureGroup, which will become the final component of the FeatureGroup's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project and location.
          in: query
          name: featureGroupId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureGroup"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/featureOnlineStores:
    get:
      description: Lists FeatureOnlineStores in a given project and location.
      operationId: aiplatform.projects.locations.featureOnlineStores.list
      parameters:
        - description: "Required. The resource name of the Location to list FeatureOnlineStores. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'Lists the FeatureOnlineStores that match the filter expression. The following fields are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality and key presence. Examples: * `create_time > "2020-01-01" OR update_time > "2020-01-01"` FeatureOnlineStores created or updated after 2020-01-01. * `labels.env = "prod"` FeatureOnlineStores with label "env" set to "prod".'
          in: query
          name: filter
          schema:
            type: string
        - description: 'A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported Fields: * `create_time` * `update_time`'
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of FeatureOnlineStores to return. The service may return fewer than this value. If unspecified, at most 100 FeatureOnlineStores will be returned. The maximum value is 100; any value greater than 100 will be coerced to 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous FeatureOnlineStoreAdminService.ListFeatureOnlineStores call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeatureOnlineStoreAdminService.ListFeatureOnlineStores must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListFeatureOnlineStoresResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new FeatureOnlineStore in a given project and location.
      operationId: aiplatform.projects.locations.featureOnlineStores.create
      parameters:
        - description: "Required. The resource name of the Location to create FeatureOnlineStores. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. The ID to use for this FeatureOnlineStore, which will become the final component of the FeatureOnlineStore's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project and location.
          in: query
          name: featureOnlineStoreId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureOnlineStore"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/featureViewSyncs:
    get:
      description: Lists FeatureViewSyncs in a given FeatureView.
      operationId: aiplatform.projects.locations.featureOnlineStores.featureViews.featureViewSyncs.list
      parameters:
        - description: "Required. The resource name of the FeatureView to list FeatureViewSyncs. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'Lists the FeatureViewSyncs that match the filter expression. The following filters are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. Examples: * `create_time > \"2020-01-31T15:30:00.000000Z\"` --> FeatureViewSyncs created after 2020-01-31T15:30:00.000000Z.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `create_time`'
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of FeatureViewSyncs to return. The service may return fewer than this value. If unspecified, at most 1000 FeatureViewSyncs will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous FeatureOnlineStoreAdminService.ListFeatureViewSyncs call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeatureOnlineStoreAdminService.ListFeatureViewSyncs must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListFeatureViewSyncsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/featureViews:
    get:
      description: Lists FeatureViews in a given FeatureOnlineStore.
      operationId: aiplatform.projects.locations.featureOnlineStores.featureViews.list
      parameters:
        - description: "Required. The resource name of the FeatureOnlineStore to list FeatureViews. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Lists the FeatureViews that match the filter expression. The following filters are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality as well as key presence. Examples: * `create_time > \\\"2020-01-31T15:30:00.000000Z\\\" OR update_time > \\\"2020-01-31T15:30:00.000000Z\\\"` --> FeatureViews created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND labels.env = prod` --> FeatureViews having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any FeatureView which has a label with 'env' as the key."
          in: query
          name: filter
          schema:
            type: string
        - description: 'A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `feature_view_id` * `create_time` * `update_time`'
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of FeatureViews to return. The service may return fewer than this value. If unspecified, at most 1000 FeatureViews will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous FeatureOnlineStoreAdminService.ListFeatureViews call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeatureOnlineStoreAdminService.ListFeatureViews must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListFeatureViewsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new FeatureView in a given FeatureOnlineStore.
      operationId: aiplatform.projects.locations.featureOnlineStores.featureViews.create
      parameters:
        - description: "Required. The resource name of the FeatureOnlineStore to create FeatureViews. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. The ID to use for the FeatureView, which will become the final component of the FeatureView's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a FeatureOnlineStore.
          in: query
          name: featureViewId
          schema:
            type: string
        - description: Immutable. If set to true, one on demand sync will be run immediately, regardless whether the FeatureView.sync_config is configured or not.
          in: query
          name: runSyncImmediately
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureView"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/features:
    get:
      description: Lists Features in a given EntityType.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.features.list
      parameters:
        - description: "Required. The resource name of the Location to list Features. Format for entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent: `projects/{project}/locations/{location}/featureGroups/{feature_group}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Lists the Features that match the filter expression. The following filters are supported: * `value_type`: Supports = and != comparisons. * `create_time`: Supports =, !=, <, >, >=, and <= comparisons. Values must be in RFC 3339 format. * `update_time`: Supports =, !=, <, >, >=, and <= comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality as well as key presence. Examples: * `value_type = DOUBLE` --> Features whose type is DOUBLE. * `create_time > \\\"2020-01-31T15:30:00.000000Z\\\" OR update_time > \\\"2020-01-31T15:30:00.000000Z\\\"` --> EntityTypes created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND labels.env = prod` --> Features having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any Feature which has a label with 'env' as the key."
          in: query
          name: filter
          schema:
            type: string
        - description: Only applicable for Vertex AI Feature Store (Legacy). If set, return the most recent ListFeaturesRequest.latest_stats_count of stats for each Feature in response. Valid value is [0, 10]. If number of stats exists < ListFeaturesRequest.latest_stats_count, return all existing stats.
          in: query
          name: latestStatsCount
          schema:
            type: integer
        - description: 'A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `feature_id` * `value_type` (Not supported for FeatureRegistry Feature) * `create_time` * `update_time`'
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of Features to return. The service may return fewer than this value. If unspecified, at most 1000 Features will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous FeaturestoreService.ListFeatures call or FeatureRegistryService.ListFeatures call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.ListFeatures or FeatureRegistryService.ListFeatures must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListFeaturesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new Feature in a given EntityType.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.features.create
      parameters:
        - description: "Required. The resource name of the EntityType or FeatureGroup to create a Feature. Format for entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent: `projects/{project}/locations/{location}/featureGroups/{feature_group}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. The ID to use for the Feature, which will become the final component of the Feature's resource name. This value may be up to 128 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within an EntityType/FeatureGroup.
          in: query
          name: featureId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1Feature"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/features:batchCreate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a batch of Features in a given EntityType.
      operationId: aiplatform.projects.locations.featurestores.entityTypes.features.batchCreate
      parameters:
        - description: "Required. The resource name of the EntityType to create the batch of Features under. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchCreateFeaturesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/featurestores:
    get:
      description: Lists Featurestores in a given project and location.
      operationId: aiplatform.projects.locations.featurestores.list
      parameters:
        - description: "Required. The resource name of the Location to list Featurestores. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'Lists the featurestores that match the filter expression. The following fields are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `online_serving_config.fixed_node_count`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. * `labels`: Supports key-value equality and key presence. Examples: * `create_time > "2020-01-01" OR update_time > "2020-01-01"` Featurestores created or updated after 2020-01-01. * `labels.env = "prod"` Featurestores with label "env" set to "prod".'
          in: query
          name: filter
          schema:
            type: string
        - description: 'A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported Fields: * `create_time` * `update_time` * `online_serving_config.fixed_node_count`'
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of Featurestores to return. The service may return fewer than this value. If unspecified, at most 100 Featurestores will be returned. The maximum value is 100; any value greater than 100 will be coerced to 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous FeaturestoreService.ListFeaturestores call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.ListFeaturestores must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListFeaturestoresResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new Featurestore in a given project and location.
      operationId: aiplatform.projects.locations.featurestores.create
      parameters:
        - description: "Required. The resource name of the Location to create Featurestores. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. The ID to use for this Featurestore, which will become the final component of the Featurestore's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project and location.
          in: query
          name: featurestoreId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1Featurestore"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/hyperparameterTuningJobs:
    get:
      description: Lists HyperparameterTuningJobs in a Location.
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.list
      parameters:
        - description: "Required. The resource name of the Location to list the HyperparameterTuningJobs from. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`'
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token. Typically obtained via ListHyperparameterTuningJobsResponse.next_page_token of the previous JobService.ListHyperparameterTuningJobs call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListHyperparameterTuningJobsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a HyperparameterTuningJob
      operationId: aiplatform.projects.locations.hyperparameterTuningJobs.create
      parameters:
        - description: "Required. The resource name of the Location to create the HyperparameterTuningJob in. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1HyperparameterTuningJob"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1HyperparameterTuningJob"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/indexEndpoints:
    get:
      description: Lists IndexEndpoints in a Location.
      operationId: aiplatform.projects.locations.indexEndpoints.list
      parameters:
        - description: "Required. The resource name of the Location from which to list the IndexEndpoints. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `index_endpoint` supports = and !=. `index_endpoint` represents the IndexEndpoint ID, ie. the last segment of the IndexEndpoint's resourcename. * `display_name` supports =, != and regex() (uses [re2](https://github.com/google/re2/wiki/Syntax) syntax) * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* or labels:key - key existence A key including a space must be quoted. `labels.\"a key\"`. Some examples: * `index_endpoint=\"1\"` * `display_name=\"myDisplayName\"` * `regex(display_name, \"^A\") -> The display name starts with an A. * `labels.myKey=\"myValue\"`"
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The standard list page token. Typically obtained via ListIndexEndpointsResponse.next_page_token of the previous IndexEndpointService.ListIndexEndpoints call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Optional. Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListIndexEndpointsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an IndexEndpoint.
      operationId: aiplatform.projects.locations.indexEndpoints.create
      parameters:
        - description: "Required. The resource name of the Location to create the IndexEndpoint in. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1IndexEndpoint"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/indexes:
    get:
      description: Lists Indexes in a Location.
      operationId: aiplatform.projects.locations.indexes.list
      parameters:
        - description: "Required. The resource name of the Location from which to list the Indexes. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token. Typically obtained via ListIndexesResponse.next_page_token of the previous IndexService.ListIndexes call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListIndexesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an Index.
      operationId: aiplatform.projects.locations.indexes.create
      parameters:
        - description: "Required. The resource name of the Location to create the Index in. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1Index"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/metadataSchemas:
    get:
      description: Lists MetadataSchemas.
      operationId: aiplatform.projects.locations.metadataStores.metadataSchemas.list
      parameters:
        - description: "Required. The MetadataStore whose MetadataSchemas should be listed. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: A query to filter available MetadataSchemas for matching results.
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of MetadataSchemas to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous MetadataService.ListMetadataSchemas call. Provide this to retrieve the next page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListMetadataSchemasResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a MetadataSchema.
      operationId: aiplatform.projects.locations.metadataStores.metadataSchemas.create
      parameters:
        - description: "Required. The resource name of the MetadataStore where the MetadataSchema should be created. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "The {metadata_schema} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/metadataSchemas/{metadataschema}` If not provided, the MetadataStore's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all MetadataSchemas in the parent Location. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting MetadataSchema.)"
          in: query
          name: metadataSchemaId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1MetadataSchema"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1MetadataSchema"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/metadataStores:
    get:
      description: Lists MetadataStores for a Location.
      operationId: aiplatform.projects.locations.metadataStores.list
      parameters:
        - description: "Required. The Location whose MetadataStores should be listed. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of Metadata Stores to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous MetadataService.ListMetadataStores call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListMetadataStoresResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Initializes a MetadataStore, including allocation of resources.
      operationId: aiplatform.projects.locations.metadataStores.create
      parameters:
        - description: "Required. The resource name of the Location where the MetadataStore should be created. Format: `projects/{project}/locations/{location}/`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "The {metadatastore} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}` If not provided, the MetadataStore's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all MetadataStores in the parent Location. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting MetadataStore.)"
          in: query
          name: metadataStoreId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1MetadataStore"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/migratableResources:batchMigrate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Batch migrates resources from ml.googleapis.com, automl.googleapis.com, and datalabeling.googleapis.com to Vertex AI.
      operationId: aiplatform.projects.locations.migratableResources.batchMigrate
      parameters:
        - description: "Required. The location of the migrated resource will live in. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchMigrateResourcesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/migratableResources:search:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Searches all of the resources in automl.googleapis.com, datalabeling.googleapis.com and ml.googleapis.com that can be migrated to Vertex AI's given location.
      operationId: aiplatform.projects.locations.migratableResources.search
      parameters:
        - description: "Required. The location that the migratable resources should be searched from. It's the Vertex AI location that the resources can be migrated to, not the resources' original location. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1SearchMigratableResourcesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1SearchMigratableResourcesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/modelDeploymentMonitoringJobs:
    get:
      description: Lists ModelDeploymentMonitoringJobs in a Location.
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.list
      parameters:
        - description: "Required. The parent of the ModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`'
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListModelDeploymentMonitoringJobsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a ModelDeploymentMonitoringJob. It will run periodically on a configured interval.
      operationId: aiplatform.projects.locations.modelDeploymentMonitoringJobs.create
      parameters:
        - description: "Required. The parent of the ModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringJob"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringJob"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/models:
    get:
      description: Lists Models in a Location.
      operationId: aiplatform.projects.locations.models.list
      parameters:
        - description: "Required. The resource name of the Location to list the Models from. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `model` supports = and !=. `model` represents the Model ID, i.e. the last segment of the Model's resource name. * `display_name` supports = and != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels.\"a key\"`. Some examples: * `model=1234` * `displayName=\"myDisplayName\"` * `labels.myKey=\"myValue\"`"
          in: query
          name: filter
          schema:
            type: string
        - description: 'A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example: `display_name, create_time desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token. Typically obtained via ListModelsResponse.next_page_token of the previous ModelService.ListModels call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListModelsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/models:copy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Copies an already existing Vertex AI Model into the specified Location. The source Model must exist in the same Project. When copying custom Models, the users themselves are responsible for Model.metadata content to be region-agnostic, as well as making sure that any resources (e.g. files) it depends on remain accessible.
      operationId: aiplatform.projects.locations.models.copy
      parameters:
        - description: "Required. The resource name of the Location into which to copy the Model. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1CopyModelRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/models:upload:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Uploads a Model artifact into Vertex AI.
      operationId: aiplatform.projects.locations.models.upload
      parameters:
        - description: "Required. The resource name of the Location into which to upload the Model. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1UploadModelRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/nasJobs:
    get:
      description: Lists NasJobs in a Location.
      operationId: aiplatform.projects.locations.nasJobs.list
      parameters:
        - description: "Required. The resource name of the Location to list the NasJobs from. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="JOB_STATE_SUCCEEDED" AND display_name:"my_job_*"` * `state!="JOB_STATE_FAILED" OR display_name="my_job"` * `NOT display_name="my_job"` * `create_time>"2021-05-18T00:00:00Z"` * `labels.keyA=valueA` * `labels.keyB:*`'
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token. Typically obtained via ListNasJobsResponse.next_page_token of the previous JobService.ListNasJobs call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListNasJobsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a NasJob
      operationId: aiplatform.projects.locations.nasJobs.create
      parameters:
        - description: "Required. The resource name of the Location to create the NasJob in. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1NasJob"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1NasJob"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/nasTrialDetails:
    get:
      description: List top NasTrialDetails of a NasJob.
      operationId: aiplatform.projects.locations.nasJobs.nasTrialDetails.list
      parameters:
        - description: "Required. The name of the NasJob resource. Format: `projects/{project}/locations/{location}/nasJobs/{nas_job}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token. Typically obtained via ListNasTrialDetailsResponse.next_page_token of the previous JobService.ListNasTrialDetails call.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListNasTrialDetailsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/notebookRuntimeTemplates:
    get:
      description: Lists NotebookRuntimeTemplates in a Location.
      operationId: aiplatform.projects.locations.notebookRuntimeTemplates.list
      parameters:
        - description: "Required. The resource name of the Location from which to list the NotebookRuntimeTemplates. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `notebookRuntimeTemplate` supports = and !=. `notebookRuntimeTemplate` represents the NotebookRuntimeTemplate ID, i.e. the last segment of the NotebookRuntimeTemplate's resource name. * `display_name` supports = and != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels.\"a key\"`. * `notebookRuntimeType` supports = and !=. notebookRuntimeType enum: [USER_DEFINED, ONE_CLICK]. Some examples: * `notebookRuntimeTemplate=notebookRuntimeTemplate123` * `displayName=\"myDisplayName\"` * `labels.myKey=\"myValue\"` * `notebookRuntimeType=USER_DEFINED`"
          in: query
          name: filter
          schema:
            type: string
        - description: 'Optional. A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example: `display_name, create_time desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The standard list page token. Typically obtained via ListNotebookRuntimeTemplatesResponse.next_page_token of the previous NotebookService.ListNotebookRuntimeTemplates call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Optional. Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListNotebookRuntimeTemplatesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a NotebookRuntimeTemplate.
      operationId: aiplatform.projects.locations.notebookRuntimeTemplates.create
      parameters:
        - description: "Required. The resource name of the Location to create the NotebookRuntimeTemplate. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. User specified ID for the notebook runtime template.
          in: query
          name: notebookRuntimeTemplateId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1NotebookRuntimeTemplate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/notebookRuntimes:
    get:
      description: Lists NotebookRuntimes in a Location.
      operationId: aiplatform.projects.locations.notebookRuntimes.list
      parameters:
        - description: "Required. The resource name of the Location from which to list the NotebookRuntimes. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `notebookRuntime` supports = and !=. `notebookRuntime` represents the NotebookRuntime ID, i.e. the last segment of the NotebookRuntime's resource name. * `displayName` supports = and != and regex. * `notebookRuntimeTemplate` supports = and !=. `notebookRuntimeTemplate` represents the NotebookRuntimeTemplate ID, i.e. the last segment of the NotebookRuntimeTemplate's resource name. * `healthState` supports = and !=. healthState enum: [HEALTHY, UNHEALTHY, HEALTH_STATE_UNSPECIFIED]. * `runtimeState` supports = and !=. runtimeState enum: [RUNTIME_STATE_UNSPECIFIED, RUNNING, BEING_STARTED, BEING_STOPPED, STOPPED, BEING_UPGRADED]. * `runtimeUser` supports = and !=. * API version is UI only: `uiState` supports = and !=. uiState enum: [UI_RESOURCE_STATE_UNSPECIFIED, UI_RESOURCE_STATE_BEING_CREATED, UI_RESOURCE_STATE_ACTIVE, UI_RESOURCE_STATE_BEING_DELETED, UI_RESOURCE_STATE_CREATION_FAILED]. * `notebookRuntimeType` supports = and !=. notebookRuntimeType enum: [USER_DEFINED, ONE_CLICK]. Some examples: * `notebookRuntime=\"notebookRuntime123\"` * `displayName=\"myDisplayName\"` and `displayName=~\"myDisplayNameRegex\"` * `notebookRuntimeTemplate=\"notebookRuntimeTemplate321\"` * `healthState=HEALTHY` * `runtimeState=RUNNING` * `runtimeUser=\"test@google.com\"` * `uiState=UI_RESOURCE_STATE_BEING_DELETED` * `notebookRuntimeType=USER_DEFINED`"
          in: query
          name: filter
          schema:
            type: string
        - description: 'Optional. A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example: `display_name, create_time desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The standard list page token. Typically obtained via ListNotebookRuntimesResponse.next_page_token of the previous NotebookService.ListNotebookRuntimes call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Optional. Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListNotebookRuntimesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/notebookRuntimes:assign:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Assigns a NotebookRuntime to a user for a particular Notebook file. This method will either returns an existing assignment or generates a new one.
      operationId: aiplatform.projects.locations.notebookRuntimes.assign
      parameters:
        - description: "Required. The resource name of the Location to get the NotebookRuntime assignment. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1AssignNotebookRuntimeRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/pipelineJobs:
    get:
      description: Lists PipelineJobs in a Location.
      operationId: aiplatform.projects.locations.pipelineJobs.list
      parameters:
        - description: "Required. The resource name of the Location to list the PipelineJobs from. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Lists the PipelineJobs that match the filter expression. The following fields are supported: * `pipeline_name`: Supports `=` and `!=` comparisons. * `display_name`: Supports `=`, `!=` comparisons, and `:` wildcard. * `pipeline_job_user_id`: Supports `=`, `!=` comparisons, and `:` wildcard. for example, can check if pipeline's display_name contains *step* by doing display_name:\\\"*step*\\\" * `state`: Supports `=` and `!=` comparisons. * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `end_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality and key presence. * `template_uri`: Supports `=`, `!=` comparisons, and `:` wildcard. * `template_metadata.version`: Supports `=`, `!=` comparisons, and `:` wildcard. Filter expressions can be combined together using logical operators (`AND` & `OR`). For example: `pipeline_name=\"test\" AND create_time>\"2020-05-18T13:30:00Z\"`. The syntax to define filter expression is based on https://google.aip.dev/160. Examples: * `create_time>\"2021-05-18T00:00:00Z\" OR update_time>\"2020-05-18T00:00:00Z\"` PipelineJobs created or updated after 2020-05-18 00:00:00 UTC. * `labels.env = \"prod\"` PipelineJobs with label \"env\" set to \"prod\"."
          in: query
          name: filter
          schema:
            type: string
        - description: 'A comma-separated list of fields to order by. The default sort order is in ascending order. Use "desc" after a field name for descending. You can have multiple order_by fields provided e.g. "create_time desc, end_time", "end_time, start_time, update_time" For example, using "create_time desc, end_time" will order results by create time in descending order, and if there are multiple jobs having the same create time, order them by the end time in ascending order. if order_by is not specified, it will order by default order is create time in descending order. Supported fields: * `create_time` * `update_time` * `end_time` * `start_time`'
          in: query
          name: orderBy
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token. Typically obtained via ListPipelineJobsResponse.next_page_token of the previous PipelineService.ListPipelineJobs call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListPipelineJobsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a PipelineJob. A PipelineJob will run immediately when created.
      operationId: aiplatform.projects.locations.pipelineJobs.create
      parameters:
        - description: "Required. The resource name of the Location to create the PipelineJob in. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The ID to use for the PipelineJob, which will become the final component of the PipelineJob name. If not provided, an ID will be automatically generated. This value should be less than 128 characters, and valid characters are `/a-z-/`.
          in: query
          name: pipelineJobId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1PipelineJob"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1PipelineJob"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/runs:
    get:
      description: Lists TensorboardRuns in a Location.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.list
      parameters:
        - description: "Required. The resource name of the TensorboardExperiment to list TensorboardRuns. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Lists the TensorboardRuns that match the filter expression.
          in: query
          name: filter
          schema:
            type: string
        - description: Field to use to sort the list.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of TensorboardRuns to return. The service may return fewer than this value. If unspecified, at most 50 TensorboardRuns are returned. The maximum value is 1000; values above 1000 are coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous TensorboardService.ListTensorboardRuns call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to TensorboardService.ListTensorboardRuns must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListTensorboardRunsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a TensorboardRun.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.create
      parameters:
        - description: "Required. The resource name of the TensorboardExperiment to create the TensorboardRun in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. The ID to use for the Tensorboard run, which becomes the final component of the Tensorboard run's resource name. This value should be 1-128 characters, and valid characters are `/a-z-/`.
          in: query
          name: tensorboardRunId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1TensorboardRun"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1TensorboardRun"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/runs:batchCreate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Batch create TensorboardRuns.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.batchCreate
      parameters:
        - description: "Required. The resource name of the TensorboardExperiment to create the TensorboardRuns in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}` The parent field in the CreateTensorboardRunRequest messages must match this field."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchCreateTensorboardRunsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchCreateTensorboardRunsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/savedQueries:
    get:
      description: Lists SavedQueries in a Dataset.
      operationId: aiplatform.projects.locations.datasets.savedQueries.list
      parameters:
        - description: "Required. The resource name of the Dataset to list SavedQueries from. Format: `projects/{project}/locations/{location}/datasets/{dataset}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListSavedQueriesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/schedules:
    get:
      description: Lists Schedules in a Location.
      operationId: aiplatform.projects.locations.schedules.list
      parameters:
        - description: "Required. The resource name of the Location to list the Schedules from. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'Lists the Schedules that match the filter expression. The following fields are supported: * `display_name`: Supports `=`, `!=` comparisons, and `:` wildcard. * `state`: Supports `=` and `!=` comparisons. * `request`: Supports existence of the check. (e.g. `create_pipeline_job_request:*` --> Schedule has create_pipeline_job_request). * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `start_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `end_time`: Supports `=`, `!=`, `<`, `>`, `<=`, `>=` comparisons and `:*` existence check. Values must be in RFC 3339 format. * `next_run_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. Filter expressions can be combined together using logical operators (`NOT`, `AND` & `OR`). The syntax to define filter expression is based on https://google.aip.dev/160. Examples: * `state="ACTIVE" AND display_name:"my_schedule_*"` * `NOT display_name="my_schedule"` * `create_time>"2021-05-18T00:00:00Z"` * `end_time>"2021-05-18T00:00:00Z" OR NOT end_time:*` * `create_pipeline_job_request:*`'
          in: query
          name: filter
          schema:
            type: string
        - description: 'A comma-separated list of fields to order by. The default sort order is in ascending order. Use "desc" after a field name for descending. You can have multiple order_by fields provided. For example, using "create_time desc, end_time" will order results by create time in descending order, and if there are multiple schedules having the same create time, order them by the end time in ascending order. If order_by is not specified, it will order by default with create_time in descending order. Supported fields: * `create_time` * `start_time` * `end_time` * `next_run_time`'
          in: query
          name: orderBy
          schema:
            type: string
        - description: The standard list page size. Default to 100 if not specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token. Typically obtained via ListSchedulesResponse.next_page_token of the previous ScheduleService.ListSchedules call.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListSchedulesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a Schedule.
      operationId: aiplatform.projects.locations.schedules.create
      parameters:
        - description: "Required. The resource name of the Location to create the Schedule in. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1Schedule"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1Schedule"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/slices:
    get:
      description: Lists ModelEvaluationSlices in a ModelEvaluation.
      operationId: aiplatform.projects.locations.models.evaluations.slices.list
      parameters:
        - description: "Required. The resource name of the ModelEvaluation to list the ModelEvaluationSlices from. Format: `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The standard list filter. * `slice.dimension` - for =.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token. Typically obtained via ListModelEvaluationSlicesResponse.next_page_token of the previous ModelService.ListModelEvaluationSlices call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListModelEvaluationSlicesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/specialistPools:
    get:
      description: Lists SpecialistPools in a Location.
      operationId: aiplatform.projects.locations.specialistPools.list
      parameters:
        - description: "Required. The name of the SpecialistPool's parent resource. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token. Typically obtained by ListSpecialistPoolsResponse.next_page_token of the previous SpecialistPoolService.ListSpecialistPools call. Return first page if empty.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read. FieldMask represents a set of
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListSpecialistPoolsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a SpecialistPool.
      operationId: aiplatform.projects.locations.specialistPools.create
      parameters:
        - description: Required. The parent Project name for the new SpecialistPool. The form is `projects/{project}/locations/{location}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1SpecialistPool"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/studies:
    get:
      description: Lists all the studies in a region for an associated project.
      operationId: aiplatform.projects.locations.studies.list
      parameters:
        - description: "Required. The resource name of the Location to list the Study from. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The maximum number of studies to return per "page" of results. If unspecified, service will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. A page token to request the next page of results. If unspecified, there are no subsequent pages.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListStudiesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a Study. A resource name will be generated after creation of the Study.
      operationId: aiplatform.projects.locations.studies.create
      parameters:
        - description: "Required. The resource name of the Location to create the CustomJob in. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1Study"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1Study"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/studies:lookup:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Looks a study up using the user-defined display_name field instead of the fully qualified resource name.
      operationId: aiplatform.projects.locations.studies.lookup
      parameters:
        - description: "Required. The resource name of the Location to get the Study from. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1LookupStudyRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1Study"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/tensorboards:
    get:
      description: Lists Tensorboards in a Location.
      operationId: aiplatform.projects.locations.tensorboards.list
      parameters:
        - description: "Required. The resource name of the Location to list Tensorboards. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Lists the Tensorboards that match the filter expression.
          in: query
          name: filter
          schema:
            type: string
        - description: Field to use to sort the list.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of Tensorboards to return. The service may return fewer than this value. If unspecified, at most 100 Tensorboards are returned. The maximum value is 100; values above 100 are coerced to 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous TensorboardService.ListTensorboards call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to TensorboardService.ListTensorboards must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListTensorboardsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a Tensorboard.
      operationId: aiplatform.projects.locations.tensorboards.create
      parameters:
        - description: "Required. The resource name of the Location to create the Tensorboard in. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1Tensorboard"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/timeSeries:
    get:
      description: Lists TensorboardTimeSeries in a Location.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.list
      parameters:
        - description: "Required. The resource name of the TensorboardRun to list TensorboardTimeSeries. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Lists the TensorboardTimeSeries that match the filter expression.
          in: query
          name: filter
          schema:
            type: string
        - description: Field to use to sort the list.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of TensorboardTimeSeries to return. The service may return fewer than this value. If unspecified, at most 50 TensorboardTimeSeries are returned. The maximum value is 1000; values above 1000 are coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous TensorboardService.ListTensorboardTimeSeries call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to TensorboardService.ListTensorboardTimeSeries must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListTensorboardTimeSeriesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a TensorboardTimeSeries.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.create
      parameters:
        - description: "Required. The resource name of the TensorboardRun to create the TensorboardTimeSeries in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The user specified unique ID to use for the TensorboardTimeSeries, which becomes the final component of the TensorboardTimeSeries's resource name. This value should match "a-z0-9{0, 127}"
          in: query
          name: tensorboardTimeSeriesId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/trainingPipelines:
    get:
      description: Lists TrainingPipelines in a Location.
      operationId: aiplatform.projects.locations.trainingPipelines.list
      parameters:
        - description: "Required. The resource name of the Location to list the TrainingPipelines from. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `training_task_definition` `=`, `!=` comparisons, and `:` wildcard. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state="PIPELINE_STATE_SUCCEEDED" AND display_name:"my_pipeline_*"` * `state!="PIPELINE_STATE_FAILED" OR display_name="my_pipeline"` * `NOT display_name="my_pipeline"` * `create_time>"2021-05-18T00:00:00Z"` * `training_task_definition:"*automl_text_classification*"`'
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token. Typically obtained via ListTrainingPipelinesResponse.next_page_token of the previous PipelineService.ListTrainingPipelines call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Mask specifying which fields to read.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListTrainingPipelinesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a TrainingPipeline. A created TrainingPipeline right away will be attempted to be run.
      operationId: aiplatform.projects.locations.trainingPipelines.create
      parameters:
        - description: "Required. The resource name of the Location to create the TrainingPipeline in. Format: `projects/{project}/locations/{location}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1TrainingPipeline"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1TrainingPipeline"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/trials:
    get:
      description: Lists the Trials associated with a Study.
      operationId: aiplatform.projects.locations.studies.trials.list
      parameters:
        - description: "Required. The resource name of the Study to list the Trial from. Format: `projects/{project}/locations/{location}/studies/{study}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The number of Trials to retrieve per "page" of results. If unspecified, the service will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. A page token to request the next page of results. If unspecified, there are no subsequent pages.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListTrialsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Adds a user provided Trial to a Study.
      operationId: aiplatform.projects.locations.studies.trials.create
      parameters:
        - description: "Required. The resource name of the Study to create the Trial in. Format: `projects/{project}/locations/{location}/studies/{study}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1Trial"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1Trial"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/trials:listOptimalTrials:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Lists the pareto-optimal Trials for multi-objective Study or the optimal Trials for single-objective Study. The definition of pareto-optimal can be checked in wiki page. https://en.wikipedia.org/wiki/Pareto_efficiency
      operationId: aiplatform.projects.locations.studies.trials.listOptimalTrials
      parameters:
        - description: Required. The name of the Study that the optimal Trial belongs to.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1ListOptimalTrialsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ListOptimalTrialsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/trials:suggest:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Adds one or more Trials to a Study, with parameter values suggested by Vertex AI Vizier. Returns a long-running operation associated with the generation of Trial suggestions. When this long-running operation succeeds, it will contain a SuggestTrialsResponse.
      operationId: aiplatform.projects.locations.studies.trials.suggest
      parameters:
        - description: "Required. The project and location that the Study belongs to. Format: `projects/{project}/locations/{location}/studies/{study}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1SuggestTrialsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}:batchCreate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Batch create TensorboardTimeSeries that belong to a TensorboardExperiment.
      operationId: aiplatform.projects.locations.tensorboards.experiments.batchCreate
      parameters:
        - description: "Required. The resource name of the TensorboardExperiment to create the TensorboardTimeSeries in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}` The TensorboardRuns referenced by the parent fields in the CreateTensorboardTimeSeriesRequest messages must be sub resources of this TensorboardExperiment."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}:batchImport:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Imports a list of externally generated EvaluatedAnnotations.
      operationId: aiplatform.projects.locations.models.evaluations.slices.batchImport
      parameters:
        - description: "Required. The name of the parent ModelEvaluationSlice resource. Format: `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{resource}:getIamPolicy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: aiplatform.projects.locations.notebookRuntimeTemplates.getIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleIamV1Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{resource}:setIamPolicy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: aiplatform.projects.locations.notebookRuntimeTemplates.setIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleIamV1SetIamPolicyRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleIamV1Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{resource}:testIamPermissions:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: aiplatform.projects.locations.notebookRuntimeTemplates.testIamPermissions
      parameters:
        - description: "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          explode: true
          in: query
          name: permissions
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleIamV1TestIamPermissionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{tensorboardExperiment}:write:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Write time series data points of multiple TensorboardTimeSeries in multiple TensorboardRun's. If any data fail to be ingested, an error is returned.
      operationId: aiplatform.projects.locations.tensorboards.experiments.write
      parameters:
        - description: "Required. The resource name of the TensorboardExperiment to write data to. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`"
          in: path
          name: tensorboardExperiment
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1WriteTensorboardExperimentDataRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1WriteTensorboardExperimentDataResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{tensorboardRun}:write:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Write time series data points into multiple TensorboardTimeSeries under a TensorboardRun. If any data fail to be ingested, an error is returned.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.write
      parameters:
        - description: "Required. The resource name of the TensorboardRun to write data to. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`"
          in: path
          name: tensorboardRun
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1WriteTensorboardRunDataRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1WriteTensorboardRunDataResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{tensorboardTimeSeries}:exportTensorboardTimeSeries:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Exports a TensorboardTimeSeries' data. Data is returned in paginated responses.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.exportTensorboardTimeSeries
      parameters:
        - description: "Required. The resource name of the TensorboardTimeSeries to export data from. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`"
          in: path
          name: tensorboardTimeSeries
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{tensorboardTimeSeries}:read:
    get:
      description: Reads a TensorboardTimeSeries' data. By default, if the number of data points stored is less than 1000, all data is returned. Otherwise, 1000 data points is randomly selected from this time series and returned. This value can be changed by changing max_data_points, which can't be greater than 10k.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.read
      parameters:
        - description: "Required. The resource name of the TensorboardTimeSeries to read data from. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`"
          in: path
          name: tensorboardTimeSeries
          required: true
          schema:
            type: string
        - description: Reads the TensorboardTimeSeries' data that match the filter expression.
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of TensorboardTimeSeries' data to return. This value should be a positive integer. This value can be set to -1 to return all data.
          in: query
          name: maxDataPoints
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ReadTensorboardTimeSeriesDataResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{tensorboard}:batchRead:
    get:
      description: Reads multiple TensorboardTimeSeries' data. The data point number limit is 1000 for scalars, 100 for tensors and blob references. If the number of data points stored is less than the limit, all data is returned. Otherwise, the number limit of data points is randomly selected from this time series and returned.
      operationId: aiplatform.projects.locations.tensorboards.batchRead
      parameters:
        - description: "Required. The resource name of the Tensorboard containing TensorboardTimeSeries to read data from. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`. The TensorboardTimeSeries referenced by time_series must be sub resources of this Tensorboard."
          in: path
          name: tensorboard
          required: true
          schema:
            type: string
        - description: "Required. The resource names of the TensorboardTimeSeries to read data from. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`"
          explode: true
          in: query
          name: timeSeries
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchReadTensorboardTimeSeriesDataResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{tensorboard}:readSize:
    get:
      description: Returns the storage size for a given TensorBoard instance.
      operationId: aiplatform.projects.locations.tensorboards.readSize
      parameters:
        - description: "Required. The name of the Tensorboard resource. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`"
          in: path
          name: tensorboard
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ReadTensorboardSizeResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{tensorboard}:readUsage:
    get:
      description: Returns a list of monthly active users for a given TensorBoard instance.
      operationId: aiplatform.projects.locations.tensorboards.readUsage
      parameters:
        - description: "Required. The name of the Tensorboard resource. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`"
          in: path
          name: tensorboard
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ReadTensorboardUsageResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{timeSeries}:readBlobData:
    get:
      description: Gets bytes of TensorboardBlobs. This is to allow reading blob data stored in consumer project's Cloud Storage bucket without users having to obtain Cloud Storage access permission.
      operationId: aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.readBlobData
      parameters:
        - description: "Required. The resource name of the TensorboardTimeSeries to list Blobs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`"
          in: path
          name: timeSeries
          required: true
          schema:
            type: string
        - description: IDs of the blobs to read.
          explode: true
          in: query
          name: blobIds
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1ReadTensorboardBlobDataResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{trialName}:addTrialMeasurement:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Adds a measurement of the objective metrics to a Trial. This measurement is assumed to have been taken before the Trial is complete.
      operationId: aiplatform.projects.locations.studies.trials.addTrialMeasurement
      parameters:
        - description: "Required. The name of the trial to add measurement. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`"
          in: path
          name: trialName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1AddTrialMeasurementRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudAiplatformV1Trial"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{trialName}:checkTrialEarlyStoppingState:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Checks whether a Trial should stop or not. Returns a long-running operation. When the operation is successful, it will contain a CheckTrialEarlyStoppingStateResponse.
      operationId: aiplatform.projects.locations.studies.trials.checkTrialEarlyStoppingState
      parameters:
        - description: "Required. The Trial's name. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`"
          in: path
          name: trialName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    CloudAiLargeModelsVisionEmbedVideoResponse:
      description: Video embedding response.
      properties:
        videoEmbeddings:
          description: The embedding vector for the video.
          items: {}
          type: array
      type: object
    CloudAiLargeModelsVisionFilteredText:
      description: Details for filtered input text.
      properties:
        category:
          description: Confidence level
          enum:
            - RAI_CATEGORY_UNSPECIFIED
            - OBSCENE
            - SEXUALLY_EXPLICIT
            - IDENTITY_ATTACK
            - VIOLENCE_ABUSE
            - CSAI
            - SPII
            - CELEBRITY
            - FACE_IMG
            - WATERMARK_IMG
            - MEMORIZATION_IMG
            - CSAI_IMG
            - PORN_IMG
            - VIOLENCE_IMG
            - CHILD_IMG
            - TOXIC
            - SENSITIVE_WORD
            - PERSON_IMG
            - ICA_IMG
            - SEXUAL_IMG
            - IU_IMG
            - RACY_IMG
            - PEDO_IMG
            - DEATH_HARM_TRAGEDY
            - HEALTH
            - FIREARMS_WEAPONS
            - RELIGIOUS_BELIEF
            - ILLICIT_DRUGS
            - WAR_CONFLICT
            - POLITICS
            - HATE_SYMBOL_IMG
            - CHILD_TEXT
            - DANGEROUS_CONTENT
            - RECITATION_TEXT
            - CELEBRITY_IMG
          type: string
        confidence:
          description: Filtered category
          enum:
            - CONFIDENCE_UNSPECIFIED
            - CONFIDENCE_LOW
            - CONFIDENCE_MEDIUM
            - CONFIDENCE_HIGH
          type: string
        prompt:
          description: Input prompt
          type: string
        score:
          description: Score for category
          format: double
          type: number
      type: object
    CloudAiLargeModelsVisionGenerateVideoResponse:
      description: Generate video response.
      properties:
        generatedSamples:
          description: The generates samples.
          items:
            $ref: "#/components/schemas/CloudAiLargeModelsVisionMedia"
          type: array
        raiMediaFilteredCount:
          description: Returns if any videos were filtered due to RAI policies.
          format: int32
          type: integer
        raiMediaFilteredReasons:
          description: Returns rai failure reasons if any.
          items:
            type: string
          type: array
        raiTextFilteredReason:
          $ref: "#/components/schemas/CloudAiLargeModelsVisionFilteredText"
          description: Returns filtered text rai info.
      type: object
    CloudAiLargeModelsVisionImage:
      description: Image.
      properties:
        encoding:
          description: Image encoding, encoded as "image/png" or "image/jpg".
          type: string
        image:
          description: Raw bytes.
          format: byte
          type: string
        imageRaiScores:
          $ref: "#/components/schemas/CloudAiLargeModelsVisionImageRAIScores"
          description: RAI scores for generated image.
        raiInfo:
          $ref: "#/components/schemas/CloudAiLargeModelsVisionRaiInfo"
          description: RAI info for image.
        semanticFilterResponse:
          $ref: "#/components/schemas/CloudAiLargeModelsVisionSemanticFilterResponse"
          description: Semantic filter info for image.
        text:
          description: Text/Expanded text input for imagen.
          type: string
        uri:
          description: Path to another storage (typically Google Cloud Storage).
          type: string
      type: object
    CloudAiLargeModelsVisionImageRAIScores:
      description: RAI scores for generated image returned.
      properties:
        agileWatermarkDetectionScore:
          description: Agile watermark score for image.
          format: double
          type: number
      type: object
    CloudAiLargeModelsVisionMedia:
      description: Media.
      properties:
        image:
          $ref: "#/components/schemas/CloudAiLargeModelsVisionImage"
          description: Image.
        video:
          $ref: "#/components/schemas/CloudAiLargeModelsVisionVideo"
          description: Video
      type: object
    CloudAiLargeModelsVisionMediaGenerateContentResponse:
      description: Generate media content response
      properties:
        response:
          $ref: "#/components/schemas/CloudAiNlLlmProtoServiceGenerateMultiModalResponse"
          description: Response to the user's request.
      type: object
    CloudAiLargeModelsVisionNamedBoundingBox:
      properties:
        classes:
          items:
            type: string
          type: array
        entities:
          items:
            type: string
          type: array
        scores:
          items:
            format: float
            type: number
          type: array
        x1:
          format: float
          type: number
        x2:
          format: float
          type: number
        y1:
          format: float
          type: number
        y2:
          format: float
          type: number
      type: object
    CloudAiLargeModelsVisionRaiInfo:
      properties:
        raiCategories:
          description: List of rai categories' information to return
          items:
            type: string
          type: array
        scores:
          description: List of rai scores mapping to the rai categories. Rounded to 1 decimal place.
          items:
            format: float
            type: number
          type: array
      type: object
    CloudAiLargeModelsVisionReasonVideoResponse:
      description: Video reasoning response.
      properties:
        responses:
          description: Generated text responses. The generated responses for different segments within the same video.
          items:
            $ref: "#/components/schemas/CloudAiLargeModelsVisionReasonVideoResponseTextResponse"
          type: array
      type: object
    CloudAiLargeModelsVisionReasonVideoResponseTextResponse:
      description: Contains text that is the response of the video captioning.
      properties:
        relativeTemporalPartition:
          $ref: "#/components/schemas/CloudAiLargeModelsVisionRelativeTemporalPartition"
          description: Partition of the caption's video in time. This field is intended for video captioning. To represent the start time and end time of the caption's video.
        text:
          description: Text information
          type: string
      type: object
    CloudAiLargeModelsVisionRelativeTemporalPartition:
      description: For ease of use, assume that the start_offset is inclusive and the end_offset is exclusive. In mathematical terms, the partition would be written as [start_offset, end_offset).
      properties:
        endOffset:
          description: End time offset of the partition.
          format: google-duration
          type: string
        startOffset:
          description: Start time offset of the partition.
          format: google-duration
          type: string
      type: object
    CloudAiLargeModelsVisionSemanticFilterResponse:
      properties:
        namedBoundingBoxes:
          description: Class labels of the bounding boxes that failed the semantic filtering. Bounding box coordinates.
          items:
            $ref: "#/components/schemas/CloudAiLargeModelsVisionNamedBoundingBox"
          type: array
        passedSemanticFilter:
          description: This response is added when semantic filter config is turned on in EditConfig. It reports if this image is passed semantic filter response. If passed_semantic_filter is false, the bounding box information will be populated for user to check what caused the semantic filter to fail.
          type: boolean
      type: object
    CloudAiLargeModelsVisionVideo:
      description: Video
      properties:
        uri:
          description: Path to another storage (typically Google Cloud Storage).
          type: string
        video:
          description: Raw bytes.
          format: byte
          type: string
      type: object
    CloudAiNlLlmProtoServiceCandidate:
      properties:
        citationMetadata:
          $ref: "#/components/schemas/CloudAiNlLlmProtoServiceCitationMetadata"
          description: Source attribution of the generated content.
        content:
          $ref: "#/components/schemas/CloudAiNlLlmProtoServiceContent"
          description: Content of the candidate.
        finishMessage:
          description: A string that describes the filtering behavior in more detail. Only filled when reason is set.
          type: string
        finishReason:
          description: The reason why the model stopped generating tokens.
          enum:
            - FINISH_REASON_UNSPECIFIED
            - FINISH_REASON_STOP
            - FINISH_REASON_MAX_TOKENS
            - FINISH_REASON_SAFETY
            - FINISH_REASON_RECITATION
            - FINISH_REASON_OTHER
          type: string
        groundingMetadata:
          $ref: "#/components/schemas/LearningGenaiRootGroundingMetadata"
          description: Grounding metadata. Combine with the facts list from response to generate grounding citations for this choice.
        index:
          description: Index of the candidate.
          format: int32
          type: integer
        safetyRatings:
          description: Safety ratings of the generated content.
          items:
            $ref: "#/components/schemas/CloudAiNlLlmProtoServiceSafetyRating"
          type: array
      type: object
    CloudAiNlLlmProtoServiceCitation:
      description: Source attributions for content.
      properties:
        endIndex:
          description: End index into the content.
          format: int32
          type: integer
        license:
          description: License of the attribution.
          type: string
        publicationDate:
          $ref: "#/components/schemas/GoogleTypeDate"
          description: Publication date of the attribution.
        startIndex:
          description: Start index into the content.
          format: int32
          type: integer
        title:
          description: Title of the attribution.
          type: string
        uri:
          description: Url reference of the attribution.
          type: string
      type: object
    CloudAiNlLlmProtoServiceCitationMetadata:
      description: A collection of source attributions for a piece of content.
      properties:
        citations:
          description: List of citations.
          items:
            $ref: "#/components/schemas/CloudAiNlLlmProtoServiceCitation"
          type: array
      type: object
    CloudAiNlLlmProtoServiceContent:
      description: The content of a single message from a participant.
      properties:
        parts:
          description: The parts of the message.
          items:
            $ref: "#/components/schemas/CloudAiNlLlmProtoServicePart"
          type: array
        role:
          description: The role of the current conversation participant.
          type: string
      type: object
    CloudAiNlLlmProtoServiceFact:
      description: A condense version of WorldFact (assistant/boq/lamda/factuality/proto/factuality.proto) to propagate the essential information about the fact used in factuality to the upstream caller.
      properties:
        query:
          description: Query that is used to retrieve this fact.
          type: string
        summary:
          description: If present, the summary/snippet of the fact.
          type: string
        title:
          description: If present, it refers to the title of this fact.
          type: string
        url:
          description: If present, this URL links to the webpage of the fact.
          type: string
      type: object
    CloudAiNlLlmProtoServiceFunctionCall:
      description: Function call details.
      properties:
        args:
          additionalProperties:
            description: Properties of the object.
          description: The function parameters and values in JSON format.
          type: object
        name:
          description: Required. The name of the function to call.
          type: string
      type: object
    CloudAiNlLlmProtoServiceFunctionResponse:
      description: Function response details.
      properties:
        name:
          description: Required. The name of the function to call.
          type: string
        response:
          additionalProperties:
            description: Properties of the object.
          description: Required. The function response in JSON object format.
          type: object
      type: object
    CloudAiNlLlmProtoServiceGenerateMultiModalResponse:
      properties:
        candidates:
          description: Possible candidate responses to the conversation up until this point.
          items:
            $ref: "#/components/schemas/CloudAiNlLlmProtoServiceCandidate"
          type: array
        debugMetadata:
          $ref: "#/components/schemas/CloudAiNlLlmProtoServiceMessageMetadata"
          description: Debug information containing message metadata. Clients should not consume this field, and this is only populated for Flow Runner path.
        facts:
          description: External facts retrieved for factuality/grounding.
          items:
            $ref: "#/components/schemas/CloudAiNlLlmProtoServiceFact"
          type: array
        promptFeedback:
          $ref: "#/components/schemas/CloudAiNlLlmProtoServicePromptFeedback"
          description: "Content filter results for a prompt sent in the request. Note: Sent only in the first stream chunk. Only happens when no candidates were generated due to content violations."
        reportingMetrics:
          $ref: "#/components/schemas/IntelligenceCloudAutomlXpsReportingMetrics"
          description: Billable prediction metrics.
        usageMetadata:
          $ref: "#/components/schemas/CloudAiNlLlmProtoServiceUsageMetadata"
          description: Usage metadata about the response(s).
      type: object
    CloudAiNlLlmProtoServiceMessageMetadata:
      properties:
        inputFilterInfo:
          $ref: "#/components/schemas/LearningServingLlmMessageMetadata"
          description: Filter metadata of the input messages.
        modelRoutingDecision:
          $ref: "#/components/schemas/LearningGenaiRootRoutingDecision"
          description: This score is generated by the router model to decide which model to use
        outputFilterInfo:
          description: Filter metadata of the output messages.
          items:
            $ref: "#/components/schemas/LearningServingLlmMessageMetadata"
          type: array
      type: object
    CloudAiNlLlmProtoServicePart:
      description: A single part of a message.
      properties:
        fileData:
          $ref: "#/components/schemas/CloudAiNlLlmProtoServicePartFileData"
          description: URI-based data.
        functionCall:
          $ref: "#/components/schemas/CloudAiNlLlmProtoServiceFunctionCall"
          description: Function call data.
        functionResponse:
          $ref: "#/components/schemas/CloudAiNlLlmProtoServiceFunctionResponse"
          description: Function response data.
        inlineData:
          $ref: "#/components/schemas/CloudAiNlLlmProtoServicePartBlob"
          description: Inline bytes data
        text:
          description: Text input.
          type: string
        videoMetadata:
          $ref: "#/components/schemas/CloudAiNlLlmProtoServicePartVideoMetadata"
          description: Video metadata. The metadata should only be specified while the video data is presented in inline_data or file_data.
      type: object
    CloudAiNlLlmProtoServicePartBlob:
      description: Represents arbitrary blob data input.
      properties:
        data:
          description: Inline data.
          format: byte
          type: string
        mimeType:
          description: The mime type corresponding to this input.
          type: string
        originalFileData:
          $ref: "#/components/schemas/CloudAiNlLlmProtoServicePartFileData"
          description: Original file data where the blob comes from.
      type: object
    CloudAiNlLlmProtoServicePartFileData:
      description: Represents file data.
      properties:
        fileUri:
          description: Inline data.
          type: string
        mimeType:
          description: The mime type corresponding to this input.
          type: string
      type: object
    CloudAiNlLlmProtoServicePartVideoMetadata:
      description: Metadata describes the input video content.
      properties:
        endOffset:
          description: The end offset of the video.
          format: google-duration
          type: string
        startOffset:
          description: The start offset of the video.
          format: google-duration
          type: string
      type: object
    CloudAiNlLlmProtoServicePromptFeedback:
      description: Content filter results for a prompt sent in the request.
      properties:
        blockReason:
          description: Blocked reason.
          enum:
            - BLOCKED_REASON_UNSPECIFIED
            - SAFETY
            - OTHER
          type: string
        blockReasonMessage:
          description: A readable block reason message.
          type: string
        safetyRatings:
          description: Safety ratings.
          items:
            $ref: "#/components/schemas/CloudAiNlLlmProtoServiceSafetyRating"
          type: array
      type: object
    CloudAiNlLlmProtoServiceRaiResult:
      description: The RAI results for a given text.
      properties:
        aidaRecitationResult:
          $ref: "#/components/schemas/LanguageLabsAidaTrustRecitationProtoRecitationResult"
          description: Recitation result from Aida recitation checker.
        blocked:
          deprecated: true
          description: Use `triggered_blocklist`.
          type: boolean
        errorCodes:
          description: The error codes indicate which RAI filters block the response.
          items:
            format: int32
            type: integer
          type: array
        filtered:
          description: Whether the text should be filtered and not shown to the end user. This is determined based on a combination of `triggered_recitation`, `triggered_blocklist`, `language_filter_result`, and `triggered_safety_filter`.
          type: boolean
        languageFilterResult:
          $ref: "#/components/schemas/LearningGenaiRootLanguageFilterResult"
          description: Language filter result from SAFT LangId.
        raiSignals:
          description: The RAI signals for the text.
          items:
            $ref: "#/components/schemas/CloudAiNlLlmProtoServiceRaiSignal"
          type: array
        triggeredBlocklist:
          description: Whether the text triggered the blocklist.
          type: boolean
        triggeredRecitation:
          description: Whether the text should be blocked by the recitation result from Aida recitation checker. It is determined from aida_recitation_result.
          type: boolean
        triggeredSafetyFilter:
          description: Whether the text triggered the safety filter. Currently, this is due to CSAI triggering or one of four categories (derogatory, sexual, toxic, violent) having a score over the filter threshold.
          type: boolean
      type: object
    CloudAiNlLlmProtoServiceRaiSignal:
      description: An RAI signal for a single category.
      properties:
        confidence:
          description: The confidence level for the RAI category.
          enum:
            - CONFIDENCE_UNSPECIFIED
            - CONFIDENCE_NONE
            - CONFIDENCE_LOW
            - CONFIDENCE_MEDIUM
            - CONFIDENCE_HIGH
          type: string
        flagged:
          description: Whether the category is flagged as being present. Currently, this is set to true if score >= 0.5.
          type: boolean
        raiCategory:
          description: The RAI category.
          enum:
            - RAI_CATEGORY_UNSPECIFIED
            - TOXIC
            - SEXUALLY_EXPLICIT
            - HATE_SPEECH
            - VIOLENT
            - PROFANITY
            - HARASSMENT
            - DEATH_HARM_TRAGEDY
            - FIREARMS_WEAPONS
            - PUBLIC_SAFETY
            - HEALTH
            - RELIGIOUS_BELIEF
            - ILLICIT_DRUGS
            - WAR_CONFLICT
            - POLITICS
            - FINANCE
            - LEGAL
            - CSAI
            - FRINGE
            - THREAT
            - SEVERE_TOXICITY
            - TOXICITY
            - SEXUAL
            - INSULT
            - DEROGATORY
            - IDENTITY_ATTACK
            - VIOLENCE_ABUSE
            - OBSCENE
            - DRUGS
            - CSAM
            - SPII
            - DANGEROUS_CONTENT
            - DANGEROUS_CONTENT_SEVERITY
            - INSULT_SEVERITY
            - DEROGATORY_SEVERITY
            - SEXUAL_SEVERITY
          type: string
        score:
          description: The score for the category, in the range [0.0, 1.0].
          format: float
          type: number
      type: object
    CloudAiNlLlmProtoServiceSafetyRating:
      description: Safety rating corresponding to the generated content.
      properties:
        blocked:
          description: Indicates whether the content was filtered out because of this rating.
          type: boolean
        category:
          description: Harm category.
          enum:
            - HARM_CATEGORY_UNSPECIFIED
            - HARM_CATEGORY_HATE_SPEECH
            - HARM_CATEGORY_DANGEROUS_CONTENT
            - HARM_CATEGORY_HARASSMENT
            - HARM_CATEGORY_SEXUALLY_EXPLICIT
          type: string
        influentialTerms:
          description: The influential terms that could potentially block the response.
          items:
            $ref: "#/components/schemas/CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm"
          type: array
        probability:
          description: Harm probability levels in the content.
          enum:
            - HARM_PROBABILITY_UNSPECIFIED
            - NEGLIGIBLE
            - LOW
            - MEDIUM
            - HIGH
          type: string
        probabilityScore:
          description: Harm probability score.
          format: float
          type: number
        severity:
          description: Harm severity levels in the content.
          enum:
            - HARM_SEVERITY_UNSPECIFIED
            - HARM_SEVERITY_NEGLIGIBLE
            - HARM_SEVERITY_LOW
            - HARM_SEVERITY_MEDIUM
            - HARM_SEVERITY_HIGH
          type: string
        severityScore:
          description: Harm severity score.
          format: float
          type: number
      type: object
    CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm:
      description: The influential term that could potentially block the response.
      properties:
        beginOffset:
          description: The beginning offset of the influential term.
          format: int32
          type: integer
        confidence:
          description: The confidence score of the influential term.
          format: float
          type: number
        source:
          description: The source of the influential term, prompt or response.
          enum:
            - SOURCE_UNSPECIFIED
            - PROMPT
            - RESPONSE
          type: string
        term:
          description: The influential term.
          type: string
      type: object
    CloudAiNlLlmProtoServiceUsageMetadata:
      description: Usage metadata about response(s).
      properties:
        candidatesTokenCount:
          description: Number of tokens in the response(s).
          format: int32
          type: integer
        promptTokenCount:
          description: Number of tokens in the request.
          format: int32
          type: integer
        totalTokenCount:
          format: int32
          type: integer
      type: object
    GoogleApiHttpBody:
      description: "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged."
      properties:
        contentType:
          description: The HTTP Content-Type header value specifying the content type of the body.
          type: string
        data:
          description: The HTTP request/response body as raw binary.
          format: byte
          type: string
        extensions:
          description: Application specific response metadata. Must be set in the first response for streaming APIs.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
      type: object
    GoogleCloudAiplatformV1ActiveLearningConfig:
      description: Parameters that configure the active learning pipeline. Active learning will label the data incrementally by several iterations. For every iteration, it will select a batch of data based on the sampling strategy.
      properties:
        maxDataItemCount:
          description: Max number of human labeled DataItems.
          format: int64
          type: string
        maxDataItemPercentage:
          description: Max percent of total DataItems for human labeling.
          format: int32
          type: integer
        sampleConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SampleConfig"
          description: Active learning data sampling config. For every active learning labeling iteration, it will select a batch of data based on the sampling strategy.
        trainingConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1TrainingConfig"
          description: CMLE training config. For every active learning labeling iteration, system will train a machine learning model on CMLE. The trained model will be used by data sampling algorithm to select DataItems.
      type: object
    GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsRequest:
      description: Request message for MetadataService.AddContextArtifactsAndExecutions.
      properties:
        artifacts:
          description: "The resource names of the Artifacts to attribute to the Context. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`"
          items:
            type: string
          type: array
        executions:
          description: "The resource names of the Executions to associate with the Context. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`"
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsResponse:
      description: Response message for MetadataService.AddContextArtifactsAndExecutions.
      properties: {}
      type: object
    GoogleCloudAiplatformV1AddContextChildrenRequest:
      description: Request message for MetadataService.AddContextChildren.
      properties:
        childContexts:
          description: The resource names of the child Contexts.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1AddContextChildrenResponse:
      description: Response message for MetadataService.AddContextChildren.
      properties: {}
      type: object
    GoogleCloudAiplatformV1AddExecutionEventsRequest:
      description: Request message for MetadataService.AddExecutionEvents.
      properties:
        events:
          description: The Events to create and add.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Event"
          type: array
      type: object
    GoogleCloudAiplatformV1AddExecutionEventsResponse:
      description: Response message for MetadataService.AddExecutionEvents.
      properties: {}
      type: object
    GoogleCloudAiplatformV1AddTrialMeasurementRequest:
      description: Request message for VizierService.AddTrialMeasurement.
      properties:
        measurement:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Measurement"
          description: Required. The measurement to be added to a Trial.
      type: object
    GoogleCloudAiplatformV1Annotation:
      description: Used to assign specific AnnotationSpec to a particular area of a DataItem or the whole part of the DataItem.
      properties:
        annotationSource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1UserActionReference"
          description: Output only. The source of the Annotation.
          readOnly: true
        createTime:
          description: Output only. Timestamp when this Annotation was created.
          format: google-datetime
          readOnly: true
          type: string
        etag:
          description: Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Optional. The labels with user-defined metadata to organize your Annotations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Annotation(System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable. Following system labels exist for each Annotation: * \"aiplatform.googleapis.com/annotation_set_name\": optional, name of the UI's annotation set this Annotation belongs to. If not set, the Annotation is not visible in the UI. * \"aiplatform.googleapis.com/payload_schema\": output only, its value is the payload_schema's title."
          type: object
        name:
          description: Output only. Resource name of the Annotation.
          readOnly: true
          type: string
        payload:
          description: Required. The schema of the payload can be found in payload_schema.
        payloadSchemaUri:
          description: Required. Google Cloud Storage URI points to a YAML file describing payload. The schema is defined as an [OpenAPI 3.0.2 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/annotation/, note that the chosen schema must be consistent with the parent Dataset's metadata.
          type: string
        updateTime:
          description: Output only. Timestamp when this Annotation was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1AnnotationSpec:
      description: Identifies a concept with which DataItems may be annotated with.
      properties:
        createTime:
          description: Output only. Timestamp when this AnnotationSpec was created.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: Required. The user-defined name of the AnnotationSpec. The name can be up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        etag:
          description: Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        name:
          description: Output only. Resource name of the AnnotationSpec.
          readOnly: true
          type: string
        updateTime:
          description: Output only. Timestamp when AnnotationSpec was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1Artifact:
      description: Instance of a general artifact.
      properties:
        createTime:
          description: Output only. Timestamp when this Artifact was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Description of the Artifact
          type: string
        displayName:
          description: User provided display name of the Artifact. May be up to 128 Unicode characters.
          type: string
        etag:
          description: An eTag used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        labels:
          additionalProperties:
            type: string
          description: The labels with user-defined metadata to organize your Artifacts. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Artifact (System labels are excluded).
          type: object
        metadata:
          additionalProperties:
            description: Properties of the object.
          description: Properties of the Artifact. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB.
          type: object
        name:
          description: Output only. The resource name of the Artifact.
          readOnly: true
          type: string
        schemaTitle:
          description: The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
          type: string
        schemaVersion:
          description: The version of the schema in schema_name to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
          type: string
        state:
          description: The state of this Artifact. This is a property of the Artifact, and does not imply or capture any ongoing process. This property is managed by clients (such as Vertex AI Pipelines), and the system does not prescribe or check the validity of state transitions.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - LIVE
          type: string
        updateTime:
          description: Output only. Timestamp when this Artifact was last updated.
          format: google-datetime
          readOnly: true
          type: string
        uri:
          description: The uniform resource identifier of the artifact file. May be empty if there is no actual artifact file.
          type: string
      type: object
    GoogleCloudAiplatformV1AssignNotebookRuntimeOperationMetadata:
      description: Metadata information for NotebookService.AssignNotebookRuntime.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The operation generic information.
        progressMessage:
          description: A human-readable message that shows the intermediate progress details of NotebookRuntime.
          type: string
      type: object
    GoogleCloudAiplatformV1AssignNotebookRuntimeRequest:
      description: Request message for NotebookService.AssignNotebookRuntime.
      properties:
        notebookRuntime:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NotebookRuntime"
          description: Required. Provide runtime specific information (e.g. runtime owner, notebook id) used for NotebookRuntime assignment.
        notebookRuntimeId:
          description: Optional. User specified ID for the notebook runtime.
          type: string
        notebookRuntimeTemplate:
          description: Required. The resource name of the NotebookRuntimeTemplate based on which a NotebookRuntime will be assigned (reuse or create a new one).
          type: string
      type: object
    GoogleCloudAiplatformV1Attribution:
      description: Attribution that explains a particular prediction output.
      properties:
        approximationError:
          description: Output only. Error of feature_attributions caused by approximation used in the explanation method. Lower value means more precise attributions. * For Sampled Shapley attribution, increasing path_count might reduce the error. * For Integrated Gradients attribution, increasing step_count might reduce the error. * For XRAI attribution, increasing step_count might reduce the error. See [this introduction](/vertex-ai/docs/explainable-ai/overview) for more information.
          format: double
          readOnly: true
          type: number
        baselineOutputValue:
          description: Output only. Model predicted output if the input instance is constructed from the baselines of all the features defined in ExplanationMetadata.inputs. The field name of the output is determined by the key in ExplanationMetadata.outputs. If the Model's predicted output has multiple dimensions (rank > 1), this is the value in the output located by output_index. If there are multiple baselines, their output values are averaged.
          format: double
          readOnly: true
          type: number
        featureAttributions:
          description: "Output only. Attributions of each explained feature. Features are extracted from the prediction instances according to explanation metadata for inputs. The value is a struct, whose keys are the name of the feature. The values are how much the feature in the instance contributed to the predicted result. The format of the value is determined by the feature's input format: * If the feature is a scalar value, the attribution value is a floating number. * If the feature is an array of scalar values, the attribution value is an array. * If the feature is a struct, the attribution value is a struct. The keys in the attribution value struct are the same as the keys in the feature struct. The formats of the values in the attribution struct are determined by the formats of the values in the feature struct. The ExplanationMetadata.feature_attributions_schema_uri field, pointed to by the ExplanationSpec field of the Endpoint.deployed_models object, points to the schema file that describes the features and their attribution values (if it is populated)."
          readOnly: true
        instanceOutputValue:
          description: Output only. Model predicted output on the corresponding explanation instance. The field name of the output is determined by the key in ExplanationMetadata.outputs. If the Model predicted output has multiple dimensions, this is the value in the output located by output_index.
          format: double
          readOnly: true
          type: number
        outputDisplayName:
          description: Output only. The display name of the output identified by output_index. For example, the predicted class name by a multi-classification Model. This field is only populated iff the Model predicts display names as a separate field along with the explained output. The predicted display name must has the same shape of the explained output, and can be located using output_index.
          readOnly: true
          type: string
        outputIndex:
          description: Output only. The index that locates the explained prediction output. If the prediction output is a scalar value, output_index is not populated. If the prediction output has multiple dimensions, the length of the output_index list is the same as the number of dimensions of the output. The i-th element in output_index is the element index of the i-th dimension of the output vector. Indices start from 0.
          items:
            format: int32
            type: integer
          readOnly: true
          type: array
        outputName:
          description: Output only. Name of the explain output. Specified as the key in ExplanationMetadata.outputs.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1AutomaticResources:
      description: A description of resources that to large degree are decided by Vertex AI, and require only a modest additional configuration. Each Model supporting these resources documents its specific guidelines.
      properties:
        maxReplicaCount:
          description: Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, a no upper bound for scaling under heavy traffic will be assume, though Vertex AI may be unable to scale beyond certain replica number.
          format: int32
          type: integer
        minReplicaCount:
          description: Immutable. The minimum number of replicas this DeployedModel will be always deployed on. If traffic against it increases, it may dynamically be deployed onto more replicas up to max_replica_count, and as traffic decreases, some of these extra replicas may be freed. If the requested value is too large, the deployment will error.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1AutoscalingMetricSpec:
      description: The metric specification that defines the target resource utilization (CPU utilization, accelerator's duty cycle, and so on) for calculating the desired replica count.
      properties:
        metricName:
          description: "Required. The resource metric name. Supported metrics: * For Online Prediction: * `aiplatform.googleapis.com/prediction/online/accelerator/duty_cycle` * `aiplatform.googleapis.com/prediction/online/cpu/utilization`"
          type: string
        target:
          description: The target resource utilization in percentage (1% - 100%) for the given metric; once the real usage deviates from the target by a certain percentage, the machine replicas change. The default value is 60 (representing 60%) if not provided.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1AvroSource:
      description: The storage details for Avro input content.
      properties:
        gcsSource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GcsSource"
          description: Required. Google Cloud Storage location.
      type: object
    GoogleCloudAiplatformV1BatchCreateFeaturesOperationMetadata:
      description: Details of operations that perform batch create Features.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for Feature.
      type: object
    GoogleCloudAiplatformV1BatchCreateFeaturesRequest:
      description: Request message for FeaturestoreService.BatchCreateFeatures.
      properties:
        requests:
          description: Required. The request message specifying the Features to create. All Features must be created under the same parent EntityType. The `parent` field in each child request message can be omitted. If `parent` is set in a child request, then the value must match the `parent` value in this request message.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1CreateFeatureRequest"
          type: array
      type: object
    GoogleCloudAiplatformV1BatchCreateFeaturesResponse:
      description: Response message for FeaturestoreService.BatchCreateFeatures.
      properties:
        features:
          description: The Features created.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Feature"
          type: array
      type: object
    GoogleCloudAiplatformV1BatchCreateTensorboardRunsRequest:
      description: Request message for TensorboardService.BatchCreateTensorboardRuns.
      properties:
        requests:
          description: Required. The request message specifying the TensorboardRuns to create. A maximum of 1000 TensorboardRuns can be created in a batch.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1CreateTensorboardRunRequest"
          type: array
      type: object
    GoogleCloudAiplatformV1BatchCreateTensorboardRunsResponse:
      description: Response message for TensorboardService.BatchCreateTensorboardRuns.
      properties:
        tensorboardRuns:
          description: The created TensorboardRuns.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1TensorboardRun"
          type: array
      type: object
    GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesRequest:
      description: Request message for TensorboardService.BatchCreateTensorboardTimeSeries.
      properties:
        requests:
          description: Required. The request message specifying the TensorboardTimeSeries to create. A maximum of 1000 TensorboardTimeSeries can be created in a batch.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1CreateTensorboardTimeSeriesRequest"
          type: array
      type: object
    GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse:
      description: Response message for TensorboardService.BatchCreateTensorboardTimeSeries.
      properties:
        tensorboardTimeSeries:
          description: The created TensorboardTimeSeries.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries"
          type: array
      type: object
    GoogleCloudAiplatformV1BatchDedicatedResources:
      description: A description of resources that are used for performing batch operations, are dedicated to a Model, and need manual configuration.
      properties:
        machineSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1MachineSpec"
          description: Required. Immutable. The specification of a single machine.
        maxReplicaCount:
          description: Immutable. The maximum number of machine replicas the batch operation may be scaled to. The default value is 10.
          format: int32
          type: integer
        startingReplicaCount:
          description: Immutable. The number of machine replicas used at the start of the batch operation. If not set, Vertex AI decides starting number, not greater than max_replica_count
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsRequest:
      description: Request message for ModelService.BatchImportEvaluatedAnnotations
      properties:
        evaluatedAnnotations:
          description: Required. Evaluated annotations resource to be imported.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1EvaluatedAnnotation"
          type: array
      type: object
    GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsResponse:
      description: Response message for ModelService.BatchImportEvaluatedAnnotations
      properties:
        importedEvaluatedAnnotationsCount:
          description: Output only. Number of EvaluatedAnnotations imported.
          format: int32
          readOnly: true
          type: integer
      type: object
    GoogleCloudAiplatformV1BatchImportModelEvaluationSlicesRequest:
      description: Request message for ModelService.BatchImportModelEvaluationSlices
      properties:
        modelEvaluationSlices:
          description: Required. Model evaluation slice resource to be imported.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSlice"
          type: array
      type: object
    GoogleCloudAiplatformV1BatchImportModelEvaluationSlicesResponse:
      description: Response message for ModelService.BatchImportModelEvaluationSlices
      properties:
        importedModelEvaluationSlices:
          description: Output only. List of imported ModelEvaluationSlice.name.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadata:
      description: Runtime operation information for MigrationService.BatchMigrateResources.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The common part of the operation metadata.
        partialResults:
          description: Partial results that reflect the latest migration operation progress.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadataPartialResult"
          type: array
      type: object
    GoogleCloudAiplatformV1BatchMigrateResourcesOperationMetadataPartialResult:
      description: Represents a partial result in batch migration operation for one MigrateResourceRequest.
      properties:
        dataset:
          description: Migrated dataset resource name.
          type: string
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The error result of the migration request in case of failure.
        model:
          description: Migrated model resource name.
          type: string
        request:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequest"
          description: It's the same as the value in MigrateResourceRequest.migrate_resource_requests.
      type: object
    GoogleCloudAiplatformV1BatchMigrateResourcesRequest:
      description: Request message for MigrationService.BatchMigrateResources.
      properties:
        migrateResourceRequests:
          description: Required. The request messages specifying the resources to migrate. They must be in the same location as the destination. Up to 50 resources can be migrated in one batch.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequest"
          type: array
      type: object
    GoogleCloudAiplatformV1BatchMigrateResourcesResponse:
      description: Response message for MigrationService.BatchMigrateResources.
      properties:
        migrateResourceResponses:
          description: Successfully migrated resources.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1MigrateResourceResponse"
          type: array
      type: object
    GoogleCloudAiplatformV1BatchPredictionJob:
      description: A job that uses a Model to produce predictions on multiple input instances. If predictions for significant portion of the instances fail, the job may finish without attempting predictions for all remaining instances.
      properties:
        completionStats:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1CompletionStats"
          description: Output only. Statistics on completed and failed prediction instances.
          readOnly: true
        createTime:
          description: Output only. Time when the BatchPredictionJob was created.
          format: google-datetime
          readOnly: true
          type: string
        dedicatedResources:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchDedicatedResources"
          description: The config of resources used by the Model during the batch prediction. If the Model supports DEDICATED_RESOURCES this config may be provided (and the job will use these resources), if the Model doesn't support AUTOMATIC_RESOURCES, this config must be provided.
        disableContainerLogging:
          description: For custom-trained Models and AutoML Tabular Models, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can disable container logging by setting this flag to true.
          type: boolean
        displayName:
          description: Required. The user-defined name of this BatchPredictionJob.
          type: string
        encryptionSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec"
          description: Customer-managed encryption key options for a BatchPredictionJob. If this is set, then all resources created by the BatchPredictionJob will be encrypted with the provided encryption key.
        endTime:
          description: "Output only. Time when the BatchPredictionJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`."
          format: google-datetime
          readOnly: true
          type: string
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Output only. Only populated when the job's state is JOB_STATE_FAILED or JOB_STATE_CANCELLED.
          readOnly: true
        explanationSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ExplanationSpec"
          description: Explanation configuration for this BatchPredictionJob. Can be specified only if generate_explanation is set to `true`. This value overrides the value of Model.explanation_spec. All fields of explanation_spec are optional in the request. If a field of the explanation_spec object is not populated, the corresponding field of the Model.explanation_spec object is inherited.
        generateExplanation:
          description: "Generate explanation with the batch prediction results. When set to `true`, the batch prediction output changes based on the `predictions_format` field of the BatchPredictionJob.output_config object: * `bigquery`: output includes a column named `explanation`. The value is a struct that conforms to the Explanation object. * `jsonl`: The JSON objects on each line include an additional entry keyed `explanation`. The value of the entry is a JSON object that conforms to the Explanation object. * `csv`: Generating explanations for CSV format is not supported. If this field is set to true, either the Model.explanation_spec or explanation_spec must be populated."
          type: boolean
        inputConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchPredictionJobInputConfig"
          description: Required. Input configuration of the instances on which predictions are performed. The schema of any single instance may be specified via the Model's PredictSchemata's instance_schema_uri.
        instanceConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig"
          description: Configuration for how to convert batch prediction input instances to the prediction instances that are sent to the Model.
        labels:
          additionalProperties:
            type: string
          description: The labels with user-defined metadata to organize BatchPredictionJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
          type: object
        manualBatchTuningParameters:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ManualBatchTuningParameters"
          description: Immutable. Parameters configuring the batch behavior. Currently only applicable when dedicated_resources are used (in other cases Vertex AI does the tuning itself).
        model:
          description: "The name of the Model resource that produces the predictions via this job, must share the same ancestor Location. Starting this job has no impact on any existing deployments of the Model and their resources. Exactly one of model and unmanaged_container_model must be set. The model resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed. The model resource could also be a publisher model. Example: `publishers/{publisher}/models/{model}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`"
          type: string
        modelParameters:
          description: The parameters that govern the predictions. The schema of the parameters may be specified via the Model's PredictSchemata's parameters_schema_uri.
        modelVersionId:
          description: Output only. The version ID of the Model that produces the predictions via this job.
          readOnly: true
          type: string
        name:
          description: Output only. Resource name of the BatchPredictionJob.
          readOnly: true
          type: string
        outputConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchPredictionJobOutputConfig"
          description: Required. The Configuration specifying where output predictions should be written. The schema of any single prediction may be specified as a concatenation of Model's PredictSchemata's instance_schema_uri and prediction_schema_uri.
        outputInfo:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchPredictionJobOutputInfo"
          description: Output only. Information further describing the output of this job.
          readOnly: true
        partialFailures:
          description: Output only. Partial failures encountered. For example, single files that can't be read. This field never exceeds 20 entries. Status details fields contain standard Google Cloud error details.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          readOnly: true
          type: array
        resourcesConsumed:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ResourcesConsumed"
          description: "Output only. Information about resources that had been consumed by this job. Provided in real time at best effort basis, as well as a final value once the job completes. Note: This field currently may be not populated for batch predictions that use AutoML Models."
          readOnly: true
        serviceAccount:
          description: The service account that the DeployedModel's container runs as. If not specified, a system generated one will be used, which has minimal permissions and the custom container, if used, may not have enough permission to access other Google Cloud resources. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.
          type: string
        startTime:
          description: Output only. Time when the BatchPredictionJob for the first time entered the `JOB_STATE_RUNNING` state.
          format: google-datetime
          readOnly: true
          type: string
        state:
          description: Output only. The detailed state of the job.
          enum:
            - JOB_STATE_UNSPECIFIED
            - JOB_STATE_QUEUED
            - JOB_STATE_PENDING
            - JOB_STATE_RUNNING
            - JOB_STATE_SUCCEEDED
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLING
            - JOB_STATE_CANCELLED
            - JOB_STATE_PAUSED
            - JOB_STATE_EXPIRED
            - JOB_STATE_UPDATING
            - JOB_STATE_PARTIALLY_SUCCEEDED
          readOnly: true
          type: string
        unmanagedContainerModel:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1UnmanagedContainerModel"
          description: Contains model information necessary to perform batch prediction without requiring uploading to model registry. Exactly one of model and unmanaged_container_model must be set.
        updateTime:
          description: Output only. Time when the BatchPredictionJob was most recently updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1BatchPredictionJobInputConfig:
      description: Configures the input to BatchPredictionJob. See Model.supported_input_storage_formats for Model's supported input formats, and how instances should be expressed via any of them.
      properties:
        bigquerySource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1BigQuerySource"
          description: The BigQuery location of the input table. The schema of the table should be in the format described by the given context OpenAPI Schema, if one is provided. The table may contain additional columns that are not described by the schema, and they will be ignored.
        gcsSource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GcsSource"
          description: The Cloud Storage location for the input instances.
        instancesFormat:
          description: Required. The format in which instances are given, must be one of the Model's supported_input_storage_formats.
          type: string
      type: object
    GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig:
      description: Configuration defining how to transform batch prediction input instances to the instances that the Model accepts.
      properties:
        excludedFields:
          description: Fields that will be excluded in the prediction instance that is sent to the Model. Excluded will be attached to the batch prediction output if key_field is not specified. When excluded_fields is populated, included_fields must be empty. The input must be JSONL with objects at each line, BigQuery or TfRecord.
          items:
            type: string
          type: array
        includedFields:
          description: Fields that will be included in the prediction instance that is sent to the Model. If instance_type is `array`, the order of field names in included_fields also determines the order of the values in the array. When included_fields is populated, excluded_fields must be empty. The input must be JSONL with objects at each line, BigQuery or TfRecord.
          items:
            type: string
          type: array
        instanceType:
          description: 'The format of the instance that the Model accepts. Vertex AI will convert compatible batch prediction input instance formats to the specified format. Supported values are: * `object`: Each input is converted to JSON object format. * For `bigquery`, each row is converted to an object. * For `jsonl`, each line of the JSONL input must be an object. * Does not apply to `csv`, `file-list`, `tf-record`, or `tf-record-gzip`. * `array`: Each input is converted to JSON array format. * For `bigquery`, each row is converted to an array. The order of columns is determined by the BigQuery column order, unless included_fields is populated. included_fields must be populated for specifying field orders. * For `jsonl`, if each line of the JSONL input is an object, included_fields must be populated for specifying field orders. * Does not apply to `csv`, `file-list`, `tf-record`, or `tf-record-gzip`. If not specified, Vertex AI converts the batch prediction input as follows: * For `bigquery` and `csv`, the behavior is the same as `array`. The order of columns is the same as defined in the file or table, unless included_fields is populated. * For `jsonl`, the prediction instance format is determined by each line of the input. * For `tf-record`/`tf-record-gzip`, each record will be converted to an object in the format of `{"b64": }`, where `` is the Base64-encoded string of the content of the record. * For `file-list`, each file in the list will be converted to an object in the format of `{"b64": }`, where `` is the Base64-encoded string of the content of the file.'
          type: string
        keyField:
          description: "The name of the field that is considered as a key. The values identified by the key field is not included in the transformed instances that is sent to the Model. This is similar to specifying this name of the field in excluded_fields. In addition, the batch prediction output will not include the instances. Instead the output will only include the value of the key field, in a field named `key` in the output: * For `jsonl` output format, the output will have a `key` field instead of the `instance` field. * For `csv`/`bigquery` output format, the output will have have a `key` column instead of the instance feature columns. The input must be JSONL with objects at each line, CSV, BigQuery or TfRecord."
          type: string
      type: object
    GoogleCloudAiplatformV1BatchPredictionJobOutputConfig:
      description: Configures the output of BatchPredictionJob. See Model.supported_output_storage_formats for supported output formats, and how predictions are expressed via any of them.
      properties:
        bigqueryDestination:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1BigQueryDestination"
          description: "The BigQuery project or dataset location where the output is to be written to. If project is provided, a new dataset is created with name `prediction__` where is made BigQuery-dataset-name compatible (for example, most special characters become underscores), and timestamp is in YYYY_MM_DDThh_mm_ss_sssZ \"based on ISO-8601\" format. In the dataset two tables will be created, `predictions`, and `errors`. If the Model has both instance and prediction schemata defined then the tables have columns as follows: The `predictions` table contains instances for which the prediction succeeded, it has columns as per a concatenation of the Model's instance and prediction schemata. The `errors` table contains rows for which the prediction has failed, it has instance columns, as per the instance schema, followed by a single \"errors\" column, which as values has google.rpc.Status represented as a STRUCT, and containing only `code` and `message`."
        gcsDestination:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GcsDestination"
          description: The Cloud Storage location of the directory where the output is to be written to. In the given directory a new directory is created. Its name is `prediction--`, where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601 format. Inside of it files `predictions_0001.`, `predictions_0002.`, ..., `predictions_N.` are created where `` depends on chosen predictions_format, and N may equal 0001 and depends on the total number of successfully predicted instances. If the Model has both instance and prediction schemata defined then each such file contains predictions as per the predictions_format. If prediction for any instance failed (partially or completely), then an additional `errors_0001.`, `errors_0002.`,..., `errors_N.` files are created (N depends on total number of failed predictions). These files contain the failed instances, as per their schema, followed by an additional `error` field which as value has google.rpc.Status containing only `code` and `message` fields.
        predictionsFormat:
          description: Required. The format in which Vertex AI gives the predictions, must be one of the Model's supported_output_storage_formats.
          type: string
      type: object
    GoogleCloudAiplatformV1BatchPredictionJobOutputInfo:
      description: Further describes this job's output. Supplements output_config.
      properties:
        bigqueryOutputDataset:
          description: Output only. The path of the BigQuery dataset created, in `bq://projectId.bqDatasetId` format, into which the prediction output is written.
          readOnly: true
          type: string
        bigqueryOutputTable:
          description: Output only. The name of the BigQuery table created, in `predictions_` format, into which the prediction output is written. Can be used by UI to generate the BigQuery output path, for example.
          readOnly: true
          type: string
        gcsOutputDirectory:
          description: Output only. The full path of the Cloud Storage directory created, into which the prediction output is written.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1BatchReadFeatureValuesOperationMetadata:
      description: Details of operations that batch reads Feature values.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for Featurestore batch read Features values.
      type: object
    GoogleCloudAiplatformV1BatchReadFeatureValuesRequest:
      description: Request message for FeaturestoreService.BatchReadFeatureValues.
      properties:
        bigqueryReadInstances:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1BigQuerySource"
          description: Similar to csv_read_instances, but from BigQuery source.
        csvReadInstances:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1CsvSource"
          description: "Each read instance consists of exactly one read timestamp and one or more entity IDs identifying entities of the corresponding EntityTypes whose Features are requested. Each output instance contains Feature values of requested entities concatenated together as of the read time. An example read instance may be `foo_entity_id, bar_entity_id, 2020-01-01T10:00:00.123Z`. An example output instance may be `foo_entity_id, bar_entity_id, 2020-01-01T10:00:00.123Z, foo_entity_feature1_value, bar_entity_feature2_value`. Timestamp in each read instance must be millisecond-aligned. `csv_read_instances` are read instances stored in a plain-text CSV file. The header should be: [ENTITY_TYPE_ID1], [ENTITY_TYPE_ID2], ..., timestamp The columns can be in any order. Values in the timestamp column must use the RFC 3339 format, e.g. `2012-07-30T10:43:17.123Z`."
        destination:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureValueDestination"
          description: Required. Specifies output location and format.
        entityTypeSpecs:
          description: Required. Specifies EntityType grouping Features to read values of and settings.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchReadFeatureValuesRequestEntityTypeSpec"
          type: array
        passThroughFields:
          description: When not empty, the specified fields in the *_read_instances source will be joined as-is in the output, in addition to those fields from the Featurestore Entity. For BigQuery source, the type of the pass-through values will be automatically inferred. For CSV source, the pass-through values will be passed as opaque bytes.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchReadFeatureValuesRequestPassThroughField"
          type: array
        startTime:
          description: Optional. Excludes Feature values with feature generation timestamp before this timestamp. If not set, retrieve oldest values kept in Feature Store. Timestamp, if present, must not have higher than millisecond precision.
          format: google-datetime
          type: string
      type: object
    GoogleCloudAiplatformV1BatchReadFeatureValuesRequestEntityTypeSpec:
      description: Selects Features of an EntityType to read values of and specifies read settings.
      properties:
        entityTypeId:
          description: Required. ID of the EntityType to select Features. The EntityType id is the entity_type_id specified during EntityType creation.
          type: string
        featureSelector:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureSelector"
          description: Required. Selectors choosing which Feature values to read from the EntityType.
        settings:
          description: Per-Feature settings for the batch read.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1DestinationFeatureSetting"
          type: array
      type: object
    GoogleCloudAiplatformV1BatchReadFeatureValuesRequestPassThroughField:
      description: Describe pass-through fields in read_instance source.
      properties:
        fieldName:
          description: Required. The name of the field in the CSV header or the name of the column in BigQuery table. The naming restriction is the same as Feature.name.
          type: string
      type: object
    GoogleCloudAiplatformV1BatchReadFeatureValuesResponse:
      description: Response message for FeaturestoreService.BatchReadFeatureValues.
      properties: {}
      type: object
    GoogleCloudAiplatformV1BatchReadTensorboardTimeSeriesDataResponse:
      description: Response message for TensorboardService.BatchReadTensorboardTimeSeriesData.
      properties:
        timeSeriesData:
          description: The returned time series data.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1TimeSeriesData"
          type: array
      type: object
    GoogleCloudAiplatformV1BigQueryDestination:
      description: The BigQuery location for the output content.
      properties:
        outputUri:
          description: "Required. BigQuery URI to a project or table, up to 2000 characters long. When only the project is specified, the Dataset and Table is created. When the full table reference is specified, the Dataset must exist and table must not exist. Accepted forms: * BigQuery path. For example: `bq://projectId` or `bq://projectId.bqDatasetId` or `bq://projectId.bqDatasetId.bqTableId`."
          type: string
      type: object
    GoogleCloudAiplatformV1BigQuerySource:
      description: The BigQuery location for the input content.
      properties:
        inputUri:
          description: "Required. BigQuery URI to a table, up to 2000 characters long. Accepted forms: * BigQuery path. For example: `bq://projectId.bqDatasetId.bqTableId`."
          type: string
      type: object
    GoogleCloudAiplatformV1Blob:
      description: Raw media bytes. Text should not be sent as raw bytes, use the 'text' field.
      properties:
        data:
          description: Required. Raw bytes for media formats.
          format: byte
          type: string
        mimeType:
          description: Required. The IANA standard MIME type of the source data.
          type: string
      type: object
    GoogleCloudAiplatformV1BlurBaselineConfig:
      description: "Config for blur baseline. When enabled, a linear path from the maximally blurred image to the input image is created. Using a blurred baseline instead of zero (black image) is motivated by the BlurIG approach explained here: https://arxiv.org/abs/2004.03383"
      properties:
        maxBlurSigma:
          description: The standard deviation of the blur kernel for the blurred baseline. The same blurring parameter is used for both the height and the width dimension. If not set, the method defaults to the zero (i.e. black for images) baseline.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1BoolArray:
      description: A list of boolean values.
      properties:
        values:
          description: A list of bool values.
          items:
            type: boolean
          type: array
      type: object
    GoogleCloudAiplatformV1CancelBatchPredictionJobRequest:
      description: Request message for JobService.CancelBatchPredictionJob.
      properties: {}
      type: object
    GoogleCloudAiplatformV1CancelCustomJobRequest:
      description: Request message for JobService.CancelCustomJob.
      properties: {}
      type: object
    GoogleCloudAiplatformV1CancelDataLabelingJobRequest:
      description: Request message for JobService.CancelDataLabelingJob.
      properties: {}
      type: object
    GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest:
      description: Request message for JobService.CancelHyperparameterTuningJob.
      properties: {}
      type: object
    GoogleCloudAiplatformV1CancelNasJobRequest:
      description: Request message for JobService.CancelNasJob.
      properties: {}
      type: object
    GoogleCloudAiplatformV1CancelPipelineJobRequest:
      description: Request message for PipelineService.CancelPipelineJob.
      properties: {}
      type: object
    GoogleCloudAiplatformV1CancelTrainingPipelineRequest:
      description: Request message for PipelineService.CancelTrainingPipeline.
      properties: {}
      type: object
    GoogleCloudAiplatformV1Candidate:
      description: A response candidate generated from the model.
      properties:
        citationMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1CitationMetadata"
          description: Output only. Source attribution of the generated content.
          readOnly: true
        content:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Content"
          description: Output only. Content parts of the candidate.
          readOnly: true
        finishMessage:
          description: Output only. Describes the reason the mode stopped generating tokens in more detail. This is only filled when `finish_reason` is set.
          readOnly: true
          type: string
        finishReason:
          description: Output only. The reason why the model stopped generating tokens. If empty, the model has not stopped generating the tokens.
          enum:
            - FINISH_REASON_UNSPECIFIED
            - STOP
            - MAX_TOKENS
            - SAFETY
            - RECITATION
            - OTHER
          readOnly: true
          type: string
        groundingMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GroundingMetadata"
          description: Output only. Metadata specifies sources used to ground generated content.
          readOnly: true
        index:
          description: Output only. Index of the candidate.
          format: int32
          readOnly: true
          type: integer
        safetyRatings:
          description: Output only. List of ratings for the safety of a response candidate. There is at most one rating per category.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SafetyRating"
          readOnly: true
          type: array
      type: object
    GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateMetatdata:
      description: This message will be placed in the metadata field of a google.longrunning.Operation associated with a CheckTrialEarlyStoppingState request.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for suggesting Trials.
        study:
          description: The name of the Study that the Trial belongs to.
          type: string
        trial:
          description: The Trial name.
          type: string
      type: object
    GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateRequest:
      description: Request message for VizierService.CheckTrialEarlyStoppingState.
      properties: {}
      type: object
    GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateResponse:
      description: Response message for VizierService.CheckTrialEarlyStoppingState.
      properties:
        shouldStop:
          description: True if the Trial should stop.
          type: boolean
      type: object
    GoogleCloudAiplatformV1Citation:
      description: Source attributions for content.
      properties:
        endIndex:
          description: Output only. End index into the content.
          format: int32
          readOnly: true
          type: integer
        license:
          description: Output only. License of the attribution.
          readOnly: true
          type: string
        publicationDate:
          $ref: "#/components/schemas/GoogleTypeDate"
          description: Output only. Publication date of the attribution.
          readOnly: true
        startIndex:
          description: Output only. Start index into the content.
          format: int32
          readOnly: true
          type: integer
        title:
          description: Output only. Title of the attribution.
          readOnly: true
          type: string
        uri:
          description: Output only. Url reference of the attribution.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1CitationMetadata:
      description: A collection of source attributions for a piece of content.
      properties:
        citations:
          description: Output only. List of citations.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Citation"
          readOnly: true
          type: array
      type: object
    GoogleCloudAiplatformV1CompleteTrialRequest:
      description: Request message for VizierService.CompleteTrial.
      properties:
        finalMeasurement:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Measurement"
          description: Optional. If provided, it will be used as the completed Trial's final_measurement; Otherwise, the service will auto-select a previously reported measurement as the final-measurement
        infeasibleReason:
          description: Optional. A human readable reason why the trial was infeasible. This should only be provided if `trial_infeasible` is true.
          type: string
        trialInfeasible:
          description: Optional. True if the Trial cannot be run with the given Parameter, and final_measurement will be ignored.
          type: boolean
      type: object
    GoogleCloudAiplatformV1CompletionStats:
      description: Success and error statistics of processing multiple entities (for example, DataItems or structured data rows) in batch.
      properties:
        failedCount:
          description: Output only. The number of entities for which any error was encountered.
          format: int64
          readOnly: true
          type: string
        incompleteCount:
          description: Output only. In cases when enough errors are encountered a job, pipeline, or operation may be failed as a whole. Below is the number of entities for which the processing had not been finished (either in successful or failed state). Set to -1 if the number is unknown (for example, the operation failed before the total entity number could be collected).
          format: int64
          readOnly: true
          type: string
        successfulCount:
          description: Output only. The number of entities that had been processed successfully.
          format: int64
          readOnly: true
          type: string
        successfulForecastPointCount:
          description: Output only. The number of the successful forecast points that are generated by the forecasting model. This is ONLY used by the forecasting batch prediction.
          format: int64
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1ComputeTokensRequest:
      description: Request message for ComputeTokens RPC call.
      properties:
        instances:
          description: Required. The instances that are the input to token computing API call. Schema is identical to the prediction schema of the text model, even for the non-text models, like chat models, or Codey models.
          items: {}
          type: array
      type: object
    GoogleCloudAiplatformV1ComputeTokensResponse:
      description: Response message for ComputeTokens RPC call.
      properties:
        tokensInfo:
          description: Lists of tokens info from the input. A ComputeTokensRequest could have multiple instances with a prompt in each instance. We also need to return lists of tokens info for the request with multiple instances.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1TokensInfo"
          type: array
      type: object
    GoogleCloudAiplatformV1ContainerRegistryDestination:
      description: The Container Registry location for the container image.
      properties:
        outputUri:
          description: 'Required. Container Registry URI of a container image. Only Google Container Registry and Artifact Registry are supported now. Accepted forms: * Google Container Registry path. For example: `gcr.io/projectId/imageName:tag`. * Artifact Registry path. For example: `us-central1-docker.pkg.dev/projectId/repoName/imageName:tag`. If a tag is not specified, "latest" will be used as the default tag.'
          type: string
      type: object
    GoogleCloudAiplatformV1ContainerSpec:
      description: The spec of a Container.
      properties:
        args:
          description: The arguments to be passed when starting the container.
          items:
            type: string
          type: array
        command:
          description: The command to be invoked when the container is started. It overrides the entrypoint instruction in Dockerfile when provided.
          items:
            type: string
          type: array
        env:
          description: Environment variables to be passed to the container. Maximum limit is 100.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1EnvVar"
          type: array
        imageUri:
          description: Required. The URI of a container image in the Container Registry that is to be run on each worker replica.
          type: string
      type: object
    GoogleCloudAiplatformV1Content:
      description: The base structured datatype containing multi-part content of a message. A `Content` includes a `role` field designating the producer of the `Content` and a `parts` field containing multi-part data that contains the content of the message turn.
      properties:
        parts:
          description: Required. Ordered `Parts` that constitute a single message. Parts may have different IANA MIME types.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Part"
          type: array
        role:
          description: Optional. The producer of the content. Must be either 'user' or 'model'. Useful to set for multi-turn conversations, otherwise can be left blank or unset.
          type: string
      type: object
    GoogleCloudAiplatformV1Context:
      description: Instance of a general context.
      properties:
        createTime:
          description: Output only. Timestamp when this Context was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Description of the Context
          type: string
        displayName:
          description: User provided display name of the Context. May be up to 128 Unicode characters.
          type: string
        etag:
          description: An eTag used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        labels:
          additionalProperties:
            type: string
          description: The labels with user-defined metadata to organize your Contexts. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Context (System labels are excluded).
          type: object
        metadata:
          additionalProperties:
            description: Properties of the object.
          description: Properties of the Context. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB.
          type: object
        name:
          description: Immutable. The resource name of the Context.
          type: string
        parentContexts:
          description: Output only. A list of resource names of Contexts that are parents of this Context. A Context may have at most 10 parent_contexts.
          items:
            type: string
          readOnly: true
          type: array
        schemaTitle:
          description: The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
          type: string
        schemaVersion:
          description: The version of the schema in schema_name to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
          type: string
        updateTime:
          description: Output only. Timestamp when this Context was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1CopyModelOperationMetadata:
      description: Details of ModelService.CopyModel operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The common part of the operation metadata.
      type: object
    GoogleCloudAiplatformV1CopyModelRequest:
      description: Request message for ModelService.CopyModel.
      properties:
        encryptionSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec"
          description: Customer-managed encryption key options. If this is set, then the Model copy will be encrypted with the provided encryption key.
        modelId:
          description: Optional. Copy source_model into a new Model with this ID. The ID will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen.
          type: string
        parentModel:
          description: "Optional. Specify this field to copy source_model into this existing Model as a new version. Format: `projects/{project}/locations/{location}/models/{model}`"
          type: string
        sourceModel:
          description: "Required. The resource name of the Model to copy. That Model must be in the same Project. Format: `projects/{project}/locations/{location}/models/{model}`"
          type: string
      type: object
    GoogleCloudAiplatformV1CopyModelResponse:
      description: Response message of ModelService.CopyModel operation.
      properties:
        model:
          description: "The name of the copied Model resource. Format: `projects/{project}/locations/{location}/models/{model}`"
          type: string
        modelVersionId:
          description: Output only. The version ID of the model that is copied.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1CountTokensRequest:
      description: Request message for PredictionService.CountTokens.
      properties:
        contents:
          description: Required. Input content.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Content"
          type: array
        instances:
          description: Required. The instances that are the input to token counting call. Schema is identical to the prediction schema of the underlying model.
          items: {}
          type: array
        model:
          description: "Required. The name of the publisher model requested to serve the prediction. Format: `projects/{project}/locations/{location}/publishers/*/models/*`"
          type: string
      type: object
    GoogleCloudAiplatformV1CountTokensResponse:
      description: Response message for PredictionService.CountTokens.
      properties:
        totalBillableCharacters:
          description: The total number of billable characters counted across all instances from the request.
          format: int32
          type: integer
        totalTokens:
          description: The total number of tokens counted across all instances from the request.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1CreateDatasetOperationMetadata:
      description: Runtime operation information for DatasetService.CreateDataset.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The operation generic information.
      type: object
    GoogleCloudAiplatformV1CreateDatasetVersionOperationMetadata:
      description: Runtime operation information for DatasetService.CreateDatasetVersion.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The common part of the operation metadata.
      type: object
    GoogleCloudAiplatformV1CreateDeploymentResourcePoolOperationMetadata:
      description: Runtime operation information for CreateDeploymentResourcePool method.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The operation generic information.
      type: object
    GoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest:
      description: Request message for CreateDeploymentResourcePool method.
      properties:
        deploymentResourcePool:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DeploymentResourcePool"
          description: Required. The DeploymentResourcePool to create.
        deploymentResourcePoolId:
          description: Required. The ID to use for the DeploymentResourcePool, which will become the final component of the DeploymentResourcePool's resource name. The maximum length is 63 characters, and valid characters are `/^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$/`.
          type: string
      type: object
    GoogleCloudAiplatformV1CreateEndpointOperationMetadata:
      description: Runtime operation information for EndpointService.CreateEndpoint.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The operation generic information.
      type: object
    GoogleCloudAiplatformV1CreateEntityTypeOperationMetadata:
      description: Details of operations that perform create EntityType.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for EntityType.
      type: object
    GoogleCloudAiplatformV1CreateFeatureGroupOperationMetadata:
      description: Details of operations that perform create FeatureGroup.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for FeatureGroup.
      type: object
    GoogleCloudAiplatformV1CreateFeatureOnlineStoreOperationMetadata:
      description: Details of operations that perform create FeatureOnlineStore.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for FeatureOnlineStore.
      type: object
    GoogleCloudAiplatformV1CreateFeatureOperationMetadata:
      description: Details of operations that perform create Feature.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for Feature.
      type: object
    GoogleCloudAiplatformV1CreateFeatureRequest:
      description: Request message for FeaturestoreService.CreateFeature. Request message for FeatureRegistryService.CreateFeature.
      properties:
        feature:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Feature"
          description: Required. The Feature to create.
        featureId:
          description: Required. The ID to use for the Feature, which will become the final component of the Feature's resource name. This value may be up to 128 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within an EntityType/FeatureGroup.
          type: string
        parent:
          description: "Required. The resource name of the EntityType or FeatureGroup to create a Feature. Format for entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent: `projects/{project}/locations/{location}/featureGroups/{feature_group}`"
          type: string
      type: object
    GoogleCloudAiplatformV1CreateFeatureViewOperationMetadata:
      description: Details of operations that perform create FeatureView.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for FeatureView Create.
      type: object
    GoogleCloudAiplatformV1CreateFeaturestoreOperationMetadata:
      description: Details of operations that perform create Featurestore.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for Featurestore.
      type: object
    GoogleCloudAiplatformV1CreateIndexEndpointOperationMetadata:
      description: Runtime operation information for IndexEndpointService.CreateIndexEndpoint.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The operation generic information.
      type: object
    GoogleCloudAiplatformV1CreateIndexOperationMetadata:
      description: Runtime operation information for IndexService.CreateIndex.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The operation generic information.
        nearestNeighborSearchOperationMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata"
          description: The operation metadata with regard to Matching Engine Index operation.
      type: object
    GoogleCloudAiplatformV1CreateMetadataStoreOperationMetadata:
      description: Details of operations that perform MetadataService.CreateMetadataStore.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for creating a MetadataStore.
      type: object
    GoogleCloudAiplatformV1CreateNotebookRuntimeTemplateOperationMetadata:
      description: Metadata information for NotebookService.CreateNotebookRuntimeTemplate.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The operation generic information.
      type: object
    GoogleCloudAiplatformV1CreatePipelineJobRequest:
      description: Request message for PipelineService.CreatePipelineJob.
      properties:
        parent:
          description: "Required. The resource name of the Location to create the PipelineJob in. Format: `projects/{project}/locations/{location}`"
          type: string
        pipelineJob:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PipelineJob"
          description: Required. The PipelineJob to create.
        pipelineJobId:
          description: The ID to use for the PipelineJob, which will become the final component of the PipelineJob name. If not provided, an ID will be automatically generated. This value should be less than 128 characters, and valid characters are `/a-z-/`.
          type: string
      type: object
    GoogleCloudAiplatformV1CreateRegistryFeatureOperationMetadata:
      description: Details of operations that perform create FeatureGroup.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for Feature.
      type: object
    GoogleCloudAiplatformV1CreateSpecialistPoolOperationMetadata:
      description: Runtime operation information for SpecialistPoolService.CreateSpecialistPool.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The operation generic information.
      type: object
    GoogleCloudAiplatformV1CreateTensorboardOperationMetadata:
      description: Details of operations that perform create Tensorboard.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for Tensorboard.
      type: object
    GoogleCloudAiplatformV1CreateTensorboardRunRequest:
      description: Request message for TensorboardService.CreateTensorboardRun.
      properties:
        parent:
          description: "Required. The resource name of the TensorboardExperiment to create the TensorboardRun in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`"
          type: string
        tensorboardRun:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1TensorboardRun"
          description: Required. The TensorboardRun to create.
        tensorboardRunId:
          description: Required. The ID to use for the Tensorboard run, which becomes the final component of the Tensorboard run's resource name. This value should be 1-128 characters, and valid characters are `/a-z-/`.
          type: string
      type: object
    GoogleCloudAiplatformV1CreateTensorboardTimeSeriesRequest:
      description: Request message for TensorboardService.CreateTensorboardTimeSeries.
      properties:
        parent:
          description: "Required. The resource name of the TensorboardRun to create the TensorboardTimeSeries in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`"
          type: string
        tensorboardTimeSeries:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries"
          description: Required. The TensorboardTimeSeries to create.
        tensorboardTimeSeriesId:
          description: Optional. The user specified unique ID to use for the TensorboardTimeSeries, which becomes the final component of the TensorboardTimeSeries's resource name. This value should match "a-z0-9{0, 127}"
          type: string
      type: object
    GoogleCloudAiplatformV1CsvDestination:
      description: The storage details for CSV output content.
      properties:
        gcsDestination:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GcsDestination"
          description: Required. Google Cloud Storage location.
      type: object
    GoogleCloudAiplatformV1CsvSource:
      description: The storage details for CSV input content.
      properties:
        gcsSource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GcsSource"
          description: Required. Google Cloud Storage location.
      type: object
    GoogleCloudAiplatformV1CustomJob:
      description: Represents a job that runs custom workloads such as a Docker container or a Python package. A CustomJob can have multiple worker pools and each worker pool can have its own machine and input spec. A CustomJob will be cleaned up once the job enters terminal state (failed or succeeded).
      properties:
        createTime:
          description: Output only. Time when the CustomJob was created.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: Required. The display name of the CustomJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        encryptionSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec"
          description: Customer-managed encryption key options for a CustomJob. If this is set, then all resources created by the CustomJob will be encrypted with the provided encryption key.
        endTime:
          description: "Output only. Time when the CustomJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`."
          format: google-datetime
          readOnly: true
          type: string
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Output only. Only populated when job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
          readOnly: true
        jobSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1CustomJobSpec"
          description: Required. Job spec.
        labels:
          additionalProperties:
            type: string
          description: The labels with user-defined metadata to organize CustomJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
          type: object
        name:
          description: Output only. Resource name of a CustomJob.
          readOnly: true
          type: string
        startTime:
          description: Output only. Time when the CustomJob for the first time entered the `JOB_STATE_RUNNING` state.
          format: google-datetime
          readOnly: true
          type: string
        state:
          description: Output only. The detailed state of the job.
          enum:
            - JOB_STATE_UNSPECIFIED
            - JOB_STATE_QUEUED
            - JOB_STATE_PENDING
            - JOB_STATE_RUNNING
            - JOB_STATE_SUCCEEDED
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLING
            - JOB_STATE_CANCELLED
            - JOB_STATE_PAUSED
            - JOB_STATE_EXPIRED
            - JOB_STATE_UPDATING
            - JOB_STATE_PARTIALLY_SUCCEEDED
          readOnly: true
          type: string
        updateTime:
          description: Output only. Time when the CustomJob was most recently updated.
          format: google-datetime
          readOnly: true
          type: string
        webAccessUris:
          additionalProperties:
            type: string
          description: Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only available if job_spec.enable_web_access is `true`. The keys are names of each node in the training job; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The values are the URIs for each node's interactive shell.
          readOnly: true
          type: object
      type: object
    GoogleCloudAiplatformV1CustomJobSpec:
      description: Represents the spec of a CustomJob.
      properties:
        baseOutputDirectory:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GcsDestination"
          description: "The Cloud Storage location to store the output of this CustomJob or HyperparameterTuningJob. For HyperparameterTuningJob, the baseOutputDirectory of each child CustomJob backing a Trial is set to a subdirectory of name id under its parent HyperparameterTuningJob's baseOutputDirectory. The following Vertex AI environment variables will be passed to containers or python modules when this field is set: For CustomJob: * AIP_MODEL_DIR = `/model/` * AIP_CHECKPOINT_DIR = `/checkpoints/` * AIP_TENSORBOARD_LOG_DIR = `/logs/` For CustomJob backing a Trial of HyperparameterTuningJob: * AIP_MODEL_DIR = `//model/` * AIP_CHECKPOINT_DIR = `//checkpoints/` * AIP_TENSORBOARD_LOG_DIR = `//logs/`"
        enableDashboardAccess:
          description: Optional. Whether you want Vertex AI to enable access to the customized dashboard in training chief container. If set to `true`, you can access the dashboard at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials).
          type: boolean
        enableWebAccess:
          description: Optional. Whether you want Vertex AI to enable [interactive shell access](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) to training containers. If set to `true`, you can access interactive shells at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials).
          type: boolean
        experiment:
          description: "Optional. The Experiment associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}`"
          type: string
        experimentRun:
          description: "Optional. The Experiment Run associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}-{experiment-run-name}`"
          type: string
        models:
          description: 'Optional. The name of the Model resources for which to generate a mapping to artifact URIs. Applicable only to some of the Google-provided custom jobs. Format: `projects/{project}/locations/{location}/models/{model}` In order to retrieve a specific version of the model, also provide the version ID or version alias. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` If no version ID or alias is specified, the "default" version will be returned. The "default" version alias is created for the first version of the model, and can be moved to other versions later on. There will be exactly one default version.'
          items:
            type: string
          type: array
        network:
          description: Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the job is not peered with any network.
          type: string
        protectedArtifactLocationId:
          description: "The ID of the location to store protected artifacts. e.g. us-central1. Populate only when the location is different than CustomJob location. List of supported locations: https://cloud.google.com/vertex-ai/docs/general/locations"
          type: string
        reservedIpRanges:
          description: "Optional. A list of names for the reserved ip ranges under the VPC network that can be used for this job. If set, we will deploy the job within the provided ip ranges. Otherwise, the job will be deployed to any ip ranges under the provided VPC network. Example: ['vertex-ai-ip-range']."
          items:
            type: string
          type: array
        scheduling:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Scheduling"
          description: Scheduling options for a CustomJob.
        serviceAccount:
          description: Specifies the service account for workload run-as account. Users submitting jobs must have act-as permission on this run-as account. If unspecified, the [Vertex AI Custom Code Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) for the CustomJob's project is used.
          type: string
        tensorboard:
          description: "Optional. The name of a Vertex AI Tensorboard resource to which this CustomJob will upload Tensorboard logs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`"
          type: string
        workerPoolSpecs:
          description: Required. The spec of the worker pools including machine type and Docker image. All worker pools except the first one are optional and can be skipped by providing an empty value.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1WorkerPoolSpec"
          type: array
      type: object
    GoogleCloudAiplatformV1DataItem:
      description: A piece of data in a Dataset. Could be an image, a video, a document or plain text.
      properties:
        createTime:
          description: Output only. Timestamp when this DataItem was created.
          format: google-datetime
          readOnly: true
          type: string
        etag:
          description: Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. The labels with user-defined metadata to organize your DataItems. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one DataItem(System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
          type: object
        name:
          description: Output only. The resource name of the DataItem.
          readOnly: true
          type: string
        payload:
          description: Required. The data that the DataItem represents (for example, an image or a text snippet). The schema of the payload is stored in the parent Dataset's metadata schema's dataItemSchemaUri field.
        updateTime:
          description: Output only. Timestamp when this DataItem was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1DataItemView:
      description: A container for a single DataItem and Annotations on it.
      properties:
        annotations:
          description: The Annotations on the DataItem. If too many Annotations should be returned for the DataItem, this field will be truncated per annotations_limit in request. If it was, then the has_truncated_annotations will be set to true.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Annotation"
          type: array
        dataItem:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DataItem"
          description: The DataItem.
        hasTruncatedAnnotations:
          description: True if and only if the Annotations field has been truncated. It happens if more Annotations for this DataItem met the request's annotation_filter than are allowed to be returned by annotations_limit. Note that if Annotations field is not being returned due to field mask, then this field will not be set to true no matter how many Annotations are there.
          type: boolean
      type: object
    GoogleCloudAiplatformV1DataLabelingJob:
      description: "DataLabelingJob is used to trigger a human labeling job on unlabeled data from the following Dataset:"
      properties:
        activeLearningConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ActiveLearningConfig"
          description: Parameters that configure the active learning pipeline. Active learning will label the data incrementally via several iterations. For every iteration, it will select a batch of data based on the sampling strategy.
        annotationLabels:
          additionalProperties:
            type: string
          description: Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
          type: object
        createTime:
          description: Output only. Timestamp when this DataLabelingJob was created.
          format: google-datetime
          readOnly: true
          type: string
        currentSpend:
          $ref: "#/components/schemas/GoogleTypeMoney"
          description: Output only. Estimated cost(in US dollars) that the DataLabelingJob has incurred to date.
          readOnly: true
        datasets:
          description: "Required. Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`"
          items:
            type: string
          type: array
        displayName:
          description: Required. The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob.
          type: string
        encryptionSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec"
          description: "Customer-managed encryption key spec for a DataLabelingJob. If set, this DataLabelingJob will be secured by this key. Note: Annotations created in the DataLabelingJob are associated with the EncryptionSpec of the Dataset they are exported to."
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Output only. DataLabelingJob errors. It is only populated when job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
          readOnly: true
        inputs:
          description: Required. Input config parameters for the DataLabelingJob.
        inputsSchemaUri:
          description: Required. Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder.
          type: string
        instructionUri:
          description: Required. The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets.
          type: string
        labelerCount:
          description: Required. Number of labelers to work on each DataItem.
          format: int32
          type: integer
        labelingProgress:
          description: Output only. Current labeling job progress percentage scaled in interval [0, 100], indicating the percentage of DataItems that has been finished.
          format: int32
          readOnly: true
          type: integer
        labels:
          additionalProperties:
            type: string
          description: "The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable. Following system labels exist for each DataLabelingJob: * \"aiplatform.googleapis.com/schema\": output only, its value is the inputs_schema's title."
          type: object
        name:
          description: Output only. Resource name of the DataLabelingJob.
          readOnly: true
          type: string
        specialistPools:
          description: The SpecialistPools' resource names associated with this job.
          items:
            type: string
          type: array
        state:
          description: Output only. The detailed state of the job.
          enum:
            - JOB_STATE_UNSPECIFIED
            - JOB_STATE_QUEUED
            - JOB_STATE_PENDING
            - JOB_STATE_RUNNING
            - JOB_STATE_SUCCEEDED
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLING
            - JOB_STATE_CANCELLED
            - JOB_STATE_PAUSED
            - JOB_STATE_EXPIRED
            - JOB_STATE_UPDATING
            - JOB_STATE_PARTIALLY_SUCCEEDED
          readOnly: true
          type: string
        updateTime:
          description: Output only. Timestamp when this DataLabelingJob was updated most recently.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1Dataset:
      description: A collection of DataItems and Annotations on them.
      properties:
        createTime:
          description: Output only. Timestamp when this Dataset was created.
          format: google-datetime
          readOnly: true
          type: string
        dataItemCount:
          description: Output only. The number of DataItems in this Dataset. Only apply for non-structured Dataset.
          format: int64
          readOnly: true
          type: string
        description:
          description: The description of the Dataset.
          type: string
        displayName:
          description: Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        encryptionSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec"
          description: Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be secured by this key.
        etag:
          description: Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        labels:
          additionalProperties:
            type: string
          description: "The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable. Following system labels exist for each Dataset: * \"aiplatform.googleapis.com/dataset_metadata_schema\": output only, its value is the metadata_schema's title."
          type: object
        metadata:
          description: Required. Additional information about the Dataset.
        metadataArtifact:
          description: Output only. The resource name of the Artifact that was created in MetadataStore when creating the Dataset. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.
          readOnly: true
          type: string
        metadataSchemaUri:
          description: Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
          type: string
        name:
          description: Output only. The resource name of the Dataset.
          readOnly: true
          type: string
        savedQueries:
          description: All SavedQueries belong to the Dataset will be returned in List/Get Dataset response. The annotation_specs field will not be populated except for UI cases which will only use annotation_spec_count. In CreateDataset request, a SavedQuery is created together if this field is set, up to one SavedQuery can be set in CreateDatasetRequest. The SavedQuery should not contain any AnnotationSpec.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SavedQuery"
          type: array
        updateTime:
          description: Output only. Timestamp when this Dataset was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1DatasetVersion:
      description: Describes the dataset version.
      properties:
        bigQueryDatasetName:
          description: Output only. Name of the associated BigQuery dataset.
          readOnly: true
          type: string
        createTime:
          description: Output only. Timestamp when this DatasetVersion was created.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: The user-defined name of the DatasetVersion. The name can be up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        etag:
          description: Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        metadata:
          description: Required. Additional information about the DatasetVersion.
        name:
          description: Output only. The resource name of the DatasetVersion.
          readOnly: true
          type: string
        updateTime:
          description: Output only. Timestamp when this DatasetVersion was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1DedicatedResources:
      description: A description of resources that are dedicated to a DeployedModel, and that need a higher degree of manual configuration.
      properties:
        autoscalingMetricSpecs:
          description: Immutable. The metric specifications that overrides a resource utilization metric (CPU utilization, accelerator's duty cycle, and so on) target value (default to 60 if not set). At most one entry is allowed per metric. If machine_spec.accelerator_count is above 0, the autoscaling will be based on both CPU utilization and accelerator's duty cycle metrics and scale up when either metrics exceeds its target value while scale down if both metrics are under their target value. The default target value is 60 for both metrics. If machine_spec.accelerator_count is 0, the autoscaling will be based on CPU utilization metric only with default target value 60 if not explicitly set. For example, in the case of Online Prediction, if you want to override target CPU utilization to 80, you should set autoscaling_metric_specs.metric_name to `aiplatform.googleapis.com/prediction/online/cpu/utilization` and autoscaling_metric_specs.target to `80`.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1AutoscalingMetricSpec"
          type: array
        machineSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1MachineSpec"
          description: Required. Immutable. The specification of a single machine used by the prediction.
        maxReplicaCount:
          description: Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, will use min_replica_count as the default value. The value of this field impacts the charge against Vertex CPU and GPU quotas. Specifically, you will be charged for (max_replica_count * number of cores in the selected machine type) and (max_replica_count * number of GPUs per replica in the selected machine type).
          format: int32
          type: integer
        minReplicaCount:
          description: Required. Immutable. The minimum number of machine replicas this DeployedModel will be always deployed on. This value must be greater than or equal to 1. If traffic against the DeployedModel increases, it may dynamically be deployed onto more replicas, and as traffic decreases, some of these extra replicas may be freed.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1DeleteFeatureValuesOperationMetadata:
      description: Details of operations that delete Feature values.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for Featurestore delete Features values.
      type: object
    GoogleCloudAiplatformV1DeleteFeatureValuesRequest:
      description: Request message for FeaturestoreService.DeleteFeatureValues.
      properties:
        selectEntity:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectEntity"
          description: Select feature values to be deleted by specifying entities.
        selectTimeRangeAndFeature:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectTimeRangeAndFeature"
          description: Select feature values to be deleted by specifying time range and features.
      type: object
    GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectEntity:
      description: Message to select entity. If an entity id is selected, all the feature values corresponding to the entity id will be deleted, including the entityId.
      properties:
        entityIdSelector:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1EntityIdSelector"
          description: Required. Selectors choosing feature values of which entity id to be deleted from the EntityType.
      type: object
    GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectTimeRangeAndFeature:
      description: Message to select time range and feature. Values of the selected feature generated within an inclusive time range will be deleted. Using this option permanently deletes the feature values from the specified feature IDs within the specified time range. This might include data from the online storage. If you want to retain any deleted historical data in the online storage, you must re-ingest it.
      properties:
        featureSelector:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureSelector"
          description: Required. Selectors choosing which feature values to be deleted from the EntityType.
        skipOnlineStorageDelete:
          description: If set, data will not be deleted from online storage. When time range is older than the data in online storage, setting this to be true will make the deletion have no impact on online serving.
          type: boolean
        timeRange:
          $ref: "#/components/schemas/GoogleTypeInterval"
          description: Required. Select feature generated within a half-inclusive time range. The time range is lower inclusive and upper exclusive.
      type: object
    GoogleCloudAiplatformV1DeleteFeatureValuesResponse:
      description: Response message for FeaturestoreService.DeleteFeatureValues.
      properties:
        selectEntity:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectEntity"
          description: Response for request specifying the entities to delete
        selectTimeRangeAndFeature:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectTimeRangeAndFeature"
          description: Response for request specifying time range and feature
      type: object
    GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectEntity:
      description: Response message if the request uses the SelectEntity option.
      properties:
        offlineStorageDeletedEntityRowCount:
          description: The count of deleted entity rows in the offline storage. Each row corresponds to the combination of an entity ID and a timestamp. One entity ID can have multiple rows in the offline storage.
          format: int64
          type: string
        onlineStorageDeletedEntityCount:
          description: The count of deleted entities in the online storage. Each entity ID corresponds to one entity.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1DeleteFeatureValuesResponseSelectTimeRangeAndFeature:
      description: Response message if the request uses the SelectTimeRangeAndFeature option.
      properties:
        impactedFeatureCount:
          description: The count of the features or columns impacted. This is the same as the feature count in the request.
          format: int64
          type: string
        offlineStorageModifiedEntityRowCount:
          description: The count of modified entity rows in the offline storage. Each row corresponds to the combination of an entity ID and a timestamp. One entity ID can have multiple rows in the offline storage. Within each row, only the features specified in the request are deleted.
          format: int64
          type: string
        onlineStorageModifiedEntityCount:
          description: The count of modified entities in the online storage. Each entity ID corresponds to one entity. Within each entity, only the features specified in the request are deleted.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1DeleteMetadataStoreOperationMetadata:
      description: Details of operations that perform MetadataService.DeleteMetadataStore.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for deleting a MetadataStore.
      type: object
    GoogleCloudAiplatformV1DeleteOperationMetadata:
      description: Details of operations that perform deletes of any entities.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The common part of the operation metadata.
      type: object
    GoogleCloudAiplatformV1DeployIndexOperationMetadata:
      description: Runtime operation information for IndexEndpointService.DeployIndex.
      properties:
        deployedIndexId:
          description: The unique index id specified by user
          type: string
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The operation generic information.
      type: object
    GoogleCloudAiplatformV1DeployIndexRequest:
      description: Request message for IndexEndpointService.DeployIndex.
      properties:
        deployedIndex:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DeployedIndex"
          description: Required. The DeployedIndex to be created within the IndexEndpoint.
      type: object
    GoogleCloudAiplatformV1DeployIndexResponse:
      description: Response message for IndexEndpointService.DeployIndex.
      properties:
        deployedIndex:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DeployedIndex"
          description: The DeployedIndex that had been deployed in the IndexEndpoint.
      type: object
    GoogleCloudAiplatformV1DeployModelOperationMetadata:
      description: Runtime operation information for EndpointService.DeployModel.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The operation generic information.
      type: object
    GoogleCloudAiplatformV1DeployModelRequest:
      description: Request message for EndpointService.DeployModel.
      properties:
        deployedModel:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DeployedModel"
          description: Required. The DeployedModel to be created within the Endpoint. Note that Endpoint.traffic_split must be updated for the DeployedModel to start receiving traffic, either as part of this call, or via EndpointService.UpdateEndpoint.
        trafficSplit:
          additionalProperties:
            format: int32
            type: integer
          description: A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If this field is non-empty, then the Endpoint's traffic_split will be overwritten with it. To refer to the ID of the just being deployed Model, a "0" should be used, and the actual ID of the new DeployedModel will be filled in its place by this method. The traffic percentage values must add up to 100. If this field is empty, then the Endpoint's traffic_split is not updated.
          type: object
      type: object
    GoogleCloudAiplatformV1DeployModelResponse:
      description: Response message for EndpointService.DeployModel.
      properties:
        deployedModel:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DeployedModel"
          description: The DeployedModel that had been deployed in the Endpoint.
      type: object
    GoogleCloudAiplatformV1DeployedIndex:
      description: A deployment of an Index. IndexEndpoints contain one or more DeployedIndexes.
      properties:
        automaticResources:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1AutomaticResources"
          description: Optional. A description of resources that the DeployedIndex uses, which to large degree are decided by Vertex AI, and optionally allows only a modest additional configuration. If min_replica_count is not set, the default value is 2 (we don't provide SLA when min_replica_count=1). If max_replica_count is not set, the default value is min_replica_count. The max allowed replica count is 1000.
        createTime:
          description: Output only. Timestamp when the DeployedIndex was created.
          format: google-datetime
          readOnly: true
          type: string
        dedicatedResources:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DedicatedResources"
          description: "Optional. A description of resources that are dedicated to the DeployedIndex, and that need a higher degree of manual configuration. The field min_replica_count must be set to a value strictly greater than 0, or else validation will fail. We don't provide SLA when min_replica_count=1. If max_replica_count is not set, the default value is min_replica_count. The max allowed replica count is 1000. Available machine types for SMALL shard: e2-standard-2 and all machine types available for MEDIUM and LARGE shard. Available machine types for MEDIUM shard: e2-standard-16 and all machine types available for LARGE shard. Available machine types for LARGE shard: e2-highmem-16, n2d-standard-32. n1-standard-16 and n1-standard-32 are still available, but we recommend e2-standard-16 and e2-highmem-16 for cost efficiency."
        deployedIndexAuthConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DeployedIndexAuthConfig"
          description: Optional. If set, the authentication is enabled for the private endpoint.
        deploymentGroup:
          description: "Optional. The deployment group can be no longer than 64 characters (eg: 'test', 'prod'). If not set, we will use the 'default' deployment group. Creating `deployment_groups` with `reserved_ip_ranges` is a recommended practice when the peered network has multiple peering ranges. This creates your deployments from predictable IP spaces for easier traffic administration. Also, one deployment_group (except 'default') can only be used with the same reserved_ip_ranges which means if the deployment_group has been used with reserved_ip_ranges: [a, b, c], using it with [a, b] or [d, e] is disallowed. Note: we only support up to 5 deployment groups(not including 'default')."
          type: string
        displayName:
          description: The display name of the DeployedIndex. If not provided upon creation, the Index's display_name is used.
          type: string
        enableAccessLogging:
          description: Optional. If true, private endpoint's access logs are sent to Cloud Logging. These logs are like standard server access logs, containing information like timestamp and latency for each MatchRequest. Note that logs may incur a cost, especially if the deployed index receives a high queries per second rate (QPS). Estimate your costs before enabling this option.
          type: boolean
        id:
          description: Required. The user specified ID of the DeployedIndex. The ID can be up to 128 characters long and must start with a letter and only contain letters, numbers, and underscores. The ID must be unique within the project it is created in.
          type: string
        index:
          description: Required. The name of the Index this is the deployment of. We may refer to this Index as the DeployedIndex's "original" Index.
          type: string
        indexSyncTime:
          description: Output only. The DeployedIndex may depend on various data on its original Index. Additionally when certain changes to the original Index are being done (e.g. when what the Index contains is being changed) the DeployedIndex may be asynchronously updated in the background to reflect these changes. If this timestamp's value is at least the Index.update_time of the original Index, it means that this DeployedIndex and the original Index are in sync. If this timestamp is older, then to see which updates this DeployedIndex already contains (and which it does not), one must list the operations that are running on the original Index. Only the successfully completed Operations with update_time equal or before this sync time are contained in this DeployedIndex.
          format: google-datetime
          readOnly: true
          type: string
        privateEndpoints:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1IndexPrivateEndpoints"
          description: Output only. Provides paths for users to send requests directly to the deployed index services running on Cloud via private services access. This field is populated if network is configured.
          readOnly: true
        reservedIpRanges:
          description: "Optional. A list of reserved ip ranges under the VPC network that can be used for this DeployedIndex. If set, we will deploy the index within the provided ip ranges. Otherwise, the index might be deployed to any ip ranges under the provided VPC network. The value should be the name of the address (https://cloud.google.com/compute/docs/reference/rest/v1/addresses) Example: ['vertex-ai-ip-range']. For more information about subnets and network IP ranges, please see https://cloud.google.com/vpc/docs/subnets#manually_created_subnet_ip_ranges."
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1DeployedIndexAuthConfig:
      description: Used to set up the auth on the DeployedIndex's private endpoint.
      properties:
        authProvider:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DeployedIndexAuthConfigAuthProvider"
          description: Defines the authentication provider that the DeployedIndex uses.
      type: object
    GoogleCloudAiplatformV1DeployedIndexAuthConfigAuthProvider:
      description: Configuration for an authentication provider, including support for [JSON Web Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).
      properties:
        allowedIssuers:
          description: "A list of allowed JWT issuers. Each entry must be a valid Google service account, in the following format: `service-account-name@project-id.iam.gserviceaccount.com`"
          items:
            type: string
          type: array
        audiences:
          description: The list of JWT [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3). that are allowed to access. A JWT containing any of these audiences will be accepted.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1DeployedIndexRef:
      description: Points to a DeployedIndex.
      properties:
        deployedIndexId:
          description: Immutable. The ID of the DeployedIndex in the above IndexEndpoint.
          type: string
        displayName:
          description: Output only. The display name of the DeployedIndex.
          readOnly: true
          type: string
        indexEndpoint:
          description: Immutable. A resource name of the IndexEndpoint.
          type: string
      type: object
    GoogleCloudAiplatformV1DeployedModel:
      description: A deployment of a Model. Endpoints contain one or more DeployedModels.
      properties:
        automaticResources:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1AutomaticResources"
          description: A description of resources that to large degree are decided by Vertex AI, and require only a modest additional configuration.
        createTime:
          description: Output only. Timestamp when the DeployedModel was created.
          format: google-datetime
          readOnly: true
          type: string
        dedicatedResources:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DedicatedResources"
          description: A description of resources that are dedicated to the DeployedModel, and that need a higher degree of manual configuration.
        disableContainerLogging:
          description: For custom-trained Models and AutoML Tabular Models, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can disable container logging by setting this flag to true.
          type: boolean
        displayName:
          description: The display name of the DeployedModel. If not provided upon creation, the Model's display_name is used.
          type: string
        enableAccessLogging:
          description: If true, online prediction access logs are sent to Cloud Logging. These logs are like standard server access logs, containing information like timestamp and latency for each prediction request. Note that logs may incur a cost, especially if your project receives prediction requests at a high queries per second rate (QPS). Estimate your costs before enabling this option.
          type: boolean
        explanationSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ExplanationSpec"
          description: Explanation configuration for this DeployedModel. When deploying a Model using EndpointService.DeployModel, this value overrides the value of Model.explanation_spec. All fields of explanation_spec are optional in the request. If a field of explanation_spec is not populated, the value of the same field of Model.explanation_spec is inherited. If the corresponding Model.explanation_spec is not populated, all fields of the explanation_spec will be used for the explanation configuration.
        id:
          description: Immutable. The ID of the DeployedModel. If not provided upon deployment, Vertex AI will generate a value for this ID. This value should be 1-10 characters, and valid characters are `/[0-9]/`.
          type: string
        model:
          description: "Required. The resource name of the Model that this is the deployment of. Note that the Model may be in a different location than the DeployedModel's Endpoint. The resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed."
          type: string
        modelVersionId:
          description: Output only. The version ID of the model that is deployed.
          readOnly: true
          type: string
        privateEndpoints:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PrivateEndpoints"
          description: Output only. Provide paths for users to send predict/explain/health requests directly to the deployed model services running on Cloud via private services access. This field is populated if network is configured.
          readOnly: true
        serviceAccount:
          description: The service account that the DeployedModel's container runs as. Specify the email address of the service account. If this service account is not specified, the container runs as a service account that doesn't have access to the resource project. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.
          type: string
        sharedResources:
          description: "The resource name of the shared DeploymentResourcePool to deploy on. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`"
          type: string
      type: object
    GoogleCloudAiplatformV1DeployedModelRef:
      description: Points to a DeployedModel.
      properties:
        deployedModelId:
          description: Immutable. An ID of a DeployedModel in the above Endpoint.
          type: string
        endpoint:
          description: Immutable. A resource name of an Endpoint.
          type: string
      type: object
    GoogleCloudAiplatformV1DeploymentResourcePool:
      description: A description of resources that can be shared by multiple DeployedModels, whose underlying specification consists of a DedicatedResources.
      properties:
        createTime:
          description: Output only. Timestamp when this DeploymentResourcePool was created.
          format: google-datetime
          readOnly: true
          type: string
        dedicatedResources:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DedicatedResources"
          description: Required. The underlying DedicatedResources that the DeploymentResourcePool uses.
        name:
          description: "Immutable. The resource name of the DeploymentResourcePool. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`"
          type: string
      type: object
    GoogleCloudAiplatformV1DestinationFeatureSetting:
      properties:
        destinationField:
          description: Specify the field name in the export destination. If not specified, Feature ID is used.
          type: string
        featureId:
          description: Required. The ID of the Feature to apply the setting to.
          type: string
      type: object
    GoogleCloudAiplatformV1DirectPredictRequest:
      description: Request message for PredictionService.DirectPredict.
      properties:
        inputs:
          description: The prediction input.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Tensor"
          type: array
        parameters:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Tensor"
          description: The parameters that govern the prediction.
      type: object
    GoogleCloudAiplatformV1DirectPredictResponse:
      description: Response message for PredictionService.DirectPredict.
      properties:
        outputs:
          description: The prediction output.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Tensor"
          type: array
        parameters:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Tensor"
          description: The parameters that govern the prediction.
      type: object
    GoogleCloudAiplatformV1DirectRawPredictRequest:
      description: Request message for PredictionService.DirectRawPredict.
      properties:
        input:
          description: The prediction input.
          format: byte
          type: string
        methodName:
          description: "Fully qualified name of the API method being invoked to perform predictions. Format: `/namespace.Service/Method/` Example: `/tensorflow.serving.PredictionService/Predict`"
          type: string
      type: object
    GoogleCloudAiplatformV1DirectRawPredictResponse:
      description: Response message for PredictionService.DirectRawPredict.
      properties:
        output:
          description: The prediction output.
          format: byte
          type: string
      type: object
    GoogleCloudAiplatformV1DiskSpec:
      description: Represents the spec of disk options.
      properties:
        bootDiskSizeGb:
          description: Size in GB of the boot disk (default is 100GB).
          format: int32
          type: integer
        bootDiskType:
          description: 'Type of the boot disk (default is "pd-ssd"). Valid values: "pd-ssd" (Persistent Disk Solid State Drive) or "pd-standard" (Persistent Disk Hard Disk Drive).'
          type: string
      type: object
    GoogleCloudAiplatformV1DoubleArray:
      description: A list of double values.
      properties:
        values:
          description: A list of double values.
          items:
            format: double
            type: number
          type: array
      type: object
    GoogleCloudAiplatformV1EncryptionSpec:
      description: Represents a customer-managed encryption key spec that can be applied to a top-level resource.
      properties:
        kmsKeyName:
          description: "Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created."
          type: string
      type: object
    GoogleCloudAiplatformV1Endpoint:
      description: Models are deployed into it, and afterwards Endpoint is called to obtain predictions and explanations.
      properties:
        createTime:
          description: Output only. Timestamp when this Endpoint was created.
          format: google-datetime
          readOnly: true
          type: string
        deployedModels:
          description: Output only. The models deployed in this Endpoint. To add or remove DeployedModels use EndpointService.DeployModel and EndpointService.UndeployModel respectively.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1DeployedModel"
          readOnly: true
          type: array
        description:
          description: The description of the Endpoint.
          type: string
        displayName:
          description: Required. The display name of the Endpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        enablePrivateServiceConnect:
          deprecated: true
          description: "Deprecated: If true, expose the Endpoint via private service connect. Only one of the fields, network or enable_private_service_connect, can be set."
          type: boolean
        encryptionSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec"
          description: Customer-managed encryption key spec for an Endpoint. If set, this Endpoint and all sub-resources of this Endpoint will be secured by this key.
        etag:
          description: Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        labels:
          additionalProperties:
            type: string
          description: The labels with user-defined metadata to organize your Endpoints. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
          type: object
        modelDeploymentMonitoringJob:
          description: "Output only. Resource name of the Model Monitoring job associated with this Endpoint if monitoring is enabled by JobService.CreateModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`"
          readOnly: true
          type: string
        name:
          description: Output only. The resource name of the Endpoint.
          readOnly: true
          type: string
        network:
          description: "Optional. The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the Endpoint should be peered. Private services access must already be configured for the network. If left unspecified, the Endpoint is not peered with any network. Only one of the fields, network or enable_private_service_connect, can be set. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`. Where `{project}` is a project number, as in `12345`, and `{network}` is network name."
          type: string
        predictRequestResponseLoggingConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PredictRequestResponseLoggingConfig"
          description: Configures the request-response logging for online prediction.
        privateServiceConnectConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PrivateServiceConnectConfig"
          description: Optional. Configuration for private service connect. network and private_service_connect_config are mutually exclusive.
        trafficSplit:
          additionalProperties:
            format: int32
            type: integer
          description: A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If a DeployedModel's ID is not listed in this map, then it receives no traffic. The traffic percentage values must add up to 100, or map must be empty if the Endpoint is to not accept any traffic at a moment.
          type: object
        updateTime:
          description: Output only. Timestamp when this Endpoint was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1EntityIdSelector:
      description: Selector for entityId. Getting ids from the given source.
      properties:
        csvSource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1CsvSource"
          description: Source of Csv
        entityIdField:
          description: Source column that holds entity IDs. If not provided, entity IDs are extracted from the column named entity_id.
          type: string
      type: object
    GoogleCloudAiplatformV1EntityType:
      description: An entity type is a type of object in a system that needs to be modeled and have stored information about. For example, driver is an entity type, and driver0 is an instance of an entity type driver.
      properties:
        createTime:
          description: Output only. Timestamp when this EntityType was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. Description of the EntityType.
          type: string
        etag:
          description: Optional. Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. The labels with user-defined metadata to organize your EntityTypes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one EntityType (System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
          type: object
        monitoringConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeaturestoreMonitoringConfig"
          description: Optional. The default monitoring configuration for all Features with value type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 under this EntityType. If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.
        name:
          description: "Immutable. Name of the EntityType. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` The last part entity_type is assigned by the client. The entity_type can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z and underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given a featurestore."
          type: string
        offlineStorageTtlDays:
          description: Optional. Config for data retention policy in offline storage. TTL in days for feature values that will be stored in offline storage. The Feature Store offline storage periodically removes obsolete feature values older than `offline_storage_ttl_days` since the feature generation time. If unset (or explicitly set to 0), default to 4000 days TTL.
          format: int32
          type: integer
        updateTime:
          description: Output only. Timestamp when this EntityType was most recently updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1EnvVar:
      description: Represents an environment variable present in a Container or Python Module.
      properties:
        name:
          description: Required. Name of the environment variable. Must be a valid C identifier.
          type: string
        value:
          description: "Required. Variables that reference a $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not."
          type: string
      type: object
    GoogleCloudAiplatformV1ErrorAnalysisAnnotation:
      description: Model error analysis for each annotation.
      properties:
        attributedItems:
          description: Attributed items for a given annotation, typically representing neighbors from the training sets constrained by the query type.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem"
          type: array
        outlierScore:
          description: The outlier score of this annotated item. Usually defined as the min of all distances from attributed items.
          format: double
          type: number
        outlierThreshold:
          description: The threshold used to determine if this annotation is an outlier or not.
          format: double
          type: number
        queryType:
          description: The query type used for finding the attributed items.
          enum:
            - QUERY_TYPE_UNSPECIFIED
            - ALL_SIMILAR
            - SAME_CLASS_SIMILAR
            - SAME_CLASS_DISSIMILAR
          type: string
      type: object
    GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem:
      description: Attributed items for a given annotation, typically representing neighbors from the training sets constrained by the query type.
      properties:
        annotationResourceName:
          description: The unique ID for each annotation. Used by FE to allocate the annotation in DB.
          type: string
        distance:
          description: The distance of this item to the annotation.
          format: double
          type: number
      type: object
    GoogleCloudAiplatformV1EvaluatedAnnotation:
      description: True positive, false positive, or false negative. EvaluatedAnnotation is only available under ModelEvaluationSlice with slice of `annotationSpec` dimension.
      properties:
        dataItemPayload:
          description: Output only. The data item payload that the Model predicted this EvaluatedAnnotation on.
          readOnly: true
        errorAnalysisAnnotations:
          description: Annotations of model error analysis results.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ErrorAnalysisAnnotation"
          type: array
        evaluatedDataItemViewId:
          description: Output only. ID of the EvaluatedDataItemView under the same ancestor ModelEvaluation. The EvaluatedDataItemView consists of all ground truths and predictions on data_item_payload.
          readOnly: true
          type: string
        explanations:
          description: Explanations of predictions. Each element of the explanations indicates the explanation for one explanation Method. The attributions list in the EvaluatedAnnotationExplanation.explanation object corresponds to the predictions list. For example, the second element in the attributions list explains the second element in the predictions list.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1EvaluatedAnnotationExplanation"
          type: array
        groundTruths:
          description: Output only. The ground truth Annotations, i.e. the Annotations that exist in the test data the Model is evaluated on. For true positive, there is one and only one ground truth annotation, which matches the only prediction in predictions. For false positive, there are zero or more ground truth annotations that are similar to the only prediction in predictions, but not enough for a match. For false negative, there is one and only one ground truth annotation, which doesn't match any predictions created by the model. The schema of the ground truth is stored in ModelEvaluation.annotation_schema_uri
          items: {}
          readOnly: true
          type: array
        predictions:
          description: Output only. The model predicted annotations. For true positive, there is one and only one prediction, which matches the only one ground truth annotation in ground_truths. For false positive, there is one and only one prediction, which doesn't match any ground truth annotation of the corresponding data_item_view_id. For false negative, there are zero or more predictions which are similar to the only ground truth annotation in ground_truths but not enough for a match. The schema of the prediction is stored in ModelEvaluation.annotation_schema_uri
          items: {}
          readOnly: true
          type: array
        type:
          description: Output only. Type of the EvaluatedAnnotation.
          enum:
            - EVALUATED_ANNOTATION_TYPE_UNSPECIFIED
            - TRUE_POSITIVE
            - FALSE_POSITIVE
            - FALSE_NEGATIVE
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1EvaluatedAnnotationExplanation:
      description: Explanation result of the prediction produced by the Model.
      properties:
        explanation:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Explanation"
          description: Explanation attribution response details.
        explanationType:
          description: "Explanation type. For AutoML Image Classification models, possible values are: * `image-integrated-gradients` * `image-xrai`"
          type: string
      type: object
    GoogleCloudAiplatformV1Event:
      description: An edge describing the relationship between an Artifact and an Execution in a lineage graph.
      properties:
        artifact:
          description: Required. The relative resource name of the Artifact in the Event.
          type: string
        eventTime:
          description: Output only. Time the Event occurred.
          format: google-datetime
          readOnly: true
          type: string
        execution:
          description: Output only. The relative resource name of the Execution in the Event.
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: The labels with user-defined metadata to annotate Events. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Event (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
          type: object
        type:
          description: Required. The type of the Event.
          enum:
            - TYPE_UNSPECIFIED
            - INPUT
            - OUTPUT
          type: string
      type: object
    GoogleCloudAiplatformV1Examples:
      description: Example-based explainability that returns the nearest neighbors from the provided dataset.
      properties:
        exampleGcsSource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ExamplesExampleGcsSource"
          description: The Cloud Storage input instances.
        nearestNeighborSearchConfig:
          description: The full configuration for the generated index, the semantics are the same as metadata and should match [NearestNeighborSearchConfig](https://cloud.google.com/vertex-ai/docs/explainable-ai/configuring-explanations-example-based#nearest-neighbor-search-config).
        neighborCount:
          description: The number of neighbors to return when querying for examples.
          format: int32
          type: integer
        presets:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Presets"
          description: Simplified preset configuration, which automatically sets configuration values based on the desired query speed-precision trade-off and modality.
      type: object
    GoogleCloudAiplatformV1ExamplesExampleGcsSource:
      description: The Cloud Storage input instances.
      properties:
        dataFormat:
          description: The format in which instances are given, if not specified, assume it's JSONL format. Currently only JSONL format is supported.
          enum:
            - DATA_FORMAT_UNSPECIFIED
            - JSONL
          type: string
        gcsSource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GcsSource"
          description: The Cloud Storage location for the input instances.
      type: object
    GoogleCloudAiplatformV1ExamplesOverride:
      description: Overrides for example-based explanations.
      properties:
        crowdingCount:
          description: The number of neighbors to return that have the same crowding tag.
          format: int32
          type: integer
        dataFormat:
          description: The format of the data being provided with each call.
          enum:
            - DATA_FORMAT_UNSPECIFIED
            - INSTANCES
            - EMBEDDINGS
          type: string
        neighborCount:
          description: The number of neighbors to return.
          format: int32
          type: integer
        restrictions:
          description: Restrict the resulting nearest neighbors to respect these constraints.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ExamplesRestrictionsNamespace"
          type: array
        returnEmbeddings:
          description: If true, return the embeddings instead of neighbors.
          type: boolean
      type: object
    GoogleCloudAiplatformV1ExamplesRestrictionsNamespace:
      description: Restrictions namespace for example-based explanations overrides.
      properties:
        allow:
          description: The list of allowed tags.
          items:
            type: string
          type: array
        deny:
          description: The list of deny tags.
          items:
            type: string
          type: array
        namespaceName:
          description: The namespace name.
          type: string
      type: object
    GoogleCloudAiplatformV1Execution:
      description: Instance of a general execution.
      properties:
        createTime:
          description: Output only. Timestamp when this Execution was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Description of the Execution
          type: string
        displayName:
          description: User provided display name of the Execution. May be up to 128 Unicode characters.
          type: string
        etag:
          description: An eTag used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        labels:
          additionalProperties:
            type: string
          description: The labels with user-defined metadata to organize your Executions. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Execution (System labels are excluded).
          type: object
        metadata:
          additionalProperties:
            description: Properties of the object.
          description: Properties of the Execution. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB.
          type: object
        name:
          description: Output only. The resource name of the Execution.
          readOnly: true
          type: string
        schemaTitle:
          description: The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
          type: string
        schemaVersion:
          description: The version of the schema in `schema_title` to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
          type: string
        state:
          description: The state of this Execution. This is a property of the Execution, and does not imply or capture any ongoing process. This property is managed by clients (such as Vertex AI Pipelines) and the system does not prescribe or check the validity of state transitions.
          enum:
            - STATE_UNSPECIFIED
            - NEW
            - RUNNING
            - COMPLETE
            - FAILED
            - CACHED
            - CANCELLED
          type: string
        updateTime:
          description: Output only. Timestamp when this Execution was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1ExplainRequest:
      description: Request message for PredictionService.Explain.
      properties:
        deployedModelId:
          description: If specified, this ExplainRequest will be served by the chosen DeployedModel, overriding Endpoint.traffic_split.
          type: string
        explanationSpecOverride:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ExplanationSpecOverride"
          description: "If specified, overrides the explanation_spec of the DeployedModel. Can be used for explaining prediction results with different configurations, such as: - Explaining top-5 predictions results as opposed to top-1; - Increasing path count or step count of the attribution methods to reduce approximate errors; - Using different baselines for explaining the prediction results."
        instances:
          description: Required. The instances that are the input to the explanation call. A DeployedModel may have an upper limit on the number of instances it supports per request, and when it is exceeded the explanation call errors in case of AutoML Models, or, in case of customer created Models, the behaviour is as documented by that Model. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.
          items: {}
          type: array
        parameters:
          description: The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint's DeployedModels' Model's PredictSchemata's parameters_schema_uri.
      type: object
    GoogleCloudAiplatformV1ExplainResponse:
      description: Response message for PredictionService.Explain.
      properties:
        deployedModelId:
          description: ID of the Endpoint's DeployedModel that served this explanation.
          type: string
        explanations:
          description: The explanations of the Model's PredictResponse.predictions. It has the same number of elements as instances to be explained.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Explanation"
          type: array
        predictions:
          description: The predictions that are the output of the predictions call. Same as PredictResponse.predictions.
          items: {}
          type: array
      type: object
    GoogleCloudAiplatformV1Explanation:
      description: Explanation of a prediction (provided in PredictResponse.predictions) produced by the Model on a given instance.
      properties:
        attributions:
          description: Output only. Feature attributions grouped by predicted outputs. For Models that predict only one output, such as regression Models that predict only one score, there is only one attibution that explains the predicted output. For Models that predict multiple outputs, such as multiclass Models that predict multiple classes, each element explains one specific item. Attribution.output_index can be used to identify which output this attribution is explaining. By default, we provide Shapley values for the predicted class. However, you can configure the explanation request to generate Shapley values for any other classes too. For example, if a model predicts a probability of `0.4` for approving a loan application, the model's decision is to reject the application since `p(reject) = 0.6 > p(approve) = 0.4`, and the default Shapley values would be computed for rejection decision and not approval, even though the latter might be the positive class. If users set ExplanationParameters.top_k, the attributions are sorted by instance_output_value in descending order. If ExplanationParameters.output_indices is specified, the attributions are stored by Attribution.output_index in the same order as they appear in the output_indices.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Attribution"
          readOnly: true
          type: array
        neighbors:
          description: Output only. List of the nearest neighbors for example-based explanations. For models deployed with the examples explanations feature enabled, the attributions field is empty and instead the neighbors field is populated.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Neighbor"
          readOnly: true
          type: array
      type: object
    GoogleCloudAiplatformV1ExplanationMetadata:
      description: Metadata describing the Model's input and output for explanation.
      properties:
        featureAttributionsSchemaUri:
          description: "Points to a YAML file stored on Google Cloud Storage describing the format of the feature attributions. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML tabular Models always have this field populated by Vertex AI. Note: The URI given on output may be different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access."
          type: string
        inputs:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ExplanationMetadataInputMetadata"
          description: Required. Map from feature names to feature input metadata. Keys are the name of the features. Values are the specification of the feature. An empty InputMetadata is valid. It describes a text feature which has the name specified as the key in ExplanationMetadata.inputs. The baseline of the empty feature is chosen by Vertex AI. For Vertex AI-provided Tensorflow images, the key can be any friendly name of the feature. Once specified, featureAttributions are keyed by this key (if not grouped with another feature). For custom images, the key must match with the key in instance.
          type: object
        latentSpaceSource:
          description: Name of the source to generate embeddings for example based explanations.
          type: string
        outputs:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata"
          description: Required. Map from output names to output metadata. For Vertex AI-provided Tensorflow images, keys can be any user defined string that consists of any UTF-8 characters. For custom images, keys are the name of the output field in the prediction to be explained. Currently only one key is allowed.
          type: object
      type: object
    GoogleCloudAiplatformV1ExplanationMetadataInputMetadata:
      description: Metadata of the input of a feature. Fields other than InputMetadata.input_baselines are applicable only for Models that are using Vertex AI-provided images for Tensorflow.
      properties:
        denseShapeTensorName:
          description: "Specifies the shape of the values of the input if the input is a sparse representation. Refer to Tensorflow documentation for more details: https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor."
          type: string
        encodedBaselines:
          description: A list of baselines for the encoded tensor. The shape of each baseline should match the shape of the encoded tensor. If a scalar is provided, Vertex AI broadcasts to the same shape as the encoded tensor.
          items: {}
          type: array
        encodedTensorName:
          description: Encoded tensor is a transformation of the input tensor. Must be provided if choosing Integrated Gradients attribution or XRAI attribution and the input tensor is not differentiable. An encoded tensor is generated if the input tensor is encoded by a lookup table.
          type: string
        encoding:
          description: Defines how the feature is encoded into the input tensor. Defaults to IDENTITY.
          enum:
            - ENCODING_UNSPECIFIED
            - IDENTITY
            - BAG_OF_FEATURES
            - BAG_OF_FEATURES_SPARSE
            - INDICATOR
            - COMBINED_EMBEDDING
            - CONCAT_EMBEDDING
          type: string
        featureValueDomain:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ExplanationMetadataInputMetadataFeatureValueDomain"
          description: The domain details of the input feature value. Like min/max, original mean or standard deviation if normalized.
        groupName:
          description: Name of the group that the input belongs to. Features with the same group name will be treated as one feature when computing attributions. Features grouped together can have different shapes in value. If provided, there will be one single attribution generated in Attribution.feature_attributions, keyed by the group name.
          type: string
        indexFeatureMapping:
          description: A list of feature names for each index in the input tensor. Required when the input InputMetadata.encoding is BAG_OF_FEATURES, BAG_OF_FEATURES_SPARSE, INDICATOR.
          items:
            type: string
          type: array
        indicesTensorName:
          description: "Specifies the index of the values of the input tensor. Required when the input tensor is a sparse representation. Refer to Tensorflow documentation for more details: https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor."
          type: string
        inputBaselines:
          description: Baseline inputs for this feature. If no baseline is specified, Vertex AI chooses the baseline for this feature. If multiple baselines are specified, Vertex AI returns the average attributions across them in Attribution.feature_attributions. For Vertex AI-provided Tensorflow images (both 1.x and 2.x), the shape of each baseline must match the shape of the input tensor. If a scalar is provided, we broadcast to the same shape as the input tensor. For custom images, the element of the baselines must be in the same format as the feature's input in the instance[]. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.
          items: {}
          type: array
        inputTensorName:
          description: Name of the input tensor for this feature. Required and is only applicable to Vertex AI-provided images for Tensorflow.
          type: string
        modality:
          description: "Modality of the feature. Valid values are: numeric, image. Defaults to numeric."
          type: string
        visualization:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization"
          description: Visualization configurations for image explanation.
      type: object
    GoogleCloudAiplatformV1ExplanationMetadataInputMetadataFeatureValueDomain:
      description: Domain details of the input feature value. Provides numeric information about the feature, such as its range (min, max). If the feature has been pre-processed, for example with z-scoring, then it provides information about how to recover the original feature. For example, if the input feature is an image and it has been pre-processed to obtain 0-mean and stddev = 1 values, then original_mean, and original_stddev refer to the mean and stddev of the original feature (e.g. image tensor) from which input feature (with mean = 0 and stddev = 1) was obtained.
      properties:
        maxValue:
          description: The maximum permissible value for this feature.
          format: float
          type: number
        minValue:
          description: The minimum permissible value for this feature.
          format: float
          type: number
        originalMean:
          description: If this input feature has been normalized to a mean value of 0, the original_mean specifies the mean value of the domain prior to normalization.
          format: float
          type: number
        originalStddev:
          description: If this input feature has been normalized to a standard deviation of 1.0, the original_stddev specifies the standard deviation of the domain prior to normalization.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization:
      description: Visualization configurations for image explanation.
      properties:
        clipPercentLowerbound:
          description: Excludes attributions below the specified percentile, from the highlighted areas. Defaults to 62.
          format: float
          type: number
        clipPercentUpperbound:
          description: Excludes attributions above the specified percentile from the highlighted areas. Using the clip_percent_upperbound and clip_percent_lowerbound together can be useful for filtering out noise and making it easier to see areas of strong attribution. Defaults to 99.9.
          format: float
          type: number
        colorMap:
          description: The color scheme used for the highlighted areas. Defaults to PINK_GREEN for Integrated Gradients attribution, which shows positive attributions in green and negative in pink. Defaults to VIRIDIS for XRAI attribution, which highlights the most influential regions in yellow and the least influential in blue.
          enum:
            - COLOR_MAP_UNSPECIFIED
            - PINK_GREEN
            - VIRIDIS
            - RED
            - GREEN
            - RED_GREEN
            - PINK_WHITE_GREEN
          type: string
        overlayType:
          description: How the original image is displayed in the visualization. Adjusting the overlay can help increase visual clarity if the original image makes it difficult to view the visualization. Defaults to NONE.
          enum:
            - OVERLAY_TYPE_UNSPECIFIED
            - NONE
            - ORIGINAL
            - GRAYSCALE
            - MASK_BLACK
          type: string
        polarity:
          description: Whether to only highlight pixels with positive contributions, negative or both. Defaults to POSITIVE.
          enum:
            - POLARITY_UNSPECIFIED
            - POSITIVE
            - NEGATIVE
            - BOTH
          type: string
        type:
          description: Type of the image visualization. Only applicable to Integrated Gradients attribution. OUTLINES shows regions of attribution, while PIXELS shows per-pixel attribution. Defaults to OUTLINES.
          enum:
            - TYPE_UNSPECIFIED
            - PIXELS
            - OUTLINES
          type: string
      type: object
    GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata:
      description: Metadata of the prediction output to be explained.
      properties:
        displayNameMappingKey:
          description: Specify a field name in the prediction to look for the display name. Use this if the prediction contains the display names for the outputs. The display names in the prediction must have the same shape of the outputs, so that it can be located by Attribution.output_index for a specific output.
          type: string
        indexDisplayNameMapping:
          description: Static mapping between the index and display name. Use this if the outputs are a deterministic n-dimensional array, e.g. a list of scores of all the classes in a pre-defined order for a multi-classification Model. It's not feasible if the outputs are non-deterministic, e.g. the Model produces top-k classes or sort the outputs by their values. The shape of the value must be an n-dimensional array of strings. The number of dimensions must match that of the outputs to be explained. The Attribution.output_display_name is populated by locating in the mapping with Attribution.output_index.
        outputTensorName:
          description: Name of the output tensor. Required and is only applicable to Vertex AI provided images for Tensorflow.
          type: string
      type: object
    GoogleCloudAiplatformV1ExplanationMetadataOverride:
      description: The ExplanationMetadata entries that can be overridden at online explanation time.
      properties:
        inputs:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ExplanationMetadataOverrideInputMetadataOverride"
          description: Required. Overrides the input metadata of the features. The key is the name of the feature to be overridden. The keys specified here must exist in the input metadata to be overridden. If a feature is not specified here, the corresponding feature's input metadata is not overridden.
          type: object
      type: object
    GoogleCloudAiplatformV1ExplanationMetadataOverrideInputMetadataOverride:
      description: The input metadata entries to be overridden.
      properties:
        inputBaselines:
          description: Baseline inputs for this feature. This overrides the `input_baseline` field of the ExplanationMetadata.InputMetadata object of the corresponding feature's input metadata. If it's not specified, the original baselines are not overridden.
          items: {}
          type: array
      type: object
    GoogleCloudAiplatformV1ExplanationParameters:
      description: Parameters to configure explaining for Model's predictions.
      properties:
        examples:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Examples"
          description: Example-based explanations that returns the nearest neighbors from the provided dataset.
        integratedGradientsAttribution:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1IntegratedGradientsAttribution"
          description: "An attribution method that computes Aumann-Shapley values taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1703.01365"
        outputIndices:
          description: If populated, only returns attributions that have output_index contained in output_indices. It must be an ndarray of integers, with the same shape of the output it's explaining. If not populated, returns attributions for top_k indices of outputs. If neither top_k nor output_indices is populated, returns the argmax index of the outputs. Only applicable to Models that predict multiple outputs (e,g, multi-class Models that predict multiple classes).
          items: {}
          type: array
        sampledShapleyAttribution:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SampledShapleyAttribution"
          description: "An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features. Refer to this paper for model details: https://arxiv.org/abs/1306.4265."
        topK:
          description: If populated, returns attributions for top K indices of outputs (defaults to 1). Only applies to Models that predicts more than one outputs (e,g, multi-class Models). When set to -1, returns explanations for all outputs.
          format: int32
          type: integer
        xraiAttribution:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1XraiAttribution"
          description: "An attribution method that redistributes Integrated Gradients attribution to segmented regions, taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1906.02825 XRAI currently performs better on natural images, like a picture of a house or an animal. If the images are taken in artificial environments, like a lab or manufacturing line, or from diagnostic equipment, like x-rays or quality-control cameras, use Integrated Gradients instead."
      type: object
    GoogleCloudAiplatformV1ExplanationSpec:
      description: Specification of Model explanation.
      properties:
        metadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ExplanationMetadata"
          description: Optional. Metadata describing the Model's input and output for explanation.
        parameters:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ExplanationParameters"
          description: Required. Parameters that configure explaining of the Model's predictions.
      type: object
    GoogleCloudAiplatformV1ExplanationSpecOverride:
      description: The ExplanationSpec entries that can be overridden at online explanation time.
      properties:
        examplesOverride:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ExamplesOverride"
          description: The example-based explanations parameter overrides.
        metadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ExplanationMetadataOverride"
          description: The metadata to be overridden. If not specified, no metadata is overridden.
        parameters:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ExplanationParameters"
          description: The parameters to be overridden. Note that the attribution method cannot be changed. If not specified, no parameter is overridden.
      type: object
    GoogleCloudAiplatformV1ExportDataConfig:
      description: Describes what part of the Dataset is to be exported, the destination of the export and how to export.
      properties:
        annotationSchemaUri:
          description: The Cloud Storage URI that points to a YAML file describing the annotation schema. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/annotation/, note that the chosen schema must be consistent with metadata of the Dataset specified by dataset_id. Only used for custom training data export use cases. Only applicable to Datasets that have DataItems and Annotations. Only Annotations that both match this schema and belong to DataItems not ignored by the split method are used in respectively training, validation or test role, depending on the role of the DataItem they are on. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both annotations_filter and annotation_schema_uri.
          type: string
        annotationsFilter:
          description: An expression for filtering what part of the Dataset is to be exported. Only Annotations that match this filter will be exported. The filter syntax is the same as in ListAnnotations.
          type: string
        exportUse:
          description: Indicates the usage of the exported files.
          enum:
            - EXPORT_USE_UNSPECIFIED
            - CUSTOM_CODE_TRAINING
          type: string
        filterSplit:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ExportFilterSplit"
          description: Split based on the provided filters for each set.
        fractionSplit:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ExportFractionSplit"
          description: Split based on fractions defining the size of each set.
        gcsDestination:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GcsDestination"
          description: "The Google Cloud Storage location where the output is to be written to. In the given directory a new directory will be created with name: `export-data--` where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601 format. All export output will be written into that directory. Inside that directory, annotations with the same schema will be grouped into sub directories which are named with the corresponding annotations' schema title. Inside these sub directories, a schema.yaml will be created to describe the output format."
        savedQueryId:
          description: "The ID of a SavedQuery (annotation set) under the Dataset specified by dataset_id used for filtering Annotations for training. Only used for custom training data export use cases. Only applicable to Datasets that have SavedQueries. Only Annotations that are associated with this SavedQuery are used in respectively training. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both saved_query_id and annotations_filter. Only one of saved_query_id and annotation_schema_uri should be specified as both of them represent the same thing: problem type."
          type: string
      type: object
    GoogleCloudAiplatformV1ExportDataOperationMetadata:
      description: Runtime operation information for DatasetService.ExportData.
      properties:
        gcsOutputDirectory:
          description: A Google Cloud Storage directory which path ends with '/'. The exported data is stored in the directory.
          type: string
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The common part of the operation metadata.
      type: object
    GoogleCloudAiplatformV1ExportDataRequest:
      description: Request message for DatasetService.ExportData.
      properties:
        exportConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ExportDataConfig"
          description: Required. The desired output location.
      type: object
    GoogleCloudAiplatformV1ExportDataResponse:
      description: Response message for DatasetService.ExportData.
      properties:
        dataStats:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelDataStats"
          description: Only present for custom code training export use case. Records data stats, i.e., train/validation/test item/annotation counts calculated during the export operation.
        exportedFiles:
          description: All of the files that are exported in this export operation. For custom code training export, only three (training, validation and test) Cloud Storage paths in wildcard format are populated (for example, gs://.../training-*).
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1ExportFeatureValuesOperationMetadata:
      description: Details of operations that exports Features values.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for Featurestore export Feature values.
      type: object
    GoogleCloudAiplatformV1ExportFeatureValuesRequest:
      description: Request message for FeaturestoreService.ExportFeatureValues.
      properties:
        destination:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureValueDestination"
          description: Required. Specifies destination location and format.
        featureSelector:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureSelector"
          description: Required. Selects Features to export values of.
        fullExport:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ExportFeatureValuesRequestFullExport"
          description: Exports all historical values of all entities of the EntityType within a time range
        settings:
          description: Per-Feature export settings.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1DestinationFeatureSetting"
          type: array
        snapshotExport:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ExportFeatureValuesRequestSnapshotExport"
          description: Exports the latest Feature values of all entities of the EntityType within a time range.
      type: object
    GoogleCloudAiplatformV1ExportFeatureValuesRequestFullExport:
      description: Describes exporting all historical Feature values of all entities of the EntityType between [start_time, end_time].
      properties:
        endTime:
          description: Exports Feature values as of this timestamp. If not set, retrieve values as of now. Timestamp, if present, must not have higher than millisecond precision.
          format: google-datetime
          type: string
        startTime:
          description: Excludes Feature values with feature generation timestamp before this timestamp. If not set, retrieve oldest values kept in Feature Store. Timestamp, if present, must not have higher than millisecond precision.
          format: google-datetime
          type: string
      type: object
    GoogleCloudAiplatformV1ExportFeatureValuesRequestSnapshotExport:
      description: Describes exporting the latest Feature values of all entities of the EntityType between [start_time, snapshot_time].
      properties:
        snapshotTime:
          description: Exports Feature values as of this timestamp. If not set, retrieve values as of now. Timestamp, if present, must not have higher than millisecond precision.
          format: google-datetime
          type: string
        startTime:
          description: Excludes Feature values with feature generation timestamp before this timestamp. If not set, retrieve oldest values kept in Feature Store. Timestamp, if present, must not have higher than millisecond precision.
          format: google-datetime
          type: string
      type: object
    GoogleCloudAiplatformV1ExportFeatureValuesResponse:
      description: Response message for FeaturestoreService.ExportFeatureValues.
      properties: {}
      type: object
    GoogleCloudAiplatformV1ExportFilterSplit:
      description: Assigns input data to training, validation, and test sets based on the given filters, data pieces not matched by any filter are ignored. Currently only supported for Datasets containing DataItems. If any of the filters in this message are to match nothing, then they can be set as '-' (the minus sign). Supported only for unstructured Datasets.
      properties:
        testFilter:
          description: Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to test the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.
          type: string
        trainingFilter:
          description: Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to train the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.
          type: string
        validationFilter:
          description: Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to validate the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.
          type: string
      type: object
    GoogleCloudAiplatformV1ExportFractionSplit:
      description: Assigns the input data to training, validation, and test sets as per the given fractions. Any of `training_fraction`, `validation_fraction` and `test_fraction` may optionally be provided, they must sum to up to 1. If the provided ones sum to less than 1, the remainder is assigned to sets as decided by Vertex AI. If none of the fractions are set, by default roughly 80% of data is used for training, 10% for validation, and 10% for test.
      properties:
        testFraction:
          description: The fraction of the input data that is to be used to evaluate the Model.
          format: double
          type: number
        trainingFraction:
          description: The fraction of the input data that is to be used to train the Model.
          format: double
          type: number
        validationFraction:
          description: The fraction of the input data that is to be used to validate the Model.
          format: double
          type: number
      type: object
    GoogleCloudAiplatformV1ExportModelOperationMetadata:
      description: Details of ModelService.ExportModel operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The common part of the operation metadata.
        outputInfo:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ExportModelOperationMetadataOutputInfo"
          description: Output only. Information further describing the output of this Model export.
          readOnly: true
      type: object
    GoogleCloudAiplatformV1ExportModelOperationMetadataOutputInfo:
      description: Further describes the output of the ExportModel. Supplements ExportModelRequest.OutputConfig.
      properties:
        artifactOutputUri:
          description: Output only. If the Model artifact is being exported to Google Cloud Storage this is the full path of the directory created, into which the Model files are being written to.
          readOnly: true
          type: string
        imageOutputUri:
          description: Output only. If the Model image is being exported to Google Container Registry or Artifact Registry this is the full path of the image created.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1ExportModelRequest:
      description: Request message for ModelService.ExportModel.
      properties:
        outputConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ExportModelRequestOutputConfig"
          description: Required. The desired output location and configuration.
      type: object
    GoogleCloudAiplatformV1ExportModelRequestOutputConfig:
      description: Output configuration for the Model export.
      properties:
        artifactDestination:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GcsDestination"
          description: The Cloud Storage location where the Model artifact is to be written to. Under the directory given as the destination a new one with name "`model-export--`", where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601 format, will be created. Inside, the Model and any of its supporting files will be written. This field should only be set when the `exportableContent` field of the [Model.supported_export_formats] object contains `ARTIFACT`.
        exportFormatId:
          description: The ID of the format in which the Model must be exported. Each Model lists the export formats it supports. If no value is provided here, then the first from the list of the Model's supported formats is used by default.
          type: string
        imageDestination:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ContainerRegistryDestination"
          description: The Google Container Registry or Artifact Registry uri where the Model container image will be copied to. This field should only be set when the `exportableContent` field of the [Model.supported_export_formats] object contains `IMAGE`.
      type: object
    GoogleCloudAiplatformV1ExportModelResponse:
      description: Response message of ModelService.ExportModel operation.
      properties: {}
      type: object
    GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataRequest:
      description: Request message for TensorboardService.ExportTensorboardTimeSeriesData.
      properties:
        filter:
          description: Exports the TensorboardTimeSeries' data that match the filter expression.
          type: string
        orderBy:
          description: Field to use to sort the TensorboardTimeSeries' data. By default, TensorboardTimeSeries' data is returned in a pseudo random order.
          type: string
        pageSize:
          description: The maximum number of data points to return per page. The default page_size is 1000. Values must be between 1 and 10000. Values above 10000 are coerced to 10000.
          format: int32
          type: integer
        pageToken:
          description: A page token, received from a previous ExportTensorboardTimeSeriesData call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ExportTensorboardTimeSeriesData must match the call that provided the page token.
          type: string
      type: object
    GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataResponse:
      description: Response message for TensorboardService.ExportTensorboardTimeSeriesData.
      properties:
        nextPageToken:
          description: A token, which can be sent as page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        timeSeriesDataPoints:
          description: The returned time series data points.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1TimeSeriesDataPoint"
          type: array
      type: object
    GoogleCloudAiplatformV1Feature:
      description: Feature Metadata information. For example, color is a feature that describes an apple.
      properties:
        createTime:
          description: Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Description of the Feature.
          type: string
        disableMonitoring:
          description: Optional. Only applicable for Vertex AI Feature Store (Legacy). If not set, use the monitoring_config defined for the EntityType this Feature belongs to. Only Features with type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 can enable monitoring. If set to true, all types of data monitoring are disabled despite the config on EntityType.
          type: boolean
        etag:
          description: Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. The labels with user-defined metadata to organize your Features. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Feature (System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
          type: object
        monitoringStatsAnomalies:
          description: Output only. Only applicable for Vertex AI Feature Store (Legacy). The list of historical stats and anomalies with specified objectives.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly"
          readOnly: true
          type: array
        name:
          description: "Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}` The last part feature is assigned by the client. The feature can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given an entity type."
          type: string
        pointOfContact:
          description: Entity responsible for maintaining this feature. Can be comma separated list of email addresses or URIs.
          type: string
        updateTime:
          description: Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was most recently updated.
          format: google-datetime
          readOnly: true
          type: string
        valueType:
          description: Immutable. Only applicable for Vertex AI Feature Store (Legacy). Type of Feature value.
          enum:
            - VALUE_TYPE_UNSPECIFIED
            - BOOL
            - BOOL_ARRAY
            - DOUBLE
            - DOUBLE_ARRAY
            - INT64
            - INT64_ARRAY
            - STRING
            - STRING_ARRAY
            - BYTES
          type: string
        versionColumnName:
          description: Only applicable for Vertex AI Feature Store. The name of the BigQuery Table/View column hosting data for this version. If no value is provided, will use feature_id.
          type: string
      type: object
    GoogleCloudAiplatformV1FeatureGroup:
      description: Vertex AI Feature Group.
      properties:
        bigQuery:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureGroupBigQuery"
          description: Indicates that features for this group come from BigQuery Table/View. By default treats the source as a sparse time series source, which is required to have an entity_id and a feature_timestamp column in the source.
        createTime:
          description: Output only. Timestamp when this FeatureGroup was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. Description of the FeatureGroup.
          type: string
        etag:
          description: Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. The labels with user-defined metadata to organize your FeatureGroup. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureGroup(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
          type: object
        name:
          description: "Identifier. Name of the FeatureGroup. Format: `projects/{project}/locations/{location}/featureGroups/{featureGroup}`"
          type: string
        updateTime:
          description: Output only. Timestamp when this FeatureGroup was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1FeatureGroupBigQuery:
      description: Input source type for BigQuery Tables and Views.
      properties:
        bigQuerySource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1BigQuerySource"
          description: Required. Immutable. The BigQuery source URI that points to either a BigQuery Table or View.
        entityIdColumns:
          description: Optional. Columns to construct entity_id / row keys. If not provided defaults to `entity_id`.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly:
      description: A list of historical SnapshotAnalysis or ImportFeaturesAnalysis stats requested by user, sorted by FeatureStatsAnomaly.start_time descending.
      properties:
        featureStatsAnomaly:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureStatsAnomaly"
          description: Output only. The stats and anomalies generated at specific timestamp.
          readOnly: true
        objective:
          description: Output only. The objective for each stats.
          enum:
            - OBJECTIVE_UNSPECIFIED
            - IMPORT_FEATURE_ANALYSIS
            - SNAPSHOT_ANALYSIS
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1FeatureNoiseSigma:
      description: Noise sigma by features. Noise sigma represents the standard deviation of the gaussian kernel that will be used to add noise to interpolated inputs prior to computing gradients.
      properties:
        noiseSigma:
          description: Noise sigma per feature. No noise is added to features that are not set.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureNoiseSigmaNoiseSigmaForFeature"
          type: array
      type: object
    GoogleCloudAiplatformV1FeatureNoiseSigmaNoiseSigmaForFeature:
      description: Noise sigma for a single feature.
      properties:
        name:
          description: The name of the input feature for which noise sigma is provided. The features are defined in explanation metadata inputs.
          type: string
        sigma:
          description: This represents the standard deviation of the Gaussian kernel that will be used to add noise to the feature prior to computing gradients. Similar to noise_sigma but represents the noise added to the current feature. Defaults to 0.1.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1FeatureOnlineStore:
      description: Vertex AI Feature Online Store provides a centralized repository for serving ML features and embedding indexes at low latency. The Feature Online Store is a top-level container.
      properties:
        bigtable:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureOnlineStoreBigtable"
          description: Contains settings for the Cloud Bigtable instance that will be created to serve featureValues for all FeatureViews under this FeatureOnlineStore.
        createTime:
          description: Output only. Timestamp when this FeatureOnlineStore was created.
          format: google-datetime
          readOnly: true
          type: string
        etag:
          description: Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. The labels with user-defined metadata to organize your FeatureOnlineStore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
          type: object
        name:
          description: "Identifier. Name of the FeatureOnlineStore. Format: `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}`"
          type: string
        state:
          description: Output only. State of the featureOnlineStore.
          enum:
            - STATE_UNSPECIFIED
            - STABLE
            - UPDATING
          readOnly: true
          type: string
        updateTime:
          description: Output only. Timestamp when this FeatureOnlineStore was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1FeatureOnlineStoreBigtable:
      properties:
        autoScaling:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureOnlineStoreBigtableAutoScaling"
          description: Required. Autoscaling config applied to Bigtable Instance.
      type: object
    GoogleCloudAiplatformV1FeatureOnlineStoreBigtableAutoScaling:
      properties:
        cpuUtilizationTarget:
          description: Optional. A percentage of the cluster's CPU capacity. Can be from 10% to 80%. When a cluster's CPU utilization exceeds the target that you have set, Bigtable immediately adds nodes to the cluster. When CPU utilization is substantially lower than the target, Bigtable removes nodes. If not set will default to 50%.
          format: int32
          type: integer
        maxNodeCount:
          description: Required. The maximum number of nodes to scale up to. Must be greater than or equal to min_node_count, and less than or equal to 10 times of 'min_node_count'.
          format: int32
          type: integer
        minNodeCount:
          description: Required. The minimum number of nodes to scale down to. Must be greater than or equal to 1.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1FeatureSelector:
      description: Selector for Features of an EntityType.
      properties:
        idMatcher:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1IdMatcher"
          description: Required. Matches Features based on ID.
      type: object
    GoogleCloudAiplatformV1FeatureStatsAnomaly:
      description: Stats and Anomaly generated at specific timestamp for specific Feature. The start_time and end_time are used to define the time range of the dataset that current stats belongs to, e.g. prediction traffic is bucketed into prediction datasets by time window. If the Dataset is not defined by time window, start_time = end_time. Timestamp of the stats and anomalies always refers to end_time. Raw stats and anomalies are stored in stats_uri or anomaly_uri in the tensorflow defined protos. Field data_stats contains almost identical information with the raw stats in Vertex AI defined proto, for UI to display.
      properties:
        anomalyDetectionThreshold:
          description: This is the threshold used when detecting anomalies. The threshold can be changed by user, so this one might be different from ThresholdConfig.value.
          format: double
          type: number
        anomalyUri:
          description: "Path of the anomaly file for current feature values in Cloud Storage bucket. Format: gs:////anomalies. Example: gs://monitoring_bucket/feature_name/anomalies. Stats are stored as binary format with Protobuf message Anoamlies are stored as binary format with Protobuf message [tensorflow.metadata.v0.AnomalyInfo] (https://github.com/tensorflow/metadata/blob/master/tensorflow_metadata/proto/v0/anomalies.proto)."
          type: string
        distributionDeviation:
          description: Deviation from the current stats to baseline stats. 1. For categorical feature, the distribution distance is calculated by L-inifinity norm. 2. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence.
          format: double
          type: number
        endTime:
          description: The end timestamp of window where stats were generated. For objectives where time window doesn't make sense (e.g. Featurestore Snapshot Monitoring), end_time indicates the timestamp of the data used to generate stats (e.g. timestamp we take snapshots for feature values).
          format: google-datetime
          type: string
        score:
          description: Feature importance score, only populated when cross-feature monitoring is enabled. For now only used to represent feature attribution score within range [0, 1] for ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_SKEW and ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_DRIFT.
          format: double
          type: number
        startTime:
          description: The start timestamp of window where stats were generated. For objectives where time window doesn't make sense (e.g. Featurestore Snapshot Monitoring), start_time is only used to indicate the monitoring intervals, so it always equals to (end_time - monitoring_interval).
          format: google-datetime
          type: string
        statsUri:
          description: "Path of the stats file for current feature values in Cloud Storage bucket. Format: gs:////stats. Example: gs://monitoring_bucket/feature_name/stats. Stats are stored as binary format with Protobuf message [tensorflow.metadata.v0.FeatureNameStatistics](https://github.com/tensorflow/metadata/blob/master/tensorflow_metadata/proto/v0/statistics.proto)."
          type: string
      type: object
    GoogleCloudAiplatformV1FeatureValue:
      description: Value for a feature.
      properties:
        boolArrayValue:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1BoolArray"
          description: A list of bool type feature value.
        boolValue:
          description: Bool type feature value.
          type: boolean
        bytesValue:
          description: Bytes feature value.
          format: byte
          type: string
        doubleArrayValue:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DoubleArray"
          description: A list of double type feature value.
        doubleValue:
          description: Double type feature value.
          format: double
          type: number
        int64ArrayValue:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Int64Array"
          description: A list of int64 type feature value.
        int64Value:
          description: Int64 feature value.
          format: int64
          type: string
        metadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureValueMetadata"
          description: Metadata of feature value.
        stringArrayValue:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StringArray"
          description: A list of string type feature value.
        stringValue:
          description: String feature value.
          type: string
      type: object
    GoogleCloudAiplatformV1FeatureValueDestination:
      description: A destination location for Feature values and format.
      properties:
        bigqueryDestination:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1BigQueryDestination"
          description: Output in BigQuery format. BigQueryDestination.output_uri in FeatureValueDestination.bigquery_destination must refer to a table.
        csvDestination:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1CsvDestination"
          description: Output in CSV format. Array Feature value types are not allowed in CSV format.
        tfrecordDestination:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1TFRecordDestination"
          description: 'Output in TFRecord format. Below are the mapping from Feature value type in Featurestore to Feature value type in TFRecord: Value type in Featurestore | Value type in TFRecord DOUBLE, DOUBLE_ARRAY | FLOAT_LIST INT64, INT64_ARRAY | INT64_LIST STRING, STRING_ARRAY, BYTES | BYTES_LIST true -> byte_string("true"), false -> byte_string("false") BOOL, BOOL_ARRAY (true, false) | BYTES_LIST'
      type: object
    GoogleCloudAiplatformV1FeatureValueList:
      description: Container for list of values.
      properties:
        values:
          description: A list of feature values. All of them should be the same data type.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureValue"
          type: array
      type: object
    GoogleCloudAiplatformV1FeatureValueMetadata:
      description: Metadata of feature value.
      properties:
        generateTime:
          description: Feature generation timestamp. Typically, it is provided by user at feature ingestion time. If not, feature store will use the system timestamp when the data is ingested into feature store. For streaming ingestion, the time, aligned by days, must be no older than five years (1825 days) and no later than one year (366 days) in the future.
          format: google-datetime
          type: string
      type: object
    GoogleCloudAiplatformV1FeatureView:
      description: FeatureView is representation of values that the FeatureOnlineStore will serve based on its syncConfig.
      properties:
        bigQuerySource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureViewBigQuerySource"
          description: Optional. Configures how data is supposed to be extracted from a BigQuery source to be loaded onto the FeatureOnlineStore.
        createTime:
          description: Output only. Timestamp when this FeatureView was created.
          format: google-datetime
          readOnly: true
          type: string
        etag:
          description: Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        featureRegistrySource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource"
          description: Optional. Configures the features from a Feature Registry source that need to be loaded onto the FeatureOnlineStore.
        labels:
          additionalProperties:
            type: string
          description: Optional. The labels with user-defined metadata to organize your FeatureViews. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
          type: object
        name:
          description: "Identifier. Name of the FeatureView. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`"
          type: string
        syncConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureViewSyncConfig"
          description: Configures when data is to be synced/updated for this FeatureView. At the end of the sync the latest featureValues for each entityId of this FeatureView are made ready for online serving.
        updateTime:
          description: Output only. Timestamp when this FeatureView was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1FeatureViewBigQuerySource:
      properties:
        entityIdColumns:
          description: Required. Columns to construct entity_id / row keys.
          items:
            type: string
          type: array
        uri:
          description: Required. The BigQuery view URI that will be materialized on each sync trigger based on FeatureView.SyncConfig.
          type: string
      type: object
    GoogleCloudAiplatformV1FeatureViewDataKey:
      description: Lookup key for a feature view.
      properties:
        compositeKey:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureViewDataKeyCompositeKey"
          description: The actual Entity ID will be composed from this struct. This should match with the way ID is defined in the FeatureView spec.
        key:
          description: String key to use for lookup.
          type: string
      type: object
    GoogleCloudAiplatformV1FeatureViewDataKeyCompositeKey:
      description: ID that is comprised from several parts (columns).
      properties:
        parts:
          description: Parts to construct Entity ID. Should match with the same ID columns as defined in FeatureView in the same order.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource:
      description: A Feature Registry source for features that need to be synced to Online Store.
      properties:
        featureGroups:
          description: Required. List of features that need to be synced to Online Store.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureViewFeatureRegistrySourceFeatureGroup"
          type: array
        projectNumber:
          description: Optional. The project number of the parent project of the Feature Groups.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1FeatureViewFeatureRegistrySourceFeatureGroup:
      description: Features belonging to a single feature group that will be synced to Online Store.
      properties:
        featureGroupId:
          description: Required. Identifier of the feature group.
          type: string
        featureIds:
          description: Required. Identifiers of features under the feature group.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1FeatureViewSync:
      description: FeatureViewSync is a representation of sync operation which copies data from data source to Feature View in Online Store.
      properties:
        createTime:
          description: Output only. Time when this FeatureViewSync is created. Creation of a FeatureViewSync means that the job is pending / waiting for sufficient resources but may not have started the actual data transfer yet.
          format: google-datetime
          readOnly: true
          type: string
        finalStatus:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Output only. Final status of the FeatureViewSync.
          readOnly: true
        name:
          description: "Identifier. Name of the FeatureViewSync. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/{feature_view_sync}`"
          type: string
        runTime:
          $ref: "#/components/schemas/GoogleTypeInterval"
          description: Output only. Time when this FeatureViewSync is finished.
          readOnly: true
        syncSummary:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureViewSyncSyncSummary"
          description: Output only. Summary of the sync job.
          readOnly: true
      type: object
    GoogleCloudAiplatformV1FeatureViewSyncConfig:
      description: Configuration for Sync. Only one option is set.
      properties:
        cron:
          description: 'Cron schedule (https://en.wikipedia.org/wiki/Cron) to launch scheduled runs. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, "CRON_TZ=America/New_York 1 * * * *", or "TZ=America/New_York 1 * * * *".'
          type: string
      type: object
    GoogleCloudAiplatformV1FeatureViewSyncSyncSummary:
      description: Summary from the Sync job. For continuous syncs, the summary is updated periodically. For batch syncs, it gets updated on completion of the sync.
      properties:
        rowSynced:
          description: Output only. Total number of rows synced.
          format: int64
          readOnly: true
          type: string
        totalSlot:
          description: Output only. BigQuery slot milliseconds consumed for the sync job.
          format: int64
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1Featurestore:
      description: Vertex AI Feature Store provides a centralized repository for organizing, storing, and serving ML features. The Featurestore is a top-level container for your features and their values.
      properties:
        createTime:
          description: Output only. Timestamp when this Featurestore was created.
          format: google-datetime
          readOnly: true
          type: string
        encryptionSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec"
          description: Optional. Customer-managed encryption key spec for data storage. If set, both of the online and offline data storage will be secured by this key.
        etag:
          description: Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. The labels with user-defined metadata to organize your Featurestore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Featurestore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
          type: object
        name:
          description: "Output only. Name of the Featurestore. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`"
          readOnly: true
          type: string
        onlineServingConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeaturestoreOnlineServingConfig"
          description: Optional. Config for online storage resources. The field should not co-exist with the field of `OnlineStoreReplicationConfig`. If both of it and OnlineStoreReplicationConfig are unset, the feature store will not have an online store and cannot be used for online serving.
        onlineStorageTtlDays:
          description: Optional. TTL in days for feature values that will be stored in online serving storage. The Feature Store online storage periodically removes obsolete feature values older than `online_storage_ttl_days` since the feature generation time. Note that `online_storage_ttl_days` should be less than or equal to `offline_storage_ttl_days` for each EntityType under a featurestore. If not set, default to 4000 days
          format: int32
          type: integer
        state:
          description: Output only. State of the featurestore.
          enum:
            - STATE_UNSPECIFIED
            - STABLE
            - UPDATING
          readOnly: true
          type: string
        updateTime:
          description: Output only. Timestamp when this Featurestore was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1FeaturestoreMonitoringConfig:
      description: Configuration of how features in Featurestore are monitored.
      properties:
        categoricalThresholdConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeaturestoreMonitoringConfigThresholdConfig"
          description: Threshold for categorical features of anomaly detection. This is shared by all types of Featurestore Monitoring for categorical features (i.e. Features with type (Feature.ValueType) BOOL or STRING).
        importFeaturesAnalysis:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis"
          description: The config for ImportFeatures Analysis Based Feature Monitoring.
        numericalThresholdConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeaturestoreMonitoringConfigThresholdConfig"
          description: Threshold for numerical features of anomaly detection. This is shared by all objectives of Featurestore Monitoring for numerical features (i.e. Features with type (Feature.ValueType) DOUBLE or INT64).
        snapshotAnalysis:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis"
          description: The config for Snapshot Analysis Based Feature Monitoring.
      type: object
    GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis:
      description: Configuration of the Featurestore's ImportFeature Analysis Based Monitoring. This type of analysis generates statistics for values of each Feature imported by every ImportFeatureValues operation.
      properties:
        anomalyDetectionBaseline:
          description: The baseline used to do anomaly detection for the statistics generated by import features analysis.
          enum:
            - BASELINE_UNSPECIFIED
            - LATEST_STATS
            - MOST_RECENT_SNAPSHOT_STATS
            - PREVIOUS_IMPORT_FEATURES_STATS
          type: string
        state:
          description: Whether to enable / disable / inherite default hebavior for import features analysis.
          enum:
            - STATE_UNSPECIFIED
            - DEFAULT
            - ENABLED
            - DISABLED
          type: string
      type: object
    GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis:
      description: Configuration of the Featurestore's Snapshot Analysis Based Monitoring. This type of analysis generates statistics for each Feature based on a snapshot of the latest feature value of each entities every monitoring_interval.
      properties:
        disabled:
          description: "The monitoring schedule for snapshot analysis. For EntityType-level config: unset / disabled = true indicates disabled by default for Features under it; otherwise by default enable snapshot analysis monitoring with monitoring_interval for Features under it. Feature-level config: disabled = true indicates disabled regardless of the EntityType-level config; unset monitoring_interval indicates going with EntityType-level config; otherwise run snapshot analysis monitoring with monitoring_interval regardless of the EntityType-level config. Explicitly Disable the snapshot analysis based monitoring."
          type: boolean
        monitoringIntervalDays:
          description: Configuration of the snapshot analysis based monitoring pipeline running interval. The value indicates number of days.
          format: int32
          type: integer
        stalenessDays:
          description: Customized export features time window for snapshot analysis. Unit is one day. Default value is 3 weeks. Minimum value is 1 day. Maximum value is 4000 days.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1FeaturestoreMonitoringConfigThresholdConfig:
      description: The config for Featurestore Monitoring threshold.
      properties:
        value:
          description: Specify a threshold value that can trigger the alert. 1. For categorical feature, the distribution distance is calculated by L-inifinity norm. 2. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence. Each feature must have a non-zero threshold if they need to be monitored. Otherwise no alert will be triggered for that feature.
          format: double
          type: number
      type: object
    GoogleCloudAiplatformV1FeaturestoreOnlineServingConfig:
      description: OnlineServingConfig specifies the details for provisioning online serving resources.
      properties:
        fixedNodeCount:
          description: The number of nodes for the online store. The number of nodes doesn't scale automatically, but you can manually update the number of nodes. If set to 0, the featurestore will not have an online store and cannot be used for online serving.
          format: int32
          type: integer
        scaling:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeaturestoreOnlineServingConfigScaling"
          description: Online serving scaling configuration. Only one of `fixed_node_count` and `scaling` can be set. Setting one will reset the other.
      type: object
    GoogleCloudAiplatformV1FeaturestoreOnlineServingConfigScaling:
      description: Online serving scaling configuration. If min_node_count and max_node_count are set to the same value, the cluster will be configured with the fixed number of node (no auto-scaling).
      properties:
        cpuUtilizationTarget:
          description: Optional. The cpu utilization that the Autoscaler should be trying to achieve. This number is on a scale from 0 (no utilization) to 100 (total utilization), and is limited between 10 and 80. When a cluster's CPU utilization exceeds the target that you have set, Bigtable immediately adds nodes to the cluster. When CPU utilization is substantially lower than the target, Bigtable removes nodes. If not set or set to 0, default to 50.
          format: int32
          type: integer
        maxNodeCount:
          description: The maximum number of nodes to scale up to. Must be greater than min_node_count, and less than or equal to 10 times of 'min_node_count'.
          format: int32
          type: integer
        minNodeCount:
          description: Required. The minimum number of nodes to scale down to. Must be greater than or equal to 1.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1FetchFeatureValuesRequest:
      description: Request message for FeatureOnlineStoreService.FetchFeatureValues. All the features under the requested feature view will be returned.
      properties:
        dataFormat:
          description: Optional. Response data format. If not set, FeatureViewDataFormat.KEY_VALUE will be used.
          enum:
            - FEATURE_VIEW_DATA_FORMAT_UNSPECIFIED
            - KEY_VALUE
            - PROTO_STRUCT
          type: string
        dataKey:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureViewDataKey"
          description: Optional. The request key to fetch feature values for.
      type: object
    GoogleCloudAiplatformV1FetchFeatureValuesResponse:
      description: Response message for FeatureOnlineStoreService.FetchFeatureValues
      properties:
        keyValues:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairList"
          description: Feature values in KeyValue format.
        protoStruct:
          additionalProperties:
            description: Properties of the object.
          description: Feature values in proto Struct format.
          type: object
      type: object
    GoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairList:
      description: Response structure in the format of key (feature name) and (feature) value pair.
      properties:
        features:
          description: List of feature names and values.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairListFeatureNameValuePair"
          type: array
      type: object
    GoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairListFeatureNameValuePair:
      description: Feature name & value pair.
      properties:
        name:
          description: Feature short name.
          type: string
        value:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureValue"
          description: Feature value.
      type: object
    GoogleCloudAiplatformV1FileData:
      description: URI based data.
      properties:
        fileUri:
          description: Required. URI.
          type: string
        mimeType:
          description: Required. The IANA standard MIME type of the source data.
          type: string
      type: object
    GoogleCloudAiplatformV1FilterSplit:
      description: "Assigns input data to training, validation, and test sets based on the given filters, data pieces not matched by any filter are ignored. Currently only supported for Datasets containing DataItems. If any of the filters in this message are to match nothing, then they can be set as '-' (the minus sign). Supported only for unstructured Datasets. "
      properties:
        testFilter:
          description: Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to test the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.
          type: string
        trainingFilter:
          description: Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to train the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.
          type: string
        validationFilter:
          description: Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to validate the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.
          type: string
      type: object
    GoogleCloudAiplatformV1FindNeighborsRequest:
      description: The request message for MatchService.FindNeighbors.
      properties:
        deployedIndexId:
          description: The ID of the DeployedIndex that will serve the request. This request is sent to a specific IndexEndpoint, as per the IndexEndpoint.network. That IndexEndpoint also has IndexEndpoint.deployed_indexes, and each such index has a DeployedIndex.id field. The value of the field below must equal one of the DeployedIndex.id fields of the IndexEndpoint that is being called for this request.
          type: string
        queries:
          description: The list of queries.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1FindNeighborsRequestQuery"
          type: array
        returnFullDatapoint:
          description: If set to true, the full datapoints (including all vector values and restricts) of the nearest neighbors are returned. Note that returning full datapoint will significantly increase the latency and cost of the query.
          type: boolean
      type: object
    GoogleCloudAiplatformV1FindNeighborsRequestQuery:
      description: A query to find a number of the nearest neighbors (most similar vectors) of a vector.
      properties:
        approximateNeighborCount:
          description: The number of neighbors to find via approximate search before exact reordering is performed. If not set, the default value from scam config is used; if set, this value must be > 0.
          format: int32
          type: integer
        datapoint:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1IndexDatapoint"
          description: Required. The datapoint/vector whose nearest neighbors should be searched for.
        fractionLeafNodesToSearchOverride:
          description: The fraction of the number of leaves to search, set at query time allows user to tune search performance. This value increase result in both search accuracy and latency increase. The value should be between 0.0 and 1.0. If not set or set to 0.0, query uses the default value specified in NearestNeighborSearchConfig.TreeAHConfig.fraction_leaf_nodes_to_search.
          format: double
          type: number
        neighborCount:
          description: The number of nearest neighbors to be retrieved from database for each query. If not set, will use the default from the service configuration (https://cloud.google.com/vertex-ai/docs/matching-engine/configuring-indexes#nearest-neighbor-search-config).
          format: int32
          type: integer
        perCrowdingAttributeNeighborCount:
          description: Crowding is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute. It's used for improving result diversity. This field is the maximum number of matches with the same crowding tag.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1FindNeighborsResponse:
      description: The response message for MatchService.FindNeighbors.
      properties:
        nearestNeighbors:
          description: The nearest neighbors of the query datapoints.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1FindNeighborsResponseNearestNeighbors"
          type: array
      type: object
    GoogleCloudAiplatformV1FindNeighborsResponseNearestNeighbors:
      description: Nearest neighbors for one query.
      properties:
        id:
          description: The ID of the query datapoint.
          type: string
        neighbors:
          description: All its neighbors.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1FindNeighborsResponseNeighbor"
          type: array
      type: object
    GoogleCloudAiplatformV1FindNeighborsResponseNeighbor:
      description: A neighbor of the query vector.
      properties:
        datapoint:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1IndexDatapoint"
          description: The datapoint of the neighbor. Note that full datapoints are returned only when "return_full_datapoint" is set to true. Otherwise, only the "datapoint_id" and "crowding_tag" fields are populated.
        distance:
          description: The distance between the neighbor and the query vector.
          format: double
          type: number
      type: object
    GoogleCloudAiplatformV1FractionSplit:
      description: Assigns the input data to training, validation, and test sets as per the given fractions. Any of `training_fraction`, `validation_fraction` and `test_fraction` may optionally be provided, they must sum to up to 1. If the provided ones sum to less than 1, the remainder is assigned to sets as decided by Vertex AI. If none of the fractions are set, by default roughly 80% of data is used for training, 10% for validation, and 10% for test.
      properties:
        testFraction:
          description: The fraction of the input data that is to be used to evaluate the Model.
          format: double
          type: number
        trainingFraction:
          description: The fraction of the input data that is to be used to train the Model.
          format: double
          type: number
        validationFraction:
          description: The fraction of the input data that is to be used to validate the Model.
          format: double
          type: number
      type: object
    GoogleCloudAiplatformV1FunctionCall:
      description: A predicted [FunctionCall] returned from the model that contains a string representing the [FunctionDeclaration.name] and a structured JSON object containing the parameters and their values.
      properties:
        args:
          additionalProperties:
            description: Properties of the object.
          description: Optional. Required. The function parameters and values in JSON object format. See [FunctionDeclaration.parameters] for parameter details.
          type: object
        name:
          description: Required. The name of the function to call. Matches [FunctionDeclaration.name].
          type: string
      type: object
    GoogleCloudAiplatformV1FunctionDeclaration:
      description: Structured representation of a function declaration as defined by the [OpenAPI 3.0 specification](https://spec.openapis.org/oas/v3.0.3). Included in this declaration are the function name and parameters. This FunctionDeclaration is a representation of a block of code that can be used as a `Tool` by the model and executed by the client.
      properties:
        description:
          description: Optional. Description and purpose of the function. Model uses it to decide how and whether to call the function.
          type: string
        name:
          description: Required. The name of the function to call. Must start with a letter or an underscore. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.
          type: string
        parameters:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Schema"
          description: "Optional. Describes the parameters to this function in JSON Schema Object format. Reflects the Open API 3.03 Parameter Object. string Key: the name of the parameter. Parameter names are case sensitive. Schema Value: the Schema defining the type used for the parameter. For function with no parameters, this can be left unset. Example with 1 required and 1 optional parameter: type: OBJECT properties: param1: type: STRING param2: type: INTEGER required: - param1"
      type: object
    GoogleCloudAiplatformV1FunctionResponse:
      description: The result output from a [FunctionCall] that contains a string representing the [FunctionDeclaration.name] and a structured JSON object containing any output from the function is used as context to the model. This should contain the result of a [FunctionCall] made based on model prediction.
      properties:
        name:
          description: Required. The name of the function to call. Matches [FunctionDeclaration.name] and [FunctionCall.name].
          type: string
        response:
          additionalProperties:
            description: Properties of the object.
          description: Required. The function response in JSON object format.
          type: object
      type: object
    GoogleCloudAiplatformV1GcsDestination:
      description: The Google Cloud Storage location where the output is to be written to.
      properties:
        outputUriPrefix:
          description: Required. Google Cloud Storage URI to output directory. If the uri doesn't end with '/', a '/' will be automatically appended. The directory is created if it doesn't exist.
          type: string
      type: object
    GoogleCloudAiplatformV1GcsSource:
      description: The Google Cloud Storage location for the input content.
      properties:
        uris:
          description: Required. Google Cloud Storage URI(-s) to the input file(s). May contain wildcards. For more information on wildcards, see https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1GenerateContentRequest:
      description: Request message for [PredictionService.GenerateContent].
      properties:
        contents:
          description: Required. The content of the current conversation with the model. For single-turn queries, this is a single instance. For multi-turn queries, this is a repeated field that contains conversation history + latest request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Content"
          type: array
        generationConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenerationConfig"
          description: Optional. Generation config.
        safetySettings:
          description: Optional. Per request settings for blocking unsafe content. Enforced on GenerateContentResponse.candidates.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SafetySetting"
          type: array
        tools:
          description: Optional. A list of `Tools` the model may use to generate the next response. A `Tool` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the model.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Tool"
          type: array
      type: object
    GoogleCloudAiplatformV1GenerateContentResponse:
      description: Response message for [PredictionService.GenerateContent].
      properties:
        candidates:
          description: Output only. Generated candidates.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Candidate"
          readOnly: true
          type: array
        promptFeedback:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback"
          description: "Output only. Content filter results for a prompt sent in the request. Note: Sent only in the first stream chunk. Only happens when no candidates were generated due to content violations."
          readOnly: true
        usageMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenerateContentResponseUsageMetadata"
          description: Usage metadata about the response(s).
      type: object
    GoogleCloudAiplatformV1GenerateContentResponsePromptFeedback:
      description: Content filter results for a prompt sent in the request.
      properties:
        blockReason:
          description: Output only. Blocked reason.
          enum:
            - BLOCKED_REASON_UNSPECIFIED
            - SAFETY
            - OTHER
          readOnly: true
          type: string
        blockReasonMessage:
          description: Output only. A readable block reason message.
          readOnly: true
          type: string
        safetyRatings:
          description: Output only. Safety ratings.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SafetyRating"
          readOnly: true
          type: array
      type: object
    GoogleCloudAiplatformV1GenerateContentResponseUsageMetadata:
      description: Usage metadata about response(s).
      properties:
        candidatesTokenCount:
          description: Number of tokens in the response(s).
          format: int32
          type: integer
        promptTokenCount:
          description: Number of tokens in the request.
          format: int32
          type: integer
        totalTokenCount:
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1GenerationConfig:
      description: Generation config.
      properties:
        candidateCount:
          description: Optional. Number of candidates to generate.
          format: int32
          type: integer
        maxOutputTokens:
          description: Optional. The maximum number of output tokens to generate per message.
          format: int32
          type: integer
        stopSequences:
          description: Optional. Stop sequences.
          items:
            type: string
          type: array
        temperature:
          description: Optional. Controls the randomness of predictions.
          format: float
          type: number
        topK:
          description: Optional. If specified, top-k sampling will be used.
          format: float
          type: number
        topP:
          description: Optional. If specified, nucleus sampling will be used.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1GenericOperationMetadata:
      description: Generic Metadata shared by all operations.
      properties:
        createTime:
          description: Output only. Time when the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        partialFailures:
          description: Output only. Partial failures encountered. E.g. single files that couldn't be read. This field should never exceed 20 entries. Status details field will contain standard Google Cloud error details.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          readOnly: true
          type: array
        updateTime:
          description: Output only. Time when the operation was updated for the last time. If the operation has finished (successfully or not), this is the finish time.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1GroundingAttribution:
      description: Grounding attribution.
      properties:
        confidenceScore:
          description: Optional. Output only. Confidence score of the attribution. Ranges from 0 to 1. 1 is the most confident.
          format: float
          readOnly: true
          type: number
        segment:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Segment"
          description: Output only. Segment of the content this attribution belongs to.
          readOnly: true
        web:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GroundingAttributionWeb"
          description: Optional. Attribution from the web.
      type: object
    GoogleCloudAiplatformV1GroundingAttributionWeb:
      description: Attribution from the web.
      properties:
        title:
          description: Output only. Title of the attribution.
          readOnly: true
          type: string
        uri:
          description: Output only. URI reference of the attribution.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1GroundingMetadata:
      description: Metadata returned to client when grounding is enabled.
      properties:
        groundingAttributions:
          description: Optional. List of grounding attributions.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1GroundingAttribution"
          type: array
        webSearchQueries:
          description: Optional. Web search queries for the following-up web search.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1HyperparameterTuningJob:
      description: Represents a HyperparameterTuningJob. A HyperparameterTuningJob has a Study specification and multiple CustomJobs with identical CustomJob specification.
      properties:
        createTime:
          description: Output only. Time when the HyperparameterTuningJob was created.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: Required. The display name of the HyperparameterTuningJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        encryptionSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec"
          description: Customer-managed encryption key options for a HyperparameterTuningJob. If this is set, then all resources created by the HyperparameterTuningJob will be encrypted with the provided encryption key.
        endTime:
          description: "Output only. Time when the HyperparameterTuningJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`."
          format: google-datetime
          readOnly: true
          type: string
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Output only. Only populated when job's state is JOB_STATE_FAILED or JOB_STATE_CANCELLED.
          readOnly: true
        labels:
          additionalProperties:
            type: string
          description: The labels with user-defined metadata to organize HyperparameterTuningJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
          type: object
        maxFailedTrialCount:
          description: The number of failed Trials that need to be seen before failing the HyperparameterTuningJob. If set to 0, Vertex AI decides how many Trials must fail before the whole job fails.
          format: int32
          type: integer
        maxTrialCount:
          description: Required. The desired total number of Trials.
          format: int32
          type: integer
        name:
          description: Output only. Resource name of the HyperparameterTuningJob.
          readOnly: true
          type: string
        parallelTrialCount:
          description: Required. The desired number of Trials to run in parallel.
          format: int32
          type: integer
        startTime:
          description: Output only. Time when the HyperparameterTuningJob for the first time entered the `JOB_STATE_RUNNING` state.
          format: google-datetime
          readOnly: true
          type: string
        state:
          description: Output only. The detailed state of the job.
          enum:
            - JOB_STATE_UNSPECIFIED
            - JOB_STATE_QUEUED
            - JOB_STATE_PENDING
            - JOB_STATE_RUNNING
            - JOB_STATE_SUCCEEDED
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLING
            - JOB_STATE_CANCELLED
            - JOB_STATE_PAUSED
            - JOB_STATE_EXPIRED
            - JOB_STATE_UPDATING
            - JOB_STATE_PARTIALLY_SUCCEEDED
          readOnly: true
          type: string
        studySpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StudySpec"
          description: Required. Study configuration of the HyperparameterTuningJob.
        trialJobSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1CustomJobSpec"
          description: Required. The spec of a trial job. The same spec applies to the CustomJobs created in all the trials.
        trials:
          description: Output only. Trials of the HyperparameterTuningJob.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Trial"
          readOnly: true
          type: array
        updateTime:
          description: Output only. Time when the HyperparameterTuningJob was most recently updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1IdMatcher:
      description: Matcher for Features of an EntityType by Feature ID.
      properties:
        ids:
          description: "Required. The following are accepted as `ids`: * A single-element list containing only `*`, which selects all Features in the target EntityType, or * A list containing only Feature IDs, which selects only Features with those IDs in the target EntityType."
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1ImportDataConfig:
      description: Describes the location from where we import data into a Dataset, together with the labels that will be applied to the DataItems and the Annotations.
      properties:
        annotationLabels:
          additionalProperties:
            type: string
          description: Labels that will be applied to newly imported Annotations. If two Annotations are identical, one of them will be deduped. Two Annotations are considered identical if their payload, payload_schema_uri and all of their labels are the same. These labels will be overridden by Annotation labels specified inside index file referenced by import_schema_uri, e.g. jsonl file.
          type: object
        dataItemLabels:
          additionalProperties:
            type: string
          description: Labels that will be applied to newly imported DataItems. If an identical DataItem as one being imported already exists in the Dataset, then these labels will be appended to these of the already existing one, and if labels with identical key is imported before, the old label value will be overwritten. If two DataItems are identical in the same import data operation, the labels will be combined and if key collision happens in this case, one of the values will be picked randomly. Two DataItems are considered identical if their content bytes are identical (e.g. image bytes or pdf bytes). These labels will be overridden by Annotation labels specified inside index file referenced by import_schema_uri, e.g. jsonl file.
          type: object
        gcsSource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GcsSource"
          description: The Google Cloud Storage location for the input content.
        importSchemaUri:
          description: Required. Points to a YAML file stored on Google Cloud Storage describing the import format. Validation will be done against the schema. The schema is defined as an [OpenAPI 3.0.2 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
          type: string
      type: object
    GoogleCloudAiplatformV1ImportDataOperationMetadata:
      description: Runtime operation information for DatasetService.ImportData.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The common part of the operation metadata.
      type: object
    GoogleCloudAiplatformV1ImportDataRequest:
      description: Request message for DatasetService.ImportData.
      properties:
        importConfigs:
          description: Required. The desired input locations. The contents of all input locations will be imported in one batch.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ImportDataConfig"
          type: array
      type: object
    GoogleCloudAiplatformV1ImportDataResponse:
      description: Response message for DatasetService.ImportData.
      properties: {}
      type: object
    GoogleCloudAiplatformV1ImportFeatureValuesOperationMetadata:
      description: Details of operations that perform import Feature values.
      properties:
        blockingOperationIds:
          description: List of ImportFeatureValues operations running under a single EntityType that are blocking this operation.
          items:
            format: int64
            type: string
          type: array
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for Featurestore import Feature values.
        importedEntityCount:
          description: Number of entities that have been imported by the operation.
          format: int64
          type: string
        importedFeatureValueCount:
          description: Number of Feature values that have been imported by the operation.
          format: int64
          type: string
        invalidRowCount:
          description: The number of rows in input source that weren't imported due to either * Not having any featureValues. * Having a null entityId. * Having a null timestamp. * Not being parsable (applicable for CSV sources).
          format: int64
          type: string
        sourceUris:
          description: The source URI from where Feature values are imported.
          items:
            type: string
          type: array
        timestampOutsideRetentionRowsCount:
          description: The number rows that weren't ingested due to having timestamps outside the retention boundary.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1ImportFeatureValuesRequest:
      description: Request message for FeaturestoreService.ImportFeatureValues.
      properties:
        avroSource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1AvroSource"
        bigquerySource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1BigQuerySource"
        csvSource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1CsvSource"
        disableIngestionAnalysis:
          description: If true, API doesn't start ingestion analysis pipeline.
          type: boolean
        disableOnlineServing:
          description: If set, data will not be imported for online serving. This is typically used for backfilling, where Feature generation timestamps are not in the timestamp range needed for online serving.
          type: boolean
        entityIdField:
          description: Source column that holds entity IDs. If not provided, entity IDs are extracted from the column named entity_id.
          type: string
        featureSpecs:
          description: Required. Specifications defining which Feature values to import from the entity. The request fails if no feature_specs are provided, and having multiple feature_specs for one Feature is not allowed.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ImportFeatureValuesRequestFeatureSpec"
          type: array
        featureTime:
          description: Single Feature timestamp for all entities being imported. The timestamp must not have higher than millisecond precision.
          format: google-datetime
          type: string
        featureTimeField:
          description: Source column that holds the Feature timestamp for all Feature values in each entity.
          type: string
        workerCount:
          description: Specifies the number of workers that are used to write data to the Featurestore. Consider the online serving capacity that you require to achieve the desired import throughput without interfering with online serving. The value must be positive, and less than or equal to 100. If not set, defaults to using 1 worker. The low count ensures minimal impact on online serving performance.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1ImportFeatureValuesRequestFeatureSpec:
      description: Defines the Feature value(s) to import.
      properties:
        id:
          description: Required. ID of the Feature to import values of. This Feature must exist in the target EntityType, or the request will fail.
          type: string
        sourceField:
          description: Source column to get the Feature values from. If not set, uses the column with the same name as the Feature ID.
          type: string
      type: object
    GoogleCloudAiplatformV1ImportFeatureValuesResponse:
      description: Response message for FeaturestoreService.ImportFeatureValues.
      properties:
        importedEntityCount:
          description: Number of entities that have been imported by the operation.
          format: int64
          type: string
        importedFeatureValueCount:
          description: Number of Feature values that have been imported by the operation.
          format: int64
          type: string
        invalidRowCount:
          description: The number of rows in input source that weren't imported due to either * Not having any featureValues. * Having a null entityId. * Having a null timestamp. * Not being parsable (applicable for CSV sources).
          format: int64
          type: string
        timestampOutsideRetentionRowsCount:
          description: The number rows that weren't ingested due to having feature timestamps outside the retention boundary.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1ImportModelEvaluationRequest:
      description: Request message for ModelService.ImportModelEvaluation
      properties:
        modelEvaluation:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelEvaluation"
          description: Required. Model evaluation resource to be imported.
      type: object
    GoogleCloudAiplatformV1Index:
      description: A representation of a collection of database items organized in a way that allows for approximate nearest neighbor (a.k.a ANN) algorithms search.
      properties:
        createTime:
          description: Output only. Timestamp when this Index was created.
          format: google-datetime
          readOnly: true
          type: string
        deployedIndexes:
          description: Output only. The pointers to DeployedIndexes created from this Index. An Index can be only deleted if all its DeployedIndexes had been undeployed first.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1DeployedIndexRef"
          readOnly: true
          type: array
        description:
          description: The description of the Index.
          type: string
        displayName:
          description: Required. The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        encryptionSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec"
          description: Immutable. Customer-managed encryption key spec for an Index. If set, this Index and all sub-resources of this Index will be secured by this key.
        etag:
          description: Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        indexStats:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1IndexStats"
          description: Output only. Stats of the index resource.
          readOnly: true
        indexUpdateMethod:
          description: Immutable. The update method to use with this Index. If not set, BATCH_UPDATE will be used by default.
          enum:
            - INDEX_UPDATE_METHOD_UNSPECIFIED
            - BATCH_UPDATE
            - STREAM_UPDATE
          type: string
        labels:
          additionalProperties:
            type: string
          description: The labels with user-defined metadata to organize your Indexes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
          type: object
        metadata:
          description: An additional information about the Index; the schema of the metadata can be found in metadata_schema.
        metadataSchemaUri:
          description: "Immutable. Points to a YAML file stored on Google Cloud Storage describing additional information about the Index, that is specific to it. Unset if the Index does not have any additional information. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access."
          type: string
        name:
          description: Output only. The resource name of the Index.
          readOnly: true
          type: string
        updateTime:
          description: Output only. Timestamp when this Index was most recently updated. This also includes any update to the contents of the Index. Note that Operations working on this Index may have their Operations.metadata.generic_metadata.update_time a little after the value of this timestamp, yet that does not mean their results are not already reflected in the Index. Result of any successfully completed Operation on the Index is reflected in it.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1IndexDatapoint:
      description: A datapoint of Index.
      properties:
        crowdingTag:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1IndexDatapointCrowdingTag"
          description: Optional. CrowdingTag of the datapoint, the number of neighbors to return in each crowding can be configured during query.
        datapointId:
          description: Required. Unique identifier of the datapoint.
          type: string
        featureVector:
          description: Required. Feature embedding vector. An array of numbers with the length of [NearestNeighborSearchConfig.dimensions].
          items:
            format: float
            type: number
          type: array
        numericRestricts:
          description: Optional. List of Restrict of the datapoint, used to perform "restricted searches" where boolean rule are used to filter the subset of the database eligible for matching. This uses numeric comparisons.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1IndexDatapointNumericRestriction"
          type: array
        restricts:
          description: 'Optional. List of Restrict of the datapoint, used to perform "restricted searches" where boolean rule are used to filter the subset of the database eligible for matching. This uses categorical tokens. See: https://cloud.google.com/vertex-ai/docs/matching-engine/filtering'
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1IndexDatapointRestriction"
          type: array
      type: object
    GoogleCloudAiplatformV1IndexDatapointCrowdingTag:
      description: Crowding tag is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute.
      properties:
        crowdingAttribute:
          description: The attribute value used for crowding. The maximum number of neighbors to return per crowding attribute value (per_crowding_attribute_num_neighbors) is configured per-query. This field is ignored if per_crowding_attribute_num_neighbors is larger than the total number of neighbors to return for a given query.
          type: string
      type: object
    GoogleCloudAiplatformV1IndexDatapointNumericRestriction:
      description: This field allows restricts to be based on numeric comparisons rather than categorical tokens.
      properties:
        namespace:
          description: "The namespace of this restriction. e.g.: cost."
          type: string
        op:
          description: This MUST be specified for queries and must NOT be specified for datapoints.
          enum:
            - OPERATOR_UNSPECIFIED
            - LESS
            - LESS_EQUAL
            - EQUAL
            - GREATER_EQUAL
            - GREATER
            - NOT_EQUAL
          type: string
        valueDouble:
          description: Represents 64 bit float.
          format: double
          type: number
        valueFloat:
          description: Represents 32 bit float.
          format: float
          type: number
        valueInt:
          description: Represents 64 bit integer.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1IndexDatapointRestriction:
      description: Restriction of a datapoint which describe its attributes(tokens) from each of several attribute categories(namespaces).
      properties:
        allowList:
          description: "The attributes to allow in this namespace. e.g.: 'red'"
          items:
            type: string
          type: array
        denyList:
          description: "The attributes to deny in this namespace. e.g.: 'blue'"
          items:
            type: string
          type: array
        namespace:
          description: "The namespace of this restriction. e.g.: color."
          type: string
      type: object
    GoogleCloudAiplatformV1IndexEndpoint:
      description: Indexes are deployed into it. An IndexEndpoint can have multiple DeployedIndexes.
      properties:
        createTime:
          description: Output only. Timestamp when this IndexEndpoint was created.
          format: google-datetime
          readOnly: true
          type: string
        deployedIndexes:
          description: Output only. The indexes deployed in this endpoint.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1DeployedIndex"
          readOnly: true
          type: array
        description:
          description: The description of the IndexEndpoint.
          type: string
        displayName:
          description: Required. The display name of the IndexEndpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        enablePrivateServiceConnect:
          deprecated: true
          description: "Optional. Deprecated: If true, expose the IndexEndpoint via private service connect. Only one of the fields, network or enable_private_service_connect, can be set."
          type: boolean
        encryptionSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec"
          description: Immutable. Customer-managed encryption key spec for an IndexEndpoint. If set, this IndexEndpoint and all sub-resources of this IndexEndpoint will be secured by this key.
        etag:
          description: Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        labels:
          additionalProperties:
            type: string
          description: The labels with user-defined metadata to organize your IndexEndpoints. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
          type: object
        name:
          description: Output only. The resource name of the IndexEndpoint.
          readOnly: true
          type: string
        network:
          description: "Optional. The full name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the IndexEndpoint should be peered. Private services access must already be configured for the network. If left unspecified, the Endpoint is not peered with any network. network and private_service_connect_config are mutually exclusive. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in '12345', and {network} is network name."
          type: string
        privateServiceConnectConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PrivateServiceConnectConfig"
          description: Optional. Configuration for private service connect. network and private_service_connect_config are mutually exclusive.
        publicEndpointDomainName:
          description: Output only. If public_endpoint_enabled is true, this field will be populated with the domain name to use for this index endpoint.
          readOnly: true
          type: string
        publicEndpointEnabled:
          description: Optional. If true, the deployed index will be accessible through public endpoint.
          type: boolean
        updateTime:
          description: Output only. Timestamp when this IndexEndpoint was last updated. This timestamp is not updated when the endpoint's DeployedIndexes are updated, e.g. due to updates of the original Indexes they are the deployments of.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1IndexPrivateEndpoints:
      description: IndexPrivateEndpoints proto is used to provide paths for users to send requests via private endpoints (e.g. private service access, private service connect). To send request via private service access, use match_grpc_address. To send request via private service connect, use service_attachment.
      properties:
        matchGrpcAddress:
          description: Output only. The ip address used to send match gRPC requests.
          readOnly: true
          type: string
        pscAutomatedEndpoints:
          description: Output only. PscAutomatedEndpoints is populated if private service connect is enabled if PscAutomatedConfig is set.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1PscAutomatedEndpoints"
          readOnly: true
          type: array
        serviceAttachment:
          description: Output only. The name of the service attachment resource. Populated if private service connect is enabled.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1IndexStats:
      description: Stats of the Index.
      properties:
        shardsCount:
          description: Output only. The number of shards in the Index.
          format: int32
          readOnly: true
          type: integer
        vectorsCount:
          description: Output only. The number of vectors in the Index.
          format: int64
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1InputDataConfig:
      description: Specifies Vertex AI owned input data to be used for training, and possibly evaluating, the Model.
      properties:
        annotationSchemaUri:
          description: Applicable only to custom training with Datasets that have DataItems and Annotations. Cloud Storage URI that points to a YAML file describing the annotation schema. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/annotation/ , note that the chosen schema must be consistent with metadata of the Dataset specified by dataset_id. Only Annotations that both match this schema and belong to DataItems not ignored by the split method are used in respectively training, validation or test role, depending on the role of the DataItem they are on. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both annotations_filter and annotation_schema_uri.
          type: string
        annotationsFilter:
          description: Applicable only to Datasets that have DataItems and Annotations. A filter on Annotations of the Dataset. Only Annotations that both match this filter and belong to DataItems not ignored by the split method are used in respectively training, validation or test role, depending on the role of the DataItem they are on (for the auto-assigned that role is decided by Vertex AI). A filter with same syntax as the one used in ListAnnotations may be used, but note here it filters across all Annotations of the Dataset, and not just within a single DataItem.
          type: string
        bigqueryDestination:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1BigQueryDestination"
          description: Only applicable to custom training with tabular Dataset with BigQuery source. The BigQuery project location where the training data is to be written to. In the given project a new dataset is created with name `dataset___` where timestamp is in YYYY_MM_DDThh_mm_ss_sssZ format. All training input data is written into that dataset. In the dataset three tables are created, `training`, `validation` and `test`. * AIP_DATA_FORMAT = "bigquery". * AIP_TRAINING_DATA_URI = "bigquery_destination.dataset___.training" * AIP_VALIDATION_DATA_URI = "bigquery_destination.dataset___.validation" * AIP_TEST_DATA_URI = "bigquery_destination.dataset___.test"
        datasetId:
          description: Required. The ID of the Dataset in the same Project and Location which data will be used to train the Model. The Dataset must use schema compatible with Model being trained, and what is compatible should be described in the used TrainingPipeline's training_task_definition. For tabular Datasets, all their data is exported to training, to pick and choose from.
          type: string
        filterSplit:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FilterSplit"
          description: Split based on the provided filters for each set.
        fractionSplit:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FractionSplit"
          description: Split based on fractions defining the size of each set.
        gcsDestination:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GcsDestination"
          description: 'The Cloud Storage location where the training data is to be written to. In the given directory a new directory is created with name: `dataset---` where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601 format. All training input data is written into that directory. The Vertex AI environment variables representing Cloud Storage data URIs are represented in the Cloud Storage wildcard format to support sharded data. e.g.: "gs://.../training-*.jsonl" * AIP_DATA_FORMAT = "jsonl" for non-tabular data, "csv" for tabular data * AIP_TRAINING_DATA_URI = "gcs_destination/dataset---/training-*.${AIP_DATA_FORMAT}" * AIP_VALIDATION_DATA_URI = "gcs_destination/dataset---/validation-*.${AIP_DATA_FORMAT}" * AIP_TEST_DATA_URI = "gcs_destination/dataset---/test-*.${AIP_DATA_FORMAT}"'
        persistMlUseAssignment:
          description: Whether to persist the ML use assignment to data item system labels.
          type: boolean
        predefinedSplit:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PredefinedSplit"
          description: Supported only for tabular Datasets. Split based on a predefined key.
        savedQueryId:
          description: "Only applicable to Datasets that have SavedQueries. The ID of a SavedQuery (annotation set) under the Dataset specified by dataset_id used for filtering Annotations for training. Only Annotations that are associated with this SavedQuery are used in respectively training. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both saved_query_id and annotations_filter. Only one of saved_query_id and annotation_schema_uri should be specified as both of them represent the same thing: problem type."
          type: string
        stratifiedSplit:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StratifiedSplit"
          description: Supported only for tabular Datasets. Split based on the distribution of the specified column.
        timestampSplit:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1TimestampSplit"
          description: Supported only for tabular Datasets. Split based on the timestamp of the input data pieces.
      type: object
    GoogleCloudAiplatformV1Int64Array:
      description: A list of int64 values.
      properties:
        values:
          description: A list of int64 values.
          items:
            format: int64
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1IntegratedGradientsAttribution:
      description: "An attribution method that computes the Aumann-Shapley value taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1703.01365"
      properties:
        blurBaselineConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1BlurBaselineConfig"
          description: "Config for IG with blur baseline. When enabled, a linear path from the maximally blurred image to the input image is created. Using a blurred baseline instead of zero (black image) is motivated by the BlurIG approach explained here: https://arxiv.org/abs/2004.03383"
        smoothGradConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SmoothGradConfig"
          description: "Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf"
        stepCount:
          description: Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is within the desired error range. Valid range of its value is [1, 100], inclusively.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1LargeModelReference:
      description: Contains information about the Large Model.
      properties:
        name:
          description: Required. The unique name of the large Foundation or pre-built model. Like "chat-bison", "text-bison". Or model name with version ID, like "chat-bison@001", "text-bison@005", etc.
          type: string
      type: object
    GoogleCloudAiplatformV1LineageSubgraph:
      description: A subgraph of the overall lineage graph. Event edges connect Artifact and Execution nodes.
      properties:
        artifacts:
          description: The Artifact nodes in the subgraph.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Artifact"
          type: array
        events:
          description: The Event edges between Artifacts and Executions in the subgraph.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Event"
          type: array
        executions:
          description: The Execution nodes in the subgraph.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Execution"
          type: array
      type: object
    GoogleCloudAiplatformV1ListAnnotationsResponse:
      description: Response message for DatasetService.ListAnnotations.
      properties:
        annotations:
          description: A list of Annotations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Annotation"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    GoogleCloudAiplatformV1ListArtifactsResponse:
      description: Response message for MetadataService.ListArtifacts.
      properties:
        artifacts:
          description: The Artifacts retrieved from the MetadataStore.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Artifact"
          type: array
        nextPageToken:
          description: A token, which can be sent as ListArtifactsRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages.
          type: string
      type: object
    GoogleCloudAiplatformV1ListBatchPredictionJobsResponse:
      description: Response message for JobService.ListBatchPredictionJobs
      properties:
        batchPredictionJobs:
          description: List of BatchPredictionJobs in the requested page.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1BatchPredictionJob"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass to ListBatchPredictionJobsRequest.page_token to obtain that page.
          type: string
      type: object
    GoogleCloudAiplatformV1ListContextsResponse:
      description: Response message for MetadataService.ListContexts.
      properties:
        contexts:
          description: The Contexts retrieved from the MetadataStore.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Context"
          type: array
        nextPageToken:
          description: A token, which can be sent as ListContextsRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages.
          type: string
      type: object
    GoogleCloudAiplatformV1ListCustomJobsResponse:
      description: Response message for JobService.ListCustomJobs
      properties:
        customJobs:
          description: List of CustomJobs in the requested page.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1CustomJob"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass to ListCustomJobsRequest.page_token to obtain that page.
          type: string
      type: object
    GoogleCloudAiplatformV1ListDataItemsResponse:
      description: Response message for DatasetService.ListDataItems.
      properties:
        dataItems:
          description: A list of DataItems that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1DataItem"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    GoogleCloudAiplatformV1ListDataLabelingJobsResponse:
      description: Response message for JobService.ListDataLabelingJobs.
      properties:
        dataLabelingJobs:
          description: A list of DataLabelingJobs that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1DataLabelingJob"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    GoogleCloudAiplatformV1ListDatasetVersionsResponse:
      description: Response message for DatasetService.ListDatasetVersions.
      properties:
        datasetVersions:
          description: A list of DatasetVersions that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1DatasetVersion"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    GoogleCloudAiplatformV1ListDatasetsResponse:
      description: Response message for DatasetService.ListDatasets.
      properties:
        datasets:
          description: A list of Datasets that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Dataset"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    GoogleCloudAiplatformV1ListDeploymentResourcePoolsResponse:
      description: Response message for ListDeploymentResourcePools method.
      properties:
        deploymentResourcePools:
          description: The DeploymentResourcePools from the specified location.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1DeploymentResourcePool"
          type: array
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
    GoogleCloudAiplatformV1ListEndpointsResponse:
      description: Response message for EndpointService.ListEndpoints.
      properties:
        endpoints:
          description: List of Endpoints in the requested page.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Endpoint"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass to ListEndpointsRequest.page_token to obtain that page.
          type: string
      type: object
    GoogleCloudAiplatformV1ListEntityTypesResponse:
      description: Response message for FeaturestoreService.ListEntityTypes.
      properties:
        entityTypes:
          description: The EntityTypes matching the request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1EntityType"
          type: array
        nextPageToken:
          description: A token, which can be sent as ListEntityTypesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
    GoogleCloudAiplatformV1ListExecutionsResponse:
      description: Response message for MetadataService.ListExecutions.
      properties:
        executions:
          description: The Executions retrieved from the MetadataStore.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Execution"
          type: array
        nextPageToken:
          description: A token, which can be sent as ListExecutionsRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages.
          type: string
      type: object
    GoogleCloudAiplatformV1ListFeatureGroupsResponse:
      description: Response message for FeatureRegistryService.ListFeatureGroups.
      properties:
        featureGroups:
          description: The FeatureGroups matching the request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureGroup"
          type: array
        nextPageToken:
          description: A token, which can be sent as ListFeatureGroupsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
    GoogleCloudAiplatformV1ListFeatureOnlineStoresResponse:
      description: Response message for FeatureOnlineStoreAdminService.ListFeatureOnlineStores.
      properties:
        featureOnlineStores:
          description: The FeatureOnlineStores matching the request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureOnlineStore"
          type: array
        nextPageToken:
          description: A token, which can be sent as ListFeatureOnlineStoresRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
    GoogleCloudAiplatformV1ListFeatureViewSyncsResponse:
      description: Response message for FeatureOnlineStoreAdminService.ListFeatureViewSyncs.
      properties:
        featureViewSyncs:
          description: The FeatureViewSyncs matching the request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureViewSync"
          type: array
        nextPageToken:
          description: A token, which can be sent as ListFeatureViewSyncsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
    GoogleCloudAiplatformV1ListFeatureViewsResponse:
      description: Response message for FeatureOnlineStoreAdminService.ListFeatureViews.
      properties:
        featureViews:
          description: The FeatureViews matching the request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureView"
          type: array
        nextPageToken:
          description: A token, which can be sent as ListFeatureViewsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
    GoogleCloudAiplatformV1ListFeaturesResponse:
      description: Response message for FeaturestoreService.ListFeatures. Response message for FeatureRegistryService.ListFeatures.
      properties:
        features:
          description: The Features matching the request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Feature"
          type: array
        nextPageToken:
          description: A token, which can be sent as ListFeaturesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
    GoogleCloudAiplatformV1ListFeaturestoresResponse:
      description: Response message for FeaturestoreService.ListFeaturestores.
      properties:
        featurestores:
          description: The Featurestores matching the request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Featurestore"
          type: array
        nextPageToken:
          description: A token, which can be sent as ListFeaturestoresRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
    GoogleCloudAiplatformV1ListHyperparameterTuningJobsResponse:
      description: Response message for JobService.ListHyperparameterTuningJobs
      properties:
        hyperparameterTuningJobs:
          description: List of HyperparameterTuningJobs in the requested page. HyperparameterTuningJob.trials of the jobs will be not be returned.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1HyperparameterTuningJob"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass to ListHyperparameterTuningJobsRequest.page_token to obtain that page.
          type: string
      type: object
    GoogleCloudAiplatformV1ListIndexEndpointsResponse:
      description: Response message for IndexEndpointService.ListIndexEndpoints.
      properties:
        indexEndpoints:
          description: List of IndexEndpoints in the requested page.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1IndexEndpoint"
          type: array
        nextPageToken:
          description: A token to retrieve next page of results. Pass to ListIndexEndpointsRequest.page_token to obtain that page.
          type: string
      type: object
    GoogleCloudAiplatformV1ListIndexesResponse:
      description: Response message for IndexService.ListIndexes.
      properties:
        indexes:
          description: List of indexes in the requested page.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Index"
          type: array
        nextPageToken:
          description: A token to retrieve next page of results. Pass to ListIndexesRequest.page_token to obtain that page.
          type: string
      type: object
    GoogleCloudAiplatformV1ListMetadataSchemasResponse:
      description: Response message for MetadataService.ListMetadataSchemas.
      properties:
        metadataSchemas:
          description: The MetadataSchemas found for the MetadataStore.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1MetadataSchema"
          type: array
        nextPageToken:
          description: A token, which can be sent as ListMetadataSchemasRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages.
          type: string
      type: object
    GoogleCloudAiplatformV1ListMetadataStoresResponse:
      description: Response message for MetadataService.ListMetadataStores.
      properties:
        metadataStores:
          description: The MetadataStores found for the Location.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1MetadataStore"
          type: array
        nextPageToken:
          description: A token, which can be sent as ListMetadataStoresRequest.page_token to retrieve the next page. If this field is not populated, there are no subsequent pages.
          type: string
      type: object
    GoogleCloudAiplatformV1ListModelDeploymentMonitoringJobsResponse:
      description: Response message for JobService.ListModelDeploymentMonitoringJobs.
      properties:
        modelDeploymentMonitoringJobs:
          description: A list of ModelDeploymentMonitoringJobs that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringJob"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    GoogleCloudAiplatformV1ListModelEvaluationSlicesResponse:
      description: Response message for ModelService.ListModelEvaluationSlices.
      properties:
        modelEvaluationSlices:
          description: List of ModelEvaluations in the requested page.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSlice"
          type: array
        nextPageToken:
          description: A token to retrieve next page of results. Pass to ListModelEvaluationSlicesRequest.page_token to obtain that page.
          type: string
      type: object
    GoogleCloudAiplatformV1ListModelEvaluationsResponse:
      description: Response message for ModelService.ListModelEvaluations.
      properties:
        modelEvaluations:
          description: List of ModelEvaluations in the requested page.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelEvaluation"
          type: array
        nextPageToken:
          description: A token to retrieve next page of results. Pass to ListModelEvaluationsRequest.page_token to obtain that page.
          type: string
      type: object
    GoogleCloudAiplatformV1ListModelVersionsResponse:
      description: Response message for ModelService.ListModelVersions
      properties:
        models:
          description: List of Model versions in the requested page. In the returned Model name field, version ID instead of regvision tag will be included.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Model"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass to ListModelVersionsRequest.page_token to obtain that page.
          type: string
      type: object
    GoogleCloudAiplatformV1ListModelsResponse:
      description: Response message for ModelService.ListModels
      properties:
        models:
          description: List of Models in the requested page.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Model"
          type: array
        nextPageToken:
          description: A token to retrieve next page of results. Pass to ListModelsRequest.page_token to obtain that page.
          type: string
      type: object
    GoogleCloudAiplatformV1ListNasJobsResponse:
      description: Response message for JobService.ListNasJobs
      properties:
        nasJobs:
          description: List of NasJobs in the requested page. NasJob.nas_job_output of the jobs will not be returned.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1NasJob"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass to ListNasJobsRequest.page_token to obtain that page.
          type: string
      type: object
    GoogleCloudAiplatformV1ListNasTrialDetailsResponse:
      description: Response message for JobService.ListNasTrialDetails
      properties:
        nasTrialDetails:
          description: List of top NasTrials in the requested page.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1NasTrialDetail"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass to ListNasTrialDetailsRequest.page_token to obtain that page.
          type: string
      type: object
    GoogleCloudAiplatformV1ListNotebookRuntimeTemplatesResponse:
      description: Response message for NotebookService.ListNotebookRuntimeTemplates.
      properties:
        nextPageToken:
          description: A token to retrieve next page of results. Pass to ListNotebookRuntimeTemplatesRequest.page_token to obtain that page.
          type: string
        notebookRuntimeTemplates:
          description: List of NotebookRuntimeTemplates in the requested page.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1NotebookRuntimeTemplate"
          type: array
      type: object
    GoogleCloudAiplatformV1ListNotebookRuntimesResponse:
      description: Response message for NotebookService.ListNotebookRuntimes.
      properties:
        nextPageToken:
          description: A token to retrieve next page of results. Pass to ListNotebookRuntimesRequest.page_token to obtain that page.
          type: string
        notebookRuntimes:
          description: List of NotebookRuntimes in the requested page.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1NotebookRuntime"
          type: array
      type: object
    GoogleCloudAiplatformV1ListOptimalTrialsRequest:
      description: Request message for VizierService.ListOptimalTrials.
      properties: {}
      type: object
    GoogleCloudAiplatformV1ListOptimalTrialsResponse:
      description: Response message for VizierService.ListOptimalTrials.
      properties:
        optimalTrials:
          description: The pareto-optimal Trials for multiple objective Study or the optimal trial for single objective Study. The definition of pareto-optimal can be checked in wiki page. https://en.wikipedia.org/wiki/Pareto_efficiency
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Trial"
          type: array
      type: object
    GoogleCloudAiplatformV1ListPipelineJobsResponse:
      description: Response message for PipelineService.ListPipelineJobs
      properties:
        nextPageToken:
          description: A token to retrieve the next page of results. Pass to ListPipelineJobsRequest.page_token to obtain that page.
          type: string
        pipelineJobs:
          description: List of PipelineJobs in the requested page.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1PipelineJob"
          type: array
      type: object
    GoogleCloudAiplatformV1ListSavedQueriesResponse:
      description: Response message for DatasetService.ListSavedQueries.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        savedQueries:
          description: A list of SavedQueries that match the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SavedQuery"
          type: array
      type: object
    GoogleCloudAiplatformV1ListSchedulesResponse:
      description: Response message for ScheduleService.ListSchedules
      properties:
        nextPageToken:
          description: A token to retrieve the next page of results. Pass to ListSchedulesRequest.page_token to obtain that page.
          type: string
        schedules:
          description: List of Schedules in the requested page.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Schedule"
          type: array
      type: object
    GoogleCloudAiplatformV1ListSpecialistPoolsResponse:
      description: Response message for SpecialistPoolService.ListSpecialistPools.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        specialistPools:
          description: A list of SpecialistPools that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SpecialistPool"
          type: array
      type: object
    GoogleCloudAiplatformV1ListStudiesResponse:
      description: Response message for VizierService.ListStudies.
      properties:
        nextPageToken:
          description: Passes this token as the `page_token` field of the request for a subsequent call. If this field is omitted, there are no subsequent pages.
          type: string
        studies:
          description: The studies associated with the project.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Study"
          type: array
      type: object
    GoogleCloudAiplatformV1ListTensorboardExperimentsResponse:
      description: Response message for TensorboardService.ListTensorboardExperiments.
      properties:
        nextPageToken:
          description: A token, which can be sent as ListTensorboardExperimentsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        tensorboardExperiments:
          description: The TensorboardExperiments mathching the request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1TensorboardExperiment"
          type: array
      type: object
    GoogleCloudAiplatformV1ListTensorboardRunsResponse:
      description: Response message for TensorboardService.ListTensorboardRuns.
      properties:
        nextPageToken:
          description: A token, which can be sent as ListTensorboardRunsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        tensorboardRuns:
          description: The TensorboardRuns mathching the request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1TensorboardRun"
          type: array
      type: object
    GoogleCloudAiplatformV1ListTensorboardTimeSeriesResponse:
      description: Response message for TensorboardService.ListTensorboardTimeSeries.
      properties:
        nextPageToken:
          description: A token, which can be sent as ListTensorboardTimeSeriesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        tensorboardTimeSeries:
          description: The TensorboardTimeSeries mathching the request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeries"
          type: array
      type: object
    GoogleCloudAiplatformV1ListTensorboardsResponse:
      description: Response message for TensorboardService.ListTensorboards.
      properties:
        nextPageToken:
          description: A token, which can be sent as ListTensorboardsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        tensorboards:
          description: The Tensorboards mathching the request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Tensorboard"
          type: array
      type: object
    GoogleCloudAiplatformV1ListTrainingPipelinesResponse:
      description: Response message for PipelineService.ListTrainingPipelines
      properties:
        nextPageToken:
          description: A token to retrieve the next page of results. Pass to ListTrainingPipelinesRequest.page_token to obtain that page.
          type: string
        trainingPipelines:
          description: List of TrainingPipelines in the requested page.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1TrainingPipeline"
          type: array
      type: object
    GoogleCloudAiplatformV1ListTrialsResponse:
      description: Response message for VizierService.ListTrials.
      properties:
        nextPageToken:
          description: Pass this token as the `page_token` field of the request for a subsequent call. If this field is omitted, there are no subsequent pages.
          type: string
        trials:
          description: The Trials associated with the Study.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Trial"
          type: array
      type: object
    GoogleCloudAiplatformV1LookupStudyRequest:
      description: Request message for VizierService.LookupStudy.
      properties:
        displayName:
          description: Required. The user-defined display name of the Study
          type: string
      type: object
    GoogleCloudAiplatformV1MachineSpec:
      description: Specification of a single machine.
      properties:
        acceleratorCount:
          description: The number of accelerators to attach to the machine.
          format: int32
          type: integer
        acceleratorType:
          description: Immutable. The type of accelerator(s) that may be attached to the machine as per accelerator_count.
          enum:
            - ACCELERATOR_TYPE_UNSPECIFIED
            - NVIDIA_TESLA_K80
            - NVIDIA_TESLA_P100
            - NVIDIA_TESLA_V100
            - NVIDIA_TESLA_P4
            - NVIDIA_TESLA_T4
            - NVIDIA_TESLA_A100
            - NVIDIA_A100_80GB
            - NVIDIA_L4
            - NVIDIA_H100_80GB
            - TPU_V2
            - TPU_V3
            - TPU_V4_POD
          type: string
        machineType:
          description: Immutable. The type of the machine. See the [list of machine types supported for prediction](https://cloud.google.com/vertex-ai/docs/predictions/configure-compute#machine-types) See the [list of machine types supported for custom training](https://cloud.google.com/vertex-ai/docs/training/configure-compute#machine-types). For DeployedModel this field is optional, and the default value is `n1-standard-2`. For BatchPredictionJob or as part of WorkerPoolSpec this field is required.
          type: string
        tpuTopology:
          description: 'Immutable. The topology of the TPUs. Corresponds to the TPU topologies available from GKE. (Example: tpu_topology: "2x2x1").'
          type: string
      type: object
    GoogleCloudAiplatformV1ManualBatchTuningParameters:
      description: Manual batch tuning parameters.
      properties:
        batchSize:
          description: Immutable. The number of the records (e.g. instances) of the operation given in each batch to a machine replica. Machine type, and size of a single record should be considered when setting this parameter, higher value speeds up the batch operation's execution, but too high value will result in a whole batch not fitting in a machine's memory, and the whole operation will fail. The default value is 64.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1Measurement:
      description: A message representing a Measurement of a Trial. A Measurement contains the Metrics got by executing a Trial using suggested hyperparameter values.
      properties:
        elapsedDuration:
          description: Output only. Time that the Trial has been running at the point of this Measurement.
          format: google-duration
          readOnly: true
          type: string
        metrics:
          description: Output only. A list of metrics got by evaluating the objective functions using suggested Parameter values.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1MeasurementMetric"
          readOnly: true
          type: array
        stepCount:
          description: Output only. The number of steps the machine learning model has been trained for. Must be non-negative.
          format: int64
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1MeasurementMetric:
      description: A message representing a metric in the measurement.
      properties:
        metricId:
          description: Output only. The ID of the Metric. The Metric should be defined in StudySpec's Metrics.
          readOnly: true
          type: string
        value:
          description: Output only. The value for this metric.
          format: double
          readOnly: true
          type: number
      type: object
    GoogleCloudAiplatformV1MergeVersionAliasesRequest:
      description: Request message for ModelService.MergeVersionAliases.
      properties:
        versionAliases:
          description: "Required. The set of version aliases to merge. The alias should be at most 128 characters, and match `a-z{0,126}[a-z-0-9]`. Add the `-` prefix to an alias means removing that alias from the version. `-` is NOT counted in the 128 characters. Example: `-golden` means removing the `golden` alias from the version. There is NO ordering in aliases, which means 1) The aliases returned from GetModel API might not have the exactly same order from this MergeVersionAliases API. 2) Adding and deleting the same alias in the request is not recommended, and the 2 operations will be cancelled out."
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1MetadataSchema:
      description: Instance of a general MetadataSchema.
      properties:
        createTime:
          description: Output only. Timestamp when this MetadataSchema was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Description of the Metadata Schema
          type: string
        name:
          description: Output only. The resource name of the MetadataSchema.
          readOnly: true
          type: string
        schema:
          description: Required. The raw YAML string representation of the MetadataSchema. The combination of [MetadataSchema.version] and the schema name given by `title` in [MetadataSchema.schema] must be unique within a MetadataStore. The schema is defined as an OpenAPI 3.0.2 [MetadataSchema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject)
          type: string
        schemaType:
          description: The type of the MetadataSchema. This is a property that identifies which metadata types will use the MetadataSchema.
          enum:
            - METADATA_SCHEMA_TYPE_UNSPECIFIED
            - ARTIFACT_TYPE
            - EXECUTION_TYPE
            - CONTEXT_TYPE
          type: string
        schemaVersion:
          description: "The version of the MetadataSchema. The version's format must match the following regular expression: `^[0-9]+.+.+$`, which would allow to order/compare different versions. Example: 1.0.0, 1.0.1, etc."
          type: string
      type: object
    GoogleCloudAiplatformV1MetadataStore:
      description: Instance of a metadata store. Contains a set of metadata that can be queried.
      properties:
        createTime:
          description: Output only. Timestamp when this MetadataStore was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Description of the MetadataStore.
          type: string
        encryptionSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec"
          description: Customer-managed encryption key spec for a Metadata Store. If set, this Metadata Store and all sub-resources of this Metadata Store are secured using this key.
        name:
          description: Output only. The resource name of the MetadataStore instance.
          readOnly: true
          type: string
        state:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1MetadataStoreMetadataStoreState"
          description: Output only. State information of the MetadataStore.
          readOnly: true
        updateTime:
          description: Output only. Timestamp when this MetadataStore was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1MetadataStoreMetadataStoreState:
      description: Represents state information for a MetadataStore.
      properties:
        diskUtilizationBytes:
          description: The disk utilization of the MetadataStore in bytes.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1MigratableResource:
      description: Represents one resource that exists in automl.googleapis.com, datalabeling.googleapis.com or ml.googleapis.com.
      properties:
        automlDataset:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1MigratableResourceAutomlDataset"
          description: Output only. Represents one Dataset in automl.googleapis.com.
          readOnly: true
        automlModel:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1MigratableResourceAutomlModel"
          description: Output only. Represents one Model in automl.googleapis.com.
          readOnly: true
        dataLabelingDataset:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1MigratableResourceDataLabelingDataset"
          description: Output only. Represents one Dataset in datalabeling.googleapis.com.
          readOnly: true
        lastMigrateTime:
          description: Output only. Timestamp when the last migration attempt on this MigratableResource started. Will not be set if there's no migration attempt on this MigratableResource.
          format: google-datetime
          readOnly: true
          type: string
        lastUpdateTime:
          description: Output only. Timestamp when this MigratableResource was last updated.
          format: google-datetime
          readOnly: true
          type: string
        mlEngineModelVersion:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1MigratableResourceMlEngineModelVersion"
          description: Output only. Represents one Version in ml.googleapis.com.
          readOnly: true
      type: object
    GoogleCloudAiplatformV1MigratableResourceAutomlDataset:
      description: Represents one Dataset in automl.googleapis.com.
      properties:
        dataset:
          description: "Full resource name of automl Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`."
          type: string
        datasetDisplayName:
          description: The Dataset's display name in automl.googleapis.com.
          type: string
      type: object
    GoogleCloudAiplatformV1MigratableResourceAutomlModel:
      description: Represents one Model in automl.googleapis.com.
      properties:
        model:
          description: "Full resource name of automl Model. Format: `projects/{project}/locations/{location}/models/{model}`."
          type: string
        modelDisplayName:
          description: The Model's display name in automl.googleapis.com.
          type: string
      type: object
    GoogleCloudAiplatformV1MigratableResourceDataLabelingDataset:
      description: Represents one Dataset in datalabeling.googleapis.com.
      properties:
        dataLabelingAnnotatedDatasets:
          description: The migratable AnnotatedDataset in datalabeling.googleapis.com belongs to the data labeling Dataset.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset"
          type: array
        dataset:
          description: "Full resource name of data labeling Dataset. Format: `projects/{project}/datasets/{dataset}`."
          type: string
        datasetDisplayName:
          description: The Dataset's display name in datalabeling.googleapis.com.
          type: string
      type: object
    GoogleCloudAiplatformV1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset:
      description: Represents one AnnotatedDataset in datalabeling.googleapis.com.
      properties:
        annotatedDataset:
          description: "Full resource name of data labeling AnnotatedDataset. Format: `projects/{project}/datasets/{dataset}/annotatedDatasets/{annotated_dataset}`."
          type: string
        annotatedDatasetDisplayName:
          description: The AnnotatedDataset's display name in datalabeling.googleapis.com.
          type: string
      type: object
    GoogleCloudAiplatformV1MigratableResourceMlEngineModelVersion:
      description: Represents one model Version in ml.googleapis.com.
      properties:
        endpoint:
          description: "The ml.googleapis.com endpoint that this model Version currently lives in. Example values: * ml.googleapis.com * us-centrall-ml.googleapis.com * europe-west4-ml.googleapis.com * asia-east1-ml.googleapis.com"
          type: string
        version:
          description: "Full resource name of ml engine model Version. Format: `projects/{project}/models/{model}/versions/{version}`."
          type: string
      type: object
    GoogleCloudAiplatformV1MigrateResourceRequest:
      description: Config of migrating one resource from automl.googleapis.com, datalabeling.googleapis.com and ml.googleapis.com to Vertex AI.
      properties:
        migrateAutomlDatasetConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlDatasetConfig"
          description: Config for migrating Dataset in automl.googleapis.com to Vertex AI's Dataset.
        migrateAutomlModelConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlModelConfig"
          description: Config for migrating Model in automl.googleapis.com to Vertex AI's Model.
        migrateDataLabelingDatasetConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfig"
          description: Config for migrating Dataset in datalabeling.googleapis.com to Vertex AI's Dataset.
        migrateMlEngineModelVersionConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequestMigrateMlEngineModelVersionConfig"
          description: Config for migrating Version in ml.googleapis.com to Vertex AI's Model.
      type: object
    GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlDatasetConfig:
      description: Config for migrating Dataset in automl.googleapis.com to Vertex AI's Dataset.
      properties:
        dataset:
          description: "Required. Full resource name of automl Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`."
          type: string
        datasetDisplayName:
          description: Required. Display name of the Dataset in Vertex AI. System will pick a display name if unspecified.
          type: string
      type: object
    GoogleCloudAiplatformV1MigrateResourceRequestMigrateAutomlModelConfig:
      description: Config for migrating Model in automl.googleapis.com to Vertex AI's Model.
      properties:
        model:
          description: "Required. Full resource name of automl Model. Format: `projects/{project}/locations/{location}/models/{model}`."
          type: string
        modelDisplayName:
          description: Optional. Display name of the model in Vertex AI. System will pick a display name if unspecified.
          type: string
      type: object
    GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfig:
      description: Config for migrating Dataset in datalabeling.googleapis.com to Vertex AI's Dataset.
      properties:
        dataset:
          description: "Required. Full resource name of data labeling Dataset. Format: `projects/{project}/datasets/{dataset}`."
          type: string
        datasetDisplayName:
          description: Optional. Display name of the Dataset in Vertex AI. System will pick a display name if unspecified.
          type: string
        migrateDataLabelingAnnotatedDatasetConfigs:
          description: Optional. Configs for migrating AnnotatedDataset in datalabeling.googleapis.com to Vertex AI's SavedQuery. The specified AnnotatedDatasets have to belong to the datalabeling Dataset.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig"
          type: array
      type: object
    GoogleCloudAiplatformV1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig:
      description: Config for migrating AnnotatedDataset in datalabeling.googleapis.com to Vertex AI's SavedQuery.
      properties:
        annotatedDataset:
          description: "Required. Full resource name of data labeling AnnotatedDataset. Format: `projects/{project}/datasets/{dataset}/annotatedDatasets/{annotated_dataset}`."
          type: string
      type: object
    GoogleCloudAiplatformV1MigrateResourceRequestMigrateMlEngineModelVersionConfig:
      description: Config for migrating version in ml.googleapis.com to Vertex AI's Model.
      properties:
        endpoint:
          description: "Required. The ml.googleapis.com endpoint that this model version should be migrated from. Example values: * ml.googleapis.com * us-centrall-ml.googleapis.com * europe-west4-ml.googleapis.com * asia-east1-ml.googleapis.com"
          type: string
        modelDisplayName:
          description: Required. Display name of the model in Vertex AI. System will pick a display name if unspecified.
          type: string
        modelVersion:
          description: "Required. Full resource name of ml engine model version. Format: `projects/{project}/models/{model}/versions/{version}`."
          type: string
      type: object
    GoogleCloudAiplatformV1MigrateResourceResponse:
      description: Describes a successfully migrated resource.
      properties:
        dataset:
          description: Migrated Dataset's resource name.
          type: string
        migratableResource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1MigratableResource"
          description: Before migration, the identifier in ml.googleapis.com, automl.googleapis.com or datalabeling.googleapis.com.
        model:
          description: Migrated Model's resource name.
          type: string
      type: object
    GoogleCloudAiplatformV1Model:
      description: A trained machine learning Model.
      properties:
        artifactUri:
          description: Immutable. The path to the directory containing the Model artifact and any of its supporting files. Not required for AutoML Models.
          type: string
        containerSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelContainerSpec"
          description: Input only. The specification of the container that is to be used when deploying this Model. The specification is ingested upon ModelService.UploadModel, and all binaries it contains are copied and stored internally by Vertex AI. Not required for AutoML Models.
        createTime:
          description: Output only. Timestamp when this Model was uploaded into Vertex AI.
          format: google-datetime
          readOnly: true
          type: string
        dataStats:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelDataStats"
          description: Stats of data used for training or evaluating the Model. Only populated when the Model is trained by a TrainingPipeline with data_input_config.
        deployedModels:
          description: Output only. The pointers to DeployedModels created from this Model. Note that Model could have been deployed to Endpoints in different Locations.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1DeployedModelRef"
          readOnly: true
          type: array
        description:
          description: The description of the Model.
          type: string
        displayName:
          description: Required. The display name of the Model. The name can be up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        encryptionSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec"
          description: Customer-managed encryption key spec for a Model. If set, this Model and all sub-resources of this Model will be secured by this key.
        etag:
          description: Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        explanationSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ExplanationSpec"
          description: The default explanation specification for this Model. The Model can be used for requesting explanation after being deployed if it is populated. The Model can be used for batch explanation if it is populated. All fields of the explanation_spec can be overridden by explanation_spec of DeployModelRequest.deployed_model, or explanation_spec of BatchPredictionJob. If the default explanation specification is not set for this Model, this Model can still be used for requesting explanation by setting explanation_spec of DeployModelRequest.deployed_model and for batch explanation by setting explanation_spec of BatchPredictionJob.
        labels:
          additionalProperties:
            type: string
          description: The labels with user-defined metadata to organize your Models. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
          type: object
        metadata:
          description: Immutable. An additional information about the Model; the schema of the metadata can be found in metadata_schema. Unset if the Model does not have any additional information.
        metadataArtifact:
          description: Output only. The resource name of the Artifact that was created in MetadataStore when creating the Model. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.
          readOnly: true
          type: string
        metadataSchemaUri:
          description: "Immutable. Points to a YAML file stored on Google Cloud Storage describing additional information about the Model, that is specific to it. Unset if the Model does not have any additional information. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI, if no additional metadata is needed, this field is set to an empty string. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access."
          type: string
        modelSourceInfo:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelSourceInfo"
          description: Output only. Source of a model. It can either be automl training pipeline, custom training pipeline, BigQuery ML, or saved and tuned from Genie or Model Garden.
          readOnly: true
        name:
          description: The resource name of the Model.
          type: string
        originalModelInfo:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelOriginalModelInfo"
          description: Output only. If this Model is a copy of another Model, this contains info about the original.
          readOnly: true
        pipelineJob:
          description: Optional. This field is populated if the model is produced by a pipeline job.
          type: string
        predictSchemata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PredictSchemata"
          description: The schemata that describe formats of the Model's predictions and explanations as given and returned via PredictionService.Predict and PredictionService.Explain.
        supportedDeploymentResourcesTypes:
          description: Output only. When this Model is deployed, its prediction resources are described by the `prediction_resources` field of the Endpoint.deployed_models object. Because not all Models support all resource configuration types, the configuration types this Model supports are listed here. If no configuration types are listed, the Model cannot be deployed to an Endpoint and does not support online predictions (PredictionService.Predict or PredictionService.Explain). Such a Model can serve predictions by using a BatchPredictionJob, if it has at least one entry each in supported_input_storage_formats and supported_output_storage_formats.
          items:
            enum:
              - DEPLOYMENT_RESOURCES_TYPE_UNSPECIFIED
              - DEDICATED_RESOURCES
              - AUTOMATIC_RESOURCES
              - SHARED_RESOURCES
            type: string
          readOnly: true
          type: array
        supportedExportFormats:
          description: Output only. The formats in which this Model may be exported. If empty, this Model is not available for export.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelExportFormat"
          readOnly: true
          type: array
        supportedInputStorageFormats:
          description: "Output only. The formats this Model supports in BatchPredictionJob.input_config. If PredictSchemata.instance_schema_uri exists, the instances should be given as per that schema. The possible formats are: * `jsonl` The JSON Lines format, where each instance is a single line. Uses GcsSource. * `csv` The CSV format, where each instance is a single comma-separated line. The first line in the file is the header, containing comma-separated field names. Uses GcsSource. * `tf-record` The TFRecord format, where each instance is a single record in tfrecord syntax. Uses GcsSource. * `tf-record-gzip` Similar to `tf-record`, but the file is gzipped. Uses GcsSource. * `bigquery` Each instance is a single row in BigQuery. Uses BigQuerySource. * `file-list` Each line of the file is the location of an instance to process, uses `gcs_source` field of the InputConfig object. If this Model doesn't support any of these formats it means it cannot be used with a BatchPredictionJob. However, if it has supported_deployment_resources_types, it could serve online predictions by using PredictionService.Predict or PredictionService.Explain."
          items:
            type: string
          readOnly: true
          type: array
        supportedOutputStorageFormats:
          description: "Output only. The formats this Model supports in BatchPredictionJob.output_config. If both PredictSchemata.instance_schema_uri and PredictSchemata.prediction_schema_uri exist, the predictions are returned together with their instances. In other words, the prediction has the original instance data first, followed by the actual prediction content (as per the schema). The possible formats are: * `jsonl` The JSON Lines format, where each prediction is a single line. Uses GcsDestination. * `csv` The CSV format, where each prediction is a single comma-separated line. The first line in the file is the header, containing comma-separated field names. Uses GcsDestination. * `bigquery` Each prediction is a single row in a BigQuery table, uses BigQueryDestination . If this Model doesn't support any of these formats it means it cannot be used with a BatchPredictionJob. However, if it has supported_deployment_resources_types, it could serve online predictions by using PredictionService.Predict or PredictionService.Explain."
          items:
            type: string
          readOnly: true
          type: array
        trainingPipeline:
          description: Output only. The resource name of the TrainingPipeline that uploaded this Model, if any.
          readOnly: true
          type: string
        updateTime:
          description: Output only. Timestamp when this Model was most recently updated.
          format: google-datetime
          readOnly: true
          type: string
        versionAliases:
          description: User provided version aliases so that a model version can be referenced via alias (i.e. `projects/{project}/locations/{location}/models/{model_id}@{version_alias}` instead of auto-generated version id (i.e. `projects/{project}/locations/{location}/models/{model_id}@{version_id})`. The format is a-z{0,126}[a-z0-9] to distinguish from version_id. A default version alias will be created for the first version of the model, and there must be exactly one default version alias for a model.
          items:
            type: string
          type: array
        versionCreateTime:
          description: Output only. Timestamp when this version was created.
          format: google-datetime
          readOnly: true
          type: string
        versionDescription:
          description: The description of this version.
          type: string
        versionId:
          description: Output only. Immutable. The version ID of the model. A new version is committed when a new model version is uploaded or trained under an existing model id. It is an auto-incrementing decimal number in string representation.
          readOnly: true
          type: string
        versionUpdateTime:
          description: Output only. Timestamp when this version was most recently updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1ModelContainerSpec:
      description: Specification of a container for serving predictions. Some fields in this message correspond to fields in the [Kubernetes Container v1 core specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
      properties:
        args:
          description: "Immutable. Specifies arguments for the command that runs when the container starts. This overrides the container's [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd). Specify this field as an array of executable and arguments, similar to a Docker `CMD`'s \"default parameters\" form. If you don't specify this field but do specify the command field, then the command from the `command` field runs without any additional arguments. See the [Kubernetes documentation about how the `command` and `args` fields interact with a container's `ENTRYPOINT` and `CMD`](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes). If you don't specify this field and don't specify the `command` field, then the container's [`ENTRYPOINT`](https://docs.docker.com/engine/reference/builder/#cmd) and `CMD` determine what runs based on their default behavior. See the Docker documentation about [how `CMD` and `ENTRYPOINT` interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact). In this field, you can reference [environment variables set by Vertex AI](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables) and environment variables set in the env field. You cannot reference environment variables set in the Docker image. In order for environment variables to be expanded, reference them by using the following syntax: $( VARIABLE_NAME) Note that this differs from Bash variable expansion, which does not use parentheses. If a variable cannot be resolved, the reference in the input string is used unchanged. To avoid variable expansion, you can escape this syntax with `$$`; for example: $$(VARIABLE_NAME) This field corresponds to the `args` field of the Kubernetes Containers [v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core)."
          items:
            type: string
          type: array
        command:
          description: "Immutable. Specifies the command that runs when the container starts. This overrides the container's [ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint). Specify this field as an array of executable and arguments, similar to a Docker `ENTRYPOINT`'s \"exec\" form, not its \"shell\" form. If you do not specify this field, then the container's `ENTRYPOINT` runs, in conjunction with the args field or the container's [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd), if either exists. If this field is not specified and the container does not have an `ENTRYPOINT`, then refer to the Docker documentation about [how `CMD` and `ENTRYPOINT` interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact). If you specify this field, then you can also specify the `args` field to provide additional arguments for this command. However, if you specify this field, then the container's `CMD` is ignored. See the [Kubernetes documentation about how the `command` and `args` fields interact with a container's `ENTRYPOINT` and `CMD`](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes). In this field, you can reference [environment variables set by Vertex AI](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables) and environment variables set in the env field. You cannot reference environment variables set in the Docker image. In order for environment variables to be expanded, reference them by using the following syntax: $( VARIABLE_NAME) Note that this differs from Bash variable expansion, which does not use parentheses. If a variable cannot be resolved, the reference in the input string is used unchanged. To avoid variable expansion, you can escape this syntax with `$$`; for example: $$(VARIABLE_NAME) This field corresponds to the `command` field of the Kubernetes Containers [v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core)."
          items:
            type: string
          type: array
        deploymentTimeout:
          description: Immutable. Deployment timeout. Limit for deployment timeout is 2 hours.
          format: google-duration
          type: string
        env:
          description: 'Immutable. List of environment variables to set in the container. After the container starts running, code running in the container can read these environment variables. Additionally, the command and args fields can reference these variables. Later entries in this list can also reference earlier entries. For example, the following example sets the variable `VAR_2` to have the value `foo bar`: ```json [ { "name": "VAR_1", "value": "foo" }, { "name": "VAR_2", "value": "$(VAR_1) bar" } ] ``` If you switch the order of the variables in the example, then the expansion does not occur. This field corresponds to the `env` field of the Kubernetes Containers [v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).'
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1EnvVar"
          type: array
        grpcPorts:
          description: Immutable. List of ports to expose from the container. Vertex AI sends gRPC prediction requests that it receives to the first port on this list. Vertex AI also sends liveness and health checks to this port. If you do not specify this field, gRPC requests to the container will be disabled. Vertex AI does not use ports other than the first one listed. This field corresponds to the `ports` field of the Kubernetes Containers v1 core API.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Port"
          type: array
        healthProbe:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Probe"
          description: Immutable. Specification for Kubernetes readiness probe.
        healthRoute:
          description: "Immutable. HTTP path on the container to send health checks to. Vertex AI intermittently sends GET requests to this path on the container's IP address and port to check that the container is healthy. Read more about [health checks](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#health). For example, if you set this field to `/bar`, then Vertex AI intermittently sends a GET request to the `/bar` path on the port of your container specified by the first value of this `ModelContainerSpec`'s ports field. If you don't specify this field, it defaults to the following value when you deploy this Model to an Endpoint: /v1/endpoints/ENDPOINT/deployedModels/ DEPLOYED_MODEL:predict The placeholders in this value are replaced as follows: * ENDPOINT: The last segment (following `endpoints/`)of the Endpoint.name][] field of the Endpoint where this Model has been deployed. (Vertex AI makes this value available to your container code as the [`AIP_ENDPOINT_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).) * DEPLOYED_MODEL: DeployedModel.id of the `DeployedModel`. (Vertex AI makes this value available to your container code as the [`AIP_DEPLOYED_MODEL_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)"
          type: string
        imageUri:
          description: Required. Immutable. URI of the Docker image to be used as the custom container for serving predictions. This URI must identify an image in Artifact Registry or Container Registry. Learn more about the [container publishing requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#publishing), including permissions requirements for the Vertex AI Service Agent. The container image is ingested upon ModelService.UploadModel, stored internally, and this original path is afterwards not used. To learn about the requirements for the Docker image itself, see [Custom container requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#). You can use the URI to one of Vertex AI's [pre-built container images for prediction](https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers) in this field.
          type: string
        ports:
          description: 'Immutable. List of ports to expose from the container. Vertex AI sends any prediction requests that it receives to the first port on this list. Vertex AI also sends [liveness and health checks](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#liveness) to this port. If you do not specify this field, it defaults to following value: ```json [ { "containerPort": 8080 } ] ``` Vertex AI does not use ports other than the first one listed. This field corresponds to the `ports` field of the Kubernetes Containers [v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).'
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Port"
          type: array
        predictRoute:
          description: "Immutable. HTTP path on the container to send prediction requests to. Vertex AI forwards requests sent using projects.locations.endpoints.predict to this path on the container's IP address and port. Vertex AI then returns the container's response in the API response. For example, if you set this field to `/foo`, then when Vertex AI receives a prediction request, it forwards the request body in a POST request to the `/foo` path on the port of your container specified by the first value of this `ModelContainerSpec`'s ports field. If you don't specify this field, it defaults to the following value when you deploy this Model to an Endpoint: /v1/endpoints/ENDPOINT/deployedModels/DEPLOYED_MODEL:predict The placeholders in this value are replaced as follows: * ENDPOINT: The last segment (following `endpoints/`)of the Endpoint.name][] field of the Endpoint where this Model has been deployed. (Vertex AI makes this value available to your container code as the [`AIP_ENDPOINT_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).) * DEPLOYED_MODEL: DeployedModel.id of the `DeployedModel`. (Vertex AI makes this value available to your container code as the [`AIP_DEPLOYED_MODEL_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)"
          type: string
        sharedMemorySizeMb:
          description: Immutable. The amount of the VM memory to reserve as the shared memory for the model in megabytes.
          format: int64
          type: string
        startupProbe:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Probe"
          description: Immutable. Specification for Kubernetes startup probe.
      type: object
    GoogleCloudAiplatformV1ModelDataStats:
      description: Stats of data used for train or evaluate the Model.
      properties:
        testAnnotationsCount:
          description: Number of Annotations that are used for evaluating this Model. If the Model is evaluated multiple times, this will be the number of test Annotations used by the first evaluation. If the Model is not evaluated, the number is 0.
          format: int64
          type: string
        testDataItemsCount:
          description: Number of DataItems that were used for evaluating this Model. If the Model is evaluated multiple times, this will be the number of test DataItems used by the first evaluation. If the Model is not evaluated, the number is 0.
          format: int64
          type: string
        trainingAnnotationsCount:
          description: Number of Annotations that are used for training this Model.
          format: int64
          type: string
        trainingDataItemsCount:
          description: Number of DataItems that were used for training this Model.
          format: int64
          type: string
        validationAnnotationsCount:
          description: Number of Annotations that are used for validating this Model during training.
          format: int64
          type: string
        validationDataItemsCount:
          description: Number of DataItems that were used for validating this Model during training.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable:
      description: ModelDeploymentMonitoringBigQueryTable specifies the BigQuery table name as well as some information of the logs stored in this table.
      properties:
        bigqueryTablePath:
          description: "The created BigQuery table to store logs. Customer could do their own query & analysis. Format: `bq://.model_deployment_monitoring_._`"
          type: string
        logSource:
          description: The source of log.
          enum:
            - LOG_SOURCE_UNSPECIFIED
            - TRAINING
            - SERVING
          type: string
        logType:
          description: The type of log.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - PREDICT
            - EXPLAIN
          type: string
        requestResponseLoggingSchemaVersion:
          description: Output only. The schema version of the request/response logging BigQuery table. Default to v1 if unset.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1ModelDeploymentMonitoringJob:
      description: Represents a job that runs periodically to monitor the deployed models in an endpoint. It will analyze the logged training & prediction data to detect any abnormal behaviors.
      properties:
        analysisInstanceSchemaUri:
          description: YAML schema file uri describing the format of a single instance that you want Tensorflow Data Validation (TFDV) to analyze. If this field is empty, all the feature data types are inferred from predict_instance_schema_uri, meaning that TFDV will use the data in the exact format(data type) as prediction request/response. If there are any data type differences between predict instance and TFDV instance, this field can be used to override the schema. For models trained with Vertex AI, this field must be set as all the fields in predict instance formatted as string.
          type: string
        bigqueryTables:
          description: "Output only. The created bigquery tables for the job under customer project. Customer could do their own query & analysis. There could be 4 log tables in maximum: 1. Training data logging predict request/response 2. Serving data logging predict request/response"
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable"
          readOnly: true
          type: array
        createTime:
          description: Output only. Timestamp when this ModelDeploymentMonitoringJob was created.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: Required. The user-defined name of the ModelDeploymentMonitoringJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a ModelDeploymentMonitoringJob.
          type: string
        enableMonitoringPipelineLogs:
          description: If true, the scheduled monitoring pipeline logs are sent to Google Cloud Logging, including pipeline status and anomalies detected. Please note the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging#pricing).
          type: boolean
        encryptionSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec"
          description: Customer-managed encryption key spec for a ModelDeploymentMonitoringJob. If set, this ModelDeploymentMonitoringJob and all sub-resources of this ModelDeploymentMonitoringJob will be secured by this key.
        endpoint:
          description: "Required. Endpoint resource name. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`"
          type: string
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Output only. Only populated when the job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
          readOnly: true
        labels:
          additionalProperties:
            type: string
          description: The labels with user-defined metadata to organize your ModelDeploymentMonitoringJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
          type: object
        latestMonitoringPipelineMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata"
          description: Output only. Latest triggered monitoring pipeline metadata.
          readOnly: true
        logTtl:
          description: "The TTL of BigQuery tables in user projects which stores logs. A day is the basic unit of the TTL and we take the ceil of TTL/86400(a day). e.g. { second: 3600} indicates ttl = 1 day."
          format: google-duration
          type: string
        loggingSamplingStrategy:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SamplingStrategy"
          description: Required. Sample Strategy for logging.
        modelDeploymentMonitoringObjectiveConfigs:
          description: Required. The config for monitoring objectives. This is a per DeployedModel config. Each DeployedModel needs to be configured separately.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringObjectiveConfig"
          type: array
        modelDeploymentMonitoringScheduleConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig"
          description: Required. Schedule config for running the monitoring job.
        modelMonitoringAlertConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelMonitoringAlertConfig"
          description: Alert config for model monitoring.
        name:
          description: Output only. Resource name of a ModelDeploymentMonitoringJob.
          readOnly: true
          type: string
        nextScheduleTime:
          description: Output only. Timestamp when this monitoring pipeline will be scheduled to run for the next round.
          format: google-datetime
          readOnly: true
          type: string
        predictInstanceSchemaUri:
          description: YAML schema file uri describing the format of a single instance, which are given to format this Endpoint's prediction (and explanation). If not set, we will generate predict schema from collected predict requests.
          type: string
        samplePredictInstance:
          description: Sample Predict instance, same format as PredictRequest.instances, this can be set as a replacement of ModelDeploymentMonitoringJob.predict_instance_schema_uri. If not set, we will generate predict schema from collected predict requests.
        scheduleState:
          description: Output only. Schedule state when the monitoring job is in Running state.
          enum:
            - MONITORING_SCHEDULE_STATE_UNSPECIFIED
            - PENDING
            - OFFLINE
            - RUNNING
          readOnly: true
          type: string
        state:
          description: Output only. The detailed state of the monitoring job. When the job is still creating, the state will be 'PENDING'. Once the job is successfully created, the state will be 'RUNNING'. Pause the job, the state will be 'PAUSED'. Resume the job, the state will return to 'RUNNING'.
          enum:
            - JOB_STATE_UNSPECIFIED
            - JOB_STATE_QUEUED
            - JOB_STATE_PENDING
            - JOB_STATE_RUNNING
            - JOB_STATE_SUCCEEDED
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLING
            - JOB_STATE_CANCELLED
            - JOB_STATE_PAUSED
            - JOB_STATE_EXPIRED
            - JOB_STATE_UPDATING
            - JOB_STATE_PARTIALLY_SUCCEEDED
          readOnly: true
          type: string
        statsAnomaliesBaseDirectory:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GcsDestination"
          description: Stats anomalies base folder path.
        updateTime:
          description: Output only. Timestamp when this ModelDeploymentMonitoringJob was updated most recently.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata:
      description: All metadata of most recent monitoring pipelines.
      properties:
        runTime:
          description: The time that most recent monitoring pipelines that is related to this run.
          format: google-datetime
          type: string
        status:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The status of the most recent monitoring pipeline.
      type: object
    GoogleCloudAiplatformV1ModelDeploymentMonitoringObjectiveConfig:
      description: ModelDeploymentMonitoringObjectiveConfig contains the pair of deployed_model_id to ModelMonitoringObjectiveConfig.
      properties:
        deployedModelId:
          description: The DeployedModel ID of the objective config.
          type: string
        objectiveConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelMonitoringObjectiveConfig"
          description: The objective config of for the modelmonitoring job of this deployed model.
      type: object
    GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig:
      description: The config for scheduling monitoring job.
      properties:
        monitorInterval:
          description: Required. The model monitoring job scheduling interval. It will be rounded up to next full hour. This defines how often the monitoring jobs are triggered.
          format: google-duration
          type: string
        monitorWindow:
          description: The time window of the prediction data being included in each prediction dataset. This window specifies how long the data should be collected from historical model results for each run. If not set, ModelDeploymentMonitoringScheduleConfig.monitor_interval will be used. e.g. If currently the cutoff time is 2022-01-08 14:30:00 and the monitor_window is set to be 3600, then data from 2022-01-08 13:30:00 to 2022-01-08 14:30:00 will be retrieved and aggregated to calculate the monitoring statistics.
          format: google-duration
          type: string
      type: object
    GoogleCloudAiplatformV1ModelEvaluation:
      description: A collection of metrics calculated by comparing Model's predictions on all of the test data against annotations from the test data.
      properties:
        annotationSchemaUri:
          description: Points to a YAML file stored on Google Cloud Storage describing EvaluatedDataItemView.predictions, EvaluatedDataItemView.ground_truths, EvaluatedAnnotation.predictions, and EvaluatedAnnotation.ground_truths. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). This field is not populated if there are neither EvaluatedDataItemViews nor EvaluatedAnnotations under this ModelEvaluation.
          type: string
        createTime:
          description: Output only. Timestamp when this ModelEvaluation was created.
          format: google-datetime
          readOnly: true
          type: string
        dataItemSchemaUri:
          description: Points to a YAML file stored on Google Cloud Storage describing EvaluatedDataItemView.data_item_payload and EvaluatedAnnotation.data_item_payload. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). This field is not populated if there are neither EvaluatedDataItemViews nor EvaluatedAnnotations under this ModelEvaluation.
          type: string
        displayName:
          description: The display name of the ModelEvaluation.
          type: string
        explanationSpecs:
          description: Describes the values of ExplanationSpec that are used for explaining the predicted values on the evaluated data.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelEvaluationModelEvaluationExplanationSpec"
          type: array
        metadata:
          description: The metadata of the ModelEvaluation. For the ModelEvaluation uploaded from Managed Pipeline, metadata contains a structured value with keys of "pipeline_job_id", "evaluation_dataset_type", "evaluation_dataset_path", "row_based_metrics_path".
        metrics:
          description: Evaluation metrics of the Model. The schema of the metrics is stored in metrics_schema_uri
        metricsSchemaUri:
          description: Points to a YAML file stored on Google Cloud Storage describing the metrics of this ModelEvaluation. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
          type: string
        modelExplanation:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelExplanation"
          description: "Aggregated explanation metrics for the Model's prediction output over the data this ModelEvaluation uses. This field is populated only if the Model is evaluated with explanations, and only for AutoML tabular Models. "
        name:
          description: Output only. The resource name of the ModelEvaluation.
          readOnly: true
          type: string
        sliceDimensions:
          description: All possible dimensions of ModelEvaluationSlices. The dimensions can be used as the filter of the ModelService.ListModelEvaluationSlices request, in the form of `slice.dimension = `.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1ModelEvaluationModelEvaluationExplanationSpec:
      properties:
        explanationSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ExplanationSpec"
          description: Explanation spec details.
        explanationType:
          description: "Explanation type. For AutoML Image Classification models, possible values are: * `image-integrated-gradients` * `image-xrai`"
          type: string
      type: object
    GoogleCloudAiplatformV1ModelEvaluationSlice:
      description: A collection of metrics calculated by comparing Model's predictions on a slice of the test data against ground truth annotations.
      properties:
        createTime:
          description: Output only. Timestamp when this ModelEvaluationSlice was created.
          format: google-datetime
          readOnly: true
          type: string
        metrics:
          description: Output only. Sliced evaluation metrics of the Model. The schema of the metrics is stored in metrics_schema_uri
          readOnly: true
        metricsSchemaUri:
          description: Output only. Points to a YAML file stored on Google Cloud Storage describing the metrics of this ModelEvaluationSlice. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
          readOnly: true
          type: string
        modelExplanation:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelExplanation"
          description: Output only. Aggregated explanation metrics for the Model's prediction output over the data this ModelEvaluation uses. This field is populated only if the Model is evaluated with explanations, and only for tabular Models.
          readOnly: true
        name:
          description: Output only. The resource name of the ModelEvaluationSlice.
          readOnly: true
          type: string
        slice:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSliceSlice"
          description: Output only. The slice of the test data that is used to evaluate the Model.
          readOnly: true
      type: object
    GoogleCloudAiplatformV1ModelEvaluationSliceSlice:
      description: Definition of a slice.
      properties:
        dimension:
          description: "Output only. The dimension of the slice. Well-known dimensions are: * `annotationSpec`: This slice is on the test data that has either ground truth or prediction with AnnotationSpec.display_name equals to value. * `slice`: This slice is a user customized slice defined by its SliceSpec."
          readOnly: true
          type: string
        sliceSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpec"
          description: Output only. Specification for how the data was sliced.
          readOnly: true
        value:
          description: Output only. The value of the dimension in this slice.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpec:
      description: Specification for how the data should be sliced.
      properties:
        configs:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig"
          description: Mapping configuration for this SliceSpec. The key is the name of the feature. By default, the key will be prefixed by "instance" as a dictionary prefix for Vertex Batch Predictions output format.
          type: object
      type: object
    GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange:
      description: A range of values for slice(s). `low` is inclusive, `high` is exclusive.
      properties:
        high:
          description: Exclusive high value for the range.
          format: float
          type: number
        low:
          description: Inclusive low value for the range.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecSliceConfig:
      description: 'Specification message containing the config for this SliceSpec. When `kind` is selected as `value` and/or `range`, only a single slice will be computed. When `all_values` is present, a separate slice will be computed for each possible label/value for the corresponding key in `config`. Examples, with feature zip_code with values 12345, 23334, 88888 and feature country with values "US", "Canada", "Mexico" in the dataset: Example 1: { "zip_code": { "value": { "float_value": 12345.0 } } } A single slice for any data with zip_code 12345 in the dataset. Example 2: { "zip_code": { "range": { "low": 12345, "high": 20000 } } } A single slice containing data where the zip_codes between 12345 and 20000 For this example, data with the zip_code of 12345 will be in this slice. Example 3: { "zip_code": { "range": { "low": 10000, "high": 20000 } }, "country": { "value": { "string_value": "US" } } } A single slice containing data where the zip_codes between 10000 and 20000 has the country "US". For this example, data with the zip_code of 12345 and country "US" will be in this slice. Example 4: { "country": {"all_values": { "value": true } } } Three slices are computed, one for each unique country in the dataset. Example 5: { "country": { "all_values": { "value": true } }, "zip_code": { "value": { "float_value": 12345.0 } } } Three slices are computed, one for each unique country in the dataset where the zip_code is also 12345. For this example, data with zip_code 12345 and country "US" will be in one slice, zip_code 12345 and country "Canada" in another slice, and zip_code 12345 and country "Mexico" in another slice, totaling 3 slices.'
      properties:
        allValues:
          description: 'If all_values is set to true, then all possible labels of the keyed feature will have another slice computed. Example: `{"all_values":{"value":true}}`'
          type: boolean
        range:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange"
          description: 'A range of values for a numerical feature. Example: `{"range":{"low":10000.0,"high":50000.0}}` will capture 12345 and 23334 in the slice.'
        value:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecValue"
          description: 'A unique specific value for a given feature. Example: `{ "value": { "string_value": "12345" } }`'
      type: object
    GoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecValue:
      description: Single value that supports strings and floats.
      properties:
        floatValue:
          description: Float type.
          format: float
          type: number
        stringValue:
          description: String type.
          type: string
      type: object
    GoogleCloudAiplatformV1ModelExplanation:
      description: Aggregated explanation metrics for a Model over a set of instances.
      properties:
        meanAttributions:
          description: "Output only. Aggregated attributions explaining the Model's prediction outputs over the set of instances. The attributions are grouped by outputs. For Models that predict only one output, such as regression Models that predict only one score, there is only one attibution that explains the predicted output. For Models that predict multiple outputs, such as multiclass Models that predict multiple classes, each element explains one specific item. Attribution.output_index can be used to identify which output this attribution is explaining. The baselineOutputValue, instanceOutputValue and featureAttributions fields are averaged over the test data. NOTE: Currently AutoML tabular classification Models produce only one attribution, which averages attributions over all the classes it predicts. Attribution.approximation_error is not populated."
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Attribution"
          readOnly: true
          type: array
      type: object
    GoogleCloudAiplatformV1ModelExportFormat:
      description: Represents export format supported by the Model. All formats export to Google Cloud Storage.
      properties:
        exportableContents:
          description: Output only. The content of this Model that may be exported.
          items:
            enum:
              - EXPORTABLE_CONTENT_UNSPECIFIED
              - ARTIFACT
              - IMAGE
            type: string
          readOnly: true
          type: array
        id:
          description: "Output only. The ID of the export format. The possible format IDs are: * `tflite` Used for Android mobile devices. * `edgetpu-tflite` Used for [Edge TPU](https://cloud.google.com/edge-tpu/) devices. * `tf-saved-model` A tensorflow model in SavedModel format. * `tf-js` A [TensorFlow.js](https://www.tensorflow.org/js) model that can be used in the browser and in Node.js using JavaScript. * `core-ml` Used for iOS mobile devices. * `custom-trained` A Model that was uploaded or trained by custom code."
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1ModelMonitoringAlertConfig:
      description: The alert config for model monitoring.
      properties:
        emailAlertConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelMonitoringAlertConfigEmailAlertConfig"
          description: Email alert config.
        enableLogging:
          description: Dump the anomalies to Cloud Logging. The anomalies will be put to json payload encoded from proto google.cloud.aiplatform.logging.ModelMonitoringAnomaliesLogEntry. This can be further sinked to Pub/Sub or any other services supported by Cloud Logging.
          type: boolean
        notificationChannels:
          description: Resource names of the NotificationChannels to send alert. Must be of the format `projects//notificationChannels/`
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1ModelMonitoringAlertConfigEmailAlertConfig:
      description: The config for email alert.
      properties:
        userEmails:
          description: The email addresses to send the alert.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1ModelMonitoringObjectiveConfig:
      description: The objective configuration for model monitoring, including the information needed to detect anomalies for one particular model.
      properties:
        explanationConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfig"
          description: The config for integrating with Vertex Explainable AI.
        predictionDriftDetectionConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig"
          description: The config for drift of prediction data.
        trainingDataset:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingDataset"
          description: Training dataset for models. This field has to be set only if TrainingPredictionSkewDetectionConfig is specified.
        trainingPredictionSkewDetectionConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig"
          description: The config for skew between training data and prediction data.
      type: object
    GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfig:
      description: The config for integrating with Vertex Explainable AI. Only applicable if the Model has explanation_spec populated.
      properties:
        enableFeatureAttributes:
          description: If want to analyze the Vertex Explainable AI feature attribute scores or not. If set to true, Vertex AI will log the feature attributions from explain response and do the skew/drift detection for them.
          type: boolean
        explanationBaseline:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline"
          description: Predictions generated by the BatchPredictionJob using baseline dataset.
      type: object
    GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline:
      description: Output from BatchPredictionJob for Model Monitoring baseline dataset, which can be used to generate baseline attribution scores.
      properties:
        bigquery:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1BigQueryDestination"
          description: BigQuery location for BatchExplain output.
        gcs:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GcsDestination"
          description: Cloud Storage location for BatchExplain output.
        predictionFormat:
          description: The storage format of the predictions generated BatchPrediction job.
          enum:
            - PREDICTION_FORMAT_UNSPECIFIED
            - JSONL
            - BIGQUERY
          type: string
      type: object
    GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig:
      description: The config for Prediction data drift detection.
      properties:
        attributionScoreDriftThresholds:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig"
          description: Key is the feature name and value is the threshold. The threshold here is against attribution score distance between different time windows.
          type: object
        defaultDriftThreshold:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig"
          description: Drift anomaly detection threshold used by all features. When the per-feature thresholds are not set, this field can be used to specify a threshold for all features.
        driftThresholds:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig"
          description: Key is the feature name and value is the threshold. If a feature needs to be monitored for drift, a value threshold must be configured for that feature. The threshold here is against feature distribution distance between different time windws.
          type: object
      type: object
    GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingDataset:
      description: Training Dataset information.
      properties:
        bigquerySource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1BigQuerySource"
          description: The BigQuery table of the unmanaged Dataset used to train this Model.
        dataFormat:
          description: 'Data format of the dataset, only applicable if the input is from Google Cloud Storage. The possible formats are: "tf-record" The source file is a TFRecord file. "csv" The source file is a CSV file. "jsonl" The source file is a JSONL file.'
          type: string
        dataset:
          description: The resource name of the Dataset used to train this Model.
          type: string
        gcsSource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GcsSource"
          description: The Google Cloud Storage uri of the unmanaged Dataset used to train this Model.
        loggingSamplingStrategy:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SamplingStrategy"
          description: Strategy to sample data from Training Dataset. If not set, we process the whole dataset.
        targetField:
          description: The target field name the model is to predict. This field will be excluded when doing Predict and (or) Explain for the training data.
          type: string
      type: object
    GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig:
      description: The config for Training & Prediction data skew detection. It specifies the training dataset sources and the skew detection parameters.
      properties:
        attributionScoreSkewThresholds:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig"
          description: Key is the feature name and value is the threshold. The threshold here is against attribution score distance between the training and prediction feature.
          type: object
        defaultSkewThreshold:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig"
          description: Skew anomaly detection threshold used by all features. When the per-feature thresholds are not set, this field can be used to specify a threshold for all features.
        skewThresholds:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig"
          description: Key is the feature name and value is the threshold. If a feature needs to be monitored for skew, a value threshold must be configured for that feature. The threshold here is against feature distribution distance between the training and prediction feature.
          type: object
      type: object
    GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies:
      description: Statistics and anomalies generated by Model Monitoring.
      properties:
        anomalyCount:
          description: Number of anomalies within all stats.
          format: int32
          type: integer
        deployedModelId:
          description: Deployed Model ID.
          type: string
        featureStats:
          description: A list of historical Stats and Anomalies generated for all Features.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomalies"
          type: array
        objective:
          description: Model Monitoring Objective those stats and anomalies belonging to.
          enum:
            - MODEL_DEPLOYMENT_MONITORING_OBJECTIVE_TYPE_UNSPECIFIED
            - RAW_FEATURE_SKEW
            - RAW_FEATURE_DRIFT
            - FEATURE_ATTRIBUTION_SKEW
            - FEATURE_ATTRIBUTION_DRIFT
          type: string
      type: object
    GoogleCloudAiplatformV1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomalies:
      description: Historical Stats (and Anomalies) for a specific Feature.
      properties:
        featureDisplayName:
          description: Display Name of the Feature.
          type: string
        predictionStats:
          description: A list of historical stats generated by different time window's Prediction Dataset.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureStatsAnomaly"
          type: array
        threshold:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ThresholdConfig"
          description: Threshold for anomaly detection.
        trainingStats:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureStatsAnomaly"
          description: Stats calculated for the Training Dataset.
      type: object
    GoogleCloudAiplatformV1ModelOriginalModelInfo:
      description: Contains information about the original Model if this Model is a copy.
      properties:
        model:
          description: "Output only. The resource name of the Model this Model is a copy of, including the revision. Format: `projects/{project}/locations/{location}/models/{model_id}@{version_id}`"
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1ModelSourceInfo:
      description: Detail description of the source information of the model.
      properties:
        copy:
          description: If this Model is copy of another Model. If true then source_type pertains to the original.
          type: boolean
        sourceType:
          description: Type of the model source.
          enum:
            - MODEL_SOURCE_TYPE_UNSPECIFIED
            - AUTOML
            - CUSTOM
            - BQML
            - MODEL_GARDEN
            - GENIE
            - CUSTOM_TEXT_EMBEDDING
            - MARKETPLACE
          type: string
      type: object
    GoogleCloudAiplatformV1MutateDeployedIndexOperationMetadata:
      description: Runtime operation information for IndexEndpointService.MutateDeployedIndex.
      properties:
        deployedIndexId:
          description: The unique index id specified by user
          type: string
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The operation generic information.
      type: object
    GoogleCloudAiplatformV1MutateDeployedIndexResponse:
      description: Response message for IndexEndpointService.MutateDeployedIndex.
      properties:
        deployedIndex:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DeployedIndex"
          description: The DeployedIndex that had been updated in the IndexEndpoint.
      type: object
    GoogleCloudAiplatformV1MutateDeployedModelOperationMetadata:
      description: Runtime operation information for EndpointService.MutateDeployedModel.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The operation generic information.
      type: object
    GoogleCloudAiplatformV1MutateDeployedModelRequest:
      description: Request message for EndpointService.MutateDeployedModel.
      properties:
        deployedModel:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DeployedModel"
          description: "Required. The DeployedModel to be mutated within the Endpoint. Only the following fields can be mutated: * `min_replica_count` in either DedicatedResources or AutomaticResources * `max_replica_count` in either DedicatedResources or AutomaticResources * autoscaling_metric_specs * `disable_container_logging` (v1 only) * `enable_container_logging` (v1beta1 only)"
        updateMask:
          description: Required. The update mask applies to the resource. See google.protobuf.FieldMask.
          format: google-fieldmask
          type: string
      type: object
    GoogleCloudAiplatformV1MutateDeployedModelResponse:
      description: Response message for EndpointService.MutateDeployedModel.
      properties:
        deployedModel:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DeployedModel"
          description: The DeployedModel that's being mutated.
      type: object
    GoogleCloudAiplatformV1NasJob:
      description: Represents a Neural Architecture Search (NAS) job.
      properties:
        createTime:
          description: Output only. Time when the NasJob was created.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: Required. The display name of the NasJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        enableRestrictedImageTraining:
          deprecated: true
          description: Optional. Enable a separation of Custom model training and restricted image training for tenant project.
          type: boolean
        encryptionSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec"
          description: Customer-managed encryption key options for a NasJob. If this is set, then all resources created by the NasJob will be encrypted with the provided encryption key.
        endTime:
          description: "Output only. Time when the NasJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`."
          format: google-datetime
          readOnly: true
          type: string
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Output only. Only populated when job's state is JOB_STATE_FAILED or JOB_STATE_CANCELLED.
          readOnly: true
        labels:
          additionalProperties:
            type: string
          description: The labels with user-defined metadata to organize NasJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
          type: object
        name:
          description: Output only. Resource name of the NasJob.
          readOnly: true
          type: string
        nasJobOutput:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NasJobOutput"
          description: Output only. Output of the NasJob.
          readOnly: true
        nasJobSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NasJobSpec"
          description: Required. The specification of a NasJob.
        startTime:
          description: Output only. Time when the NasJob for the first time entered the `JOB_STATE_RUNNING` state.
          format: google-datetime
          readOnly: true
          type: string
        state:
          description: Output only. The detailed state of the job.
          enum:
            - JOB_STATE_UNSPECIFIED
            - JOB_STATE_QUEUED
            - JOB_STATE_PENDING
            - JOB_STATE_RUNNING
            - JOB_STATE_SUCCEEDED
            - JOB_STATE_FAILED
            - JOB_STATE_CANCELLING
            - JOB_STATE_CANCELLED
            - JOB_STATE_PAUSED
            - JOB_STATE_EXPIRED
            - JOB_STATE_UPDATING
            - JOB_STATE_PARTIALLY_SUCCEEDED
          readOnly: true
          type: string
        updateTime:
          description: Output only. Time when the NasJob was most recently updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1NasJobOutput:
      description: Represents a uCAIP NasJob output.
      properties:
        multiTrialJobOutput:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NasJobOutputMultiTrialJobOutput"
          description: Output only. The output of this multi-trial Neural Architecture Search (NAS) job.
          readOnly: true
      type: object
    GoogleCloudAiplatformV1NasJobOutputMultiTrialJobOutput:
      description: The output of a multi-trial Neural Architecture Search (NAS) jobs.
      properties:
        searchTrials:
          description: Output only. List of NasTrials that were started as part of search stage.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1NasTrial"
          readOnly: true
          type: array
        trainTrials:
          description: Output only. List of NasTrials that were started as part of train stage.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1NasTrial"
          readOnly: true
          type: array
      type: object
    GoogleCloudAiplatformV1NasJobSpec:
      description: Represents the spec of a NasJob.
      properties:
        multiTrialAlgorithmSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec"
          description: The spec of multi-trial algorithms.
        resumeNasJobId:
          description: The ID of the existing NasJob in the same Project and Location which will be used to resume search. search_space_spec and nas_algorithm_spec are obtained from previous NasJob hence should not provide them again for this NasJob.
          type: string
        searchSpaceSpec:
          description: It defines the search space for Neural Architecture Search (NAS).
          type: string
      type: object
    GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec:
      description: The spec of multi-trial Neural Architecture Search (NAS).
      properties:
        metric:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec"
          description: Metric specs for the NAS job. Validation for this field is done at `multi_trial_algorithm_spec` field.
        multiTrialAlgorithm:
          description: The multi-trial Neural Architecture Search (NAS) algorithm type. Defaults to `REINFORCEMENT_LEARNING`.
          enum:
            - MULTI_TRIAL_ALGORITHM_UNSPECIFIED
            - REINFORCEMENT_LEARNING
            - GRID_SEARCH
          type: string
        searchTrialSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec"
          description: Required. Spec for search trials.
        trainTrialSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec"
          description: Spec for train trials. Top N [TrainTrialSpec.max_parallel_trial_count] search trials will be trained for every M [TrainTrialSpec.frequency] trials searched.
      type: object
    GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec:
      description: Represents a metric to optimize.
      properties:
        goal:
          description: Required. The optimization goal of the metric.
          enum:
            - GOAL_TYPE_UNSPECIFIED
            - MAXIMIZE
            - MINIMIZE
          type: string
        metricId:
          description: Required. The ID of the metric. Must not contain whitespaces.
          type: string
      type: object
    GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec:
      description: Represent spec for search trials.
      properties:
        maxFailedTrialCount:
          description: The number of failed trials that need to be seen before failing the NasJob. If set to 0, Vertex AI decides how many trials must fail before the whole job fails.
          format: int32
          type: integer
        maxParallelTrialCount:
          description: Required. The maximum number of trials to run in parallel.
          format: int32
          type: integer
        maxTrialCount:
          description: Required. The maximum number of Neural Architecture Search (NAS) trials to run.
          format: int32
          type: integer
        searchTrialJobSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1CustomJobSpec"
          description: Required. The spec of a search trial job. The same spec applies to all search trials.
      type: object
    GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec:
      description: Represent spec for train trials.
      properties:
        frequency:
          description: Required. Frequency of search trials to start train stage. Top N [TrainTrialSpec.max_parallel_trial_count] search trials will be trained for every M [TrainTrialSpec.frequency] trials searched.
          format: int32
          type: integer
        maxParallelTrialCount:
          description: Required. The maximum number of trials to run in parallel.
          format: int32
          type: integer
        trainTrialJobSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1CustomJobSpec"
          description: Required. The spec of a train trial job. The same spec applies to all train trials.
      type: object
    GoogleCloudAiplatformV1NasTrial:
      description: Represents a uCAIP NasJob trial.
      properties:
        endTime:
          description: Output only. Time when the NasTrial's status changed to `SUCCEEDED` or `INFEASIBLE`.
          format: google-datetime
          readOnly: true
          type: string
        finalMeasurement:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Measurement"
          description: Output only. The final measurement containing the objective value.
          readOnly: true
        id:
          description: Output only. The identifier of the NasTrial assigned by the service.
          readOnly: true
          type: string
        startTime:
          description: Output only. Time when the NasTrial was started.
          format: google-datetime
          readOnly: true
          type: string
        state:
          description: Output only. The detailed state of the NasTrial.
          enum:
            - STATE_UNSPECIFIED
            - REQUESTED
            - ACTIVE
            - STOPPING
            - SUCCEEDED
            - INFEASIBLE
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1NasTrialDetail:
      description: Represents a NasTrial details along with its parameters. If there is a corresponding train NasTrial, the train NasTrial is also returned.
      properties:
        name:
          description: Output only. Resource name of the NasTrialDetail.
          readOnly: true
          type: string
        parameters:
          description: The parameters for the NasJob NasTrial.
          type: string
        searchTrial:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NasTrial"
          description: The requested search NasTrial.
        trainTrial:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NasTrial"
          description: The train NasTrial corresponding to search_trial. Only populated if search_trial is used for training.
      type: object
    GoogleCloudAiplatformV1NearestNeighborQuery:
      description: A query to find a number of similar entities.
      properties:
        embedding:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NearestNeighborQueryEmbedding"
          description: Optional. The embedding vector that be used for similar search.
        entityId:
          description: Optional. The entity id whose similar entities should be searched for. If embedding is set, search will use embedding instead of entity_id.
          type: string
        neighborCount:
          description: Optional. The number of similar entities to be retrieved from feature view for each query.
          format: int32
          type: integer
        parameters:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NearestNeighborQueryParameters"
          description: Optional. Parameters that can be set to tune query on the fly.
        perCrowdingAttributeNeighborCount:
          description: Optional. Crowding is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than sper_crowding_attribute_neighbor_count of the k neighbors returned have the same value of crowding_attribute. It's used for improving result diversity.
          format: int32
          type: integer
        stringFilters:
          description: Optional. The list of string filters.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1NearestNeighborQueryStringFilter"
          type: array
      type: object
    GoogleCloudAiplatformV1NearestNeighborQueryEmbedding:
      description: The embedding vector.
      properties:
        value:
          description: Optional. Individual value in the embedding.
          items:
            format: float
            type: number
          type: array
      type: object
    GoogleCloudAiplatformV1NearestNeighborQueryParameters:
      description: Parameters that can be overrided in each query to tune query latency and recall.
      properties:
        approximateNeighborCandidates:
          description: Optional. The number of neighbors to find via approximate search before exact reordering is performed; if set, this value must be > neighbor_count.
          format: int32
          type: integer
        leafNodesSearchFraction:
          description: Optional. The fraction of the number of leaves to search, set at query time allows user to tune search performance. This value increase result in both search accuracy and latency increase. The value should be between 0.0 and 1.0.
          format: double
          type: number
      type: object
    GoogleCloudAiplatformV1NearestNeighborQueryStringFilter:
      description: "String filter is used to search a subset of the entities by using boolean rules on string columns. For example: if a query specifies string filter with 'name = color, allow_tokens = {red, blue}, deny_tokens = {purple}',' then that query will match entities that are red or blue, but if those points are also purple, then they will be excluded even if they are red/blue. Only string filter is supported for now, numeric filter will be supported in the near future."
      properties:
        allowTokens:
          description: Optional. The allowed tokens.
          items:
            type: string
          type: array
        denyTokens:
          description: Optional. The denied tokens.
          items:
            type: string
          type: array
        name:
          description: Required. Column names in BigQuery that used as filters.
          type: string
      type: object
    GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata:
      description: Runtime operation metadata with regard to Matching Engine Index.
      properties:
        contentValidationStats:
          description: The validation stats of the content (per file) to be inserted or updated on the Matching Engine Index resource. Populated if contentsDeltaUri is provided as part of Index.metadata. Please note that, currently for those files that are broken or has unsupported file format, we will not have the stats for those files.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats"
          type: array
        dataBytesCount:
          description: The ingested data size in bytes.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats:
      properties:
        invalidRecordCount:
          description: Number of records in this file we skipped due to validate errors.
          format: int64
          type: string
        partialErrors:
          description: The detail information of the partial failures encountered for those invalid records that couldn't be parsed. Up to 50 partial errors will be reported.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError"
          type: array
        sourceGcsUri:
          description: Cloud Storage URI pointing to the original file in user's bucket.
          type: string
        validRecordCount:
          description: Number of records in this file that were successfully processed.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError:
      properties:
        embeddingId:
          description: Empty if the embedding id is failed to parse.
          type: string
        errorMessage:
          description: A human-readable message that is shown to the user to help them fix the error. Note that this message may change from time to time, your code should check against error_type as the source of truth.
          type: string
        errorType:
          description: The error type of this record.
          enum:
            - ERROR_TYPE_UNSPECIFIED
            - EMPTY_LINE
            - INVALID_JSON_SYNTAX
            - INVALID_CSV_SYNTAX
            - INVALID_AVRO_SYNTAX
            - INVALID_EMBEDDING_ID
            - EMBEDDING_SIZE_MISMATCH
            - NAMESPACE_MISSING
            - PARSING_ERROR
            - DUPLICATE_NAMESPACE
            - OP_IN_DATAPOINT
            - MULTIPLE_VALUES
            - INVALID_NUMERIC_VALUE
            - INVALID_ENCODING
          type: string
        rawRecord:
          description: The original content of this record.
          type: string
        sourceGcsUri:
          description: Cloud Storage URI pointing to the original file in user's bucket.
          type: string
      type: object
    GoogleCloudAiplatformV1NearestNeighbors:
      description: Nearest neighbors for one query.
      properties:
        neighbors:
          description: All its neighbors.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1NearestNeighborsNeighbor"
          type: array
      type: object
    GoogleCloudAiplatformV1NearestNeighborsNeighbor:
      description: A neighbor of the query vector.
      properties:
        distance:
          description: The distance between the neighbor and the query vector.
          format: double
          type: number
        entityId:
          description: The id of the similar entity.
          type: string
        entityKeyValues:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FetchFeatureValuesResponse"
          description: The attributes of the neighbor, e.g. filters, crowding and metadata Note that full entities are returned only when "return_full_entity" is set to true. Otherwise, only the "entity_id" and "distance" fields are populated.
      type: object
    GoogleCloudAiplatformV1Neighbor:
      description: Neighbors for example-based explanations.
      properties:
        neighborDistance:
          description: Output only. The neighbor distance.
          format: double
          readOnly: true
          type: number
        neighborId:
          description: Output only. The neighbor id.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1NetworkSpec:
      description: Network spec.
      properties:
        enableInternetAccess:
          description: Whether to enable public internet access. Default false.
          type: boolean
        network:
          description: The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks)
          type: string
        subnetwork:
          description: "The name of the subnet that this instance is in. Format: `projects/{project_id_or_number}/regions/{region}/subnetworks/{subnetwork_id}`"
          type: string
      type: object
    GoogleCloudAiplatformV1NfsMount:
      description: Represents a mount configuration for Network File System (NFS) to mount.
      properties:
        mountPoint:
          description: Required. Destination mount path. The NFS will be mounted for the user under /mnt/nfs/
          type: string
        path:
          description: Required. Source path exported from NFS server. Has to start with '/', and combined with the ip address, it indicates the source mount path in the form of `server:path`
          type: string
        server:
          description: Required. IP address of the NFS server.
          type: string
      type: object
    GoogleCloudAiplatformV1NotebookEucConfig:
      description: The euc configuration of NotebookRuntimeTemplate.
      properties:
        bypassActasCheck:
          description: Output only. Whether ActAs check is bypassed for service account attached to the VM. If false, we need ActAs check for the default Compute Engine Service account. When a Runtime is created, a VM is allocated using Default Compute Engine Service Account. Any user requesting to use this Runtime requires Service Account User (ActAs) permission over this SA. If true, Runtime owner is using EUC and does not require the above permission as VM no longer use default Compute Engine SA, but a P4SA.
          readOnly: true
          type: boolean
        eucDisabled:
          description: Input only. Whether EUC is disabled in this NotebookRuntimeTemplate. In proto3, the default value of a boolean is false. In this way, by default EUC will be enabled for NotebookRuntimeTemplate.
          type: boolean
      type: object
    GoogleCloudAiplatformV1NotebookIdleShutdownConfig:
      description: The idle shutdown configuration of NotebookRuntimeTemplate, which contains the idle_timeout as required field.
      properties:
        idleShutdownDisabled:
          description: Whether Idle Shutdown is disabled in this NotebookRuntimeTemplate.
          type: boolean
        idleTimeout:
          description: "Required. Duration is accurate to the second. In Notebook, Idle Timeout is accurate to minute so the range of idle_timeout (second) is: 10 * 60 ~ 1440 * 60."
          format: google-duration
          type: string
      type: object
    GoogleCloudAiplatformV1NotebookReservationAffinity:
      description: Notebook Reservation Affinity for consuming Zonal reservation.
      properties:
        consumeReservationType:
          description: "Required. Specifies the type of reservation from which this instance can consume resources: RESERVATION_ANY (default), RESERVATION_SPECIFIC, or RESERVATION_NONE. See Consuming reserved instances for examples."
          enum:
            - RESERVATION_AFFINITY_TYPE_UNSPECIFIED
            - RESERVATION_NONE
            - RESERVATION_ANY
            - RESERVATION_SPECIFIC
          type: string
        key:
          description: Optional. Corresponds to the label key of a reservation resource. To target a RESERVATION_SPECIFIC by name, use compute.googleapis.com/reservation-name as the key and specify the name of your reservation as its value.
          type: string
        values:
          description: Optional. Corresponds to the label values of a reservation resource. This must be the full path name of Reservation.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1NotebookRuntime:
      description: A runtime is a virtual machine allocated to a particular user for a particular Notebook file on temporary basis with lifetime limited to 24 hours.
      properties:
        createTime:
          description: Output only. Timestamp when this NotebookRuntime was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: The description of the NotebookRuntime.
          type: string
        displayName:
          description: Required. The display name of the NotebookRuntime. The name can be up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        expirationTime:
          description: "Output only. Timestamp when this NotebookRuntime will be expired: 1. System Predefined NotebookRuntime: 24 hours after creation. After expiration, system predifined runtime will be deleted. 2. User created NotebookRuntime: 6 months after last upgrade. After expiration, user created runtime will be stopped and allowed for upgrade."
          format: google-datetime
          readOnly: true
          type: string
        healthState:
          description: Output only. The health state of the NotebookRuntime.
          enum:
            - HEALTH_STATE_UNSPECIFIED
            - HEALTHY
            - UNHEALTHY
          readOnly: true
          type: string
        isUpgradable:
          description: Output only. Whether NotebookRuntime is upgradable.
          readOnly: true
          type: boolean
        labels:
          additionalProperties:
            type: string
          description: 'The labels with user-defined metadata to organize your NotebookRuntime. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one NotebookRuntime (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for NotebookRuntime: * "aiplatform.googleapis.com/notebook_runtime_gce_instance_id": output only, its value is the Compute Engine instance id. * "aiplatform.googleapis.com/colab_enterprise_entry_service": its value is either "bigquery" or "vertex"; if absent, it should be "vertex". This is to describe the entry service, either BigQuery or Vertex.'
          type: object
        name:
          description: Output only. The resource name of the NotebookRuntime.
          readOnly: true
          type: string
        networkTags:
          description: Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/vpc/docs/add-remove-network-tags)).
          items:
            type: string
          type: array
        notebookRuntimeTemplateRef:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NotebookRuntimeTemplateRef"
          description: Output only. The pointer to NotebookRuntimeTemplate this NotebookRuntime is created from.
          readOnly: true
        notebookRuntimeType:
          description: Output only. The type of the notebook runtime.
          enum:
            - NOTEBOOK_RUNTIME_TYPE_UNSPECIFIED
            - USER_DEFINED
            - ONE_CLICK
          readOnly: true
          type: string
        proxyUri:
          description: Output only. The proxy endpoint used to access the NotebookRuntime.
          readOnly: true
          type: string
        reservationAffinity:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NotebookReservationAffinity"
          description: Output only. Reservation Affinity of the notebook runtime.
          readOnly: true
        runtimeState:
          description: Output only. The runtime (instance) state of the NotebookRuntime.
          enum:
            - RUNTIME_STATE_UNSPECIFIED
            - RUNNING
            - BEING_STARTED
            - BEING_STOPPED
            - STOPPED
            - BEING_UPGRADED
          readOnly: true
          type: string
        runtimeUser:
          description: Required. The user email of the NotebookRuntime.
          type: string
        serviceAccount:
          description: Output only. The service account that the NotebookRuntime workload runs as.
          readOnly: true
          type: string
        updateTime:
          description: Output only. Timestamp when this NotebookRuntime was most recently updated.
          format: google-datetime
          readOnly: true
          type: string
        version:
          description: Output only. The VM os image version of NotebookRuntime.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1NotebookRuntimeTemplate:
      description: A template that specifies runtime configurations such as machine type, runtime version, network configurations, etc. Multiple runtimes can be created from a runtime template.
      properties:
        createTime:
          description: Output only. Timestamp when this NotebookRuntimeTemplate was created.
          format: google-datetime
          readOnly: true
          type: string
        dataPersistentDiskSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PersistentDiskSpec"
          description: Optional. The specification of persistent disk attached to the runtime as data disk storage.
        description:
          description: The description of the NotebookRuntimeTemplate.
          type: string
        displayName:
          description: Required. The display name of the NotebookRuntimeTemplate. The name can be up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        etag:
          description: Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        eucConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NotebookEucConfig"
          description: EUC configuration of the NotebookRuntimeTemplate.
        idleShutdownConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NotebookIdleShutdownConfig"
          description: The idle shutdown configuration of NotebookRuntimeTemplate. This config will only be set when idle shutdown is enabled.
        isDefault:
          description: Output only. The default template to use if not specified.
          readOnly: true
          type: boolean
        labels:
          additionalProperties:
            type: string
          description: The labels with user-defined metadata to organize the NotebookRuntimeTemplates. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
          type: object
        machineSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1MachineSpec"
          description: Optional. Immutable. The specification of a single machine for the template.
        name:
          description: Output only. The resource name of the NotebookRuntimeTemplate.
          readOnly: true
          type: string
        networkSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NetworkSpec"
          description: Optional. Network spec.
        networkTags:
          description: Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/vpc/docs/add-remove-network-tags)).
          items:
            type: string
          type: array
        notebookRuntimeType:
          description: Optional. Immutable. The type of the notebook runtime template.
          enum:
            - NOTEBOOK_RUNTIME_TYPE_UNSPECIFIED
            - USER_DEFINED
            - ONE_CLICK
          type: string
        reservationAffinity:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NotebookReservationAffinity"
          description: Optional. Reservation Affinity of the notebook runtime template.
        serviceAccount:
          description: The service account that the runtime workload runs as. You can use any service account within the same project, but you must have the service account user permission to use the instance. If not specified, the [Compute Engine default service account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
          type: string
        shieldedVmConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ShieldedVmConfig"
          description: Optional. Immutable. Runtime Shielded VM spec.
        updateTime:
          description: Output only. Timestamp when this NotebookRuntimeTemplate was most recently updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1NotebookRuntimeTemplateRef:
      description: Points to a NotebookRuntimeTemplateRef.
      properties:
        notebookRuntimeTemplate:
          description: Immutable. A resource name of the NotebookRuntimeTemplate.
          type: string
      type: object
    GoogleCloudAiplatformV1Part:
      description: A datatype containing media that is part of a multi-part `Content` message. A `Part` consists of data which has an associated datatype. A `Part` can only contain one of the accepted types in `Part.data`. A `Part` must have a fixed IANA MIME type identifying the type and subtype of the media if `inline_data` or `file_data` field is filled with raw bytes.
      properties:
        fileData:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FileData"
          description: Optional. URI based data.
        functionCall:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FunctionCall"
          description: Optional. A predicted [FunctionCall] returned from the model that contains a string representing the [FunctionDeclaration.name] with the parameters and their values.
        functionResponse:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FunctionResponse"
          description: Optional. The result output of a [FunctionCall] that contains a string representing the [FunctionDeclaration.name] and a structured JSON object containing any output from the function call. It is used as context to the model.
        inlineData:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Blob"
          description: Optional. Inlined bytes data.
        text:
          description: Optional. Text part (can be code).
          type: string
        videoMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1VideoMetadata"
          description: Optional. Video metadata. The metadata should only be specified while the video data is presented in inline_data or file_data.
      type: object
    GoogleCloudAiplatformV1PauseModelDeploymentMonitoringJobRequest:
      description: Request message for JobService.PauseModelDeploymentMonitoringJob.
      properties: {}
      type: object
    GoogleCloudAiplatformV1PauseScheduleRequest:
      description: Request message for ScheduleService.PauseSchedule.
      properties: {}
      type: object
    GoogleCloudAiplatformV1PersistentDiskSpec:
      description: Represents the spec of persistent disk options.
      properties:
        diskSizeGb:
          description: Size in GB of the disk (default is 100GB).
          format: int64
          type: string
        diskType:
          description: 'Type of the disk (default is "pd-standard"). Valid values: "pd-ssd" (Persistent Disk Solid State Drive) "pd-standard" (Persistent Disk Hard Disk Drive) "pd-balanced" (Balanced Persistent Disk) "pd-extreme" (Extreme Persistent Disk)'
          type: string
      type: object
    GoogleCloudAiplatformV1PipelineJob:
      description: An instance of a machine learning PipelineJob.
      properties:
        createTime:
          description: Output only. Pipeline creation time.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: The display name of the Pipeline. The name can be up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        encryptionSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec"
          description: Customer-managed encryption key spec for a pipelineJob. If set, this PipelineJob and all of its sub-resources will be secured by this key.
        endTime:
          description: Output only. Pipeline end time.
          format: google-datetime
          readOnly: true
          type: string
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Output only. The error that occurred during pipeline execution. Only populated when the pipeline's state is FAILED or CANCELLED.
          readOnly: true
        jobDetail:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PipelineJobDetail"
          description: Output only. The details of pipeline run. Not available in the list view.
          readOnly: true
        labels:
          additionalProperties:
            type: string
          description: The labels with user-defined metadata to organize PipelineJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. Note there is some reserved label key for Vertex AI Pipelines. - `vertex-ai-pipelines-run-billing-id`, user set value will get overrided.
          type: object
        name:
          description: Output only. The resource name of the PipelineJob.
          readOnly: true
          type: string
        network:
          description: The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Pipeline Job's workload should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. Private services access must already be configured for the network. Pipeline job will apply the network configuration to the Google Cloud resources being launched, if applied, such as Vertex AI Training or Dataflow job. If left unspecified, the workload is not peered with any network.
          type: string
        pipelineSpec:
          additionalProperties:
            description: Properties of the object.
          description: The spec of the pipeline.
          type: object
        reservedIpRanges:
          description: "A list of names for the reserved ip ranges under the VPC network that can be used for this Pipeline Job's workload. If set, we will deploy the Pipeline Job's workload within the provided ip ranges. Otherwise, the job will be deployed to any ip ranges under the provided VPC network. Example: ['vertex-ai-ip-range']."
          items:
            type: string
          type: array
        runtimeConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PipelineJobRuntimeConfig"
          description: Runtime config of the pipeline.
        scheduleName:
          description: Output only. The schedule resource name. Only returned if the Pipeline is created by Schedule API.
          readOnly: true
          type: string
        serviceAccount:
          description: The service account that the pipeline workload runs as. If not specified, the Compute Engine default service account in the project will be used. See https://cloud.google.com/compute/docs/access/service-accounts#default_service_account Users starting the pipeline must have the `iam.serviceAccounts.actAs` permission on this service account.
          type: string
        startTime:
          description: Output only. Pipeline start time.
          format: google-datetime
          readOnly: true
          type: string
        state:
          description: Output only. The detailed state of the job.
          enum:
            - PIPELINE_STATE_UNSPECIFIED
            - PIPELINE_STATE_QUEUED
            - PIPELINE_STATE_PENDING
            - PIPELINE_STATE_RUNNING
            - PIPELINE_STATE_SUCCEEDED
            - PIPELINE_STATE_FAILED
            - PIPELINE_STATE_CANCELLING
            - PIPELINE_STATE_CANCELLED
            - PIPELINE_STATE_PAUSED
          readOnly: true
          type: string
        templateMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PipelineTemplateMetadata"
          description: Output only. Pipeline template metadata. Will fill up fields if PipelineJob.template_uri is from supported template registry.
          readOnly: true
        templateUri:
          description: A template uri from where the PipelineJob.pipeline_spec, if empty, will be downloaded. Currently, only uri from Vertex Template Registry & Gallery is supported. Reference to https://cloud.google.com/vertex-ai/docs/pipelines/create-pipeline-template.
          type: string
        updateTime:
          description: Output only. Timestamp when this PipelineJob was most recently updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1PipelineJobDetail:
      description: The runtime detail of PipelineJob.
      properties:
        pipelineContext:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Context"
          description: Output only. The context of the pipeline.
          readOnly: true
        pipelineRunContext:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Context"
          description: Output only. The context of the current pipeline run.
          readOnly: true
        taskDetails:
          description: Output only. The runtime details of the tasks under the pipeline.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1PipelineTaskDetail"
          readOnly: true
          type: array
      type: object
    GoogleCloudAiplatformV1PipelineJobRuntimeConfig:
      description: The runtime config of a PipelineJob.
      properties:
        failurePolicy:
          description: Represents the failure policy of a pipeline. Currently, the default of a pipeline is that the pipeline will continue to run until no more tasks can be executed, also known as PIPELINE_FAILURE_POLICY_FAIL_SLOW. However, if a pipeline is set to PIPELINE_FAILURE_POLICY_FAIL_FAST, it will stop scheduling any new tasks when a task has failed. Any scheduled tasks will continue to completion.
          enum:
            - PIPELINE_FAILURE_POLICY_UNSPECIFIED
            - PIPELINE_FAILURE_POLICY_FAIL_SLOW
            - PIPELINE_FAILURE_POLICY_FAIL_FAST
          type: string
        gcsOutputDirectory:
          description: Required. A path in a Cloud Storage bucket, which will be treated as the root output directory of the pipeline. It is used by the system to generate the paths of output artifacts. The artifact paths are generated with a sub-path pattern `{job_id}/{task_id}/{output_key}` under the specified output directory. The service account specified in this pipeline must have the `storage.objects.get` and `storage.objects.create` permissions for this bucket.
          type: string
        inputArtifacts:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1PipelineJobRuntimeConfigInputArtifact"
          description: The runtime artifacts of the PipelineJob. The key will be the input artifact name and the value would be one of the InputArtifact.
          type: object
        parameterValues:
          additionalProperties: {}
          description: The runtime parameters of the PipelineJob. The parameters will be passed into PipelineJob.pipeline_spec to replace the placeholders at runtime. This field is used by pipelines built using `PipelineJob.pipeline_spec.schema_version` 2.1.0, such as pipelines built using Kubeflow Pipelines SDK 1.9 or higher and the v2 DSL.
          type: object
        parameters:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Value"
          deprecated: true
          description: Deprecated. Use RuntimeConfig.parameter_values instead. The runtime parameters of the PipelineJob. The parameters will be passed into PipelineJob.pipeline_spec to replace the placeholders at runtime. This field is used by pipelines built using `PipelineJob.pipeline_spec.schema_version` 2.0.0 or lower, such as pipelines built using Kubeflow Pipelines SDK 1.8 or lower.
          type: object
      type: object
    GoogleCloudAiplatformV1PipelineJobRuntimeConfigInputArtifact:
      description: The type of an input artifact.
      properties:
        artifactId:
          description: "Artifact resource id from MLMD. Which is the last portion of an artifact resource name: `projects/{project}/locations/{location}/metadataStores/default/artifacts/{artifact_id}`. The artifact must stay within the same project, location and default metadatastore as the pipeline."
          type: string
      type: object
    GoogleCloudAiplatformV1PipelineTaskDetail:
      description: The runtime detail of a task execution.
      properties:
        createTime:
          description: Output only. Task create time.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. Task end time.
          format: google-datetime
          readOnly: true
          type: string
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Output only. The error that occurred during task execution. Only populated when the task's state is FAILED or CANCELLED.
          readOnly: true
        execution:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Execution"
          description: Output only. The execution metadata of the task.
          readOnly: true
        executorDetail:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PipelineTaskExecutorDetail"
          description: Output only. The detailed execution info.
          readOnly: true
        inputs:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1PipelineTaskDetailArtifactList"
          description: Output only. The runtime input artifacts of the task.
          readOnly: true
          type: object
        outputs:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1PipelineTaskDetailArtifactList"
          description: Output only. The runtime output artifacts of the task.
          readOnly: true
          type: object
        parentTaskId:
          description: Output only. The id of the parent task if the task is within a component scope. Empty if the task is at the root level.
          format: int64
          readOnly: true
          type: string
        pipelineTaskStatus:
          description: Output only. A list of task status. This field keeps a record of task status evolving over time.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus"
          readOnly: true
          type: array
        startTime:
          description: Output only. Task start time.
          format: google-datetime
          readOnly: true
          type: string
        state:
          description: Output only. State of the task.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - SUCCEEDED
            - CANCEL_PENDING
            - CANCELLING
            - CANCELLED
            - FAILED
            - SKIPPED
            - NOT_TRIGGERED
          readOnly: true
          type: string
        taskId:
          description: Output only. The system generated ID of the task.
          format: int64
          readOnly: true
          type: string
        taskName:
          description: Output only. The user specified name of the task that is defined in pipeline_spec.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1PipelineTaskDetailArtifactList:
      description: A list of artifact metadata.
      properties:
        artifacts:
          description: Output only. A list of artifact metadata.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Artifact"
          readOnly: true
          type: array
      type: object
    GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus:
      description: A single record of the task status.
      properties:
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Output only. The error that occurred during the state. May be set when the state is any of the non-final state (PENDING/RUNNING/CANCELLING) or FAILED state. If the state is FAILED, the error here is final and not going to be retried. If the state is a non-final state, the error indicates a system-error being retried.
          readOnly: true
        state:
          description: Output only. The state of the task.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - SUCCEEDED
            - CANCEL_PENDING
            - CANCELLING
            - CANCELLED
            - FAILED
            - SKIPPED
            - NOT_TRIGGERED
          readOnly: true
          type: string
        updateTime:
          description: Output only. Update time of this status.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1PipelineTaskExecutorDetail:
      description: The runtime detail of a pipeline executor.
      properties:
        containerDetail:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PipelineTaskExecutorDetailContainerDetail"
          description: Output only. The detailed info for a container executor.
          readOnly: true
        customJobDetail:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PipelineTaskExecutorDetailCustomJobDetail"
          description: Output only. The detailed info for a custom job executor.
          readOnly: true
      type: object
    GoogleCloudAiplatformV1PipelineTaskExecutorDetailContainerDetail:
      description: The detail of a container execution. It contains the job names of the lifecycle of a container execution.
      properties:
        failedMainJobs:
          description: Output only. The names of the previously failed CustomJob for the main container executions. The list includes the all attempts in chronological order.
          items:
            type: string
          readOnly: true
          type: array
        failedPreCachingCheckJobs:
          description: Output only. The names of the previously failed CustomJob for the pre-caching-check container executions. This job will be available if the PipelineJob.pipeline_spec specifies the `pre_caching_check` hook in the lifecycle events. The list includes the all attempts in chronological order.
          items:
            type: string
          readOnly: true
          type: array
        mainJob:
          description: Output only. The name of the CustomJob for the main container execution.
          readOnly: true
          type: string
        preCachingCheckJob:
          description: Output only. The name of the CustomJob for the pre-caching-check container execution. This job will be available if the PipelineJob.pipeline_spec specifies the `pre_caching_check` hook in the lifecycle events.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1PipelineTaskExecutorDetailCustomJobDetail:
      description: The detailed info for a custom job executor.
      properties:
        failedJobs:
          description: Output only. The names of the previously failed CustomJob. The list includes the all attempts in chronological order.
          items:
            type: string
          readOnly: true
          type: array
        job:
          description: Output only. The name of the CustomJob.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1PipelineTemplateMetadata:
      description: Pipeline template metadata if PipelineJob.template_uri is from supported template registry. Currently, the only supported registry is Artifact Registry.
      properties:
        version:
          description: The version_name in artifact registry. Will always be presented in output if the PipelineJob.template_uri is from supported template registry. Format is "sha256:abcdef123456...".
          type: string
      type: object
    GoogleCloudAiplatformV1Port:
      description: Represents a network port in a container.
      properties:
        containerPort:
          description: The number of the port to expose on the pod's IP address. Must be a valid port number, between 1 and 65535 inclusive.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1PredefinedSplit:
      description: Assigns input data to training, validation, and test sets based on the value of a provided key. Supported only for tabular Datasets.
      properties:
        key:
          description: Required. The key is a name of one of the Dataset's data columns. The value of the key (either the label's value or value in the column) must be one of {`training`, `validation`, `test`}, and it defines to which set the given piece of data is assigned. If for a piece of data the key is not present or has an invalid value, that piece is ignored by the pipeline.
          type: string
      type: object
    GoogleCloudAiplatformV1PredictRequest:
      description: Request message for PredictionService.Predict.
      properties:
        instances:
          description: Required. The instances that are the input to the prediction call. A DeployedModel may have an upper limit on the number of instances it supports per request, and when it is exceeded the prediction call errors in case of AutoML Models, or, in case of customer created Models, the behaviour is as documented by that Model. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.
          items: {}
          type: array
        parameters:
          description: The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint's DeployedModels' Model's PredictSchemata's parameters_schema_uri.
      type: object
    GoogleCloudAiplatformV1PredictRequestResponseLoggingConfig:
      description: Configuration for logging request-response to a BigQuery table.
      properties:
        bigqueryDestination:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1BigQueryDestination"
          description: BigQuery table for logging. If only given a project, a new dataset will be created with name `logging__` where will be made BigQuery-dataset-name compatible (e.g. most special characters will become underscores). If no table name is given, a new table will be created with name `request_response_logging`
        enabled:
          description: If logging is enabled or not.
          type: boolean
        samplingRate:
          description: Percentage of requests to be logged, expressed as a fraction in range(0,1].
          format: double
          type: number
      type: object
    GoogleCloudAiplatformV1PredictResponse:
      description: Response message for PredictionService.Predict.
      properties:
        deployedModelId:
          description: ID of the Endpoint's DeployedModel that served this prediction.
          type: string
        metadata:
          description: Output only. Request-level metadata returned by the model. The metadata type will be dependent upon the model implementation.
          readOnly: true
        model:
          description: Output only. The resource name of the Model which is deployed as the DeployedModel that this prediction hits.
          readOnly: true
          type: string
        modelDisplayName:
          description: Output only. The display name of the Model which is deployed as the DeployedModel that this prediction hits.
          readOnly: true
          type: string
        modelVersionId:
          description: Output only. The version ID of the Model which is deployed as the DeployedModel that this prediction hits.
          readOnly: true
          type: string
        predictions:
          description: The predictions that are the output of the predictions call. The schema of any single prediction may be specified via Endpoint's DeployedModels' Model's PredictSchemata's prediction_schema_uri.
          items: {}
          type: array
      type: object
    GoogleCloudAiplatformV1PredictSchemata:
      description: Contains the schemata used in Model's predictions and explanations via PredictionService.Predict, PredictionService.Explain and BatchPredictionJob.
      properties:
        instanceSchemaUri:
          description: "Immutable. Points to a YAML file stored on Google Cloud Storage describing the format of a single instance, which are used in PredictRequest.instances, ExplainRequest.instances and BatchPredictionJob.input_config. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access."
          type: string
        parametersSchemaUri:
          description: "Immutable. Points to a YAML file stored on Google Cloud Storage describing the parameters of prediction and explanation via PredictRequest.parameters, ExplainRequest.parameters and BatchPredictionJob.model_parameters. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI, if no parameters are supported, then it is set to an empty string. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access."
          type: string
        predictionSchemaUri:
          description: "Immutable. Points to a YAML file stored on Google Cloud Storage describing the format of a single prediction produced by this Model, which are returned via PredictResponse.predictions, ExplainResponse.explanations, and BatchPredictionJob.output_config. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access."
          type: string
      type: object
    GoogleCloudAiplatformV1Presets:
      description: Preset configuration for example-based explanations
      properties:
        modality:
          description: The modality of the uploaded model, which automatically configures the distance measurement and feature normalization for the underlying example index and queries. If your model does not precisely fit one of these types, it is okay to choose the closest type.
          enum:
            - MODALITY_UNSPECIFIED
            - IMAGE
            - TEXT
            - TABULAR
          type: string
        query:
          description: Preset option controlling parameters for speed-precision trade-off when querying for examples. If omitted, defaults to `PRECISE`.
          enum:
            - PRECISE
            - FAST
          type: string
      type: object
    GoogleCloudAiplatformV1PrivateEndpoints:
      description: PrivateEndpoints proto is used to provide paths for users to send requests privately. To send request via private service access, use predict_http_uri, explain_http_uri or health_http_uri. To send request via private service connect, use service_attachment.
      properties:
        explainHttpUri:
          description: Output only. Http(s) path to send explain requests.
          readOnly: true
          type: string
        healthHttpUri:
          description: Output only. Http(s) path to send health check requests.
          readOnly: true
          type: string
        predictHttpUri:
          description: Output only. Http(s) path to send prediction requests.
          readOnly: true
          type: string
        serviceAttachment:
          description: Output only. The name of the service attachment resource. Populated if private service connect is enabled.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1PrivateServiceConnectConfig:
      description: Represents configuration for private service connect.
      properties:
        enablePrivateServiceConnect:
          description: Required. If true, expose the IndexEndpoint via private service connect.
          type: boolean
        projectAllowlist:
          description: A list of Projects from which the forwarding rule will target the service attachment.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1Probe:
      description: Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
      properties:
        exec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ProbeExecAction"
          description: Exec specifies the action to take.
        periodSeconds:
          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Must be less than timeout_seconds. Maps to Kubernetes probe argument 'periodSeconds'.
          format: int32
          type: integer
        timeoutSeconds:
          description: Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Must be greater or equal to period_seconds. Maps to Kubernetes probe argument 'timeoutSeconds'.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1ProbeExecAction:
      description: ExecAction specifies a command to execute.
      properties:
        command:
          description: Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1PscAutomatedEndpoints:
      description: PscAutomatedEndpoints defines the output of the forwarding rule automatically created by each PscAutomationConfig.
      properties:
        matchAddress:
          description: Ip Address created by the automated forwarding rule.
          type: string
        network:
          description: Corresponding network in pscAutomationConfigs.
          type: string
        projectId:
          description: Corresponding project_id in pscAutomationConfigs
          type: string
      type: object
    GoogleCloudAiplatformV1PublisherModel:
      description: A Model Garden Publisher Model.
      properties:
        frameworks:
          description: Optional. Additional information about the model's Frameworks.
          items:
            type: string
          type: array
        launchStage:
          description: Optional. Indicates the launch stage of the model.
          enum:
            - LAUNCH_STAGE_UNSPECIFIED
            - DOGFOOD
            - EXPERIMENTAL
            - PRIVATE_PREVIEW
            - PUBLIC_PREVIEW
            - GA
          type: string
        name:
          description: Output only. The resource name of the PublisherModel.
          readOnly: true
          type: string
        openSourceCategory:
          description: Required. Indicates the open source category of the publisher model.
          enum:
            - OPEN_SOURCE_CATEGORY_UNSPECIFIED
            - PROPRIETARY
            - GOOGLE_OWNED_OSS_WITH_GOOGLE_CHECKPOINT
            - THIRD_PARTY_OWNED_OSS_WITH_GOOGLE_CHECKPOINT
            - GOOGLE_OWNED_OSS
            - THIRD_PARTY_OWNED_OSS
          type: string
        predictSchemata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PredictSchemata"
          description: Optional. The schemata that describes formats of the PublisherModel's predictions and explanations as given and returned via PredictionService.Predict.
        publisherModelTemplate:
          description: Optional. Output only. Immutable. Used to indicate this model has a publisher model and provide the template of the publisher model resource name.
          readOnly: true
          type: string
        supportedActions:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToAction"
          description: Optional. Supported call-to-action options.
        versionId:
          description: Output only. Immutable. The version ID of the PublisherModel. A new version is committed when a new model version is uploaded under an existing model id. It is an auto-incrementing decimal number in string representation.
          readOnly: true
          type: string
        versionState:
          description: Optional. Indicates the state of the model version.
          enum:
            - VERSION_STATE_UNSPECIFIED
            - VERSION_STATE_STABLE
            - VERSION_STATE_UNSTABLE
          type: string
      type: object
    GoogleCloudAiplatformV1PublisherModelCallToAction:
      description: Actions could take on this Publisher Model.
      properties:
        createApplication:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences"
          description: Optional. Create application using the PublisherModel.
        deploy:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionDeploy"
          description: Optional. Deploy the PublisherModel to Vertex Endpoint.
        deployGke:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionDeployGke"
          description: Optional. Deploy PublisherModel to Google Kubernetes Engine.
        openEvaluationPipeline:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences"
          description: Optional. Open evaluation pipeline of the PublisherModel.
        openFineTuningPipeline:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences"
          description: Optional. Open fine-tuning pipeline of the PublisherModel.
        openFineTuningPipelines:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionOpenFineTuningPipelines"
          description: Optional. Open fine-tuning pipelines of the PublisherModel.
        openGenerationAiStudio:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences"
          description: Optional. Open in Generation AI Studio.
        openGenie:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences"
          description: Optional. Open Genie / Playground.
        openNotebook:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences"
          description: Optional. Open notebook of the PublisherModel.
        openNotebooks:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionOpenNotebooks"
          description: Optional. Open notebooks of the PublisherModel.
        openPromptTuningPipeline:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences"
          description: Optional. Open prompt-tuning pipeline of the PublisherModel.
        requestAccess:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences"
          description: Optional. Request for access.
        viewRestApi:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionViewRestApi"
          description: Optional. To view Rest API docs.
      type: object
    GoogleCloudAiplatformV1PublisherModelCallToActionDeploy:
      description: Model metadata that is needed for UploadModel or DeployModel/CreateEndpoint requests.
      properties:
        artifactUri:
          description: Optional. The path to the directory containing the Model artifact and any of its supporting files.
          type: string
        automaticResources:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1AutomaticResources"
          description: A description of resources that to large degree are decided by Vertex AI, and require only a modest additional configuration.
        containerSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelContainerSpec"
          description: Optional. The specification of the container that is to be used when deploying this Model in Vertex AI. Not present for Large Models.
        dedicatedResources:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DedicatedResources"
          description: A description of resources that are dedicated to the DeployedModel, and that need a higher degree of manual configuration.
        largeModelReference:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1LargeModelReference"
          description: Optional. Large model reference. When this is set, model_artifact_spec is not needed.
        modelDisplayName:
          description: Optional. Default model display name.
          type: string
        publicArtifactUri:
          description: Optional. The signed URI for ephemeral Cloud Storage access to model artifact.
          type: string
        sharedResources:
          description: "The resource name of the shared DeploymentResourcePool to deploy on. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`"
          type: string
        title:
          description: Required. The title of the regional resource reference.
          type: string
      type: object
    GoogleCloudAiplatformV1PublisherModelCallToActionDeployGke:
      description: Configurations for PublisherModel GKE deployment
      properties:
        gkeYamlConfigs:
          description: Optional. GKE deployment configuration in yaml format.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1PublisherModelCallToActionOpenFineTuningPipelines:
      description: Open fine tuning pipelines.
      properties:
        fineTuningPipelines:
          description: Required. Regional resource references to fine tuning pipelines.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences"
          type: array
      type: object
    GoogleCloudAiplatformV1PublisherModelCallToActionOpenNotebooks:
      description: Open notebooks.
      properties:
        notebooks:
          description: Required. Regional resource references to notebooks.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences"
          type: array
      type: object
    GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences:
      description: The regional resource name or the URI. Key is region, e.g., us-central1, europe-west2, global, etc..
      properties:
        references:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1PublisherModelResourceReference"
          description: Required.
          type: object
        resourceDescription:
          description: Optional. Description of the resource.
          type: string
        resourceTitle:
          description: Optional. Title of the resource.
          type: string
        resourceUseCase:
          description: Optional. Use case (CUJ) of the resource.
          type: string
        title:
          description: "Required. "
          type: string
      type: object
    GoogleCloudAiplatformV1PublisherModelCallToActionViewRestApi:
      description: Rest API docs.
      properties:
        documentations:
          description: Required.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1PublisherModelDocumentation"
          type: array
        title:
          description: Required. The title of the view rest API.
          type: string
      type: object
    GoogleCloudAiplatformV1PublisherModelDocumentation:
      description: A named piece of documentation.
      properties:
        content:
          description: Required. Content of this piece of document (in Markdown format).
          type: string
        title:
          description: Required. E.g., OVERVIEW, USE CASES, DOCUMENTATION, SDK & SAMPLES, JAVA, NODE.JS, etc..
          type: string
      type: object
    GoogleCloudAiplatformV1PublisherModelResourceReference:
      description: Reference to a resource.
      properties:
        description:
          deprecated: true
          description: Description of the resource.
          type: string
        resourceName:
          description: The resource name of the Google Cloud resource.
          type: string
        uri:
          description: The URI of the resource.
          type: string
        useCase:
          deprecated: true
          description: Use case (CUJ) of the resource.
          type: string
      type: object
    GoogleCloudAiplatformV1PurgeArtifactsMetadata:
      description: Details of operations that perform MetadataService.PurgeArtifacts.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for purging Artifacts.
      type: object
    GoogleCloudAiplatformV1PurgeArtifactsRequest:
      description: Request message for MetadataService.PurgeArtifacts.
      properties:
        filter:
          description: Required. A required filter matching the Artifacts to be purged. E.g., `update_time <= 2020-11-19T11:30:00-04:00`.
          type: string
        force:
          description: Optional. Flag to indicate to actually perform the purge. If `force` is set to false, the method will return a sample of Artifact names that would be deleted.
          type: boolean
      type: object
    GoogleCloudAiplatformV1PurgeArtifactsResponse:
      description: Response message for MetadataService.PurgeArtifacts.
      properties:
        purgeCount:
          description: The number of Artifacts that this request deleted (or, if `force` is false, the number of Artifacts that will be deleted). This can be an estimate.
          format: int64
          type: string
        purgeSample:
          description: A sample of the Artifact names that will be deleted. Only populated if `force` is set to false. The maximum number of samples is 100 (it is possible to return fewer).
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1PurgeContextsMetadata:
      description: Details of operations that perform MetadataService.PurgeContexts.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for purging Contexts.
      type: object
    GoogleCloudAiplatformV1PurgeContextsRequest:
      description: Request message for MetadataService.PurgeContexts.
      properties:
        filter:
          description: Required. A required filter matching the Contexts to be purged. E.g., `update_time <= 2020-11-19T11:30:00-04:00`.
          type: string
        force:
          description: Optional. Flag to indicate to actually perform the purge. If `force` is set to false, the method will return a sample of Context names that would be deleted.
          type: boolean
      type: object
    GoogleCloudAiplatformV1PurgeContextsResponse:
      description: Response message for MetadataService.PurgeContexts.
      properties:
        purgeCount:
          description: The number of Contexts that this request deleted (or, if `force` is false, the number of Contexts that will be deleted). This can be an estimate.
          format: int64
          type: string
        purgeSample:
          description: A sample of the Context names that will be deleted. Only populated if `force` is set to false. The maximum number of samples is 100 (it is possible to return fewer).
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1PurgeExecutionsMetadata:
      description: Details of operations that perform MetadataService.PurgeExecutions.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for purging Executions.
      type: object
    GoogleCloudAiplatformV1PurgeExecutionsRequest:
      description: Request message for MetadataService.PurgeExecutions.
      properties:
        filter:
          description: Required. A required filter matching the Executions to be purged. E.g., `update_time <= 2020-11-19T11:30:00-04:00`.
          type: string
        force:
          description: Optional. Flag to indicate to actually perform the purge. If `force` is set to false, the method will return a sample of Execution names that would be deleted.
          type: boolean
      type: object
    GoogleCloudAiplatformV1PurgeExecutionsResponse:
      description: Response message for MetadataService.PurgeExecutions.
      properties:
        purgeCount:
          description: The number of Executions that this request deleted (or, if `force` is false, the number of Executions that will be deleted). This can be an estimate.
          format: int64
          type: string
        purgeSample:
          description: A sample of the Execution names that will be deleted. Only populated if `force` is set to false. The maximum number of samples is 100 (it is possible to return fewer).
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1PythonPackageSpec:
      description: The spec of a Python packaged code.
      properties:
        args:
          description: Command line arguments to be passed to the Python task.
          items:
            type: string
          type: array
        env:
          description: Environment variables to be passed to the python module. Maximum limit is 100.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1EnvVar"
          type: array
        executorImageUri:
          description: Required. The URI of a container image in Artifact Registry that will run the provided Python package. Vertex AI provides a wide range of executor images with pre-installed packages to meet users' various use cases. See the list of [pre-built containers for training](https://cloud.google.com/vertex-ai/docs/training/pre-built-containers). You must use an image from this list.
          type: string
        packageUris:
          description: Required. The Google Cloud Storage location of the Python package files which are the training program and its dependent packages. The maximum number of package URIs is 100.
          items:
            type: string
          type: array
        pythonModule:
          description: Required. The Python module name to run after installing the packages.
          type: string
      type: object
    GoogleCloudAiplatformV1QueryDeployedModelsResponse:
      description: Response message for QueryDeployedModels method.
      properties:
        deployedModelRefs:
          description: References to the DeployedModels that share the specified deploymentResourcePool.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1DeployedModelRef"
          type: array
        deployedModels:
          deprecated: true
          description: DEPRECATED Use deployed_model_refs instead.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1DeployedModel"
          type: array
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        totalDeployedModelCount:
          description: The total number of DeployedModels on this DeploymentResourcePool.
          format: int32
          type: integer
        totalEndpointCount:
          description: The total number of Endpoints that have DeployedModels on this DeploymentResourcePool.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1RawPredictRequest:
      description: Request message for PredictionService.RawPredict.
      properties:
        httpBody:
          $ref: "#/components/schemas/GoogleApiHttpBody"
          description: The prediction input. Supports HTTP headers and arbitrary data payload. A DeployedModel may have an upper limit on the number of instances it supports per request. When this limit it is exceeded for an AutoML model, the RawPredict method returns an error. When this limit is exceeded for a custom-trained model, the behavior varies depending on the model. You can specify the schema for each instance in the predict_schemata.instance_schema_uri field when you create a Model. This schema applies when you deploy the `Model` as a `DeployedModel` to an Endpoint and use the `RawPredict` method.
      type: object
    GoogleCloudAiplatformV1ReadFeatureValuesRequest:
      description: Request message for FeaturestoreOnlineServingService.ReadFeatureValues.
      properties:
        entityId:
          description: Required. ID for a specific entity. For example, for a machine learning model predicting user clicks on a website, an entity ID could be `user_123`.
          type: string
        featureSelector:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureSelector"
          description: Required. Selector choosing Features of the target EntityType.
      type: object
    GoogleCloudAiplatformV1ReadFeatureValuesResponse:
      description: Response message for FeaturestoreOnlineServingService.ReadFeatureValues.
      properties:
        entityView:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityView"
          description: Entity view with Feature values. This may be the entity in the Featurestore if values for all Features were requested, or a projection of the entity in the Featurestore if values for only some Features were requested.
        header:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesResponseHeader"
          description: Response header.
      type: object
    GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityView:
      description: Entity view with Feature values.
      properties:
        data:
          description: Each piece of data holds the k requested values for one requested Feature. If no values for the requested Feature exist, the corresponding cell will be empty. This has the same size and is in the same order as the features from the header ReadFeatureValuesResponse.header.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityViewData"
          type: array
        entityId:
          description: ID of the requested entity.
          type: string
      type: object
    GoogleCloudAiplatformV1ReadFeatureValuesResponseEntityViewData:
      description: Container to hold value(s), successive in time, for one Feature from the request.
      properties:
        value:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureValue"
          description: Feature value if a single value is requested.
        values:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureValueList"
          description: Feature values list if values, successive in time, are requested. If the requested number of values is greater than the number of existing Feature values, nonexistent values are omitted instead of being returned as empty.
      type: object
    GoogleCloudAiplatformV1ReadFeatureValuesResponseFeatureDescriptor:
      description: Metadata for requested Features.
      properties:
        id:
          description: Feature ID.
          type: string
      type: object
    GoogleCloudAiplatformV1ReadFeatureValuesResponseHeader:
      description: Response header with metadata for the requested ReadFeatureValuesRequest.entity_type and Features.
      properties:
        entityType:
          description: "The resource name of the EntityType from the ReadFeatureValuesRequest. Value format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`."
          type: string
        featureDescriptors:
          description: List of Feature metadata corresponding to each piece of ReadFeatureValuesResponse.EntityView.data.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ReadFeatureValuesResponseFeatureDescriptor"
          type: array
      type: object
    GoogleCloudAiplatformV1ReadIndexDatapointsRequest:
      description: The request message for MatchService.ReadIndexDatapoints.
      properties:
        deployedIndexId:
          description: The ID of the DeployedIndex that will serve the request.
          type: string
        ids:
          description: IDs of the datapoints to be searched for.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1ReadIndexDatapointsResponse:
      description: The response message for MatchService.ReadIndexDatapoints.
      properties:
        datapoints:
          description: The result list of datapoints.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1IndexDatapoint"
          type: array
      type: object
    GoogleCloudAiplatformV1ReadTensorboardBlobDataResponse:
      description: Response message for TensorboardService.ReadTensorboardBlobData.
      properties:
        blobs:
          description: Blob messages containing blob bytes.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1TensorboardBlob"
          type: array
      type: object
    GoogleCloudAiplatformV1ReadTensorboardSizeResponse:
      description: Response message for TensorboardService.ReadTensorboardSize.
      properties:
        storageSizeByte:
          description: Payload storage size for the TensorBoard
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1ReadTensorboardTimeSeriesDataResponse:
      description: Response message for TensorboardService.ReadTensorboardTimeSeriesData.
      properties:
        timeSeriesData:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1TimeSeriesData"
          description: The returned time series data.
      type: object
    GoogleCloudAiplatformV1ReadTensorboardUsageResponse:
      description: Response message for TensorboardService.ReadTensorboardUsage.
      properties:
        monthlyUsageData:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerMonthUsageData"
          description: Maps year-month (YYYYMM) string to per month usage data.
          type: object
      type: object
    GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerMonthUsageData:
      description: Per month usage data
      properties:
        userUsageData:
          description: Usage data for each user in the given month.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerUserUsageData"
          type: array
      type: object
    GoogleCloudAiplatformV1ReadTensorboardUsageResponsePerUserUsageData:
      description: Per user usage data.
      properties:
        username:
          description: User's username
          type: string
        viewCount:
          description: Number of times the user has read data within the Tensorboard.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1RemoveContextChildrenRequest:
      description: Request message for MetadataService.DeleteContextChildrenRequest.
      properties:
        childContexts:
          description: The resource names of the child Contexts.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1RemoveContextChildrenResponse:
      description: Response message for MetadataService.RemoveContextChildren.
      properties: {}
      type: object
    GoogleCloudAiplatformV1RemoveDatapointsRequest:
      description: Request message for IndexService.RemoveDatapoints
      properties:
        datapointIds:
          description: A list of datapoint ids to be deleted.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1RemoveDatapointsResponse:
      description: Response message for IndexService.RemoveDatapoints
      properties: {}
      type: object
    GoogleCloudAiplatformV1ResourcesConsumed:
      description: Statistics information about resource consumption.
      properties:
        replicaHours:
          description: Output only. The number of replica hours used. Note that many replicas may run in parallel, and additionally any given work may be queued for some time. Therefore this value is not strictly related to wall time.
          format: double
          readOnly: true
          type: number
      type: object
    GoogleCloudAiplatformV1RestoreDatasetVersionOperationMetadata:
      description: Runtime operation information for DatasetService.RestoreDatasetVersion.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The common part of the operation metadata.
      type: object
    GoogleCloudAiplatformV1ResumeModelDeploymentMonitoringJobRequest:
      description: Request message for JobService.ResumeModelDeploymentMonitoringJob.
      properties: {}
      type: object
    GoogleCloudAiplatformV1ResumeScheduleRequest:
      description: Request message for ScheduleService.ResumeSchedule.
      properties:
        catchUp:
          description: Optional. Whether to backfill missed runs when the schedule is resumed from PAUSED state. If set to true, all missed runs will be scheduled. New runs will be scheduled after the backfill is complete. This will also update Schedule.catch_up field. Default to false.
          type: boolean
      type: object
    GoogleCloudAiplatformV1SafetyRating:
      description: Safety rating corresponding to the generated content.
      properties:
        blocked:
          description: Output only. Indicates whether the content was filtered out because of this rating.
          readOnly: true
          type: boolean
        category:
          description: Output only. Harm category.
          enum:
            - HARM_CATEGORY_UNSPECIFIED
            - HARM_CATEGORY_HATE_SPEECH
            - HARM_CATEGORY_DANGEROUS_CONTENT
            - HARM_CATEGORY_HARASSMENT
            - HARM_CATEGORY_SEXUALLY_EXPLICIT
          readOnly: true
          type: string
        probability:
          description: Output only. Harm probability levels in the content.
          enum:
            - HARM_PROBABILITY_UNSPECIFIED
            - NEGLIGIBLE
            - LOW
            - MEDIUM
            - HIGH
          readOnly: true
          type: string
        probabilityScore:
          description: Output only. Harm probability score.
          format: float
          readOnly: true
          type: number
        severity:
          description: Output only. Harm severity levels in the content.
          enum:
            - HARM_SEVERITY_UNSPECIFIED
            - HARM_SEVERITY_NEGLIGIBLE
            - HARM_SEVERITY_LOW
            - HARM_SEVERITY_MEDIUM
            - HARM_SEVERITY_HIGH
          readOnly: true
          type: string
        severityScore:
          description: Output only. Harm severity score.
          format: float
          readOnly: true
          type: number
      type: object
    GoogleCloudAiplatformV1SafetySetting:
      description: Safety settings.
      properties:
        category:
          description: Required. Harm category.
          enum:
            - HARM_CATEGORY_UNSPECIFIED
            - HARM_CATEGORY_HATE_SPEECH
            - HARM_CATEGORY_DANGEROUS_CONTENT
            - HARM_CATEGORY_HARASSMENT
            - HARM_CATEGORY_SEXUALLY_EXPLICIT
          type: string
        threshold:
          description: Required. The harm block threshold.
          enum:
            - HARM_BLOCK_THRESHOLD_UNSPECIFIED
            - BLOCK_LOW_AND_ABOVE
            - BLOCK_MEDIUM_AND_ABOVE
            - BLOCK_ONLY_HIGH
            - BLOCK_NONE
          type: string
      type: object
    GoogleCloudAiplatformV1SampleConfig:
      description: Active learning data sampling config. For every active learning labeling iteration, it will select a batch of data based on the sampling strategy.
      properties:
        followingBatchSamplePercentage:
          description: The percentage of data needed to be labeled in each following batch (except the first batch).
          format: int32
          type: integer
        initialBatchSamplePercentage:
          description: The percentage of data needed to be labeled in the first batch.
          format: int32
          type: integer
        sampleStrategy:
          description: Field to choose sampling strategy. Sampling strategy will decide which data should be selected for human labeling in every batch.
          enum:
            - SAMPLE_STRATEGY_UNSPECIFIED
            - UNCERTAINTY
          type: string
      type: object
    GoogleCloudAiplatformV1SampledShapleyAttribution:
      description: An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features.
      properties:
        pathCount:
          description: Required. The number of feature permutations to consider when approximating the Shapley values. Valid range of its value is [1, 50], inclusively.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1SamplingStrategy:
      description: Sampling Strategy for logging, can be for both training and prediction dataset.
      properties:
        randomSampleConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SamplingStrategyRandomSampleConfig"
          description: Random sample config. Will support more sampling strategies later.
      type: object
    GoogleCloudAiplatformV1SamplingStrategyRandomSampleConfig:
      description: Requests are randomly selected.
      properties:
        sampleRate:
          description: Sample rate (0, 1]
          format: double
          type: number
      type: object
    GoogleCloudAiplatformV1SavedQuery:
      description: A SavedQuery is a view of the dataset. It references a subset of annotations by problem type and filters.
      properties:
        annotationFilter:
          description: Output only. Filters on the Annotations in the dataset.
          readOnly: true
          type: string
        annotationSpecCount:
          description: Output only. Number of AnnotationSpecs in the context of the SavedQuery.
          format: int32
          readOnly: true
          type: integer
        createTime:
          description: Output only. Timestamp when this SavedQuery was created.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: Required. The user-defined name of the SavedQuery. The name can be up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        etag:
          description: Used to perform a consistent read-modify-write update. If not set, a blind "overwrite" update happens.
          type: string
        metadata:
          description: Some additional information about the SavedQuery.
        name:
          description: Output only. Resource name of the SavedQuery.
          readOnly: true
          type: string
        problemType:
          description: "Required. Problem type of the SavedQuery. Allowed values: * IMAGE_CLASSIFICATION_SINGLE_LABEL * IMAGE_CLASSIFICATION_MULTI_LABEL * IMAGE_BOUNDING_POLY * IMAGE_BOUNDING_BOX * TEXT_CLASSIFICATION_SINGLE_LABEL * TEXT_CLASSIFICATION_MULTI_LABEL * TEXT_EXTRACTION * TEXT_SENTIMENT * VIDEO_CLASSIFICATION * VIDEO_OBJECT_TRACKING"
          type: string
        supportAutomlTraining:
          description: Output only. If the Annotations belonging to the SavedQuery can be used for AutoML training.
          readOnly: true
          type: boolean
        updateTime:
          description: Output only. Timestamp when SavedQuery was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1Scalar:
      description: One point viewable on a scalar metric plot.
      properties:
        value:
          description: Value of the point at this step / timestamp.
          format: double
          type: number
      type: object
    GoogleCloudAiplatformV1Schedule:
      description: An instance of a Schedule periodically schedules runs to make API calls based on user specified time specification and API request type.
      properties:
        allowQueueing:
          description: Optional. Whether new scheduled runs can be queued when max_concurrent_runs limit is reached. If set to true, new runs will be queued instead of skipped. Default to false.
          type: boolean
        catchUp:
          description: Output only. Whether to backfill missed runs when the schedule is resumed from PAUSED state. If set to true, all missed runs will be scheduled. New runs will be scheduled after the backfill is complete. Default to false.
          readOnly: true
          type: boolean
        createPipelineJobRequest:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1CreatePipelineJobRequest"
          description: "Request for PipelineService.CreatePipelineJob. CreatePipelineJobRequest.parent field is required (format: projects/{project}/locations/{location})."
        createTime:
          description: Output only. Timestamp when this Schedule was created.
          format: google-datetime
          readOnly: true
          type: string
        cron:
          description: 'Cron schedule (https://en.wikipedia.org/wiki/Cron) to launch scheduled runs. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, "CRON_TZ=America/New_York 1 * * * *", or "TZ=America/New_York 1 * * * *".'
          type: string
        displayName:
          description: Required. User provided name of the Schedule. The name can be up to 128 characters long and can consist of any UTF-8 characters.
          type: string
        endTime:
          description: Optional. Timestamp after which no new runs can be scheduled. If specified, The schedule will be completed when either end_time is reached or when scheduled_run_count >= max_run_count. If not specified, new runs will keep getting scheduled until this Schedule is paused or deleted. Already scheduled runs will be allowed to complete. Unset if not specified.
          format: google-datetime
          type: string
        lastPauseTime:
          description: Output only. Timestamp when this Schedule was last paused. Unset if never paused.
          format: google-datetime
          readOnly: true
          type: string
        lastResumeTime:
          description: Output only. Timestamp when this Schedule was last resumed. Unset if never resumed from pause.
          format: google-datetime
          readOnly: true
          type: string
        lastScheduledRunResponse:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ScheduleRunResponse"
          description: Output only. Response of the last scheduled run. This is the response for starting the scheduled requests and not the execution of the operations/jobs created by the requests (if applicable). Unset if no run has been scheduled yet.
          readOnly: true
        maxConcurrentRunCount:
          description: Required. Maximum number of runs that can be started concurrently for this Schedule. This is the limit for starting the scheduled requests and not the execution of the operations/jobs created by the requests (if applicable).
          format: int64
          type: string
        maxRunCount:
          description: Optional. Maximum run count of the schedule. If specified, The schedule will be completed when either started_run_count >= max_run_count or when end_time is reached. If not specified, new runs will keep getting scheduled until this Schedule is paused or deleted. Already scheduled runs will be allowed to complete. Unset if not specified.
          format: int64
          type: string
        name:
          description: Immutable. The resource name of the Schedule.
          type: string
        nextRunTime:
          description: Output only. Timestamp when this Schedule should schedule the next run. Having a next_run_time in the past means the runs are being started behind schedule.
          format: google-datetime
          readOnly: true
          type: string
        startTime:
          description: Optional. Timestamp after which the first run can be scheduled. Default to Schedule create time if not specified.
          format: google-datetime
          type: string
        startedRunCount:
          description: Output only. The number of runs started by this schedule.
          format: int64
          readOnly: true
          type: string
        state:
          description: Output only. The state of this Schedule.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - PAUSED
            - COMPLETED
          readOnly: true
          type: string
        updateTime:
          description: Output only. Timestamp when this Schedule was updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1ScheduleRunResponse:
      description: Status of a scheduled run.
      properties:
        runResponse:
          description: The response of the scheduled run.
          type: string
        scheduledRunTime:
          description: The scheduled run time based on the user-specified schedule.
          format: google-datetime
          type: string
      type: object
    GoogleCloudAiplatformV1Scheduling:
      description: All parameters related to queuing and scheduling of custom jobs.
      properties:
        disableRetries:
          description: Optional. Indicates if the job should retry for internal errors after the job starts running. If true, overrides `Scheduling.restart_job_on_worker_restart` to false.
          type: boolean
        restartJobOnWorkerRestart:
          description: Restarts the entire CustomJob if a worker gets restarted. This feature can be used by distributed training jobs that are not resilient to workers leaving and joining a job.
          type: boolean
        timeout:
          description: The maximum job running time. The default is 7 days.
          format: google-duration
          type: string
      type: object
    GoogleCloudAiplatformV1Schema:
      description: Schema is used to define the format of input/output data. Represents a select subset of an [OpenAPI 3.0 schema object](https://spec.openapis.org/oas/v3.0.3#schema). More fields may be added in the future as needed.
      properties:
        description:
          description: Optional. The description of the data.
          type: string
        enum:
          description: 'Optional. Possible values of the element of Type.STRING with enum format. For example we can define an Enum Direction as : {type:STRING, format:enum, enum:["EAST", NORTH", "SOUTH", "WEST"]}'
          items:
            type: string
          type: array
        example:
          description: Optional. Example of the object. Will only populated when the object is the root.
        format:
          description: "Optional. The format of the data. Supported formats: for NUMBER type: float, double for INTEGER type: int32, int64"
          type: string
        items:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Schema"
          description: Optional. Schema of the elements of Type.ARRAY.
        nullable:
          description: Optional. Indicates if the value may be null.
          type: boolean
        properties:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Schema"
          description: Optional. Properties of Type.OBJECT.
          type: object
        required:
          description: Optional. Required properties of Type.OBJECT.
          items:
            type: string
          type: array
        type:
          description: Optional. The type of the data.
          enum:
            - TYPE_UNSPECIFIED
            - STRING
            - NUMBER
            - INTEGER
            - BOOLEAN
            - ARRAY
            - OBJECT
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaAnnotationSpecColor:
      description: An entry of mapping between color and AnnotationSpec. The mapping is used in segmentation mask.
      properties:
        color:
          $ref: "#/components/schemas/GoogleTypeColor"
          description: The color of the AnnotationSpec in a segmentation mask.
        displayName:
          description: The display name of the AnnotationSpec represented by the color in the segmentation mask.
          type: string
        id:
          description: The ID of the AnnotationSpec represented by the color in the segmentation mask.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaImageBoundingBoxAnnotation:
      description: Annotation details specific to image object detection.
      properties:
        annotationSpecId:
          description: The resource Id of the AnnotationSpec that this Annotation pertains to.
          type: string
        displayName:
          description: The display name of the AnnotationSpec that this Annotation pertains to.
          type: string
        xMax:
          description: The rightmost coordinate of the bounding box.
          format: double
          type: number
        xMin:
          description: The leftmost coordinate of the bounding box.
          format: double
          type: number
        yMax:
          description: The bottommost coordinate of the bounding box.
          format: double
          type: number
        yMin:
          description: The topmost coordinate of the bounding box.
          format: double
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaImageClassificationAnnotation:
      description: Annotation details specific to image classification.
      properties:
        annotationSpecId:
          description: The resource Id of the AnnotationSpec that this Annotation pertains to.
          type: string
        displayName:
          description: The display name of the AnnotationSpec that this Annotation pertains to.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaImageDataItem:
      description: Payload of Image DataItem.
      properties:
        gcsUri:
          description: Required. Google Cloud Storage URI points to the original image in user's bucket. The image is up to 30MB in size.
          type: string
        mimeType:
          description: Output only. The mime type of the content of the image. Only the images in below listed mime types are supported. - image/jpeg - image/gif - image/png - image/webp - image/bmp - image/tiff - image/vnd.microsoft.icon
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaImageDatasetMetadata:
      description: The metadata of Datasets that contain Image DataItems.
      properties:
        dataItemSchemaUri:
          description: Points to a YAML file stored on Google Cloud Storage describing payload of the Image DataItems that belong to this Dataset.
          type: string
        gcsBucket:
          description: Google Cloud Storage Bucket name that contains the blob data of this Dataset.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation:
      description: Annotation details specific to image segmentation.
      properties:
        maskAnnotation:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation"
          description: Mask based segmentation annotation. Only one mask annotation can exist for one image.
        polygonAnnotation:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation"
          description: Polygon annotation.
        polylineAnnotation:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation"
          description: Polyline annotation.
      type: object
    GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation:
      description: The mask based segmentation annotation.
      properties:
        annotationSpecColors:
          description: The mapping between color and AnnotationSpec for this Annotation.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaAnnotationSpecColor"
          type: array
        maskGcsUri:
          description: Google Cloud Storage URI that points to the mask image. The image must be in PNG format. It must have the same size as the DataItem's image. Each pixel in the image mask represents the AnnotationSpec which the pixel in the image DataItem belong to. Each color is mapped to one AnnotationSpec based on annotation_spec_colors.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation:
      description: Represents a polygon in image.
      properties:
        annotationSpecId:
          description: The resource Id of the AnnotationSpec that this Annotation pertains to.
          type: string
        displayName:
          description: The display name of the AnnotationSpec that this Annotation pertains to.
          type: string
        vertexes:
          description: The vertexes are connected one by one and the last vertex is connected to the first one to represent a polygon.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaVertex"
          type: array
      type: object
    GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation:
      description: Represents a polyline in image.
      properties:
        annotationSpecId:
          description: The resource Id of the AnnotationSpec that this Annotation pertains to.
          type: string
        displayName:
          description: The display name of the AnnotationSpec that this Annotation pertains to.
          type: string
        vertexes:
          description: The vertexes are connected one by one and the last vertex in not connected to the first one.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaVertex"
          type: array
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetrics:
      description: Bounding box matching model metrics for a single intersection-over-union threshold and multiple label match confidence thresholds.
      properties:
        confidenceMetrics:
          description: Metrics for each label-match confidence_threshold from 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99. Precision-recall curve is derived from them.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetricsConfidenceMetrics"
          type: array
        iouThreshold:
          description: The intersection-over-union threshold value used to compute this metrics entry.
          format: float
          type: number
        meanAveragePrecision:
          description: The mean average precision, most often close to `auPrc`.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetricsConfidenceMetrics:
      description: Metrics for a single confidence threshold.
      properties:
        confidenceThreshold:
          description: The confidence threshold value used to compute the metrics.
          format: float
          type: number
        f1Score:
          description: The harmonic mean of recall and precision.
          format: float
          type: number
        precision:
          description: Precision under the given confidence threshold.
          format: float
          type: number
        recall:
          description: Recall under the given confidence threshold.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetrics:
      description: Metrics for classification evaluation results.
      properties:
        auPrc:
          description: The Area Under Precision-Recall Curve metric. Micro-averaged for the overall evaluation.
          format: float
          type: number
        auRoc:
          description: The Area Under Receiver Operating Characteristic curve metric. Micro-averaged for the overall evaluation.
          format: float
          type: number
        confidenceMetrics:
          description: Metrics for each `confidenceThreshold` in 0.00,0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and `positionThreshold` = INT32_MAX_VALUE. ROC and precision-recall curves, and other aggregated metrics are derived from them. The confidence metrics entries may also be supplied for additional values of `positionThreshold`, but from these no aggregated metrics are computed.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics"
          type: array
        confusionMatrix:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix"
          description: Confusion matrix of the evaluation.
        logLoss:
          description: The Log Loss metric.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics:
      properties:
        confidenceThreshold:
          description: Metrics are computed with an assumption that the Model never returns predictions with score lower than this value.
          format: float
          type: number
        confusionMatrix:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix"
          description: Confusion matrix of the evaluation for this confidence_threshold.
        f1Score:
          description: The harmonic mean of recall and precision. For summary metrics, it computes the micro-averaged F1 score.
          format: float
          type: number
        f1ScoreAt1:
          description: The harmonic mean of recallAt1 and precisionAt1.
          format: float
          type: number
        f1ScoreMacro:
          description: Macro-averaged F1 Score.
          format: float
          type: number
        f1ScoreMicro:
          description: Micro-averaged F1 Score.
          format: float
          type: number
        falseNegativeCount:
          description: The number of ground truth labels that are not matched by a Model created label.
          format: int64
          type: string
        falsePositiveCount:
          description: The number of Model created labels that do not match a ground truth label.
          format: int64
          type: string
        falsePositiveRate:
          description: False Positive Rate for the given confidence threshold.
          format: float
          type: number
        falsePositiveRateAt1:
          description: The False Positive Rate when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem.
          format: float
          type: number
        maxPredictions:
          description: Metrics are computed with an assumption that the Model always returns at most this many predictions (ordered by their score, descendingly), but they all still need to meet the `confidenceThreshold`.
          format: int32
          type: integer
        precision:
          description: Precision for the given confidence threshold.
          format: float
          type: number
        precisionAt1:
          description: The precision when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem.
          format: float
          type: number
        recall:
          description: Recall (True Positive Rate) for the given confidence threshold.
          format: float
          type: number
        recallAt1:
          description: The Recall (True Positive Rate) when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem.
          format: float
          type: number
        trueNegativeCount:
          description: The number of labels that were not created by the Model, but if they would, they would not match a ground truth label.
          format: int64
          type: string
        truePositiveCount:
          description: The number of Model created labels that match a ground truth label.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix:
      properties:
        annotationSpecs:
          description: AnnotationSpecs used in the confusion matrix. For AutoML Text Extraction, a special negative AnnotationSpec with empty `id` and `displayName` of "NULL" will be added as the last element.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef"
          type: array
        rows:
          description: Rows in the confusion matrix. The number of rows is equal to the size of `annotationSpecs`. `rowsi` is the number of DataItems that have ground truth of the `annotationSpecs[i]` and are predicted as `annotationSpecs[j]` by the Model being evaluated. For Text Extraction, when `annotationSpecs[i]` is the last element in `annotationSpecs`, i.e. the special negative AnnotationSpec, `rowsi` is the number of predicted entities of `annoatationSpec[j]` that are not labeled as any of the ground truth AnnotationSpec. When annotationSpecs[j] is the special negative AnnotationSpec, `rowsi` is the number of entities have ground truth of `annotationSpec[i]` that are not predicted as an entity by the Model. The value of the last cell, i.e. `rowi` where i == j and `annotationSpec[i]` is the special negative AnnotationSpec, is always 0.
          items:
            items: {}
            type: array
          type: array
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef:
      properties:
        displayName:
          description: Display name of the AnnotationSpec.
          type: string
        id:
          description: ID of the AnnotationSpec.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics:
      description: Metrics for forecasting evaluation results.
      properties:
        meanAbsoluteError:
          description: Mean Absolute Error (MAE).
          format: float
          type: number
        meanAbsolutePercentageError:
          description: Mean absolute percentage error. Infinity when there are zeros in the ground truth.
          format: float
          type: number
        quantileMetrics:
          description: The quantile metrics entries for each quantile.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry"
          type: array
        rSquared:
          description: Coefficient of determination as Pearson correlation coefficient. Undefined when ground truth or predictions are constant or near constant.
          format: float
          type: number
        rootMeanSquaredError:
          description: Root Mean Squared Error (RMSE).
          format: float
          type: number
        rootMeanSquaredLogError:
          description: Root mean squared log error. Undefined when there are negative ground truth values or predictions.
          format: float
          type: number
        rootMeanSquaredPercentageError:
          description: Root Mean Square Percentage Error. Square root of MSPE. Undefined/imaginary when MSPE is negative.
          format: float
          type: number
        weightedAbsolutePercentageError:
          description: Weighted Absolute Percentage Error. Does not use weights, this is just what the metric is called. Undefined if actual values sum to zero. Will be very large if actual values sum to a very small number.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry:
      description: Entry for the Quantiles loss type optimization objective.
      properties:
        observedQuantile:
          description: This is a custom metric that calculates the percentage of true values that were less than the predicted value for that quantile. Only populated when optimization_objective is minimize-quantile-loss and each entry corresponds to an entry in quantiles The percent value can be used to compare with the quantile value, which is the target value.
          format: double
          type: number
        quantile:
          description: The quantile for this entry.
          format: double
          type: number
        scaledPinballLoss:
          description: The scaled pinball loss of this quantile.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics:
      properties:
        bleu:
          description: BLEU (bilingual evaluation understudy) scores based on sacrebleu implementation.
          format: float
          type: number
        rougeLSum:
          description: ROUGE-L (Longest Common Subsequence) scoring at summary level.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageObjectDetectionEvaluationMetrics:
      description: Metrics for image object detection evaluation results.
      properties:
        boundingBoxMeanAveragePrecision:
          description: "The single metric for bounding boxes evaluation: the `meanAveragePrecision` averaged over all `boundingBoxMetricsEntries`."
          format: float
          type: number
        boundingBoxMetrics:
          description: The bounding boxes match metrics for each intersection-over-union threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetrics"
          type: array
        evaluatedBoundingBoxCount:
          description: The total number of bounding boxes (i.e. summed over all images) the ground truth used to create this evaluation had.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetrics:
      description: Metrics for image segmentation evaluation results.
      properties:
        confidenceMetricsEntries:
          description: Metrics for each confidenceThreshold in 0.00,0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 Precision-recall curve can be derived from it.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntry"
          type: array
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntry:
      properties:
        confidenceThreshold:
          description: Metrics are computed with an assumption that the model never returns predictions with score lower than this value.
          format: float
          type: number
        confusionMatrix:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix"
          description: Confusion matrix for the given confidence threshold.
        diceScoreCoefficient:
          description: DSC or the F1 score, The harmonic mean of recall and precision.
          format: float
          type: number
        iouScore:
          description: The intersection-over-union score. The measure of overlap of the annotation's category mask with ground truth category mask on the DataItem.
          format: float
          type: number
        precision:
          description: Precision for the given confidence threshold.
          format: float
          type: number
        recall:
          description: Recall (True Positive Rate) for the given confidence threshold.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsQuestionAnsweringEvaluationMetrics:
      properties:
        exactMatch:
          description: The rate at which the input predicted strings exactly match their references.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics:
      description: Metrics for regression evaluation results.
      properties:
        meanAbsoluteError:
          description: Mean Absolute Error (MAE).
          format: float
          type: number
        meanAbsolutePercentageError:
          description: Mean absolute percentage error. Infinity when there are zeros in the ground truth.
          format: float
          type: number
        rSquared:
          description: Coefficient of determination as Pearson correlation coefficient. Undefined when ground truth or predictions are constant or near constant.
          format: float
          type: number
        rootMeanSquaredError:
          description: Root Mean Squared Error (RMSE).
          format: float
          type: number
        rootMeanSquaredLogError:
          description: Root mean squared log error. Undefined when there are negative ground truth values or predictions.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsSummarizationEvaluationMetrics:
      properties:
        rougeLSum:
          description: ROUGE-L (Longest Common Subsequence) scoring at summary level.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetrics:
      description: Metrics for text extraction evaluation results.
      properties:
        confidenceMetrics:
          description: Metrics that have confidence thresholds. Precision-recall curve can be derived from them.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetrics"
          type: array
        confusionMatrix:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix"
          description: Confusion matrix of the evaluation. Only set for Models where number of AnnotationSpecs is no more than 10. Only set for ModelEvaluations, not for ModelEvaluationSlices.
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetrics:
      properties:
        confidenceThreshold:
          description: Metrics are computed with an assumption that the Model never returns predictions with score lower than this value.
          format: float
          type: number
        f1Score:
          description: The harmonic mean of recall and precision.
          format: float
          type: number
        precision:
          description: Precision for the given confidence threshold.
          format: float
          type: number
        recall:
          description: Recall (True Positive Rate) for the given confidence threshold.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics:
      description: Model evaluation metrics for text sentiment problems.
      properties:
        confusionMatrix:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix"
          description: Confusion matrix of the evaluation. Only set for ModelEvaluations, not for ModelEvaluationSlices.
        f1Score:
          description: The harmonic mean of recall and precision.
          format: float
          type: number
        linearKappa:
          description: Linear weighted kappa. Only set for ModelEvaluations, not for ModelEvaluationSlices.
          format: float
          type: number
        meanAbsoluteError:
          description: Mean absolute error. Only set for ModelEvaluations, not for ModelEvaluationSlices.
          format: float
          type: number
        meanSquaredError:
          description: Mean squared error. Only set for ModelEvaluations, not for ModelEvaluationSlices.
          format: float
          type: number
        precision:
          description: Precision.
          format: float
          type: number
        quadraticKappa:
          description: Quadratic weighted kappa. Only set for ModelEvaluations, not for ModelEvaluationSlices.
          format: float
          type: number
        recall:
          description: Recall.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetrics:
      description: UNIMPLEMENTED. Track matching model metrics for a single track match threshold and multiple label match confidence thresholds.
      properties:
        confidenceMetrics:
          description: Metrics for each label-match `confidenceThreshold` from 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99. Precision-recall curve is derived from them.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetricsConfidenceMetrics"
          type: array
        iouThreshold:
          description: The intersection-over-union threshold value between bounding boxes across frames used to compute this metric entry.
          format: float
          type: number
        meanBoundingBoxIou:
          description: The mean bounding box iou over all confidence thresholds.
          format: float
          type: number
        meanMismatchRate:
          description: The mean mismatch rate over all confidence thresholds.
          format: float
          type: number
        meanTrackingAveragePrecision:
          description: The mean average precision over all confidence thresholds.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetricsConfidenceMetrics:
      description: Metrics for a single confidence threshold.
      properties:
        boundingBoxIou:
          description: Bounding box intersection-over-union precision. Measures how well the bounding boxes overlap between each other (e.g. complete overlap or just barely above iou_threshold).
          format: float
          type: number
        confidenceThreshold:
          description: The confidence threshold value used to compute the metrics.
          format: float
          type: number
        mismatchRate:
          description: Mismatch rate, which measures the tracking consistency, i.e. correctness of instance ID continuity.
          format: float
          type: number
        trackingPrecision:
          description: Tracking precision.
          format: float
          type: number
        trackingRecall:
          description: Tracking recall.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics:
      description: The Evaluation metrics given a specific precision_window_length.
      properties:
        confidenceMetrics:
          description: Metrics for each label-match confidence_threshold from 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics"
          type: array
        meanAveragePrecision:
          description: The mean average precision.
          format: float
          type: number
        precisionWindowLength:
          description: This VideoActionMetrics is calculated based on this prediction window length. If the predicted action's timestamp is inside the time window whose center is the ground truth action's timestamp with this specific length, the prediction result is treated as a true positive.
          format: google-duration
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics:
      description: Metrics for a single confidence threshold.
      properties:
        confidenceThreshold:
          description: Output only. The confidence threshold value used to compute the metrics.
          format: float
          type: number
        f1Score:
          description: Output only. The harmonic mean of recall and precision.
          format: float
          type: number
        precision:
          description: Output only. Precision for the given confidence threshold.
          format: float
          type: number
        recall:
          description: Output only. Recall for the given confidence threshold.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionRecognitionMetrics:
      description: Model evaluation metrics for video action recognition.
      properties:
        evaluatedActionCount:
          description: The number of ground truth actions used to create this evaluation.
          format: int32
          type: integer
        videoActionMetrics:
          description: "The metric entries for precision window lengths: 1s,2s,3s."
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics"
          type: array
      type: object
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoObjectTrackingMetrics:
      description: Model evaluation metrics for video object tracking problems. Evaluates prediction quality of both labeled bounding boxes and labeled tracks (i.e. series of bounding boxes sharing same label and instance ID).
      properties:
        boundingBoxMeanAveragePrecision:
          description: "The single metric for bounding boxes evaluation: the `meanAveragePrecision` averaged over all `boundingBoxMetrics`."
          format: float
          type: number
        boundingBoxMetrics:
          description: The bounding boxes match metrics for each intersection-over-union threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsBoundingBoxMetrics"
          type: array
        evaluatedBoundingBoxCount:
          description: UNIMPLEMENTED. The total number of bounding boxes (i.e. summed over all frames) the ground truth used to create this evaluation had.
          format: int32
          type: integer
        evaluatedFrameCount:
          description: UNIMPLEMENTED. The number of video frames used to create this evaluation.
          format: int32
          type: integer
        evaluatedTrackCount:
          description: UNIMPLEMENTED. The total number of tracks (i.e. as seen across all frames) the ground truth used to create this evaluation had.
          format: int32
          type: integer
        trackMeanAveragePrecision:
          description: "UNIMPLEMENTED. The single metric for tracks accuracy evaluation: the `meanAveragePrecision` averaged over all `trackMetrics`."
          format: float
          type: number
        trackMeanBoundingBoxIou:
          description: "UNIMPLEMENTED. The single metric for tracks bounding box iou evaluation: the `meanBoundingBoxIou` averaged over all `trackMetrics`."
          format: float
          type: number
        trackMeanMismatchRate:
          description: "UNIMPLEMENTED. The single metric for tracking consistency evaluation: the `meanMismatchRate` averaged over all `trackMetrics`."
          format: float
          type: number
        trackMetrics:
          description: UNIMPLEMENTED. The tracks match metrics for each intersection-over-union threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaModelevaluationMetricsTrackMetrics"
          type: array
      type: object
    GoogleCloudAiplatformV1SchemaPredictInstanceImageClassificationPredictionInstance:
      description: Prediction input format for Image Classification.
      properties:
        content:
          description: The image bytes or Cloud Storage URI to make the prediction on.
          type: string
        mimeType:
          description: The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image/jpeg - image/gif - image/png - image/webp - image/bmp - image/tiff - image/vnd.microsoft.icon
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaPredictInstanceImageObjectDetectionPredictionInstance:
      description: Prediction input format for Image Object Detection.
      properties:
        content:
          description: The image bytes or Cloud Storage URI to make the prediction on.
          type: string
        mimeType:
          description: The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image/jpeg - image/gif - image/png - image/webp - image/bmp - image/tiff - image/vnd.microsoft.icon
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaPredictInstanceImageSegmentationPredictionInstance:
      description: Prediction input format for Image Segmentation.
      properties:
        content:
          description: The image bytes to make the predictions on.
          type: string
        mimeType:
          description: The MIME type of the content of the image. Only the images in below listed MIME types are supported. - image/jpeg - image/png
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaPredictInstanceTextClassificationPredictionInstance:
      description: Prediction input format for Text Classification.
      properties:
        content:
          description: The text snippet to make the predictions on.
          type: string
        mimeType:
          description: The MIME type of the text snippet. The supported MIME types are listed below. - text/plain
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaPredictInstanceTextExtractionPredictionInstance:
      description: Prediction input format for Text Extraction.
      properties:
        content:
          description: The text snippet to make the predictions on.
          type: string
        key:
          description: This field is only used for batch prediction. If a key is provided, the batch prediction result will by mapped to this key. If omitted, then the batch prediction result will contain the entire input instance. Vertex AI will not check if keys in the request are duplicates, so it is up to the caller to ensure the keys are unique.
          type: string
        mimeType:
          description: The MIME type of the text snippet. The supported MIME types are listed below. - text/plain
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaPredictInstanceTextSentimentPredictionInstance:
      description: Prediction input format for Text Sentiment.
      properties:
        content:
          description: The text snippet to make the predictions on.
          type: string
        mimeType:
          description: The MIME type of the text snippet. The supported MIME types are listed below. - text/plain
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaPredictInstanceVideoActionRecognitionPredictionInstance:
      description: Prediction input format for Video Action Recognition.
      properties:
        content:
          description: The Google Cloud Storage location of the video on which to perform the prediction.
          type: string
        mimeType:
          description: "The MIME type of the content of the video. Only the following are supported: video/mp4 video/avi video/quicktime"
          type: string
        timeSegmentEnd:
          description: The end, exclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision, and "inf" or "Infinity" is allowed, which means the end of the video.
          type: string
        timeSegmentStart:
          description: The beginning, inclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaPredictInstanceVideoClassificationPredictionInstance:
      description: Prediction input format for Video Classification.
      properties:
        content:
          description: The Google Cloud Storage location of the video on which to perform the prediction.
          type: string
        mimeType:
          description: "The MIME type of the content of the video. Only the following are supported: video/mp4 video/avi video/quicktime"
          type: string
        timeSegmentEnd:
          description: The end, exclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision, and "inf" or "Infinity" is allowed, which means the end of the video.
          type: string
        timeSegmentStart:
          description: The beginning, inclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaPredictInstanceVideoObjectTrackingPredictionInstance:
      description: Prediction input format for Video Object Tracking.
      properties:
        content:
          description: The Google Cloud Storage location of the video on which to perform the prediction.
          type: string
        mimeType:
          description: "The MIME type of the content of the video. Only the following are supported: video/mp4 video/avi video/quicktime"
          type: string
        timeSegmentEnd:
          description: The end, exclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision, and "inf" or "Infinity" is allowed, which means the end of the video.
          type: string
        timeSegmentStart:
          description: The beginning, inclusive, of the video's time segment on which to perform the prediction. Expressed as a number of seconds as measured from the start of the video, with "s" appended at the end. Fractions are allowed, up to a microsecond precision.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig:
      description: The configuration for grounding checking.
      properties:
        disableAttribution:
          description: If set, skip finding claim attributions (i.e not generate grounding citation).
          type: boolean
        sources:
          description: The sources for the grounding checking.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry"
          type: array
      type: object
    GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry:
      description: Single source entry for the grounding checking.
      properties:
        enterpriseDatastore:
          deprecated: true
          description: The uri of the Vertex AI Search data source. Deprecated. Use vertex_ai_search_datastore instead.
          type: string
        inlineContext:
          description: The grounding text passed inline with the Predict API. It can support up to 1 million bytes.
          type: string
        type:
          description: The type of the grounding checking source.
          enum:
            - UNSPECIFIED
            - WEB
            - ENTERPRISE
            - VERTEX_AI_SEARCH
            - INLINE
          type: string
          x-enumDeprecated:
            - false
            - false
            - true
            - false
            - false
        vertexAiSearchDatastore:
          description: The uri of the Vertex AI Search data source.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaPredictParamsImageClassificationPredictionParams:
      description: Prediction model parameters for Image Classification.
      properties:
        confidenceThreshold:
          description: The Model only returns predictions with at least this confidence score. Default value is 0.0
          format: float
          type: number
        maxPredictions:
          description: The Model only returns up to that many top, by confidence score, predictions per instance. If this number is very high, the Model may return fewer predictions. Default value is 10.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1SchemaPredictParamsImageObjectDetectionPredictionParams:
      description: Prediction model parameters for Image Object Detection.
      properties:
        confidenceThreshold:
          description: The Model only returns predictions with at least this confidence score. Default value is 0.0
          format: float
          type: number
        maxPredictions:
          description: The Model only returns up to that many top, by confidence score, predictions per instance. Note that number of returned predictions is also limited by metadata's predictionsLimit. Default value is 10.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1SchemaPredictParamsImageSegmentationPredictionParams:
      description: Prediction model parameters for Image Segmentation.
      properties:
        confidenceThreshold:
          description: When the model predicts category of pixels of the image, it will only provide predictions for pixels that it is at least this much confident about. All other pixels will be classified as background. Default value is 0.5.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaPredictParamsVideoActionRecognitionPredictionParams:
      description: Prediction model parameters for Video Action Recognition.
      properties:
        confidenceThreshold:
          description: The Model only returns predictions with at least this confidence score. Default value is 0.0
          format: float
          type: number
        maxPredictions:
          description: The model only returns up to that many top, by confidence score, predictions per frame of the video. If this number is very high, the Model may return fewer predictions per frame. Default value is 50.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams:
      description: Prediction model parameters for Video Classification.
      properties:
        confidenceThreshold:
          description: The Model only returns predictions with at least this confidence score. Default value is 0.0
          format: float
          type: number
        maxPredictions:
          description: The Model only returns up to that many top, by confidence score, predictions per instance. If this number is very high, the Model may return fewer predictions. Default value is 10,000.
          format: int32
          type: integer
        oneSecIntervalClassification:
          description: "Set to true to request classification for a video at one-second intervals. Vertex AI returns labels and their confidence scores for each second of the entire time segment of the video that user specified in the input WARNING: Model evaluation is not done for this classification type, the quality of it depends on the training data, but there are no metrics provided to describe that quality. Default value is false"
          type: boolean
        segmentClassification:
          description: Set to true to request segment-level classification. Vertex AI returns labels and their confidence scores for the entire time segment of the video that user specified in the input instance. Default value is true
          type: boolean
        shotClassification:
          description: "Set to true to request shot-level classification. Vertex AI determines the boundaries for each camera shot in the entire time segment of the video that user specified in the input instance. Vertex AI then returns labels and their confidence scores for each detected shot, along with the start and end time of the shot. WARNING: Model evaluation is not done for this classification type, the quality of it depends on the training data, but there are no metrics provided to describe that quality. Default value is false"
          type: boolean
      type: object
    GoogleCloudAiplatformV1SchemaPredictParamsVideoObjectTrackingPredictionParams:
      description: Prediction model parameters for Video Object Tracking.
      properties:
        confidenceThreshold:
          description: The Model only returns predictions with at least this confidence score. Default value is 0.0
          format: float
          type: number
        maxPredictions:
          description: The model only returns up to that many top, by confidence score, predictions per frame of the video. If this number is very high, the Model may return fewer predictions per frame. Default value is 50.
          format: int32
          type: integer
        minBoundingBoxSize:
          description: Only bounding boxes with shortest edge at least that long as a relative value of video frame size are returned. Default value is 0.0.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult:
      description: Prediction output format for Image and Text Classification.
      properties:
        confidences:
          description: The Model's confidences in correctness of the predicted IDs, higher value means higher confidence. Order matches the Ids.
          items:
            format: float
            type: number
          type: array
        displayNames:
          description: The display names of the AnnotationSpecs that had been identified, order matches the IDs.
          items:
            type: string
          type: array
        ids:
          description: The resource IDs of the AnnotationSpecs that had been identified.
          items:
            format: int64
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1SchemaPredictPredictionImageObjectDetectionPredictionResult:
      description: Prediction output format for Image Object Detection.
      properties:
        bboxes:
          description: Bounding boxes, i.e. the rectangles over the image, that pinpoint the found AnnotationSpecs. Given in order that matches the IDs. Each bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and `yMax`, which represent the extremal coordinates of the box. They are relative to the image size, and the point 0,0 is in the top left of the image.
          items:
            items: {}
            type: array
          type: array
        confidences:
          description: The Model's confidences in correctness of the predicted IDs, higher value means higher confidence. Order matches the Ids.
          items:
            format: float
            type: number
          type: array
        displayNames:
          description: The display names of the AnnotationSpecs that had been identified, order matches the IDs.
          items:
            type: string
          type: array
        ids:
          description: The resource IDs of the AnnotationSpecs that had been identified, ordered by the confidence score descendingly.
          items:
            format: int64
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult:
      description: Prediction output format for Image Segmentation.
      properties:
        categoryMask:
          description: A PNG image where each pixel in the mask represents the category in which the pixel in the original image was predicted to belong to. The size of this image will be the same as the original image. The mapping between the AnntoationSpec and the color can be found in model's metadata. The model will choose the most likely category and if none of the categories reach the confidence threshold, the pixel will be marked as background.
          type: string
        confidenceMask:
          description: A one channel image which is encoded as an 8bit lossless PNG. The size of the image will be the same as the original image. For a specific pixel, darker color means less confidence in correctness of the cateogry in the categoryMask for the corresponding pixel. Black means no confidence and white means complete confidence.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaPredictPredictionTabularClassificationPredictionResult:
      description: Prediction output format for Tabular Classification.
      properties:
        classes:
          description: The name of the classes being classified, contains all possible values of the target column.
          items:
            type: string
          type: array
        scores:
          description: The model's confidence in each class being correct, higher value means higher confidence. The N-th score corresponds to the N-th class in classes.
          items:
            format: float
            type: number
          type: array
      type: object
    GoogleCloudAiplatformV1SchemaPredictPredictionTabularRegressionPredictionResult:
      description: Prediction output format for Tabular Regression.
      properties:
        lowerBound:
          description: The lower bound of the prediction interval.
          format: float
          type: number
        quantilePredictions:
          description: Quantile predictions, in 1-1 correspondence with quantile_values.
          items:
            format: float
            type: number
          type: array
        quantileValues:
          description: Quantile values.
          items:
            format: float
            type: number
          type: array
        upperBound:
          description: The upper bound of the prediction interval.
          format: float
          type: number
        value:
          description: The regression value.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaPredictPredictionTextExtractionPredictionResult:
      description: Prediction output format for Text Extraction.
      properties:
        confidences:
          description: The Model's confidences in correctness of the predicted IDs, higher value means higher confidence. Order matches the Ids.
          items:
            format: float
            type: number
          type: array
        displayNames:
          description: The display names of the AnnotationSpecs that had been identified, order matches the IDs.
          items:
            type: string
          type: array
        ids:
          description: The resource IDs of the AnnotationSpecs that had been identified, ordered by the confidence score descendingly.
          items:
            format: int64
            type: string
          type: array
        textSegmentEndOffsets:
          description: The end offsets, inclusive, of the text segment in which the AnnotationSpec has been identified. Expressed as a zero-based number of characters as measured from the start of the text snippet.
          items:
            format: int64
            type: string
          type: array
        textSegmentStartOffsets:
          description: The start offsets, inclusive, of the text segment in which the AnnotationSpec has been identified. Expressed as a zero-based number of characters as measured from the start of the text snippet.
          items:
            format: int64
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1SchemaPredictPredictionTextSentimentPredictionResult:
      description: Prediction output format for Text Sentiment
      properties:
        sentiment:
          description: "The integer sentiment labels between 0 (inclusive) and sentimentMax label (inclusive), while 0 maps to the least positive sentiment and sentimentMax maps to the most positive one. The higher the score is, the more positive the sentiment in the text snippet is. Note: sentimentMax is an integer value between 1 (inclusive) and 10 (inclusive)."
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance:
      properties:
        attributeColumns:
          items:
            type: string
          type: array
        attributeWeights:
          items:
            format: float
            type: number
          type: array
        contextColumns:
          items:
            type: string
          type: array
        contextWeights:
          description: TFT feature importance values. Each pair for {context/horizon/attribute} should have the same shape since the weight corresponds to the column names.
          items:
            format: float
            type: number
          type: array
        horizonColumns:
          items:
            type: string
          type: array
        horizonWeights:
          items:
            format: float
            type: number
          type: array
      type: object
    GoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult:
      description: Prediction output format for Time Series Forecasting.
      properties:
        quantilePredictions:
          description: Quantile predictions, in 1-1 correspondence with quantile_values.
          items:
            format: float
            type: number
          type: array
        quantileValues:
          description: Quantile values.
          items:
            format: float
            type: number
          type: array
        tftFeatureImportance:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance"
          description: Only use these if TFt is enabled.
        value:
          description: The regression value.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaPredictPredictionVideoActionRecognitionPredictionResult:
      description: Prediction output format for Video Action Recognition.
      properties:
        confidence:
          description: The Model's confidence in correction of this prediction, higher value means higher confidence.
          format: float
          type: number
        displayName:
          description: The display name of the AnnotationSpec that had been identified.
          type: string
        id:
          description: The resource ID of the AnnotationSpec that had been identified.
          type: string
        timeSegmentEnd:
          description: The end, exclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end.
          format: google-duration
          type: string
        timeSegmentStart:
          description: The beginning, inclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end.
          format: google-duration
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaPredictPredictionVideoClassificationPredictionResult:
      description: Prediction output format for Video Classification.
      properties:
        confidence:
          description: The Model's confidence in correction of this prediction, higher value means higher confidence.
          format: float
          type: number
        displayName:
          description: The display name of the AnnotationSpec that had been identified.
          type: string
        id:
          description: The resource ID of the AnnotationSpec that had been identified.
          type: string
        timeSegmentEnd:
          description: The end, exclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end. Note that for 'segment-classification' prediction type, this equals the original 'timeSegmentEnd' from the input instance, for other types it is the end of a shot or a 1 second interval respectively.
          format: google-duration
          type: string
        timeSegmentStart:
          description: The beginning, inclusive, of the video's time segment in which the AnnotationSpec has been identified. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end. Note that for 'segment-classification' prediction type, this equals the original 'timeSegmentStart' from the input instance, for other types it is the start of a shot or a 1 second interval respectively.
          format: google-duration
          type: string
        type:
          description: The type of the prediction. The requested types can be configured via parameters. This will be one of - segment-classification - shot-classification - one-sec-interval-classification
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResult:
      description: Prediction output format for Video Object Tracking.
      properties:
        confidence:
          description: The Model's confidence in correction of this prediction, higher value means higher confidence.
          format: float
          type: number
        displayName:
          description: The display name of the AnnotationSpec that had been identified.
          type: string
        frames:
          description: All of the frames of the video in which a single object instance has been detected. The bounding boxes in the frames identify the same object.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame"
          type: array
        id:
          description: The resource ID of the AnnotationSpec that had been identified.
          type: string
        timeSegmentEnd:
          description: The end, inclusive, of the video's time segment in which the object instance has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end.
          format: google-duration
          type: string
        timeSegmentStart:
          description: The beginning, inclusive, of the video's time segment in which the object instance has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end.
          format: google-duration
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame:
      description: The fields `xMin`, `xMax`, `yMin`, and `yMax` refer to a bounding box, i.e. the rectangle over the video frame pinpointing the found AnnotationSpec. The coordinates are relative to the frame size, and the point 0,0 is in the top left of the frame.
      properties:
        timeOffset:
          description: A time (frame) of a video in which the object has been detected. Expressed as a number of seconds as measured from the start of the video, with fractions up to a microsecond precision, and with "s" appended at the end.
          format: google-duration
          type: string
        xMax:
          description: The rightmost coordinate of the bounding box.
          format: float
          type: number
        xMin:
          description: The leftmost coordinate of the bounding box.
          format: float
          type: number
        yMax:
          description: The bottommost coordinate of the bounding box.
          format: float
          type: number
        yMin:
          description: The topmost coordinate of the bounding box.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaPredictionResult:
      description: Represents a line of JSONL in the batch prediction output file.
      properties:
        error:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaPredictionResultError"
          description: The error result. Do not set prediction if this is set.
        instance:
          additionalProperties:
            description: Properties of the object.
          description: User's input instance. Struct is used here instead of Any so that JsonFormat does not append an extra "@type" field when we convert the proto to JSON.
          type: object
        key:
          description: Optional user-provided key from the input instance.
          type: string
        prediction:
          description: The prediction result. Value is used here instead of Any so that JsonFormat does not append an extra "@type" field when we convert the proto to JSON and so we can represent array of objects. Do not set error if this is set.
      type: object
    GoogleCloudAiplatformV1SchemaPredictionResultError:
      properties:
        message:
          description: Error message with additional details.
          type: string
        status:
          description: Error status. This will be serialized into the enum name e.g. "NOT_FOUND".
          enum:
            - OK
            - CANCELLED
            - UNKNOWN
            - INVALID_ARGUMENT
            - DEADLINE_EXCEEDED
            - NOT_FOUND
            - ALREADY_EXISTS
            - PERMISSION_DENIED
            - UNAUTHENTICATED
            - RESOURCE_EXHAUSTED
            - FAILED_PRECONDITION
            - ABORTED
            - OUT_OF_RANGE
            - UNIMPLEMENTED
            - INTERNAL
            - UNAVAILABLE
            - DATA_LOSS
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTablesDatasetMetadata:
      description: The metadata of Datasets that contain tables data.
      properties:
        inputConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTablesDatasetMetadataInputConfig"
      type: object
    GoogleCloudAiplatformV1SchemaTablesDatasetMetadataBigQuerySource:
      properties:
        uri:
          description: The URI of a BigQuery table. e.g. bq://projectId.bqDatasetId.bqTableId
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTablesDatasetMetadataGcsSource:
      properties:
        uri:
          description: Cloud Storage URI of one or more files. Only CSV files are supported. The first line of the CSV file is used as the header. If there are multiple files, the header is the first line of the lexicographically first file, the other files must either contain the exact same header or omit the header.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1SchemaTablesDatasetMetadataInputConfig:
      description: The tables Dataset's data source. The Dataset doesn't store the data directly, but only pointer(s) to its data.
      properties:
        bigquerySource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTablesDatasetMetadataBigQuerySource"
        gcsSource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTablesDatasetMetadataGcsSource"
      type: object
    GoogleCloudAiplatformV1SchemaTextClassificationAnnotation:
      description: Annotation details specific to text classification.
      properties:
        annotationSpecId:
          description: The resource Id of the AnnotationSpec that this Annotation pertains to.
          type: string
        displayName:
          description: The display name of the AnnotationSpec that this Annotation pertains to.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTextDataItem:
      description: Payload of Text DataItem.
      properties:
        gcsUri:
          description: Output only. Google Cloud Storage URI points to the original text in user's bucket. The text file is up to 10MB in size.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTextDatasetMetadata:
      description: The metadata of Datasets that contain Text DataItems.
      properties:
        dataItemSchemaUri:
          description: Points to a YAML file stored on Google Cloud Storage describing payload of the Text DataItems that belong to this Dataset.
          type: string
        gcsBucket:
          description: Google Cloud Storage Bucket name that contains the blob data of this Dataset.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTextExtractionAnnotation:
      description: Annotation details specific to text extraction.
      properties:
        annotationSpecId:
          description: The resource Id of the AnnotationSpec that this Annotation pertains to.
          type: string
        displayName:
          description: The display name of the AnnotationSpec that this Annotation pertains to.
          type: string
        textSegment:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTextSegment"
          description: The segment of the text content.
      type: object
    GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata:
      description: The metadata of Datasets that contain Text Prompt data.
      properties:
        candidateCount:
          description: Number of candidates.
          format: int64
          type: string
        gcsUri:
          description: The Google Cloud Storage URI that stores the prompt data.
          type: string
        groundingConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig"
          description: Grounding checking configuration.
        maxOutputTokens:
          description: Value of the maximum number of tokens generated set when the dataset was saved.
          format: int64
          type: string
        note:
          description: User-created prompt note. Note size limit is 2KB.
          type: string
        promptType:
          description: Type of the prompt dataset.
          type: string
        stopSequences:
          description: Customized stop sequences.
          items:
            type: string
          type: array
        temperature:
          description: Temperature value used for sampling set when the dataset was saved. This value is used to tune the degree of randomness.
          format: float
          type: number
        text:
          description: The content of the prompt dataset.
          type: string
        topK:
          description: Top K value set when the dataset was saved. This value determines how many candidates with highest probability from the vocab would be selected for each decoding step.
          format: int64
          type: string
        topP:
          description: Top P value set when the dataset was saved. Given topK tokens for decoding, top candidates will be selected until the sum of their probabilities is topP.
          format: float
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaTextSegment:
      description: The text segment inside of DataItem.
      properties:
        content:
          description: The text content in the segment for output only.
          type: string
        endOffset:
          description: Zero-based character index of the first character past the end of the text segment (counting character from the beginning of the text). The character at the end_offset is NOT included in the text segment.
          format: uint64
          type: string
        startOffset:
          description: Zero-based character index of the first character of the text segment (counting characters from the beginning of the text).
          format: uint64
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTextSentimentAnnotation:
      description: Annotation details specific to text sentiment.
      properties:
        annotationSpecId:
          description: The resource Id of the AnnotationSpec that this Annotation pertains to.
          type: string
        displayName:
          description: The display name of the AnnotationSpec that this Annotation pertains to.
          type: string
        sentiment:
          description: The sentiment score for text.
          format: int32
          type: integer
        sentimentMax:
          description: The sentiment max score for text.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1SchemaTextSentimentSavedQueryMetadata:
      description: The metadata of SavedQuery contains TextSentiment Annotations.
      properties:
        sentimentMax:
          description: The maximum sentiment of sentiment Anntoation in this SavedQuery.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1SchemaTimeSegment:
      description: A time period inside of a DataItem that has a time dimension (e.g. video).
      properties:
        endTimeOffset:
          description: End of the time segment (exclusive), represented as the duration since the start of the DataItem.
          format: google-duration
          type: string
        startTimeOffset:
          description: Start of the time segment (inclusive), represented as the duration since the start of the DataItem.
          format: google-duration
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadata:
      description: The metadata of Datasets that contain time series data.
      properties:
        inputConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataInputConfig"
        timeColumn:
          description: The column name of the time column that identifies time order in the time series.
          type: string
        timeSeriesIdentifierColumn:
          description: The column name of the time series identifier column that identifies the time series.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataBigQuerySource:
      properties:
        uri:
          description: The URI of a BigQuery table.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataGcsSource:
      properties:
        uri:
          description: Cloud Storage URI of one or more files. Only CSV files are supported. The first line of the CSV file is used as the header. If there are multiple files, the header is the first line of the lexicographically first file, the other files must either contain the exact same header or omit the header.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataInputConfig:
      description: The time series Dataset's data source. The Dataset doesn't store the data directly, but only pointer(s) to its data.
      properties:
        bigquerySource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataBigQuerySource"
        gcsSource:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTimeSeriesDatasetMetadataGcsSource"
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecasting:
      description: A TrainingJob that trains and uploads an AutoML Forecasting Model.
      properties:
        inputs:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputs"
          description: The input parameters of this TrainingJob.
        metadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingMetadata"
          description: The metadata information.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputs:
      properties:
        additionalExperiments:
          description: Additional experiment flags for the time series forcasting training.
          items:
            type: string
          type: array
        availableAtForecastColumns:
          description: Names of columns that are available and provided when a forecast is requested. These columns contain information for the given entity (identified by the time_series_identifier_column column) that is known at forecast. For example, predicted weather for a specific day.
          items:
            type: string
          type: array
        contextWindow:
          description: The amount of time into the past training and prediction data is used for model training and prediction respectively. Expressed in number of units defined by the `data_granularity` field.
          format: int64
          type: string
        dataGranularity:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsGranularity"
          description: Expected difference in time granularity between rows in the data.
        enableProbabilisticInference:
          description: If probabilistic inference is enabled, the model will fit a distribution that captures the uncertainty of a prediction. At inference time, the predictive distribution is used to make a point prediction that minimizes the optimization objective. For example, the mean of a predictive distribution is the point prediction that minimizes RMSE loss. If quantiles are specified, then the quantiles of the distribution are also returned. The optimization objective cannot be minimize-quantile-loss.
          type: boolean
        exportEvaluatedDataItemsConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig"
          description: Configuration for exporting test set predictions to a BigQuery table. If this configuration is absent, then the export is not performed.
        forecastHorizon:
          description: The amount of time into the future for which forecasted values for the target are returned. Expressed in number of units defined by the `data_granularity` field.
          format: int64
          type: string
        hierarchyConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig"
          description: Configuration that defines the hierarchical relationship of time series and parameters for hierarchical forecasting strategies.
        holidayRegions:
          description: The geographical region based on which the holiday effect is applied in modeling by adding holiday categorical array feature that include all holidays matching the date. This option only allowed when data_granularity is day. By default, holiday effect modeling is disabled. To turn it on, specify the holiday region using this option.
          items:
            type: string
          type: array
        optimizationObjective:
          description: 'Objective function the model is optimizing towards. The training process creates a model that optimizes the value of the objective function over the validation set. The supported optimization objectives: * "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" - Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared percentage error (RMSPE). * "minimize-wape-mae" - Minimize the combination of weighted absolute percentage error (WAPE) and mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the quantile loss at the quantiles defined in `quantiles`. * "minimize-mape" - Minimize the mean absolute percentage error.'
          type: string
        quantiles:
          description: Quantiles to use for minimize-quantile-loss `optimization_objective`, or for probabilistic inference. Up to 5 quantiles are allowed of values between 0 and 1, exclusive. Required if the value of optimization_objective is minimize-quantile-loss. Represents the percent quantiles to use for that objective. Quantiles must be unique.
          items:
            format: double
            type: number
          type: array
        targetColumn:
          description: The name of the column that the Model is to predict values for. This column must be unavailable at forecast.
          type: string
        timeColumn:
          description: The name of the column that identifies time order in the time series. This column must be available at forecast.
          type: string
        timeSeriesAttributeColumns:
          description: Column names that should be used as attribute columns. The value of these columns does not vary as a function of time. For example, store ID or item color.
          items:
            type: string
          type: array
        timeSeriesIdentifierColumn:
          description: The name of the column that identifies the time series.
          type: string
        trainBudgetMilliNodeHours:
          description: Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend's discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won't be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive.
          format: int64
          type: string
        transformations:
          description: Each transformation will apply transform function to given input column. And the result will be used for training. When creating transformation for BigQuery Struct column, the column should be flattened using "." as the delimiter.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation"
          type: array
        unavailableAtForecastColumns:
          description: Names of columns that are unavailable when a forecast is requested. This column contains information for the given entity (identified by the time_series_identifier_column) that is unknown before the forecast For example, actual weather on a given day.
          items:
            type: string
          type: array
        validationOptions:
          description: 'Validation options for the data validation component. The available options are: * "fail-pipeline" - default, will validate against the validation and fail the pipeline if it fails. * "ignore-validation" - ignore the results of the validation and continue'
          type: string
        weightColumn:
          description: Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1.
          type: string
        windowConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig"
          description: Config containing strategy for generating sliding windows.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsGranularity:
      description: A duration of time expressed in time granularity units.
      properties:
        quantity:
          description: The number of granularity_units between data points in the training data. If `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other values of `granularity_unit`, must be 1.
          format: int64
          type: string
        unit:
          description: 'The time granularity unit of this time period. The supported units are: * "minute" * "hour" * "day" * "week" * "month" * "year"'
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation:
      properties:
        auto:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation"
        categorical:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation"
        numeric:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation"
        text:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation"
        timestamp:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation"
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation:
      description: Training pipeline will infer the proper transformation based on the statistic of dataset.
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation:
      description: Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding.
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation:
      description: Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * A boolean value that indicates whether the value is valid.
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation:
      description: Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index.
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation:
      description: Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed.
      properties:
        columnName:
          type: string
        timeFormat:
          description: 'The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z)'
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlForecastingMetadata:
      description: Model metadata specific to AutoML Forecasting.
      properties:
        evaluatedDataItemsBigqueryUri:
          description: BigQuery destination uri for exported evaluated examples.
          type: string
        trainCostMilliNodeHours:
          description: Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassification:
      description: A TrainingJob that trains and uploads an AutoML Image Classification Model.
      properties:
        inputs:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs"
          description: The input parameters of this TrainingJob.
        metadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata"
          description: The metadata information.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs:
      properties:
        baseModelId:
          description: The ID of the `base` model. If it is specified, the new model will be trained based on the `base` model. Otherwise, the new model will be trained from scratch. The `base` model must be in the same Project and Location as the new Model to train, and have the same modelType.
          type: string
        budgetMilliNodeHours:
          description: The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`(default), the budget must be between 8,000 and 800,000 milli node hours, inclusive. The default value is 192,000 which represents one day in wall time, considering 8 nodes are used. For model types `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1`, the training budget must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24,000 which represents one day in wall time on a single node that is used.
          format: int64
          type: string
        disableEarlyStopping:
          description: Use the entire training budget. This disables the early stopping feature. When false the early stopping feature is enabled, which means that AutoML Image Classification might stop training before the entire training budget has been used.
          type: boolean
        modelType:
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - CLOUD
            - CLOUD_1
            - MOBILE_TF_LOW_LATENCY_1
            - MOBILE_TF_VERSATILE_1
            - MOBILE_TF_HIGH_ACCURACY_1
            - EFFICIENTNET
            - MAXVIT
            - VIT
            - COCA
          type: string
        multiLabel:
          description: If false, a single-label (multi-class) Model will be trained (i.e. assuming that for each image just up to one annotation may be applicable). If true, a multi-label Model will be trained (i.e. assuming that for each image multiple annotations may be applicable).
          type: boolean
        tunableParameter:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter"
          description: Trainer type for Vision TrainRequest.
        uptrainBaseModelId:
          description: The ID of `base` model for upTraining. If it is specified, the new model will be upTrained based on the `base` model for upTraining. Otherwise, the new model will be trained from scratch. The `base` model for upTraining must be in the same Project and Location as the new Model to train, and have the same modelType.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata:
      properties:
        costMilliNodeHours:
          description: The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours.
          format: int64
          type: string
        successfulStopReason:
          description: For successful job completions, this is the reason why the job has finished.
          enum:
            - SUCCESSFUL_STOP_REASON_UNSPECIFIED
            - BUDGET_REACHED
            - MODEL_CONVERGED
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection:
      description: A TrainingJob that trains and uploads an AutoML Image Object Detection Model.
      properties:
        inputs:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs"
          description: The input parameters of this TrainingJob.
        metadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata"
          description: The metadata information
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs:
      properties:
        budgetMilliNodeHours:
          description: The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`(default), the budget must be between 20,000 and 900,000 milli node hours, inclusive. The default value is 216,000 which represents one day in wall time, considering 9 nodes are used. For model types `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1` the training budget must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24,000 which represents one day in wall time on a single node that is used.
          format: int64
          type: string
        disableEarlyStopping:
          description: Use the entire training budget. This disables the early stopping feature. When false the early stopping feature is enabled, which means that AutoML Image Object Detection might stop training before the entire training budget has been used.
          type: boolean
        modelType:
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - CLOUD_HIGH_ACCURACY_1
            - CLOUD_LOW_LATENCY_1
            - CLOUD_1
            - MOBILE_TF_LOW_LATENCY_1
            - MOBILE_TF_VERSATILE_1
            - MOBILE_TF_HIGH_ACCURACY_1
            - CLOUD_STREAMING_1
            - SPINENET
            - YOLO
          type: string
        tunableParameter:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter"
          description: Trainer type for Vision TrainRequest.
        uptrainBaseModelId:
          description: The ID of `base` model for upTraining. If it is specified, the new model will be upTrained based on the `base` model for upTraining. Otherwise, the new model will be trained from scratch. The `base` model for upTraining must be in the same Project and Location as the new Model to train, and have the same modelType.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata:
      properties:
        costMilliNodeHours:
          description: The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours.
          format: int64
          type: string
        successfulStopReason:
          description: For successful job completions, this is the reason why the job has finished.
          enum:
            - SUCCESSFUL_STOP_REASON_UNSPECIFIED
            - BUDGET_REACHED
            - MODEL_CONVERGED
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentation:
      description: A TrainingJob that trains and uploads an AutoML Image Segmentation Model.
      properties:
        inputs:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs"
          description: The input parameters of this TrainingJob.
        metadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata"
          description: The metadata information.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs:
      properties:
        baseModelId:
          description: The ID of the `base` model. If it is specified, the new model will be trained based on the `base` model. Otherwise, the new model will be trained from scratch. The `base` model must be in the same Project and Location as the new Model to train, and have the same modelType.
          type: string
        budgetMilliNodeHours:
          description: The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. Or actual_wall_clock_hours = train_budget_milli_node_hours / (number_of_nodes_involved * 1000) For modelType `cloud-high-accuracy-1`(default), the budget must be between 20,000 and 2,000,000 milli node hours, inclusive. The default value is 192,000 which represents one day in wall time (1000 milli * 24 hours * 8 nodes).
          format: int64
          type: string
        modelType:
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - CLOUD_HIGH_ACCURACY_1
            - CLOUD_LOW_ACCURACY_1
            - MOBILE_TF_LOW_LATENCY_1
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata:
      properties:
        costMilliNodeHours:
          description: The actual training cost of creating this model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed inputs.budgetMilliNodeHours.
          format: int64
          type: string
        successfulStopReason:
          description: For successful job completions, this is the reason why the job has finished.
          enum:
            - SUCCESSFUL_STOP_REASON_UNSPECIFIED
            - BUDGET_REACHED
            - MODEL_CONVERGED
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTables:
      description: A TrainingJob that trains and uploads an AutoML Tables Model.
      properties:
        inputs:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputs"
          description: The input parameters of this TrainingJob.
        metadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata"
          description: The metadata information.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputs:
      properties:
        additionalExperiments:
          description: Additional experiment flags for the Tables training pipeline.
          items:
            type: string
          type: array
        disableEarlyStopping:
          description: Use the entire training budget. This disables the early stopping feature. By default, the early stopping feature is enabled, which means that AutoML Tables might stop training before the entire training budget has been used.
          type: boolean
        exportEvaluatedDataItemsConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig"
          description: Configuration for exporting test set predictions to a BigQuery table. If this configuration is absent, then the export is not performed.
        optimizationObjective:
          description: 'Objective function the model is optimizing towards. The training process creates a model that maximizes/minimizes the value of the objective function over the validation set. The supported optimization objectives depend on the prediction type. If the field is not set, a default objective function is used. classification (binary): "maximize-au-roc" (default) - Maximize the area under the receiver operating characteristic (ROC) curve. "minimize-log-loss" - Minimize log loss. "maximize-au-prc" - Maximize the area under the precision-recall curve. "maximize-precision-at-recall" - Maximize precision for a specified recall value. "maximize-recall-at-precision" - Maximize recall for a specified precision value. classification (multi-class): "minimize-log-loss" (default) - Minimize log loss. regression: "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE). "minimize-mae" - Minimize mean-absolute error (MAE). "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE).'
          type: string
        optimizationObjectivePrecisionValue:
          description: Required when optimization_objective is "maximize-recall-at-precision". Must be between 0 and 1, inclusive.
          format: float
          type: number
        optimizationObjectiveRecallValue:
          description: Required when optimization_objective is "maximize-precision-at-recall". Must be between 0 and 1, inclusive.
          format: float
          type: number
        predictionType:
          description: The type of prediction the Model is to produce. "classification" - Predict one out of multiple target values is picked for each row. "regression" - Predict a value based on its relation to other values. This type is available only to columns that contain semantically numeric values, i.e. integers or floating point number, even if stored as e.g. strings.
          type: string
        targetColumn:
          description: The column name of the target column that the model is to predict.
          type: string
        trainBudgetMilliNodeHours:
          description: Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend's discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won't be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive.
          format: int64
          type: string
        transformations:
          description: Each transformation will apply transform function to given input column. And the result will be used for training. When creating transformation for BigQuery Struct column, the column should be flattened using "." as the delimiter.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation"
          type: array
        weightColumnName:
          description: Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation:
      properties:
        auto:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation"
        categorical:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation"
        numeric:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation"
        repeatedCategorical:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation"
        repeatedNumeric:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation"
        repeatedText:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation"
        text:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation"
        timestamp:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation"
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation:
      description: Training pipeline will infer the proper transformation based on the statistic of dataset.
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation:
      description: Treats the column as categorical array and performs following transformation functions. * For each element in the array, convert the category name to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Empty arrays treated as an embedding of zeroes.
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation:
      description: Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding.
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation:
      description: Treats the column as numerical array and performs following transformation functions. * All transformations for Numerical types applied to the average of the all elements. * The average of empty arrays is treated as zero.
      properties:
        columnName:
          type: string
        invalidValuesAllowed:
          description: If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.
          type: boolean
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation:
      description: Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * A boolean value that indicates whether the value is valid.
      properties:
        columnName:
          type: string
        invalidValuesAllowed:
          description: If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.
          type: boolean
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation:
      description: Treats the column as text array and performs following transformation functions. * Concatenate all text values in the array into a single text value using a space (" ") as a delimiter, and then treat the result as a single text value. Apply the transformations for Text columns. * Empty arrays treated as an empty text.
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation:
      description: Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Tokenize text to words. Convert each words to a dictionary lookup index and generate an embedding for each index. Combine the embedding of all elements into a single embedding using the mean. * Tokenization is based on unicode script boundaries. * Missing values get their own lookup index and resulting embedding. * Stop-words receive no special treatment and are not removed.
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation:
      description: Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the * timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed.
      properties:
        columnName:
          type: string
        invalidValuesAllowed:
          description: If invalid values is allowed, the training pipeline will create a boolean feature that indicated whether the value is valid. Otherwise, the training pipeline will discard the input row from trainining data.
          type: boolean
        timeFormat:
          description: 'The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z)'
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata:
      description: Model metadata specific to AutoML Tables.
      properties:
        evaluatedDataItemsBigqueryUri:
          description: BigQuery destination uri for exported evaluated examples.
          type: string
        trainCostMilliNodeHours:
          description: Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassification:
      description: A TrainingJob that trains and uploads an AutoML Text Classification Model.
      properties:
        inputs:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs"
          description: The input parameters of this TrainingJob.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs:
      properties:
        multiLabel:
          type: boolean
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtraction:
      description: A TrainingJob that trains and uploads an AutoML Text Extraction Model.
      properties:
        inputs:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs"
          description: The input parameters of this TrainingJob.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs:
      properties: {}
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentiment:
      description: A TrainingJob that trains and uploads an AutoML Text Sentiment Model.
      properties:
        inputs:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs"
          description: The input parameters of this TrainingJob.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs:
      properties:
        sentimentMax:
          description: A sentiment is expressed as an integer ordinal, where higher value means a more positive sentiment. The range of sentiments that will be used is between 0 and sentimentMax (inclusive on both ends), and all the values in the range must be represented in the dataset before a model can be created. Only the Annotations with this sentimentMax will be used for training. sentimentMax value must be between 1 and 10 (inclusive).
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognition:
      description: A TrainingJob that trains and uploads an AutoML Video Action Recognition Model.
      properties:
        inputs:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs"
          description: The input parameters of this TrainingJob.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs:
      properties:
        modelType:
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - CLOUD
            - MOBILE_VERSATILE_1
            - MOBILE_JETSON_VERSATILE_1
            - MOBILE_CORAL_VERSATILE_1
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassification:
      description: A TrainingJob that trains and uploads an AutoML Video Classification Model.
      properties:
        inputs:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs"
          description: The input parameters of this TrainingJob.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs:
      properties:
        modelType:
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - CLOUD
            - MOBILE_VERSATILE_1
            - MOBILE_JETSON_VERSATILE_1
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTracking:
      description: A TrainingJob that trains and uploads an AutoML Video ObjectTracking Model.
      properties:
        inputs:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs"
          description: The input parameters of this TrainingJob.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs:
      properties:
        modelType:
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - CLOUD
            - MOBILE_VERSATILE_1
            - MOBILE_CORAL_VERSATILE_1
            - MOBILE_CORAL_LOW_LATENCY_1
            - MOBILE_JETSON_VERSATILE_1
            - MOBILE_JETSON_LOW_LATENCY_1
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter:
      description: A wrapper class which contains the tunable parameters in an AutoML Image training job.
      properties:
        checkpointName:
          description: Optional. An unique name of pretrained model checkpoint provided in model garden, it will be mapped to a GCS location internally.
          type: string
        datasetConfig:
          additionalProperties:
            type: string
          description: Customizable dataset settings, used in the `model_garden_trainer`.
          type: object
        studySpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StudySpec"
          description: Optioinal. StudySpec of hyperparameter tuning job. Required for `model_garden_trainer`.
        trainerConfig:
          additionalProperties:
            type: string
          description: Customizable trainer settings, used in the `model_garden_trainer`.
          type: object
        trainerType:
          enum:
            - TRAINER_TYPE_UNSPECIFIED
            - AUTOML_TRAINER
            - MODEL_GARDEN_TRAINER
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomJobMetadata:
      properties:
        backingCustomJob:
          description: The resource name of the CustomJob that has been created to carry out this custom task.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomTask:
      description: A TrainingJob that trains a custom code Model.
      properties:
        inputs:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1CustomJobSpec"
          description: The input parameters of this CustomTask.
        metadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionCustomJobMetadata"
          description: The metadata information.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig:
      description: Configuration for exporting test set predictions to a BigQuery table.
      properties:
        destinationBigqueryUri:
          description: "URI of desired destination BigQuery table. Expected format: `bq://{project_id}:{dataset_id}:{table}` If not specified, then results are exported to the following auto-created BigQuery table: `{project_id}:export_evaluated_examples_{model_name}_{yyyy_MM_dd'T'HH_mm_ss_SSS'Z'}.evaluated_examples`"
          type: string
        overrideExistingTable:
          description: If true and an export destination is specified, then the contents of the destination are overwritten. Otherwise, if the export destination already exists, then the export operation fails.
          type: boolean
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig:
      description: Configuration that defines the hierarchical relationship of time series and parameters for hierarchical forecasting strategies.
      properties:
        groupColumns:
          description: A list of time series attribute column names that define the time series hierarchy. Only one level of hierarchy is supported, ex. 'region' for a hierarchy of stores or 'department' for a hierarchy of products. If multiple columns are specified, time series will be grouped by their combined values, ex. ('blue', 'large') for 'color' and 'size', up to 5 columns are accepted. If no group columns are specified, all time series are considered to be part of the same group.
          items:
            type: string
          type: array
        groupTemporalTotalWeight:
          description: The weight of the loss for predictions aggregated over both the horizon and time series in the same hierarchy group.
          format: double
          type: number
        groupTotalWeight:
          description: The weight of the loss for predictions aggregated over time series in the same group.
          format: double
          type: number
        temporalTotalWeight:
          description: The weight of the loss for predictions aggregated over the horizon for a single time series.
          format: double
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata:
      properties:
        backingHyperparameterTuningJob:
          description: The resource name of the HyperparameterTuningJob that has been created to carry out this HyperparameterTuning task.
          type: string
        bestTrialBackingCustomJob:
          description: The resource name of the CustomJob that has been created to run the best Trial of this HyperparameterTuning task.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec:
      properties:
        maxFailedTrialCount:
          description: The number of failed Trials that need to be seen before failing the HyperparameterTuningJob. If set to 0, Vertex AI decides how many Trials must fail before the whole job fails.
          format: int32
          type: integer
        maxTrialCount:
          description: The desired total number of Trials.
          format: int32
          type: integer
        parallelTrialCount:
          description: The desired number of Trials to run in parallel.
          format: int32
          type: integer
        studySpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StudySpec"
          description: Study configuration of the HyperparameterTuningJob.
        trialJobSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1CustomJobSpec"
          description: The spec of a trial job. The same spec applies to the CustomJobs created in all the trials.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningTask:
      description: A TrainingJob that tunes Hypererparameters of a custom code Model.
      properties:
        inputs:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec"
          description: The input parameters of this HyperparameterTuningTask.
        metadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata"
          description: The metadata information.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecasting:
      description: A TrainingJob that trains and uploads an AutoML Forecasting Model.
      properties:
        inputs:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs"
          description: The input parameters of this TrainingJob.
        metadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingMetadata"
          description: The metadata information.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs:
      properties:
        additionalExperiments:
          description: Additional experiment flags for the time series forcasting training.
          items:
            type: string
          type: array
        availableAtForecastColumns:
          description: Names of columns that are available and provided when a forecast is requested. These columns contain information for the given entity (identified by the time_series_identifier_column column) that is known at forecast. For example, predicted weather for a specific day.
          items:
            type: string
          type: array
        contextWindow:
          description: The amount of time into the past training and prediction data is used for model training and prediction respectively. Expressed in number of units defined by the `data_granularity` field.
          format: int64
          type: string
        dataGranularity:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularity"
          description: Expected difference in time granularity between rows in the data.
        exportEvaluatedDataItemsConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig"
          description: Configuration for exporting test set predictions to a BigQuery table. If this configuration is absent, then the export is not performed.
        forecastHorizon:
          description: The amount of time into the future for which forecasted values for the target are returned. Expressed in number of units defined by the `data_granularity` field.
          format: int64
          type: string
        hierarchyConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig"
          description: Configuration that defines the hierarchical relationship of time series and parameters for hierarchical forecasting strategies.
        holidayRegions:
          description: The geographical region based on which the holiday effect is applied in modeling by adding holiday categorical array feature that include all holidays matching the date. This option only allowed when data_granularity is day. By default, holiday effect modeling is disabled. To turn it on, specify the holiday region using this option.
          items:
            type: string
          type: array
        optimizationObjective:
          description: 'Objective function the model is optimizing towards. The training process creates a model that optimizes the value of the objective function over the validation set. The supported optimization objectives: * "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" - Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared percentage error (RMSPE). * "minimize-wape-mae" - Minimize the combination of weighted absolute percentage error (WAPE) and mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the quantile loss at the quantiles defined in `quantiles`. * "minimize-mape" - Minimize the mean absolute percentage error.'
          type: string
        quantiles:
          description: Quantiles to use for minimize-quantile-loss `optimization_objective`. Up to 5 quantiles are allowed of values between 0 and 1, exclusive. Required if the value of optimization_objective is minimize-quantile-loss. Represents the percent quantiles to use for that objective. Quantiles must be unique.
          items:
            format: double
            type: number
          type: array
        targetColumn:
          description: The name of the column that the Model is to predict values for. This column must be unavailable at forecast.
          type: string
        timeColumn:
          description: The name of the column that identifies time order in the time series. This column must be available at forecast.
          type: string
        timeSeriesAttributeColumns:
          description: Column names that should be used as attribute columns. The value of these columns does not vary as a function of time. For example, store ID or item color.
          items:
            type: string
          type: array
        timeSeriesIdentifierColumn:
          description: The name of the column that identifies the time series.
          type: string
        trainBudgetMilliNodeHours:
          description: Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend's discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won't be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive.
          format: int64
          type: string
        transformations:
          description: Each transformation will apply transform function to given input column. And the result will be used for training. When creating transformation for BigQuery Struct column, the column should be flattened using "." as the delimiter.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation"
          type: array
        unavailableAtForecastColumns:
          description: Names of columns that are unavailable when a forecast is requested. This column contains information for the given entity (identified by the time_series_identifier_column) that is unknown before the forecast For example, actual weather on a given day.
          items:
            type: string
          type: array
        validationOptions:
          description: 'Validation options for the data validation component. The available options are: * "fail-pipeline" - default, will validate against the validation and fail the pipeline if it fails. * "ignore-validation" - ignore the results of the validation and continue'
          type: string
        weightColumn:
          description: Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1. This column must be available at forecast.
          type: string
        windowConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig"
          description: Config containing strategy for generating sliding windows.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularity:
      description: A duration of time expressed in time granularity units.
      properties:
        quantity:
          description: The number of granularity_units between data points in the training data. If `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other values of `granularity_unit`, must be 1.
          format: int64
          type: string
        unit:
          description: 'The time granularity unit of this time period. The supported units are: * "minute" * "hour" * "day" * "week" * "month" * "year"'
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation:
      properties:
        auto:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationAutoTransformation"
        categorical:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationCategoricalTransformation"
        numeric:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationNumericTransformation"
        text:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTextTransformation"
        timestamp:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTimestampTransformation"
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationAutoTransformation:
      description: Training pipeline will infer the proper transformation based on the statistic of dataset.
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationCategoricalTransformation:
      description: Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding.
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationNumericTransformation:
      description: Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value.
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTextTransformation:
      description: Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index.
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTimestampTransformation:
      description: Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed.
      properties:
        columnName:
          type: string
        timeFormat:
          description: 'The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z)'
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingMetadata:
      description: Model metadata specific to Seq2Seq Plus Forecasting.
      properties:
        evaluatedDataItemsBigqueryUri:
          description: BigQuery destination uri for exported evaluated examples.
          type: string
        trainCostMilliNodeHours:
          description: Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecasting:
      description: A TrainingJob that trains and uploads an AutoML Forecasting Model.
      properties:
        inputs:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputs"
          description: The input parameters of this TrainingJob.
        metadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingMetadata"
          description: The metadata information.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputs:
      properties:
        additionalExperiments:
          description: Additional experiment flags for the time series forcasting training.
          items:
            type: string
          type: array
        availableAtForecastColumns:
          description: Names of columns that are available and provided when a forecast is requested. These columns contain information for the given entity (identified by the time_series_identifier_column column) that is known at forecast. For example, predicted weather for a specific day.
          items:
            type: string
          type: array
        contextWindow:
          description: The amount of time into the past training and prediction data is used for model training and prediction respectively. Expressed in number of units defined by the `data_granularity` field.
          format: int64
          type: string
        dataGranularity:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsGranularity"
          description: Expected difference in time granularity between rows in the data.
        exportEvaluatedDataItemsConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig"
          description: Configuration for exporting test set predictions to a BigQuery table. If this configuration is absent, then the export is not performed.
        forecastHorizon:
          description: The amount of time into the future for which forecasted values for the target are returned. Expressed in number of units defined by the `data_granularity` field.
          format: int64
          type: string
        hierarchyConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionHierarchyConfig"
          description: Configuration that defines the hierarchical relationship of time series and parameters for hierarchical forecasting strategies.
        holidayRegions:
          description: The geographical region based on which the holiday effect is applied in modeling by adding holiday categorical array feature that include all holidays matching the date. This option only allowed when data_granularity is day. By default, holiday effect modeling is disabled. To turn it on, specify the holiday region using this option.
          items:
            type: string
          type: array
        optimizationObjective:
          description: 'Objective function the model is optimizing towards. The training process creates a model that optimizes the value of the objective function over the validation set. The supported optimization objectives: * "minimize-rmse" (default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" - Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared percentage error (RMSPE). * "minimize-wape-mae" - Minimize the combination of weighted absolute percentage error (WAPE) and mean-absolute-error (MAE). * "minimize-quantile-loss" - Minimize the quantile loss at the quantiles defined in `quantiles`. * "minimize-mape" - Minimize the mean absolute percentage error.'
          type: string
        quantiles:
          description: Quantiles to use for minimize-quantile-loss `optimization_objective`. Up to 5 quantiles are allowed of values between 0 and 1, exclusive. Required if the value of optimization_objective is minimize-quantile-loss. Represents the percent quantiles to use for that objective. Quantiles must be unique.
          items:
            format: double
            type: number
          type: array
        targetColumn:
          description: The name of the column that the Model is to predict values for. This column must be unavailable at forecast.
          type: string
        timeColumn:
          description: The name of the column that identifies time order in the time series. This column must be available at forecast.
          type: string
        timeSeriesAttributeColumns:
          description: Column names that should be used as attribute columns. The value of these columns does not vary as a function of time. For example, store ID or item color.
          items:
            type: string
          type: array
        timeSeriesIdentifierColumn:
          description: The name of the column that identifies the time series.
          type: string
        trainBudgetMilliNodeHours:
          description: Required. The train budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The training cost of the model will not exceed this budget. The final cost will be attempted to be close to the budget, though may end up being (even) noticeably smaller - at the backend's discretion. This especially may happen when further model training ceases to provide any improvements. If the budget is set to a value known to be insufficient to train a model for the given dataset, the training won't be attempted and will error. The train budget must be between 1,000 and 72,000 milli node hours, inclusive.
          format: int64
          type: string
        transformations:
          description: Each transformation will apply transform function to given input column. And the result will be used for training. When creating transformation for BigQuery Struct column, the column should be flattened using "." as the delimiter.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformation"
          type: array
        unavailableAtForecastColumns:
          description: Names of columns that are unavailable when a forecast is requested. This column contains information for the given entity (identified by the time_series_identifier_column) that is unknown before the forecast For example, actual weather on a given day.
          items:
            type: string
          type: array
        validationOptions:
          description: 'Validation options for the data validation component. The available options are: * "fail-pipeline" - default, will validate against the validation and fail the pipeline if it fails. * "ignore-validation" - ignore the results of the validation and continue'
          type: string
        weightColumn:
          description: Column name that should be used as the weight column. Higher values in this column give more importance to the row during model training. The column must have numeric values between 0 and 10000 inclusively; 0 means the row is ignored for training. If weight column field is not set, then all rows are assumed to have equal weight of 1. This column must be available at forecast.
          type: string
        windowConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig"
          description: Config containing strategy for generating sliding windows.
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsGranularity:
      description: A duration of time expressed in time granularity units.
      properties:
        quantity:
          description: The number of granularity_units between data points in the training data. If `granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other values of `granularity_unit`, must be 1.
          format: int64
          type: string
        unit:
          description: 'The time granularity unit of this time period. The supported units are: * "minute" * "hour" * "day" * "week" * "month" * "year"'
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformation:
      properties:
        auto:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationAutoTransformation"
        categorical:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationCategoricalTransformation"
        numeric:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationNumericTransformation"
        text:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTextTransformation"
        timestamp:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTimestampTransformation"
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationAutoTransformation:
      description: Training pipeline will infer the proper transformation based on the statistic of dataset.
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationCategoricalTransformation:
      description: Training pipeline will perform following transformation functions. * The categorical string as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index. * Categories that appear less than 5 times in the training dataset are treated as the "unknown" category. The "unknown" category gets its own special lookup index and resulting embedding.
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationNumericTransformation:
      description: Training pipeline will perform following transformation functions. * The value converted to float32. * The z_score of the value. * log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value. * z_score of log(value+1) when the value is greater than or equal to 0. Otherwise, this transformation is not applied and the value is considered a missing value.
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTextTransformation:
      description: Training pipeline will perform following transformation functions. * The text as is--no change to case, punctuation, spelling, tense, and so on. * Convert the category name to a dictionary lookup index and generate an embedding for each index.
      properties:
        columnName:
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTimestampTransformation:
      description: Training pipeline will perform following transformation functions. * Apply the transformation functions for Numerical columns. * Determine the year, month, day,and weekday. Treat each value from the timestamp as a Categorical column. * Invalid numerical values (for example, values that fall outside of a typical timestamp range, or are extreme values) receive no special treatment and are not removed.
      properties:
        columnName:
          type: string
        timeFormat:
          description: 'The format in which that time field is expressed. The time_format must either be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `unix-nanoseconds` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format is RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z)'
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionTftForecastingMetadata:
      description: Model metadata specific to TFT Forecasting.
      properties:
        evaluatedDataItemsBigqueryUri:
          description: BigQuery destination uri for exported evaluated examples.
          type: string
        trainCostMilliNodeHours:
          description: Output only. The actual training cost of the model, expressed in milli node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed the train budget.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig:
      description: Config that contains the strategy used to generate sliding windows in time series training. A window is a series of rows that comprise the context up to the time of prediction, and the horizon following. The corresponding row for each window marks the start of the forecast horizon. Each window is used as an input example for training/evaluation.
      properties:
        column:
          description: Name of the column that should be used to generate sliding windows. The column should contain either booleans or string booleans; if the value of the row is True, generate a sliding window with the horizon starting at that row. The column will not be used as a feature in training.
          type: string
        maxCount:
          description: Maximum number of windows that should be generated across all time series.
          format: int64
          type: string
        strideLength:
          description: Stride length used to generate input examples. Within one time series, every {$STRIDE_LENGTH} rows will be used to generate a sliding window.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaVertex:
      description: "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1."
      properties:
        x:
          description: X coordinate.
          format: double
          type: number
        y:
          description: Y coordinate.
          format: double
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaVideoActionRecognitionAnnotation:
      description: Annotation details specific to video action recognition.
      properties:
        annotationSpecId:
          description: The resource Id of the AnnotationSpec that this Annotation pertains to.
          type: string
        displayName:
          description: The display name of the AnnotationSpec that this Annotation pertains to.
          type: string
        timeSegment:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTimeSegment"
          description: This Annotation applies to the time period represented by the TimeSegment. If it's not set, the Annotation applies to the whole video.
      type: object
    GoogleCloudAiplatformV1SchemaVideoClassificationAnnotation:
      description: Annotation details specific to video classification.
      properties:
        annotationSpecId:
          description: The resource Id of the AnnotationSpec that this Annotation pertains to.
          type: string
        displayName:
          description: The display name of the AnnotationSpec that this Annotation pertains to.
          type: string
        timeSegment:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SchemaTimeSegment"
          description: This Annotation applies to the time period represented by the TimeSegment. If it's not set, the Annotation applies to the whole video.
      type: object
    GoogleCloudAiplatformV1SchemaVideoDataItem:
      description: Payload of Video DataItem.
      properties:
        gcsUri:
          description: Required. Google Cloud Storage URI points to the original video in user's bucket. The video is up to 50 GB in size and up to 3 hour in duration.
          type: string
        mimeType:
          description: "Output only. The mime type of the content of the video. Only the videos in below listed mime types are supported. Supported mime_type: - video/mp4 - video/avi - video/quicktime"
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaVideoDatasetMetadata:
      description: The metadata of Datasets that contain Video DataItems.
      properties:
        dataItemSchemaUri:
          description: Points to a YAML file stored on Google Cloud Storage describing payload of the Video DataItems that belong to this Dataset.
          type: string
        gcsBucket:
          description: Google Cloud Storage Bucket name that contains the blob data of this Dataset.
          type: string
      type: object
    GoogleCloudAiplatformV1SchemaVideoObjectTrackingAnnotation:
      description: Annotation details specific to video object tracking.
      properties:
        annotationSpecId:
          description: The resource Id of the AnnotationSpec that this Annotation pertains to.
          type: string
        displayName:
          description: The display name of the AnnotationSpec that this Annotation pertains to.
          type: string
        instanceId:
          description: The instance of the object, expressed as a positive integer. Used to track the same object across different frames.
          format: int64
          type: string
        timeOffset:
          description: A time (frame) of a video to which this annotation pertains. Represented as the duration since the video's start.
          format: google-duration
          type: string
        xMax:
          description: The rightmost coordinate of the bounding box.
          format: double
          type: number
        xMin:
          description: The leftmost coordinate of the bounding box.
          format: double
          type: number
        yMax:
          description: The bottommost coordinate of the bounding box.
          format: double
          type: number
        yMin:
          description: The topmost coordinate of the bounding box.
          format: double
          type: number
      type: object
    GoogleCloudAiplatformV1SchemaVisualInspectionClassificationLabelSavedQueryMetadata:
      properties:
        multiLabel:
          description: Whether or not the classification label is multi_label.
          type: boolean
      type: object
    GoogleCloudAiplatformV1SchemaVisualInspectionMaskSavedQueryMetadata:
      properties: {}
      type: object
    GoogleCloudAiplatformV1SearchDataItemsResponse:
      description: Response message for DatasetService.SearchDataItems.
      properties:
        dataItemViews:
          description: The DataItemViews read.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1DataItemView"
          type: array
        nextPageToken:
          description: A token to retrieve next page of results. Pass to SearchDataItemsRequest.page_token to obtain that page.
          type: string
      type: object
    GoogleCloudAiplatformV1SearchFeaturesResponse:
      description: Response message for FeaturestoreService.SearchFeatures.
      properties:
        features:
          description: "The Features matching the request. Fields returned: * `name` * `description` * `labels` * `create_time` * `update_time`"
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Feature"
          type: array
        nextPageToken:
          description: A token, which can be sent as SearchFeaturesRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
    GoogleCloudAiplatformV1SearchMigratableResourcesRequest:
      description: Request message for MigrationService.SearchMigratableResources.
      properties:
        filter:
          description: 'A filter for your search. You can use the following types of filters: * Resource type filters. The following strings filter for a specific type of MigratableResource: * `ml_engine_model_version:*` * `automl_model:*` * `automl_dataset:*` * `data_labeling_dataset:*` * "Migrated or not" filters. The following strings filter for resources that either have or have not already been migrated: * `last_migrate_time:*` filters for migrated resources. * `NOT last_migrate_time:*` filters for not yet migrated resources.'
          type: string
        pageSize:
          description: The standard page size. The default and maximum value is 100.
          format: int32
          type: integer
        pageToken:
          description: The standard page token.
          type: string
      type: object
    GoogleCloudAiplatformV1SearchMigratableResourcesResponse:
      description: Response message for MigrationService.SearchMigratableResources.
      properties:
        migratableResources:
          description: All migratable resources that can be migrated to the location specified in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1MigratableResource"
          type: array
        nextPageToken:
          description: The standard next-page token. The migratable_resources may not fill page_size in SearchMigratableResourcesRequest even when there are subsequent pages.
          type: string
      type: object
    GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequest:
      description: Request message for JobService.SearchModelDeploymentMonitoringStatsAnomalies.
      properties:
        deployedModelId:
          description: Required. The DeployedModel ID of the [ModelDeploymentMonitoringObjectiveConfig.deployed_model_id].
          type: string
        endTime:
          description: The latest timestamp of stats being generated. If not set, indicates feching stats till the latest possible one.
          format: google-datetime
          type: string
        featureDisplayName:
          description: 'The feature display name. If specified, only return the stats belonging to this feature. Format: ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.feature_display_name, example: "user_destination".'
          type: string
        objectives:
          description: Required. Objectives of the stats to retrieve.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective"
          type: array
        pageSize:
          description: The standard list page size.
          format: int32
          type: integer
        pageToken:
          description: A page token received from a previous JobService.SearchModelDeploymentMonitoringStatsAnomalies call.
          type: string
        startTime:
          description: The earliest timestamp of stats being generated. If not set, indicates fetching stats till the earliest possible one.
          format: google-datetime
          type: string
      type: object
    GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective:
      description: Stats requested for specific objective.
      properties:
        topFeatureCount:
          description: If set, all attribution scores between SearchModelDeploymentMonitoringStatsAnomaliesRequest.start_time and SearchModelDeploymentMonitoringStatsAnomaliesRequest.end_time are fetched, and page token doesn't take effect in this case. Only used to retrieve attribution score for the top Features which has the highest attribution score in the latest monitoring run.
          format: int32
          type: integer
        type:
          enum:
            - MODEL_DEPLOYMENT_MONITORING_OBJECTIVE_TYPE_UNSPECIFIED
            - RAW_FEATURE_SKEW
            - RAW_FEATURE_DRIFT
            - FEATURE_ATTRIBUTION_SKEW
            - FEATURE_ATTRIBUTION_DRIFT
          type: string
      type: object
    GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesResponse:
      description: Response message for JobService.SearchModelDeploymentMonitoringStatsAnomalies.
      properties:
        monitoringStats:
          description: Stats retrieved for requested objectives. There are at most 1000 ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.prediction_stats in the response.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelMonitoringStatsAnomalies"
          type: array
        nextPageToken:
          description: The page token that can be used by the next JobService.SearchModelDeploymentMonitoringStatsAnomalies call.
          type: string
      type: object
    GoogleCloudAiplatformV1SearchNearestEntitiesRequest:
      description: The request message for FeatureOnlineStoreService.SearchNearestEntities.
      properties:
        query:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NearestNeighborQuery"
          description: Required. The query.
        returnFullEntity:
          description: Optional. If set to true, the full entities (including all vector values and metadata) of the nearest neighbors are returned; otherwise only entity id of the nearest neighbors will be returned. Note that returning full entities will significantly increase the latency and cost of the query.
          type: boolean
      type: object
    GoogleCloudAiplatformV1SearchNearestEntitiesResponse:
      description: Response message for FeatureOnlineStoreService.SearchNearestEntities
      properties:
        nearestNeighbors:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NearestNeighbors"
          description: The nearest neighbors of the query entity.
      type: object
    GoogleCloudAiplatformV1Segment:
      description: Segment of the content.
      properties:
        endIndex:
          description: Output only. End index in the given Part, measured in bytes. Offset from the start of the Part, exclusive, starting at zero.
          format: int32
          readOnly: true
          type: integer
        partIndex:
          description: Output only. The index of a Part object within its parent Content object.
          format: int32
          readOnly: true
          type: integer
        startIndex:
          description: Output only. Start index in the given Part, measured in bytes. Offset from the start of the Part, inclusive, starting at zero.
          format: int32
          readOnly: true
          type: integer
      type: object
    GoogleCloudAiplatformV1ShieldedVmConfig:
      description: A set of Shielded Instance options. See [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).
      properties:
        enableSecureBoot:
          description: Defines whether the instance has [Secure Boot](https://cloud.google.com/compute/shielded-vm/docs/shielded-vm#secure-boot) enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.
          type: boolean
      type: object
    GoogleCloudAiplatformV1SmoothGradConfig:
      description: "Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf"
      properties:
        featureNoiseSigma:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureNoiseSigma"
          description: This is similar to noise_sigma, but provides additional flexibility. A separate noise sigma can be provided for each feature, which is useful if their distributions are different. No noise is added to features that are not set. If this field is unset, noise_sigma will be used for all features.
        noiseSigma:
          description: "This is a single float value and will be used to add noise to all the features. Use this field when all features are normalized to have the same distribution: scale to range [0, 1], [-1, 1] or z-scoring, where features are normalized to have 0-mean and 1-variance. Learn more about [normalization](https://developers.google.com/machine-learning/data-prep/transform/normalization). For best results the recommended value is about 10% - 20% of the standard deviation of the input feature. Refer to section 3.2 of the SmoothGrad paper: https://arxiv.org/pdf/1706.03825.pdf. Defaults to 0.1. If the distribution is different per feature, set feature_noise_sigma instead for each feature."
          format: float
          type: number
        noisySampleCount:
          description: The number of gradient samples to use for approximation. The higher this number, the more accurate the gradient is, but the runtime complexity increases by this factor as well. Valid range of its value is [1, 50]. Defaults to 3.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1SpecialistPool:
      description: SpecialistPool represents customers' own workforce to work on their data labeling jobs. It includes a group of specialist managers and workers. Managers are responsible for managing the workers in this pool as well as customers' data labeling jobs associated with this pool. Customers create specialist pool as well as start data labeling jobs on Cloud, managers and workers handle the jobs using CrowdCompute console.
      properties:
        displayName:
          description: Required. The user-defined name of the SpecialistPool. The name can be up to 128 characters long and can consist of any UTF-8 characters. This field should be unique on project-level.
          type: string
        name:
          description: Required. The resource name of the SpecialistPool.
          type: string
        pendingDataLabelingJobs:
          description: Output only. The resource name of the pending data labeling jobs.
          items:
            type: string
          readOnly: true
          type: array
        specialistManagerEmails:
          description: The email addresses of the managers in the SpecialistPool.
          items:
            type: string
          type: array
        specialistManagersCount:
          description: Output only. The number of managers in this SpecialistPool.
          format: int32
          readOnly: true
          type: integer
        specialistWorkerEmails:
          description: The email addresses of workers in the SpecialistPool.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1StartNotebookRuntimeOperationMetadata:
      description: Metadata information for NotebookService.StartNotebookRuntime.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The operation generic information.
        progressMessage:
          description: A human-readable message that shows the intermediate progress details of NotebookRuntime.
          type: string
      type: object
    GoogleCloudAiplatformV1StartNotebookRuntimeRequest:
      description: Request message for NotebookService.StartNotebookRuntime.
      properties: {}
      type: object
    GoogleCloudAiplatformV1StopTrialRequest:
      description: Request message for VizierService.StopTrial.
      properties: {}
      type: object
    GoogleCloudAiplatformV1StratifiedSplit:
      description: Assigns input data to the training, validation, and test sets so that the distribution of values found in the categorical column (as specified by the `key` field) is mirrored within each split. The fraction values determine the relative sizes of the splits. For example, if the specified column has three values, with 50% of the rows having value "A", 25% value "B", and 25% value "C", and the split fractions are specified as 80/10/10, then the training set will constitute 80% of the training data, with about 50% of the training set rows having the value "A" for the specified column, about 25% having the value "B", and about 25% having the value "C". Only the top 500 occurring values are used; any values not in the top 500 values are randomly assigned to a split. If less than three rows contain a specific value, those rows are randomly assigned. Supported only for tabular Datasets.
      properties:
        key:
          description: Required. The key is a name of one of the Dataset's data columns. The key provided must be for a categorical column.
          type: string
        testFraction:
          description: The fraction of the input data that is to be used to evaluate the Model.
          format: double
          type: number
        trainingFraction:
          description: The fraction of the input data that is to be used to train the Model.
          format: double
          type: number
        validationFraction:
          description: The fraction of the input data that is to be used to validate the Model.
          format: double
          type: number
      type: object
    GoogleCloudAiplatformV1StreamRawPredictRequest:
      description: Request message for PredictionService.StreamRawPredict.
      properties:
        httpBody:
          $ref: "#/components/schemas/GoogleApiHttpBody"
          description: The prediction input. Supports HTTP headers and arbitrary data payload.
      type: object
    GoogleCloudAiplatformV1StreamingPredictRequest:
      description: Request message for PredictionService.StreamingPredict. The first message must contain endpoint field and optionally input. The subsequent messages must contain input.
      properties:
        inputs:
          description: The prediction input.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Tensor"
          type: array
        parameters:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Tensor"
          description: The parameters that govern the prediction.
      type: object
    GoogleCloudAiplatformV1StreamingPredictResponse:
      description: Response message for PredictionService.StreamingPredict.
      properties:
        outputs:
          description: The prediction output.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Tensor"
          type: array
        parameters:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Tensor"
          description: The parameters that govern the prediction.
      type: object
    GoogleCloudAiplatformV1StreamingReadFeatureValuesRequest:
      description: Request message for FeaturestoreOnlineServingService.StreamingFeatureValuesRead.
      properties:
        entityIds:
          description: Required. IDs of entities to read Feature values of. The maximum number of IDs is 100. For example, for a machine learning model predicting user clicks on a website, an entity ID could be `user_123`.
          items:
            type: string
          type: array
        featureSelector:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureSelector"
          description: Required. Selector choosing Features of the target EntityType. Feature IDs will be deduplicated.
      type: object
    GoogleCloudAiplatformV1StringArray:
      description: A list of string values.
      properties:
        values:
          description: A list of string values.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1Study:
      description: A message representing a Study.
      properties:
        createTime:
          description: Output only. Time at which the study was created.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: Required. Describes the Study, default value is empty string.
          type: string
        inactiveReason:
          description: Output only. A human readable reason why the Study is inactive. This should be empty if a study is ACTIVE or COMPLETED.
          readOnly: true
          type: string
        name:
          description: "Output only. The name of a study. The study's globally unique identifier. Format: `projects/{project}/locations/{location}/studies/{study}`"
          readOnly: true
          type: string
        state:
          description: Output only. The detailed state of a Study.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - INACTIVE
            - COMPLETED
          readOnly: true
          type: string
        studySpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StudySpec"
          description: Required. Configuration of the Study.
      type: object
    GoogleCloudAiplatformV1StudySpec:
      description: Represents specification of a Study.
      properties:
        algorithm:
          description: The search algorithm specified for the Study.
          enum:
            - ALGORITHM_UNSPECIFIED
            - GRID_SEARCH
            - RANDOM_SEARCH
          type: string
        convexAutomatedStoppingSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StudySpecConvexAutomatedStoppingSpec"
          description: The automated early stopping spec using convex stopping rule.
        decayCurveStoppingSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StudySpecDecayCurveAutomatedStoppingSpec"
          description: The automated early stopping spec using decay curve rule.
        measurementSelectionType:
          description: Describe which measurement selection type will be used
          enum:
            - MEASUREMENT_SELECTION_TYPE_UNSPECIFIED
            - LAST_MEASUREMENT
            - BEST_MEASUREMENT
          type: string
        medianAutomatedStoppingSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StudySpecMedianAutomatedStoppingSpec"
          description: The automated early stopping spec using median rule.
        metrics:
          description: Required. Metric specs for the Study.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1StudySpecMetricSpec"
          type: array
        observationNoise:
          description: The observation noise level of the study. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline.
          enum:
            - OBSERVATION_NOISE_UNSPECIFIED
            - LOW
            - HIGH
          type: string
        parameters:
          description: Required. The set of parameters to tune.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpec"
          type: array
        studyStoppingConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StudySpecStudyStoppingConfig"
          description: Conditions for automated stopping of a Study. Enable automated stopping by configuring at least one condition.
      type: object
    GoogleCloudAiplatformV1StudySpecConvexAutomatedStoppingSpec:
      description: Configuration for ConvexAutomatedStoppingSpec. When there are enough completed trials (configured by min_measurement_count), for pending trials with enough measurements and steps, the policy first computes an overestimate of the objective value at max_num_steps according to the slope of the incomplete objective value curve. No prediction can be made if the curve is completely flat. If the overestimation is worse than the best objective value of the completed trials, this pending trial will be early-stopped, but a last measurement will be added to the pending trial with max_num_steps and predicted objective value from the autoregression model.
      properties:
        learningRateParameterName:
          description: The hyper-parameter name used in the tuning job that stands for learning rate. Leave it blank if learning rate is not in a parameter in tuning. The learning_rate is used to estimate the objective value of the ongoing trial.
          type: string
        maxStepCount:
          description: Steps used in predicting the final objective for early stopped trials. In general, it's set to be the same as the defined steps in training / tuning. If not defined, it will learn it from the completed trials. When use_steps is false, this field is set to the maximum elapsed seconds.
          format: int64
          type: string
        minMeasurementCount:
          description: The minimal number of measurements in a Trial. Early-stopping checks will not trigger if less than min_measurement_count+1 completed trials or pending trials with less than min_measurement_count measurements. If not defined, the default value is 5.
          format: int64
          type: string
        minStepCount:
          description: Minimum number of steps for a trial to complete. Trials which do not have a measurement with step_count > min_step_count won't be considered for early stopping. It's ok to set it to 0, and a trial can be early stopped at any stage. By default, min_step_count is set to be one-tenth of the max_step_count. When use_elapsed_duration is true, this field is set to the minimum elapsed seconds.
          format: int64
          type: string
        updateAllStoppedTrials:
          description: ConvexAutomatedStoppingSpec by default only updates the trials that needs to be early stopped using a newly trained auto-regressive model. When this flag is set to True, all stopped trials from the beginning are potentially updated in terms of their `final_measurement`. Also, note that the training logic of autoregressive models is different in this case. Enabling this option has shown better results and this may be the default option in the future.
          type: boolean
        useElapsedDuration:
          description: This bool determines whether or not the rule is applied based on elapsed_secs or steps. If use_elapsed_duration==false, the early stopping decision is made according to the predicted objective values according to the target steps. If use_elapsed_duration==true, elapsed_secs is used instead of steps. Also, in this case, the parameters max_num_steps and min_num_steps are overloaded to contain max_elapsed_seconds and min_elapsed_seconds.
          type: boolean
      type: object
    GoogleCloudAiplatformV1StudySpecDecayCurveAutomatedStoppingSpec:
      description: The decay curve automated stopping rule builds a Gaussian Process Regressor to predict the final objective value of a Trial based on the already completed Trials and the intermediate measurements of the current Trial. Early stopping is requested for the current Trial if there is very low probability to exceed the optimal value found so far.
      properties:
        useElapsedDuration:
          description: True if Measurement.elapsed_duration is used as the x-axis of each Trials Decay Curve. Otherwise, Measurement.step_count will be used as the x-axis.
          type: boolean
      type: object
    GoogleCloudAiplatformV1StudySpecMedianAutomatedStoppingSpec:
      description: The median automated stopping rule stops a pending Trial if the Trial's best objective_value is strictly below the median 'performance' of all completed Trials reported up to the Trial's last measurement. Currently, 'performance' refers to the running average of the objective values reported by the Trial in each measurement.
      properties:
        useElapsedDuration:
          description: True if median automated stopping rule applies on Measurement.elapsed_duration. It means that elapsed_duration field of latest measurement of current Trial is used to compute median objective value for each completed Trials.
          type: boolean
      type: object
    GoogleCloudAiplatformV1StudySpecMetricSpec:
      description: Represents a metric to optimize.
      properties:
        goal:
          description: Required. The optimization goal of the metric.
          enum:
            - GOAL_TYPE_UNSPECIFIED
            - MAXIMIZE
            - MINIMIZE
          type: string
        metricId:
          description: Required. The ID of the metric. Must not contain whitespaces and must be unique amongst all MetricSpecs.
          type: string
        safetyConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StudySpecMetricSpecSafetyMetricConfig"
          description: Used for safe search. In the case, the metric will be a safety metric. You must provide a separate metric for objective metric.
      type: object
    GoogleCloudAiplatformV1StudySpecMetricSpecSafetyMetricConfig:
      description: Used in safe optimization to specify threshold levels and risk tolerance.
      properties:
        desiredMinSafeTrialsFraction:
          description: Desired minimum fraction of safe trials (over total number of trials) that should be targeted by the algorithm at any time during the study (best effort). This should be between 0.0 and 1.0 and a value of 0.0 means that there is no minimum and an algorithm proceeds without targeting any specific fraction. A value of 1.0 means that the algorithm attempts to only Suggest safe Trials.
          format: double
          type: number
        safetyThreshold:
          description: Safety threshold (boundary value between safe and unsafe). NOTE that if you leave SafetyMetricConfig unset, a default value of 0 will be used.
          format: double
          type: number
      type: object
    GoogleCloudAiplatformV1StudySpecParameterSpec:
      description: Represents a single parameter to optimize.
      properties:
        categoricalValueSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec"
          description: The value spec for a 'CATEGORICAL' parameter.
        conditionalParameterSpecs:
          description: A conditional parameter node is active if the parameter's value matches the conditional node's parent_value_condition. If two items in conditional_parameter_specs have the same name, they must have disjoint parent_value_condition.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec"
          type: array
        discreteValueSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec"
          description: The value spec for a 'DISCRETE' parameter.
        doubleValueSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec"
          description: The value spec for a 'DOUBLE' parameter.
        integerValueSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec"
          description: The value spec for an 'INTEGER' parameter.
        parameterId:
          description: Required. The ID of the parameter. Must not contain whitespaces and must be unique amongst all ParameterSpecs.
          type: string
        scaleType:
          description: How the parameter should be scaled. Leave unset for `CATEGORICAL` parameters.
          enum:
            - SCALE_TYPE_UNSPECIFIED
            - UNIT_LINEAR_SCALE
            - UNIT_LOG_SCALE
            - UNIT_REVERSE_LOG_SCALE
          type: string
      type: object
    GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec:
      description: Value specification for a parameter in `CATEGORICAL` type.
      properties:
        defaultValue:
          description: A default value for a `CATEGORICAL` parameter that is assumed to be a relatively good starting point. Unset value signals that there is no offered starting point. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline.
          type: string
        values:
          description: Required. The list of possible categories.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec:
      description: Represents a parameter spec with condition from its parent parameter.
      properties:
        parameterSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpec"
          description: Required. The spec for a conditional parameter.
        parentCategoricalValues:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition"
          description: The spec for matching values from a parent parameter of `CATEGORICAL` type.
        parentDiscreteValues:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition"
          description: The spec for matching values from a parent parameter of `DISCRETE` type.
        parentIntValues:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecIntValueCondition"
          description: The spec for matching values from a parent parameter of `INTEGER` type.
      type: object
    GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition:
      description: Represents the spec to match categorical values from parent parameter.
      properties:
        values:
          description: Required. Matches values of the parent parameter of 'CATEGORICAL' type. All values must exist in `categorical_value_spec` of parent parameter.
          items:
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition:
      description: Represents the spec to match discrete values from parent parameter.
      properties:
        values:
          description: Required. Matches values of the parent parameter of 'DISCRETE' type. All values must exist in `discrete_value_spec` of parent parameter. The Epsilon of the value matching is 1e-10.
          items:
            format: double
            type: number
          type: array
      type: object
    GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpecIntValueCondition:
      description: Represents the spec to match integer values from parent parameter.
      properties:
        values:
          description: Required. Matches values of the parent parameter of 'INTEGER' type. All values must lie in `integer_value_spec` of parent parameter.
          items:
            format: int64
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec:
      description: Value specification for a parameter in `DISCRETE` type.
      properties:
        defaultValue:
          description: A default value for a `DISCRETE` parameter that is assumed to be a relatively good starting point. Unset value signals that there is no offered starting point. It automatically rounds to the nearest feasible discrete point. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline.
          format: double
          type: number
        values:
          description: Required. A list of possible values. The list should be in increasing order and at least 1e-10 apart. For instance, this parameter might have possible settings of 1.5, 2.5, and 4.0. This list should not contain more than 1,000 values.
          items:
            format: double
            type: number
          type: array
      type: object
    GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec:
      description: Value specification for a parameter in `DOUBLE` type.
      properties:
        defaultValue:
          description: A default value for a `DOUBLE` parameter that is assumed to be a relatively good starting point. Unset value signals that there is no offered starting point. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline.
          format: double
          type: number
        maxValue:
          description: Required. Inclusive maximum value of the parameter.
          format: double
          type: number
        minValue:
          description: Required. Inclusive minimum value of the parameter.
          format: double
          type: number
      type: object
    GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec:
      description: Value specification for a parameter in `INTEGER` type.
      properties:
        defaultValue:
          description: A default value for an `INTEGER` parameter that is assumed to be a relatively good starting point. Unset value signals that there is no offered starting point. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline.
          format: int64
          type: string
        maxValue:
          description: Required. Inclusive maximum value of the parameter.
          format: int64
          type: string
        minValue:
          description: Required. Inclusive minimum value of the parameter.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1StudySpecStudyStoppingConfig:
      description: The configuration (stopping conditions) for automated stopping of a Study. Conditions include trial budgets, time budgets, and convergence detection.
      properties:
        maxDurationNoProgress:
          description: "If the objective value has not improved for this much time, stop the study. WARNING: Effective only for single-objective studies."
          format: google-duration
          type: string
        maxNumTrials:
          description: If there are more than this many trials, stop the study.
          format: int32
          type: integer
        maxNumTrialsNoProgress:
          description: "If the objective value has not improved for this many consecutive trials, stop the study. WARNING: Effective only for single-objective studies."
          format: int32
          type: integer
        maximumRuntimeConstraint:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StudyTimeConstraint"
          description: If the specified time or duration has passed, stop the study.
        minNumTrials:
          description: If there are fewer than this many COMPLETED trials, do not stop the study.
          format: int32
          type: integer
        minimumRuntimeConstraint:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1StudyTimeConstraint"
          description: 'Each "stopping rule" in this proto specifies an "if" condition. Before Vizier would generate a new suggestion, it first checks each specified stopping rule, from top to bottom in this list. Note that the first few rules (e.g. minimum_runtime_constraint, min_num_trials) will prevent other stopping rules from being evaluated until they are met. For example, setting `min_num_trials=5` and `always_stop_after= 1 hour` means that the Study will ONLY stop after it has 5 COMPLETED trials, even if more than an hour has passed since its creation. It follows the first applicable rule (whose "if" condition is satisfied) to make a stopping decision. If none of the specified rules are applicable, then Vizier decides that the study should not stop. If Vizier decides that the study should stop, the study enters STOPPING state (or STOPPING_ASAP if should_stop_asap = true). IMPORTANT: The automatic study state transition happens precisely as described above; that is, deleting trials or updating StudyConfig NEVER automatically moves the study state back to ACTIVE. If you want to _resume_ a Study that was stopped, 1) change the stopping conditions if necessary, 2) activate the study, and then 3) ask for suggestions. If the specified time or duration has not passed, do not stop the study.'
        shouldStopAsap:
          description: "If true, a Study enters STOPPING_ASAP whenever it would normally enters STOPPING state. The bottom line is: set to true if you want to interrupt on-going evaluations of Trials as soon as the study stopping condition is met. (Please see Study.State documentation for the source of truth)."
          type: boolean
      type: object
    GoogleCloudAiplatformV1StudyTimeConstraint:
      description: Time-based Constraint for Study
      properties:
        endTime:
          description: Compares the wallclock time to this time. Must use UTC timezone.
          format: google-datetime
          type: string
        maxDuration:
          description: Counts the wallclock time passed since the creation of this Study.
          format: google-duration
          type: string
      type: object
    GoogleCloudAiplatformV1SuggestTrialsMetadata:
      description: Details of operations that perform Trials suggestion.
      properties:
        clientId:
          description: The identifier of the client that is requesting the suggestion. If multiple SuggestTrialsRequests have the same `client_id`, the service will return the identical suggested Trial if the Trial is pending, and provide a new Trial if the last suggested Trial was completed.
          type: string
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for suggesting Trials.
      type: object
    GoogleCloudAiplatformV1SuggestTrialsRequest:
      description: Request message for VizierService.SuggestTrials.
      properties:
        clientId:
          description: Required. The identifier of the client that is requesting the suggestion. If multiple SuggestTrialsRequests have the same `client_id`, the service will return the identical suggested Trial if the Trial is pending, and provide a new Trial if the last suggested Trial was completed.
          type: string
        contexts:
          description: "Optional. This allows you to specify the \"context\" for a Trial; a context is a slice (a subspace) of the search space. Typical uses for contexts: 1) You are using Vizier to tune a server for best performance, but there's a strong weekly cycle. The context specifies the day-of-week. This allows Tuesday to generalize from Wednesday without assuming that everything is identical. 2) Imagine you're optimizing some medical treatment for people. As they walk in the door, you know certain facts about them (e.g. sex, weight, height, blood-pressure). Put that information in the context, and Vizier will adapt its suggestions to the patient. 3) You want to do a fair A/B test efficiently. Specify the \"A\" and \"B\" conditions as contexts, and Vizier will generalize between \"A\" and \"B\" conditions. If they are similar, this will allow Vizier to converge to the optimum faster than if \"A\" and \"B\" were separate Studies. NOTE: You can also enter contexts as REQUESTED Trials, e.g. via the CreateTrial() RPC; that's the asynchronous option where you don't need a close association between contexts and suggestions. NOTE: All the Parameters you set in a context MUST be defined in the Study. NOTE: You must supply 0 or $suggestion_count contexts. If you don't supply any contexts, Vizier will make suggestions from the full search space specified in the StudySpec; if you supply a full set of context, each suggestion will match the corresponding context. NOTE: A Context with no features set matches anything, and allows suggestions from the full search space. NOTE: Contexts MUST lie within the search space specified in the StudySpec. It's an error if they don't. NOTE: Contexts preferentially match ACTIVE then REQUESTED trials before new suggestions are generated. NOTE: Generation of suggestions involves a match between a Context and (optionally) a REQUESTED trial; if that match is not fully specified, a suggestion will be geneated in the merged subspace."
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1TrialContext"
          type: array
        suggestionCount:
          description: Required. The number of suggestions requested. It must be positive.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1SuggestTrialsResponse:
      description: Response message for VizierService.SuggestTrials.
      properties:
        endTime:
          description: The time at which operation processing completed.
          format: google-datetime
          type: string
        startTime:
          description: The time at which the operation was started.
          format: google-datetime
          type: string
        studyState:
          description: The state of the Study.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - INACTIVE
            - COMPLETED
          type: string
        trials:
          description: A list of Trials.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Trial"
          type: array
      type: object
    GoogleCloudAiplatformV1SyncFeatureViewRequest:
      description: Request message for FeatureOnlineStoreAdminService.SyncFeatureView.
      properties: {}
      type: object
    GoogleCloudAiplatformV1SyncFeatureViewResponse:
      description: Respose message for FeatureOnlineStoreAdminService.SyncFeatureView.
      properties:
        featureViewSync:
          description: "Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/{feature_view_sync}`"
          type: string
      type: object
    GoogleCloudAiplatformV1TFRecordDestination:
      description: The storage details for TFRecord output content.
      properties:
        gcsDestination:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GcsDestination"
          description: Required. Google Cloud Storage location.
      type: object
    GoogleCloudAiplatformV1Tensor:
      description: A tensor value type.
      properties:
        boolVal:
          description: Type specific representations that make it easy to create tensor protos in all languages. Only the representation corresponding to "dtype" can be set. The values hold the flattened representation of the tensor in row major order. BOOL
          items:
            type: boolean
          type: array
        bytesVal:
          description: STRING
          items:
            format: byte
            type: string
          type: array
        doubleVal:
          description: DOUBLE
          items:
            format: double
            type: number
          type: array
        dtype:
          description: The data type of tensor.
          enum:
            - DATA_TYPE_UNSPECIFIED
            - BOOL
            - STRING
            - FLOAT
            - DOUBLE
            - INT8
            - INT16
            - INT32
            - INT64
            - UINT8
            - UINT16
            - UINT32
            - UINT64
          type: string
        floatVal:
          description: FLOAT
          items:
            format: float
            type: number
          type: array
        int64Val:
          description: INT64
          items:
            format: int64
            type: string
          type: array
        intVal:
          description: INT_8 INT_16 INT_32
          items:
            format: int32
            type: integer
          type: array
        listVal:
          description: A list of tensor values.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Tensor"
          type: array
        shape:
          description: Shape of the tensor.
          items:
            format: int64
            type: string
          type: array
        stringVal:
          description: STRING
          items:
            type: string
          type: array
        structVal:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Tensor"
          description: A map of string to tensor.
          type: object
        tensorVal:
          description: Serialized raw tensor content.
          format: byte
          type: string
        uint64Val:
          description: UINT64
          items:
            format: uint64
            type: string
          type: array
        uintVal:
          description: UINT8 UINT16 UINT32
          items:
            format: uint32
            type: integer
          type: array
      type: object
    GoogleCloudAiplatformV1Tensorboard:
      description: Tensorboard is a physical database that stores users' training metrics. A default Tensorboard is provided in each region of a Google Cloud project. If needed users can also create extra Tensorboards in their projects.
      properties:
        blobStoragePathPrefix:
          description: Output only. Consumer project Cloud Storage path prefix used to store blob data, which can either be a bucket or directory. Does not end with a '/'.
          readOnly: true
          type: string
        createTime:
          description: Output only. Timestamp when this Tensorboard was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Description of this Tensorboard.
          type: string
        displayName:
          description: Required. User provided name of this Tensorboard.
          type: string
        encryptionSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec"
          description: Customer-managed encryption key spec for a Tensorboard. If set, this Tensorboard and all sub-resources of this Tensorboard will be secured by this key.
        etag:
          description: Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        isDefault:
          description: Used to indicate if the TensorBoard instance is the default one. Each project & region can have at most one default TensorBoard instance. Creation of a default TensorBoard instance and updating an existing TensorBoard instance to be default will mark all other TensorBoard instances (if any) as non default.
          type: boolean
        labels:
          additionalProperties:
            type: string
          description: The labels with user-defined metadata to organize your Tensorboards. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Tensorboard (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
          type: object
        name:
          description: "Output only. Name of the Tensorboard. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`"
          readOnly: true
          type: string
        runCount:
          description: Output only. The number of Runs stored in this Tensorboard.
          format: int32
          readOnly: true
          type: integer
        updateTime:
          description: Output only. Timestamp when this Tensorboard was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1TensorboardBlob:
      description: One blob (e.g, image, graph) viewable on a blob metric plot.
      properties:
        data:
          description: Optional. The bytes of the blob is not present unless it's returned by the ReadTensorboardBlobData endpoint.
          format: byte
          type: string
        id:
          description: Output only. A URI safe key uniquely identifying a blob. Can be used to locate the blob stored in the Cloud Storage bucket of the consumer project.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1TensorboardBlobSequence:
      description: One point viewable on a blob metric plot, but mostly just a wrapper message to work around repeated fields can't be used directly within `oneof` fields.
      properties:
        values:
          description: List of blobs contained within the sequence.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1TensorboardBlob"
          type: array
      type: object
    GoogleCloudAiplatformV1TensorboardExperiment:
      description: A TensorboardExperiment is a group of TensorboardRuns, that are typically the results of a training job run, in a Tensorboard.
      properties:
        createTime:
          description: Output only. Timestamp when this TensorboardExperiment was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Description of this TensorboardExperiment.
          type: string
        displayName:
          description: User provided name of this TensorboardExperiment.
          type: string
        etag:
          description: Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        labels:
          additionalProperties:
            type: string
          description: "The labels with user-defined metadata to organize your TensorboardExperiment. Label keys and values cannot be longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `aiplatform.googleapis.com/` and are immutable. The following system labels exist for each Dataset: * `aiplatform.googleapis.com/dataset_metadata_schema`: output only. Its value is the metadata_schema's title."
          type: object
        name:
          description: "Output only. Name of the TensorboardExperiment. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`"
          readOnly: true
          type: string
        source:
          description: "Immutable. Source of the TensorboardExperiment. Example: a custom training job."
          type: string
        updateTime:
          description: Output only. Timestamp when this TensorboardExperiment was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1TensorboardRun:
      description: TensorboardRun maps to a specific execution of a training job with a given set of hyperparameter values, model definition, dataset, etc
      properties:
        createTime:
          description: Output only. Timestamp when this TensorboardRun was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Description of this TensorboardRun.
          type: string
        displayName:
          description: Required. User provided name of this TensorboardRun. This value must be unique among all TensorboardRuns belonging to the same parent TensorboardExperiment.
          type: string
        etag:
          description: Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        labels:
          additionalProperties:
            type: string
          description: The labels with user-defined metadata to organize your TensorboardRuns. This field will be used to filter and visualize Runs in the Tensorboard UI. For example, a Vertex AI training job can set a label aiplatform.googleapis.com/training_job_id=xxxxx to all the runs created within that job. An end user can set a label experiment_id=xxxxx for all the runs produced in a Jupyter notebook. These runs can be grouped by a label value and visualized together in the Tensorboard UI. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one TensorboardRun (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
          type: object
        name:
          description: "Output only. Name of the TensorboardRun. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`"
          readOnly: true
          type: string
        updateTime:
          description: Output only. Timestamp when this TensorboardRun was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1TensorboardTensor:
      description: One point viewable on a tensor metric plot.
      properties:
        value:
          description: Required. Serialized form of https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/framework/tensor.proto
          format: byte
          type: string
        versionNumber:
          description: Optional. Version number of TensorProto used to serialize value.
          format: int32
          type: integer
      type: object
    GoogleCloudAiplatformV1TensorboardTimeSeries:
      description: TensorboardTimeSeries maps to times series produced in training runs
      properties:
        createTime:
          description: Output only. Timestamp when this TensorboardTimeSeries was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Description of this TensorboardTimeSeries.
          type: string
        displayName:
          description: Required. User provided name of this TensorboardTimeSeries. This value should be unique among all TensorboardTimeSeries resources belonging to the same TensorboardRun resource (parent resource).
          type: string
        etag:
          description: Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
          type: string
        metadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata"
          description: Output only. Scalar, Tensor, or Blob metadata for this TensorboardTimeSeries.
          readOnly: true
        name:
          description: Output only. Name of the TensorboardTimeSeries.
          readOnly: true
          type: string
        pluginData:
          description: Data of the current plugin, with the size limited to 65KB.
          format: byte
          type: string
        pluginName:
          description: Immutable. Name of the plugin this time series pertain to. Such as Scalar, Tensor, Blob
          type: string
        updateTime:
          description: Output only. Timestamp when this TensorboardTimeSeries was last updated.
          format: google-datetime
          readOnly: true
          type: string
        valueType:
          description: Required. Immutable. Type of TensorboardTimeSeries value.
          enum:
            - VALUE_TYPE_UNSPECIFIED
            - SCALAR
            - TENSOR
            - BLOB_SEQUENCE
          type: string
      type: object
    GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata:
      description: Describes metadata for a TensorboardTimeSeries.
      properties:
        maxBlobSequenceLength:
          description: Output only. The largest blob sequence length (number of blobs) of all data points in this time series, if its ValueType is BLOB_SEQUENCE.
          format: int64
          readOnly: true
          type: string
        maxStep:
          description: Output only. Max step index of all data points within a TensorboardTimeSeries.
          format: int64
          readOnly: true
          type: string
        maxWallTime:
          description: Output only. Max wall clock timestamp of all data points within a TensorboardTimeSeries.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1ThresholdConfig:
      description: The config for feature monitoring threshold.
      properties:
        value:
          description: "Specify a threshold value that can trigger the alert. If this threshold config is for feature distribution distance: 1. For categorical feature, the distribution distance is calculated by L-inifinity norm. 2. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence. Each feature must have a non-zero threshold if they need to be monitored. Otherwise no alert will be triggered for that feature."
          format: double
          type: number
      type: object
    GoogleCloudAiplatformV1TimeSeriesData:
      description: All the data stored in a TensorboardTimeSeries.
      properties:
        tensorboardTimeSeriesId:
          description: Required. The ID of the TensorboardTimeSeries, which will become the final component of the TensorboardTimeSeries' resource name
          type: string
        valueType:
          description: Required. Immutable. The value type of this time series. All the values in this time series data must match this value type.
          enum:
            - VALUE_TYPE_UNSPECIFIED
            - SCALAR
            - TENSOR
            - BLOB_SEQUENCE
          type: string
        values:
          description: Required. Data points in this time series.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1TimeSeriesDataPoint"
          type: array
      type: object
    GoogleCloudAiplatformV1TimeSeriesDataPoint:
      description: A TensorboardTimeSeries data point.
      properties:
        blobs:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1TensorboardBlobSequence"
          description: A blob sequence value.
        scalar:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Scalar"
          description: A scalar value.
        step:
          description: Step index of this data point within the run.
          format: int64
          type: string
        tensor:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1TensorboardTensor"
          description: A tensor value.
        wallTime:
          description: Wall clock timestamp when this data point is generated by the end user.
          format: google-datetime
          type: string
      type: object
    GoogleCloudAiplatformV1TimestampSplit:
      description: Assigns input data to training, validation, and test sets based on a provided timestamps. The youngest data pieces are assigned to training set, next to validation set, and the oldest to the test set. Supported only for tabular Datasets.
      properties:
        key:
          description: Required. The key is a name of one of the Dataset's data columns. The values of the key (the values in the column) must be in RFC 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z). If for a piece of data the key is not present or has an invalid value, that piece is ignored by the pipeline.
          type: string
        testFraction:
          description: The fraction of the input data that is to be used to evaluate the Model.
          format: double
          type: number
        trainingFraction:
          description: The fraction of the input data that is to be used to train the Model.
          format: double
          type: number
        validationFraction:
          description: The fraction of the input data that is to be used to validate the Model.
          format: double
          type: number
      type: object
    GoogleCloudAiplatformV1TokensInfo:
      description: Tokens info with a list of tokens and the corresponding list of token ids.
      properties:
        tokenIds:
          description: A list of token ids from the input.
          items:
            format: int64
            type: string
          type: array
        tokens:
          description: A list of tokens from the input.
          items:
            format: byte
            type: string
          type: array
      type: object
    GoogleCloudAiplatformV1Tool:
      description: Tool details that the model may use to generate response. A `Tool` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the model. A Tool object should contain exactly one type of Tool (e.g FunctionDeclaration, Retrieval or GoogleSearchRetrieval).
      properties:
        functionDeclarations:
          description: Optional. Function tool type. One or more function declarations to be passed to the model along with the current user query. Model may decide to call a subset of these functions by populating FunctionCall in the response. User should provide a FunctionResponse for each function call in the next turn. Based on the function responses, Model will generate the final response back to the user. Maximum 64 function declarations can be provided.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1FunctionDeclaration"
          type: array
      type: object
    GoogleCloudAiplatformV1TrainingConfig:
      description: CMLE training config. For every active learning labeling iteration, system will train a machine learning model on CMLE. The trained model will be used by data sampling algorithm to select DataItems.
      properties:
        timeoutTrainingMilliHours:
          description: The timeout hours for the CMLE training job, expressed in milli hours i.e. 1,000 value in this field means 1 hour.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1TrainingPipeline:
      description: The TrainingPipeline orchestrates tasks associated with training a Model. It always executes the training task, and optionally may also export data from Vertex AI's Dataset which becomes the training input, upload the Model to Vertex AI, and evaluate the Model.
      properties:
        createTime:
          description: Output only. Time when the TrainingPipeline was created.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: Required. The user-defined name of this TrainingPipeline.
          type: string
        encryptionSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1EncryptionSpec"
          description: "Customer-managed encryption key spec for a TrainingPipeline. If set, this TrainingPipeline will be secured by this key. Note: Model trained by this TrainingPipeline is also secured by this key if model_to_upload is not set separately."
        endTime:
          description: "Output only. Time when the TrainingPipeline entered any of the following states: `PIPELINE_STATE_SUCCEEDED`, `PIPELINE_STATE_FAILED`, `PIPELINE_STATE_CANCELLED`."
          format: google-datetime
          readOnly: true
          type: string
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Output only. Only populated when the pipeline's state is `PIPELINE_STATE_FAILED` or `PIPELINE_STATE_CANCELLED`.
          readOnly: true
        inputDataConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1InputDataConfig"
          description: Specifies Vertex AI owned input data that may be used for training the Model. The TrainingPipeline's training_task_definition should make clear whether this config is used and if there are any special requirements on how it should be filled. If nothing about this config is mentioned in the training_task_definition, then it should be assumed that the TrainingPipeline does not depend on this configuration.
        labels:
          additionalProperties:
            type: string
          description: The labels with user-defined metadata to organize TrainingPipelines. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
          type: object
        modelId:
          description: Optional. The ID to use for the uploaded Model, which will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen.
          type: string
        modelToUpload:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Model"
          description: Describes the Model that may be uploaded (via ModelService.UploadModel) by this TrainingPipeline. The TrainingPipeline's training_task_definition should make clear whether this Model description should be populated, and if there are any special requirements regarding how it should be filled. If nothing is mentioned in the training_task_definition, then it should be assumed that this field should not be filled and the training task either uploads the Model without a need of this information, or that training task does not support uploading a Model as part of the pipeline. When the Pipeline's state becomes `PIPELINE_STATE_SUCCEEDED` and the trained Model had been uploaded into Vertex AI, then the model_to_upload's resource name is populated. The Model is always uploaded into the Project and Location in which this pipeline is.
        name:
          description: Output only. Resource name of the TrainingPipeline.
          readOnly: true
          type: string
        parentModel:
          description: Optional. When specify this field, the `model_to_upload` will not be uploaded as a new model, instead, it will become a new version of this `parent_model`.
          type: string
        startTime:
          description: Output only. Time when the TrainingPipeline for the first time entered the `PIPELINE_STATE_RUNNING` state.
          format: google-datetime
          readOnly: true
          type: string
        state:
          description: Output only. The detailed state of the pipeline.
          enum:
            - PIPELINE_STATE_UNSPECIFIED
            - PIPELINE_STATE_QUEUED
            - PIPELINE_STATE_PENDING
            - PIPELINE_STATE_RUNNING
            - PIPELINE_STATE_SUCCEEDED
            - PIPELINE_STATE_FAILED
            - PIPELINE_STATE_CANCELLING
            - PIPELINE_STATE_CANCELLED
            - PIPELINE_STATE_PAUSED
          readOnly: true
          type: string
        trainingTaskDefinition:
          description: "Required. A Google Cloud Storage path to the YAML file that defines the training task which is responsible for producing the model artifact, and may also include additional auxiliary work. The definition files that can be used here are found in gs://google-cloud-aiplatform/schema/trainingjob/definition/. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access."
          type: string
        trainingTaskInputs:
          description: Required. The training task's parameter(s), as specified in the training_task_definition's `inputs`.
        trainingTaskMetadata:
          description: Output only. The metadata information as specified in the training_task_definition's `metadata`. This metadata is an auxiliary runtime and final information about the training task. While the pipeline is running this information is populated only at a best effort basis. Only present if the pipeline's training_task_definition contains `metadata` object.
          readOnly: true
        updateTime:
          description: Output only. Time when the TrainingPipeline was most recently updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1Trial:
      description: A message representing a Trial. A Trial contains a unique set of Parameters that has been or will be evaluated, along with the objective metrics got by running the Trial.
      properties:
        clientId:
          description: Output only. The identifier of the client that originally requested this Trial. Each client is identified by a unique client_id. When a client asks for a suggestion, Vertex AI Vizier will assign it a Trial. The client should evaluate the Trial, complete it, and report back to Vertex AI Vizier. If suggestion is asked again by same client_id before the Trial is completed, the same Trial will be returned. Multiple clients with different client_ids can ask for suggestions simultaneously, each of them will get their own Trial.
          readOnly: true
          type: string
        customJob:
          description: Output only. The CustomJob name linked to the Trial. It's set for a HyperparameterTuningJob's Trial.
          readOnly: true
          type: string
        endTime:
          description: Output only. Time when the Trial's status changed to `SUCCEEDED` or `INFEASIBLE`.
          format: google-datetime
          readOnly: true
          type: string
        finalMeasurement:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Measurement"
          description: Output only. The final measurement containing the objective value.
          readOnly: true
        id:
          description: Output only. The identifier of the Trial assigned by the service.
          readOnly: true
          type: string
        infeasibleReason:
          description: Output only. A human readable string describing why the Trial is infeasible. This is set only if Trial state is `INFEASIBLE`.
          readOnly: true
          type: string
        measurements:
          description: Output only. A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_duration). These are used for early stopping computations.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1Measurement"
          readOnly: true
          type: array
        name:
          description: Output only. Resource name of the Trial assigned by the service.
          readOnly: true
          type: string
        parameters:
          description: Output only. The parameters of the Trial.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1TrialParameter"
          readOnly: true
          type: array
        startTime:
          description: Output only. Time when the Trial was started.
          format: google-datetime
          readOnly: true
          type: string
        state:
          description: Output only. The detailed state of the Trial.
          enum:
            - STATE_UNSPECIFIED
            - REQUESTED
            - ACTIVE
            - STOPPING
            - SUCCEEDED
            - INFEASIBLE
          readOnly: true
          type: string
        webAccessUris:
          additionalProperties:
            type: string
          description: Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only available if this trial is part of a HyperparameterTuningJob and the job's trial_job_spec.enable_web_access field is `true`. The keys are names of each node used for the trial; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The values are the URIs for each node's interactive shell.
          readOnly: true
          type: object
      type: object
    GoogleCloudAiplatformV1TrialContext:
      description: "Next ID: 3"
      properties:
        description:
          description: A human-readable field which can store a description of this context. This will become part of the resulting Trial's description field.
          type: string
        parameters:
          description: "If/when a Trial is generated or selected from this Context, its Parameters will match any parameters specified here. (I.e. if this context specifies parameter name:'a' int_value:3, then a resulting Trial will have int_value:3 for its parameter named 'a'.) Note that we first attempt to match existing REQUESTED Trials with contexts, and if there are no matches, we generate suggestions in the subspace defined by the parameters specified here. NOTE: a Context without any Parameters matches the entire feasible search space."
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1TrialParameter"
          type: array
      type: object
    GoogleCloudAiplatformV1TrialParameter:
      description: A message representing a parameter to be tuned.
      properties:
        parameterId:
          description: Output only. The ID of the parameter. The parameter should be defined in StudySpec's Parameters.
          readOnly: true
          type: string
        value:
          description: Output only. The value of the parameter. `number_value` will be set if a parameter defined in StudySpec is in type 'INTEGER', 'DOUBLE' or 'DISCRETE'. `string_value` will be set if a parameter defined in StudySpec is in type 'CATEGORICAL'.
          readOnly: true
      type: object
    GoogleCloudAiplatformV1UndeployIndexOperationMetadata:
      description: Runtime operation information for IndexEndpointService.UndeployIndex.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The operation generic information.
      type: object
    GoogleCloudAiplatformV1UndeployIndexRequest:
      description: Request message for IndexEndpointService.UndeployIndex.
      properties:
        deployedIndexId:
          description: Required. The ID of the DeployedIndex to be undeployed from the IndexEndpoint.
          type: string
      type: object
    GoogleCloudAiplatformV1UndeployIndexResponse:
      description: Response message for IndexEndpointService.UndeployIndex.
      properties: {}
      type: object
    GoogleCloudAiplatformV1UndeployModelOperationMetadata:
      description: Runtime operation information for EndpointService.UndeployModel.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The operation generic information.
      type: object
    GoogleCloudAiplatformV1UndeployModelRequest:
      description: Request message for EndpointService.UndeployModel.
      properties:
        deployedModelId:
          description: Required. The ID of the DeployedModel to be undeployed from the Endpoint.
          type: string
        trafficSplit:
          additionalProperties:
            format: int32
            type: integer
          description: If this field is provided, then the Endpoint's traffic_split will be overwritten with it. If last DeployedModel is being undeployed from the Endpoint, the [Endpoint.traffic_split] will always end up empty when this call returns. A DeployedModel will be successfully undeployed only if it doesn't have any traffic assigned to it when this method executes, or if this field unassigns any traffic to it.
          type: object
      type: object
    GoogleCloudAiplatformV1UndeployModelResponse:
      description: Response message for EndpointService.UndeployModel.
      properties: {}
      type: object
    GoogleCloudAiplatformV1UnmanagedContainerModel:
      description: Contains model information necessary to perform batch prediction without requiring a full model import.
      properties:
        artifactUri:
          description: The path to the directory containing the Model artifact and any of its supporting files.
          type: string
        containerSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ModelContainerSpec"
          description: Input only. The specification of the container that is to be used when deploying this Model.
        predictSchemata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PredictSchemata"
          description: Contains the schemata used in Model's predictions and explanations
      type: object
    GoogleCloudAiplatformV1UpdateDeploymentResourcePoolOperationMetadata:
      description: Runtime operation information for UpdateDeploymentResourcePool method.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The operation generic information.
      type: object
    GoogleCloudAiplatformV1UpdateExplanationDatasetOperationMetadata:
      description: Runtime operation information for ModelService.UpdateExplanationDataset.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The common part of the operation metadata.
      type: object
    GoogleCloudAiplatformV1UpdateExplanationDatasetRequest:
      description: Request message for ModelService.UpdateExplanationDataset.
      properties:
        examples:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Examples"
          description: The example config containing the location of the dataset.
      type: object
    GoogleCloudAiplatformV1UpdateExplanationDatasetResponse:
      description: Response message of ModelService.UpdateExplanationDataset operation.
      properties: {}
      type: object
    GoogleCloudAiplatformV1UpdateFeatureGroupOperationMetadata:
      description: Details of operations that perform update FeatureGroup.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for FeatureGroup.
      type: object
    GoogleCloudAiplatformV1UpdateFeatureOnlineStoreOperationMetadata:
      description: Details of operations that perform update FeatureOnlineStore.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for FeatureOnlineStore.
      type: object
    GoogleCloudAiplatformV1UpdateFeatureOperationMetadata:
      description: Details of operations that perform update Feature.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for Feature Update.
      type: object
    GoogleCloudAiplatformV1UpdateFeatureViewOperationMetadata:
      description: Details of operations that perform update FeatureView.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for FeatureView Update.
      type: object
    GoogleCloudAiplatformV1UpdateFeaturestoreOperationMetadata:
      description: Details of operations that perform update Featurestore.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for Featurestore.
      type: object
    GoogleCloudAiplatformV1UpdateIndexOperationMetadata:
      description: Runtime operation information for IndexService.UpdateIndex.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The operation generic information.
        nearestNeighborSearchOperationMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata"
          description: The operation metadata with regard to Matching Engine Index operation.
      type: object
    GoogleCloudAiplatformV1UpdateModelDeploymentMonitoringJobOperationMetadata:
      description: Runtime operation information for JobService.UpdateModelDeploymentMonitoringJob.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The operation generic information.
      type: object
    GoogleCloudAiplatformV1UpdateSpecialistPoolOperationMetadata:
      description: Runtime operation metadata for SpecialistPoolService.UpdateSpecialistPool.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The operation generic information.
        specialistPool:
          description: "Output only. The name of the SpecialistPool to which the specialists are being added. Format: `projects/{project_id}/locations/{location_id}/specialistPools/{specialist_pool}`"
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1UpdateTensorboardOperationMetadata:
      description: Details of operations that perform update Tensorboard.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: Operation metadata for Tensorboard.
      type: object
    GoogleCloudAiplatformV1UpgradeNotebookRuntimeOperationMetadata:
      description: Metadata information for NotebookService.UpgradeNotebookRuntime.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The operation generic information.
        progressMessage:
          description: A human-readable message that shows the intermediate progress details of NotebookRuntime.
          type: string
      type: object
    GoogleCloudAiplatformV1UpgradeNotebookRuntimeRequest:
      description: Request message for NotebookService.UpgradeNotebookRuntime.
      properties: {}
      type: object
    GoogleCloudAiplatformV1UploadModelOperationMetadata:
      description: Details of ModelService.UploadModel operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1GenericOperationMetadata"
          description: The common part of the operation metadata.
      type: object
    GoogleCloudAiplatformV1UploadModelRequest:
      description: Request message for ModelService.UploadModel.
      properties:
        model:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1Model"
          description: Required. The Model to create.
        modelId:
          description: Optional. The ID to use for the uploaded Model, which will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen.
          type: string
        parentModel:
          description: Optional. The resource name of the model into which to upload the version. Only specify this field when uploading a new version.
          type: string
        serviceAccount:
          description: Optional. The user-provided custom service account to use to do the model upload. If empty, [Vertex AI Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) will be used to access resources needed to upload the model. This account must belong to the target project where the model is uploaded to, i.e., the project specified in the `parent` field of this request and have necessary read permissions (to Google Cloud Storage, Artifact Registry, etc.).
          type: string
      type: object
    GoogleCloudAiplatformV1UploadModelResponse:
      description: Response message of ModelService.UploadModel operation.
      properties:
        model:
          description: "The name of the uploaded Model resource. Format: `projects/{project}/locations/{location}/models/{model}`"
          type: string
        modelVersionId:
          description: Output only. The version ID of the model that is uploaded.
          readOnly: true
          type: string
      type: object
    GoogleCloudAiplatformV1UpsertDatapointsRequest:
      description: Request message for IndexService.UpsertDatapoints
      properties:
        datapoints:
          description: A list of datapoints to be created/updated.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1IndexDatapoint"
          type: array
        updateMask:
          description: "Optional. Update mask is used to specify the fields to be overwritten in the datapoints by the update. The fields specified in the update_mask are relative to each IndexDatapoint inside datapoints, not the full request. Updatable fields: * Use `all_restricts` to update both restricts and numeric_restricts."
          format: google-fieldmask
          type: string
      type: object
    GoogleCloudAiplatformV1UpsertDatapointsResponse:
      description: Response message for IndexService.UpsertDatapoints
      properties: {}
      type: object
    GoogleCloudAiplatformV1UserActionReference:
      description: References an API call. It contains more information about long running operation and Jobs that are triggered by the API call.
      properties:
        dataLabelingJob:
          description: "For API calls that start a LabelingJob. Resource name of the LabelingJob. Format: `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`"
          type: string
        method:
          description: The method name of the API RPC call. For example, "/google.cloud.aiplatform.{apiVersion}.DatasetService.CreateDataset"
          type: string
        operation:
          description: "For API calls that return a long running operation. Resource name of the long running operation. Format: `projects/{project}/locations/{location}/operations/{operation}`"
          type: string
      type: object
    GoogleCloudAiplatformV1Value:
      description: Value is the value of the field.
      properties:
        doubleValue:
          description: A double value.
          format: double
          type: number
        intValue:
          description: An integer value.
          format: int64
          type: string
        stringValue:
          description: A string value.
          type: string
      type: object
    GoogleCloudAiplatformV1VideoMetadata:
      description: Metadata describes the input video content.
      properties:
        endOffset:
          description: Optional. The end offset of the video.
          format: google-duration
          type: string
        startOffset:
          description: Optional. The start offset of the video.
          format: google-duration
          type: string
      type: object
    GoogleCloudAiplatformV1WorkerPoolSpec:
      description: Represents the spec of a worker pool in a job.
      properties:
        containerSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1ContainerSpec"
          description: The custom container task.
        diskSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1DiskSpec"
          description: Disk spec.
        machineSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1MachineSpec"
          description: Optional. Immutable. The specification of a single machine.
        nfsMounts:
          description: Optional. List of NFS mount spec.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1NfsMount"
          type: array
        pythonPackageSpec:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1PythonPackageSpec"
          description: The Python packaged task.
        replicaCount:
          description: Optional. The number of worker replicas to use for this worker pool.
          format: int64
          type: string
      type: object
    GoogleCloudAiplatformV1WriteFeatureValuesPayload:
      description: Contains Feature values to be written for a specific entity.
      properties:
        entityId:
          description: Required. The ID of the entity.
          type: string
        featureValues:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1FeatureValue"
          description: Required. Feature values to be written, mapping from Feature ID to value. Up to 100,000 `feature_values` entries may be written across all payloads. The feature generation time, aligned by days, must be no older than five years (1825 days) and no later than one year (366 days) in the future.
          type: object
      type: object
    GoogleCloudAiplatformV1WriteFeatureValuesRequest:
      description: Request message for FeaturestoreOnlineServingService.WriteFeatureValues.
      properties:
        payloads:
          description: Required. The entities to be written. Up to 100,000 feature values can be written across all `payloads`.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1WriteFeatureValuesPayload"
          type: array
      type: object
    GoogleCloudAiplatformV1WriteFeatureValuesResponse:
      description: Response message for FeaturestoreOnlineServingService.WriteFeatureValues.
      properties: {}
      type: object
    GoogleCloudAiplatformV1WriteTensorboardExperimentDataRequest:
      description: Request message for TensorboardService.WriteTensorboardExperimentData.
      properties:
        writeRunDataRequests:
          description: Required. Requests containing per-run TensorboardTimeSeries data to write.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1WriteTensorboardRunDataRequest"
          type: array
      type: object
    GoogleCloudAiplatformV1WriteTensorboardExperimentDataResponse:
      description: Response message for TensorboardService.WriteTensorboardExperimentData.
      properties: {}
      type: object
    GoogleCloudAiplatformV1WriteTensorboardRunDataRequest:
      description: Request message for TensorboardService.WriteTensorboardRunData.
      properties:
        tensorboardRun:
          description: "Required. The resource name of the TensorboardRun to write data to. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`"
          type: string
        timeSeriesData:
          description: Required. The TensorboardTimeSeries data to write. Values with in a time series are indexed by their step value. Repeated writes to the same step will overwrite the existing value for that step. The upper limit of data points per write request is 5000.
          items:
            $ref: "#/components/schemas/GoogleCloudAiplatformV1TimeSeriesData"
          type: array
      type: object
    GoogleCloudAiplatformV1WriteTensorboardRunDataResponse:
      description: Response message for TensorboardService.WriteTensorboardRunData.
      properties: {}
      type: object
    GoogleCloudAiplatformV1XraiAttribution:
      description: "An explanation method that redistributes Integrated Gradients attributions to segmented regions, taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1906.02825 Supported only by image Models."
      properties:
        blurBaselineConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1BlurBaselineConfig"
          description: "Config for XRAI with blur baseline. When enabled, a linear path from the maximally blurred image to the input image is created. Using a blurred baseline instead of zero (black image) is motivated by the BlurIG approach explained here: https://arxiv.org/abs/2004.03383"
        smoothGradConfig:
          $ref: "#/components/schemas/GoogleCloudAiplatformV1SmoothGradConfig"
          description: "Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf"
        stepCount:
          description: Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is met within the desired error range. Valid range of its value is [1, 100], inclusively.
          format: int32
          type: integer
      type: object
    GoogleCloudLocationListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudLocationLocation"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    GoogleCloudLocationLocation:
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      type: object
    GoogleIamV1Binding:
      description: Associates `members`, or principals, with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/GoogleTypeExpr"
          description: The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        members:
          description: "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`."
          items:
            type: string
          type: array
        role:
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
      type: object
    GoogleIamV1Policy:
      description: "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
      properties:
        bindings:
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: "#/components/schemas/GoogleIamV1Binding"
          type: array
        etag:
          description: "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
          format: byte
          type: string
        version:
          description: "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
          format: int32
          type: integer
      type: object
    GoogleIamV1SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/GoogleIamV1Policy"
          description: "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
      type: object
    GoogleIamV1TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
          type: array
      type: object
    GoogleLongrunningListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleLongrunningOperation"
          type: array
      type: object
    GoogleLongrunningOperation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    GoogleProtobufEmpty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    GoogleRpcStatus:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    GoogleTypeColor:
      description: "Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ..."
      properties:
        alpha:
          description: "The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0)."
          format: float
          type: number
        blue:
          description: The amount of blue in the color as a value in the interval [0, 1].
          format: float
          type: number
        green:
          description: The amount of green in the color as a value in the interval [0, 1].
          format: float
          type: number
        red:
          description: The amount of red in the color as a value in the interval [0, 1].
          format: float
          type: number
      type: object
    GoogleTypeDate:
      description: "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"
      properties:
        day:
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
          format: int32
          type: integer
        month:
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
          format: int32
          type: integer
        year:
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
          format: int32
          type: integer
      type: object
    GoogleTypeExpr:
      description: "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
      properties:
        description:
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
          type: string
      type: object
    GoogleTypeInterval:
      description: Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
      properties:
        endTime:
          description: Optional. Exclusive end of the interval. If specified, a Timestamp matching this interval will have to be before the end.
          format: google-datetime
          type: string
        startTime:
          description: Optional. Inclusive start of the interval. If specified, a Timestamp matching this interval will have to be the same or after the start.
          format: google-datetime
          type: string
      type: object
    GoogleTypeMoney:
      description: Represents an amount of money with its currency type.
      properties:
        currencyCode:
          description: The three-letter currency code defined in ISO 4217.
          type: string
        nanos:
          description: Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
          format: int32
          type: integer
        units:
          description: The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
          format: int64
          type: string
      type: object
    IntelligenceCloudAutomlXpsMetricEntry:
      properties:
        argentumMetricId:
          description: For billing metrics that are using legacy sku's, set the legacy billing metric id here. This will be sent to Chemist as the "cloudbilling.googleapis.com/argentum_metric_id" label. Otherwise leave empty.
          type: string
        doubleValue:
          description: A double value.
          format: double
          type: number
        int64Value:
          description: A signed 64-bit integer value.
          format: int64
          type: string
        metricName:
          description: The metric name defined in the service configuration.
          type: string
        systemLabels:
          description: Billing system labels for this (metric, value) pair.
          items:
            $ref: "#/components/schemas/IntelligenceCloudAutomlXpsMetricEntryLabel"
          type: array
      type: object
    IntelligenceCloudAutomlXpsMetricEntryLabel:
      properties:
        labelName:
          description: The name of the label.
          type: string
        labelValue:
          description: The value of the label.
          type: string
      type: object
    IntelligenceCloudAutomlXpsReportingMetrics:
      properties:
        effectiveTrainingDuration:
          deprecated: true
          description: The effective time training used. If set, this is used for quota management and billing. Deprecated. AutoML BE doesn't use this. Don't set.
          format: google-duration
          type: string
        metricEntries:
          description: One entry per metric name. The values must be aggregated per metric name.
          items:
            $ref: "#/components/schemas/IntelligenceCloudAutomlXpsMetricEntry"
          type: array
      type: object
    LanguageLabsAidaTrustRecitationProtoDocAttribution:
      description: "The proto defines the attribution information for a document using whatever fields are most applicable for that document's datasource. For example, a Wikipedia article's attribution is in the form of its article title, a website is in the form of a URL, and a Github repo is in the form of a repo name. Next id: 30"
      properties:
        amarnaId:
          type: string
        arxivId:
          type: string
        author:
          type: string
        bibkey:
          type: string
        biorxivId:
          description: "ID of the paper in bioarxiv like ddoi.org/{biorxiv_id} eg: https://doi.org/10.1101/343517"
          type: string
        bookTitle:
          type: string
        bookVolumeId:
          description: The Oceanographers full-view books dataset uses a 'volume id' as the unique ID of a book. There is a deterministic function from a volume id to a URL under the books.google.com domain. Marked as 'optional' since a volume ID of zero is potentially possible and we want to distinguish that from the volume ID not being set.
          format: int64
          type: string
        category:
          enum:
            - CATEGORY_UNSPECIFIED
            - CATEGORY_NEWS
            - CATEGORY_NON_NEWS_WEBDOC
            - CATEGORY_UNKNOWN_MISSING_SIGNAL
          type: string
        conversationId:
          type: string
        dataset:
          description: The dataset this document comes from.
          enum:
            - DATASET_UNSPECIFIED
            - WIKIPEDIA
            - WEBDOCS
            - WEBDOCS_FINETUNE
            - GITHUB_MIRROR
            - BOOKS_FULL_VIEW
            - BOOKS_PRIVATE
            - GNEWS
            - ULM_DOCJOINS
            - ULM_DOCJOINS_DEDUPED
            - MEENA_FC
            - PODCAST
            - AQUA
            - WEB_ASR
            - BARD_GOLDEN
            - COMMON_SENSE_REASONING
            - MATH
            - MATH_REASONING
            - CLEAN_ARXIV
            - LAMDA_FACTUALITY_E2E_QUERY_GENERATION
            - LAMDA_FACTUALITY_E2E_RESPONSE_GENERATION
            - MASSIVE_FORUM_THREAD_SCORED_BARD
            - MASSIVE_FORUM_THREAD_SCORED_LONG_200
            - MASSIVE_FORUM_THREAD_SCORED_LONG_500
            - DOCUMENT_CHUNKS
            - MEENA_RESEARCH_PHASE_GOLDEN_MARKDOWN
            - MEENA_RESEARCH_PHASE_GOOGLERS
            - MEENA_RESPONSE_SAFETY_HUMAN_GEN
            - MEENA_RESPONSE_SAFETY_SCHEMA_NO_BROADCAST
            - MEENA_RESPONSE_SAFETY_V3_HUMAN_GEN2
            - MEENA_RESPONSE_SAFETY_V3_SCHEMA_NO_BROADCAST
            - LAMDA_FACTUALITY_TRIGGER
            - LAMDA_SAFETY_V2_SCHEMA_NO_BROADCAST
            - LAMDA_SSI_DISCRIMINATIVE
            - ASSISTANT_PERSONALITY_SAFETY
            - PODCAST_FINETUNE_DIALOG
            - WORLD_QUERY_GENERATOR
            - C4_JOINED_DOCJOINS
            - HOL4_THEORIES
            - HOL_LIGHT_THEORIES
            - HOLSTEPS
            - ISABELLE_STEP
            - ISABELLE_THEORIES
            - LEAN_MATHLIB_THEORIES
            - LEAN_STEP
            - MIZAR_THEORIES
            - COQ_STEP
            - COQ_THEORIES
            - AMPS_KHAN
            - AMPS_MATHEMATICA
            - CODEY_CODE
            - CODE_QA_SE
            - CODE_QA_SO
            - CODE_QA_FT_FORMAT
            - CODE_QA_FT_KNOWLEDGE
            - CODE_QA_GITHUB_FILTERED_CODE
            - BARD_PERSONALITY_GOLDEN
            - ULM_DOCJOINS_WITH_URLS_EN
            - ULM_DOCJOINS_WITH_URLS_I18N
            - GOODALL_MTV5_GITHUB
            - GOODALL_MTV5_BOOKS
            - GOODALL_MTV5_C4
            - GOODALL_MTV5_WIKIPEDIA
            - GOODALL_MW_TOP_100B
            - GOODALL_MW_STACK_EXCHANGE
            - GOODALL_MW_TOP_0_10B
            - GOODALL_MW_TOP_10B_20B
            - CODEY_NOTEBOOK_LM_PRETRAINING
            - VERTEX_SAFE_FLAN
            - GITHUB_MIRROR_V1_0_1
            - GITHUB_MIRROR_V2_1_0
            - CMS_WIKIPEDIA_LANG_FILTERED
            - CMS_STACKOVERFLOW_MULTILINGUAL
            - CMS_STACKEXCHANGE
            - PUBMED
            - GEMINI_DOCJOINS_EN_TOP10B_GCC
            - GEMINI_DOCJOINS_EN_TOP10B_TOP20B_GCC
            - GEMINI_DOCJOINS_EN_TOP20B_TOP100B_GCC
            - GEMINI_DOCJOINS_EN_TOP100B_ALL_INDEXED_GCC
            - GEMINI_DOCJOINS_I18N_TOP10B_GCC
            - GEMINI_DOCJOINS_I18N_TOP10B_TOP20B_GCC
            - GEMINI_DOCJOINS_I18N_TOP20B_TOP100B_GCC
            - SIMPLIFIED_HTML_V1_GCC
            - GEMINI_DOCJOINS_TOXICITY_TAGGED_GCC
            - CMS_GITHUB_V4
            - GITHUB_HTML_V4
            - GITHUB_OTHER_V4
            - GITHUB_LONG_TAIL_V4
            - CMS_GITHUB_MULTIFILE_V4
            - GITHUB_DIFFS_WITH_COMMIT_MESSAGE
            - ULM_ARXIV
            - NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_040623_LONG_DEDUP_ENONLY
            - NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_040623_LONG_DEDUP_NONENONLY
            - QUORA
            - PODCASTS_ROBOTSTXT
            - COMBINED_REDDIT
            - CANARIES_SHUFFLED
            - CLM_TRANSLATE_DATAV2_ALLTIERS_GCC_MIX
            - TECHDOCS_DATA_SOURCE
            - SCIENCE_PDF_70M_DOCS_FILTERED
            - GEMINI_V1_CMS_WIKIPEDIA_LANG_FILTERED
            - GEMINI_V1_WIKIPEDIA_DIFFS
            - GEMINI_V1_DOCJOINS_EN_TOP10B_GCC_NODEDUP_050523
            - GEMINI_V1_DOCJOINS_EN_TOP10B_TOP20B_GCC_NODEDUP_050523
            - GEMINI_V1_DOCJOINS_EN_TOP20B_TOP100B_GCC_NODEDUP_050523
            - GEMINI_V1_DOCJOINS_EN_TOP100B_ALL_INDEXED_GCC_NODEDUP_050523
            - GEMINI_V1_DOCJOINS_I18N_TOP10B_GCC_050523
            - GEMINI_V1_DOCJOINS_I18N_TOP10B_TOP20B_GCC_050523
            - GEMINI_V1_DOCJOINS_I18N_TOP20B_TOP100B_GCC_050523
            - GEMINI_V1_SIMPLIFIED_HTML_V2_GCC
            - GEMINI_V1_CMS_STACKOVERFLOW_MULTILINGUAL_V2
            - GEMINI_V1_CMS_STACKEXCHANGE_DECONT
            - GEMINI_V1_QUORA
            - GEMINI_V1_COMBINED_REDDIT
            - GEMINI_V1_DOCJOIN_100B_EN_TOXICITY_TAGGED_GCC_FIXED_TAGS
            - GEMINI_V1_PUBMED
            - GEMINI_V1_WEB_MATH_V2
            - GEMINI_V1_CMS_GITHUB_V7
            - GEMINI_V1_CMS_GITHUB_DECONTAMINATED_V_7
            - GEMINI_V1_GITHUB_DIFF_WITH_COMMIT_MESSAGE_V2
            - GEMINI_V1_GITHUB_HTML_CSS_XML_V4
            - GEMINI_V1_GITHUB_OTHER_V4
            - GEMINI_V1_GITHUB_LONG_TAIL_V4
            - GEMINI_V1_GITHUB_JUPTYER_NOTEBOOKS_SSTABLE
            - GEMINI_V1_ULM_ARXIV_SSTABLE
            - GEMINI_V1_PODCASTS_ROBOTSTXT
            - GEMINI_V1_SCIENCE_PDF_68M_HQ_DOCS_GCC
            - GEMINI_V1_GITHUB_TECHDOCS_V2
            - GEMINI_V1_NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_LONG_DEDUP_EN
            - GEMINI_V1_NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_LONG_DEDUP_NONEN
            - GEMINI_V1_STEM_BOOKS_650K_TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_M3W_V2_FILTERED
            - GEMINI_V1_VQCOCA_1B_MULTIRES_WEBLI_EN_V4_350M_PREFIXED_FILTERED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_SCREENAI_PREFIXED_FILTERED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_CULTURE_PREFIXED_FILTERED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_CC3M_EN_PREFIXED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_CC3M_I18N_PREFIXED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_OCR_EN_PREFIXED_FILTERED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_OCR_NON_EN_PREFIXED_FILTERED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_VTP_4F_VIDEO2TEXT_PREFIX
            - GEMINI_V1_FORMAL_MATH_WITHOUT_HOLSTEPS_AND_MIZAR
            - GEMINI_V1_TRANSLATE_DATAV2_ALLTIERS_GCC_MIX
            - GEMINI_V1_CANARIES_SHUFFLED_DOCJOIN_EN_NONEN_CODE_ARXIV_TRANSLATE
            - DUET_CLOUD_SECURITY_DOCS
            - DUET_GITHUB_CODE_SNIPPETS
            - DUET_GITHUB_FILES
            - DUET_GOBYEXAMPLE
            - DUET_GOLANG_DOCS
            - DUET_CLOUD_DOCS_TROUBLESHOOTING_TABLES
            - DUET_DEVSITE_DOCS
            - DUET_CLOUD_BLOG_POSTS
            - DUET_CLOUD_PODCAST_EPISODES
            - DUET_YOUTUBE_VIDEOS
            - DUET_CLOUD_SKILLS_BOOST
            - DUET_CLOUD_DOCS
            - DUET_CLOUD_GITHUB_CODE_SNIPPETS_GENERATED
            - DUET_CLOUD_GITHUB_CODE_SNIPPETS_HANDWRITTEN
            - DUET_GOOGLESQL_GENERATION
            - DUET_CLOUD_IX_PROMPTS
            - DUET_RAD
            - BARD_ARCADE_GITHUB
            - MOBILE_ASSISTANT_MAGI_FILTERED_0825_373K
            - MOBILE_ASSISTANT_PALM24B_FILTERED_400K
            - GENESIS_NEWS_INSIGHTS
            - CLOUD_SECURITY_PRETRAINING
            - CLOUD_SECURITY_FINETUNING
            - CLOUD_SECURITY_RAG_CISA
            - LABS_AQA_DSCOUT
            - LABS_AQA_TAILWIND
            - LABS_AQA_DELEWARE
            - GEMINI_MULTIMODAL_FT_URL
            - GEMINI_MULTIMODAL_FT_YT
            - GEMINI_MULTIMODAL_FT_SHUTTERSTOCK
            - GEMINI_MULTIMODAL_FT_NONE
            - GEMINI_MULTIMODAL_FT_OTHER
            - GEMINI_MULTIMODAL_FT_INK
            - GEMINI_MULTIMODAL_IT
            - GEMINI_IT_SHUTTERSTOCK
            - GEMINI_IT_M3W
            - GEMINI_IT_HEDGING
            - GEMINI_IT_DSCOUT_FACTUALITY
            - GEMINI_IT_AQUAMUSE
            - GEMINI_IT_SHOTGUN
            - GEMINI_IT_ACI_BENCH
            - GEMINI_IT_SPIDER_FILTERED
            - GEMINI_IT_TAB_SUM_BQ
            - GEMINI_IT_QA_WITH_URL
            - GEMINI_IT_CODE_INSTRUCT
            - GEMINI_IT_MED_PALM
            - GEMINI_IT_TASK_ORIENTED_DIALOG
            - GEMINI_IT_NIMBUS_GROUNDING_TO_PROMPT
            - GEMINI_IT_EITL_GEN
            - GEMINI_IT_HITL_GEN
            - GEMINI_IT_MECH
            - GEMINI_IT_TABLE_GEN
            - GEMINI_IT_NIMBUS_DECIBEL
            - GEMINI_IT_CLOUD_CODE_IF
            - GEMINI_IT_CLOUD_EUR_LEX_JSON
            - GEMINI_IT_CLOUD_OASST
            - GEMINI_IT_CLOUD_SELF_INSTRUCT
            - GEMINI_IT_CLOUD_UCS_AQUAMUSE
            - GEMIT_BRIDGE_SUFFIX_FT
            - GEMINI_GOOSE_PUBLIC
            - GEMINI_GOOSE_SILOED
            - GEMINI_V2_CMS_WIKIPEDIA_LANG_FILTERED_GCC_PII
            - GEMINI_V2_WIKIPEDIA_DIFFS_COMPLIANT
            - GEMINI_V2_ENGLISH_ARTICLES_TOP10B_211123_PII_FILTERED
            - GEMINI_V2_ENGLISH_NONARTICLES_TOP10B_211123_PII_FILTERED
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP10B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP10B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT
            - GEMINI_V2_ENGLISH_ARTICLES_TOP20B_211123_PII_FILTERED
            - GEMINI_V2_ENGLISH_NONARTICLES_TOP20B_211123_PII_FILTERED
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP20B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP20B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT
            - GEMINI_V2_ENGLISH_ARTICLES_TOP100B_211123_PII_FILTERED
            - GEMINI_V2_ENGLISH_NONARTICLES_TOP100B_211123_PII_FILTERED
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP100B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP100B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT
            - GEMINI_V2_ENGLISH_ARTICLES_TOP500B_211123_PII_FILTERED
            - GEMINI_V2_ENGLISH_NONARTICLES_TOP500B_211123_PII_FILTERED
            - GEMINI_V2_QUORA_COMPLIANT
            - GEMINI_V2_FORUMS_V2_COMPLIANT
            - GEMINI_V2_CMS_STACKOVERFLOW_MULTILINGUAL_V2_COMPLIANT
            - GEMINI_V2_SIMPLIFIED_HTML_V2_CORRECT_FORMAT_COMPLIANT
            - GEMINI_V2_GEMINI_DOCJOINS_TOXICITY_TAGGED_FIXED_TAGS_COMPLIANT
            - GEMINI_V2_CODEWEB_V1_COMPLIANT
            - GEMINI_V2_LEETCODE_GCC_PII
            - GEMINI_V2_CODE_CONTESTS_COMPLIANT
            - GEMINI_V2_CMS_GITHUB_MULTI_FILE_FOR_FIM_GEMBAGZ_FIXED_BYTES_LENGTHS
            - GEMINI_V2_GITHUB_EVALED_LANGUAGES_COMPLIANT
            - GEMINI_V2_GITHUB_NON_EVAL_HIGH_PRI_LANGUAGES_COMPLIANT
            - GEMINI_V2_GITHUB_LOW_PRI_LANGUAGES_AND_CONFIGS_COMPLIANT
            - GEMINI_V2_GITHUB_LONG_TAIL_AND_STRUCTURED_DATA_COMPLIANT
            - GEMINI_V2_GITHUB_PYTHON_NOTEBOOKS_COMPLIANT
            - GEMINI_V2_GITHUB_DIFFS_COMPLIANT
            - GEMINI_V2_GITHUB_TECHDOCS_COMPLIANT
            - GEMINI_V2_HIGH_QUALITY_CODE_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_SCIENCE_PDF_68M_HQ_DOCS_DEDUP_COMPLIANT_CLEAN_TEX
            - GEMINI_V2_ARXIV_2023_COMPLIANT
            - GEMINI_V2_FORMAL_COMPLIANT
            - GEMINI_V2_CMS_STACKEXCHANGE_COMPLIANT
            - GEMINI_V2_PUBMED_COMPLIANT
            - GEMINI_V2_WEB_MATH_V3_COMPLIANT
            - GEMINI_V2_SCIENCEWEB_V0_GCC_PII
            - GEMINI_V2_WEB_POLYMATH_V1_COMPLIANT
            - GEMINI_V2_MATH_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_BIOLOGY_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_PHYSICS_V2_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_CHEMISTRY_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_MACHINE_LEARNING_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_QA_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_ECONOMICS_V2_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_MEDICAL_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_CHESS_COMPLIANT
            - GEMINI_V2_YOUTUBE_SCIENCE_V4_FILTERED_COMPLIANT
            - GEMINI_V2_GOALDMINE_XL_GENERATED_PLUS_GT_NO_DM_MATH_COMPLIANT
            - GEMINI_V2_FIRSTTIMES_SCIENCE_PDF_DEDUP_HQ_LENGTH_FILTERED_COMPLIANT
            - GEMINI_V2_PODCASTS_COMPLIANT
            - GEMINI_V2_EN_NONSCIENCE_PDF_DEDUP_46M_DOCS_COMPLIANT
            - GEMINI_V2_NONPUB_COPYRIGHT_BOOKS_V3_70_CONF_082323_LONG_DEDUP_ENONLY_COMPLIANT
            - GEMINI_V2_STEM_COPYRIGHT_BOOKS_V3_111823_LONG_DEDUP_ENONLY_COMPLIANT
            - GEMINI_V2_STEM_BOOKS_318K_TEXT_COMPLIANT
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M3W_WITH_IMAGE_TOKENS_INSERTED_INTERLEAVED_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M3W_WITH_IMAGE_TOKENS_INSERTED_INTERLEAVED_COMPLIANT_PII_FILTERED_SOFT
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_EN_V4_350M_T2I_TEXT_TO_IMAGE_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SHUTTERSTOCK_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_EN_V4_350M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_OCR_I18N_680M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_DOC_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SCREENAI_FULL_HTML_75M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SCREENAI_V1_1_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_OCR_DOC_240M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SHUTTERSTOCK_VIDEO_VIDEO_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M4W_INTERLEAVED_COMPLIANT_PII_FILTERED_SOFT
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CULTURE_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_DETECTION_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_ALT_TEXT_NONEN_500M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SPATIAL_AWARE_PALI_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_TABLE2HTML_3D_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TABLE2MD_V2_EN_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TABLE2MD_V2_NON_EN_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_3D_DOC_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CC3M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_INFOGRAPHICS_LARGE_WEB_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_BIORXIV_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PHOTOMATH_IM2SOL_PROBLEM_AND_SOLUTION_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PLOT2TABLE_V2_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TIKZ_DERENDERING_MERGED_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_TABLE2HTML_2D_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WIKIPEDIA_EQUATIONS_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PHOTOMATH_EQ2LATEX_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_ARXIV_EQUATIONS_V2_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_USM2B_MLPV5_YT_ASR_SUP_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_ASR_1P5M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_ASR_4M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_TTS_SUP_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_TTS_1P5M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_TTS_4M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_PODIOSET_INTERLEAVE_ENUS_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_PODIOSET_INTERLEAVE_I18N_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_SCIENCE_ENUS_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_SCIENCE_I18N_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_1P5M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_HEAD_4M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_CLM_TRANSLATE_DATAV3_WEB_UNWMT_INCR_MIX
            - GEMINI_V2_NTL_NTLV4A_MONOLINGUAL_DEDUP_N5
            - GEMINI_V2_NTL_STT_TRANSLATE_DEDUP_N5
            - GEMINI_V2_NTL_TRANSLIT_BILEX_TRANSLATE_DEDUP_N5
            - GEMINI_V2_NTL_SYN_BT_TRANSLATE_DEDUP_N5
            - GEMINI_V2_NTL_SYN_FT_FIXED_TRANSLATE_DEDUP_N5
            - GEMINI_V2_CANARIES_SHUFFLED_COMPLIANT
            - CLOUD_GEMIT_CLOUD_FACTUALITY_GROUNDING_MAGI
            - CLOUD_GEMIT_MT_DIALGUE_LMSYS
            - CLOUD_GEMIT_MTS_DIALOGUE_V3
            - CLOUD_GEMIT_COMMIT_MSG_GEN_V3
            - CLOUD_GEMIT_CODE_IF_V1
            - CLOUD_GEMIT_CODE_SELF_REPAIR
            - CLOUD_GEMIT_IDENTITY
            - CLOUD_GEMIT_SEARCH_AUGMENTED_RESPONSE_GENERATION
            - CLOUD_GEMIT_AMPS
            - CLOUD_GEMIT_AQUA
            - CLOUD_GEMIT_COMMON_SENSE_REASONING_SCHEMA
            - CLOUD_GEMIT_GSM8K_SCHEMA
          type: string
        filepath:
          type: string
        geminiId:
          type: string
        gnewsArticleTitle:
          type: string
        goodallExampleId:
          type: string
        isOptOut:
          description: Whether the document is opted out.
          type: boolean
        isPrompt:
          type: boolean
        lamdaExampleId:
          type: string
        license:
          type: string
        meenaConversationId:
          type: string
        naturalLanguageCode:
          description: Natural (not programming) language of the document. Language code as defined by http://www.unicode.org/reports/tr35/#Identifiers and https://tools.ietf.org/html/bcp47. Currently applicable to full-view books. Use docinfo-util.h to set & read language fields. See go/iii.
          type: string
        noAttribution:
          description: True if this doc has no attribution information available. We use an explicit field for this instead of just implicitly leaving all the DocAttribution fields blank to distinguish a case where a bug/oversight has left the attribution information empty vs when we really have no attribution information available.
          type: boolean
        podcastUtteranceId:
          type: string
        publicationDate:
          $ref: "#/components/schemas/GoogleTypeDate"
        qualityScoreExperimentOnly:
          description: "This field is for opt-out experiment only, MUST never be used during actual production/serving. "
          format: double
          type: number
        repo:
          description: Github repository
          type: string
        url:
          description: URL of a webdoc
          type: string
        volumeId:
          type: string
        wikipediaArticleTitle:
          description: Wikipedia article title. The Wikipedia TFDS dataset includes article titles but not URLs. While a URL is to the best of our knowledge a deterministic function of the title, we store the original title to reflect the information in the original dataset.
          type: string
        youtubeVideoId:
          description: "The unique video id from Youtube. Example: AkoGsW52Ir0"
          type: string
      type: object
    LanguageLabsAidaTrustRecitationProtoRecitationResult:
      description: The recitation result for one input
      properties:
        dynamicSegmentResults:
          items:
            $ref: "#/components/schemas/LanguageLabsAidaTrustRecitationProtoSegmentResult"
          type: array
        recitationAction:
          description: The recitation action for one given input. When its segments contain different actions, the overall action will be returned in the precedence of BLOCK > CITE > NO_ACTION. When the given input is not found in any source, the recitation action will not be specified.
          enum:
            - ACTION_UNSPECIFIED
            - CITE
            - BLOCK
            - NO_ACTION
            - EXEMPT_FOUND_IN_PROMPT
          type: string
        trainingSegmentResults:
          items:
            $ref: "#/components/schemas/LanguageLabsAidaTrustRecitationProtoSegmentResult"
          type: array
      type: object
    LanguageLabsAidaTrustRecitationProtoSegmentResult:
      description: The recitation result for each segment in a given input.
      properties:
        attributionDataset:
          description: The dataset the segment came from.
          enum:
            - DATASET_UNSPECIFIED
            - WIKIPEDIA
            - WEBDOCS
            - WEBDOCS_FINETUNE
            - GITHUB_MIRROR
            - BOOKS_FULL_VIEW
            - BOOKS_PRIVATE
            - GNEWS
            - ULM_DOCJOINS
            - ULM_DOCJOINS_DEDUPED
            - MEENA_FC
            - PODCAST
            - AQUA
            - WEB_ASR
            - BARD_GOLDEN
            - COMMON_SENSE_REASONING
            - MATH
            - MATH_REASONING
            - CLEAN_ARXIV
            - LAMDA_FACTUALITY_E2E_QUERY_GENERATION
            - LAMDA_FACTUALITY_E2E_RESPONSE_GENERATION
            - MASSIVE_FORUM_THREAD_SCORED_BARD
            - MASSIVE_FORUM_THREAD_SCORED_LONG_200
            - MASSIVE_FORUM_THREAD_SCORED_LONG_500
            - DOCUMENT_CHUNKS
            - MEENA_RESEARCH_PHASE_GOLDEN_MARKDOWN
            - MEENA_RESEARCH_PHASE_GOOGLERS
            - MEENA_RESPONSE_SAFETY_HUMAN_GEN
            - MEENA_RESPONSE_SAFETY_SCHEMA_NO_BROADCAST
            - MEENA_RESPONSE_SAFETY_V3_HUMAN_GEN2
            - MEENA_RESPONSE_SAFETY_V3_SCHEMA_NO_BROADCAST
            - LAMDA_FACTUALITY_TRIGGER
            - LAMDA_SAFETY_V2_SCHEMA_NO_BROADCAST
            - LAMDA_SSI_DISCRIMINATIVE
            - ASSISTANT_PERSONALITY_SAFETY
            - PODCAST_FINETUNE_DIALOG
            - WORLD_QUERY_GENERATOR
            - C4_JOINED_DOCJOINS
            - HOL4_THEORIES
            - HOL_LIGHT_THEORIES
            - HOLSTEPS
            - ISABELLE_STEP
            - ISABELLE_THEORIES
            - LEAN_MATHLIB_THEORIES
            - LEAN_STEP
            - MIZAR_THEORIES
            - COQ_STEP
            - COQ_THEORIES
            - AMPS_KHAN
            - AMPS_MATHEMATICA
            - CODEY_CODE
            - CODE_QA_SE
            - CODE_QA_SO
            - CODE_QA_FT_FORMAT
            - CODE_QA_FT_KNOWLEDGE
            - CODE_QA_GITHUB_FILTERED_CODE
            - BARD_PERSONALITY_GOLDEN
            - ULM_DOCJOINS_WITH_URLS_EN
            - ULM_DOCJOINS_WITH_URLS_I18N
            - GOODALL_MTV5_GITHUB
            - GOODALL_MTV5_BOOKS
            - GOODALL_MTV5_C4
            - GOODALL_MTV5_WIKIPEDIA
            - GOODALL_MW_TOP_100B
            - GOODALL_MW_STACK_EXCHANGE
            - GOODALL_MW_TOP_0_10B
            - GOODALL_MW_TOP_10B_20B
            - CODEY_NOTEBOOK_LM_PRETRAINING
            - VERTEX_SAFE_FLAN
            - GITHUB_MIRROR_V1_0_1
            - GITHUB_MIRROR_V2_1_0
            - CMS_WIKIPEDIA_LANG_FILTERED
            - CMS_STACKOVERFLOW_MULTILINGUAL
            - CMS_STACKEXCHANGE
            - PUBMED
            - GEMINI_DOCJOINS_EN_TOP10B_GCC
            - GEMINI_DOCJOINS_EN_TOP10B_TOP20B_GCC
            - GEMINI_DOCJOINS_EN_TOP20B_TOP100B_GCC
            - GEMINI_DOCJOINS_EN_TOP100B_ALL_INDEXED_GCC
            - GEMINI_DOCJOINS_I18N_TOP10B_GCC
            - GEMINI_DOCJOINS_I18N_TOP10B_TOP20B_GCC
            - GEMINI_DOCJOINS_I18N_TOP20B_TOP100B_GCC
            - SIMPLIFIED_HTML_V1_GCC
            - GEMINI_DOCJOINS_TOXICITY_TAGGED_GCC
            - CMS_GITHUB_V4
            - GITHUB_HTML_V4
            - GITHUB_OTHER_V4
            - GITHUB_LONG_TAIL_V4
            - CMS_GITHUB_MULTIFILE_V4
            - GITHUB_DIFFS_WITH_COMMIT_MESSAGE
            - ULM_ARXIV
            - NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_040623_LONG_DEDUP_ENONLY
            - NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_040623_LONG_DEDUP_NONENONLY
            - QUORA
            - PODCASTS_ROBOTSTXT
            - COMBINED_REDDIT
            - CANARIES_SHUFFLED
            - CLM_TRANSLATE_DATAV2_ALLTIERS_GCC_MIX
            - TECHDOCS_DATA_SOURCE
            - SCIENCE_PDF_70M_DOCS_FILTERED
            - GEMINI_V1_CMS_WIKIPEDIA_LANG_FILTERED
            - GEMINI_V1_WIKIPEDIA_DIFFS
            - GEMINI_V1_DOCJOINS_EN_TOP10B_GCC_NODEDUP_050523
            - GEMINI_V1_DOCJOINS_EN_TOP10B_TOP20B_GCC_NODEDUP_050523
            - GEMINI_V1_DOCJOINS_EN_TOP20B_TOP100B_GCC_NODEDUP_050523
            - GEMINI_V1_DOCJOINS_EN_TOP100B_ALL_INDEXED_GCC_NODEDUP_050523
            - GEMINI_V1_DOCJOINS_I18N_TOP10B_GCC_050523
            - GEMINI_V1_DOCJOINS_I18N_TOP10B_TOP20B_GCC_050523
            - GEMINI_V1_DOCJOINS_I18N_TOP20B_TOP100B_GCC_050523
            - GEMINI_V1_SIMPLIFIED_HTML_V2_GCC
            - GEMINI_V1_CMS_STACKOVERFLOW_MULTILINGUAL_V2
            - GEMINI_V1_CMS_STACKEXCHANGE_DECONT
            - GEMINI_V1_QUORA
            - GEMINI_V1_COMBINED_REDDIT
            - GEMINI_V1_DOCJOIN_100B_EN_TOXICITY_TAGGED_GCC_FIXED_TAGS
            - GEMINI_V1_PUBMED
            - GEMINI_V1_WEB_MATH_V2
            - GEMINI_V1_CMS_GITHUB_V7
            - GEMINI_V1_CMS_GITHUB_DECONTAMINATED_V_7
            - GEMINI_V1_GITHUB_DIFF_WITH_COMMIT_MESSAGE_V2
            - GEMINI_V1_GITHUB_HTML_CSS_XML_V4
            - GEMINI_V1_GITHUB_OTHER_V4
            - GEMINI_V1_GITHUB_LONG_TAIL_V4
            - GEMINI_V1_GITHUB_JUPTYER_NOTEBOOKS_SSTABLE
            - GEMINI_V1_ULM_ARXIV_SSTABLE
            - GEMINI_V1_PODCASTS_ROBOTSTXT
            - GEMINI_V1_SCIENCE_PDF_68M_HQ_DOCS_GCC
            - GEMINI_V1_GITHUB_TECHDOCS_V2
            - GEMINI_V1_NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_LONG_DEDUP_EN
            - GEMINI_V1_NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_LONG_DEDUP_NONEN
            - GEMINI_V1_STEM_BOOKS_650K_TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_M3W_V2_FILTERED
            - GEMINI_V1_VQCOCA_1B_MULTIRES_WEBLI_EN_V4_350M_PREFIXED_FILTERED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_SCREENAI_PREFIXED_FILTERED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_CULTURE_PREFIXED_FILTERED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_CC3M_EN_PREFIXED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_CC3M_I18N_PREFIXED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_OCR_EN_PREFIXED_FILTERED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_OCR_NON_EN_PREFIXED_FILTERED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_VTP_4F_VIDEO2TEXT_PREFIX
            - GEMINI_V1_FORMAL_MATH_WITHOUT_HOLSTEPS_AND_MIZAR
            - GEMINI_V1_TRANSLATE_DATAV2_ALLTIERS_GCC_MIX
            - GEMINI_V1_CANARIES_SHUFFLED_DOCJOIN_EN_NONEN_CODE_ARXIV_TRANSLATE
            - DUET_CLOUD_SECURITY_DOCS
            - DUET_GITHUB_CODE_SNIPPETS
            - DUET_GITHUB_FILES
            - DUET_GOBYEXAMPLE
            - DUET_GOLANG_DOCS
            - DUET_CLOUD_DOCS_TROUBLESHOOTING_TABLES
            - DUET_DEVSITE_DOCS
            - DUET_CLOUD_BLOG_POSTS
            - DUET_CLOUD_PODCAST_EPISODES
            - DUET_YOUTUBE_VIDEOS
            - DUET_CLOUD_SKILLS_BOOST
            - DUET_CLOUD_DOCS
            - DUET_CLOUD_GITHUB_CODE_SNIPPETS_GENERATED
            - DUET_CLOUD_GITHUB_CODE_SNIPPETS_HANDWRITTEN
            - DUET_GOOGLESQL_GENERATION
            - DUET_CLOUD_IX_PROMPTS
            - DUET_RAD
            - BARD_ARCADE_GITHUB
            - MOBILE_ASSISTANT_MAGI_FILTERED_0825_373K
            - MOBILE_ASSISTANT_PALM24B_FILTERED_400K
            - GENESIS_NEWS_INSIGHTS
            - CLOUD_SECURITY_PRETRAINING
            - CLOUD_SECURITY_FINETUNING
            - CLOUD_SECURITY_RAG_CISA
            - LABS_AQA_DSCOUT
            - LABS_AQA_TAILWIND
            - LABS_AQA_DELEWARE
            - GEMINI_MULTIMODAL_FT_URL
            - GEMINI_MULTIMODAL_FT_YT
            - GEMINI_MULTIMODAL_FT_SHUTTERSTOCK
            - GEMINI_MULTIMODAL_FT_NONE
            - GEMINI_MULTIMODAL_FT_OTHER
            - GEMINI_MULTIMODAL_FT_INK
            - GEMINI_MULTIMODAL_IT
            - GEMINI_IT_SHUTTERSTOCK
            - GEMINI_IT_M3W
            - GEMINI_IT_HEDGING
            - GEMINI_IT_DSCOUT_FACTUALITY
            - GEMINI_IT_AQUAMUSE
            - GEMINI_IT_SHOTGUN
            - GEMINI_IT_ACI_BENCH
            - GEMINI_IT_SPIDER_FILTERED
            - GEMINI_IT_TAB_SUM_BQ
            - GEMINI_IT_QA_WITH_URL
            - GEMINI_IT_CODE_INSTRUCT
            - GEMINI_IT_MED_PALM
            - GEMINI_IT_TASK_ORIENTED_DIALOG
            - GEMINI_IT_NIMBUS_GROUNDING_TO_PROMPT
            - GEMINI_IT_EITL_GEN
            - GEMINI_IT_HITL_GEN
            - GEMINI_IT_MECH
            - GEMINI_IT_TABLE_GEN
            - GEMINI_IT_NIMBUS_DECIBEL
            - GEMINI_IT_CLOUD_CODE_IF
            - GEMINI_IT_CLOUD_EUR_LEX_JSON
            - GEMINI_IT_CLOUD_OASST
            - GEMINI_IT_CLOUD_SELF_INSTRUCT
            - GEMINI_IT_CLOUD_UCS_AQUAMUSE
            - GEMIT_BRIDGE_SUFFIX_FT
            - GEMINI_GOOSE_PUBLIC
            - GEMINI_GOOSE_SILOED
            - GEMINI_V2_CMS_WIKIPEDIA_LANG_FILTERED_GCC_PII
            - GEMINI_V2_WIKIPEDIA_DIFFS_COMPLIANT
            - GEMINI_V2_ENGLISH_ARTICLES_TOP10B_211123_PII_FILTERED
            - GEMINI_V2_ENGLISH_NONARTICLES_TOP10B_211123_PII_FILTERED
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP10B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP10B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT
            - GEMINI_V2_ENGLISH_ARTICLES_TOP20B_211123_PII_FILTERED
            - GEMINI_V2_ENGLISH_NONARTICLES_TOP20B_211123_PII_FILTERED
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP20B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP20B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT
            - GEMINI_V2_ENGLISH_ARTICLES_TOP100B_211123_PII_FILTERED
            - GEMINI_V2_ENGLISH_NONARTICLES_TOP100B_211123_PII_FILTERED
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP100B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP100B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT
            - GEMINI_V2_ENGLISH_ARTICLES_TOP500B_211123_PII_FILTERED
            - GEMINI_V2_ENGLISH_NONARTICLES_TOP500B_211123_PII_FILTERED
            - GEMINI_V2_QUORA_COMPLIANT
            - GEMINI_V2_FORUMS_V2_COMPLIANT
            - GEMINI_V2_CMS_STACKOVERFLOW_MULTILINGUAL_V2_COMPLIANT
            - GEMINI_V2_SIMPLIFIED_HTML_V2_CORRECT_FORMAT_COMPLIANT
            - GEMINI_V2_GEMINI_DOCJOINS_TOXICITY_TAGGED_FIXED_TAGS_COMPLIANT
            - GEMINI_V2_CODEWEB_V1_COMPLIANT
            - GEMINI_V2_LEETCODE_GCC_PII
            - GEMINI_V2_CODE_CONTESTS_COMPLIANT
            - GEMINI_V2_CMS_GITHUB_MULTI_FILE_FOR_FIM_GEMBAGZ_FIXED_BYTES_LENGTHS
            - GEMINI_V2_GITHUB_EVALED_LANGUAGES_COMPLIANT
            - GEMINI_V2_GITHUB_NON_EVAL_HIGH_PRI_LANGUAGES_COMPLIANT
            - GEMINI_V2_GITHUB_LOW_PRI_LANGUAGES_AND_CONFIGS_COMPLIANT
            - GEMINI_V2_GITHUB_LONG_TAIL_AND_STRUCTURED_DATA_COMPLIANT
            - GEMINI_V2_GITHUB_PYTHON_NOTEBOOKS_COMPLIANT
            - GEMINI_V2_GITHUB_DIFFS_COMPLIANT
            - GEMINI_V2_GITHUB_TECHDOCS_COMPLIANT
            - GEMINI_V2_HIGH_QUALITY_CODE_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_SCIENCE_PDF_68M_HQ_DOCS_DEDUP_COMPLIANT_CLEAN_TEX
            - GEMINI_V2_ARXIV_2023_COMPLIANT
            - GEMINI_V2_FORMAL_COMPLIANT
            - GEMINI_V2_CMS_STACKEXCHANGE_COMPLIANT
            - GEMINI_V2_PUBMED_COMPLIANT
            - GEMINI_V2_WEB_MATH_V3_COMPLIANT
            - GEMINI_V2_SCIENCEWEB_V0_GCC_PII
            - GEMINI_V2_WEB_POLYMATH_V1_COMPLIANT
            - GEMINI_V2_MATH_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_BIOLOGY_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_PHYSICS_V2_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_CHEMISTRY_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_MACHINE_LEARNING_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_QA_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_ECONOMICS_V2_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_MEDICAL_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_CHESS_COMPLIANT
            - GEMINI_V2_YOUTUBE_SCIENCE_V4_FILTERED_COMPLIANT
            - GEMINI_V2_GOALDMINE_XL_GENERATED_PLUS_GT_NO_DM_MATH_COMPLIANT
            - GEMINI_V2_FIRSTTIMES_SCIENCE_PDF_DEDUP_HQ_LENGTH_FILTERED_COMPLIANT
            - GEMINI_V2_PODCASTS_COMPLIANT
            - GEMINI_V2_EN_NONSCIENCE_PDF_DEDUP_46M_DOCS_COMPLIANT
            - GEMINI_V2_NONPUB_COPYRIGHT_BOOKS_V3_70_CONF_082323_LONG_DEDUP_ENONLY_COMPLIANT
            - GEMINI_V2_STEM_COPYRIGHT_BOOKS_V3_111823_LONG_DEDUP_ENONLY_COMPLIANT
            - GEMINI_V2_STEM_BOOKS_318K_TEXT_COMPLIANT
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M3W_WITH_IMAGE_TOKENS_INSERTED_INTERLEAVED_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M3W_WITH_IMAGE_TOKENS_INSERTED_INTERLEAVED_COMPLIANT_PII_FILTERED_SOFT
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_EN_V4_350M_T2I_TEXT_TO_IMAGE_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SHUTTERSTOCK_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_EN_V4_350M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_OCR_I18N_680M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_DOC_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SCREENAI_FULL_HTML_75M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SCREENAI_V1_1_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_OCR_DOC_240M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SHUTTERSTOCK_VIDEO_VIDEO_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M4W_INTERLEAVED_COMPLIANT_PII_FILTERED_SOFT
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CULTURE_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_DETECTION_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_ALT_TEXT_NONEN_500M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SPATIAL_AWARE_PALI_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_TABLE2HTML_3D_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TABLE2MD_V2_EN_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TABLE2MD_V2_NON_EN_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_3D_DOC_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CC3M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_INFOGRAPHICS_LARGE_WEB_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_BIORXIV_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PHOTOMATH_IM2SOL_PROBLEM_AND_SOLUTION_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PLOT2TABLE_V2_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TIKZ_DERENDERING_MERGED_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_TABLE2HTML_2D_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WIKIPEDIA_EQUATIONS_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PHOTOMATH_EQ2LATEX_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_ARXIV_EQUATIONS_V2_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_USM2B_MLPV5_YT_ASR_SUP_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_ASR_1P5M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_ASR_4M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_TTS_SUP_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_TTS_1P5M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_TTS_4M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_PODIOSET_INTERLEAVE_ENUS_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_PODIOSET_INTERLEAVE_I18N_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_SCIENCE_ENUS_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_SCIENCE_I18N_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_1P5M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_HEAD_4M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_CLM_TRANSLATE_DATAV3_WEB_UNWMT_INCR_MIX
            - GEMINI_V2_NTL_NTLV4A_MONOLINGUAL_DEDUP_N5
            - GEMINI_V2_NTL_STT_TRANSLATE_DEDUP_N5
            - GEMINI_V2_NTL_TRANSLIT_BILEX_TRANSLATE_DEDUP_N5
            - GEMINI_V2_NTL_SYN_BT_TRANSLATE_DEDUP_N5
            - GEMINI_V2_NTL_SYN_FT_FIXED_TRANSLATE_DEDUP_N5
            - GEMINI_V2_CANARIES_SHUFFLED_COMPLIANT
            - CLOUD_GEMIT_CLOUD_FACTUALITY_GROUNDING_MAGI
            - CLOUD_GEMIT_MT_DIALGUE_LMSYS
            - CLOUD_GEMIT_MTS_DIALOGUE_V3
            - CLOUD_GEMIT_COMMIT_MSG_GEN_V3
            - CLOUD_GEMIT_CODE_IF_V1
            - CLOUD_GEMIT_CODE_SELF_REPAIR
            - CLOUD_GEMIT_IDENTITY
            - CLOUD_GEMIT_SEARCH_AUGMENTED_RESPONSE_GENERATION
            - CLOUD_GEMIT_AMPS
            - CLOUD_GEMIT_AQUA
            - CLOUD_GEMIT_COMMON_SENSE_REASONING_SCHEMA
            - CLOUD_GEMIT_GSM8K_SCHEMA
          type: string
        displayAttributionMessage:
          description: human-friendly string that contains information from doc_attribution which could be shown by clients
          type: string
        docAttribution:
          $ref: "#/components/schemas/LanguageLabsAidaTrustRecitationProtoDocAttribution"
          description: populated when recitation_action == CITE
        docOccurrences:
          description: number of documents that contained this segment
          format: int32
          type: integer
        endIndex:
          format: int32
          type: integer
        rawText:
          description: The raw text in the given input that is corresponding to the segment. It will be available only when 'return_segment_raw_text' is enabled in the request options.
          type: string
        segmentRecitationAction:
          enum:
            - ACTION_UNSPECIFIED
            - CITE
            - BLOCK
            - NO_ACTION
            - EXEMPT_FOUND_IN_PROMPT
          type: string
        startIndex:
          description: The segment boundary start (inclusive) and end index (exclusive) in the given text. In the streaming RPC, the indexes always start from the beginning of the first text in the entire stream. The indexes are measured in UTF-16 code units.
          format: int32
          type: integer
      type: object
    LanguageLabsAidaTrustRecitationProtoStreamRecitationResult:
      description: The recitation result for one stream input
      properties:
        dynamicSegmentResults:
          description: The recitation result against the given dynamic data source.
          items:
            $ref: "#/components/schemas/LanguageLabsAidaTrustRecitationProtoSegmentResult"
          type: array
        fullyCheckedTextIndex:
          description: Last index of input text fully checked for recitation in the entire streaming context. Would return `-1` if no Input was checked for recitation.
          format: int32
          type: integer
        recitationAction:
          description: The recitation action for one given input. When its segments contain different actions, the overall action will be returned in the precedence of BLOCK > CITE > NO_ACTION.
          enum:
            - ACTION_UNSPECIFIED
            - CITE
            - BLOCK
            - NO_ACTION
            - EXEMPT_FOUND_IN_PROMPT
          type: string
        trainingSegmentResults:
          description: The recitation result against model training data.
          items:
            $ref: "#/components/schemas/LanguageLabsAidaTrustRecitationProtoSegmentResult"
          type: array
      type: object
    LearningGenaiRecitationDocAttribution:
      description: "The proto defines the attribution information for a document using whatever fields are most applicable for that document's datasource. For example, a Wikipedia article's attribution is in the form of its article title, a website is in the form of a URL, and a Github repo is in the form of a repo name. Next id: 30"
      properties:
        amarnaId:
          type: string
        arxivId:
          type: string
        author:
          type: string
        bibkey:
          type: string
        biorxivId:
          description: "ID of the paper in bioarxiv like ddoi.org/{biorxiv_id} eg: https://doi.org/10.1101/343517"
          type: string
        bookTitle:
          type: string
        bookVolumeId:
          description: The Oceanographers full-view books dataset uses a 'volume id' as the unique ID of a book. There is a deterministic function from a volume id to a URL under the books.google.com domain. Marked as 'optional' since a volume ID of zero is potentially possible and we want to distinguish that from the volume ID not being set.
          format: int64
          type: string
        conversationId:
          type: string
        dataset:
          description: The dataset this document comes from.
          enum:
            - DATASET_UNSPECIFIED
            - WIKIPEDIA
            - WEBDOCS
            - WEBDOCS_FINETUNE
            - GITHUB_MIRROR
            - BOOKS_FULL_VIEW
            - BOOKS_PRIVATE
            - GNEWS
            - ULM_DOCJOINS
            - ULM_DOCJOINS_DEDUPED
            - MEENA_FC
            - PODCAST
            - AQUA
            - WEB_ASR
            - BARD_GOLDEN
            - COMMON_SENSE_REASONING
            - MATH
            - MATH_REASONING
            - CLEAN_ARXIV
            - LAMDA_FACTUALITY_E2E_QUERY_GENERATION
            - LAMDA_FACTUALITY_E2E_RESPONSE_GENERATION
            - MASSIVE_FORUM_THREAD_SCORED_BARD
            - MASSIVE_FORUM_THREAD_SCORED_LONG_200
            - MASSIVE_FORUM_THREAD_SCORED_LONG_500
            - DOCUMENT_CHUNKS
            - MEENA_RESEARCH_PHASE_GOLDEN_MARKDOWN
            - MEENA_RESEARCH_PHASE_GOOGLERS
            - MEENA_RESPONSE_SAFETY_HUMAN_GEN
            - MEENA_RESPONSE_SAFETY_SCHEMA_NO_BROADCAST
            - MEENA_RESPONSE_SAFETY_V3_HUMAN_GEN2
            - MEENA_RESPONSE_SAFETY_V3_SCHEMA_NO_BROADCAST
            - LAMDA_FACTUALITY_TRIGGER
            - LAMDA_SAFETY_V2_SCHEMA_NO_BROADCAST
            - LAMDA_SSI_DISCRIMINATIVE
            - ASSISTANT_PERSONALITY_SAFETY
            - PODCAST_FINETUNE_DIALOG
            - WORLD_QUERY_GENERATOR
            - C4_JOINED_DOCJOINS
            - HOL4_THEORIES
            - HOL_LIGHT_THEORIES
            - HOLSTEPS
            - ISABELLE_STEP
            - ISABELLE_THEORIES
            - LEAN_MATHLIB_THEORIES
            - LEAN_STEP
            - MIZAR_THEORIES
            - COQ_STEP
            - COQ_THEORIES
            - AMPS_KHAN
            - AMPS_MATHEMATICA
            - CODEY_CODE
            - CODE_QA_SE
            - CODE_QA_SO
            - CODE_QA_FT_FORMAT
            - CODE_QA_FT_KNOWLEDGE
            - CODE_QA_GITHUB_FILTERED_CODE
            - BARD_PERSONALITY_GOLDEN
            - ULM_DOCJOINS_WITH_URLS_EN
            - ULM_DOCJOINS_WITH_URLS_I18N
            - GOODALL_MTV5_GITHUB
            - GOODALL_MTV5_BOOKS
            - GOODALL_MTV5_C4
            - GOODALL_MTV5_WIKIPEDIA
            - GOODALL_MW_TOP_100B
            - GOODALL_MW_STACK_EXCHANGE
            - GOODALL_MW_TOP_0_10B
            - GOODALL_MW_TOP_10B_20B
            - CODEY_NOTEBOOK_LM_PRETRAINING
            - VERTEX_SAFE_FLAN
            - GITHUB_MIRROR_V1_0_1
            - GITHUB_MIRROR_V2_1_0
            - CMS_WIKIPEDIA_LANG_FILTERED
            - CMS_STACKOVERFLOW_MULTILINGUAL
            - CMS_STACKEXCHANGE
            - PUBMED
            - GEMINI_DOCJOINS_EN_TOP10B_GCC
            - GEMINI_DOCJOINS_EN_TOP10B_TOP20B_GCC
            - GEMINI_DOCJOINS_EN_TOP20B_TOP100B_GCC
            - GEMINI_DOCJOINS_EN_TOP100B_ALL_INDEXED_GCC
            - GEMINI_DOCJOINS_I18N_TOP10B_GCC
            - GEMINI_DOCJOINS_I18N_TOP10B_TOP20B_GCC
            - GEMINI_DOCJOINS_I18N_TOP20B_TOP100B_GCC
            - SIMPLIFIED_HTML_V1_GCC
            - GEMINI_DOCJOINS_TOXICITY_TAGGED_GCC
            - CMS_GITHUB_V4
            - GITHUB_HTML_V4
            - GITHUB_OTHER_V4
            - GITHUB_LONG_TAIL_V4
            - CMS_GITHUB_MULTIFILE_V4
            - GITHUB_DIFFS_WITH_COMMIT_MESSAGE
            - ULM_ARXIV
            - NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_040623_LONG_DEDUP_ENONLY
            - NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_040623_LONG_DEDUP_NONENONLY
            - QUORA
            - PODCASTS_ROBOTSTXT
            - COMBINED_REDDIT
            - CANARIES_SHUFFLED
            - CLM_TRANSLATE_DATAV2_ALLTIERS_GCC_MIX
            - TECHDOCS_DATA_SOURCE
            - SCIENCE_PDF_70M_DOCS_FILTERED
            - GEMINI_V1_CMS_WIKIPEDIA_LANG_FILTERED
            - GEMINI_V1_WIKIPEDIA_DIFFS
            - GEMINI_V1_DOCJOINS_EN_TOP10B_GCC_NODEDUP_050523
            - GEMINI_V1_DOCJOINS_EN_TOP10B_TOP20B_GCC_NODEDUP_050523
            - GEMINI_V1_DOCJOINS_EN_TOP20B_TOP100B_GCC_NODEDUP_050523
            - GEMINI_V1_DOCJOINS_EN_TOP100B_ALL_INDEXED_GCC_NODEDUP_050523
            - GEMINI_V1_DOCJOINS_I18N_TOP10B_GCC_050523
            - GEMINI_V1_DOCJOINS_I18N_TOP10B_TOP20B_GCC_050523
            - GEMINI_V1_DOCJOINS_I18N_TOP20B_TOP100B_GCC_050523
            - GEMINI_V1_SIMPLIFIED_HTML_V2_GCC
            - GEMINI_V1_CMS_STACKOVERFLOW_MULTILINGUAL_V2
            - GEMINI_V1_CMS_STACKEXCHANGE_DECONT
            - GEMINI_V1_QUORA
            - GEMINI_V1_COMBINED_REDDIT
            - GEMINI_V1_DOCJOIN_100B_EN_TOXICITY_TAGGED_GCC_FIXED_TAGS
            - GEMINI_V1_PUBMED
            - GEMINI_V1_WEB_MATH_V2
            - GEMINI_V1_CMS_GITHUB_V7
            - GEMINI_V1_CMS_GITHUB_DECONTAMINATED_V_7
            - GEMINI_V1_GITHUB_DIFF_WITH_COMMIT_MESSAGE_V2
            - GEMINI_V1_GITHUB_HTML_CSS_XML_V4
            - GEMINI_V1_GITHUB_OTHER_V4
            - GEMINI_V1_GITHUB_LONG_TAIL_V4
            - GEMINI_V1_GITHUB_JUPTYER_NOTEBOOKS_SSTABLE
            - GEMINI_V1_ULM_ARXIV_SSTABLE
            - GEMINI_V1_PODCASTS_ROBOTSTXT
            - GEMINI_V1_SCIENCE_PDF_68M_HQ_DOCS_GCC
            - GEMINI_V1_GITHUB_TECHDOCS_V2
            - GEMINI_V1_NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_LONG_DEDUP_EN
            - GEMINI_V1_NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_LONG_DEDUP_NONEN
            - GEMINI_V1_STEM_BOOKS_650K_TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_M3W_V2_FILTERED
            - GEMINI_V1_VQCOCA_1B_MULTIRES_WEBLI_EN_V4_350M_PREFIXED_FILTERED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_SCREENAI_PREFIXED_FILTERED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_CULTURE_PREFIXED_FILTERED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_CC3M_EN_PREFIXED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_CC3M_I18N_PREFIXED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_OCR_EN_PREFIXED_FILTERED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_OCR_NON_EN_PREFIXED_FILTERED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_VTP_4F_VIDEO2TEXT_PREFIX
            - GEMINI_V1_FORMAL_MATH_WITHOUT_HOLSTEPS_AND_MIZAR
            - GEMINI_V1_TRANSLATE_DATAV2_ALLTIERS_GCC_MIX
            - GEMINI_V1_CANARIES_SHUFFLED_DOCJOIN_EN_NONEN_CODE_ARXIV_TRANSLATE
            - DUET_CLOUD_SECURITY_DOCS
            - DUET_GITHUB_CODE_SNIPPETS
            - DUET_GITHUB_FILES
            - DUET_GOBYEXAMPLE
            - DUET_GOLANG_DOCS
            - DUET_CLOUD_DOCS_TROUBLESHOOTING_TABLES
            - DUET_DEVSITE_DOCS
            - DUET_CLOUD_BLOG_POSTS
            - DUET_CLOUD_PODCAST_EPISODES
            - DUET_YOUTUBE_VIDEOS
            - DUET_CLOUD_SKILLS_BOOST
            - DUET_CLOUD_DOCS
            - DUET_CLOUD_GITHUB_CODE_SNIPPETS_GENERATED
            - DUET_CLOUD_GITHUB_CODE_SNIPPETS_HANDWRITTEN
            - DUET_GOOGLESQL_GENERATION
            - DUET_CLOUD_IX_PROMPTS
            - DUET_RAD
            - BARD_ARCADE_GITHUB
            - MOBILE_ASSISTANT_MAGI_FILTERED_0825_373K
            - MOBILE_ASSISTANT_PALM24B_FILTERED_400K
            - GENESIS_NEWS_INSIGHTS
            - LABS_AQA_DSCOUT
            - LABS_AQA_TAILWIND
            - LABS_AQA_DELEWARE
            - GEMINI_MULTIMODAL_FT_URL
            - GEMINI_MULTIMODAL_FT_YT
            - GEMINI_MULTIMODAL_FT_SHUTTERSTOCK
            - GEMINI_MULTIMODAL_FT_NONE
            - GEMINI_MULTIMODAL_FT_OTHER
            - GEMINI_MULTIMODAL_FT_INK
            - GEMINI_MULTIMODAL_IT
            - GEMINI_IT_SHUTTERSTOCK
            - GEMINI_IT_M3W
            - GEMINI_IT_HEDGING
            - GEMINI_IT_DSCOUT_FACTUALITY
            - GEMINI_IT_AQUAMUSE
            - GEMINI_IT_SHOTGUN
            - GEMINI_IT_ACI_BENCH
            - GEMINI_IT_SPIDER_FILTERED
            - GEMINI_IT_TAB_SUM_BQ
            - GEMINI_IT_QA_WITH_URL
            - GEMINI_IT_CODE_INSTRUCT
            - GEMINI_IT_MED_PALM
            - GEMINI_IT_TASK_ORIENTED_DIALOG
            - GEMINI_IT_NIMBUS_GROUNDING_TO_PROMPT
            - GEMINI_IT_EITL_GEN
            - GEMINI_IT_HITL_GEN
            - GEMINI_IT_MECH
            - GEMINI_IT_TABLE_GEN
            - GEMINI_IT_NIMBUS_DECIBEL
            - GEMINI_IT_CLOUD_CODE_IF
            - GEMINI_IT_CLOUD_EUR_LEX_JSON
            - GEMINI_IT_CLOUD_OASST
            - GEMINI_IT_CLOUD_SELF_INSTRUCT
            - GEMINI_IT_CLOUD_UCS_AQUAMUSE
            - GEMIT_BRIDGE_SUFFIX_FT
            - CLOUD_SECURITY_PRETRAINING
            - CLOUD_SECURITY_FINETUNING
            - CLOUD_SECURITY_RAG_CISA
            - GEMINI_GOOSE_PUBLIC
            - GEMINI_GOOSE_SILOED
            - GEMINI_V2_CMS_WIKIPEDIA_LANG_FILTERED_GCC_PII
            - GEMINI_V2_WIKIPEDIA_DIFFS_COMPLIANT
            - GEMINI_V2_ENGLISH_ARTICLES_TOP10B_211123_PII_FILTERED
            - GEMINI_V2_ENGLISH_NONARTICLES_TOP10B_211123_PII_FILTERED
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP10B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP10B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT
            - GEMINI_V2_ENGLISH_ARTICLES_TOP20B_211123_PII_FILTERED
            - GEMINI_V2_ENGLISH_NONARTICLES_TOP20B_211123_PII_FILTERED
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP20B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP20B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT
            - GEMINI_V2_ENGLISH_ARTICLES_TOP100B_211123_PII_FILTERED
            - GEMINI_V2_ENGLISH_NONARTICLES_TOP100B_211123_PII_FILTERED
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP100B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP100B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT
            - GEMINI_V2_ENGLISH_ARTICLES_TOP500B_211123_PII_FILTERED
            - GEMINI_V2_ENGLISH_NONARTICLES_TOP500B_211123_PII_FILTERED
            - GEMINI_V2_QUORA_COMPLIANT
            - GEMINI_V2_FORUMS_V2_COMPLIANT
            - GEMINI_V2_CMS_STACKOVERFLOW_MULTILINGUAL_V2_COMPLIANT
            - GEMINI_V2_SIMPLIFIED_HTML_V2_CORRECT_FORMAT_COMPLIANT
            - GEMINI_V2_GEMINI_DOCJOINS_TOXICITY_TAGGED_FIXED_TAGS_COMPLIANT
            - GEMINI_V2_CODEWEB_V1_COMPLIANT
            - GEMINI_V2_LEETCODE_GCC_PII
            - GEMINI_V2_CODE_CONTESTS_COMPLIANT
            - GEMINI_V2_CMS_GITHUB_MULTI_FILE_FOR_FIM_GEMBAGZ_FIXED_BYTES_LENGTHS
            - GEMINI_V2_GITHUB_EVALED_LANGUAGES_COMPLIANT
            - GEMINI_V2_GITHUB_NON_EVAL_HIGH_PRI_LANGUAGES_COMPLIANT
            - GEMINI_V2_GITHUB_LOW_PRI_LANGUAGES_AND_CONFIGS_COMPLIANT
            - GEMINI_V2_GITHUB_LONG_TAIL_AND_STRUCTURED_DATA_COMPLIANT
            - GEMINI_V2_GITHUB_PYTHON_NOTEBOOKS_COMPLIANT
            - GEMINI_V2_GITHUB_DIFFS_COMPLIANT
            - GEMINI_V2_GITHUB_TECHDOCS_COMPLIANT
            - GEMINI_V2_HIGH_QUALITY_CODE_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_SCIENCE_PDF_68M_HQ_DOCS_DEDUP_COMPLIANT_CLEAN_TEX
            - GEMINI_V2_ARXIV_2023_COMPLIANT
            - GEMINI_V2_FORMAL_COMPLIANT
            - GEMINI_V2_CMS_STACKEXCHANGE_COMPLIANT
            - GEMINI_V2_PUBMED_COMPLIANT
            - GEMINI_V2_WEB_MATH_V3_COMPLIANT
            - GEMINI_V2_SCIENCEWEB_V0_GCC_PII
            - GEMINI_V2_WEB_POLYMATH_V1_COMPLIANT
            - GEMINI_V2_MATH_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_BIOLOGY_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_PHYSICS_V2_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_CHEMISTRY_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_MACHINE_LEARNING_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_QA_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_ECONOMICS_V2_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_MEDICAL_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_CHESS_COMPLIANT
            - GEMINI_V2_YOUTUBE_SCIENCE_V4_FILTERED_COMPLIANT
            - GEMINI_V2_GOALDMINE_XL_GENERATED_PLUS_GT_NO_DM_MATH_COMPLIANT
            - GEMINI_V2_FIRSTTIMES_SCIENCE_PDF_DEDUP_HQ_LENGTH_FILTERED_COMPLIANT
            - GEMINI_V2_PODCASTS_COMPLIANT
            - GEMINI_V2_EN_NONSCIENCE_PDF_DEDUP_46M_DOCS_COMPLIANT
            - GEMINI_V2_NONPUB_COPYRIGHT_BOOKS_V3_70_CONF_082323_LONG_DEDUP_ENONLY_COMPLIANT
            - GEMINI_V2_STEM_COPYRIGHT_BOOKS_V3_111823_LONG_DEDUP_ENONLY_COMPLIANT
            - GEMINI_V2_STEM_BOOKS_318K_TEXT_COMPLIANT
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M3W_WITH_IMAGE_TOKENS_INSERTED_INTERLEAVED_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M3W_WITH_IMAGE_TOKENS_INSERTED_INTERLEAVED_COMPLIANT_PII_FILTERED_SOFT
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_EN_V4_350M_T2I_TEXT_TO_IMAGE_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SHUTTERSTOCK_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_EN_V4_350M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_OCR_I18N_680M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_DOC_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SCREENAI_FULL_HTML_75M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SCREENAI_V1_1_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_OCR_DOC_240M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SHUTTERSTOCK_VIDEO_VIDEO_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M4W_INTERLEAVED_COMPLIANT_PII_FILTERED_SOFT
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CULTURE_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_DETECTION_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_ALT_TEXT_NONEN_500M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SPATIAL_AWARE_PALI_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_TABLE2HTML_3D_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TABLE2MD_V2_EN_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TABLE2MD_V2_NON_EN_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_3D_DOC_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CC3M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_INFOGRAPHICS_LARGE_WEB_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_BIORXIV_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PHOTOMATH_IM2SOL_PROBLEM_AND_SOLUTION_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PLOT2TABLE_V2_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TIKZ_DERENDERING_MERGED_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_TABLE2HTML_2D_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WIKIPEDIA_EQUATIONS_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PHOTOMATH_EQ2LATEX_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_ARXIV_EQUATIONS_V2_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_USM2B_MLPV5_YT_ASR_SUP_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_ASR_1P5M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_ASR_4M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_TTS_SUP_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_TTS_1P5M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_TTS_4M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_PODIOSET_INTERLEAVE_ENUS_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_PODIOSET_INTERLEAVE_I18N_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_SCIENCE_ENUS_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_SCIENCE_I18N_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_1P5M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_HEAD_4M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_CLM_TRANSLATE_DATAV3_WEB_UNWMT_INCR_MIX
            - GEMINI_V2_NTL_NTLV4A_MONOLINGUAL_DEDUP_N5
            - GEMINI_V2_NTL_STT_TRANSLATE_DEDUP_N5
            - GEMINI_V2_NTL_TRANSLIT_BILEX_TRANSLATE_DEDUP_N5
            - GEMINI_V2_NTL_SYN_BT_TRANSLATE_DEDUP_N5
            - GEMINI_V2_NTL_SYN_FT_FIXED_TRANSLATE_DEDUP_N5
            - GEMINI_V2_CANARIES_SHUFFLED_COMPLIANT
            - CLOUD_GEMIT_CLOUD_FACTUALITY_GROUNDING_MAGI
            - CLOUD_GEMIT_MT_DIALGUE_LMSYS
            - CLOUD_GEMIT_MTS_DIALOGUE_V3
            - CLOUD_GEMIT_COMMIT_MSG_GEN_V3
            - CLOUD_GEMIT_CODE_IF_V1
            - CLOUD_GEMIT_CODE_SELF_REPAIR
            - CLOUD_GEMIT_IDENTITY
            - CLOUD_GEMIT_SEARCH_AUGMENTED_RESPONSE_GENERATION
            - CLOUD_GEMIT_AMPS
            - CLOUD_GEMIT_AQUA
            - CLOUD_GEMIT_COMMON_SENSE_REASONING_SCHEMA
            - CLOUD_GEMIT_GSM8K_SCHEMA
          type: string
        filepath:
          type: string
        geminiId:
          type: string
        gnewsArticleTitle:
          type: string
        goodallExampleId:
          type: string
        isOptOut:
          description: Whether the document is opted out.
          type: boolean
        isPrompt:
          description: When true, this attribution came from the user's prompt.
          type: boolean
        lamdaExampleId:
          type: string
        license:
          type: string
        meenaConversationId:
          type: string
        naturalLanguageCode:
          description: Natural (not programming) language of the document. Language code as defined by http://www.unicode.org/reports/tr35/#Identifiers and https://tools.ietf.org/html/bcp47. Currently applicable to full-view books. Use docinfo-util.h to set & read language fields. See go/iii.
          type: string
        noAttribution:
          description: True if this doc has no attribution information available. We use an explicit field for this instead of just implicitly leaving all the DocAttribution fields blank to distinguish a case where a bug/oversight has left the attribution information empty vs when we really have no attribution information available.
          type: boolean
        podcastUtteranceId:
          type: string
        publicationDate:
          $ref: "#/components/schemas/GoogleTypeDate"
        qualityScoreExperimentOnly:
          description: "This field is for opt-out experiment only, MUST never be used during actual production/serving. "
          format: double
          type: number
        repo:
          description: Github repository
          type: string
        url:
          description: URL of a webdoc
          type: string
        volumeId:
          type: string
        wikipediaArticleTitle:
          description: Wikipedia article title. The Wikipedia TFDS dataset includes article titles but not URLs. While a URL is to the best of our knowledge a deterministic function of the title, we store the original title to reflect the information in the original dataset.
          type: string
        youtubeVideoId:
          type: string
      type: object
    LearningGenaiRecitationRecitationResult:
      description: The recitation result for one input
      properties:
        dynamicSegmentResults:
          items:
            $ref: "#/components/schemas/LearningGenaiRecitationSegmentResult"
          type: array
        recitationAction:
          description: The recitation action for one given input. When its segments contain different actions, the overall action will be returned in the precedence of BLOCK > CITE > NO_ACTION. When the given input is not found in any source, the recitation action will be NO_ACTION.
          enum:
            - ACTION_UNSPECIFIED
            - CITE
            - BLOCK
            - NO_ACTION
            - EXEMPT_FOUND_IN_PROMPT
          type: string
        trainingSegmentResults:
          items:
            $ref: "#/components/schemas/LearningGenaiRecitationSegmentResult"
          type: array
      type: object
    LearningGenaiRecitationSegmentResult:
      description: The recitation result for each segment in a given input.
      properties:
        attributionDataset:
          description: The dataset the segment came from.
          enum:
            - DATASET_UNSPECIFIED
            - WIKIPEDIA
            - WEBDOCS
            - WEBDOCS_FINETUNE
            - GITHUB_MIRROR
            - BOOKS_FULL_VIEW
            - BOOKS_PRIVATE
            - GNEWS
            - ULM_DOCJOINS
            - ULM_DOCJOINS_DEDUPED
            - MEENA_FC
            - PODCAST
            - AQUA
            - WEB_ASR
            - BARD_GOLDEN
            - COMMON_SENSE_REASONING
            - MATH
            - MATH_REASONING
            - CLEAN_ARXIV
            - LAMDA_FACTUALITY_E2E_QUERY_GENERATION
            - LAMDA_FACTUALITY_E2E_RESPONSE_GENERATION
            - MASSIVE_FORUM_THREAD_SCORED_BARD
            - MASSIVE_FORUM_THREAD_SCORED_LONG_200
            - MASSIVE_FORUM_THREAD_SCORED_LONG_500
            - DOCUMENT_CHUNKS
            - MEENA_RESEARCH_PHASE_GOLDEN_MARKDOWN
            - MEENA_RESEARCH_PHASE_GOOGLERS
            - MEENA_RESPONSE_SAFETY_HUMAN_GEN
            - MEENA_RESPONSE_SAFETY_SCHEMA_NO_BROADCAST
            - MEENA_RESPONSE_SAFETY_V3_HUMAN_GEN2
            - MEENA_RESPONSE_SAFETY_V3_SCHEMA_NO_BROADCAST
            - LAMDA_FACTUALITY_TRIGGER
            - LAMDA_SAFETY_V2_SCHEMA_NO_BROADCAST
            - LAMDA_SSI_DISCRIMINATIVE
            - ASSISTANT_PERSONALITY_SAFETY
            - PODCAST_FINETUNE_DIALOG
            - WORLD_QUERY_GENERATOR
            - C4_JOINED_DOCJOINS
            - HOL4_THEORIES
            - HOL_LIGHT_THEORIES
            - HOLSTEPS
            - ISABELLE_STEP
            - ISABELLE_THEORIES
            - LEAN_MATHLIB_THEORIES
            - LEAN_STEP
            - MIZAR_THEORIES
            - COQ_STEP
            - COQ_THEORIES
            - AMPS_KHAN
            - AMPS_MATHEMATICA
            - CODEY_CODE
            - CODE_QA_SE
            - CODE_QA_SO
            - CODE_QA_FT_FORMAT
            - CODE_QA_FT_KNOWLEDGE
            - CODE_QA_GITHUB_FILTERED_CODE
            - BARD_PERSONALITY_GOLDEN
            - ULM_DOCJOINS_WITH_URLS_EN
            - ULM_DOCJOINS_WITH_URLS_I18N
            - GOODALL_MTV5_GITHUB
            - GOODALL_MTV5_BOOKS
            - GOODALL_MTV5_C4
            - GOODALL_MTV5_WIKIPEDIA
            - GOODALL_MW_TOP_100B
            - GOODALL_MW_STACK_EXCHANGE
            - GOODALL_MW_TOP_0_10B
            - GOODALL_MW_TOP_10B_20B
            - CODEY_NOTEBOOK_LM_PRETRAINING
            - VERTEX_SAFE_FLAN
            - GITHUB_MIRROR_V1_0_1
            - GITHUB_MIRROR_V2_1_0
            - CMS_WIKIPEDIA_LANG_FILTERED
            - CMS_STACKOVERFLOW_MULTILINGUAL
            - CMS_STACKEXCHANGE
            - PUBMED
            - GEMINI_DOCJOINS_EN_TOP10B_GCC
            - GEMINI_DOCJOINS_EN_TOP10B_TOP20B_GCC
            - GEMINI_DOCJOINS_EN_TOP20B_TOP100B_GCC
            - GEMINI_DOCJOINS_EN_TOP100B_ALL_INDEXED_GCC
            - GEMINI_DOCJOINS_I18N_TOP10B_GCC
            - GEMINI_DOCJOINS_I18N_TOP10B_TOP20B_GCC
            - GEMINI_DOCJOINS_I18N_TOP20B_TOP100B_GCC
            - SIMPLIFIED_HTML_V1_GCC
            - GEMINI_DOCJOINS_TOXICITY_TAGGED_GCC
            - CMS_GITHUB_V4
            - GITHUB_HTML_V4
            - GITHUB_OTHER_V4
            - GITHUB_LONG_TAIL_V4
            - CMS_GITHUB_MULTIFILE_V4
            - GITHUB_DIFFS_WITH_COMMIT_MESSAGE
            - ULM_ARXIV
            - NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_040623_LONG_DEDUP_ENONLY
            - NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_040623_LONG_DEDUP_NONENONLY
            - QUORA
            - PODCASTS_ROBOTSTXT
            - COMBINED_REDDIT
            - CANARIES_SHUFFLED
            - CLM_TRANSLATE_DATAV2_ALLTIERS_GCC_MIX
            - TECHDOCS_DATA_SOURCE
            - SCIENCE_PDF_70M_DOCS_FILTERED
            - GEMINI_V1_CMS_WIKIPEDIA_LANG_FILTERED
            - GEMINI_V1_WIKIPEDIA_DIFFS
            - GEMINI_V1_DOCJOINS_EN_TOP10B_GCC_NODEDUP_050523
            - GEMINI_V1_DOCJOINS_EN_TOP10B_TOP20B_GCC_NODEDUP_050523
            - GEMINI_V1_DOCJOINS_EN_TOP20B_TOP100B_GCC_NODEDUP_050523
            - GEMINI_V1_DOCJOINS_EN_TOP100B_ALL_INDEXED_GCC_NODEDUP_050523
            - GEMINI_V1_DOCJOINS_I18N_TOP10B_GCC_050523
            - GEMINI_V1_DOCJOINS_I18N_TOP10B_TOP20B_GCC_050523
            - GEMINI_V1_DOCJOINS_I18N_TOP20B_TOP100B_GCC_050523
            - GEMINI_V1_SIMPLIFIED_HTML_V2_GCC
            - GEMINI_V1_CMS_STACKOVERFLOW_MULTILINGUAL_V2
            - GEMINI_V1_CMS_STACKEXCHANGE_DECONT
            - GEMINI_V1_QUORA
            - GEMINI_V1_COMBINED_REDDIT
            - GEMINI_V1_DOCJOIN_100B_EN_TOXICITY_TAGGED_GCC_FIXED_TAGS
            - GEMINI_V1_PUBMED
            - GEMINI_V1_WEB_MATH_V2
            - GEMINI_V1_CMS_GITHUB_V7
            - GEMINI_V1_CMS_GITHUB_DECONTAMINATED_V_7
            - GEMINI_V1_GITHUB_DIFF_WITH_COMMIT_MESSAGE_V2
            - GEMINI_V1_GITHUB_HTML_CSS_XML_V4
            - GEMINI_V1_GITHUB_OTHER_V4
            - GEMINI_V1_GITHUB_LONG_TAIL_V4
            - GEMINI_V1_GITHUB_JUPTYER_NOTEBOOKS_SSTABLE
            - GEMINI_V1_ULM_ARXIV_SSTABLE
            - GEMINI_V1_PODCASTS_ROBOTSTXT
            - GEMINI_V1_SCIENCE_PDF_68M_HQ_DOCS_GCC
            - GEMINI_V1_GITHUB_TECHDOCS_V2
            - GEMINI_V1_NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_LONG_DEDUP_EN
            - GEMINI_V1_NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_LONG_DEDUP_NONEN
            - GEMINI_V1_STEM_BOOKS_650K_TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_M3W_V2_FILTERED
            - GEMINI_V1_VQCOCA_1B_MULTIRES_WEBLI_EN_V4_350M_PREFIXED_FILTERED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_SCREENAI_PREFIXED_FILTERED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_CULTURE_PREFIXED_FILTERED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_CC3M_EN_PREFIXED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_CC3M_I18N_PREFIXED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_OCR_EN_PREFIXED_FILTERED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_OCR_NON_EN_PREFIXED_FILTERED_IMAGE2TEXT
            - GEMINI_V1_VQCOCA_1B_MULTIRES_VTP_4F_VIDEO2TEXT_PREFIX
            - GEMINI_V1_FORMAL_MATH_WITHOUT_HOLSTEPS_AND_MIZAR
            - GEMINI_V1_TRANSLATE_DATAV2_ALLTIERS_GCC_MIX
            - GEMINI_V1_CANARIES_SHUFFLED_DOCJOIN_EN_NONEN_CODE_ARXIV_TRANSLATE
            - DUET_CLOUD_SECURITY_DOCS
            - DUET_GITHUB_CODE_SNIPPETS
            - DUET_GITHUB_FILES
            - DUET_GOBYEXAMPLE
            - DUET_GOLANG_DOCS
            - DUET_CLOUD_DOCS_TROUBLESHOOTING_TABLES
            - DUET_DEVSITE_DOCS
            - DUET_CLOUD_BLOG_POSTS
            - DUET_CLOUD_PODCAST_EPISODES
            - DUET_YOUTUBE_VIDEOS
            - DUET_CLOUD_SKILLS_BOOST
            - DUET_CLOUD_DOCS
            - DUET_CLOUD_GITHUB_CODE_SNIPPETS_GENERATED
            - DUET_CLOUD_GITHUB_CODE_SNIPPETS_HANDWRITTEN
            - DUET_GOOGLESQL_GENERATION
            - DUET_CLOUD_IX_PROMPTS
            - DUET_RAD
            - BARD_ARCADE_GITHUB
            - MOBILE_ASSISTANT_MAGI_FILTERED_0825_373K
            - MOBILE_ASSISTANT_PALM24B_FILTERED_400K
            - GENESIS_NEWS_INSIGHTS
            - LABS_AQA_DSCOUT
            - LABS_AQA_TAILWIND
            - LABS_AQA_DELEWARE
            - GEMINI_MULTIMODAL_FT_URL
            - GEMINI_MULTIMODAL_FT_YT
            - GEMINI_MULTIMODAL_FT_SHUTTERSTOCK
            - GEMINI_MULTIMODAL_FT_NONE
            - GEMINI_MULTIMODAL_FT_OTHER
            - GEMINI_MULTIMODAL_FT_INK
            - GEMINI_MULTIMODAL_IT
            - GEMINI_IT_SHUTTERSTOCK
            - GEMINI_IT_M3W
            - GEMINI_IT_HEDGING
            - GEMINI_IT_DSCOUT_FACTUALITY
            - GEMINI_IT_AQUAMUSE
            - GEMINI_IT_SHOTGUN
            - GEMINI_IT_ACI_BENCH
            - GEMINI_IT_SPIDER_FILTERED
            - GEMINI_IT_TAB_SUM_BQ
            - GEMINI_IT_QA_WITH_URL
            - GEMINI_IT_CODE_INSTRUCT
            - GEMINI_IT_MED_PALM
            - GEMINI_IT_TASK_ORIENTED_DIALOG
            - GEMINI_IT_NIMBUS_GROUNDING_TO_PROMPT
            - GEMINI_IT_EITL_GEN
            - GEMINI_IT_HITL_GEN
            - GEMINI_IT_MECH
            - GEMINI_IT_TABLE_GEN
            - GEMINI_IT_NIMBUS_DECIBEL
            - GEMINI_IT_CLOUD_CODE_IF
            - GEMINI_IT_CLOUD_EUR_LEX_JSON
            - GEMINI_IT_CLOUD_OASST
            - GEMINI_IT_CLOUD_SELF_INSTRUCT
            - GEMINI_IT_CLOUD_UCS_AQUAMUSE
            - GEMIT_BRIDGE_SUFFIX_FT
            - CLOUD_SECURITY_PRETRAINING
            - CLOUD_SECURITY_FINETUNING
            - CLOUD_SECURITY_RAG_CISA
            - GEMINI_GOOSE_PUBLIC
            - GEMINI_GOOSE_SILOED
            - GEMINI_V2_CMS_WIKIPEDIA_LANG_FILTERED_GCC_PII
            - GEMINI_V2_WIKIPEDIA_DIFFS_COMPLIANT
            - GEMINI_V2_ENGLISH_ARTICLES_TOP10B_211123_PII_FILTERED
            - GEMINI_V2_ENGLISH_NONARTICLES_TOP10B_211123_PII_FILTERED
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP10B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP10B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT
            - GEMINI_V2_ENGLISH_ARTICLES_TOP20B_211123_PII_FILTERED
            - GEMINI_V2_ENGLISH_NONARTICLES_TOP20B_211123_PII_FILTERED
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP20B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP20B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT
            - GEMINI_V2_ENGLISH_ARTICLES_TOP100B_211123_PII_FILTERED
            - GEMINI_V2_ENGLISH_NONARTICLES_TOP100B_211123_PII_FILTERED
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP100B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT
            - GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP100B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT
            - GEMINI_V2_ENGLISH_ARTICLES_TOP500B_211123_PII_FILTERED
            - GEMINI_V2_ENGLISH_NONARTICLES_TOP500B_211123_PII_FILTERED
            - GEMINI_V2_QUORA_COMPLIANT
            - GEMINI_V2_FORUMS_V2_COMPLIANT
            - GEMINI_V2_CMS_STACKOVERFLOW_MULTILINGUAL_V2_COMPLIANT
            - GEMINI_V2_SIMPLIFIED_HTML_V2_CORRECT_FORMAT_COMPLIANT
            - GEMINI_V2_GEMINI_DOCJOINS_TOXICITY_TAGGED_FIXED_TAGS_COMPLIANT
            - GEMINI_V2_CODEWEB_V1_COMPLIANT
            - GEMINI_V2_LEETCODE_GCC_PII
            - GEMINI_V2_CODE_CONTESTS_COMPLIANT
            - GEMINI_V2_CMS_GITHUB_MULTI_FILE_FOR_FIM_GEMBAGZ_FIXED_BYTES_LENGTHS
            - GEMINI_V2_GITHUB_EVALED_LANGUAGES_COMPLIANT
            - GEMINI_V2_GITHUB_NON_EVAL_HIGH_PRI_LANGUAGES_COMPLIANT
            - GEMINI_V2_GITHUB_LOW_PRI_LANGUAGES_AND_CONFIGS_COMPLIANT
            - GEMINI_V2_GITHUB_LONG_TAIL_AND_STRUCTURED_DATA_COMPLIANT
            - GEMINI_V2_GITHUB_PYTHON_NOTEBOOKS_COMPLIANT
            - GEMINI_V2_GITHUB_DIFFS_COMPLIANT
            - GEMINI_V2_GITHUB_TECHDOCS_COMPLIANT
            - GEMINI_V2_HIGH_QUALITY_CODE_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_SCIENCE_PDF_68M_HQ_DOCS_DEDUP_COMPLIANT_CLEAN_TEX
            - GEMINI_V2_ARXIV_2023_COMPLIANT
            - GEMINI_V2_FORMAL_COMPLIANT
            - GEMINI_V2_CMS_STACKEXCHANGE_COMPLIANT
            - GEMINI_V2_PUBMED_COMPLIANT
            - GEMINI_V2_WEB_MATH_V3_COMPLIANT
            - GEMINI_V2_SCIENCEWEB_V0_GCC_PII
            - GEMINI_V2_WEB_POLYMATH_V1_COMPLIANT
            - GEMINI_V2_MATH_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_BIOLOGY_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_PHYSICS_V2_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_CHEMISTRY_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_MACHINE_LEARNING_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_QA_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_ECONOMICS_V2_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_MEDICAL_TARGETED_DATA_COMPLIANT2
            - GEMINI_V2_CHESS_COMPLIANT
            - GEMINI_V2_YOUTUBE_SCIENCE_V4_FILTERED_COMPLIANT
            - GEMINI_V2_GOALDMINE_XL_GENERATED_PLUS_GT_NO_DM_MATH_COMPLIANT
            - GEMINI_V2_FIRSTTIMES_SCIENCE_PDF_DEDUP_HQ_LENGTH_FILTERED_COMPLIANT
            - GEMINI_V2_PODCASTS_COMPLIANT
            - GEMINI_V2_EN_NONSCIENCE_PDF_DEDUP_46M_DOCS_COMPLIANT
            - GEMINI_V2_NONPUB_COPYRIGHT_BOOKS_V3_70_CONF_082323_LONG_DEDUP_ENONLY_COMPLIANT
            - GEMINI_V2_STEM_COPYRIGHT_BOOKS_V3_111823_LONG_DEDUP_ENONLY_COMPLIANT
            - GEMINI_V2_STEM_BOOKS_318K_TEXT_COMPLIANT
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M3W_WITH_IMAGE_TOKENS_INSERTED_INTERLEAVED_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M3W_WITH_IMAGE_TOKENS_INSERTED_INTERLEAVED_COMPLIANT_PII_FILTERED_SOFT
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_EN_V4_350M_T2I_TEXT_TO_IMAGE_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SHUTTERSTOCK_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_EN_V4_350M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_OCR_I18N_680M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_DOC_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SCREENAI_FULL_HTML_75M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SCREENAI_V1_1_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_OCR_DOC_240M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SHUTTERSTOCK_VIDEO_VIDEO_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M4W_INTERLEAVED_COMPLIANT_PII_FILTERED_SOFT
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CULTURE_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_DETECTION_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_ALT_TEXT_NONEN_500M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SPATIAL_AWARE_PALI_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_TABLE2HTML_3D_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TABLE2MD_V2_EN_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TABLE2MD_V2_NON_EN_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_3D_DOC_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CC3M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_INFOGRAPHICS_LARGE_WEB_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_BIORXIV_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PHOTOMATH_IM2SOL_PROBLEM_AND_SOLUTION_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PLOT2TABLE_V2_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TIKZ_DERENDERING_MERGED_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_TABLE2HTML_2D_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WIKIPEDIA_EQUATIONS_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PHOTOMATH_EQ2LATEX_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_CACHED_VQCOCA_MMFT_17T_ARXIV_EQUATIONS_V2_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED
            - GEMINI_V2_USM2B_MLPV5_YT_ASR_SUP_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_ASR_1P5M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_ASR_4M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_TTS_SUP_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_TTS_1P5M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_TTS_4M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_PODIOSET_INTERLEAVE_ENUS_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_PODIOSET_INTERLEAVE_I18N_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_SCIENCE_ENUS_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_SCIENCE_I18N_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_1P5M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_HEAD_4M_GEMBAGZ_V2_COMPLIANT
            - GEMINI_V2_CLM_TRANSLATE_DATAV3_WEB_UNWMT_INCR_MIX
            - GEMINI_V2_NTL_NTLV4A_MONOLINGUAL_DEDUP_N5
            - GEMINI_V2_NTL_STT_TRANSLATE_DEDUP_N5
            - GEMINI_V2_NTL_TRANSLIT_BILEX_TRANSLATE_DEDUP_N5
            - GEMINI_V2_NTL_SYN_BT_TRANSLATE_DEDUP_N5
            - GEMINI_V2_NTL_SYN_FT_FIXED_TRANSLATE_DEDUP_N5
            - GEMINI_V2_CANARIES_SHUFFLED_COMPLIANT
            - CLOUD_GEMIT_CLOUD_FACTUALITY_GROUNDING_MAGI
            - CLOUD_GEMIT_MT_DIALGUE_LMSYS
            - CLOUD_GEMIT_MTS_DIALOGUE_V3
            - CLOUD_GEMIT_COMMIT_MSG_GEN_V3
            - CLOUD_GEMIT_CODE_IF_V1
            - CLOUD_GEMIT_CODE_SELF_REPAIR
            - CLOUD_GEMIT_IDENTITY
            - CLOUD_GEMIT_SEARCH_AUGMENTED_RESPONSE_GENERATION
            - CLOUD_GEMIT_AMPS
            - CLOUD_GEMIT_AQUA
            - CLOUD_GEMIT_COMMON_SENSE_REASONING_SCHEMA
            - CLOUD_GEMIT_GSM8K_SCHEMA
          type: string
        displayAttributionMessage:
          description: human-friendly string that contains information from doc_attribution which could be shown by clients
          type: string
        docAttribution:
          $ref: "#/components/schemas/LearningGenaiRecitationDocAttribution"
          description: populated when recitation_action == CITE
        docOccurrences:
          description: number of documents that contained this segment
          format: int32
          type: integer
        endIndex:
          format: int32
          type: integer
        rawText:
          description: The raw text in the given input that is corresponding to the segment. It will be available only when 'return_segment_raw_text' is enabled in the request options.
          type: string
        segmentRecitationAction:
          enum:
            - ACTION_UNSPECIFIED
            - CITE
            - BLOCK
            - NO_ACTION
            - EXEMPT_FOUND_IN_PROMPT
          type: string
        startIndex:
          description: The segment boundary start (inclusive) and end index (exclusive) in the given text. In the streaming RPC, the indexes always start from the beginning of the first text in the entire stream. The indexes are measured in UTF-16 code units.
          format: int32
          type: integer
      type: object
    LearningGenaiRootCalculationType:
      description: The type used for final weights calculation.
      properties:
        scoreType:
          enum:
            - TYPE_UNKNOWN
            - TYPE_SAFE
            - TYPE_POLICY
            - TYPE_GENERATION
          type: string
        weights:
          format: double
          type: number
      type: object
    LearningGenaiRootClassifierOutput:
      properties:
        ruleOutput:
          $ref: "#/components/schemas/LearningGenaiRootRuleOutput"
          deprecated: true
          description: If set, this is the output of the first matching rule.
        ruleOutputs:
          description: outputs of all matching rule.
          items:
            $ref: "#/components/schemas/LearningGenaiRootRuleOutput"
          type: array
        state:
          $ref: "#/components/schemas/LearningGenaiRootClassifierState"
          description: The results of data_providers and metrics.
      type: object
    LearningGenaiRootClassifierOutputSummary:
      properties:
        metrics:
          items:
            $ref: "#/components/schemas/LearningGenaiRootMetricOutput"
          type: array
        ruleOutput:
          $ref: "#/components/schemas/LearningGenaiRootRuleOutput"
          deprecated: true
          description: Output of the first matching rule.
        ruleOutputs:
          description: outputs of all matching rule.
          items:
            $ref: "#/components/schemas/LearningGenaiRootRuleOutput"
          type: array
      type: object
    LearningGenaiRootClassifierState:
      description: "DataProviderOutput and MetricOutput can be saved between calls to the Classifier framework. For instance, you can run the query classifier, get outputs from those metrics, then use them in a result classifier as well. Example rule based on this idea: and_rules { rule { metric_name: 'query_safesearch_v2' ... } rule { metric_name: 'response_safesearch_v2' ... } }"
      properties:
        dataProviderOutput:
          items:
            $ref: "#/components/schemas/LearningGenaiRootDataProviderOutput"
          type: array
        metricOutput:
          items:
            $ref: "#/components/schemas/LearningGenaiRootMetricOutput"
          type: array
      type: object
    LearningGenaiRootCodeyChatMetadata:
      description: Stores all metadata relating to AIDA DoConversation.
      properties:
        codeLanguage:
          description: Indicates the programming language of the code if the message is a code chunk.
          enum:
            - UNSPECIFIED
            - ALL
            - TEXT
            - CPP
            - PYTHON
            - KOTLIN
            - JAVA
            - JAVASCRIPT
            - GO
            - R
            - JUPYTER_NOTEBOOK
            - TYPESCRIPT
            - HTML
            - SQL
            - BASH
            - C
            - DART
            - GRADLE
            - JAVADOC
            - JSON
            - MAKEFILE
            - MARKDOWN
            - PROTO
            - XML
            - YAML
          type: string
      type: object
    LearningGenaiRootCodeyCheckpoint:
      description: Describes a sample at a checkpoint for post-processing.
      properties:
        codeyTruncatorMetadata:
          $ref: "#/components/schemas/LearningGenaiRootCodeyTruncatorMetadata"
          description: Metadata that describes what was truncated at this checkpoint.
        currentSample:
          description: Current state of the sample after truncator.
          type: string
        postInferenceStep:
          description: Postprocessor run that yielded this checkpoint.
          enum:
            - STEP_POST_PROCESSING_STEP_UNSPECIFIED
            - STEP_ORIGINAL_MODEL_OUTPUT
            - STEP_MODEL_OUTPUT_DEDUPLICATION
            - STEP_STOP_SEQUENCE_TRUNCATION
            - STEP_HEURISTIC_TRUNCATION
            - STEP_WALD_TRUNCATION
            - STEP_WHITESPACE_TRUNCATION
            - STEP_FINAL_DEDUPLICATION
            - STEP_TOXICITY_CHECK
            - STEP_RECITATION_CHECK
            - STEP_RETURNED
            - STEP_WALKBACK_CORRECTION
            - STEP_SCORE_THRESHOLDING
            - STEP_MODEL_CONFIG_STOP_SEQUENCE_TRUNCATION
            - STEP_CUSTOM_STOP_SEQUENCE_TRUNCATION
            - STEP_EXPECTED_SAMPLE_SIZE
          type: string
          x-enumDeprecated:
            - false
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
      type: object
    LearningGenaiRootCodeyCompletionMetadata:
      description: Stores all metadata relating to Completion.
      properties:
        checkpoints:
          items:
            $ref: "#/components/schemas/LearningGenaiRootCodeyCheckpoint"
          type: array
      type: object
    LearningGenaiRootCodeyOutput:
      description: Top-level wrapper used to store all things codey-related.
      properties:
        codeyChatMetadata:
          $ref: "#/components/schemas/LearningGenaiRootCodeyChatMetadata"
        codeyCompletionMetadata:
          $ref: "#/components/schemas/LearningGenaiRootCodeyCompletionMetadata"
      type: object
    LearningGenaiRootCodeyTruncatorMetadata:
      description: Metadata describing what was truncated at each checkpoint.
      properties:
        cutoffIndex:
          description: Index of the current sample that trims off truncated text.
          format: int32
          type: integer
        truncatedText:
          description: Text that was truncated at a specific checkpoint.
          type: string
      type: object
    LearningGenaiRootDataProviderOutput:
      properties:
        name:
          type: string
        status:
          $ref: "#/components/schemas/UtilStatusProto"
          description: If set, this DataProvider failed and this is the error message.
      type: object
    LearningGenaiRootFilterMetadata:
      properties:
        confidence:
          description: Filter confidence.
          enum:
            - FILTER_CONFIDENCE_UNKNOWN
            - FILTER_CONFIDENCE_VERY_LOW
            - FILTER_CONFIDENCE_LOW
            - FILTER_CONFIDENCE_MEDIUM
            - FILTER_CONFIDENCE_HIGH
            - FILTER_CONFIDENCE_VERY_HIGH
          type: string
        debugInfo:
          $ref: "#/components/schemas/LearningGenaiRootFilterMetadataFilterDebugInfo"
          description: Debug info for the message.
        fallback:
          description: A fallback message chosen by the applied filter.
          type: string
        info:
          description: Additional info for the filter.
          type: string
        name:
          description: Name of the filter that triggered.
          type: string
        reason:
          description: Filter reason.
          enum:
            - FILTER_REASON_UNKNOWN
            - FILTER_REASON_NOT_FILTERED
            - FILTER_REASON_SENSITIVE
            - FILTER_REASON_RECITATION
            - FILTER_REASON_LANGUAGE
            - FILTER_REASON_TAKEDOWN
            - FILTER_REASON_CLASSIFIER
            - FILTER_REASON_EMPTY_RESPONSE
            - FILTER_REASON_SIMILARITY_TAKEDOWN
            - FILTER_REASON_UNSAFE
            - FILTER_REASON_PAIRWISE_CLASSIFIER
            - FILTER_REASON_CODEY
            - FILTER_REASON_URL
            - FILTER_REASON_EMAIL
            - FILTER_REASON_SAFETY_CAT
            - FILTER_REASON_REQUEST_RESPONSE_TAKEDOWN
            - FILTER_REASON_RAI_PQC
            - FILTER_REASON_ATLAS
            - FILTER_REASON_RAI_CSAM
            - FILTER_REASON_RAI_FRINGE
            - FILTER_REASON_RAI_SPII
            - FILTER_REASON_RAI_IMAGE_VIOLENCE
            - FILTER_REASON_RAI_IMAGE_PORN
            - FILTER_REASON_RAI_IMAGE_CSAM
            - FILTER_REASON_RAI_IMAGE_PEDO
            - FILTER_REASON_RAI_VIDEO_FRAME_VIOLENCE
            - FILTER_REASON_RAI_VIDEO_FRAME_PORN
            - FILTER_REASON_RAI_VIDEO_FRAME_CSAM
            - FILTER_REASON_RAI_VIDEO_FRAME_PEDO
            - FILTER_REASON_RAI_CONTEXTUAL_DANGEROUS
            - FILTER_REASON_RAI_GRAIL_TEXT
            - FILTER_REASON_RAI_GRAIL_IMAGE
            - FILTER_REASON_RAI_SAFETYCAT
            - FILTER_REASON_TOXICITY
            - FILTER_REASON_ATLAS_PRICING
            - FILTER_REASON_ATLAS_BILLING
            - FILTER_REASON_ATLAS_NON_ENGLISH_QUESTION
            - FILTER_REASON_ATLAS_NOT_RELATED_TO_GCP
            - FILTER_REASON_ATLAS_AWS_AZURE_RELATED
          type: string
        text:
          description: The input query or generated response that is getting filtered.
          type: string
      type: object
    LearningGenaiRootFilterMetadataFilterDebugInfo:
      properties:
        classifierOutput:
          $ref: "#/components/schemas/LearningGenaiRootClassifierOutput"
        defaultMetadata:
          type: string
        languageFilterResult:
          $ref: "#/components/schemas/LearningGenaiRootLanguageFilterResult"
        raiOutput:
          $ref: "#/components/schemas/LearningGenaiRootRAIOutput"
          description: Safety filter output information for LLM Root RAI harm check.
        raiResult:
          $ref: "#/components/schemas/CloudAiNlLlmProtoServiceRaiResult"
        raiSignal:
          $ref: "#/components/schemas/CloudAiNlLlmProtoServiceRaiSignal"
          deprecated: true
        streamRecitationResult:
          $ref: "#/components/schemas/LanguageLabsAidaTrustRecitationProtoStreamRecitationResult"
          deprecated: true
        takedownResult:
          $ref: "#/components/schemas/LearningGenaiRootTakedownResult"
        toxicityResult:
          $ref: "#/components/schemas/LearningGenaiRootToxicityResult"
      type: object
    LearningGenaiRootGroundingMetadata:
      properties:
        citations:
          items:
            $ref: "#/components/schemas/LearningGenaiRootGroundingMetadataCitation"
          type: array
        groundingCancelled:
          description: True if grounding is cancelled, for example, no facts being retrieved.
          type: boolean
        searchQueries:
          items:
            type: string
          type: array
      type: object
    LearningGenaiRootGroundingMetadataCitation:
      properties:
        endIndex:
          description: Index in the prediction output where the citation ends (exclusive). Must be > start_index and < len(output).
          format: int32
          type: integer
        factIndex:
          description: Index of the fact supporting this claim. Should be within the range of the `world_facts` in the GenerateResponse.
          format: int32
          type: integer
        score:
          description: Confidence score of this entailment. Value is [0,1] with 1 is the most confidence.
          format: double
          type: number
        startIndex:
          description: Index in the prediction output where the citation starts (inclusive). Must be >= 0 and < end_index.
          format: int32
          type: integer
      type: object
    LearningGenaiRootHarm:
      properties:
        contextualDangerous:
          description: Please do not use, this is still under development.
          type: boolean
        csam:
          type: boolean
        fringe:
          type: boolean
        grailImageHarmType:
          $ref: "#/components/schemas/LearningGenaiRootHarmGrailImageHarmType"
        grailTextHarmType:
          $ref: "#/components/schemas/LearningGenaiRootHarmGrailTextHarmType"
        imageCsam:
          type: boolean
        imagePedo:
          type: boolean
        imagePorn:
          description: Image signals
          type: boolean
        imageViolence:
          type: boolean
        pqc:
          type: boolean
        safetycat:
          $ref: "#/components/schemas/LearningGenaiRootHarmSafetyCatCategories"
        spii:
          $ref: "#/components/schemas/LearningGenaiRootHarmSpiiFilter"
          description: Spii Filter uses buckets http://google3/google/privacy/dlp/v2/storage.proto;l=77;rcl=584719820 to classify the input. LMRoot converts the bucket into double score. For example the score for "POSSIBLE" is 3 / 5 = 0.6 .
        threshold:
          format: double
          type: number
        videoFrameCsam:
          type: boolean
        videoFramePedo:
          type: boolean
        videoFramePorn:
          description: Video frame signals
          type: boolean
        videoFrameViolence:
          type: boolean
      type: object
    LearningGenaiRootHarmGrailImageHarmType:
      description: Harm type for images
      properties:
        imageHarmType:
          items:
            enum:
              - IMAGE_HARM_TYPE_UNSPECIFIED
              - IMAGE_HARM_TYPE_PORN
              - IMAGE_HARM_TYPE_VIOLENCE
              - IMAGE_HARM_TYPE_CSAI
              - IMAGE_HARM_TYPE_PEDO
              - IMAGE_HARM_TYPE_MINORS
              - IMAGE_HARM_TYPE_DANGEROUS
              - IMAGE_HARM_TYPE_MEDICAL
              - IMAGE_HARM_TYPE_RACY
              - IMAGE_HARM_TYPE_OBSCENE
              - IMAGE_HARM_TYPE_MINOR_PRESENCE
              - IMAGE_HARM_TYPE_GENERATIVE_MINOR_PRESENCE
              - IMAGE_HARM_TYPE_GENERATIVE_REALISTIC_VISIBLE_FACE
            type: string
          type: array
      type: object
    LearningGenaiRootHarmGrailTextHarmType:
      description: Harm type for text
      properties:
        harmType:
          items:
            enum:
              - HARM_TYPE_UNSPECIFIED
              - HARM_TYPE_HATE
              - HARM_TYPE_TOXICITY
              - HARM_TYPE_VIOLENCE
              - HARM_TYPE_CSAI
              - HARM_TYPE_SEXUAL
              - HARM_TYPE_FRINGE
              - HARM_TYPE_POLITICAL
              - HARM_TYPE_MEMORIZATION
              - HARM_TYPE_SPII
              - HARM_TYPE_NEW_DANGEROUS
              - HARM_TYPE_MEDICAL
              - HARM_TYPE_HARASSMENT
            type: string
          type: array
      type: object
    LearningGenaiRootHarmSafetyCatCategories:
      properties:
        categories:
          items:
            enum:
              - SAFETYCAT_CATEGORY_UNSPECIFIED
              - TOXICITY
              - OBSCENE
              - SEXUAL
              - INSULT
              - IDENTITY_HATE
              - DEATH_HARM_TRAGEDY
              - VIOLENCE_ABUSE
              - FIREARMS_WEAPONS
              - PUBLIC_SAFETY
              - HEALTH
              - RELIGION_BELIEF
              - DRUGS
              - WAR_CONFLICT
              - POLITICS
              - FINANCE
              - LEGAL
              - DANGEROUS
              - DANGEROUS_SEVERITY
              - HARASSMENT_SEVERITY
              - HATE_SEVERITY
              - SEXUAL_SEVERITY
            type: string
          type: array
      type: object
    LearningGenaiRootHarmSpiiFilter:
      properties:
        usBankRoutingMicr:
          type: boolean
        usEmployerIdentificationNumber:
          type: boolean
        usSocialSecurityNumber:
          type: boolean
      type: object
    LearningGenaiRootInternalMetadata:
      properties:
        scoredTokens:
          items:
            $ref: "#/components/schemas/LearningGenaiRootScoredToken"
          type: array
      type: object
    LearningGenaiRootLanguageFilterResult:
      properties:
        allowed:
          description: False when query or response should be filtered out due to unsupported language.
          type: boolean
        detectedLanguage:
          description: Language of the query or response.
          type: string
        detectedLanguageProbability:
          description: Probability of the language predicted as returned by LangID.
          format: float
          type: number
      type: object
    LearningGenaiRootMetricOutput:
      properties:
        debug:
          type: string
        name:
          description: Name of the metric.
          type: string
        numericValue:
          format: double
          type: number
        status:
          $ref: "#/components/schemas/UtilStatusProto"
        stringValue:
          type: string
      type: object
    LearningGenaiRootRAIOutput:
      description: This is per harm.
      properties:
        allowed:
          type: boolean
        harm:
          $ref: "#/components/schemas/LearningGenaiRootHarm"
        name:
          type: string
        score:
          format: double
          type: number
      type: object
    LearningGenaiRootRegexTakedownResult:
      properties:
        allowed:
          description: False when query or response should be taken down due to match with a blocked regex, true otherwise.
          type: boolean
        takedownRegex:
          description: Regex used to decide that query or response should be taken down. Empty when query or response is kept.
          type: string
      type: object
    LearningGenaiRootRequestResponseTakedownResult:
      properties:
        allowed:
          description: False when response has to be taken down per above config.
          type: boolean
        requestTakedownRegex:
          description: Regex used to match the request.
          type: string
        responseTakedownRegex:
          description: Regex used to decide that response should be taken down. Empty when response is kept.
          type: string
      type: object
    LearningGenaiRootRoutingDecision:
      description: Holds the final routing decision, by storing the model_config_id. And individual scores each model got.
      properties:
        metadata:
          $ref: "#/components/schemas/LearningGenaiRootRoutingDecisionMetadata"
        modelConfigId:
          description: The selected model to route traffic to.
          type: string
      type: object
    LearningGenaiRootRoutingDecisionMetadata:
      description: Debug metadata about the routing decision.
      properties:
        scoreBasedRoutingMetadata:
          $ref: "#/components/schemas/LearningGenaiRootRoutingDecisionMetadataScoreBased"
        tokenLengthBasedRoutingMetadata:
          $ref: "#/components/schemas/LearningGenaiRootRoutingDecisionMetadataTokenLengthBased"
      type: object
    LearningGenaiRootRoutingDecisionMetadataScoreBased:
      description: If we are routing using scored based configuration, then the metadata about that is available in this proto.
      properties:
        matchedRule:
          $ref: "#/components/schemas/LearningGenaiRootScoreBasedRoutingConfigRule"
          description: The rule that was matched.
        score:
          $ref: "#/components/schemas/LearningGenaiRootScore"
          description: The score that was generated by the router i.e. the model.
        usedDefaultFallback:
          description: No rules were matched & therefore used the default fallback.
          type: boolean
      type: object
    LearningGenaiRootRoutingDecisionMetadataTokenLengthBased:
      properties:
        modelInputTokenMetadata:
          items:
            $ref: "#/components/schemas/LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelInputTokenMetadata"
          type: array
        modelMaxTokenMetadata:
          items:
            $ref: "#/components/schemas/LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata"
          type: array
      type: object
    LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelInputTokenMetadata:
      properties:
        computedInputTokenLength:
          description: The length computed by backends using the formatter & tokenizer specific to the model
          format: int32
          type: integer
        modelId:
          type: string
      type: object
    LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata:
      properties:
        maxNumInputTokens:
          format: int32
          type: integer
        maxNumOutputTokens:
          format: int32
          type: integer
        modelId:
          type: string
      type: object
    LearningGenaiRootRuleOutput:
      properties:
        decision:
          enum:
            - NO_MATCH
            - MATCH
          type: string
        name:
          type: string
      type: object
    LearningGenaiRootScore:
      properties:
        calculationType:
          $ref: "#/components/schemas/LearningGenaiRootCalculationType"
        internalMetadata:
          $ref: "#/components/schemas/LearningGenaiRootInternalMetadata"
          description: The internal_metadata is intended to be used by internal processors and will be cleared before returns.
        thresholdType:
          $ref: "#/components/schemas/LearningGenaiRootThresholdType"
        tokensAndLogprobPerDecodingStep:
          $ref: "#/components/schemas/LearningGenaiRootTokensAndLogProbPerDecodingStep"
          description: Top candidate tokens and log probabilities at each decoding step.
        value:
          format: double
          type: number
      type: object
    LearningGenaiRootScoreBasedRoutingConfigRule:
      properties:
        equalOrGreaterThan:
          $ref: "#/components/schemas/LearningGenaiRootScore"
          description: "NOTE: Hardest examples have smaller values in their routing scores."
        lessThan:
          $ref: "#/components/schemas/LearningGenaiRootScore"
        modelConfigId:
          description: This model_config_id points to ModelConfig::id which allows us to find the ModelConfig to route to. This is part of the banks specified in the ModelBankConfig.
          type: string
      type: object
    LearningGenaiRootScoredSimilarityTakedownPhrase:
      description: Proto containing the results from the Universal Sentence Encoder / Other models
      properties:
        phrase:
          $ref: "#/components/schemas/LearningGenaiRootSimilarityTakedownPhrase"
        similarityScore:
          format: float
          type: number
      type: object
    LearningGenaiRootScoredToken:
      description: A token with its own score.
      properties:
        endTokenScore:
          description: Each end_token_score is a logprob for how well the completion would end at a particular token. See http://google3/labs/language/aida/config/proto/model_config.proto;l=376;rcl=573039459
          format: float
          type: number
        score:
          description: Each score is the logprob for the token in model response.
          format: float
          type: number
        token:
          type: string
      type: object
    LearningGenaiRootSimilarityTakedownPhrase:
      description: 'Each SimilarityTakedownPhrase treats a logical group of blocked and allowed phrases together along with a corresponding punt If the closest matching response is of the allowed type, we allow the response If the closest matching response is of the blocked type, we block the response. eg: Blocked phrase - "All lives matter"'
      properties:
        blockedPhrase:
          type: string
      type: object
    LearningGenaiRootSimilarityTakedownResult:
      properties:
        allowed:
          description: False when query or response should be taken down by any of the takedown rules, true otherwise.
          type: boolean
        scoredPhrases:
          description: List of similar phrases with score. Set only if allowed=false.
          items:
            $ref: "#/components/schemas/LearningGenaiRootScoredSimilarityTakedownPhrase"
          type: array
      type: object
    LearningGenaiRootTakedownResult:
      properties:
        allowed:
          description: False when query or response should be taken down by any of the takedown rules, true otherwise.
          type: boolean
        regexTakedownResult:
          $ref: "#/components/schemas/LearningGenaiRootRegexTakedownResult"
        requestResponseTakedownResult:
          $ref: "#/components/schemas/LearningGenaiRootRequestResponseTakedownResult"
        similarityTakedownResult:
          $ref: "#/components/schemas/LearningGenaiRootSimilarityTakedownResult"
      type: object
    LearningGenaiRootThresholdType:
      description: The type of score that bundled with a threshold, and will not be attending the final score calculation. How each score type uses the threshold can be implementation details.
      properties:
        scoreType:
          enum:
            - TYPE_UNKNOWN
            - TYPE_SAFE
            - TYPE_POLICY
            - TYPE_GENERATION
          type: string
        threshold:
          format: double
          type: number
      type: object
    LearningGenaiRootTokensAndLogProbPerDecodingStep:
      description: Results of RandomSamplingParams::top_k_logprob_per_decoding_step.
      properties:
        chosenCandidates:
          description: Length = total number of decoding steps. The chosen candidates may or may not be in top_candidates.
          items:
            $ref: "#/components/schemas/LearningGenaiRootTokensAndLogProbPerDecodingStepCandidate"
          type: array
        topCandidates:
          description: Length = total number of decoding steps.
          items:
            $ref: "#/components/schemas/LearningGenaiRootTokensAndLogProbPerDecodingStepTopCandidates"
          type: array
      type: object
    LearningGenaiRootTokensAndLogProbPerDecodingStepCandidate:
      description: A candidate at a decoding step.
      properties:
        logProbability:
          description: The candidate's log probability.
          format: float
          type: number
        token:
          description: The candidate’s token value.
          type: string
      type: object
    LearningGenaiRootTokensAndLogProbPerDecodingStepTopCandidates:
      description: Candidates with top log probabilities at each decoding step.
      properties:
        candidates:
          description: Sorted by log probability in descending order.
          items:
            $ref: "#/components/schemas/LearningGenaiRootTokensAndLogProbPerDecodingStepCandidate"
          type: array
      type: object
    LearningGenaiRootToxicityResult:
      description: A model can generate multiple signals and this captures all the generated signals for a single message.
      properties:
        signals:
          items:
            $ref: "#/components/schemas/LearningGenaiRootToxicitySignal"
          type: array
      type: object
    LearningGenaiRootToxicitySignal:
      description: Proto to capture a signal generated by the toxicity model.
      properties:
        allowed:
          type: boolean
        label:
          enum:
            - LABEL_UNSPECIFIED
            - NOT_SENSITIVE
            - SENSITIVE
            - ACCIDENTS_DISASTERS
            - ADULT
            - COMPUTER_SECURITY
            - CONTROVERSIAL_SOCIAL_ISSUES
            - DEATH_TRAGEDY
            - DRUGS
            - IDENTITY_ETHNICITY
            - FINANCIAL_HARDSHIP
            - FIREARMS_WEAPONS
            - HEALTH
            - INSULT
            - LEGAL
            - MENTAL_HEALTH
            - POLITICS
            - RELIGION_BELIEFS
            - SAFETY
            - SELF_HARM
            - SPECIAL_NEEDS
            - TERRORISM
            - TOXIC
            - TROUBLED_RELATIONSHIP
            - VIOLENCE_ABUSE
            - VULGAR
            - WAR_CONFLICT
          type: string
        score:
          format: float
          type: number
      type: object
    LearningServingLlmMessageMetadata:
      description: LINT.IfChange This metadata contains additional information required for debugging.
      properties:
        classifierSummary:
          $ref: "#/components/schemas/LearningGenaiRootClassifierOutputSummary"
          description: Summary of classifier output. We attach this to all messages regardless of whether classification rules triggered or not.
        codeyOutput:
          $ref: "#/components/schemas/LearningGenaiRootCodeyOutput"
          description: Contains metadata related to Codey Processors.
        currentStreamTextLength:
          format: uint32
          type: integer
        deleted:
          description: Whether the corresponding message has been deleted.
          type: boolean
        filterMeta:
          description: Metadata for filters that triggered.
          items:
            $ref: "#/components/schemas/LearningGenaiRootFilterMetadata"
          type: array
        finalMessageScore:
          $ref: "#/components/schemas/LearningGenaiRootScore"
          description: This score is finally used for ranking the message. This will be same as the score present in `Message.score` field.
        finishReason:
          description: NOT YET IMPLEMENTED.
          enum:
            - UNSPECIFIED
            - RETURN
            - STOP
            - MAX_TOKENS
            - FILTER
          type: string
        groundingMetadata:
          $ref: "#/components/schemas/LearningGenaiRootGroundingMetadata"
        isCode:
          description: Applies to streaming response message only. Whether the message is a code.
          type: boolean
        isFallback:
          description: Applies to Response message only. Indicates whether the message is a fallback and the response would have otherwise been empty.
          type: boolean
        langidResult:
          $ref: "#/components/schemas/NlpSaftLangIdResult"
          description: Result from nlp_saft DetectLanguage method. Currently the predicted language code and language probability is used.
        language:
          description: Detected language.
          type: string
        lmPrefix:
          description: The LM prefix used to generate this response.
          type: string
        originalText:
          description: The original text generated by LLM. This is the raw output for debugging purposes.
          type: string
        perStreamDecodedTokenCount:
          description: NOT YET IMPLEMENTED. Applies to streaming only. Number of tokens decoded / emitted by the model as part of this stream. This may be different from token_count, which contains number of tokens returned in this response after any response rewriting / truncation.
          format: int32
          type: integer
        raiOutputs:
          description: Results of running RAI on the query or this response candidate. One output per rai_config. It will be populated regardless of whether the threshold is exceeded or not.
          items:
            $ref: "#/components/schemas/LearningGenaiRootRAIOutput"
          type: array
        recitationResult:
          $ref: "#/components/schemas/LearningGenaiRecitationRecitationResult"
          description: Recitation Results. It will be populated as long as Recitation processing is enabled, regardless of recitation outcome.
        returnTokenCount:
          description: NOT YET IMPLEMENTED. Number of tokens returned as part of this candidate.
          format: int32
          type: integer
        scores:
          description: All the different scores for a message are logged here.
          items:
            $ref: "#/components/schemas/LearningGenaiRootScore"
          type: array
        streamTerminated:
          description: Whether the response is terminated during streaming return. Only used for streaming requests.
          type: boolean
        totalDecodedTokenCount:
          description: NOT YET IMPLEMENTED. Aggregated number of total tokens decoded so far. For streaming, this is sum of all the tokens decoded so far i.e. aggregated count.
          format: int32
          type: integer
        translatedUserPrompts:
          description: Translated user-prompt used for RAI post processing. This is for internal processing only. We will translate in pre-processor and pass the translated text to the post processor using this field. It will be empty if non of the signals requested need translation.
          items:
            type: string
          type: array
        vertexRaiResult:
          $ref: "#/components/schemas/CloudAiNlLlmProtoServiceRaiResult"
          description: The metadata from Vertex SafetyCat processors
      type: object
    NlpSaftLangIdLocalesResult:
      properties:
        predictions:
          description: List of locales in which the text would be considered acceptable. Sorted in descending order according to each locale's respective likelihood. For example, if a Portuguese text is acceptable in both Brazil and Portugal, but is more strongly associated with Brazil, then the predictions would be ["pt-BR", "pt-PT"], in that order. May be empty, indicating that the model did not predict any acceptable locales.
          items:
            $ref: "#/components/schemas/NlpSaftLangIdLocalesResultLocale"
          type: array
      type: object
    NlpSaftLangIdLocalesResultLocale:
      properties:
        languageCode:
          description: A BCP 47 language code that includes region information. For example, "pt-BR" or "pt-PT". This field will always be populated.
          type: string
      type: object
    NlpSaftLangIdResult:
      properties:
        modelVersion:
          description: The version of the model used to create these annotations.
          enum:
            - VERSION_UNSPECIFIED
            - INDEXING_20181017
            - INDEXING_20191206
            - INDEXING_20200313
            - INDEXING_20210618
            - STANDARD_20220516
          type: string
        predictions:
          description: This field stores the n-best list of possible BCP 47 language code strings for a given input sorted in descending order according to each code's respective probability.
          items:
            $ref: "#/components/schemas/NlpSaftLanguageSpan"
          type: array
        spanPredictions:
          description: This field stores language predictions of subspans of the input, when available. Each LanguageSpanSequence is a sequence of LanguageSpans. A particular sequence of LanguageSpans has an associated probability, and need not necessarily cover the entire input. If no language could be predicted for any span, then this field may be empty.
          items:
            $ref: "#/components/schemas/NlpSaftLanguageSpanSequence"
          type: array
      type: object
    NlpSaftLanguageSpan:
      properties:
        end:
          format: int32
          type: integer
        languageCode:
          description: A BCP 47 language code for this span.
          type: string
        locales:
          $ref: "#/components/schemas/NlpSaftLangIdLocalesResult"
          description: Optional field containing any information that was predicted about the specific locale(s) of the span.
        probability:
          description: A probability associated with this prediction.
          format: float
          type: number
        start:
          description: Start and end byte offsets, inclusive, within the given input string. A value of -1 implies that this field is not set. Both fields must either be set with a nonnegative value or both are unset. If both are unset then this LanguageSpan applies to the entire input.
          format: int32
          type: integer
      type: object
    NlpSaftLanguageSpanSequence:
      properties:
        languageSpans:
          description: A sequence of LanguageSpan objects, each assigning a language to a subspan of the input.
          items:
            $ref: "#/components/schemas/NlpSaftLanguageSpan"
          type: array
        probability:
          description: The probability of this sequence of LanguageSpans.
          format: float
          type: number
      type: object
    Proto2BridgeMessageSet:
      description: This is proto2's version of MessageSet.
      properties: {}
      type: object
    UtilStatusProto:
      description: Wire-format for a Status object
      properties:
        canonicalCode:
          description: The canonical error code (see codes.proto) that most closely corresponds to this status. This may be missing, and in the common case of the generic space, it definitely will be.
          format: int32
          type: integer
        code:
          description: Numeric code drawn from the space specified below. Often, this is the canonical error space, and code is drawn from google3/util/task/codes.proto
          format: int32
          type: integer
        message:
          description: Detail message
          type: string
        messageSet:
          $ref: "#/components/schemas/Proto2BridgeMessageSet"
          description: message_set associates an arbitrary proto message with the status.
        space:
          description: The following are usually only present when code != 0 Space to which this status belongs
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud services and see the email address of your Google Account
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud services and see the email address of your Google Account
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
