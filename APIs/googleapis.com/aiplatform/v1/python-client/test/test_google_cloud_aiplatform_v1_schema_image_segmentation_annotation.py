# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1_schema_image_segmentation_annotation import GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation

class TestGoogleCloudAiplatformV1SchemaImageSegmentationAnnotation(unittest.TestCase):
    """GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation:
        """Test GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation`
        """
        model = GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation()
        if include_optional:
            return GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation(
                mask_annotation = openapi_client.models.google_cloud_aiplatform_v1_schema_image_segmentation_annotation_mask_annotation.GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation(
                    annotation_spec_colors = [
                        openapi_client.models.google_cloud_aiplatform_v1_schema_annotation_spec_color.GoogleCloudAiplatformV1SchemaAnnotationSpecColor(
                            color = openapi_client.models.google_type_color.GoogleTypeColor(
                                alpha = 1.337, 
                                blue = 1.337, 
                                green = 1.337, 
                                red = 1.337, ), 
                            display_name = '', 
                            id = '', )
                        ], 
                    mask_gcs_uri = '', ),
                polygon_annotation = openapi_client.models.google_cloud_aiplatform_v1_schema_image_segmentation_annotation_polygon_annotation.GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation(
                    annotation_spec_id = '', 
                    display_name = '', 
                    vertexes = [
                        openapi_client.models.google_cloud_aiplatform_v1_schema_vertex.GoogleCloudAiplatformV1SchemaVertex(
                            x = 1.337, 
                            y = 1.337, )
                        ], ),
                polyline_annotation = openapi_client.models.google_cloud_aiplatform_v1_schema_image_segmentation_annotation_polyline_annotation.GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation(
                    annotation_spec_id = '', 
                    display_name = '', 
                    vertexes = [
                        openapi_client.models.google_cloud_aiplatform_v1_schema_vertex.GoogleCloudAiplatformV1SchemaVertex(
                            x = 1.337, 
                            y = 1.337, )
                        ], )
            )
        else:
            return GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation(
        )
        """

    def testGoogleCloudAiplatformV1SchemaImageSegmentationAnnotation(self):
        """Test GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
