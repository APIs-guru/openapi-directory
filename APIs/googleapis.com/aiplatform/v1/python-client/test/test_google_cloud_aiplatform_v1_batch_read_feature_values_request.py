# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1_batch_read_feature_values_request import GoogleCloudAiplatformV1BatchReadFeatureValuesRequest

class TestGoogleCloudAiplatformV1BatchReadFeatureValuesRequest(unittest.TestCase):
    """GoogleCloudAiplatformV1BatchReadFeatureValuesRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1BatchReadFeatureValuesRequest:
        """Test GoogleCloudAiplatformV1BatchReadFeatureValuesRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1BatchReadFeatureValuesRequest`
        """
        model = GoogleCloudAiplatformV1BatchReadFeatureValuesRequest()
        if include_optional:
            return GoogleCloudAiplatformV1BatchReadFeatureValuesRequest(
                bigquery_read_instances = openapi_client.models.google_cloud_aiplatform_v1_big_query_source.GoogleCloudAiplatformV1BigQuerySource(
                    input_uri = '', ),
                csv_read_instances = openapi_client.models.google_cloud_aiplatform_v1_csv_source.GoogleCloudAiplatformV1CsvSource(
                    gcs_source = openapi_client.models.google_cloud_aiplatform_v1_gcs_source.GoogleCloudAiplatformV1GcsSource(
                        uris = [
                            ''
                            ], ), ),
                destination = openapi_client.models.google_cloud_aiplatform_v1_feature_value_destination.GoogleCloudAiplatformV1FeatureValueDestination(
                    bigquery_destination = openapi_client.models.google_cloud_aiplatform_v1_big_query_destination.GoogleCloudAiplatformV1BigQueryDestination(
                        output_uri = '', ), 
                    csv_destination = openapi_client.models.google_cloud_aiplatform_v1_csv_destination.GoogleCloudAiplatformV1CsvDestination(
                        gcs_destination = openapi_client.models.google_cloud_aiplatform_v1_gcs_destination.GoogleCloudAiplatformV1GcsDestination(
                            output_uri_prefix = '', ), ), 
                    tfrecord_destination = openapi_client.models.google_cloud_aiplatform_v1_tf_record_destination.GoogleCloudAiplatformV1TFRecordDestination(), ),
                entity_type_specs = [
                    openapi_client.models.google_cloud_aiplatform_v1_batch_read_feature_values_request_entity_type_spec.GoogleCloudAiplatformV1BatchReadFeatureValuesRequestEntityTypeSpec(
                        entity_type_id = '', 
                        feature_selector = openapi_client.models.google_cloud_aiplatform_v1_feature_selector.GoogleCloudAiplatformV1FeatureSelector(
                            id_matcher = openapi_client.models.google_cloud_aiplatform_v1_id_matcher.GoogleCloudAiplatformV1IdMatcher(
                                ids = [
                                    ''
                                    ], ), ), 
                        settings = [
                            openapi_client.models.google_cloud_aiplatform_v1_destination_feature_setting.GoogleCloudAiplatformV1DestinationFeatureSetting(
                                destination_field = '', 
                                feature_id = '', )
                            ], )
                    ],
                pass_through_fields = [
                    openapi_client.models.google_cloud_aiplatform_v1_batch_read_feature_values_request_pass_through_field.GoogleCloudAiplatformV1BatchReadFeatureValuesRequestPassThroughField(
                        field_name = '', )
                    ],
                start_time = ''
            )
        else:
            return GoogleCloudAiplatformV1BatchReadFeatureValuesRequest(
        )
        """

    def testGoogleCloudAiplatformV1BatchReadFeatureValuesRequest(self):
        """Test GoogleCloudAiplatformV1BatchReadFeatureValuesRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
