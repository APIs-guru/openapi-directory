# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1_dataset import GoogleCloudAiplatformV1Dataset

class TestGoogleCloudAiplatformV1Dataset(unittest.TestCase):
    """GoogleCloudAiplatformV1Dataset unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1Dataset:
        """Test GoogleCloudAiplatformV1Dataset
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1Dataset`
        """
        model = GoogleCloudAiplatformV1Dataset()
        if include_optional:
            return GoogleCloudAiplatformV1Dataset(
                create_time = '',
                data_item_count = '',
                description = '',
                display_name = '',
                encryption_spec = openapi_client.models.google_cloud_aiplatform_v1_encryption_spec.GoogleCloudAiplatformV1EncryptionSpec(
                    kms_key_name = '', ),
                etag = '',
                labels = {
                    'key' : ''
                    },
                metadata = None,
                metadata_artifact = '',
                metadata_schema_uri = '',
                name = '',
                saved_queries = [
                    openapi_client.models.google_cloud_aiplatform_v1_saved_query.GoogleCloudAiplatformV1SavedQuery(
                        annotation_filter = '', 
                        annotation_spec_count = 56, 
                        create_time = '', 
                        display_name = '', 
                        etag = '', 
                        metadata = null, 
                        name = '', 
                        problem_type = '', 
                        support_automl_training = True, 
                        update_time = '', )
                    ],
                update_time = ''
            )
        else:
            return GoogleCloudAiplatformV1Dataset(
        )
        """

    def testGoogleCloudAiplatformV1Dataset(self):
        """Test GoogleCloudAiplatformV1Dataset"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
