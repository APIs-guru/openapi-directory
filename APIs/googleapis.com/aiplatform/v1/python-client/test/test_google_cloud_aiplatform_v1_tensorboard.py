# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1_tensorboard import GoogleCloudAiplatformV1Tensorboard

class TestGoogleCloudAiplatformV1Tensorboard(unittest.TestCase):
    """GoogleCloudAiplatformV1Tensorboard unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1Tensorboard:
        """Test GoogleCloudAiplatformV1Tensorboard
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1Tensorboard`
        """
        model = GoogleCloudAiplatformV1Tensorboard()
        if include_optional:
            return GoogleCloudAiplatformV1Tensorboard(
                blob_storage_path_prefix = '',
                create_time = '',
                description = '',
                display_name = '',
                encryption_spec = openapi_client.models.google_cloud_aiplatform_v1_encryption_spec.GoogleCloudAiplatformV1EncryptionSpec(
                    kms_key_name = '', ),
                etag = '',
                is_default = True,
                labels = {
                    'key' : ''
                    },
                name = '',
                run_count = 56,
                update_time = ''
            )
        else:
            return GoogleCloudAiplatformV1Tensorboard(
        )
        """

    def testGoogleCloudAiplatformV1Tensorboard(self):
        """Test GoogleCloudAiplatformV1Tensorboard"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
