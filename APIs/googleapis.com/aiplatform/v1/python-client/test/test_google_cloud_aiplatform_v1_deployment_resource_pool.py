# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1_deployment_resource_pool import GoogleCloudAiplatformV1DeploymentResourcePool

class TestGoogleCloudAiplatformV1DeploymentResourcePool(unittest.TestCase):
    """GoogleCloudAiplatformV1DeploymentResourcePool unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1DeploymentResourcePool:
        """Test GoogleCloudAiplatformV1DeploymentResourcePool
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1DeploymentResourcePool`
        """
        model = GoogleCloudAiplatformV1DeploymentResourcePool()
        if include_optional:
            return GoogleCloudAiplatformV1DeploymentResourcePool(
                create_time = '',
                dedicated_resources = openapi_client.models.google_cloud_aiplatform_v1_dedicated_resources.GoogleCloudAiplatformV1DedicatedResources(
                    autoscaling_metric_specs = [
                        openapi_client.models.google_cloud_aiplatform_v1_autoscaling_metric_spec.GoogleCloudAiplatformV1AutoscalingMetricSpec(
                            metric_name = '', 
                            target = 56, )
                        ], 
                    machine_spec = openapi_client.models.google_cloud_aiplatform_v1_machine_spec.GoogleCloudAiplatformV1MachineSpec(
                        accelerator_count = 56, 
                        accelerator_type = 'ACCELERATOR_TYPE_UNSPECIFIED', 
                        machine_type = '', 
                        tpu_topology = '', ), 
                    max_replica_count = 56, 
                    min_replica_count = 56, ),
                name = ''
            )
        else:
            return GoogleCloudAiplatformV1DeploymentResourcePool(
        )
        """

    def testGoogleCloudAiplatformV1DeploymentResourcePool(self):
        """Test GoogleCloudAiplatformV1DeploymentResourcePool"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
