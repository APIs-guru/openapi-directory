# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1_schema_modelevaluation_metrics_forecasting_evaluation_metrics import GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics

class TestGoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics(unittest.TestCase):
    """GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics:
        """Test GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics`
        """
        model = GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics()
        if include_optional:
            return GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics(
                mean_absolute_error = 1.337,
                mean_absolute_percentage_error = 1.337,
                quantile_metrics = [
                    openapi_client.models.google_cloud_aiplatform_v1_schema_modelevaluation_metrics_forecasting_evaluation_metrics_quantile_metrics_entry.GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry(
                        observed_quantile = 1.337, 
                        quantile = 1.337, 
                        scaled_pinball_loss = 1.337, )
                    ],
                r_squared = 1.337,
                root_mean_squared_error = 1.337,
                root_mean_squared_log_error = 1.337,
                root_mean_squared_percentage_error = 1.337,
                weighted_absolute_percentage_error = 1.337
            )
        else:
            return GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics(
        )
        """

    def testGoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics(self):
        """Test GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
