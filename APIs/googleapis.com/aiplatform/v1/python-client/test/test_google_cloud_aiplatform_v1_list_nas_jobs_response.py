# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1_list_nas_jobs_response import GoogleCloudAiplatformV1ListNasJobsResponse

class TestGoogleCloudAiplatformV1ListNasJobsResponse(unittest.TestCase):
    """GoogleCloudAiplatformV1ListNasJobsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1ListNasJobsResponse:
        """Test GoogleCloudAiplatformV1ListNasJobsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1ListNasJobsResponse`
        """
        model = GoogleCloudAiplatformV1ListNasJobsResponse()
        if include_optional:
            return GoogleCloudAiplatformV1ListNasJobsResponse(
                nas_jobs = [
                    openapi_client.models.google_cloud_aiplatform_v1_nas_job.GoogleCloudAiplatformV1NasJob(
                        create_time = '', 
                        display_name = '', 
                        enable_restricted_image_training = True, 
                        encryption_spec = openapi_client.models.google_cloud_aiplatform_v1_encryption_spec.GoogleCloudAiplatformV1EncryptionSpec(
                            kms_key_name = '', ), 
                        end_time = '', 
                        error = openapi_client.models.google_rpc_status.GoogleRpcStatus(
                            code = 56, 
                            details = [
                                {
                                    'key' : null
                                    }
                                ], 
                            message = '', ), 
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        nas_job_output = openapi_client.models.google_cloud_aiplatform_v1_nas_job_output.GoogleCloudAiplatformV1NasJobOutput(
                            multi_trial_job_output = openapi_client.models.google_cloud_aiplatform_v1_nas_job_output_multi_trial_job_output.GoogleCloudAiplatformV1NasJobOutputMultiTrialJobOutput(
                                search_trials = [
                                    openapi_client.models.google_cloud_aiplatform_v1_nas_trial.GoogleCloudAiplatformV1NasTrial(
                                        end_time = '', 
                                        final_measurement = openapi_client.models.google_cloud_aiplatform_v1_measurement.GoogleCloudAiplatformV1Measurement(
                                            elapsed_duration = '', 
                                            metrics = [
                                                openapi_client.models.google_cloud_aiplatform_v1_measurement_metric.GoogleCloudAiplatformV1MeasurementMetric(
                                                    metric_id = '', 
                                                    value = 1.337, )
                                                ], 
                                            step_count = '', ), 
                                        id = '', 
                                        start_time = '', 
                                        state = 'STATE_UNSPECIFIED', )
                                    ], 
                                train_trials = [
                                    openapi_client.models.google_cloud_aiplatform_v1_nas_trial.GoogleCloudAiplatformV1NasTrial(
                                        end_time = '', 
                                        id = '', 
                                        start_time = '', 
                                        state = 'STATE_UNSPECIFIED', )
                                    ], ), ), 
                        nas_job_spec = openapi_client.models.google_cloud_aiplatform_v1_nas_job_spec.GoogleCloudAiplatformV1NasJobSpec(
                            multi_trial_algorithm_spec = openapi_client.models.google_cloud_aiplatform_v1_nas_job_spec_multi_trial_algorithm_spec.GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec(
                                metric = openapi_client.models.google_cloud_aiplatform_v1_nas_job_spec_multi_trial_algorithm_spec_metric_spec.GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpec(
                                    goal = 'GOAL_TYPE_UNSPECIFIED', 
                                    metric_id = '', ), 
                                multi_trial_algorithm = 'MULTI_TRIAL_ALGORITHM_UNSPECIFIED', 
                                search_trial_spec = openapi_client.models.google_cloud_aiplatform_v1_nas_job_spec_multi_trial_algorithm_spec_search_trial_spec.GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec(
                                    max_failed_trial_count = 56, 
                                    max_parallel_trial_count = 56, 
                                    max_trial_count = 56, 
                                    search_trial_job_spec = openapi_client.models.google_cloud_aiplatform_v1_custom_job_spec.GoogleCloudAiplatformV1CustomJobSpec(
                                        base_output_directory = openapi_client.models.google_cloud_aiplatform_v1_gcs_destination.GoogleCloudAiplatformV1GcsDestination(
                                            output_uri_prefix = '', ), 
                                        enable_dashboard_access = True, 
                                        enable_web_access = True, 
                                        experiment = '', 
                                        experiment_run = '', 
                                        models = [
                                            ''
                                            ], 
                                        network = '', 
                                        protected_artifact_location_id = '', 
                                        reserved_ip_ranges = [
                                            ''
                                            ], 
                                        scheduling = openapi_client.models.google_cloud_aiplatform_v1_scheduling.GoogleCloudAiplatformV1Scheduling(
                                            disable_retries = True, 
                                            restart_job_on_worker_restart = True, 
                                            timeout = '', ), 
                                        service_account = '', 
                                        tensorboard = '', 
                                        worker_pool_specs = [
                                            openapi_client.models.google_cloud_aiplatform_v1_worker_pool_spec.GoogleCloudAiplatformV1WorkerPoolSpec(
                                                container_spec = openapi_client.models.google_cloud_aiplatform_v1_container_spec.GoogleCloudAiplatformV1ContainerSpec(
                                                    args = [
                                                        ''
                                                        ], 
                                                    command = [
                                                        ''
                                                        ], 
                                                    env = [
                                                        openapi_client.models.google_cloud_aiplatform_v1_env_var.GoogleCloudAiplatformV1EnvVar(
                                                            name = '', 
                                                            value = '', )
                                                        ], 
                                                    image_uri = '', ), 
                                                disk_spec = openapi_client.models.google_cloud_aiplatform_v1_disk_spec.GoogleCloudAiplatformV1DiskSpec(
                                                    boot_disk_size_gb = 56, 
                                                    boot_disk_type = '', ), 
                                                machine_spec = openapi_client.models.google_cloud_aiplatform_v1_machine_spec.GoogleCloudAiplatformV1MachineSpec(
                                                    accelerator_count = 56, 
                                                    accelerator_type = 'ACCELERATOR_TYPE_UNSPECIFIED', 
                                                    machine_type = '', 
                                                    tpu_topology = '', ), 
                                                nfs_mounts = [
                                                    openapi_client.models.google_cloud_aiplatform_v1_nfs_mount.GoogleCloudAiplatformV1NfsMount(
                                                        mount_point = '', 
                                                        path = '', 
                                                        server = '', )
                                                    ], 
                                                python_package_spec = openapi_client.models.google_cloud_aiplatform_v1_python_package_spec.GoogleCloudAiplatformV1PythonPackageSpec(
                                                    executor_image_uri = '', 
                                                    package_uris = [
                                                        ''
                                                        ], 
                                                    python_module = '', ), 
                                                replica_count = '', )
                                            ], ), ), 
                                train_trial_spec = openapi_client.models.google_cloud_aiplatform_v1_nas_job_spec_multi_trial_algorithm_spec_train_trial_spec.GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec(
                                    frequency = 56, 
                                    max_parallel_trial_count = 56, 
                                    train_trial_job_spec = openapi_client.models.google_cloud_aiplatform_v1_custom_job_spec.GoogleCloudAiplatformV1CustomJobSpec(
                                        enable_dashboard_access = True, 
                                        enable_web_access = True, 
                                        experiment = '', 
                                        experiment_run = '', 
                                        network = '', 
                                        protected_artifact_location_id = '', 
                                        service_account = '', 
                                        tensorboard = '', ), ), ), 
                            resume_nas_job_id = '', 
                            search_space_spec = '', ), 
                        start_time = '', 
                        state = 'JOB_STATE_UNSPECIFIED', 
                        update_time = '', )
                    ],
                next_page_token = ''
            )
        else:
            return GoogleCloudAiplatformV1ListNasJobsResponse(
        )
        """

    def testGoogleCloudAiplatformV1ListNasJobsResponse(self):
        """Test GoogleCloudAiplatformV1ListNasJobsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
