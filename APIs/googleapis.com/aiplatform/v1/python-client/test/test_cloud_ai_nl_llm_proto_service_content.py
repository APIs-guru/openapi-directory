# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cloud_ai_nl_llm_proto_service_content import CloudAiNlLlmProtoServiceContent

class TestCloudAiNlLlmProtoServiceContent(unittest.TestCase):
    """CloudAiNlLlmProtoServiceContent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CloudAiNlLlmProtoServiceContent:
        """Test CloudAiNlLlmProtoServiceContent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CloudAiNlLlmProtoServiceContent`
        """
        model = CloudAiNlLlmProtoServiceContent()
        if include_optional:
            return CloudAiNlLlmProtoServiceContent(
                parts = [
                    openapi_client.models.cloud_ai_nl_llm_proto_service_part.CloudAiNlLlmProtoServicePart(
                        file_data = openapi_client.models.cloud_ai_nl_llm_proto_service_part_file_data.CloudAiNlLlmProtoServicePartFileData(
                            file_uri = '', 
                            mime_type = '', ), 
                        function_call = openapi_client.models.cloud_ai_nl_llm_proto_service_function_call.CloudAiNlLlmProtoServiceFunctionCall(
                            args = {
                                'key' : null
                                }, 
                            name = '', ), 
                        function_response = openapi_client.models.cloud_ai_nl_llm_proto_service_function_response.CloudAiNlLlmProtoServiceFunctionResponse(
                            name = '', 
                            response = {
                                'key' : null
                                }, ), 
                        inline_data = openapi_client.models.cloud_ai_nl_llm_proto_service_part_blob.CloudAiNlLlmProtoServicePartBlob(
                            data = 'YQ==', 
                            mime_type = '', 
                            original_file_data = openapi_client.models.cloud_ai_nl_llm_proto_service_part_file_data.CloudAiNlLlmProtoServicePartFileData(
                                file_uri = '', 
                                mime_type = '', ), ), 
                        text = '', 
                        video_metadata = openapi_client.models.cloud_ai_nl_llm_proto_service_part_video_metadata.CloudAiNlLlmProtoServicePartVideoMetadata(
                            end_offset = '', 
                            start_offset = '', ), )
                    ],
                role = ''
            )
        else:
            return CloudAiNlLlmProtoServiceContent(
        )
        """

    def testCloudAiNlLlmProtoServiceContent(self):
        """Test CloudAiNlLlmProtoServiceContent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
