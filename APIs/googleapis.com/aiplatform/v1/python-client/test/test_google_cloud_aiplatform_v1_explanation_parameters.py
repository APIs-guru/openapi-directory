# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1_explanation_parameters import GoogleCloudAiplatformV1ExplanationParameters

class TestGoogleCloudAiplatformV1ExplanationParameters(unittest.TestCase):
    """GoogleCloudAiplatformV1ExplanationParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1ExplanationParameters:
        """Test GoogleCloudAiplatformV1ExplanationParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1ExplanationParameters`
        """
        model = GoogleCloudAiplatformV1ExplanationParameters()
        if include_optional:
            return GoogleCloudAiplatformV1ExplanationParameters(
                examples = openapi_client.models.google_cloud_aiplatform_v1_examples.GoogleCloudAiplatformV1Examples(
                    example_gcs_source = openapi_client.models.google_cloud_aiplatform_v1_examples_example_gcs_source.GoogleCloudAiplatformV1ExamplesExampleGcsSource(
                        data_format = 'DATA_FORMAT_UNSPECIFIED', 
                        gcs_source = openapi_client.models.google_cloud_aiplatform_v1_gcs_source.GoogleCloudAiplatformV1GcsSource(
                            uris = [
                                ''
                                ], ), ), 
                    nearest_neighbor_search_config = null, 
                    neighbor_count = 56, 
                    presets = openapi_client.models.google_cloud_aiplatform_v1_presets.GoogleCloudAiplatformV1Presets(
                        modality = 'MODALITY_UNSPECIFIED', 
                        query = 'PRECISE', ), ),
                integrated_gradients_attribution = openapi_client.models.google_cloud_aiplatform_v1_integrated_gradients_attribution.GoogleCloudAiplatformV1IntegratedGradientsAttribution(
                    blur_baseline_config = openapi_client.models.google_cloud_aiplatform_v1_blur_baseline_config.GoogleCloudAiplatformV1BlurBaselineConfig(
                        max_blur_sigma = 1.337, ), 
                    smooth_grad_config = openapi_client.models.google_cloud_aiplatform_v1_smooth_grad_config.GoogleCloudAiplatformV1SmoothGradConfig(
                        feature_noise_sigma = openapi_client.models.google_cloud_aiplatform_v1_feature_noise_sigma.GoogleCloudAiplatformV1FeatureNoiseSigma(
                            noise_sigma = [
                                openapi_client.models.google_cloud_aiplatform_v1_feature_noise_sigma_noise_sigma_for_feature.GoogleCloudAiplatformV1FeatureNoiseSigmaNoiseSigmaForFeature(
                                    name = '', 
                                    sigma = 1.337, )
                                ], ), 
                        noise_sigma = 1.337, 
                        noisy_sample_count = 56, ), 
                    step_count = 56, ),
                output_indices = [
                    null
                    ],
                sampled_shapley_attribution = openapi_client.models.google_cloud_aiplatform_v1_sampled_shapley_attribution.GoogleCloudAiplatformV1SampledShapleyAttribution(
                    path_count = 56, ),
                top_k = 56,
                xrai_attribution = openapi_client.models.google_cloud_aiplatform_v1_xrai_attribution.GoogleCloudAiplatformV1XraiAttribution(
                    blur_baseline_config = openapi_client.models.google_cloud_aiplatform_v1_blur_baseline_config.GoogleCloudAiplatformV1BlurBaselineConfig(
                        max_blur_sigma = 1.337, ), 
                    smooth_grad_config = openapi_client.models.google_cloud_aiplatform_v1_smooth_grad_config.GoogleCloudAiplatformV1SmoothGradConfig(
                        feature_noise_sigma = openapi_client.models.google_cloud_aiplatform_v1_feature_noise_sigma.GoogleCloudAiplatformV1FeatureNoiseSigma(
                            noise_sigma = [
                                openapi_client.models.google_cloud_aiplatform_v1_feature_noise_sigma_noise_sigma_for_feature.GoogleCloudAiplatformV1FeatureNoiseSigmaNoiseSigmaForFeature(
                                    name = '', 
                                    sigma = 1.337, )
                                ], ), 
                        noise_sigma = 1.337, 
                        noisy_sample_count = 56, ), 
                    step_count = 56, )
            )
        else:
            return GoogleCloudAiplatformV1ExplanationParameters(
        )
        """

    def testGoogleCloudAiplatformV1ExplanationParameters(self):
        """Test GoogleCloudAiplatformV1ExplanationParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
