# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1_deploy_index_response import GoogleCloudAiplatformV1DeployIndexResponse

class TestGoogleCloudAiplatformV1DeployIndexResponse(unittest.TestCase):
    """GoogleCloudAiplatformV1DeployIndexResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1DeployIndexResponse:
        """Test GoogleCloudAiplatformV1DeployIndexResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1DeployIndexResponse`
        """
        model = GoogleCloudAiplatformV1DeployIndexResponse()
        if include_optional:
            return GoogleCloudAiplatformV1DeployIndexResponse(
                deployed_index = openapi_client.models.google_cloud_aiplatform_v1_deployed_index.GoogleCloudAiplatformV1DeployedIndex(
                    automatic_resources = openapi_client.models.google_cloud_aiplatform_v1_automatic_resources.GoogleCloudAiplatformV1AutomaticResources(
                        max_replica_count = 56, 
                        min_replica_count = 56, ), 
                    create_time = '', 
                    dedicated_resources = openapi_client.models.google_cloud_aiplatform_v1_dedicated_resources.GoogleCloudAiplatformV1DedicatedResources(
                        autoscaling_metric_specs = [
                            openapi_client.models.google_cloud_aiplatform_v1_autoscaling_metric_spec.GoogleCloudAiplatformV1AutoscalingMetricSpec(
                                metric_name = '', 
                                target = 56, )
                            ], 
                        machine_spec = openapi_client.models.google_cloud_aiplatform_v1_machine_spec.GoogleCloudAiplatformV1MachineSpec(
                            accelerator_count = 56, 
                            accelerator_type = 'ACCELERATOR_TYPE_UNSPECIFIED', 
                            machine_type = '', 
                            tpu_topology = '', ), 
                        max_replica_count = 56, 
                        min_replica_count = 56, ), 
                    deployed_index_auth_config = openapi_client.models.google_cloud_aiplatform_v1_deployed_index_auth_config.GoogleCloudAiplatformV1DeployedIndexAuthConfig(
                        auth_provider = openapi_client.models.google_cloud_aiplatform_v1_deployed_index_auth_config_auth_provider.GoogleCloudAiplatformV1DeployedIndexAuthConfigAuthProvider(
                            allowed_issuers = [
                                ''
                                ], 
                            audiences = [
                                ''
                                ], ), ), 
                    deployment_group = '', 
                    display_name = '', 
                    enable_access_logging = True, 
                    id = '', 
                    index = '', 
                    index_sync_time = '', 
                    private_endpoints = openapi_client.models.google_cloud_aiplatform_v1_index_private_endpoints.GoogleCloudAiplatformV1IndexPrivateEndpoints(
                        match_grpc_address = '', 
                        psc_automated_endpoints = [
                            openapi_client.models.google_cloud_aiplatform_v1_psc_automated_endpoints.GoogleCloudAiplatformV1PscAutomatedEndpoints(
                                match_address = '', 
                                network = '', 
                                project_id = '', )
                            ], 
                        service_attachment = '', ), 
                    reserved_ip_ranges = [
                        ''
                        ], )
            )
        else:
            return GoogleCloudAiplatformV1DeployIndexResponse(
        )
        """

    def testGoogleCloudAiplatformV1DeployIndexResponse(self):
        """Test GoogleCloudAiplatformV1DeployIndexResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
