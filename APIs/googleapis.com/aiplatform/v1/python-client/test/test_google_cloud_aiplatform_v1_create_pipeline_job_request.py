# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1_create_pipeline_job_request import GoogleCloudAiplatformV1CreatePipelineJobRequest

class TestGoogleCloudAiplatformV1CreatePipelineJobRequest(unittest.TestCase):
    """GoogleCloudAiplatformV1CreatePipelineJobRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1CreatePipelineJobRequest:
        """Test GoogleCloudAiplatformV1CreatePipelineJobRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1CreatePipelineJobRequest`
        """
        model = GoogleCloudAiplatformV1CreatePipelineJobRequest()
        if include_optional:
            return GoogleCloudAiplatformV1CreatePipelineJobRequest(
                parent = '',
                pipeline_job = openapi_client.models.google_cloud_aiplatform_v1_pipeline_job.GoogleCloudAiplatformV1PipelineJob(
                    create_time = '', 
                    display_name = '', 
                    encryption_spec = openapi_client.models.google_cloud_aiplatform_v1_encryption_spec.GoogleCloudAiplatformV1EncryptionSpec(
                        kms_key_name = '', ), 
                    end_time = '', 
                    error = openapi_client.models.google_rpc_status.GoogleRpcStatus(
                        code = 56, 
                        details = [
                            {
                                'key' : null
                                }
                            ], 
                        message = '', ), 
                    job_detail = openapi_client.models.google_cloud_aiplatform_v1_pipeline_job_detail.GoogleCloudAiplatformV1PipelineJobDetail(
                        pipeline_context = openapi_client.models.google_cloud_aiplatform_v1_context.GoogleCloudAiplatformV1Context(
                            create_time = '', 
                            description = '', 
                            display_name = '', 
                            etag = '', 
                            labels = {
                                'key' : ''
                                }, 
                            metadata = {
                                'key' : null
                                }, 
                            name = '', 
                            parent_contexts = [
                                ''
                                ], 
                            schema_title = '', 
                            schema_version = '', 
                            update_time = '', ), 
                        pipeline_run_context = openapi_client.models.google_cloud_aiplatform_v1_context.GoogleCloudAiplatformV1Context(
                            create_time = '', 
                            description = '', 
                            display_name = '', 
                            etag = '', 
                            name = '', 
                            schema_title = '', 
                            schema_version = '', 
                            update_time = '', ), 
                        task_details = [
                            openapi_client.models.google_cloud_aiplatform_v1_pipeline_task_detail.GoogleCloudAiplatformV1PipelineTaskDetail(
                                create_time = '', 
                                end_time = '', 
                                execution = openapi_client.models.google_cloud_aiplatform_v1_execution.GoogleCloudAiplatformV1Execution(
                                    create_time = '', 
                                    description = '', 
                                    display_name = '', 
                                    etag = '', 
                                    name = '', 
                                    schema_title = '', 
                                    schema_version = '', 
                                    state = 'STATE_UNSPECIFIED', 
                                    update_time = '', ), 
                                executor_detail = openapi_client.models.google_cloud_aiplatform_v1_pipeline_task_executor_detail.GoogleCloudAiplatformV1PipelineTaskExecutorDetail(
                                    container_detail = openapi_client.models.google_cloud_aiplatform_v1_pipeline_task_executor_detail_container_detail.GoogleCloudAiplatformV1PipelineTaskExecutorDetailContainerDetail(
                                        failed_main_jobs = [
                                            ''
                                            ], 
                                        failed_pre_caching_check_jobs = [
                                            ''
                                            ], 
                                        main_job = '', 
                                        pre_caching_check_job = '', ), 
                                    custom_job_detail = openapi_client.models.google_cloud_aiplatform_v1_pipeline_task_executor_detail_custom_job_detail.GoogleCloudAiplatformV1PipelineTaskExecutorDetailCustomJobDetail(
                                        failed_jobs = [
                                            ''
                                            ], 
                                        job = '', ), ), 
                                inputs = {
                                    'key' : openapi_client.models.google_cloud_aiplatform_v1_pipeline_task_detail_artifact_list.GoogleCloudAiplatformV1PipelineTaskDetailArtifactList(
                                        artifacts = [
                                            openapi_client.models.google_cloud_aiplatform_v1_artifact.GoogleCloudAiplatformV1Artifact(
                                                create_time = '', 
                                                description = '', 
                                                display_name = '', 
                                                etag = '', 
                                                name = '', 
                                                schema_title = '', 
                                                schema_version = '', 
                                                state = 'STATE_UNSPECIFIED', 
                                                update_time = '', 
                                                uri = '', )
                                            ], )
                                    }, 
                                outputs = {
                                    'key' : openapi_client.models.google_cloud_aiplatform_v1_pipeline_task_detail_artifact_list.GoogleCloudAiplatformV1PipelineTaskDetailArtifactList()
                                    }, 
                                parent_task_id = '', 
                                pipeline_task_status = [
                                    openapi_client.models.google_cloud_aiplatform_v1_pipeline_task_detail_pipeline_task_status.GoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus(
                                        state = 'STATE_UNSPECIFIED', 
                                        update_time = '', )
                                    ], 
                                start_time = '', 
                                state = 'STATE_UNSPECIFIED', 
                                task_id = '', 
                                task_name = '', )
                            ], ), 
                    labels = {
                        'key' : ''
                        }, 
                    name = '', 
                    network = '', 
                    pipeline_spec = {
                        'key' : null
                        }, 
                    reserved_ip_ranges = [
                        ''
                        ], 
                    runtime_config = openapi_client.models.google_cloud_aiplatform_v1_pipeline_job_runtime_config.GoogleCloudAiplatformV1PipelineJobRuntimeConfig(
                        failure_policy = 'PIPELINE_FAILURE_POLICY_UNSPECIFIED', 
                        gcs_output_directory = '', 
                        input_artifacts = {
                            'key' : openapi_client.models.google_cloud_aiplatform_v1_pipeline_job_runtime_config_input_artifact.GoogleCloudAiplatformV1PipelineJobRuntimeConfigInputArtifact(
                                artifact_id = '', )
                            }, 
                        parameter_values = {
                            'key' : null
                            }, 
                        parameters = {
                            'key' : openapi_client.models.google_cloud_aiplatform_v1_value.GoogleCloudAiplatformV1Value(
                                double_value = 1.337, 
                                int_value = '', 
                                string_value = '', )
                            }, ), 
                    schedule_name = '', 
                    service_account = '', 
                    start_time = '', 
                    state = 'PIPELINE_STATE_UNSPECIFIED', 
                    template_metadata = openapi_client.models.google_cloud_aiplatform_v1_pipeline_template_metadata.GoogleCloudAiplatformV1PipelineTemplateMetadata(
                        version = '', ), 
                    template_uri = '', 
                    update_time = '', ),
                pipeline_job_id = ''
            )
        else:
            return GoogleCloudAiplatformV1CreatePipelineJobRequest(
        )
        """

    def testGoogleCloudAiplatformV1CreatePipelineJobRequest(self):
        """Test GoogleCloudAiplatformV1CreatePipelineJobRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
