# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1_nas_job_spec_multi_trial_algorithm_spec_train_trial_spec import GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec

class TestGoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec(unittest.TestCase):
    """GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec:
        """Test GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec`
        """
        model = GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec()
        if include_optional:
            return GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec(
                frequency = 56,
                max_parallel_trial_count = 56,
                train_trial_job_spec = openapi_client.models.google_cloud_aiplatform_v1_custom_job_spec.GoogleCloudAiplatformV1CustomJobSpec(
                    base_output_directory = openapi_client.models.google_cloud_aiplatform_v1_gcs_destination.GoogleCloudAiplatformV1GcsDestination(
                        output_uri_prefix = '', ), 
                    enable_dashboard_access = True, 
                    enable_web_access = True, 
                    experiment = '', 
                    experiment_run = '', 
                    models = [
                        ''
                        ], 
                    network = '', 
                    protected_artifact_location_id = '', 
                    reserved_ip_ranges = [
                        ''
                        ], 
                    scheduling = openapi_client.models.google_cloud_aiplatform_v1_scheduling.GoogleCloudAiplatformV1Scheduling(
                        disable_retries = True, 
                        restart_job_on_worker_restart = True, 
                        timeout = '', ), 
                    service_account = '', 
                    tensorboard = '', 
                    worker_pool_specs = [
                        openapi_client.models.google_cloud_aiplatform_v1_worker_pool_spec.GoogleCloudAiplatformV1WorkerPoolSpec(
                            container_spec = openapi_client.models.google_cloud_aiplatform_v1_container_spec.GoogleCloudAiplatformV1ContainerSpec(
                                args = [
                                    ''
                                    ], 
                                command = [
                                    ''
                                    ], 
                                env = [
                                    openapi_client.models.google_cloud_aiplatform_v1_env_var.GoogleCloudAiplatformV1EnvVar(
                                        name = '', 
                                        value = '', )
                                    ], 
                                image_uri = '', ), 
                            disk_spec = openapi_client.models.google_cloud_aiplatform_v1_disk_spec.GoogleCloudAiplatformV1DiskSpec(
                                boot_disk_size_gb = 56, 
                                boot_disk_type = '', ), 
                            machine_spec = openapi_client.models.google_cloud_aiplatform_v1_machine_spec.GoogleCloudAiplatformV1MachineSpec(
                                accelerator_count = 56, 
                                accelerator_type = 'ACCELERATOR_TYPE_UNSPECIFIED', 
                                machine_type = '', 
                                tpu_topology = '', ), 
                            nfs_mounts = [
                                openapi_client.models.google_cloud_aiplatform_v1_nfs_mount.GoogleCloudAiplatformV1NfsMount(
                                    mount_point = '', 
                                    path = '', 
                                    server = '', )
                                ], 
                            python_package_spec = openapi_client.models.google_cloud_aiplatform_v1_python_package_spec.GoogleCloudAiplatformV1PythonPackageSpec(
                                executor_image_uri = '', 
                                package_uris = [
                                    ''
                                    ], 
                                python_module = '', ), 
                            replica_count = '', )
                        ], )
            )
        else:
            return GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec(
        )
        """

    def testGoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec(self):
        """Test GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
