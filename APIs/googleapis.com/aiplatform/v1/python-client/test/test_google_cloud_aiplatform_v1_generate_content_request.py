# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1_generate_content_request import GoogleCloudAiplatformV1GenerateContentRequest

class TestGoogleCloudAiplatformV1GenerateContentRequest(unittest.TestCase):
    """GoogleCloudAiplatformV1GenerateContentRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1GenerateContentRequest:
        """Test GoogleCloudAiplatformV1GenerateContentRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1GenerateContentRequest`
        """
        model = GoogleCloudAiplatformV1GenerateContentRequest()
        if include_optional:
            return GoogleCloudAiplatformV1GenerateContentRequest(
                contents = [
                    openapi_client.models.google_cloud_aiplatform_v1_content.GoogleCloudAiplatformV1Content(
                        parts = [
                            openapi_client.models.google_cloud_aiplatform_v1_part.GoogleCloudAiplatformV1Part(
                                file_data = openapi_client.models.google_cloud_aiplatform_v1_file_data.GoogleCloudAiplatformV1FileData(
                                    file_uri = '', 
                                    mime_type = '', ), 
                                function_call = openapi_client.models.google_cloud_aiplatform_v1_function_call.GoogleCloudAiplatformV1FunctionCall(
                                    args = {
                                        'key' : null
                                        }, 
                                    name = '', ), 
                                function_response = openapi_client.models.google_cloud_aiplatform_v1_function_response.GoogleCloudAiplatformV1FunctionResponse(
                                    name = '', 
                                    response = {
                                        'key' : null
                                        }, ), 
                                inline_data = openapi_client.models.google_cloud_aiplatform_v1_blob.GoogleCloudAiplatformV1Blob(
                                    data = 'YQ==', 
                                    mime_type = '', ), 
                                text = '', 
                                video_metadata = openapi_client.models.google_cloud_aiplatform_v1_video_metadata.GoogleCloudAiplatformV1VideoMetadata(
                                    end_offset = '', 
                                    start_offset = '', ), )
                            ], 
                        role = '', )
                    ],
                generation_config = openapi_client.models.google_cloud_aiplatform_v1_generation_config.GoogleCloudAiplatformV1GenerationConfig(
                    candidate_count = 56, 
                    max_output_tokens = 56, 
                    stop_sequences = [
                        ''
                        ], 
                    temperature = 1.337, 
                    top_k = 1.337, 
                    top_p = 1.337, ),
                safety_settings = [
                    openapi_client.models.google_cloud_aiplatform_v1_safety_setting.GoogleCloudAiplatformV1SafetySetting(
                        category = 'HARM_CATEGORY_UNSPECIFIED', 
                        threshold = 'HARM_BLOCK_THRESHOLD_UNSPECIFIED', )
                    ],
                tools = [
                    openapi_client.models.google_cloud_aiplatform_v1_tool.GoogleCloudAiplatformV1Tool(
                        function_declarations = [
                            openapi_client.models.google_cloud_aiplatform_v1_function_declaration.GoogleCloudAiplatformV1FunctionDeclaration(
                                description = '', 
                                name = '', 
                                parameters = openapi_client.models.google_cloud_aiplatform_v1_schema.GoogleCloudAiplatformV1Schema(
                                    description = '', 
                                    enum = [
                                        ''
                                        ], 
                                    example = null, 
                                    format = '', 
                                    items = openapi_client.models.google_cloud_aiplatform_v1_schema.GoogleCloudAiplatformV1Schema(
                                        description = '', 
                                        example = null, 
                                        format = '', 
                                        nullable = True, 
                                        properties = {
                                            'key' : 
                                            }, 
                                        required = [
                                            ''
                                            ], 
                                        type = 'TYPE_UNSPECIFIED', ), 
                                    nullable = True, 
                                    properties = {
                                        'key' : 
                                        }, 
                                    required = [
                                        ''
                                        ], 
                                    type = 'TYPE_UNSPECIFIED', ), )
                            ], )
                    ]
            )
        else:
            return GoogleCloudAiplatformV1GenerateContentRequest(
        )
        """

    def testGoogleCloudAiplatformV1GenerateContentRequest(self):
        """Test GoogleCloudAiplatformV1GenerateContentRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
