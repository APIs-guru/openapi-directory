# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1_schema_predict_prediction_time_series_forecasting_prediction_result import GoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult

class TestGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult(unittest.TestCase):
    """GoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult:
        """Test GoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult`
        """
        model = GoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult()
        if include_optional:
            return GoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult(
                quantile_predictions = [
                    1.337
                    ],
                quantile_values = [
                    1.337
                    ],
                tft_feature_importance = openapi_client.models.google_cloud_aiplatform_v1_schema_predict_prediction_tft_feature_importance.GoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance(
                    attribute_columns = [
                        ''
                        ], 
                    attribute_weights = [
                        1.337
                        ], 
                    context_columns = [
                        ''
                        ], 
                    context_weights = [
                        1.337
                        ], 
                    horizon_columns = [
                        ''
                        ], 
                    horizon_weights = [
                        1.337
                        ], ),
                value = 1.337
            )
        else:
            return GoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult(
        )
        """

    def testGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult(self):
        """Test GoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
