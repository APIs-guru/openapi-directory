# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1_publisher_model import GoogleCloudAiplatformV1PublisherModel

class TestGoogleCloudAiplatformV1PublisherModel(unittest.TestCase):
    """GoogleCloudAiplatformV1PublisherModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1PublisherModel:
        """Test GoogleCloudAiplatformV1PublisherModel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1PublisherModel`
        """
        model = GoogleCloudAiplatformV1PublisherModel()
        if include_optional:
            return GoogleCloudAiplatformV1PublisherModel(
                frameworks = [
                    ''
                    ],
                launch_stage = 'LAUNCH_STAGE_UNSPECIFIED',
                name = '',
                open_source_category = 'OPEN_SOURCE_CATEGORY_UNSPECIFIED',
                predict_schemata = openapi_client.models.google_cloud_aiplatform_v1_predict_schemata.GoogleCloudAiplatformV1PredictSchemata(
                    instance_schema_uri = '', 
                    parameters_schema_uri = '', 
                    prediction_schema_uri = '', ),
                publisher_model_template = '',
                supported_actions = openapi_client.models.google_cloud_aiplatform_v1_publisher_model_call_to_action.GoogleCloudAiplatformV1PublisherModelCallToAction(
                    create_application = openapi_client.models.google_cloud_aiplatform_v1_publisher_model_call_to_action_regional_resource_references.GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences(
                        references = {
                            'key' : openapi_client.models.google_cloud_aiplatform_v1_publisher_model_resource_reference.GoogleCloudAiplatformV1PublisherModelResourceReference(
                                description = '', 
                                resource_name = '', 
                                uri = '', 
                                use_case = '', )
                            }, 
                        resource_description = '', 
                        resource_title = '', 
                        resource_use_case = '', 
                        title = '', ), 
                    deploy = openapi_client.models.google_cloud_aiplatform_v1_publisher_model_call_to_action_deploy.GoogleCloudAiplatformV1PublisherModelCallToActionDeploy(
                        artifact_uri = '', 
                        automatic_resources = openapi_client.models.google_cloud_aiplatform_v1_automatic_resources.GoogleCloudAiplatformV1AutomaticResources(
                            max_replica_count = 56, 
                            min_replica_count = 56, ), 
                        container_spec = openapi_client.models.google_cloud_aiplatform_v1_model_container_spec.GoogleCloudAiplatformV1ModelContainerSpec(
                            args = [
                                ''
                                ], 
                            command = [
                                ''
                                ], 
                            deployment_timeout = '', 
                            env = [
                                openapi_client.models.google_cloud_aiplatform_v1_env_var.GoogleCloudAiplatformV1EnvVar(
                                    name = '', 
                                    value = '', )
                                ], 
                            grpc_ports = [
                                openapi_client.models.google_cloud_aiplatform_v1_port.GoogleCloudAiplatformV1Port(
                                    container_port = 56, )
                                ], 
                            health_probe = openapi_client.models.google_cloud_aiplatform_v1_probe.GoogleCloudAiplatformV1Probe(
                                exec = openapi_client.models.google_cloud_aiplatform_v1_probe_exec_action.GoogleCloudAiplatformV1ProbeExecAction(), 
                                period_seconds = 56, 
                                timeout_seconds = 56, ), 
                            health_route = '', 
                            image_uri = '', 
                            ports = [
                                openapi_client.models.google_cloud_aiplatform_v1_port.GoogleCloudAiplatformV1Port(
                                    container_port = 56, )
                                ], 
                            predict_route = '', 
                            shared_memory_size_mb = '', 
                            startup_probe = openapi_client.models.google_cloud_aiplatform_v1_probe.GoogleCloudAiplatformV1Probe(
                                period_seconds = 56, 
                                timeout_seconds = 56, ), ), 
                        dedicated_resources = openapi_client.models.google_cloud_aiplatform_v1_dedicated_resources.GoogleCloudAiplatformV1DedicatedResources(
                            autoscaling_metric_specs = [
                                openapi_client.models.google_cloud_aiplatform_v1_autoscaling_metric_spec.GoogleCloudAiplatformV1AutoscalingMetricSpec(
                                    metric_name = '', 
                                    target = 56, )
                                ], 
                            machine_spec = openapi_client.models.google_cloud_aiplatform_v1_machine_spec.GoogleCloudAiplatformV1MachineSpec(
                                accelerator_count = 56, 
                                accelerator_type = 'ACCELERATOR_TYPE_UNSPECIFIED', 
                                machine_type = '', 
                                tpu_topology = '', ), 
                            max_replica_count = 56, 
                            min_replica_count = 56, ), 
                        large_model_reference = openapi_client.models.google_cloud_aiplatform_v1_large_model_reference.GoogleCloudAiplatformV1LargeModelReference(
                            name = '', ), 
                        model_display_name = '', 
                        public_artifact_uri = '', 
                        shared_resources = '', 
                        title = '', ), 
                    deploy_gke = openapi_client.models.google_cloud_aiplatform_v1_publisher_model_call_to_action_deploy_gke.GoogleCloudAiplatformV1PublisherModelCallToActionDeployGke(
                        gke_yaml_configs = [
                            ''
                            ], ), 
                    open_evaluation_pipeline = openapi_client.models.google_cloud_aiplatform_v1_publisher_model_call_to_action_regional_resource_references.GoogleCloudAiplatformV1PublisherModelCallToActionRegionalResourceReferences(
                        resource_description = '', 
                        resource_title = '', 
                        resource_use_case = '', 
                        title = '', ), 
                    open_fine_tuning_pipeline = , 
                    open_fine_tuning_pipelines = openapi_client.models.google_cloud_aiplatform_v1_publisher_model_call_to_action_open_fine_tuning_pipelines.GoogleCloudAiplatformV1PublisherModelCallToActionOpenFineTuningPipelines(
                        fine_tuning_pipelines = [
                            
                            ], ), 
                    open_generation_ai_studio = , 
                    open_genie = , 
                    open_notebook = , 
                    open_notebooks = openapi_client.models.google_cloud_aiplatform_v1_publisher_model_call_to_action_open_notebooks.GoogleCloudAiplatformV1PublisherModelCallToActionOpenNotebooks(
                        notebooks = [
                            
                            ], ), 
                    open_prompt_tuning_pipeline = , 
                    request_access = , 
                    view_rest_api = openapi_client.models.google_cloud_aiplatform_v1_publisher_model_call_to_action_view_rest_api.GoogleCloudAiplatformV1PublisherModelCallToActionViewRestApi(
                        documentations = [
                            openapi_client.models.google_cloud_aiplatform_v1_publisher_model_documentation.GoogleCloudAiplatformV1PublisherModelDocumentation(
                                content = '', 
                                title = '', )
                            ], 
                        title = '', ), ),
                version_id = '',
                version_state = 'VERSION_STATE_UNSPECIFIED'
            )
        else:
            return GoogleCloudAiplatformV1PublisherModel(
        )
        """

    def testGoogleCloudAiplatformV1PublisherModel(self):
        """Test GoogleCloudAiplatformV1PublisherModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
