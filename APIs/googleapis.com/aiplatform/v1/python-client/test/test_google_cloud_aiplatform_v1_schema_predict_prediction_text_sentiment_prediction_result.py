# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1_schema_predict_prediction_text_sentiment_prediction_result import GoogleCloudAiplatformV1SchemaPredictPredictionTextSentimentPredictionResult

class TestGoogleCloudAiplatformV1SchemaPredictPredictionTextSentimentPredictionResult(unittest.TestCase):
    """GoogleCloudAiplatformV1SchemaPredictPredictionTextSentimentPredictionResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1SchemaPredictPredictionTextSentimentPredictionResult:
        """Test GoogleCloudAiplatformV1SchemaPredictPredictionTextSentimentPredictionResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1SchemaPredictPredictionTextSentimentPredictionResult`
        """
        model = GoogleCloudAiplatformV1SchemaPredictPredictionTextSentimentPredictionResult()
        if include_optional:
            return GoogleCloudAiplatformV1SchemaPredictPredictionTextSentimentPredictionResult(
                sentiment = 56
            )
        else:
            return GoogleCloudAiplatformV1SchemaPredictPredictionTextSentimentPredictionResult(
        )
        """

    def testGoogleCloudAiplatformV1SchemaPredictPredictionTextSentimentPredictionResult(self):
        """Test GoogleCloudAiplatformV1SchemaPredictPredictionTextSentimentPredictionResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
