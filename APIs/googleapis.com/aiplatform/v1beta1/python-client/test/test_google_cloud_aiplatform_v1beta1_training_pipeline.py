# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1beta1_training_pipeline import GoogleCloudAiplatformV1beta1TrainingPipeline

class TestGoogleCloudAiplatformV1beta1TrainingPipeline(unittest.TestCase):
    """GoogleCloudAiplatformV1beta1TrainingPipeline unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1beta1TrainingPipeline:
        """Test GoogleCloudAiplatformV1beta1TrainingPipeline
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1beta1TrainingPipeline`
        """
        model = GoogleCloudAiplatformV1beta1TrainingPipeline()
        if include_optional:
            return GoogleCloudAiplatformV1beta1TrainingPipeline(
                create_time = '',
                display_name = '',
                encryption_spec = openapi_client.models.google_cloud_aiplatform_v1beta1_encryption_spec.GoogleCloudAiplatformV1beta1EncryptionSpec(
                    kms_key_name = '', ),
                end_time = '',
                error = openapi_client.models.google_rpc_status.GoogleRpcStatus(
                    code = 56, 
                    details = [
                        {
                            'key' : null
                            }
                        ], 
                    message = '', ),
                input_data_config = openapi_client.models.google_cloud_aiplatform_v1beta1_input_data_config.GoogleCloudAiplatformV1beta1InputDataConfig(
                    annotation_schema_uri = '', 
                    annotations_filter = '', 
                    bigquery_destination = openapi_client.models.google_cloud_aiplatform_v1beta1_big_query_destination.GoogleCloudAiplatformV1beta1BigQueryDestination(
                        output_uri = '', ), 
                    dataset_id = '', 
                    filter_split = openapi_client.models.google_cloud_aiplatform_v1beta1_filter_split.GoogleCloudAiplatformV1beta1FilterSplit(
                        test_filter = '', 
                        training_filter = '', 
                        validation_filter = '', ), 
                    fraction_split = openapi_client.models.google_cloud_aiplatform_v1beta1_fraction_split.GoogleCloudAiplatformV1beta1FractionSplit(
                        test_fraction = 1.337, 
                        training_fraction = 1.337, 
                        validation_fraction = 1.337, ), 
                    gcs_destination = openapi_client.models.google_cloud_aiplatform_v1beta1_gcs_destination.GoogleCloudAiplatformV1beta1GcsDestination(
                        output_uri_prefix = '', ), 
                    persist_ml_use_assignment = True, 
                    predefined_split = openapi_client.models.google_cloud_aiplatform_v1beta1_predefined_split.GoogleCloudAiplatformV1beta1PredefinedSplit(
                        key = '', ), 
                    saved_query_id = '', 
                    stratified_split = openapi_client.models.google_cloud_aiplatform_v1beta1_stratified_split.GoogleCloudAiplatformV1beta1StratifiedSplit(
                        key = '', 
                        test_fraction = 1.337, 
                        training_fraction = 1.337, 
                        validation_fraction = 1.337, ), 
                    timestamp_split = openapi_client.models.google_cloud_aiplatform_v1beta1_timestamp_split.GoogleCloudAiplatformV1beta1TimestampSplit(
                        key = '', 
                        test_fraction = 1.337, 
                        training_fraction = 1.337, 
                        validation_fraction = 1.337, ), ),
                labels = {
                    'key' : ''
                    },
                model_id = '',
                model_to_upload = openapi_client.models.google_cloud_aiplatform_v1beta1_model.GoogleCloudAiplatformV1beta1Model(
                    artifact_uri = '', 
                    base_model_source = openapi_client.models.google_cloud_aiplatform_v1beta1_model_base_model_source.GoogleCloudAiplatformV1beta1ModelBaseModelSource(
                        genie_source = openapi_client.models.google_cloud_aiplatform_v1beta1_genie_source.GoogleCloudAiplatformV1beta1GenieSource(
                            base_model_uri = '', ), 
                        model_garden_source = openapi_client.models.google_cloud_aiplatform_v1beta1_model_garden_source.GoogleCloudAiplatformV1beta1ModelGardenSource(
                            public_model_name = '', ), ), 
                    container_spec = openapi_client.models.google_cloud_aiplatform_v1beta1_model_container_spec.GoogleCloudAiplatformV1beta1ModelContainerSpec(
                        args = [
                            ''
                            ], 
                        command = [
                            ''
                            ], 
                        deployment_timeout = '', 
                        env = [
                            openapi_client.models.google_cloud_aiplatform_v1beta1_env_var.GoogleCloudAiplatformV1beta1EnvVar(
                                name = '', 
                                value = '', )
                            ], 
                        grpc_ports = [
                            openapi_client.models.google_cloud_aiplatform_v1beta1_port.GoogleCloudAiplatformV1beta1Port(
                                container_port = 56, )
                            ], 
                        health_probe = openapi_client.models.google_cloud_aiplatform_v1beta1_probe.GoogleCloudAiplatformV1beta1Probe(
                            exec = openapi_client.models.google_cloud_aiplatform_v1beta1_probe_exec_action.GoogleCloudAiplatformV1beta1ProbeExecAction(), 
                            period_seconds = 56, 
                            timeout_seconds = 56, ), 
                        health_route = '', 
                        image_uri = '', 
                        ports = [
                            openapi_client.models.google_cloud_aiplatform_v1beta1_port.GoogleCloudAiplatformV1beta1Port(
                                container_port = 56, )
                            ], 
                        predict_route = '', 
                        shared_memory_size_mb = '', 
                        startup_probe = openapi_client.models.google_cloud_aiplatform_v1beta1_probe.GoogleCloudAiplatformV1beta1Probe(
                            period_seconds = 56, 
                            timeout_seconds = 56, ), ), 
                    create_time = '', 
                    deployed_models = [
                        openapi_client.models.google_cloud_aiplatform_v1beta1_deployed_model_ref.GoogleCloudAiplatformV1beta1DeployedModelRef(
                            deployed_model_id = '', 
                            endpoint = '', )
                        ], 
                    description = '', 
                    display_name = '', 
                    encryption_spec = openapi_client.models.google_cloud_aiplatform_v1beta1_encryption_spec.GoogleCloudAiplatformV1beta1EncryptionSpec(
                        kms_key_name = '', ), 
                    etag = '', 
                    explanation_spec = openapi_client.models.google_cloud_aiplatform_v1beta1_explanation_spec.GoogleCloudAiplatformV1beta1ExplanationSpec(
                        metadata = openapi_client.models.google_cloud_aiplatform_v1beta1_explanation_metadata.GoogleCloudAiplatformV1beta1ExplanationMetadata(
                            feature_attributions_schema_uri = '', 
                            inputs = {
                                'key' : openapi_client.models.google_cloud_aiplatform_v1beta1_explanation_metadata_input_metadata.GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadata(
                                    dense_shape_tensor_name = '', 
                                    encoded_baselines = [
                                        null
                                        ], 
                                    encoded_tensor_name = '', 
                                    encoding = 'ENCODING_UNSPECIFIED', 
                                    feature_value_domain = openapi_client.models.google_cloud_aiplatform_v1beta1_explanation_metadata_input_metadata_feature_value_domain.GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain(
                                        max_value = 1.337, 
                                        min_value = 1.337, 
                                        original_mean = 1.337, 
                                        original_stddev = 1.337, ), 
                                    group_name = '', 
                                    index_feature_mapping = [
                                        ''
                                        ], 
                                    indices_tensor_name = '', 
                                    input_baselines = [
                                        null
                                        ], 
                                    input_tensor_name = '', 
                                    modality = '', 
                                    visualization = openapi_client.models.google_cloud_aiplatform_v1beta1_explanation_metadata_input_metadata_visualization.GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualization(
                                        clip_percent_lowerbound = 1.337, 
                                        clip_percent_upperbound = 1.337, 
                                        color_map = 'COLOR_MAP_UNSPECIFIED', 
                                        overlay_type = 'OVERLAY_TYPE_UNSPECIFIED', 
                                        polarity = 'POLARITY_UNSPECIFIED', 
                                        type = 'TYPE_UNSPECIFIED', ), )
                                }, 
                            latent_space_source = '', 
                            outputs = {
                                'key' : openapi_client.models.google_cloud_aiplatform_v1beta1_explanation_metadata_output_metadata.GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata(
                                    display_name_mapping_key = '', 
                                    index_display_name_mapping = null, 
                                    output_tensor_name = '', )
                                }, ), 
                        parameters = openapi_client.models.google_cloud_aiplatform_v1beta1_explanation_parameters.GoogleCloudAiplatformV1beta1ExplanationParameters(
                            examples = openapi_client.models.google_cloud_aiplatform_v1beta1_examples.GoogleCloudAiplatformV1beta1Examples(
                                example_gcs_source = openapi_client.models.google_cloud_aiplatform_v1beta1_examples_example_gcs_source.GoogleCloudAiplatformV1beta1ExamplesExampleGcsSource(
                                    data_format = 'DATA_FORMAT_UNSPECIFIED', 
                                    gcs_source = openapi_client.models.google_cloud_aiplatform_v1beta1_gcs_source.GoogleCloudAiplatformV1beta1GcsSource(
                                        uris = [
                                            ''
                                            ], ), ), 
                                gcs_source = openapi_client.models.google_cloud_aiplatform_v1beta1_gcs_source.GoogleCloudAiplatformV1beta1GcsSource(), 
                                nearest_neighbor_search_config = null, 
                                neighbor_count = 56, 
                                presets = openapi_client.models.google_cloud_aiplatform_v1beta1_presets.GoogleCloudAiplatformV1beta1Presets(
                                    modality = 'MODALITY_UNSPECIFIED', 
                                    query = 'PRECISE', ), ), 
                            integrated_gradients_attribution = openapi_client.models.google_cloud_aiplatform_v1beta1_integrated_gradients_attribution.GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution(
                                blur_baseline_config = openapi_client.models.google_cloud_aiplatform_v1beta1_blur_baseline_config.GoogleCloudAiplatformV1beta1BlurBaselineConfig(
                                    max_blur_sigma = 1.337, ), 
                                smooth_grad_config = openapi_client.models.google_cloud_aiplatform_v1beta1_smooth_grad_config.GoogleCloudAiplatformV1beta1SmoothGradConfig(
                                    feature_noise_sigma = openapi_client.models.google_cloud_aiplatform_v1beta1_feature_noise_sigma.GoogleCloudAiplatformV1beta1FeatureNoiseSigma(
                                        noise_sigma = [
                                            openapi_client.models.google_cloud_aiplatform_v1beta1_feature_noise_sigma_noise_sigma_for_feature.GoogleCloudAiplatformV1beta1FeatureNoiseSigmaNoiseSigmaForFeature(
                                                name = '', 
                                                sigma = 1.337, )
                                            ], ), 
                                    noise_sigma = 1.337, 
                                    noisy_sample_count = 56, ), 
                                step_count = 56, ), 
                            output_indices = [
                                null
                                ], 
                            sampled_shapley_attribution = openapi_client.models.google_cloud_aiplatform_v1beta1_sampled_shapley_attribution.GoogleCloudAiplatformV1beta1SampledShapleyAttribution(
                                path_count = 56, ), 
                            top_k = 56, 
                            xrai_attribution = openapi_client.models.google_cloud_aiplatform_v1beta1_xrai_attribution.GoogleCloudAiplatformV1beta1XraiAttribution(
                                step_count = 56, ), ), ), 
                    labels = {
                        'key' : ''
                        }, 
                    metadata = null, 
                    metadata_artifact = '', 
                    metadata_schema_uri = '', 
                    model_source_info = openapi_client.models.google_cloud_aiplatform_v1beta1_model_source_info.GoogleCloudAiplatformV1beta1ModelSourceInfo(
                        copy = True, 
                        source_type = 'MODEL_SOURCE_TYPE_UNSPECIFIED', ), 
                    name = '', 
                    original_model_info = openapi_client.models.google_cloud_aiplatform_v1beta1_model_original_model_info.GoogleCloudAiplatformV1beta1ModelOriginalModelInfo(
                        model = '', ), 
                    predict_schemata = openapi_client.models.google_cloud_aiplatform_v1beta1_predict_schemata.GoogleCloudAiplatformV1beta1PredictSchemata(
                        instance_schema_uri = '', 
                        parameters_schema_uri = '', 
                        prediction_schema_uri = '', ), 
                    supported_deployment_resources_types = [
                        'DEPLOYMENT_RESOURCES_TYPE_UNSPECIFIED'
                        ], 
                    supported_export_formats = [
                        openapi_client.models.google_cloud_aiplatform_v1beta1_model_export_format.GoogleCloudAiplatformV1beta1ModelExportFormat(
                            exportable_contents = [
                                'EXPORTABLE_CONTENT_UNSPECIFIED'
                                ], 
                            id = '', )
                        ], 
                    supported_input_storage_formats = [
                        ''
                        ], 
                    supported_output_storage_formats = [
                        ''
                        ], 
                    training_pipeline = '', 
                    update_time = '', 
                    version_aliases = [
                        ''
                        ], 
                    version_create_time = '', 
                    version_description = '', 
                    version_id = '', 
                    version_update_time = '', ),
                name = '',
                parent_model = '',
                start_time = '',
                state = 'PIPELINE_STATE_UNSPECIFIED',
                training_task_definition = '',
                training_task_inputs = None,
                training_task_metadata = None,
                update_time = ''
            )
        else:
            return GoogleCloudAiplatformV1beta1TrainingPipeline(
        )
        """

    def testGoogleCloudAiplatformV1beta1TrainingPipeline(self):
        """Test GoogleCloudAiplatformV1beta1TrainingPipeline"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
