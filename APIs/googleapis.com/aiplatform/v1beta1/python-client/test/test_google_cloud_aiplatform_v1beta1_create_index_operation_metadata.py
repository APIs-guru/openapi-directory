# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1beta1_create_index_operation_metadata import GoogleCloudAiplatformV1beta1CreateIndexOperationMetadata

class TestGoogleCloudAiplatformV1beta1CreateIndexOperationMetadata(unittest.TestCase):
    """GoogleCloudAiplatformV1beta1CreateIndexOperationMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1beta1CreateIndexOperationMetadata:
        """Test GoogleCloudAiplatformV1beta1CreateIndexOperationMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1beta1CreateIndexOperationMetadata`
        """
        model = GoogleCloudAiplatformV1beta1CreateIndexOperationMetadata()
        if include_optional:
            return GoogleCloudAiplatformV1beta1CreateIndexOperationMetadata(
                generic_metadata = openapi_client.models.google_cloud_aiplatform_v1beta1_generic_operation_metadata.GoogleCloudAiplatformV1beta1GenericOperationMetadata(
                    create_time = '', 
                    partial_failures = [
                        openapi_client.models.google_rpc_status.GoogleRpcStatus(
                            code = 56, 
                            details = [
                                {
                                    'key' : null
                                    }
                                ], 
                            message = '', )
                        ], 
                    update_time = '', ),
                nearest_neighbor_search_operation_metadata = openapi_client.models.google_cloud_aiplatform_v1beta1_nearest_neighbor_search_operation_metadata.GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadata(
                    content_validation_stats = [
                        openapi_client.models.google_cloud_aiplatform_v1beta1_nearest_neighbor_search_operation_metadata_content_validation_stats.GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataContentValidationStats(
                            invalid_record_count = '', 
                            partial_errors = [
                                openapi_client.models.google_cloud_aiplatform_v1beta1_nearest_neighbor_search_operation_metadata_record_error.GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError(
                                    embedding_id = '', 
                                    error_message = '', 
                                    error_type = 'ERROR_TYPE_UNSPECIFIED', 
                                    raw_record = '', 
                                    source_gcs_uri = '', )
                                ], 
                            source_gcs_uri = '', 
                            valid_record_count = '', )
                        ], 
                    data_bytes_count = '', )
            )
        else:
            return GoogleCloudAiplatformV1beta1CreateIndexOperationMetadata(
        )
        """

    def testGoogleCloudAiplatformV1beta1CreateIndexOperationMetadata(self):
        """Test GoogleCloudAiplatformV1beta1CreateIndexOperationMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
