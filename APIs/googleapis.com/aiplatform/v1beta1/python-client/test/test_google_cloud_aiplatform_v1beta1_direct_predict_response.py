# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1beta1_direct_predict_response import GoogleCloudAiplatformV1beta1DirectPredictResponse

class TestGoogleCloudAiplatformV1beta1DirectPredictResponse(unittest.TestCase):
    """GoogleCloudAiplatformV1beta1DirectPredictResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1beta1DirectPredictResponse:
        """Test GoogleCloudAiplatformV1beta1DirectPredictResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1beta1DirectPredictResponse`
        """
        model = GoogleCloudAiplatformV1beta1DirectPredictResponse()
        if include_optional:
            return GoogleCloudAiplatformV1beta1DirectPredictResponse(
                outputs = [
                    openapi_client.models.google_cloud_aiplatform_v1beta1_tensor.GoogleCloudAiplatformV1beta1Tensor(
                        bool_val = [
                            True
                            ], 
                        bytes_val = [
                            'YQ=='
                            ], 
                        double_val = [
                            1.337
                            ], 
                        dtype = 'DATA_TYPE_UNSPECIFIED', 
                        float_val = [
                            1.337
                            ], 
                        int64_val = [
                            ''
                            ], 
                        int_val = [
                            56
                            ], 
                        list_val = [
                            openapi_client.models.google_cloud_aiplatform_v1beta1_tensor.GoogleCloudAiplatformV1beta1Tensor(
                                dtype = 'DATA_TYPE_UNSPECIFIED', 
                                shape = [
                                    ''
                                    ], 
                                string_val = [
                                    ''
                                    ], 
                                struct_val = {
                                    'key' : 
                                    }, 
                                tensor_val = 'YQ==', 
                                uint64_val = [
                                    ''
                                    ], 
                                uint_val = [
                                    56
                                    ], )
                            ], 
                        shape = [
                            ''
                            ], 
                        string_val = [
                            ''
                            ], 
                        struct_val = {
                            'key' : 
                            }, 
                        tensor_val = 'YQ==', 
                        uint64_val = [
                            ''
                            ], 
                        uint_val = [
                            56
                            ], )
                    ],
                parameters = openapi_client.models.google_cloud_aiplatform_v1beta1_tensor.GoogleCloudAiplatformV1beta1Tensor(
                    bool_val = [
                        True
                        ], 
                    bytes_val = [
                        'YQ=='
                        ], 
                    double_val = [
                        1.337
                        ], 
                    dtype = 'DATA_TYPE_UNSPECIFIED', 
                    float_val = [
                        1.337
                        ], 
                    int64_val = [
                        ''
                        ], 
                    int_val = [
                        56
                        ], 
                    list_val = [
                        openapi_client.models.google_cloud_aiplatform_v1beta1_tensor.GoogleCloudAiplatformV1beta1Tensor(
                            dtype = 'DATA_TYPE_UNSPECIFIED', 
                            shape = [
                                ''
                                ], 
                            string_val = [
                                ''
                                ], 
                            struct_val = {
                                'key' : 
                                }, 
                            tensor_val = 'YQ==', 
                            uint64_val = [
                                ''
                                ], 
                            uint_val = [
                                56
                                ], )
                        ], 
                    shape = [
                        ''
                        ], 
                    string_val = [
                        ''
                        ], 
                    struct_val = {
                        'key' : 
                        }, 
                    tensor_val = 'YQ==', 
                    uint64_val = [
                        ''
                        ], 
                    uint_val = [
                        56
                        ], )
            )
        else:
            return GoogleCloudAiplatformV1beta1DirectPredictResponse(
        )
        """

    def testGoogleCloudAiplatformV1beta1DirectPredictResponse(self):
        """Test GoogleCloudAiplatformV1beta1DirectPredictResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
