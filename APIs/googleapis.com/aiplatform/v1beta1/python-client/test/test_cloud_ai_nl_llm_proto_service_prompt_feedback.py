# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cloud_ai_nl_llm_proto_service_prompt_feedback import CloudAiNlLlmProtoServicePromptFeedback

class TestCloudAiNlLlmProtoServicePromptFeedback(unittest.TestCase):
    """CloudAiNlLlmProtoServicePromptFeedback unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CloudAiNlLlmProtoServicePromptFeedback:
        """Test CloudAiNlLlmProtoServicePromptFeedback
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CloudAiNlLlmProtoServicePromptFeedback`
        """
        model = CloudAiNlLlmProtoServicePromptFeedback()
        if include_optional:
            return CloudAiNlLlmProtoServicePromptFeedback(
                block_reason = 'BLOCKED_REASON_UNSPECIFIED',
                block_reason_message = '',
                safety_ratings = [
                    openapi_client.models.cloud_ai_nl_llm_proto_service_safety_rating.CloudAiNlLlmProtoServiceSafetyRating(
                        blocked = True, 
                        category = 'HARM_CATEGORY_UNSPECIFIED', 
                        influential_terms = [
                            openapi_client.models.cloud_ai_nl_llm_proto_service_safety_rating_influential_term.CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm(
                                begin_offset = 56, 
                                confidence = 1.337, 
                                source = 'SOURCE_UNSPECIFIED', 
                                term = '', )
                            ], 
                        probability = 'HARM_PROBABILITY_UNSPECIFIED', 
                        probability_score = 1.337, 
                        severity = 'HARM_SEVERITY_UNSPECIFIED', 
                        severity_score = 1.337, )
                    ]
            )
        else:
            return CloudAiNlLlmProtoServicePromptFeedback(
        )
        """

    def testCloudAiNlLlmProtoServicePromptFeedback(self):
        """Test CloudAiNlLlmProtoServicePromptFeedback"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
