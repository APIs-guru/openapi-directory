# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1beta1_list_custom_jobs_response import GoogleCloudAiplatformV1beta1ListCustomJobsResponse

class TestGoogleCloudAiplatformV1beta1ListCustomJobsResponse(unittest.TestCase):
    """GoogleCloudAiplatformV1beta1ListCustomJobsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1beta1ListCustomJobsResponse:
        """Test GoogleCloudAiplatformV1beta1ListCustomJobsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1beta1ListCustomJobsResponse`
        """
        model = GoogleCloudAiplatformV1beta1ListCustomJobsResponse()
        if include_optional:
            return GoogleCloudAiplatformV1beta1ListCustomJobsResponse(
                custom_jobs = [
                    openapi_client.models.google_cloud_aiplatform_v1beta1_custom_job.GoogleCloudAiplatformV1beta1CustomJob(
                        create_time = '', 
                        display_name = '', 
                        encryption_spec = openapi_client.models.google_cloud_aiplatform_v1beta1_encryption_spec.GoogleCloudAiplatformV1beta1EncryptionSpec(
                            kms_key_name = '', ), 
                        end_time = '', 
                        error = openapi_client.models.google_rpc_status.GoogleRpcStatus(
                            code = 56, 
                            details = [
                                {
                                    'key' : null
                                    }
                                ], 
                            message = '', ), 
                        job_spec = openapi_client.models.google_cloud_aiplatform_v1beta1_custom_job_spec.GoogleCloudAiplatformV1beta1CustomJobSpec(
                            base_output_directory = openapi_client.models.google_cloud_aiplatform_v1beta1_gcs_destination.GoogleCloudAiplatformV1beta1GcsDestination(
                                output_uri_prefix = '', ), 
                            enable_dashboard_access = True, 
                            enable_web_access = True, 
                            experiment = '', 
                            experiment_run = '', 
                            models = [
                                ''
                                ], 
                            network = '', 
                            persistent_resource_id = '', 
                            protected_artifact_location_id = '', 
                            reserved_ip_ranges = [
                                ''
                                ], 
                            scheduling = openapi_client.models.google_cloud_aiplatform_v1beta1_scheduling.GoogleCloudAiplatformV1beta1Scheduling(
                                disable_retries = True, 
                                restart_job_on_worker_restart = True, 
                                timeout = '', ), 
                            service_account = '', 
                            tensorboard = '', 
                            worker_pool_specs = [
                                openapi_client.models.google_cloud_aiplatform_v1beta1_worker_pool_spec.GoogleCloudAiplatformV1beta1WorkerPoolSpec(
                                    container_spec = openapi_client.models.google_cloud_aiplatform_v1beta1_container_spec.GoogleCloudAiplatformV1beta1ContainerSpec(
                                        args = [
                                            ''
                                            ], 
                                        command = [
                                            ''
                                            ], 
                                        env = [
                                            openapi_client.models.google_cloud_aiplatform_v1beta1_env_var.GoogleCloudAiplatformV1beta1EnvVar(
                                                name = '', 
                                                value = '', )
                                            ], 
                                        image_uri = '', ), 
                                    disk_spec = openapi_client.models.google_cloud_aiplatform_v1beta1_disk_spec.GoogleCloudAiplatformV1beta1DiskSpec(
                                        boot_disk_size_gb = 56, 
                                        boot_disk_type = '', ), 
                                    machine_spec = openapi_client.models.google_cloud_aiplatform_v1beta1_machine_spec.GoogleCloudAiplatformV1beta1MachineSpec(
                                        accelerator_count = 56, 
                                        accelerator_type = 'ACCELERATOR_TYPE_UNSPECIFIED', 
                                        machine_type = '', 
                                        tpu_topology = '', ), 
                                    nfs_mounts = [
                                        openapi_client.models.google_cloud_aiplatform_v1beta1_nfs_mount.GoogleCloudAiplatformV1beta1NfsMount(
                                            mount_point = '', 
                                            path = '', 
                                            server = '', )
                                        ], 
                                    python_package_spec = openapi_client.models.google_cloud_aiplatform_v1beta1_python_package_spec.GoogleCloudAiplatformV1beta1PythonPackageSpec(
                                        executor_image_uri = '', 
                                        package_uris = [
                                            ''
                                            ], 
                                        python_module = '', ), 
                                    replica_count = '', )
                                ], ), 
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        start_time = '', 
                        state = 'JOB_STATE_UNSPECIFIED', 
                        update_time = '', 
                        web_access_uris = {
                            'key' : ''
                            }, )
                    ],
                next_page_token = ''
            )
        else:
            return GoogleCloudAiplatformV1beta1ListCustomJobsResponse(
        )
        """

    def testGoogleCloudAiplatformV1beta1ListCustomJobsResponse(self):
        """Test GoogleCloudAiplatformV1beta1ListCustomJobsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
