# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1beta1_list_data_labeling_jobs_response import GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse

class TestGoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse(unittest.TestCase):
    """GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse:
        """Test GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse`
        """
        model = GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse()
        if include_optional:
            return GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse(
                data_labeling_jobs = [
                    openapi_client.models.google_cloud_aiplatform_v1beta1_data_labeling_job.GoogleCloudAiplatformV1beta1DataLabelingJob(
                        active_learning_config = openapi_client.models.google_cloud_aiplatform_v1beta1_active_learning_config.GoogleCloudAiplatformV1beta1ActiveLearningConfig(
                            max_data_item_count = '', 
                            max_data_item_percentage = 56, 
                            sample_config = openapi_client.models.google_cloud_aiplatform_v1beta1_sample_config.GoogleCloudAiplatformV1beta1SampleConfig(
                                following_batch_sample_percentage = 56, 
                                initial_batch_sample_percentage = 56, 
                                sample_strategy = 'SAMPLE_STRATEGY_UNSPECIFIED', ), 
                            training_config = openapi_client.models.google_cloud_aiplatform_v1beta1_training_config.GoogleCloudAiplatformV1beta1TrainingConfig(
                                timeout_training_milli_hours = '', ), ), 
                        annotation_labels = {
                            'key' : ''
                            }, 
                        create_time = '', 
                        current_spend = openapi_client.models.google_type_money.GoogleTypeMoney(
                            currency_code = '', 
                            nanos = 56, 
                            units = '', ), 
                        datasets = [
                            ''
                            ], 
                        display_name = '', 
                        encryption_spec = openapi_client.models.google_cloud_aiplatform_v1beta1_encryption_spec.GoogleCloudAiplatformV1beta1EncryptionSpec(
                            kms_key_name = '', ), 
                        error = openapi_client.models.google_rpc_status.GoogleRpcStatus(
                            code = 56, 
                            details = [
                                {
                                    'key' : null
                                    }
                                ], 
                            message = '', ), 
                        inputs = null, 
                        inputs_schema_uri = '', 
                        instruction_uri = '', 
                        labeler_count = 56, 
                        labeling_progress = 56, 
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        specialist_pools = [
                            ''
                            ], 
                        state = 'JOB_STATE_UNSPECIFIED', 
                        update_time = '', )
                    ],
                next_page_token = ''
            )
        else:
            return GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse(
        )
        """

    def testGoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse(self):
        """Test GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
