# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1beta1_list_persistent_resources_response import GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse

class TestGoogleCloudAiplatformV1beta1ListPersistentResourcesResponse(unittest.TestCase):
    """GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse:
        """Test GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse`
        """
        model = GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse()
        if include_optional:
            return GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse(
                next_page_token = '',
                persistent_resources = [
                    openapi_client.models.google_cloud_aiplatform_v1beta1_persistent_resource.GoogleCloudAiplatformV1beta1PersistentResource(
                        create_time = '', 
                        display_name = '', 
                        encryption_spec = openapi_client.models.google_cloud_aiplatform_v1beta1_encryption_spec.GoogleCloudAiplatformV1beta1EncryptionSpec(
                            kms_key_name = '', ), 
                        error = openapi_client.models.google_rpc_status.GoogleRpcStatus(
                            code = 56, 
                            details = [
                                {
                                    'key' : null
                                    }
                                ], 
                            message = '', ), 
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        network = '', 
                        reserved_ip_ranges = [
                            ''
                            ], 
                        resource_pools = [
                            openapi_client.models.google_cloud_aiplatform_v1beta1_resource_pool.GoogleCloudAiplatformV1beta1ResourcePool(
                                autoscaling_spec = openapi_client.models.google_cloud_aiplatform_v1beta1_resource_pool_autoscaling_spec.GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpec(
                                    max_replica_count = '', 
                                    min_replica_count = '', ), 
                                disk_spec = openapi_client.models.google_cloud_aiplatform_v1beta1_disk_spec.GoogleCloudAiplatformV1beta1DiskSpec(
                                    boot_disk_size_gb = 56, 
                                    boot_disk_type = '', ), 
                                id = '', 
                                machine_spec = openapi_client.models.google_cloud_aiplatform_v1beta1_machine_spec.GoogleCloudAiplatformV1beta1MachineSpec(
                                    accelerator_count = 56, 
                                    accelerator_type = 'ACCELERATOR_TYPE_UNSPECIFIED', 
                                    machine_type = '', 
                                    tpu_topology = '', ), 
                                replica_count = '', 
                                used_replica_count = '', )
                            ], 
                        resource_runtime = openapi_client.models.google_cloud_aiplatform_v1beta1_resource_runtime.GoogleCloudAiplatformV1beta1ResourceRuntime(
                            access_uris = {
                                'key' : ''
                                }, 
                            notebook_runtime_template = '', ), 
                        resource_runtime_spec = openapi_client.models.google_cloud_aiplatform_v1beta1_resource_runtime_spec.GoogleCloudAiplatformV1beta1ResourceRuntimeSpec(
                            ray_spec = openapi_client.models.google_cloud_aiplatform_v1beta1_ray_spec.GoogleCloudAiplatformV1beta1RaySpec(
                                head_node_resource_pool_id = '', 
                                image_uri = '', 
                                ray_metric_spec = openapi_client.models.google_cloud_aiplatform_v1beta1_ray_metric_spec.GoogleCloudAiplatformV1beta1RayMetricSpec(
                                    disabled = True, ), 
                                resource_pool_images = {
                                    'key' : ''
                                    }, ), 
                            service_account_spec = openapi_client.models.google_cloud_aiplatform_v1beta1_service_account_spec.GoogleCloudAiplatformV1beta1ServiceAccountSpec(
                                enable_custom_service_account = True, 
                                service_account = '', ), ), 
                        start_time = '', 
                        state = 'STATE_UNSPECIFIED', 
                        update_time = '', )
                    ]
            )
        else:
            return GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse(
        )
        """

    def testGoogleCloudAiplatformV1beta1ListPersistentResourcesResponse(self):
        """Test GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
