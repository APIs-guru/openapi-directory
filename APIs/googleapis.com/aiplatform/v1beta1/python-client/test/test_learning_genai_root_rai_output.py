# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.learning_genai_root_rai_output import LearningGenaiRootRAIOutput

class TestLearningGenaiRootRAIOutput(unittest.TestCase):
    """LearningGenaiRootRAIOutput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LearningGenaiRootRAIOutput:
        """Test LearningGenaiRootRAIOutput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LearningGenaiRootRAIOutput`
        """
        model = LearningGenaiRootRAIOutput()
        if include_optional:
            return LearningGenaiRootRAIOutput(
                allowed = True,
                harm = openapi_client.models.learning_genai_root_harm.LearningGenaiRootHarm(
                    contextual_dangerous = True, 
                    csam = True, 
                    fringe = True, 
                    grail_image_harm_type = openapi_client.models.learning_genai_root_harm_grail_image_harm_type.LearningGenaiRootHarmGrailImageHarmType(
                        image_harm_type = [
                            'IMAGE_HARM_TYPE_UNSPECIFIED'
                            ], ), 
                    grail_text_harm_type = openapi_client.models.learning_genai_root_harm_grail_text_harm_type.LearningGenaiRootHarmGrailTextHarmType(
                        harm_type = [
                            'HARM_TYPE_UNSPECIFIED'
                            ], ), 
                    image_csam = True, 
                    image_pedo = True, 
                    image_porn = True, 
                    image_violence = True, 
                    pqc = True, 
                    safetycat = openapi_client.models.learning_genai_root_harm_safety_cat_categories.LearningGenaiRootHarmSafetyCatCategories(
                        categories = [
                            'SAFETYCAT_CATEGORY_UNSPECIFIED'
                            ], ), 
                    spii = openapi_client.models.learning_genai_root_harm_spii_filter.LearningGenaiRootHarmSpiiFilter(
                        us_bank_routing_micr = True, 
                        us_employer_identification_number = True, 
                        us_social_security_number = True, ), 
                    threshold = 1.337, 
                    video_frame_csam = True, 
                    video_frame_pedo = True, 
                    video_frame_porn = True, 
                    video_frame_violence = True, ),
                name = '',
                score = 1.337
            )
        else:
            return LearningGenaiRootRAIOutput(
        )
        """

    def testLearningGenaiRootRAIOutput(self):
        """Test LearningGenaiRootRAIOutput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
