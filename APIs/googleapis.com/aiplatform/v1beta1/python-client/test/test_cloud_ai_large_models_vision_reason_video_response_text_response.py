# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cloud_ai_large_models_vision_reason_video_response_text_response import CloudAiLargeModelsVisionReasonVideoResponseTextResponse

class TestCloudAiLargeModelsVisionReasonVideoResponseTextResponse(unittest.TestCase):
    """CloudAiLargeModelsVisionReasonVideoResponseTextResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CloudAiLargeModelsVisionReasonVideoResponseTextResponse:
        """Test CloudAiLargeModelsVisionReasonVideoResponseTextResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CloudAiLargeModelsVisionReasonVideoResponseTextResponse`
        """
        model = CloudAiLargeModelsVisionReasonVideoResponseTextResponse()
        if include_optional:
            return CloudAiLargeModelsVisionReasonVideoResponseTextResponse(
                relative_temporal_partition = openapi_client.models.cloud_ai_large_models_vision_relative_temporal_partition.CloudAiLargeModelsVisionRelativeTemporalPartition(
                    end_offset = '', 
                    start_offset = '', ),
                text = ''
            )
        else:
            return CloudAiLargeModelsVisionReasonVideoResponseTextResponse(
        )
        """

    def testCloudAiLargeModelsVisionReasonVideoResponseTextResponse(self):
        """Test CloudAiLargeModelsVisionReasonVideoResponseTextResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
