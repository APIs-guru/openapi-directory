# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.learning_genai_root_takedown_result import LearningGenaiRootTakedownResult

class TestLearningGenaiRootTakedownResult(unittest.TestCase):
    """LearningGenaiRootTakedownResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LearningGenaiRootTakedownResult:
        """Test LearningGenaiRootTakedownResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LearningGenaiRootTakedownResult`
        """
        model = LearningGenaiRootTakedownResult()
        if include_optional:
            return LearningGenaiRootTakedownResult(
                allowed = True,
                regex_takedown_result = openapi_client.models.learning_genai_root_regex_takedown_result.LearningGenaiRootRegexTakedownResult(
                    allowed = True, 
                    takedown_regex = '', ),
                request_response_takedown_result = openapi_client.models.learning_genai_root_request_response_takedown_result.LearningGenaiRootRequestResponseTakedownResult(
                    allowed = True, 
                    request_takedown_regex = '', 
                    response_takedown_regex = '', ),
                similarity_takedown_result = openapi_client.models.learning_genai_root_similarity_takedown_result.LearningGenaiRootSimilarityTakedownResult(
                    allowed = True, 
                    scored_phrases = [
                        openapi_client.models.learning_genai_root_scored_similarity_takedown_phrase.LearningGenaiRootScoredSimilarityTakedownPhrase(
                            phrase = openapi_client.models.learning_genai_root_similarity_takedown_phrase.LearningGenaiRootSimilarityTakedownPhrase(
                                blocked_phrase = '', ), 
                            similarity_score = 1.337, )
                        ], )
            )
        else:
            return LearningGenaiRootTakedownResult(
        )
        """

    def testLearningGenaiRootTakedownResult(self):
        """Test LearningGenaiRootTakedownResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
