# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1beta1_list_feature_online_stores_response import GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse

class TestGoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse(unittest.TestCase):
    """GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse:
        """Test GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse`
        """
        model = GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse()
        if include_optional:
            return GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse(
                feature_online_stores = [
                    openapi_client.models.google_cloud_aiplatform_v1beta1_feature_online_store.GoogleCloudAiplatformV1beta1FeatureOnlineStore(
                        bigtable = openapi_client.models.google_cloud_aiplatform_v1beta1_feature_online_store_bigtable.GoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtable(
                            auto_scaling = openapi_client.models.google_cloud_aiplatform_v1beta1_feature_online_store_bigtable_auto_scaling.GoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtableAutoScaling(
                                cpu_utilization_target = 56, 
                                max_node_count = 56, 
                                min_node_count = 56, ), ), 
                        create_time = '', 
                        dedicated_serving_endpoint = openapi_client.models.google_cloud_aiplatform_v1beta1_feature_online_store_dedicated_serving_endpoint.GoogleCloudAiplatformV1beta1FeatureOnlineStoreDedicatedServingEndpoint(
                            private_service_connect_config = openapi_client.models.google_cloud_aiplatform_v1beta1_private_service_connect_config.GoogleCloudAiplatformV1beta1PrivateServiceConnectConfig(
                                enable_private_service_connect = True, 
                                project_allowlist = [
                                    ''
                                    ], ), 
                            public_endpoint_domain_name = '', 
                            service_attachment = '', ), 
                        embedding_management = openapi_client.models.google_cloud_aiplatform_v1beta1_feature_online_store_embedding_management.GoogleCloudAiplatformV1beta1FeatureOnlineStoreEmbeddingManagement(
                            enabled = True, ), 
                        etag = '', 
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        optimized = openapi_client.models.optimized.optimized(), 
                        state = 'STATE_UNSPECIFIED', 
                        update_time = '', )
                    ],
                next_page_token = ''
            )
        else:
            return GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse(
        )
        """

    def testGoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse(self):
        """Test GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
