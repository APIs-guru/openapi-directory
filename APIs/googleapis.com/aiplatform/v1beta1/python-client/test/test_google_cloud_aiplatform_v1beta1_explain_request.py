# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_aiplatform_v1beta1_explain_request import GoogleCloudAiplatformV1beta1ExplainRequest

class TestGoogleCloudAiplatformV1beta1ExplainRequest(unittest.TestCase):
    """GoogleCloudAiplatformV1beta1ExplainRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAiplatformV1beta1ExplainRequest:
        """Test GoogleCloudAiplatformV1beta1ExplainRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAiplatformV1beta1ExplainRequest`
        """
        model = GoogleCloudAiplatformV1beta1ExplainRequest()
        if include_optional:
            return GoogleCloudAiplatformV1beta1ExplainRequest(
                concurrent_explanation_spec_override = {
                    'key' : openapi_client.models.google_cloud_aiplatform_v1beta1_explanation_spec_override.GoogleCloudAiplatformV1beta1ExplanationSpecOverride(
                        examples_override = openapi_client.models.google_cloud_aiplatform_v1beta1_examples_override.GoogleCloudAiplatformV1beta1ExamplesOverride(
                            crowding_count = 56, 
                            data_format = 'DATA_FORMAT_UNSPECIFIED', 
                            neighbor_count = 56, 
                            restrictions = [
                                openapi_client.models.google_cloud_aiplatform_v1beta1_examples_restrictions_namespace.GoogleCloudAiplatformV1beta1ExamplesRestrictionsNamespace(
                                    allow = [
                                        ''
                                        ], 
                                    deny = [
                                        ''
                                        ], 
                                    namespace_name = '', )
                                ], 
                            return_embeddings = True, ), 
                        metadata = openapi_client.models.google_cloud_aiplatform_v1beta1_explanation_metadata_override.GoogleCloudAiplatformV1beta1ExplanationMetadataOverride(
                            inputs = {
                                'key' : openapi_client.models.google_cloud_aiplatform_v1beta1_explanation_metadata_override_input_metadata_override.GoogleCloudAiplatformV1beta1ExplanationMetadataOverrideInputMetadataOverride(
                                    input_baselines = [
                                        null
                                        ], )
                                }, ), 
                        parameters = openapi_client.models.google_cloud_aiplatform_v1beta1_explanation_parameters.GoogleCloudAiplatformV1beta1ExplanationParameters(
                            examples = openapi_client.models.google_cloud_aiplatform_v1beta1_examples.GoogleCloudAiplatformV1beta1Examples(
                                example_gcs_source = openapi_client.models.google_cloud_aiplatform_v1beta1_examples_example_gcs_source.GoogleCloudAiplatformV1beta1ExamplesExampleGcsSource(
                                    data_format = 'DATA_FORMAT_UNSPECIFIED', 
                                    gcs_source = openapi_client.models.google_cloud_aiplatform_v1beta1_gcs_source.GoogleCloudAiplatformV1beta1GcsSource(
                                        uris = [
                                            ''
                                            ], ), ), 
                                gcs_source = openapi_client.models.google_cloud_aiplatform_v1beta1_gcs_source.GoogleCloudAiplatformV1beta1GcsSource(), 
                                nearest_neighbor_search_config = null, 
                                neighbor_count = 56, 
                                presets = openapi_client.models.google_cloud_aiplatform_v1beta1_presets.GoogleCloudAiplatformV1beta1Presets(
                                    modality = 'MODALITY_UNSPECIFIED', 
                                    query = 'PRECISE', ), ), 
                            integrated_gradients_attribution = openapi_client.models.google_cloud_aiplatform_v1beta1_integrated_gradients_attribution.GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution(
                                blur_baseline_config = openapi_client.models.google_cloud_aiplatform_v1beta1_blur_baseline_config.GoogleCloudAiplatformV1beta1BlurBaselineConfig(
                                    max_blur_sigma = 1.337, ), 
                                smooth_grad_config = openapi_client.models.google_cloud_aiplatform_v1beta1_smooth_grad_config.GoogleCloudAiplatformV1beta1SmoothGradConfig(
                                    feature_noise_sigma = openapi_client.models.google_cloud_aiplatform_v1beta1_feature_noise_sigma.GoogleCloudAiplatformV1beta1FeatureNoiseSigma(
                                        noise_sigma = [
                                            openapi_client.models.google_cloud_aiplatform_v1beta1_feature_noise_sigma_noise_sigma_for_feature.GoogleCloudAiplatformV1beta1FeatureNoiseSigmaNoiseSigmaForFeature(
                                                name = '', 
                                                sigma = 1.337, )
                                            ], ), 
                                    noise_sigma = 1.337, 
                                    noisy_sample_count = 56, ), 
                                step_count = 56, ), 
                            output_indices = [
                                null
                                ], 
                            sampled_shapley_attribution = openapi_client.models.google_cloud_aiplatform_v1beta1_sampled_shapley_attribution.GoogleCloudAiplatformV1beta1SampledShapleyAttribution(
                                path_count = 56, ), 
                            top_k = 56, 
                            xrai_attribution = openapi_client.models.google_cloud_aiplatform_v1beta1_xrai_attribution.GoogleCloudAiplatformV1beta1XraiAttribution(
                                step_count = 56, ), ), )
                    },
                deployed_model_id = '',
                explanation_spec_override = openapi_client.models.google_cloud_aiplatform_v1beta1_explanation_spec_override.GoogleCloudAiplatformV1beta1ExplanationSpecOverride(
                    examples_override = openapi_client.models.google_cloud_aiplatform_v1beta1_examples_override.GoogleCloudAiplatformV1beta1ExamplesOverride(
                        crowding_count = 56, 
                        data_format = 'DATA_FORMAT_UNSPECIFIED', 
                        neighbor_count = 56, 
                        restrictions = [
                            openapi_client.models.google_cloud_aiplatform_v1beta1_examples_restrictions_namespace.GoogleCloudAiplatformV1beta1ExamplesRestrictionsNamespace(
                                allow = [
                                    ''
                                    ], 
                                deny = [
                                    ''
                                    ], 
                                namespace_name = '', )
                            ], 
                        return_embeddings = True, ), 
                    metadata = openapi_client.models.google_cloud_aiplatform_v1beta1_explanation_metadata_override.GoogleCloudAiplatformV1beta1ExplanationMetadataOverride(
                        inputs = {
                            'key' : openapi_client.models.google_cloud_aiplatform_v1beta1_explanation_metadata_override_input_metadata_override.GoogleCloudAiplatformV1beta1ExplanationMetadataOverrideInputMetadataOverride(
                                input_baselines = [
                                    null
                                    ], )
                            }, ), 
                    parameters = openapi_client.models.google_cloud_aiplatform_v1beta1_explanation_parameters.GoogleCloudAiplatformV1beta1ExplanationParameters(
                        examples = openapi_client.models.google_cloud_aiplatform_v1beta1_examples.GoogleCloudAiplatformV1beta1Examples(
                            example_gcs_source = openapi_client.models.google_cloud_aiplatform_v1beta1_examples_example_gcs_source.GoogleCloudAiplatformV1beta1ExamplesExampleGcsSource(
                                data_format = 'DATA_FORMAT_UNSPECIFIED', 
                                gcs_source = openapi_client.models.google_cloud_aiplatform_v1beta1_gcs_source.GoogleCloudAiplatformV1beta1GcsSource(
                                    uris = [
                                        ''
                                        ], ), ), 
                            gcs_source = openapi_client.models.google_cloud_aiplatform_v1beta1_gcs_source.GoogleCloudAiplatformV1beta1GcsSource(), 
                            nearest_neighbor_search_config = null, 
                            neighbor_count = 56, 
                            presets = openapi_client.models.google_cloud_aiplatform_v1beta1_presets.GoogleCloudAiplatformV1beta1Presets(
                                modality = 'MODALITY_UNSPECIFIED', 
                                query = 'PRECISE', ), ), 
                        integrated_gradients_attribution = openapi_client.models.google_cloud_aiplatform_v1beta1_integrated_gradients_attribution.GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution(
                            blur_baseline_config = openapi_client.models.google_cloud_aiplatform_v1beta1_blur_baseline_config.GoogleCloudAiplatformV1beta1BlurBaselineConfig(
                                max_blur_sigma = 1.337, ), 
                            smooth_grad_config = openapi_client.models.google_cloud_aiplatform_v1beta1_smooth_grad_config.GoogleCloudAiplatformV1beta1SmoothGradConfig(
                                feature_noise_sigma = openapi_client.models.google_cloud_aiplatform_v1beta1_feature_noise_sigma.GoogleCloudAiplatformV1beta1FeatureNoiseSigma(
                                    noise_sigma = [
                                        openapi_client.models.google_cloud_aiplatform_v1beta1_feature_noise_sigma_noise_sigma_for_feature.GoogleCloudAiplatformV1beta1FeatureNoiseSigmaNoiseSigmaForFeature(
                                            name = '', 
                                            sigma = 1.337, )
                                        ], ), 
                                noise_sigma = 1.337, 
                                noisy_sample_count = 56, ), 
                            step_count = 56, ), 
                        output_indices = [
                            null
                            ], 
                        sampled_shapley_attribution = openapi_client.models.google_cloud_aiplatform_v1beta1_sampled_shapley_attribution.GoogleCloudAiplatformV1beta1SampledShapleyAttribution(
                            path_count = 56, ), 
                        top_k = 56, 
                        xrai_attribution = openapi_client.models.google_cloud_aiplatform_v1beta1_xrai_attribution.GoogleCloudAiplatformV1beta1XraiAttribution(
                            step_count = 56, ), ), ),
                instances = [
                    null
                    ],
                parameters = None
            )
        else:
            return GoogleCloudAiplatformV1beta1ExplainRequest(
        )
        """

    def testGoogleCloudAiplatformV1beta1ExplainRequest(self):
        """Test GoogleCloudAiplatformV1beta1ExplainRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
