# coding: utf-8

"""
    Vertex AI API

    Train high-quality custom machine learning models with minimal machine learning expertise and effort.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field
from typing import Any, ClassVar, Dict, List, Optional
from openapi_client.models.google_cloud_aiplatform_v1beta1_migrate_resource_request_migrate_automl_dataset_config import GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlDatasetConfig
from openapi_client.models.google_cloud_aiplatform_v1beta1_migrate_resource_request_migrate_automl_model_config import GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlModelConfig
from openapi_client.models.google_cloud_aiplatform_v1beta1_migrate_resource_request_migrate_data_labeling_dataset_config import GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfig
from openapi_client.models.google_cloud_aiplatform_v1beta1_migrate_resource_request_migrate_ml_engine_model_version_config import GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateMlEngineModelVersionConfig
from typing import Optional, Set
from typing_extensions import Self

class GoogleCloudAiplatformV1beta1MigrateResourceRequest(BaseModel):
    """
    Config of migrating one resource from automl.googleapis.com, datalabeling.googleapis.com and ml.googleapis.com to Vertex AI.
    """ # noqa: E501
    migrate_automl_dataset_config: Optional[GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlDatasetConfig] = Field(default=None, alias="migrateAutomlDatasetConfig")
    migrate_automl_model_config: Optional[GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlModelConfig] = Field(default=None, alias="migrateAutomlModelConfig")
    migrate_data_labeling_dataset_config: Optional[GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfig] = Field(default=None, alias="migrateDataLabelingDatasetConfig")
    migrate_ml_engine_model_version_config: Optional[GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateMlEngineModelVersionConfig] = Field(default=None, alias="migrateMlEngineModelVersionConfig")
    __properties: ClassVar[List[str]] = ["migrateAutomlDatasetConfig", "migrateAutomlModelConfig", "migrateDataLabelingDatasetConfig", "migrateMlEngineModelVersionConfig"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of GoogleCloudAiplatformV1beta1MigrateResourceRequest from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of migrate_automl_dataset_config
        if self.migrate_automl_dataset_config:
            _dict['migrateAutomlDatasetConfig'] = self.migrate_automl_dataset_config.to_dict()
        # override the default output from pydantic by calling `to_dict()` of migrate_automl_model_config
        if self.migrate_automl_model_config:
            _dict['migrateAutomlModelConfig'] = self.migrate_automl_model_config.to_dict()
        # override the default output from pydantic by calling `to_dict()` of migrate_data_labeling_dataset_config
        if self.migrate_data_labeling_dataset_config:
            _dict['migrateDataLabelingDatasetConfig'] = self.migrate_data_labeling_dataset_config.to_dict()
        # override the default output from pydantic by calling `to_dict()` of migrate_ml_engine_model_version_config
        if self.migrate_ml_engine_model_version_config:
            _dict['migrateMlEngineModelVersionConfig'] = self.migrate_ml_engine_model_version_config.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of GoogleCloudAiplatformV1beta1MigrateResourceRequest from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "migrateAutomlDatasetConfig": GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlDatasetConfig.from_dict(obj["migrateAutomlDatasetConfig"]) if obj.get("migrateAutomlDatasetConfig") is not None else None,
            "migrateAutomlModelConfig": GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlModelConfig.from_dict(obj["migrateAutomlModelConfig"]) if obj.get("migrateAutomlModelConfig") is not None else None,
            "migrateDataLabelingDatasetConfig": GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfig.from_dict(obj["migrateDataLabelingDatasetConfig"]) if obj.get("migrateDataLabelingDatasetConfig") is not None else None,
            "migrateMlEngineModelVersionConfig": GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateMlEngineModelVersionConfig.from_dict(obj["migrateMlEngineModelVersionConfig"]) if obj.get("migrateMlEngineModelVersionConfig") is not None else None
        })
        return _obj


