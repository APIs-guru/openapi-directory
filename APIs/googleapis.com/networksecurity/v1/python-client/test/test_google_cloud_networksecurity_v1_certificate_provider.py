# coding: utf-8

"""
    Network Security API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_networksecurity_v1_certificate_provider import GoogleCloudNetworksecurityV1CertificateProvider

class TestGoogleCloudNetworksecurityV1CertificateProvider(unittest.TestCase):
    """GoogleCloudNetworksecurityV1CertificateProvider unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudNetworksecurityV1CertificateProvider:
        """Test GoogleCloudNetworksecurityV1CertificateProvider
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudNetworksecurityV1CertificateProvider`
        """
        model = GoogleCloudNetworksecurityV1CertificateProvider()
        if include_optional:
            return GoogleCloudNetworksecurityV1CertificateProvider(
                certificate_provider_instance = openapi_client.models.certificate_provider_instance.CertificateProviderInstance(
                    plugin_instance = '', ),
                grpc_endpoint = openapi_client.models.google_cloud_networksecurity_v1_grpc_endpoint.GoogleCloudNetworksecurityV1GrpcEndpoint(
                    target_uri = '', )
            )
        else:
            return GoogleCloudNetworksecurityV1CertificateProvider(
        )
        """

    def testGoogleCloudNetworksecurityV1CertificateProvider(self):
        """Test GoogleCloudNetworksecurityV1CertificateProvider"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
