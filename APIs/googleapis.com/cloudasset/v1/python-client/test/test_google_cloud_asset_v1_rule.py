# coding: utf-8

"""
    Cloud Asset API

    The Cloud Asset API manages the history and inventory of Google Cloud resources.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_asset_v1_rule import GoogleCloudAssetV1Rule

class TestGoogleCloudAssetV1Rule(unittest.TestCase):
    """GoogleCloudAssetV1Rule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAssetV1Rule:
        """Test GoogleCloudAssetV1Rule
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAssetV1Rule`
        """
        model = GoogleCloudAssetV1Rule()
        if include_optional:
            return GoogleCloudAssetV1Rule(
                allow_all = True,
                condition = openapi_client.models.expr.Expr(
                    description = '', 
                    expression = '', 
                    location = '', 
                    title = '', ),
                condition_evaluation = openapi_client.models.condition_evaluation.ConditionEvaluation(
                    evaluation_value = 'EVALUATION_VALUE_UNSPECIFIED', ),
                deny_all = True,
                enforce = True,
                values = openapi_client.models.google_cloud_asset_v1_string_values.GoogleCloudAssetV1StringValues(
                    allowed_values = [
                        ''
                        ], 
                    denied_values = [
                        ''
                        ], )
            )
        else:
            return GoogleCloudAssetV1Rule(
        )
        """

    def testGoogleCloudAssetV1Rule(self):
        """Test GoogleCloudAssetV1Rule"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
