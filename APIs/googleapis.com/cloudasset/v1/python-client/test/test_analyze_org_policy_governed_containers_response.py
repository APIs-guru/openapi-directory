# coding: utf-8

"""
    Cloud Asset API

    The Cloud Asset API manages the history and inventory of Google Cloud resources.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.analyze_org_policy_governed_containers_response import AnalyzeOrgPolicyGovernedContainersResponse

class TestAnalyzeOrgPolicyGovernedContainersResponse(unittest.TestCase):
    """AnalyzeOrgPolicyGovernedContainersResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnalyzeOrgPolicyGovernedContainersResponse:
        """Test AnalyzeOrgPolicyGovernedContainersResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnalyzeOrgPolicyGovernedContainersResponse`
        """
        model = AnalyzeOrgPolicyGovernedContainersResponse()
        if include_optional:
            return AnalyzeOrgPolicyGovernedContainersResponse(
                constraint = openapi_client.models.analyzer_org_policy_constraint.AnalyzerOrgPolicyConstraint(
                    custom_constraint = openapi_client.models.google_cloud_asset_v1_custom_constraint.GoogleCloudAssetV1CustomConstraint(
                        action_type = 'ACTION_TYPE_UNSPECIFIED', 
                        condition = '', 
                        description = '', 
                        display_name = '', 
                        method_types = [
                            'METHOD_TYPE_UNSPECIFIED'
                            ], 
                        name = '', 
                        resource_types = [
                            ''
                            ], ), 
                    google_defined_constraint = openapi_client.models.google_cloud_asset_v1_constraint.GoogleCloudAssetV1Constraint(
                        boolean_constraint = openapi_client.models.google_cloud_asset_v1_boolean_constraint.GoogleCloudAssetV1BooleanConstraint(), 
                        constraint_default = 'CONSTRAINT_DEFAULT_UNSPECIFIED', 
                        description = '', 
                        display_name = '', 
                        list_constraint = openapi_client.models.google_cloud_asset_v1_list_constraint.GoogleCloudAssetV1ListConstraint(
                            supports_in = True, 
                            supports_under = True, ), 
                        name = '', ), ),
                governed_containers = [
                    openapi_client.models.google_cloud_asset_v1_governed_container.GoogleCloudAssetV1GovernedContainer(
                        consolidated_policy = openapi_client.models.analyzer_org_policy.AnalyzerOrgPolicy(
                            applied_resource = '', 
                            attached_resource = '', 
                            inherit_from_parent = True, 
                            reset = True, 
                            rules = [
                                openapi_client.models.google_cloud_asset_v1_rule.GoogleCloudAssetV1Rule(
                                    allow_all = True, 
                                    condition = openapi_client.models.expr.Expr(
                                        description = '', 
                                        expression = '', 
                                        location = '', 
                                        title = '', ), 
                                    condition_evaluation = openapi_client.models.condition_evaluation.ConditionEvaluation(
                                        evaluation_value = 'EVALUATION_VALUE_UNSPECIFIED', ), 
                                    deny_all = True, 
                                    enforce = True, 
                                    values = openapi_client.models.google_cloud_asset_v1_string_values.GoogleCloudAssetV1StringValues(
                                        allowed_values = [
                                            ''
                                            ], 
                                        denied_values = [
                                            ''
                                            ], ), )
                                ], ), 
                        effective_tags = [
                            openapi_client.models.effective_tag_details.EffectiveTagDetails(
                                attached_resource = '', )
                            ], 
                        folders = [
                            ''
                            ], 
                        full_resource_name = '', 
                        organization = '', 
                        parent = '', 
                        policy_bundle = [
                            openapi_client.models.analyzer_org_policy.AnalyzerOrgPolicy(
                                applied_resource = '', 
                                attached_resource = '', 
                                inherit_from_parent = True, 
                                reset = True, )
                            ], 
                        project = '', )
                    ],
                next_page_token = ''
            )
        else:
            return AnalyzeOrgPolicyGovernedContainersResponse(
        )
        """

    def testAnalyzeOrgPolicyGovernedContainersResponse(self):
        """Test AnalyzeOrgPolicyGovernedContainersResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
