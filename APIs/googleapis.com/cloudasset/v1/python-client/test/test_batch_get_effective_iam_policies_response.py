# coding: utf-8

"""
    Cloud Asset API

    The Cloud Asset API manages the history and inventory of Google Cloud resources.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.batch_get_effective_iam_policies_response import BatchGetEffectiveIamPoliciesResponse

class TestBatchGetEffectiveIamPoliciesResponse(unittest.TestCase):
    """BatchGetEffectiveIamPoliciesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BatchGetEffectiveIamPoliciesResponse:
        """Test BatchGetEffectiveIamPoliciesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BatchGetEffectiveIamPoliciesResponse`
        """
        model = BatchGetEffectiveIamPoliciesResponse()
        if include_optional:
            return BatchGetEffectiveIamPoliciesResponse(
                policy_results = [
                    openapi_client.models.effective_iam_policy.EffectiveIamPolicy(
                        full_resource_name = '', 
                        policies = [
                            openapi_client.models.policy_info.PolicyInfo(
                                attached_resource = '', 
                                policy = openapi_client.models.policy.Policy(
                                    audit_configs = [
                                        openapi_client.models.audit_config.AuditConfig(
                                            audit_log_configs = [
                                                openapi_client.models.audit_log_config.AuditLogConfig(
                                                    exempted_members = [
                                                        ''
                                                        ], 
                                                    log_type = 'LOG_TYPE_UNSPECIFIED', )
                                                ], 
                                            service = '', )
                                        ], 
                                    bindings = [
                                        openapi_client.models.binding.Binding(
                                            condition = openapi_client.models.expr.Expr(
                                                description = '', 
                                                expression = '', 
                                                location = '', 
                                                title = '', ), 
                                            members = [
                                                ''
                                                ], 
                                            role = '', )
                                        ], 
                                    etag = 'YQ==', 
                                    version = 56, ), )
                            ], )
                    ]
            )
        else:
            return BatchGetEffectiveIamPoliciesResponse(
        )
        """

    def testBatchGetEffectiveIamPoliciesResponse(self):
        """Test BatchGetEffectiveIamPoliciesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
