# coding: utf-8

"""
    Cloud Asset API

    The Cloud Asset API manages the history and inventory of Google Cloud resources.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.temporal_asset import TemporalAsset

class TestTemporalAsset(unittest.TestCase):
    """TemporalAsset unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TemporalAsset:
        """Test TemporalAsset
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TemporalAsset`
        """
        model = TemporalAsset()
        if include_optional:
            return TemporalAsset(
                asset = openapi_client.models.asset.Asset(
                    access_level = openapi_client.models.google_identity_accesscontextmanager_v1_access_level.GoogleIdentityAccesscontextmanagerV1AccessLevel(
                        basic = openapi_client.models.google_identity_accesscontextmanager_v1_basic_level.GoogleIdentityAccesscontextmanagerV1BasicLevel(
                            combining_function = 'AND', 
                            conditions = [
                                openapi_client.models.google_identity_accesscontextmanager_v1_condition.GoogleIdentityAccesscontextmanagerV1Condition(
                                    device_policy = openapi_client.models.google_identity_accesscontextmanager_v1_device_policy.GoogleIdentityAccesscontextmanagerV1DevicePolicy(
                                        allowed_device_management_levels = [
                                            'MANAGEMENT_UNSPECIFIED'
                                            ], 
                                        allowed_encryption_statuses = [
                                            'ENCRYPTION_UNSPECIFIED'
                                            ], 
                                        os_constraints = [
                                            openapi_client.models.google_identity_accesscontextmanager_v1_os_constraint.GoogleIdentityAccesscontextmanagerV1OsConstraint(
                                                minimum_version = '', 
                                                os_type = 'OS_UNSPECIFIED', 
                                                require_verified_chrome_os = True, )
                                            ], 
                                        require_admin_approval = True, 
                                        require_corp_owned = True, 
                                        require_screenlock = True, ), 
                                    ip_subnetworks = [
                                        ''
                                        ], 
                                    members = [
                                        ''
                                        ], 
                                    negate = True, 
                                    regions = [
                                        ''
                                        ], 
                                    required_access_levels = [
                                        ''
                                        ], 
                                    vpc_network_sources = [
                                        openapi_client.models.google_identity_accesscontextmanager_v1_vpc_network_source.GoogleIdentityAccesscontextmanagerV1VpcNetworkSource(
                                            vpc_subnetwork = openapi_client.models.google_identity_accesscontextmanager_v1_vpc_sub_network.GoogleIdentityAccesscontextmanagerV1VpcSubNetwork(
                                                network = '', 
                                                vpc_ip_subnetworks = [
                                                    ''
                                                    ], ), )
                                        ], )
                                ], ), 
                        custom = openapi_client.models.google_identity_accesscontextmanager_v1_custom_level.GoogleIdentityAccesscontextmanagerV1CustomLevel(
                            expr = openapi_client.models.expr.Expr(
                                description = '', 
                                expression = '', 
                                location = '', 
                                title = '', ), ), 
                        description = '', 
                        name = '', 
                        title = '', ), 
                    access_policy = openapi_client.models.google_identity_accesscontextmanager_v1_access_policy.GoogleIdentityAccesscontextmanagerV1AccessPolicy(
                        etag = '', 
                        name = '', 
                        parent = '', 
                        scopes = [
                            ''
                            ], 
                        title = '', ), 
                    asset_type = '', 
                    iam_policy = openapi_client.models.policy.Policy(
                        audit_configs = [
                            openapi_client.models.audit_config.AuditConfig(
                                audit_log_configs = [
                                    openapi_client.models.audit_log_config.AuditLogConfig(
                                        exempted_members = [
                                            ''
                                            ], 
                                        log_type = 'LOG_TYPE_UNSPECIFIED', )
                                    ], 
                                service = '', )
                            ], 
                        bindings = [
                            openapi_client.models.binding.Binding(
                                condition = openapi_client.models.expr.Expr(
                                    description = '', 
                                    expression = '', 
                                    location = '', 
                                    title = '', ), 
                                role = '', )
                            ], 
                        etag = 'YQ==', 
                        version = 56, ), 
                    name = '', 
                    org_policy = [
                        openapi_client.models.google_cloud_orgpolicy_v1_policy.GoogleCloudOrgpolicyV1Policy(
                            boolean_policy = openapi_client.models.google_cloud_orgpolicy_v1_boolean_policy.GoogleCloudOrgpolicyV1BooleanPolicy(
                                enforced = True, ), 
                            constraint = '', 
                            etag = 'YQ==', 
                            list_policy = openapi_client.models.google_cloud_orgpolicy_v1_list_policy.GoogleCloudOrgpolicyV1ListPolicy(
                                all_values = 'ALL_VALUES_UNSPECIFIED', 
                                allowed_values = [
                                    ''
                                    ], 
                                denied_values = [
                                    ''
                                    ], 
                                inherit_from_parent = True, 
                                suggested_value = '', ), 
                            restore_default = openapi_client.models.google_cloud_orgpolicy_v1_restore_default.GoogleCloudOrgpolicyV1RestoreDefault(), 
                            update_time = '', 
                            version = 56, )
                        ], 
                    resource = openapi_client.models.resource.Resource(
                        data = {
                            'key' : null
                            }, 
                        discovery_document_uri = '', 
                        discovery_name = '', 
                        parent = '', 
                        resource_url = '', 
                        version = '', ), 
                    service_perimeter = openapi_client.models.google_identity_accesscontextmanager_v1_service_perimeter.GoogleIdentityAccesscontextmanagerV1ServicePerimeter(
                        description = '', 
                        name = '', 
                        perimeter_type = 'PERIMETER_TYPE_REGULAR', 
                        spec = openapi_client.models.google_identity_accesscontextmanager_v1_service_perimeter_config.GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig(
                            access_levels = [
                                ''
                                ], 
                            egress_policies = [
                                openapi_client.models.google_identity_accesscontextmanager_v1_egress_policy.GoogleIdentityAccesscontextmanagerV1EgressPolicy(
                                    egress_from = openapi_client.models.google_identity_accesscontextmanager_v1_egress_from.GoogleIdentityAccesscontextmanagerV1EgressFrom(
                                        identities = [
                                            ''
                                            ], 
                                        identity_type = 'IDENTITY_TYPE_UNSPECIFIED', 
                                        source_restriction = 'SOURCE_RESTRICTION_UNSPECIFIED', 
                                        sources = [
                                            openapi_client.models.google_identity_accesscontextmanager_v1_egress_source.GoogleIdentityAccesscontextmanagerV1EgressSource()
                                            ], ), 
                                    egress_to = openapi_client.models.google_identity_accesscontextmanager_v1_egress_to.GoogleIdentityAccesscontextmanagerV1EgressTo(
                                        external_resources = [
                                            ''
                                            ], 
                                        operations = [
                                            openapi_client.models.google_identity_accesscontextmanager_v1_api_operation.GoogleIdentityAccesscontextmanagerV1ApiOperation(
                                                method_selectors = [
                                                    openapi_client.models.google_identity_accesscontextmanager_v1_method_selector.GoogleIdentityAccesscontextmanagerV1MethodSelector(
                                                        method = '', 
                                                        permission = '', )
                                                    ], 
                                                service_name = '', )
                                            ], 
                                        resources = [
                                            ''
                                            ], ), )
                                ], 
                            ingress_policies = [
                                openapi_client.models.google_identity_accesscontextmanager_v1_ingress_policy.GoogleIdentityAccesscontextmanagerV1IngressPolicy(
                                    ingress_from = openapi_client.models.google_identity_accesscontextmanager_v1_ingress_from.GoogleIdentityAccesscontextmanagerV1IngressFrom(
                                        identity_type = 'IDENTITY_TYPE_UNSPECIFIED', ), 
                                    ingress_to = openapi_client.models.google_identity_accesscontextmanager_v1_ingress_to.GoogleIdentityAccesscontextmanagerV1IngressTo(), )
                                ], 
                            resources = [
                                ''
                                ], 
                            restricted_services = [
                                ''
                                ], 
                            vpc_accessible_services = openapi_client.models.google_identity_accesscontextmanager_v1_vpc_accessible_services.GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices(
                                allowed_services = [
                                    ''
                                    ], 
                                enable_restriction = True, ), ), 
                        status = openapi_client.models.google_identity_accesscontextmanager_v1_service_perimeter_config.GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig(), 
                        title = '', 
                        use_explicit_dry_run_spec = True, ), ),
                deleted = True,
                window = openapi_client.models.time_window.TimeWindow(
                    end_time = '', 
                    start_time = '', )
            )
        else:
            return TemporalAsset(
        )
        """

    def testTemporalAsset(self):
        """Test TemporalAsset"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
