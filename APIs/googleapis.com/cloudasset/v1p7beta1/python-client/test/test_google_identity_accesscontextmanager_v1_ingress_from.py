# coding: utf-8

"""
    Cloud Asset API

    The Cloud Asset API manages the history and inventory of Google Cloud resources.

    The version of the OpenAPI document: v1p7beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_identity_accesscontextmanager_v1_ingress_from import GoogleIdentityAccesscontextmanagerV1IngressFrom

class TestGoogleIdentityAccesscontextmanagerV1IngressFrom(unittest.TestCase):
    """GoogleIdentityAccesscontextmanagerV1IngressFrom unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleIdentityAccesscontextmanagerV1IngressFrom:
        """Test GoogleIdentityAccesscontextmanagerV1IngressFrom
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleIdentityAccesscontextmanagerV1IngressFrom`
        """
        model = GoogleIdentityAccesscontextmanagerV1IngressFrom()
        if include_optional:
            return GoogleIdentityAccesscontextmanagerV1IngressFrom(
                identities = [
                    ''
                    ],
                identity_type = 'IDENTITY_TYPE_UNSPECIFIED',
                sources = [
                    openapi_client.models.google_identity_accesscontextmanager_v1_ingress_source.GoogleIdentityAccesscontextmanagerV1IngressSource(
                        access_level = '', 
                        resource = '', )
                    ]
            )
        else:
            return GoogleIdentityAccesscontextmanagerV1IngressFrom(
        )
        """

    def testGoogleIdentityAccesscontextmanagerV1IngressFrom(self):
        """Test GoogleIdentityAccesscontextmanagerV1IngressFrom"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
