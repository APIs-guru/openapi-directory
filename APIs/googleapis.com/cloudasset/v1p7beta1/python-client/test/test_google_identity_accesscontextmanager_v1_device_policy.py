# coding: utf-8

"""
    Cloud Asset API

    The Cloud Asset API manages the history and inventory of Google Cloud resources.

    The version of the OpenAPI document: v1p7beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_identity_accesscontextmanager_v1_device_policy import GoogleIdentityAccesscontextmanagerV1DevicePolicy

class TestGoogleIdentityAccesscontextmanagerV1DevicePolicy(unittest.TestCase):
    """GoogleIdentityAccesscontextmanagerV1DevicePolicy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleIdentityAccesscontextmanagerV1DevicePolicy:
        """Test GoogleIdentityAccesscontextmanagerV1DevicePolicy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleIdentityAccesscontextmanagerV1DevicePolicy`
        """
        model = GoogleIdentityAccesscontextmanagerV1DevicePolicy()
        if include_optional:
            return GoogleIdentityAccesscontextmanagerV1DevicePolicy(
                allowed_device_management_levels = [
                    'MANAGEMENT_UNSPECIFIED'
                    ],
                allowed_encryption_statuses = [
                    'ENCRYPTION_UNSPECIFIED'
                    ],
                os_constraints = [
                    openapi_client.models.google_identity_accesscontextmanager_v1_os_constraint.GoogleIdentityAccesscontextmanagerV1OsConstraint(
                        minimum_version = '', 
                        os_type = 'OS_UNSPECIFIED', 
                        require_verified_chrome_os = True, )
                    ],
                require_admin_approval = True,
                require_corp_owned = True,
                require_screenlock = True
            )
        else:
            return GoogleIdentityAccesscontextmanagerV1DevicePolicy(
        )
        """

    def testGoogleIdentityAccesscontextmanagerV1DevicePolicy(self):
        """Test GoogleIdentityAccesscontextmanagerV1DevicePolicy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
