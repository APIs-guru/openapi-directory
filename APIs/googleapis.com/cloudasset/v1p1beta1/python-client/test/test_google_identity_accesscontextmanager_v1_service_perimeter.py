# coding: utf-8

"""
    Cloud Asset API

    The Cloud Asset API manages the history and inventory of Google Cloud resources.

    The version of the OpenAPI document: v1p1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_identity_accesscontextmanager_v1_service_perimeter import GoogleIdentityAccesscontextmanagerV1ServicePerimeter

class TestGoogleIdentityAccesscontextmanagerV1ServicePerimeter(unittest.TestCase):
    """GoogleIdentityAccesscontextmanagerV1ServicePerimeter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleIdentityAccesscontextmanagerV1ServicePerimeter:
        """Test GoogleIdentityAccesscontextmanagerV1ServicePerimeter
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleIdentityAccesscontextmanagerV1ServicePerimeter`
        """
        model = GoogleIdentityAccesscontextmanagerV1ServicePerimeter()
        if include_optional:
            return GoogleIdentityAccesscontextmanagerV1ServicePerimeter(
                description = '',
                name = '',
                perimeter_type = 'PERIMETER_TYPE_REGULAR',
                spec = openapi_client.models.google_identity_accesscontextmanager_v1_service_perimeter_config.GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig(
                    access_levels = [
                        ''
                        ], 
                    egress_policies = [
                        openapi_client.models.google_identity_accesscontextmanager_v1_egress_policy.GoogleIdentityAccesscontextmanagerV1EgressPolicy(
                            egress_from = openapi_client.models.google_identity_accesscontextmanager_v1_egress_from.GoogleIdentityAccesscontextmanagerV1EgressFrom(
                                identities = [
                                    ''
                                    ], 
                                identity_type = 'IDENTITY_TYPE_UNSPECIFIED', 
                                source_restriction = 'SOURCE_RESTRICTION_UNSPECIFIED', 
                                sources = [
                                    openapi_client.models.google_identity_accesscontextmanager_v1_egress_source.GoogleIdentityAccesscontextmanagerV1EgressSource(
                                        access_level = '', )
                                    ], ), 
                            egress_to = openapi_client.models.google_identity_accesscontextmanager_v1_egress_to.GoogleIdentityAccesscontextmanagerV1EgressTo(
                                external_resources = [
                                    ''
                                    ], 
                                operations = [
                                    openapi_client.models.google_identity_accesscontextmanager_v1_api_operation.GoogleIdentityAccesscontextmanagerV1ApiOperation(
                                        method_selectors = [
                                            openapi_client.models.google_identity_accesscontextmanager_v1_method_selector.GoogleIdentityAccesscontextmanagerV1MethodSelector(
                                                method = '', 
                                                permission = '', )
                                            ], 
                                        service_name = '', )
                                    ], 
                                resources = [
                                    ''
                                    ], ), )
                        ], 
                    ingress_policies = [
                        openapi_client.models.google_identity_accesscontextmanager_v1_ingress_policy.GoogleIdentityAccesscontextmanagerV1IngressPolicy(
                            ingress_from = openapi_client.models.google_identity_accesscontextmanager_v1_ingress_from.GoogleIdentityAccesscontextmanagerV1IngressFrom(
                                identity_type = 'IDENTITY_TYPE_UNSPECIFIED', ), 
                            ingress_to = openapi_client.models.google_identity_accesscontextmanager_v1_ingress_to.GoogleIdentityAccesscontextmanagerV1IngressTo(), )
                        ], 
                    resources = [
                        ''
                        ], 
                    restricted_services = [
                        ''
                        ], 
                    vpc_accessible_services = openapi_client.models.google_identity_accesscontextmanager_v1_vpc_accessible_services.GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices(
                        allowed_services = [
                            ''
                            ], 
                        enable_restriction = True, ), ),
                status = openapi_client.models.google_identity_accesscontextmanager_v1_service_perimeter_config.GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig(
                    access_levels = [
                        ''
                        ], 
                    egress_policies = [
                        openapi_client.models.google_identity_accesscontextmanager_v1_egress_policy.GoogleIdentityAccesscontextmanagerV1EgressPolicy(
                            egress_from = openapi_client.models.google_identity_accesscontextmanager_v1_egress_from.GoogleIdentityAccesscontextmanagerV1EgressFrom(
                                identities = [
                                    ''
                                    ], 
                                identity_type = 'IDENTITY_TYPE_UNSPECIFIED', 
                                source_restriction = 'SOURCE_RESTRICTION_UNSPECIFIED', 
                                sources = [
                                    openapi_client.models.google_identity_accesscontextmanager_v1_egress_source.GoogleIdentityAccesscontextmanagerV1EgressSource(
                                        access_level = '', )
                                    ], ), 
                            egress_to = openapi_client.models.google_identity_accesscontextmanager_v1_egress_to.GoogleIdentityAccesscontextmanagerV1EgressTo(
                                external_resources = [
                                    ''
                                    ], 
                                operations = [
                                    openapi_client.models.google_identity_accesscontextmanager_v1_api_operation.GoogleIdentityAccesscontextmanagerV1ApiOperation(
                                        method_selectors = [
                                            openapi_client.models.google_identity_accesscontextmanager_v1_method_selector.GoogleIdentityAccesscontextmanagerV1MethodSelector(
                                                method = '', 
                                                permission = '', )
                                            ], 
                                        service_name = '', )
                                    ], 
                                resources = [
                                    ''
                                    ], ), )
                        ], 
                    ingress_policies = [
                        openapi_client.models.google_identity_accesscontextmanager_v1_ingress_policy.GoogleIdentityAccesscontextmanagerV1IngressPolicy(
                            ingress_from = openapi_client.models.google_identity_accesscontextmanager_v1_ingress_from.GoogleIdentityAccesscontextmanagerV1IngressFrom(
                                identity_type = 'IDENTITY_TYPE_UNSPECIFIED', ), 
                            ingress_to = openapi_client.models.google_identity_accesscontextmanager_v1_ingress_to.GoogleIdentityAccesscontextmanagerV1IngressTo(), )
                        ], 
                    resources = [
                        ''
                        ], 
                    restricted_services = [
                        ''
                        ], 
                    vpc_accessible_services = openapi_client.models.google_identity_accesscontextmanager_v1_vpc_accessible_services.GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices(
                        allowed_services = [
                            ''
                            ], 
                        enable_restriction = True, ), ),
                title = '',
                use_explicit_dry_run_spec = True
            )
        else:
            return GoogleIdentityAccesscontextmanagerV1ServicePerimeter(
        )
        """

    def testGoogleIdentityAccesscontextmanagerV1ServicePerimeter(self):
        """Test GoogleIdentityAccesscontextmanagerV1ServicePerimeter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
