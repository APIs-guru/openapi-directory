# coding: utf-8

"""
    Cloud Asset API

    The cloud asset API manages the history and inventory of cloud resources.

    The version of the OpenAPI document: v1p4beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.analyze_iam_policy_response import AnalyzeIamPolicyResponse

class TestAnalyzeIamPolicyResponse(unittest.TestCase):
    """AnalyzeIamPolicyResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnalyzeIamPolicyResponse:
        """Test AnalyzeIamPolicyResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnalyzeIamPolicyResponse`
        """
        model = AnalyzeIamPolicyResponse()
        if include_optional:
            return AnalyzeIamPolicyResponse(
                fully_explored = True,
                main_analysis = openapi_client.models.iam_policy_analysis.IamPolicyAnalysis(
                    analysis_query = openapi_client.models.iam_policy_analysis_query.IamPolicyAnalysisQuery(
                        access_selector = openapi_client.models.access_selector.AccessSelector(
                            permissions = [
                                ''
                                ], 
                            roles = [
                                ''
                                ], ), 
                        identity_selector = openapi_client.models.identity_selector.IdentitySelector(
                            identity = '', ), 
                        parent = '', 
                        resource_selector = openapi_client.models.resource_selector.ResourceSelector(
                            full_resource_name = '', ), ), 
                    analysis_results = [
                        openapi_client.models.iam_policy_analysis_result.IamPolicyAnalysisResult(
                            access_control_lists = [
                                openapi_client.models.google_cloud_asset_v1p4beta1_access_control_list.GoogleCloudAssetV1p4beta1AccessControlList(
                                    accesses = [
                                        openapi_client.models.google_cloud_asset_v1p4beta1_access.GoogleCloudAssetV1p4beta1Access(
                                            analysis_state = openapi_client.models.google_cloud_asset_v1p4beta1_analysis_state.GoogleCloudAssetV1p4beta1AnalysisState(
                                                cause = '', 
                                                code = 'OK', ), 
                                            permission = '', 
                                            role = '', )
                                        ], 
                                    resource_edges = [
                                        openapi_client.models.google_cloud_asset_v1p4beta1_edge.GoogleCloudAssetV1p4beta1Edge(
                                            source_node = '', 
                                            target_node = '', )
                                        ], 
                                    resources = [
                                        openapi_client.models.google_cloud_asset_v1p4beta1_resource.GoogleCloudAssetV1p4beta1Resource(
                                            full_resource_name = '', )
                                        ], )
                                ], 
                            attached_resource_full_name = '', 
                            fully_explored = True, 
                            iam_binding = openapi_client.models.binding.Binding(
                                condition = openapi_client.models.expr.Expr(
                                    description = '', 
                                    expression = '', 
                                    location = '', 
                                    title = '', ), 
                                members = [
                                    ''
                                    ], 
                                role = '', ), 
                            identity_list = openapi_client.models.google_cloud_asset_v1p4beta1_identity_list.GoogleCloudAssetV1p4beta1IdentityList(
                                group_edges = [
                                    openapi_client.models.google_cloud_asset_v1p4beta1_edge.GoogleCloudAssetV1p4beta1Edge(
                                        source_node = '', 
                                        target_node = '', )
                                    ], 
                                identities = [
                                    openapi_client.models.google_cloud_asset_v1p4beta1_identity.GoogleCloudAssetV1p4beta1Identity(
                                        name = '', )
                                    ], ), )
                        ], 
                    fully_explored = True, ),
                non_critical_errors = [
                    openapi_client.models.google_cloud_asset_v1p4beta1_analysis_state.GoogleCloudAssetV1p4beta1AnalysisState(
                        cause = '', 
                        code = 'OK', )
                    ],
                service_account_impersonation_analysis = [
                    openapi_client.models.iam_policy_analysis.IamPolicyAnalysis(
                        analysis_query = openapi_client.models.iam_policy_analysis_query.IamPolicyAnalysisQuery(
                            access_selector = openapi_client.models.access_selector.AccessSelector(
                                permissions = [
                                    ''
                                    ], 
                                roles = [
                                    ''
                                    ], ), 
                            identity_selector = openapi_client.models.identity_selector.IdentitySelector(
                                identity = '', ), 
                            parent = '', 
                            resource_selector = openapi_client.models.resource_selector.ResourceSelector(
                                full_resource_name = '', ), ), 
                        analysis_results = [
                            openapi_client.models.iam_policy_analysis_result.IamPolicyAnalysisResult(
                                access_control_lists = [
                                    openapi_client.models.google_cloud_asset_v1p4beta1_access_control_list.GoogleCloudAssetV1p4beta1AccessControlList(
                                        accesses = [
                                            openapi_client.models.google_cloud_asset_v1p4beta1_access.GoogleCloudAssetV1p4beta1Access(
                                                analysis_state = openapi_client.models.google_cloud_asset_v1p4beta1_analysis_state.GoogleCloudAssetV1p4beta1AnalysisState(
                                                    cause = '', 
                                                    code = 'OK', ), 
                                                permission = '', 
                                                role = '', )
                                            ], 
                                        resource_edges = [
                                            openapi_client.models.google_cloud_asset_v1p4beta1_edge.GoogleCloudAssetV1p4beta1Edge(
                                                source_node = '', 
                                                target_node = '', )
                                            ], 
                                        resources = [
                                            openapi_client.models.google_cloud_asset_v1p4beta1_resource.GoogleCloudAssetV1p4beta1Resource(
                                                full_resource_name = '', )
                                            ], )
                                    ], 
                                attached_resource_full_name = '', 
                                fully_explored = True, 
                                iam_binding = openapi_client.models.binding.Binding(
                                    condition = openapi_client.models.expr.Expr(
                                        description = '', 
                                        expression = '', 
                                        location = '', 
                                        title = '', ), 
                                    members = [
                                        ''
                                        ], 
                                    role = '', ), 
                                identity_list = openapi_client.models.google_cloud_asset_v1p4beta1_identity_list.GoogleCloudAssetV1p4beta1IdentityList(
                                    group_edges = [
                                        openapi_client.models.google_cloud_asset_v1p4beta1_edge.GoogleCloudAssetV1p4beta1Edge(
                                            source_node = '', 
                                            target_node = '', )
                                        ], 
                                    identities = [
                                        openapi_client.models.google_cloud_asset_v1p4beta1_identity.GoogleCloudAssetV1p4beta1Identity(
                                            name = '', )
                                        ], ), )
                            ], 
                        fully_explored = True, )
                    ]
            )
        else:
            return AnalyzeIamPolicyResponse(
        )
        """

    def testAnalyzeIamPolicyResponse(self):
        """Test AnalyzeIamPolicyResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
