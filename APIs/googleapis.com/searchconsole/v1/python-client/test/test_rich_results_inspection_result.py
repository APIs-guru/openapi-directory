# coding: utf-8

"""
    Google Search Console API

    The Search Console API provides access to both Search Console data (verified users only) and to public information on an URL basis (anyone)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.rich_results_inspection_result import RichResultsInspectionResult

class TestRichResultsInspectionResult(unittest.TestCase):
    """RichResultsInspectionResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RichResultsInspectionResult:
        """Test RichResultsInspectionResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RichResultsInspectionResult`
        """
        model = RichResultsInspectionResult()
        if include_optional:
            return RichResultsInspectionResult(
                detected_items = [
                    openapi_client.models.detected_items.DetectedItems(
                        items = [
                            openapi_client.models.item.Item(
                                issues = [
                                    openapi_client.models.rich_results_issue.RichResultsIssue(
                                        issue_message = '', 
                                        severity = 'SEVERITY_UNSPECIFIED', )
                                    ], 
                                name = '', )
                            ], 
                        rich_result_type = '', )
                    ],
                verdict = 'VERDICT_UNSPECIFIED'
            )
        else:
            return RichResultsInspectionResult(
        )
        """

    def testRichResultsInspectionResult(self):
        """Test RichResultsInspectionResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
