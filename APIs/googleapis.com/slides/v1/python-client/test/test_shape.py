# coding: utf-8

"""
    Google Slides API

    Reads and writes Google Slides presentations.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.shape import Shape

class TestShape(unittest.TestCase):
    """Shape unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Shape:
        """Test Shape
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Shape`
        """
        model = Shape()
        if include_optional:
            return Shape(
                placeholder = openapi_client.models.placeholder.Placeholder(
                    index = 56, 
                    parent_object_id = '', 
                    type = 'NONE', ),
                shape_properties = openapi_client.models.shape_properties.ShapeProperties(
                    autofit = openapi_client.models.autofit.Autofit(
                        autofit_type = 'AUTOFIT_TYPE_UNSPECIFIED', 
                        font_scale = 1.337, 
                        line_spacing_reduction = 1.337, ), 
                    content_alignment = 'CONTENT_ALIGNMENT_UNSPECIFIED', 
                    link = openapi_client.models.link.Link(
                        page_object_id = '', 
                        relative_link = 'RELATIVE_SLIDE_LINK_UNSPECIFIED', 
                        slide_index = 56, 
                        url = '', ), 
                    outline = openapi_client.models.outline.Outline(
                        dash_style = 'DASH_STYLE_UNSPECIFIED', 
                        outline_fill = openapi_client.models.outline_fill.OutlineFill(
                            solid_fill = openapi_client.models.solid_fill.SolidFill(
                                alpha = 1.337, 
                                color = openapi_client.models.opaque_color.OpaqueColor(
                                    rgb_color = openapi_client.models.rgb_color.RgbColor(
                                        blue = 1.337, 
                                        green = 1.337, 
                                        red = 1.337, ), 
                                    theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), ), ), 
                        property_state = 'RENDERED', 
                        weight = openapi_client.models.dimension.Dimension(
                            magnitude = 1.337, 
                            unit = 'UNIT_UNSPECIFIED', ), ), 
                    shadow = openapi_client.models.shadow.Shadow(
                        alignment = 'RECTANGLE_POSITION_UNSPECIFIED', 
                        alpha = 1.337, 
                        blur_radius = openapi_client.models.dimension.Dimension(
                            magnitude = 1.337, 
                            unit = 'UNIT_UNSPECIFIED', ), 
                        property_state = 'RENDERED', 
                        rotate_with_shape = True, 
                        transform = openapi_client.models.affine_transform.AffineTransform(
                            scale_x = 1.337, 
                            scale_y = 1.337, 
                            shear_x = 1.337, 
                            shear_y = 1.337, 
                            translate_x = 1.337, 
                            translate_y = 1.337, 
                            unit = 'UNIT_UNSPECIFIED', ), 
                        type = 'SHADOW_TYPE_UNSPECIFIED', ), 
                    shape_background_fill = openapi_client.models.shape_background_fill.ShapeBackgroundFill(
                        property_state = 'RENDERED', ), ),
                shape_type = 'TYPE_UNSPECIFIED',
                text = openapi_client.models.text_content.TextContent(
                    lists = {
                        'key' : openapi_client.models.list.List(
                            list_id = '', 
                            nesting_level = {
                                'key' : openapi_client.models.nesting_level.NestingLevel(
                                    bullet_style = openapi_client.models.text_style.TextStyle(
                                        background_color = openapi_client.models.optional_color.OptionalColor(
                                            opaque_color = openapi_client.models.opaque_color.OpaqueColor(
                                                rgb_color = openapi_client.models.rgb_color.RgbColor(
                                                    blue = 1.337, 
                                                    green = 1.337, 
                                                    red = 1.337, ), 
                                                theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), ), 
                                        baseline_offset = 'BASELINE_OFFSET_UNSPECIFIED', 
                                        bold = True, 
                                        font_family = '', 
                                        font_size = openapi_client.models.dimension.Dimension(
                                            magnitude = 1.337, 
                                            unit = 'UNIT_UNSPECIFIED', ), 
                                        foreground_color = openapi_client.models.optional_color.OptionalColor(), 
                                        italic = True, 
                                        link = openapi_client.models.link.Link(
                                            page_object_id = '', 
                                            relative_link = 'RELATIVE_SLIDE_LINK_UNSPECIFIED', 
                                            slide_index = 56, 
                                            url = '', ), 
                                        small_caps = True, 
                                        strikethrough = True, 
                                        underline = True, 
                                        weighted_font_family = openapi_client.models.weighted_font_family.WeightedFontFamily(
                                            font_family = '', 
                                            weight = 56, ), ), )
                                }, )
                        }, 
                    text_elements = [
                        openapi_client.models.text_element.TextElement(
                            auto_text = openapi_client.models.auto_text.AutoText(
                                content = '', 
                                style = openapi_client.models.text_style.TextStyle(
                                    baseline_offset = 'BASELINE_OFFSET_UNSPECIFIED', 
                                    bold = True, 
                                    font_family = '', 
                                    italic = True, 
                                    small_caps = True, 
                                    strikethrough = True, 
                                    underline = True, ), 
                                type = 'TYPE_UNSPECIFIED', ), 
                            end_index = 56, 
                            paragraph_marker = openapi_client.models.paragraph_marker.ParagraphMarker(
                                bullet = openapi_client.models.bullet.Bullet(
                                    glyph = '', 
                                    list_id = '', ), ), 
                            start_index = 56, 
                            text_run = openapi_client.models.text_run.TextRun(
                                content = '', ), )
                        ], )
            )
        else:
            return Shape(
        )
        """

    def testShape(self):
        """Test Shape"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
