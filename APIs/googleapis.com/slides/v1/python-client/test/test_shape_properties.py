# coding: utf-8

"""
    Google Slides API

    Reads and writes Google Slides presentations.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.shape_properties import ShapeProperties

class TestShapeProperties(unittest.TestCase):
    """ShapeProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ShapeProperties:
        """Test ShapeProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ShapeProperties`
        """
        model = ShapeProperties()
        if include_optional:
            return ShapeProperties(
                autofit = openapi_client.models.autofit.Autofit(
                    autofit_type = 'AUTOFIT_TYPE_UNSPECIFIED', 
                    font_scale = 1.337, 
                    line_spacing_reduction = 1.337, ),
                content_alignment = 'CONTENT_ALIGNMENT_UNSPECIFIED',
                link = openapi_client.models.link.Link(
                    page_object_id = '', 
                    relative_link = 'RELATIVE_SLIDE_LINK_UNSPECIFIED', 
                    slide_index = 56, 
                    url = '', ),
                outline = openapi_client.models.outline.Outline(
                    dash_style = 'DASH_STYLE_UNSPECIFIED', 
                    outline_fill = openapi_client.models.outline_fill.OutlineFill(
                        solid_fill = openapi_client.models.solid_fill.SolidFill(
                            alpha = 1.337, 
                            color = openapi_client.models.opaque_color.OpaqueColor(
                                rgb_color = openapi_client.models.rgb_color.RgbColor(
                                    blue = 1.337, 
                                    green = 1.337, 
                                    red = 1.337, ), 
                                theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), ), ), 
                    property_state = 'RENDERED', 
                    weight = openapi_client.models.dimension.Dimension(
                        magnitude = 1.337, 
                        unit = 'UNIT_UNSPECIFIED', ), ),
                shadow = openapi_client.models.shadow.Shadow(
                    alignment = 'RECTANGLE_POSITION_UNSPECIFIED', 
                    alpha = 1.337, 
                    blur_radius = openapi_client.models.dimension.Dimension(
                        magnitude = 1.337, 
                        unit = 'UNIT_UNSPECIFIED', ), 
                    color = openapi_client.models.opaque_color.OpaqueColor(
                        rgb_color = openapi_client.models.rgb_color.RgbColor(
                            blue = 1.337, 
                            green = 1.337, 
                            red = 1.337, ), 
                        theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                    property_state = 'RENDERED', 
                    rotate_with_shape = True, 
                    transform = openapi_client.models.affine_transform.AffineTransform(
                        scale_x = 1.337, 
                        scale_y = 1.337, 
                        shear_x = 1.337, 
                        shear_y = 1.337, 
                        translate_x = 1.337, 
                        translate_y = 1.337, 
                        unit = 'UNIT_UNSPECIFIED', ), 
                    type = 'SHADOW_TYPE_UNSPECIFIED', ),
                shape_background_fill = openapi_client.models.shape_background_fill.ShapeBackgroundFill(
                    property_state = 'RENDERED', 
                    solid_fill = openapi_client.models.solid_fill.SolidFill(
                        alpha = 1.337, 
                        color = openapi_client.models.opaque_color.OpaqueColor(
                            rgb_color = openapi_client.models.rgb_color.RgbColor(
                                blue = 1.337, 
                                green = 1.337, 
                                red = 1.337, ), 
                            theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), ), )
            )
        else:
            return ShapeProperties(
        )
        """

    def testShapeProperties(self):
        """Test ShapeProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
