# coding: utf-8

"""
    Google Slides API

    Reads and writes Google Slides presentations.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.text_content import TextContent

class TestTextContent(unittest.TestCase):
    """TextContent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TextContent:
        """Test TextContent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TextContent`
        """
        model = TextContent()
        if include_optional:
            return TextContent(
                lists = {
                    'key' : openapi_client.models.list.List(
                        list_id = '', 
                        nesting_level = {
                            'key' : openapi_client.models.nesting_level.NestingLevel(
                                bullet_style = openapi_client.models.text_style.TextStyle(
                                    background_color = openapi_client.models.optional_color.OptionalColor(
                                        opaque_color = openapi_client.models.opaque_color.OpaqueColor(
                                            rgb_color = openapi_client.models.rgb_color.RgbColor(
                                                blue = 1.337, 
                                                green = 1.337, 
                                                red = 1.337, ), 
                                            theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), ), 
                                    baseline_offset = 'BASELINE_OFFSET_UNSPECIFIED', 
                                    bold = True, 
                                    font_family = '', 
                                    font_size = openapi_client.models.dimension.Dimension(
                                        magnitude = 1.337, 
                                        unit = 'UNIT_UNSPECIFIED', ), 
                                    foreground_color = openapi_client.models.optional_color.OptionalColor(), 
                                    italic = True, 
                                    link = openapi_client.models.link.Link(
                                        page_object_id = '', 
                                        relative_link = 'RELATIVE_SLIDE_LINK_UNSPECIFIED', 
                                        slide_index = 56, 
                                        url = '', ), 
                                    small_caps = True, 
                                    strikethrough = True, 
                                    underline = True, 
                                    weighted_font_family = openapi_client.models.weighted_font_family.WeightedFontFamily(
                                        font_family = '', 
                                        weight = 56, ), ), )
                            }, )
                    },
                text_elements = [
                    openapi_client.models.text_element.TextElement(
                        auto_text = openapi_client.models.auto_text.AutoText(
                            content = '', 
                            style = openapi_client.models.text_style.TextStyle(
                                background_color = openapi_client.models.optional_color.OptionalColor(
                                    opaque_color = openapi_client.models.opaque_color.OpaqueColor(
                                        rgb_color = openapi_client.models.rgb_color.RgbColor(
                                            blue = 1.337, 
                                            green = 1.337, 
                                            red = 1.337, ), 
                                        theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), ), 
                                baseline_offset = 'BASELINE_OFFSET_UNSPECIFIED', 
                                bold = True, 
                                font_family = '', 
                                font_size = openapi_client.models.dimension.Dimension(
                                    magnitude = 1.337, 
                                    unit = 'UNIT_UNSPECIFIED', ), 
                                foreground_color = openapi_client.models.optional_color.OptionalColor(), 
                                italic = True, 
                                link = openapi_client.models.link.Link(
                                    page_object_id = '', 
                                    relative_link = 'RELATIVE_SLIDE_LINK_UNSPECIFIED', 
                                    slide_index = 56, 
                                    url = '', ), 
                                small_caps = True, 
                                strikethrough = True, 
                                underline = True, 
                                weighted_font_family = openapi_client.models.weighted_font_family.WeightedFontFamily(
                                    font_family = '', 
                                    weight = 56, ), ), 
                            type = 'TYPE_UNSPECIFIED', ), 
                        end_index = 56, 
                        paragraph_marker = openapi_client.models.paragraph_marker.ParagraphMarker(
                            bullet = openapi_client.models.bullet.Bullet(
                                bullet_style = openapi_client.models.text_style.TextStyle(
                                    baseline_offset = 'BASELINE_OFFSET_UNSPECIFIED', 
                                    bold = True, 
                                    font_family = '', 
                                    italic = True, 
                                    small_caps = True, 
                                    strikethrough = True, 
                                    underline = True, ), 
                                glyph = '', 
                                list_id = '', 
                                nesting_level = 56, ), ), 
                        start_index = 56, 
                        text_run = openapi_client.models.text_run.TextRun(
                            content = '', ), )
                    ]
            )
        else:
            return TextContent(
        )
        """

    def testTextContent(self):
        """Test TextContent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
