# coding: utf-8

"""
    KMS Inventory API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_kms_inventory_v1_protected_resources_summary import GoogleCloudKmsInventoryV1ProtectedResourcesSummary

class TestGoogleCloudKmsInventoryV1ProtectedResourcesSummary(unittest.TestCase):
    """GoogleCloudKmsInventoryV1ProtectedResourcesSummary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudKmsInventoryV1ProtectedResourcesSummary:
        """Test GoogleCloudKmsInventoryV1ProtectedResourcesSummary
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudKmsInventoryV1ProtectedResourcesSummary`
        """
        model = GoogleCloudKmsInventoryV1ProtectedResourcesSummary()
        if include_optional:
            return GoogleCloudKmsInventoryV1ProtectedResourcesSummary(
                cloud_products = {
                    'key' : ''
                    },
                locations = {
                    'key' : ''
                    },
                name = '',
                project_count = 56,
                resource_count = '',
                resource_types = {
                    'key' : ''
                    }
            )
        else:
            return GoogleCloudKmsInventoryV1ProtectedResourcesSummary(
        )
        """

    def testGoogleCloudKmsInventoryV1ProtectedResourcesSummary(self):
        """Test GoogleCloudKmsInventoryV1ProtectedResourcesSummary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
