# coding: utf-8

"""
    KMS Inventory API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_kms_inventory_v1_protected_resource import GoogleCloudKmsInventoryV1ProtectedResource

class TestGoogleCloudKmsInventoryV1ProtectedResource(unittest.TestCase):
    """GoogleCloudKmsInventoryV1ProtectedResource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudKmsInventoryV1ProtectedResource:
        """Test GoogleCloudKmsInventoryV1ProtectedResource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudKmsInventoryV1ProtectedResource`
        """
        model = GoogleCloudKmsInventoryV1ProtectedResource()
        if include_optional:
            return GoogleCloudKmsInventoryV1ProtectedResource(
                cloud_product = '',
                create_time = '',
                crypto_key_version = '',
                crypto_key_versions = [
                    ''
                    ],
                labels = {
                    'key' : ''
                    },
                location = '',
                name = '',
                project = '',
                project_id = '',
                resource_type = ''
            )
        else:
            return GoogleCloudKmsInventoryV1ProtectedResource(
        )
        """

    def testGoogleCloudKmsInventoryV1ProtectedResource(self):
        """Test GoogleCloudKmsInventoryV1ProtectedResource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
