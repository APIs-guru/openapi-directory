# coding: utf-8

"""
    Discovery Engine API

    Discovery Engine API.

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_discoveryengine_v1alpha_field_config import GoogleCloudDiscoveryengineV1alphaFieldConfig

class TestGoogleCloudDiscoveryengineV1alphaFieldConfig(unittest.TestCase):
    """GoogleCloudDiscoveryengineV1alphaFieldConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDiscoveryengineV1alphaFieldConfig:
        """Test GoogleCloudDiscoveryengineV1alphaFieldConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDiscoveryengineV1alphaFieldConfig`
        """
        model = GoogleCloudDiscoveryengineV1alphaFieldConfig()
        if include_optional:
            return GoogleCloudDiscoveryengineV1alphaFieldConfig(
                completable_option = 'COMPLETABLE_OPTION_UNSPECIFIED',
                dynamic_facetable_option = 'DYNAMIC_FACETABLE_OPTION_UNSPECIFIED',
                field_path = '',
                field_type = 'FIELD_TYPE_UNSPECIFIED',
                indexable_option = 'INDEXABLE_OPTION_UNSPECIFIED',
                key_property_type = '',
                recs_filterable_option = 'FILTERABLE_OPTION_UNSPECIFIED',
                retrievable_option = 'RETRIEVABLE_OPTION_UNSPECIFIED',
                searchable_option = 'SEARCHABLE_OPTION_UNSPECIFIED'
            )
        else:
            return GoogleCloudDiscoveryengineV1alphaFieldConfig(
        )
        """

    def testGoogleCloudDiscoveryengineV1alphaFieldConfig(self):
        """Test GoogleCloudDiscoveryengineV1alphaFieldConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
