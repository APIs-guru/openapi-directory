# coding: utf-8

"""
    Discovery Engine API

    Discovery Engine API.

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_discoveryengine_v1alpha_lookup_widget_config_response import GoogleCloudDiscoveryengineV1alphaLookupWidgetConfigResponse

class TestGoogleCloudDiscoveryengineV1alphaLookupWidgetConfigResponse(unittest.TestCase):
    """GoogleCloudDiscoveryengineV1alphaLookupWidgetConfigResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDiscoveryengineV1alphaLookupWidgetConfigResponse:
        """Test GoogleCloudDiscoveryengineV1alphaLookupWidgetConfigResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDiscoveryengineV1alphaLookupWidgetConfigResponse`
        """
        model = GoogleCloudDiscoveryengineV1alphaLookupWidgetConfigResponse()
        if include_optional:
            return GoogleCloudDiscoveryengineV1alphaLookupWidgetConfigResponse(
                anonymous_widget_config = openapi_client.models.google_cloud_discoveryengine_v1alpha_widget_config.GoogleCloudDiscoveryengineV1alphaWidgetConfig(
                    allow_public_access = True, 
                    allowlisted_domains = [
                        ''
                        ], 
                    config_id = '', 
                    content_search_spec = openapi_client.models.google_cloud_discoveryengine_v1alpha_search_request_content_search_spec.GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec(
                        extractive_content_spec = openapi_client.models.google_cloud_discoveryengine_v1alpha_search_request_content_search_spec_extractive_content_spec.GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecExtractiveContentSpec(
                            max_extractive_answer_count = 56, 
                            max_extractive_segment_count = 56, 
                            num_next_segments = 56, 
                            num_previous_segments = 56, ), 
                        snippet_spec = openapi_client.models.google_cloud_discoveryengine_v1alpha_search_request_content_search_spec_snippet_spec.GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSnippetSpec(
                            max_snippet_count = 56, 
                            reference_only = True, 
                            return_snippet = True, ), 
                        summary_spec = openapi_client.models.google_cloud_discoveryengine_v1alpha_search_request_content_search_spec_summary_spec.GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpec(
                            ignore_adversarial_query = True, 
                            ignore_non_summary_seeking_query = True, 
                            include_citations = True, 
                            language_code = '', 
                            model_prompt_spec = openapi_client.models.google_cloud_discoveryengine_v1alpha_search_request_content_search_spec_summary_spec_model_prompt_spec.GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelPromptSpec(
                                preamble = '', ), 
                            model_spec = openapi_client.models.google_cloud_discoveryengine_v1alpha_search_request_content_search_spec_summary_spec_model_spec.GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelSpec(
                                version = '', ), 
                            summary_result_count = 56, ), ), 
                    create_time = '', 
                    data_store_type = 'DATA_STORE_TYPE_UNSPECIFIED', 
                    display_name = '', 
                    enable_autocomplete = True, 
                    enable_conversational_search = True, 
                    enable_quality_feedback = True, 
                    enable_result_score = True, 
                    enable_safe_search = True, 
                    enable_snippet_result_summary = True, 
                    enable_summarization = True, 
                    enable_web_app = True, 
                    facet_field = [
                        openapi_client.models.google_cloud_discoveryengine_v1alpha_widget_config_facet_field.GoogleCloudDiscoveryengineV1alphaWidgetConfigFacetField(
                            display_name = '', 
                            field = '', )
                        ], 
                    fields_ui_components_map = {
                        'key' : openapi_client.models.google_cloud_discoveryengine_v1alpha_widget_config_ui_component_field.GoogleCloudDiscoveryengineV1alphaWidgetConfigUIComponentField(
                            device_visibility = [
                                'DEVICE_VISIBILITY_UNSPECIFIED'
                                ], 
                            display_template = '', 
                            field = '', )
                        }, 
                    industry_vertical = 'INDUSTRY_VERTICAL_UNSPECIFIED', 
                    llm_enabled = True, 
                    minimum_data_term_accepted = True, 
                    name = '', 
                    result_display_type = 'RESULT_DISPLAY_TYPE_UNSPECIFIED', 
                    solution_type = 'SOLUTION_TYPE_UNSPECIFIED', 
                    update_time = '', )
            )
        else:
            return GoogleCloudDiscoveryengineV1alphaLookupWidgetConfigResponse(
        )
        """

    def testGoogleCloudDiscoveryengineV1alphaLookupWidgetConfigResponse(self):
        """Test GoogleCloudDiscoveryengineV1alphaLookupWidgetConfigResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
