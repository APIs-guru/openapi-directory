# coding: utf-8

"""
    Discovery Engine API

    Discovery Engine API.

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_discoveryengine_v1alpha_converse_conversation_request import GoogleCloudDiscoveryengineV1alphaConverseConversationRequest

class TestGoogleCloudDiscoveryengineV1alphaConverseConversationRequest(unittest.TestCase):
    """GoogleCloudDiscoveryengineV1alphaConverseConversationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDiscoveryengineV1alphaConverseConversationRequest:
        """Test GoogleCloudDiscoveryengineV1alphaConverseConversationRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDiscoveryengineV1alphaConverseConversationRequest`
        """
        model = GoogleCloudDiscoveryengineV1alphaConverseConversationRequest()
        if include_optional:
            return GoogleCloudDiscoveryengineV1alphaConverseConversationRequest(
                boost_spec = openapi_client.models.google_cloud_discoveryengine_v1alpha_search_request_boost_spec.GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec(
                    condition_boost_specs = [
                        openapi_client.models.google_cloud_discoveryengine_v1alpha_search_request_boost_spec_condition_boost_spec.GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpec(
                            boost = 1.337, 
                            condition = '', )
                        ], ),
                conversation = openapi_client.models.google_cloud_discoveryengine_v1alpha_conversation.GoogleCloudDiscoveryengineV1alphaConversation(
                    end_time = '', 
                    messages = [
                        openapi_client.models.google_cloud_discoveryengine_v1alpha_conversation_message.GoogleCloudDiscoveryengineV1alphaConversationMessage(
                            create_time = '', 
                            reply = openapi_client.models.google_cloud_discoveryengine_v1alpha_reply.GoogleCloudDiscoveryengineV1alphaReply(
                                references = [
                                    openapi_client.models.google_cloud_discoveryengine_v1alpha_reply_reference.GoogleCloudDiscoveryengineV1alphaReplyReference(
                                        anchor_text = '', 
                                        end = 56, 
                                        start = 56, 
                                        uri = '', )
                                    ], 
                                summary = openapi_client.models.google_cloud_discoveryengine_v1alpha_search_response_summary.GoogleCloudDiscoveryengineV1alphaSearchResponseSummary(
                                    safety_attributes = openapi_client.models.google_cloud_discoveryengine_v1alpha_search_response_summary_safety_attributes.GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySafetyAttributes(
                                        categories = [
                                            ''
                                            ], 
                                        scores = [
                                            1.337
                                            ], ), 
                                    summary_skipped_reasons = [
                                        'SUMMARY_SKIPPED_REASON_UNSPECIFIED'
                                        ], 
                                    summary_text = '', 
                                    summary_with_metadata = openapi_client.models.google_cloud_discoveryengine_v1alpha_search_response_summary_summary_with_metadata.GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummaryWithMetadata(
                                        citation_metadata = openapi_client.models.google_cloud_discoveryengine_v1alpha_search_response_summary_citation_metadata.GoogleCloudDiscoveryengineV1alphaSearchResponseSummaryCitationMetadata(
                                            citations = [
                                                openapi_client.models.google_cloud_discoveryengine_v1alpha_search_response_summary_citation.GoogleCloudDiscoveryengineV1alphaSearchResponseSummaryCitation(
                                                    end_index = '', 
                                                    sources = [
                                                        openapi_client.models.google_cloud_discoveryengine_v1alpha_search_response_summary_citation_source.GoogleCloudDiscoveryengineV1alphaSearchResponseSummaryCitationSource(
                                                            reference_index = '', )
                                                        ], 
                                                    start_index = '', )
                                                ], ), ), ), ), 
                            user_input = openapi_client.models.google_cloud_discoveryengine_v1alpha_text_input.GoogleCloudDiscoveryengineV1alphaTextInput(
                                context = openapi_client.models.google_cloud_discoveryengine_v1alpha_conversation_context.GoogleCloudDiscoveryengineV1alphaConversationContext(
                                    active_document = '', 
                                    context_documents = [
                                        ''
                                        ], ), 
                                input = '', ), )
                        ], 
                    name = '', 
                    start_time = '', 
                    state = 'STATE_UNSPECIFIED', 
                    user_pseudo_id = '', ),
                filter = '',
                name = '',
                query = openapi_client.models.google_cloud_discoveryengine_v1alpha_text_input.GoogleCloudDiscoveryengineV1alphaTextInput(
                    context = openapi_client.models.google_cloud_discoveryengine_v1alpha_conversation_context.GoogleCloudDiscoveryengineV1alphaConversationContext(
                        active_document = '', 
                        context_documents = [
                            ''
                            ], ), 
                    input = '', ),
                safe_search = True,
                serving_config = '',
                summary_spec = openapi_client.models.google_cloud_discoveryengine_v1alpha_search_request_content_search_spec_summary_spec.GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpec(
                    ignore_adversarial_query = True, 
                    ignore_non_summary_seeking_query = True, 
                    include_citations = True, 
                    language_code = '', 
                    model_prompt_spec = openapi_client.models.google_cloud_discoveryengine_v1alpha_search_request_content_search_spec_summary_spec_model_prompt_spec.GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelPromptSpec(
                        preamble = '', ), 
                    model_spec = openapi_client.models.google_cloud_discoveryengine_v1alpha_search_request_content_search_spec_summary_spec_model_spec.GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelSpec(
                        version = '', ), 
                    summary_result_count = 56, ),
                user_labels = {
                    'key' : ''
                    }
            )
        else:
            return GoogleCloudDiscoveryengineV1alphaConverseConversationRequest(
        )
        """

    def testGoogleCloudDiscoveryengineV1alphaConverseConversationRequest(self):
        """Test GoogleCloudDiscoveryengineV1alphaConverseConversationRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
