# coding: utf-8

"""
    Discovery Engine API

    Discovery Engine API.

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_discoveryengine_v1alpha_list_engines_response import GoogleCloudDiscoveryengineV1alphaListEnginesResponse

class TestGoogleCloudDiscoveryengineV1alphaListEnginesResponse(unittest.TestCase):
    """GoogleCloudDiscoveryengineV1alphaListEnginesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDiscoveryengineV1alphaListEnginesResponse:
        """Test GoogleCloudDiscoveryengineV1alphaListEnginesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDiscoveryengineV1alphaListEnginesResponse`
        """
        model = GoogleCloudDiscoveryengineV1alphaListEnginesResponse()
        if include_optional:
            return GoogleCloudDiscoveryengineV1alphaListEnginesResponse(
                engines = [
                    openapi_client.models.google_cloud_discoveryengine_v1alpha_engine.GoogleCloudDiscoveryengineV1alphaEngine(
                        allow_multiple_data_stores_search_engine = True, 
                        chat_engine_config = openapi_client.models.google_cloud_discoveryengine_v1alpha_engine_chat_engine_config.GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig(
                            agent_creation_config = openapi_client.models.google_cloud_discoveryengine_v1alpha_engine_chat_engine_config_agent_creation_config.GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig(
                                business = '', 
                                default_language_code = '', 
                                location = '', 
                                time_zone = '', ), 
                            dialogflow_agent_to_link = '', ), 
                        chat_engine_metadata = openapi_client.models.google_cloud_discoveryengine_v1alpha_engine_chat_engine_metadata.GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata(
                            dialogflow_agent = '', ), 
                        common_config = openapi_client.models.google_cloud_discoveryengine_v1alpha_engine_common_config.GoogleCloudDiscoveryengineV1alphaEngineCommonConfig(
                            company_name = '', ), 
                        create_time = '', 
                        data_store_ids = [
                            ''
                            ], 
                        display_name = '', 
                        industry_vertical = 'INDUSTRY_VERTICAL_UNSPECIFIED', 
                        media_recommendation_engine_config = openapi_client.models.google_cloud_discoveryengine_v1alpha_engine_media_recommendation_engine_config.GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig(
                            optimization_objective = '', 
                            optimization_objective_config = openapi_client.models.google_cloud_discoveryengine_v1alpha_engine_media_recommendation_engine_config_optimization_objective_config.GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig(
                                target_field = '', 
                                target_field_value_float = 1.337, ), 
                            training_state = 'TRAINING_STATE_UNSPECIFIED', 
                            type = '', ), 
                        name = '', 
                        recommendation_metadata = openapi_client.models.google_cloud_discoveryengine_v1alpha_engine_recommendation_metadata.GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata(
                            data_state = 'DATA_STATE_UNSPECIFIED', 
                            last_tune_time = '', 
                            serving_state = 'SERVING_STATE_UNSPECIFIED', 
                            tuning_operation = '', ), 
                        search_engine_config = openapi_client.models.google_cloud_discoveryengine_v1alpha_engine_search_engine_config.GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig(
                            search_add_ons = [
                                'SEARCH_ADD_ON_UNSPECIFIED'
                                ], 
                            search_tier = 'SEARCH_TIER_UNSPECIFIED', ), 
                        similar_documents_config = openapi_client.models.similar_documents_config.similarDocumentsConfig(), 
                        solution_type = 'SOLUTION_TYPE_UNSPECIFIED', 
                        update_time = '', )
                    ],
                next_page_token = ''
            )
        else:
            return GoogleCloudDiscoveryengineV1alphaListEnginesResponse(
        )
        """

    def testGoogleCloudDiscoveryengineV1alphaListEnginesResponse(self):
        """Test GoogleCloudDiscoveryengineV1alphaListEnginesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
