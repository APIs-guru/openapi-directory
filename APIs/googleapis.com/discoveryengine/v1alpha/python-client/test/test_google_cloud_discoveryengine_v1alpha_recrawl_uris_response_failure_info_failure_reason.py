# coding: utf-8

"""
    Discovery Engine API

    Discovery Engine API.

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_discoveryengine_v1alpha_recrawl_uris_response_failure_info_failure_reason import GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason

class TestGoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason(unittest.TestCase):
    """GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason:
        """Test GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason`
        """
        model = GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason()
        if include_optional:
            return GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason(
                corpus_type = 'CORPUS_TYPE_UNSPECIFIED',
                error_message = ''
            )
        else:
            return GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason(
        )
        """

    def testGoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason(self):
        """Test GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
