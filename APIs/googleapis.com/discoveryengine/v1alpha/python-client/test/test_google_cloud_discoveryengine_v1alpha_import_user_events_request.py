# coding: utf-8

"""
    Discovery Engine API

    Discovery Engine API.

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_discoveryengine_v1alpha_import_user_events_request import GoogleCloudDiscoveryengineV1alphaImportUserEventsRequest

class TestGoogleCloudDiscoveryengineV1alphaImportUserEventsRequest(unittest.TestCase):
    """GoogleCloudDiscoveryengineV1alphaImportUserEventsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDiscoveryengineV1alphaImportUserEventsRequest:
        """Test GoogleCloudDiscoveryengineV1alphaImportUserEventsRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDiscoveryengineV1alphaImportUserEventsRequest`
        """
        model = GoogleCloudDiscoveryengineV1alphaImportUserEventsRequest()
        if include_optional:
            return GoogleCloudDiscoveryengineV1alphaImportUserEventsRequest(
                bigquery_source = openapi_client.models.google_cloud_discoveryengine_v1alpha_big_query_source.GoogleCloudDiscoveryengineV1alphaBigQuerySource(
                    data_schema = '', 
                    dataset_id = '', 
                    gcs_staging_dir = '', 
                    partition_date = openapi_client.models.google_type_date.GoogleTypeDate(
                        day = 56, 
                        month = 56, 
                        year = 56, ), 
                    project_id = '', 
                    table_id = '', ),
                error_config = openapi_client.models.google_cloud_discoveryengine_v1alpha_import_error_config.GoogleCloudDiscoveryengineV1alphaImportErrorConfig(
                    gcs_prefix = '', ),
                gcs_source = openapi_client.models.google_cloud_discoveryengine_v1alpha_gcs_source.GoogleCloudDiscoveryengineV1alphaGcsSource(
                    data_schema = '', 
                    input_uris = [
                        ''
                        ], ),
                inline_source = openapi_client.models.google_cloud_discoveryengine_v1alpha_import_user_events_request_inline_source.GoogleCloudDiscoveryengineV1alphaImportUserEventsRequestInlineSource(
                    user_events = [
                        openapi_client.models.google_cloud_discoveryengine_v1alpha_user_event.GoogleCloudDiscoveryengineV1alphaUserEvent(
                            attributes = {
                                'key' : openapi_client.models.google_cloud_discoveryengine_v1alpha_custom_attribute.GoogleCloudDiscoveryengineV1alphaCustomAttribute(
                                    numbers = [
                                        1.337
                                        ], 
                                    text = [
                                        ''
                                        ], )
                                }, 
                            attribution_token = '', 
                            completion_info = openapi_client.models.google_cloud_discoveryengine_v1alpha_completion_info.GoogleCloudDiscoveryengineV1alphaCompletionInfo(
                                selected_position = 56, 
                                selected_suggestion = '', ), 
                            direct_user_request = True, 
                            documents = [
                                openapi_client.models.google_cloud_discoveryengine_v1alpha_document_info.GoogleCloudDiscoveryengineV1alphaDocumentInfo(
                                    id = '', 
                                    name = '', 
                                    promotion_ids = [
                                        ''
                                        ], 
                                    quantity = 56, 
                                    uri = '', )
                                ], 
                            event_time = '', 
                            event_type = '', 
                            filter = '', 
                            media_info = openapi_client.models.google_cloud_discoveryengine_v1alpha_media_info.GoogleCloudDiscoveryengineV1alphaMediaInfo(
                                media_progress_duration = '', 
                                media_progress_percentage = 1.337, ), 
                            page_info = openapi_client.models.google_cloud_discoveryengine_v1alpha_page_info.GoogleCloudDiscoveryengineV1alphaPageInfo(
                                page_category = '', 
                                pageview_id = '', 
                                referrer_uri = '', 
                                uri = '', ), 
                            panel = openapi_client.models.google_cloud_discoveryengine_v1alpha_panel_info.GoogleCloudDiscoveryengineV1alphaPanelInfo(
                                display_name = '', 
                                panel_id = '', 
                                panel_position = 56, 
                                total_panels = 56, ), 
                            promotion_ids = [
                                ''
                                ], 
                            search_info = openapi_client.models.google_cloud_discoveryengine_v1alpha_search_info.GoogleCloudDiscoveryengineV1alphaSearchInfo(
                                offset = 56, 
                                order_by = '', 
                                search_query = '', ), 
                            session_id = '', 
                            tag_ids = [
                                ''
                                ], 
                            transaction_info = openapi_client.models.google_cloud_discoveryengine_v1alpha_transaction_info.GoogleCloudDiscoveryengineV1alphaTransactionInfo(
                                cost = 1.337, 
                                currency = '', 
                                discount_value = 1.337, 
                                tax = 1.337, 
                                transaction_id = '', 
                                value = 1.337, ), 
                            user_info = openapi_client.models.google_cloud_discoveryengine_v1alpha_user_info.GoogleCloudDiscoveryengineV1alphaUserInfo(
                                user_agent = '', 
                                user_id = '', ), 
                            user_pseudo_id = '', )
                        ], )
            )
        else:
            return GoogleCloudDiscoveryengineV1alphaImportUserEventsRequest(
        )
        """

    def testGoogleCloudDiscoveryengineV1alphaImportUserEventsRequest(self):
        """Test GoogleCloudDiscoveryengineV1alphaImportUserEventsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
