# coding: utf-8

"""
    Discovery Engine API

    Discovery Engine API.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_discoveryengine_logging_error_context import GoogleCloudDiscoveryengineLoggingErrorContext

class TestGoogleCloudDiscoveryengineLoggingErrorContext(unittest.TestCase):
    """GoogleCloudDiscoveryengineLoggingErrorContext unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDiscoveryengineLoggingErrorContext:
        """Test GoogleCloudDiscoveryengineLoggingErrorContext
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDiscoveryengineLoggingErrorContext`
        """
        model = GoogleCloudDiscoveryengineLoggingErrorContext()
        if include_optional:
            return GoogleCloudDiscoveryengineLoggingErrorContext(
                http_request = openapi_client.models.google_cloud_discoveryengine_logging_http_request_context.GoogleCloudDiscoveryengineLoggingHttpRequestContext(
                    response_status_code = 56, ),
                report_location = openapi_client.models.google_cloud_discoveryengine_logging_source_location.GoogleCloudDiscoveryengineLoggingSourceLocation(
                    function_name = '', )
            )
        else:
            return GoogleCloudDiscoveryengineLoggingErrorContext(
        )
        """

    def testGoogleCloudDiscoveryengineLoggingErrorContext(self):
        """Test GoogleCloudDiscoveryengineLoggingErrorContext"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
