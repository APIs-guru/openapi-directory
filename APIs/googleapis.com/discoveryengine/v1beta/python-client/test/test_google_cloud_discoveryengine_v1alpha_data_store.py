# coding: utf-8

"""
    Discovery Engine API

    Discovery Engine API.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_discoveryengine_v1alpha_data_store import GoogleCloudDiscoveryengineV1alphaDataStore

class TestGoogleCloudDiscoveryengineV1alphaDataStore(unittest.TestCase):
    """GoogleCloudDiscoveryengineV1alphaDataStore unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDiscoveryengineV1alphaDataStore:
        """Test GoogleCloudDiscoveryengineV1alphaDataStore
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDiscoveryengineV1alphaDataStore`
        """
        model = GoogleCloudDiscoveryengineV1alphaDataStore()
        if include_optional:
            return GoogleCloudDiscoveryengineV1alphaDataStore(
                acl_enabled = True,
                content_config = 'CONTENT_CONFIG_UNSPECIFIED',
                create_time = '',
                default_schema_id = '',
                display_name = '',
                document_processing_config = openapi_client.models.google_cloud_discoveryengine_v1alpha_document_processing_config.GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig(
                    default_parsing_config = openapi_client.models.google_cloud_discoveryengine_v1alpha_document_processing_config_parsing_config.GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig(
                        digital_parsing_config = openapi_client.models.google_cloud_discoveryengine_v1alpha_digital_parsing_config.GoogleCloudDiscoveryengineV1alphaDigitalParsingConfig(), 
                        layout_parsing_config = openapi_client.models.google_cloud_discoveryengine_v1alpha_layout_parsing_config.GoogleCloudDiscoveryengineV1alphaLayoutParsingConfig(), 
                        ocr_parsing_config = openapi_client.models.google_cloud_discoveryengine_v1alpha_ocr_parsing_config.GoogleCloudDiscoveryengineV1alphaOcrParsingConfig(
                            enhanced_document_elements = [
                                ''
                                ], 
                            use_native_text = True, ), ), 
                    name = '', 
                    ocr_config = openapi_client.models.google_cloud_discoveryengine_v1alpha_ocr_config.GoogleCloudDiscoveryengineV1alphaOcrConfig(
                        enabled = True, 
                        use_native_text = True, ), 
                    parsing_config_overrides = {
                        'key' : openapi_client.models.google_cloud_discoveryengine_v1alpha_document_processing_config_parsing_config.GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig()
                        }, ),
                idp_config = openapi_client.models.google_cloud_discoveryengine_v1alpha_idp_config.GoogleCloudDiscoveryengineV1alphaIdpConfig(
                    external_idp_config = openapi_client.models.google_cloud_discoveryengine_v1alpha_idp_config_external_idp_config.GoogleCloudDiscoveryengineV1alphaIdpConfigExternalIdpConfig(
                        workforce_pool_name = '', ), 
                    idp_type = 'IDP_TYPE_UNSPECIFIED', ),
                industry_vertical = 'INDUSTRY_VERTICAL_UNSPECIFIED',
                name = '',
                solution_types = [
                    'SOLUTION_TYPE_UNSPECIFIED'
                    ],
                starting_schema = openapi_client.models.google_cloud_discoveryengine_v1alpha_schema.GoogleCloudDiscoveryengineV1alphaSchema(
                    field_configs = [
                        openapi_client.models.google_cloud_discoveryengine_v1alpha_field_config.GoogleCloudDiscoveryengineV1alphaFieldConfig(
                            completable_option = 'COMPLETABLE_OPTION_UNSPECIFIED', 
                            dynamic_facetable_option = 'DYNAMIC_FACETABLE_OPTION_UNSPECIFIED', 
                            field_path = '', 
                            field_type = 'FIELD_TYPE_UNSPECIFIED', 
                            indexable_option = 'INDEXABLE_OPTION_UNSPECIFIED', 
                            key_property_type = '', 
                            recs_filterable_option = 'FILTERABLE_OPTION_UNSPECIFIED', 
                            retrievable_option = 'RETRIEVABLE_OPTION_UNSPECIFIED', 
                            searchable_option = 'SEARCHABLE_OPTION_UNSPECIFIED', )
                        ], 
                    json_schema = '', 
                    name = '', 
                    struct_schema = {
                        'key' : null
                        }, )
            )
        else:
            return GoogleCloudDiscoveryengineV1alphaDataStore(
        )
        """

    def testGoogleCloudDiscoveryengineV1alphaDataStore(self):
        """Test GoogleCloudDiscoveryengineV1alphaDataStore"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
