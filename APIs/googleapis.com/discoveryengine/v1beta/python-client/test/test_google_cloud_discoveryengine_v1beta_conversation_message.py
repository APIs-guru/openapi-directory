# coding: utf-8

"""
    Discovery Engine API

    Discovery Engine API.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_discoveryengine_v1beta_conversation_message import GoogleCloudDiscoveryengineV1betaConversationMessage

class TestGoogleCloudDiscoveryengineV1betaConversationMessage(unittest.TestCase):
    """GoogleCloudDiscoveryengineV1betaConversationMessage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDiscoveryengineV1betaConversationMessage:
        """Test GoogleCloudDiscoveryengineV1betaConversationMessage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDiscoveryengineV1betaConversationMessage`
        """
        model = GoogleCloudDiscoveryengineV1betaConversationMessage()
        if include_optional:
            return GoogleCloudDiscoveryengineV1betaConversationMessage(
                create_time = '',
                reply = openapi_client.models.google_cloud_discoveryengine_v1beta_reply.GoogleCloudDiscoveryengineV1betaReply(
                    references = [
                        openapi_client.models.google_cloud_discoveryengine_v1beta_reply_reference.GoogleCloudDiscoveryengineV1betaReplyReference(
                            anchor_text = '', 
                            end = 56, 
                            start = 56, 
                            uri = '', )
                        ], 
                    summary = openapi_client.models.google_cloud_discoveryengine_v1beta_search_response_summary.GoogleCloudDiscoveryengineV1betaSearchResponseSummary(
                        safety_attributes = openapi_client.models.google_cloud_discoveryengine_v1beta_search_response_summary_safety_attributes.GoogleCloudDiscoveryengineV1betaSearchResponseSummarySafetyAttributes(
                            categories = [
                                ''
                                ], 
                            scores = [
                                1.337
                                ], ), 
                        summary_skipped_reasons = [
                            'SUMMARY_SKIPPED_REASON_UNSPECIFIED'
                            ], 
                        summary_text = '', 
                        summary_with_metadata = openapi_client.models.google_cloud_discoveryengine_v1beta_search_response_summary_summary_with_metadata.GoogleCloudDiscoveryengineV1betaSearchResponseSummarySummaryWithMetadata(
                            citation_metadata = openapi_client.models.google_cloud_discoveryengine_v1beta_search_response_summary_citation_metadata.GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationMetadata(
                                citations = [
                                    openapi_client.models.google_cloud_discoveryengine_v1beta_search_response_summary_citation.GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitation(
                                        end_index = '', 
                                        sources = [
                                            openapi_client.models.google_cloud_discoveryengine_v1beta_search_response_summary_citation_source.GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationSource(
                                                reference_index = '', )
                                            ], 
                                        start_index = '', )
                                    ], ), ), ), ),
                user_input = openapi_client.models.google_cloud_discoveryengine_v1beta_text_input.GoogleCloudDiscoveryengineV1betaTextInput(
                    context = openapi_client.models.google_cloud_discoveryengine_v1beta_conversation_context.GoogleCloudDiscoveryengineV1betaConversationContext(
                        active_document = '', 
                        context_documents = [
                            ''
                            ], ), 
                    input = '', )
            )
        else:
            return GoogleCloudDiscoveryengineV1betaConversationMessage(
        )
        """

    def testGoogleCloudDiscoveryengineV1betaConversationMessage(self):
        """Test GoogleCloudDiscoveryengineV1betaConversationMessage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
