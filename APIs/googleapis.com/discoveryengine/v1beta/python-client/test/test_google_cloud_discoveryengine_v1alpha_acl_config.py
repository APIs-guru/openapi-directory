# coding: utf-8

"""
    Discovery Engine API

    Discovery Engine API.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_discoveryengine_v1alpha_acl_config import GoogleCloudDiscoveryengineV1alphaAclConfig

class TestGoogleCloudDiscoveryengineV1alphaAclConfig(unittest.TestCase):
    """GoogleCloudDiscoveryengineV1alphaAclConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDiscoveryengineV1alphaAclConfig:
        """Test GoogleCloudDiscoveryengineV1alphaAclConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDiscoveryengineV1alphaAclConfig`
        """
        model = GoogleCloudDiscoveryengineV1alphaAclConfig()
        if include_optional:
            return GoogleCloudDiscoveryengineV1alphaAclConfig(
                idp_config = openapi_client.models.google_cloud_discoveryengine_v1alpha_idp_config.GoogleCloudDiscoveryengineV1alphaIdpConfig(
                    external_idp_config = openapi_client.models.google_cloud_discoveryengine_v1alpha_idp_config_external_idp_config.GoogleCloudDiscoveryengineV1alphaIdpConfigExternalIdpConfig(
                        workforce_pool_name = '', ), 
                    idp_type = 'IDP_TYPE_UNSPECIFIED', ),
                name = ''
            )
        else:
            return GoogleCloudDiscoveryengineV1alphaAclConfig(
        )
        """

    def testGoogleCloudDiscoveryengineV1alphaAclConfig(self):
        """Test GoogleCloudDiscoveryengineV1alphaAclConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
