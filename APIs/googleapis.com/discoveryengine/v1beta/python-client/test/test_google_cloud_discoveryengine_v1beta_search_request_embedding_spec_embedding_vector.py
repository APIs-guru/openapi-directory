# coding: utf-8

"""
    Discovery Engine API

    Discovery Engine API.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_discoveryengine_v1beta_search_request_embedding_spec_embedding_vector import GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector

class TestGoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector(unittest.TestCase):
    """GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector:
        """Test GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector`
        """
        model = GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector()
        if include_optional:
            return GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector(
                field_path = '',
                vector = [
                    1.337
                    ]
            )
        else:
            return GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector(
        )
        """

    def testGoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector(self):
        """Test GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
