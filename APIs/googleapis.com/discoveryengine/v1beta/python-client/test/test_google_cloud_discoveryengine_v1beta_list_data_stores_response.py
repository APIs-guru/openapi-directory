# coding: utf-8

"""
    Discovery Engine API

    Discovery Engine API.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_discoveryengine_v1beta_list_data_stores_response import GoogleCloudDiscoveryengineV1betaListDataStoresResponse

class TestGoogleCloudDiscoveryengineV1betaListDataStoresResponse(unittest.TestCase):
    """GoogleCloudDiscoveryengineV1betaListDataStoresResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDiscoveryengineV1betaListDataStoresResponse:
        """Test GoogleCloudDiscoveryengineV1betaListDataStoresResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDiscoveryengineV1betaListDataStoresResponse`
        """
        model = GoogleCloudDiscoveryengineV1betaListDataStoresResponse()
        if include_optional:
            return GoogleCloudDiscoveryengineV1betaListDataStoresResponse(
                data_stores = [
                    openapi_client.models.google_cloud_discoveryengine_v1beta_data_store.GoogleCloudDiscoveryengineV1betaDataStore(
                        content_config = 'CONTENT_CONFIG_UNSPECIFIED', 
                        create_time = '', 
                        default_schema_id = '', 
                        display_name = '', 
                        document_processing_config = openapi_client.models.google_cloud_discoveryengine_v1beta_document_processing_config.GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig(
                            default_parsing_config = openapi_client.models.google_cloud_discoveryengine_v1beta_document_processing_config_parsing_config.GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig(
                                digital_parsing_config = openapi_client.models.google_cloud_discoveryengine_v1beta_digital_parsing_config.GoogleCloudDiscoveryengineV1betaDigitalParsingConfig(), 
                                ocr_parsing_config = openapi_client.models.google_cloud_discoveryengine_v1beta_ocr_parsing_config.GoogleCloudDiscoveryengineV1betaOcrParsingConfig(
                                    enhanced_document_elements = [
                                        ''
                                        ], 
                                    use_native_text = True, ), ), 
                            name = '', 
                            parsing_config_overrides = {
                                'key' : openapi_client.models.google_cloud_discoveryengine_v1beta_document_processing_config_parsing_config.GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig(
                                    digital_parsing_config = openapi_client.models.google_cloud_discoveryengine_v1beta_digital_parsing_config.GoogleCloudDiscoveryengineV1betaDigitalParsingConfig(), )
                                }, ), 
                        industry_vertical = 'INDUSTRY_VERTICAL_UNSPECIFIED', 
                        name = '', 
                        solution_types = [
                            'SOLUTION_TYPE_UNSPECIFIED'
                            ], 
                        starting_schema = openapi_client.models.google_cloud_discoveryengine_v1beta_schema.GoogleCloudDiscoveryengineV1betaSchema(
                            json_schema = '', 
                            name = '', 
                            struct_schema = {
                                'key' : null
                                }, ), )
                    ],
                next_page_token = ''
            )
        else:
            return GoogleCloudDiscoveryengineV1betaListDataStoresResponse(
        )
        """

    def testGoogleCloudDiscoveryengineV1betaListDataStoresResponse(self):
        """Test GoogleCloudDiscoveryengineV1betaListDataStoresResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
