# coding: utf-8

"""
    Discovery Engine API

    Discovery Engine API.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_discoveryengine_logging_error_log import GoogleCloudDiscoveryengineLoggingErrorLog

class TestGoogleCloudDiscoveryengineLoggingErrorLog(unittest.TestCase):
    """GoogleCloudDiscoveryengineLoggingErrorLog unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDiscoveryengineLoggingErrorLog:
        """Test GoogleCloudDiscoveryengineLoggingErrorLog
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDiscoveryengineLoggingErrorLog`
        """
        model = GoogleCloudDiscoveryengineLoggingErrorLog()
        if include_optional:
            return GoogleCloudDiscoveryengineLoggingErrorLog(
                context = openapi_client.models.google_cloud_discoveryengine_logging_error_context.GoogleCloudDiscoveryengineLoggingErrorContext(
                    http_request = openapi_client.models.google_cloud_discoveryengine_logging_http_request_context.GoogleCloudDiscoveryengineLoggingHttpRequestContext(
                        response_status_code = 56, ), 
                    report_location = openapi_client.models.google_cloud_discoveryengine_logging_source_location.GoogleCloudDiscoveryengineLoggingSourceLocation(
                        function_name = '', ), ),
                import_payload = openapi_client.models.google_cloud_discoveryengine_logging_import_error_context.GoogleCloudDiscoveryengineLoggingImportErrorContext(
                    document = '', 
                    gcs_path = '', 
                    line_number = '', 
                    operation = '', 
                    user_event = '', ),
                message = '',
                request_payload = {
                    'key' : null
                    },
                response_payload = {
                    'key' : null
                    },
                service_context = openapi_client.models.google_cloud_discoveryengine_logging_service_context.GoogleCloudDiscoveryengineLoggingServiceContext(
                    service = '', ),
                status = openapi_client.models.google_rpc_status.GoogleRpcStatus(
                    code = 56, 
                    details = [
                        {
                            'key' : null
                            }
                        ], 
                    message = '', )
            )
        else:
            return GoogleCloudDiscoveryengineLoggingErrorLog(
        )
        """

    def testGoogleCloudDiscoveryengineLoggingErrorLog(self):
        """Test GoogleCloudDiscoveryengineLoggingErrorLog"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
