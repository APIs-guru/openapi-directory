openapi: 3.0.0
servers:
  - url: https://discoveryengine.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Discovery Engine API.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Discovery Engine API
  version: v1beta
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://discoveryengine.googleapis.com/$discovery/rest?version=v1beta
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: discoveryengine
externalDocs:
  url: https://cloud.google.com/discovery-engine/docs
tags:
  - name: projects
paths:
  /v1beta/{dataStore}:completeQuery:
    get:
      description: Completes the specified user input with keyword suggestions.
      operationId: discoveryengine.projects.locations.dataStores.completeQuery
      parameters:
        - description: Required. The parent data store resource name for which the completion is performed, such as `projects/*/locations/global/collections/default_collection/dataStores/default_data_store`.
          in: path
          name: dataStore
          required: true
          schema:
            type: string
        - description: Indicates if tail suggestions should be returned if there are no suggestions that match the full query. Even if set to true, if there are suggestions that match the full query, those are returned and no tail suggestions are returned.
          in: query
          name: includeTailSuggestions
          schema:
            type: boolean
        - description: Required. The typeahead input used to fetch suggestions. Maximum length is 128 characters.
          in: query
          name: query
          schema:
            type: string
        - description: "Specifies the autocomplete data model. This overrides any model specified in the Configuration > Autocomplete section of the Cloud console. Currently supported values: * `document` - Using suggestions generated from user-imported documents. * `search-history` - Using suggestions generated from the past history of SearchService.Search API calls. Do not use it when there is no traffic for Search API. * `user-event` - Using suggestions generated from user-imported search events. * `document-completable` - Using suggestions taken directly from user-imported document fields marked as completable. Default values: * `document` is the default model for regular dataStores. * `search-history` is the default model for site search dataStores."
          in: query
          name: queryModel
          schema:
            type: string
        - description: A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. This field should NOT have a fixed value such as `unknown_visitor`. This should be the same identifier as UserEvent.user_pseudo_id and SearchRequest.user_pseudo_id. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
          in: query
          name: userPseudoId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaCompleteQueryResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1beta/{name}:
    delete:
      description: Deletes a TargetSite.
      operationId: discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.delete
      parameters:
        - description: Required. Full resource name of TargetSite, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`. If the caller does not have permission to access the TargetSite, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the requested TargetSite does not exist, a NOT_FOUND error is returned.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: discoveryengine.projects.operations.get
      parameters:
        - description: The name of the operation resource.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a TargetSite.
      operationId: discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.patch
      parameters:
        - description: Output only. The fully qualified resource name of the target site. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}` The `target_site_id` is system-generated.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: "Indicates which fields in the provided ServingConfig to update. The following are NOT supported: * ServingConfig.name If not set, all supported fields are updated."
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaTargetSite"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta/{name}/operations:
    get:
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: discoveryengine.projects.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1beta/{name}:converse:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Converses a conversation.
      operationId: discoveryengine.projects.locations.dataStores.conversations.converse
      parameters:
        - description: "Required. The resource name of the Conversation to get. Format: `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`. Use `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/-` to activate auto session mode, which automatically creates a new conversation inside a ConverseConversation session."
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaConverseConversationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaConverseConversationResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta/{parent}/conversations:
    get:
      description: Lists all Conversations by their parent DataStore.
      operationId: discoveryengine.projects.locations.dataStores.conversations.list
      parameters:
        - description: "Required. The data store resource name. Format: `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'A filter to apply on the list results. The supported features are: user_pseudo_id, state. Example: "user_pseudo_id = some_id"'
          in: query
          name: filter
          schema:
            type: string
        - description: 'A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `update_time` * `create_time` * `conversation_name` Example: "update_time desc" "create_time"'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListConversations` call. Provide this to retrieve the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaListConversationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a Conversation. If the Conversation to create already exists, an ALREADY_EXISTS error is returned.
      operationId: discoveryengine.projects.locations.dataStores.conversations.create
      parameters:
        - description: "Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaConversation"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaConversation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta/{parent}/dataStores:
    get:
      description: Lists all the DataStores associated with the project.
      operationId: discoveryengine.projects.locations.dataStores.list
      parameters:
        - description: Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collections/{collection_id}`. If the caller does not have permission to list DataStores under this location, regardless of whether or not this data store exists, a PERMISSION_DENIED error is returned.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Filter by solution type. For example: filter = 'solution_type:SOLUTION_TYPE_SEARCH'"
          in: query
          name: filter
          schema:
            type: string
        - description: Maximum number of DataStores to return. If unspecified, defaults to 10. The maximum allowed value is 50. Values above 50 will be coerced to 50. If this field is negative, an INVALID_ARGUMENT is returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token ListDataStoresResponse.next_page_token, received from a previous DataStoreService.ListDataStores call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to DataStoreService.ListDataStores must match the call that provided the page token. Otherwise, an INVALID_ARGUMENT error is returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaListDataStoresResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a DataStore. DataStore is for storing Documents. To serve these documents for Search, or Recommendation use case, an Engine needs to be created separately.
      operationId: discoveryengine.projects.locations.dataStores.create
      parameters:
        - description: Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: A boolean flag indicating whether user want to directly create an advanced data store for site search. If the data store is not configured as site search (GENERIC vertical and PUBLIC_WEBSITE content_config), this flag will be ignored.
          in: query
          name: createAdvancedSiteSearch
          schema:
            type: boolean
        - description: Required. The ID to use for the DataStore, which will become the final component of the DataStore's resource name. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. Otherwise, an INVALID_ARGUMENT error is returned.
          in: query
          name: dataStoreId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaDataStore"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta/{parent}/documents:
    get:
      description: Gets a list of Documents.
      operationId: discoveryengine.projects.locations.dataStores.branches.documents.list
      parameters:
        - description: Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. Use `default_branch` as the branch ID, to list documents under the default branch. If the caller does not have permission to list Documents under this branch, regardless of whether or not this branch exists, a `PERMISSION_DENIED` error is returned.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Maximum number of Documents to return. If unspecified, defaults to 100. The maximum allowed value is 1000. Values above 1000 will be coerced to 1000. If this field is negative, an `INVALID_ARGUMENT` error is returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token ListDocumentsResponse.next_page_token, received from a previous DocumentService.ListDocuments call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to DocumentService.ListDocuments must match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaListDocumentsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a Document.
      operationId: discoveryengine.projects.locations.dataStores.branches.documents.create
      parameters:
        - description: Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. The ID to use for the Document, which will become the final component of the Document.name. If the caller does not have permission to create the Document, regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. This field must be unique among all Documents with the same parent. Otherwise, an `ALREADY_EXISTS` error is returned. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
          in: query
          name: documentId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaDocument"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaDocument"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta/{parent}/documents:import:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Bulk import of multiple Documents. Request processing may be synchronous. Non-existing items will be created. Note: It is possible for a subset of the Documents to be successfully updated."
      operationId: discoveryengine.projects.locations.dataStores.branches.documents.import
      parameters:
        - description: Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. Requires create/update permission.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaImportDocumentsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta/{parent}/documents:purge:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Permanently deletes all selected Documents in a branch. This process is asynchronous. Depending on the number of Documents to be deleted, this operation can take hours to complete. Before the delete operation completes, some Documents might still be returned by DocumentService.GetDocument or DocumentService.ListDocuments. To get a list of the Documents to be deleted, set PurgeDocumentsRequest.force to false.
      operationId: discoveryengine.projects.locations.dataStores.branches.documents.purge
      parameters:
        - description: Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta/{parent}/engines:
    get:
      description: Lists all the Engines associated with the project.
      operationId: discoveryengine.projects.locations.collections.engines.list
      parameters:
        - description: Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection_id}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Optional. Filter by solution type. For example: solution_type=SOLUTION_TYPE_SEARCH"
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Not supported.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Not supported.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaListEnginesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a Engine.
      operationId: discoveryengine.projects.locations.collections.engines.create
      parameters:
        - description: Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. The ID to use for the Engine, which will become the final component of the Engine's resource name. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. Otherwise, an INVALID_ARGUMENT error is returned.
          in: query
          name: engineId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaEngine"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta/{parent}/schemas:
    get:
      description: Gets a list of Schemas.
      operationId: discoveryengine.projects.locations.dataStores.schemas.list
      parameters:
        - description: Required. The parent data store resource name, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of Schemas to return. The service may return fewer than this value. If unspecified, at most 100 Schemas will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous SchemaService.ListSchemas call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to SchemaService.ListSchemas must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaListSchemasResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a Schema.
      operationId: discoveryengine.projects.locations.dataStores.schemas.create
      parameters:
        - description: Required. The parent data store resource name, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. The ID to use for the Schema, which will become the final component of the Schema.name. This field should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters.
          in: query
          name: schemaId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSchema"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta/{parent}/servingConfigs:
    get:
      description: Lists all ServingConfigs linked to this dataStore.
      operationId: discoveryengine.projects.locations.dataStores.servingConfigs.list
      parameters:
        - description: "Required. The dataStore resource name. Format: `projects/{project_number}/locations/{location}/collections/{collection}/dataStores/{data_store}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Maximum number of results to return. If unspecified, defaults to 100. If a value greater than 100 is provided, at most 100 results are returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. A page token, received from a previous `ListServingConfigs` call. Provide this to retrieve the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaListServingConfigsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1beta/{parent}/suggestionDenyListEntries:import:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Imports all SuggestionDenyListEntry for a DataStore.
      operationId: discoveryengine.projects.locations.dataStores.suggestionDenyListEntries.import
      parameters:
        - description: Required. The parent data store resource name for which to import denylist entries. Follows pattern projects/*/locations/*/collections/*/dataStores/*.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta/{parent}/suggestionDenyListEntries:purge:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Permanently deletes all SuggestionDenyListEntry for a DataStore.
      operationId: discoveryengine.projects.locations.dataStores.suggestionDenyListEntries.purge
      parameters:
        - description: Required. The parent data store resource name for which to import denylist entries. Follows pattern projects/*/locations/*/collections/*/dataStores/*.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta/{parent}/targetSites:
    get:
      description: Gets a list of TargetSites.
      operationId: discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.list
      parameters:
        - description: Required. The parent site search engine resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. If the caller does not have permission to list TargetSites under this site search engine, regardless of whether or not this branch exists, a PERMISSION_DENIED error is returned.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default. The maximum value is 1000; values above 1000 will be coerced to 1000. If this field is negative, an INVALID_ARGUMENT error is returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListTargetSites` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTargetSites` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaListTargetSitesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a TargetSite.
      operationId: discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.create
      parameters:
        - description: Required. Parent resource name of TargetSite, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaTargetSite"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta/{parent}/targetSites:batchCreate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates TargetSite in a batch.
      operationId: discoveryengine.projects.locations.dataStores.siteSearchEngine.targetSites.batchCreate
      parameters:
        - description: Required. The parent resource shared by all TargetSites being created. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`. The parent field in the CreateBookRequest messages must either be empty or match this field.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta/{parent}/userEvents:collect:
    get:
      description: Writes a single user event from the browser. This uses a GET request to due to browser restriction of POST-ing to a third-party domain. This method is used only by the Discovery Engine API JavaScript pixel and Google Tag Manager. Users should not call this method directly.
      operationId: discoveryengine.projects.locations.dataStores.userEvents.collect
      parameters:
        - description: Required. The parent DataStore resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The event timestamp in milliseconds. This prevents browser caching of otherwise identical get requests. The name is abbreviated to reduce the payload bytes.
          in: query
          name: ets
          schema:
            type: string
        - description: The URL including cgi-parameters but excluding the hash fragment with a length limit of 5,000 characters. This is often more useful than the referer URL, because many browsers only send the domain for third-party requests.
          in: query
          name: uri
          schema:
            type: string
        - description: Required. URL encoded UserEvent proto with a length limit of 2,000,000 characters.
          in: query
          name: userEvent
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleApiHttpBody"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1beta/{parent}/userEvents:import:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Bulk import of User events. Request processing might be synchronous. Events that already exist are skipped. Use this method for backfilling historical user events. Operation.response is of type ImportResponse. Note that it is possible for a subset of the items to be successfully inserted. Operation.metadata is of type ImportMetadata.
      operationId: discoveryengine.projects.locations.dataStores.userEvents.import
      parameters:
        - description: Required. Parent DataStore resource name, of the form `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaImportUserEventsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta/{parent}/userEvents:write:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Writes a single user event.
      operationId: discoveryengine.projects.locations.dataStores.userEvents.write
      parameters:
        - description: Required. The parent DataStore resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaUserEvent"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaUserEvent"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta/{parent}:batchVerifyTargetSites:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Verify target sites' ownership and validity. This API sends all the target sites under site search engine for verification.
      operationId: discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.batchVerifyTargetSites
      parameters:
        - description: Required. The parent resource shared by all TargetSites being verified. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaBatchVerifyTargetSitesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta/{servingConfig}:recommend:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Makes a recommendation, which requires a contextual user event.
      operationId: discoveryengine.projects.locations.dataStores.servingConfigs.recommend
      parameters:
        - description: "Required. Full resource name of a ServingConfig: `projects/*/locations/global/collections/*/engines/*/servingConfigs/*`, or `projects/*/locations/global/collections/*/dataStores/*/servingConfigs/*` One default serving config is created along with your recommendation engine creation. The engine ID will be used as the ID of the default serving config. For example, for Engine `projects/*/locations/global/collections/*/engines/my-engine`, you can use `projects/*/locations/global/collections/*/engines/my-engine/servingConfigs/my-engine` for your RecommendationService.Recommend requests."
          in: path
          name: servingConfig
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaRecommendRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaRecommendResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta/{servingConfig}:search:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Performs a search.
      operationId: discoveryengine.projects.locations.dataStores.servingConfigs.search
      parameters:
        - description: Required. The resource name of the Search serving config, such as `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`, or `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search.
          in: path
          name: servingConfig
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta/{siteSearchEngine}:disableAdvancedSiteSearch:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Downgrade from advanced site search to basic site search.
      operationId: discoveryengine.projects.locations.dataStores.siteSearchEngine.disableAdvancedSiteSearch
      parameters:
        - description: Required. Full resource name of the SiteSearchEngine, such as `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
          in: path
          name: siteSearchEngine
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta/{siteSearchEngine}:enableAdvancedSiteSearch:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Upgrade from basic site search to advanced site search.
      operationId: discoveryengine.projects.locations.dataStores.siteSearchEngine.enableAdvancedSiteSearch
      parameters:
        - description: Required. Full resource name of the SiteSearchEngine, such as `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
          in: path
          name: siteSearchEngine
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta/{siteSearchEngine}:fetchDomainVerificationStatus:
    get:
      description: Returns list of target sites with its domain verification status. This method can only be called under data store with BASIC_SITE_SEARCH state at the moment.
      operationId: discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.fetchDomainVerificationStatus
      parameters:
        - description: Required. The site search engine resource under which we fetch all the domain verification status. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
          in: path
          name: siteSearchEngine
          required: true
          schema:
            type: string
        - description: Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default. The maximum value is 1000; values above 1000 will be coerced to 1000. If this field is negative, an INVALID_ARGUMENT error is returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `FetchDomainVerificationStatus` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `FetchDomainVerificationStatus` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaFetchDomainVerificationStatusResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1beta/{siteSearchEngine}:recrawlUris:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Request on-demand recrawl for a list of URIs.
      operationId: discoveryengine.projects.locations.dataStores.siteSearchEngine.recrawlUris
      parameters:
        - description: Required. Full resource name of the SiteSearchEngine, such as `projects/*/locations/*/collections/*/dataStores/*/siteSearchEngine`.
          in: path
          name: siteSearchEngine
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaRecrawlUrisRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    GoogleApiHttpBody:
      description: "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged."
      properties:
        contentType:
          description: The HTTP Content-Type header value specifying the content type of the body.
          type: string
        data:
          description: The HTTP request/response body as raw binary.
          format: byte
          type: string
        extensions:
          description: Application specific response metadata. Must be set in the first response for streaming APIs.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
      type: object
    GoogleCloudDiscoveryengineLoggingErrorContext:
      description: A description of the context in which an error occurred.
      properties:
        httpRequest:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineLoggingHttpRequestContext"
          description: The HTTP request which was processed when the error was triggered.
        reportLocation:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineLoggingSourceLocation"
          description: The location in the source code where the decision was made to report the error, usually the place where it was logged.
      type: object
    GoogleCloudDiscoveryengineLoggingErrorLog:
      description: An error log which is reported to the Error Reporting system.
      properties:
        context:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineLoggingErrorContext"
          description: A description of the context in which the error occurred.
        importPayload:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineLoggingImportErrorContext"
          description: The error payload that is populated on LRO import APIs.
        message:
          description: A message describing the error.
          type: string
        requestPayload:
          additionalProperties:
            description: Properties of the object.
          description: "The API request payload, represented as a protocol buffer. Most API request types are supported—for example: * `type.googleapis.com/google.cloud.discoveryengine.v1alpha.DocumentService.CreateDocumentRequest` * `type.googleapis.com/google.cloud.discoveryengine.v1alpha.UserEventService.WriteUserEventRequest`"
          type: object
        responsePayload:
          additionalProperties:
            description: Properties of the object.
          description: 'The API response payload, represented as a protocol buffer. This is used to log some "soft errors", where the response is valid but we consider there are some quality issues like unjoined events. The following API responses are supported, and no PII is included: * `google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend` * `google.cloud.discoveryengine.v1alpha.UserEventService.WriteUserEvent` * `google.cloud.discoveryengine.v1alpha.UserEventService.CollectUserEvent`'
          type: object
        serviceContext:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineLoggingServiceContext"
          description: The service context in which this error has occurred.
        status:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The RPC status associated with the error log.
      type: object
    GoogleCloudDiscoveryengineLoggingHttpRequestContext:
      description: HTTP request data that is related to a reported error.
      properties:
        responseStatusCode:
          description: The HTTP response status code for the request.
          format: int32
          type: integer
      type: object
    GoogleCloudDiscoveryengineLoggingImportErrorContext:
      description: "The error payload that is populated on LRO import APIs, including the following: * `google.cloud.discoveryengine.v1alpha.DocumentService.ImportDocuments` * `google.cloud.discoveryengine.v1alpha.UserEventService.ImportUserEvents`"
      properties:
        document:
          description: The detailed content which caused the error on importing a document.
          type: string
        gcsPath:
          description: Google Cloud Storage file path of the import source. Can be set for batch operation error.
          type: string
        lineNumber:
          description: Line number of the content in file. Should be empty for permission or batch operation error.
          type: string
        operation:
          description: The operation resource name of the LRO.
          type: string
        userEvent:
          description: The detailed content which caused the error on importing a user event.
          type: string
      type: object
    GoogleCloudDiscoveryengineLoggingServiceContext:
      description: Describes a running service that sends errors.
      properties:
        service:
          description: An identifier of the service—for example, `discoveryengine.googleapis.com`.
          type: string
      type: object
    GoogleCloudDiscoveryengineLoggingSourceLocation:
      description: Indicates a location in the source code of the service for which errors are reported.
      properties:
        functionName:
          description: Human-readable name of a function or method—for example, `google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend`.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1BatchCreateTargetSiteMetadata:
      description: Metadata related to the progress of the SiteSearchEngineService.BatchCreateTargetSites operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1BatchCreateTargetSitesResponse:
      description: Response message for SiteSearchEngineService.BatchCreateTargetSites method.
      properties:
        targetSites:
          description: TargetSites created.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1TargetSite"
          type: array
      type: object
    GoogleCloudDiscoveryengineV1CreateDataStoreMetadata:
      description: Metadata related to the progress of the DataStoreService.CreateDataStore operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1CreateEngineMetadata:
      description: Metadata related to the progress of the EngineService.CreateEngine operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1CreateSchemaMetadata:
      description: Metadata for Create Schema LRO.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1CreateTargetSiteMetadata:
      description: Metadata related to the progress of the SiteSearchEngineService.CreateTargetSite operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1DataStore:
      description: DataStore captures global settings and configs at the DataStore level.
      properties:
        contentConfig:
          description: Immutable. The content config of the data store. If this field is unset, the server behavior defaults to ContentConfig.NO_CONTENT.
          enum:
            - CONTENT_CONFIG_UNSPECIFIED
            - NO_CONTENT
            - CONTENT_REQUIRED
            - PUBLIC_WEBSITE
          type: string
        createTime:
          description: Output only. Timestamp the DataStore was created at.
          format: google-datetime
          readOnly: true
          type: string
        defaultSchemaId:
          description: Output only. The id of the default Schema asscociated to this data store.
          readOnly: true
          type: string
        displayName:
          description: Required. The data store display name. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
          type: string
        documentProcessingConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1DocumentProcessingConfig"
          description: Configuration for Document understanding and enrichment.
        industryVertical:
          description: Immutable. The industry vertical that the data store registers.
          enum:
            - INDUSTRY_VERTICAL_UNSPECIFIED
            - GENERIC
            - MEDIA
          type: string
        name:
          description: "Immutable. The full resource name of the data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters."
          type: string
        solutionTypes:
          description: "The solutions that the data store enrolls. Available solutions for each industry_vertical: * `MEDIA`: `SOLUTION_TYPE_RECOMMENDATION` and `SOLUTION_TYPE_SEARCH`. * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH` is automatically enrolled. Other solutions cannot be enrolled."
          items:
            enum:
              - SOLUTION_TYPE_UNSPECIFIED
              - SOLUTION_TYPE_RECOMMENDATION
              - SOLUTION_TYPE_SEARCH
              - SOLUTION_TYPE_CHAT
            type: string
          type: array
        startingSchema:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1Schema"
          description: The start schema to use for this DataStore when provisioning it. If unset, a default vertical specialized schema will be used. This field is only used by CreateDataStore API, and will be ignored if used in other APIs. This field will be omitted from all API responses including CreateDataStore API. To retrieve a schema of a DataStore, use SchemaService.GetSchema API instead. The provided schema will be validated against certain rules on schema. Learn more from [this doc](https://cloud.google.com/generative-ai-app-builder/docs/provide-schema).
      type: object
    GoogleCloudDiscoveryengineV1DeleteDataStoreMetadata:
      description: Metadata related to the progress of the DataStoreService.DeleteDataStore operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1DeleteEngineMetadata:
      description: Metadata related to the progress of the EngineService.DeleteEngine operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1DeleteSchemaMetadata:
      description: Metadata for DeleteSchema LRO.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1DeleteTargetSiteMetadata:
      description: Metadata related to the progress of the SiteSearchEngineService.DeleteTargetSite operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1DigitalParsingConfig:
      description: The digital parsing configurations for documents.
      properties: {}
      type: object
    GoogleCloudDiscoveryengineV1DisableAdvancedSiteSearchMetadata:
      description: Metadata related to the progress of the SiteSearchEngineService.DisableAdvancedSiteSearch operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1DisableAdvancedSiteSearchResponse:
      description: Response message for SiteSearchEngineService.DisableAdvancedSiteSearch method.
      properties: {}
      type: object
    GoogleCloudDiscoveryengineV1DocumentProcessingConfig:
      description: A singleton resource of DataStore. It's empty when DataStore is created, which defaults to digital parser. The first call to DataStoreService.UpdateDocumentProcessingConfig method will initialize the config.
      properties:
        defaultParsingConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig"
          description: Configurations for default Document parser. If not specified, we will configure it as default DigitalParsingConfig, and the default parsing config will be applied to all file types for Document parsing.
        name:
          description: "The full resource name of the Document Processing Config. Format: `projects/*/locations/*/collections/*/dataStores/*/documentProcessingConfig`."
          type: string
        parsingConfigOverrides:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig"
          description: "Map from file type to override the default parsing configuration based on the file type. Supported keys: * `pdf`: Override parsing config for PDF files, either digital parsing, ocr parsing or layout parsing is supported. * `html`: Override parsing config for HTML files, only digital parsing and or layout parsing are supported. * `docx`: Override parsing config for DOCX files, only digital parsing and or layout parsing are supported."
          type: object
      type: object
    GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig:
      description: Related configurations applied to a specific type of document parser.
      properties:
        digitalParsingConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1DigitalParsingConfig"
          description: Configurations applied to digital parser.
        ocrParsingConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1OcrParsingConfig"
          description: Configurations applied to OCR parser. Currently it only applies to PDFs.
      type: object
    GoogleCloudDiscoveryengineV1EnableAdvancedSiteSearchMetadata:
      description: Metadata related to the progress of the SiteSearchEngineService.EnableAdvancedSiteSearch operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1EnableAdvancedSiteSearchResponse:
      description: Response message for SiteSearchEngineService.EnableAdvancedSiteSearch method.
      properties: {}
      type: object
    GoogleCloudDiscoveryengineV1Engine:
      description: Metadata that describes the training and serving parameters of an Engine.
      properties:
        chatEngineConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1EngineChatEngineConfig"
          description: Configurations for the Chat Engine. Only applicable if solution_type is SOLUTION_TYPE_CHAT.
        chatEngineMetadata:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1EngineChatEngineMetadata"
          description: Output only. Additional information of the Chat Engine. Only applicable if solution_type is SOLUTION_TYPE_CHAT.
          readOnly: true
        commonConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1EngineCommonConfig"
          description: Common config spec that specifies the metadata of the engine.
        createTime:
          description: Output only. Timestamp the Recommendation Engine was created at.
          format: google-datetime
          readOnly: true
          type: string
        dataStoreIds:
          description: The data stores associated with this engine. For SOLUTION_TYPE_SEARCH and SOLUTION_TYPE_RECOMMENDATION type of engines, they can only associate with at most one data store. If solution_type is SOLUTION_TYPE_CHAT, multiple DataStores in the same Collection can be associated here. Note that when used in CreateEngineRequest, one DataStore id must be provided as the system will use it for necessary initializations.
          items:
            type: string
          type: array
        displayName:
          description: Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters.
          type: string
        industryVertical:
          description: "The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to `GENERIC`. Vertical on Engine has to match vertical of the DataStore liniked to the engine."
          enum:
            - INDUSTRY_VERTICAL_UNSPECIFIED
            - GENERIC
            - MEDIA
          type: string
        name:
          description: "Immutable. The fully qualified resource name of the engine. This field must be a UTF-8 encoded string with a length limit of 1024 characters. Format: `projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}` engine should be 1-63 characters, and valid characters are /a-z0-9*/. Otherwise, an INVALID_ARGUMENT error is returned."
          type: string
        searchEngineConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1EngineSearchEngineConfig"
          description: Configurations for the Search Engine. Only applicable if solution_type is SOLUTION_TYPE_SEARCH.
        solutionType:
          description: Required. The solutions of the engine.
          enum:
            - SOLUTION_TYPE_UNSPECIFIED
            - SOLUTION_TYPE_RECOMMENDATION
            - SOLUTION_TYPE_SEARCH
            - SOLUTION_TYPE_CHAT
          type: string
        updateTime:
          description: Output only. Timestamp the Recommendation Engine was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDiscoveryengineV1EngineChatEngineConfig:
      description: Configurations for a Chat Engine.
      properties:
        agentCreationConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1EngineChatEngineConfigAgentCreationConfig"
          description: The configurationt generate the Dialogflow agent that is associated to this Engine. Note that these configurations are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation.
        dialogflowAgentToLink:
          description: "The resource name of an exist Dialogflow agent to link to this Chat Engine. Customers can either provide `agent_creation_config` to create agent or provide an agent name that links the agent with the Chat engine. Format: `projects//locations//agents/`. Note that the `dialogflow_agent_to_link` are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation. Please use ChatEngineMetadata.dialogflow_agent for actual agent association after Engine is created."
          type: string
      type: object
    GoogleCloudDiscoveryengineV1EngineChatEngineConfigAgentCreationConfig:
      description: Configurations for generating a Dialogflow agent. Note that these configurations are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation.
      properties:
        business:
          description: Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search.
          type: string
        defaultLanguageCode:
          description: Required. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.
          type: string
        location:
          description: "Agent location for Agent creation, supported values: global/us/eu. If not provided, us Engine will create Agent using us-central-1 by default; eu Engine will create Agent using eu-west-1 by default."
          type: string
        timeZone:
          description: Required. The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1EngineChatEngineMetadata:
      description: Additional information of a Chat Engine. Fields in this message are output only.
      properties:
        dialogflowAgent:
          description: "The resource name of a Dialogflow agent, that this Chat Engine refers to. Format: `projects//locations//agents/`."
          type: string
      type: object
    GoogleCloudDiscoveryengineV1EngineCommonConfig:
      description: Common configurations for an Engine.
      properties:
        companyName:
          description: Immutable. The name of the company, business or entity that is associated with the engine. Setting this may help improve LLM related features.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1EngineSearchEngineConfig:
      description: Configurations for a Search Engine.
      properties:
        searchAddOns:
          description: The add-on that this search engine enables.
          items:
            enum:
              - SEARCH_ADD_ON_UNSPECIFIED
              - SEARCH_ADD_ON_LLM
            type: string
          type: array
        searchTier:
          description: The search feature tier of this engine. Different tiers might have different pricing. To learn more, please check the pricing documentation. Defaults to SearchTier.SEARCH_TIER_STANDARD if not specified.
          enum:
            - SEARCH_TIER_UNSPECIFIED
            - SEARCH_TIER_STANDARD
            - SEARCH_TIER_ENTERPRISE
          type: string
      type: object
    GoogleCloudDiscoveryengineV1ImportDocumentsMetadata:
      description: Metadata related to the progress of the ImportDocuments operation. This is returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        failureCount:
          description: Count of entries that encountered errors while processing.
          format: int64
          type: string
        successCount:
          description: Count of entries that were processed successfully.
          format: int64
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1ImportDocumentsResponse:
      description: Response of the ImportDocumentsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.
      properties:
        errorConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1ImportErrorConfig"
          description: Echoes the destination for the complete errors in the request if set.
        errorSamples:
          description: A sample of errors encountered while processing the request.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
      type: object
    GoogleCloudDiscoveryengineV1ImportErrorConfig:
      description: Configuration of destination for Import related errors.
      properties:
        gcsPrefix:
          description: Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import errors are written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status` message.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesMetadata:
      description: Metadata related to the progress of the ImportSuggestionDenyListEntries operation. This is returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesResponse:
      description: Response message for CompletionService.ImportSuggestionDenyListEntries method.
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the request.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
        failedEntriesCount:
          description: Count of deny list entries that failed to be imported.
          format: int64
          type: string
        importedEntriesCount:
          description: Count of deny list entries successfully imported.
          format: int64
          type: string
      type: object
    GoogleCloudDiscoveryengineV1ImportUserEventsMetadata:
      description: Metadata related to the progress of the Import operation. This is returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        failureCount:
          description: Count of entries that encountered errors while processing.
          format: int64
          type: string
        successCount:
          description: Count of entries that were processed successfully.
          format: int64
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1ImportUserEventsResponse:
      description: Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.
      properties:
        errorConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1ImportErrorConfig"
          description: Echoes the destination for the complete errors if this field was set in the request.
        errorSamples:
          description: A sample of errors encountered while processing the request.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
        joinedEventsCount:
          description: Count of user events imported with complete existing Documents.
          format: int64
          type: string
        unjoinedEventsCount:
          description: Count of user events imported, but with Document information not found in the existing Branch.
          format: int64
          type: string
      type: object
    GoogleCloudDiscoveryengineV1OcrParsingConfig:
      description: The OCR parsing configurations for documents.
      properties:
        enhancedDocumentElements:
          description: "Apply additional enhanced OCR processing to a list of document elements. Supported values: * `table`: advanced table parsing model."
          items:
            type: string
          type: array
        useNativeText:
          description: If true, will use native text instead of OCR text on pages containing native text.
          type: boolean
      type: object
    GoogleCloudDiscoveryengineV1PurgeDocumentsMetadata:
      description: Metadata related to the progress of the PurgeDocuments operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        failureCount:
          description: Count of entries that encountered errors while processing.
          format: int64
          type: string
        ignoredCount:
          description: Count of entries that were ignored as entries were not found.
          format: int64
          type: string
        successCount:
          description: Count of entries that were deleted successfully.
          format: int64
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1PurgeDocumentsResponse:
      description: Response message for DocumentService.PurgeDocuments method. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.
      properties:
        purgeCount:
          description: The total count of documents purged as a result of the operation.
          format: int64
          type: string
        purgeSample:
          description: A sample of document names that will be deleted. Only populated if `force` is set to false. A max of 100 names will be returned and the names are chosen at random.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesMetadata:
      description: Metadata related to the progress of the PurgeSuggestionDenyListEntries operation. This is returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse:
      description: Response message for CompletionService.PurgeSuggestionDenyListEntries method.
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the request.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
        purgeCount:
          description: Number of suggestion deny list entries purged.
          format: int64
          type: string
      type: object
    GoogleCloudDiscoveryengineV1Schema:
      description: Defines the structure and layout of a type of document data.
      properties:
        jsonSchema:
          description: The JSON representation of the schema.
          type: string
        name:
          description: Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
          type: string
        structSchema:
          additionalProperties:
            description: Properties of the object.
          description: The structured representation of the schema.
          type: object
      type: object
    GoogleCloudDiscoveryengineV1SiteVerificationInfo:
      description: Verification information for target sites in advanced site search.
      properties:
        siteVerificationState:
          description: Site verification state indicating the ownership and validity.
          enum:
            - SITE_VERIFICATION_STATE_UNSPECIFIED
            - VERIFIED
            - UNVERIFIED
            - EXEMPTED
          type: string
        verifyTime:
          description: Latest site verification time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1TargetSite:
      description: A target site for the SiteSearchEngine.
      properties:
        exactMatch:
          description: Input only. If set to false, a uri_pattern is generated to include all pages whose address contains the provided_uri_pattern. If set to true, an uri_pattern is generated to try to be an exact match of the provided_uri_pattern or just the specific page if the provided_uri_pattern is a specific one. provided_uri_pattern is always normalized to generate the URI pattern to be used by the search engine.
          type: boolean
        failureReason:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1TargetSiteFailureReason"
          description: Output only. Failure reason.
          readOnly: true
        generatedUriPattern:
          description: Output only. This is system-generated based on the provided_uri_pattern.
          readOnly: true
          type: string
        indexingStatus:
          description: Output only. Indexing status.
          enum:
            - INDEXING_STATUS_UNSPECIFIED
            - PENDING
            - FAILED
            - SUCCEEDED
            - DELETING
          readOnly: true
          type: string
        name:
          description: Output only. The fully qualified resource name of the target site. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}` The `target_site_id` is system-generated.
          readOnly: true
          type: string
        providedUriPattern:
          description: Required. Input only. The user provided URI pattern from which the `generated_uri_pattern` is generated.
          type: string
        siteVerificationInfo:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1SiteVerificationInfo"
          description: Output only. Site ownership and validity verification status.
          readOnly: true
        type:
          description: The type of the target site, e.g., whether the site is to be included or excluded.
          enum:
            - TYPE_UNSPECIFIED
            - INCLUDE
            - EXCLUDE
          type: string
        updateTime:
          description: Output only. The target site's last updated time.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDiscoveryengineV1TargetSiteFailureReason:
      description: Site search indexing failure reasons.
      properties:
        quotaFailure:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1TargetSiteFailureReasonQuotaFailure"
          description: Failed due to insufficient quota.
      type: object
    GoogleCloudDiscoveryengineV1TargetSiteFailureReasonQuotaFailure:
      description: Failed due to insufficient quota.
      properties:
        totalRequiredQuota:
          description: This number is an estimation on how much total quota this project needs to successfully complete indexing.
          format: int64
          type: string
      type: object
    GoogleCloudDiscoveryengineV1UpdateSchemaMetadata:
      description: Metadata for UpdateSchema LRO.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1UpdateTargetSiteMetadata:
      description: Metadata related to the progress of the SiteSearchEngineService.UpdateTargetSite operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaAclConfig:
      description: Access Control Configuration.
      properties:
        idpConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaIdpConfig"
          description: Identity provider config.
        name:
          description: "Immutable. The full resource name of the acl configuration. Format: `projects/{project}/locations/{location}/aclConfig`. This field must be a UTF-8 encoded string with a length limit of 1024 characters."
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSiteMetadata:
      description: Metadata related to the progress of the SiteSearchEngineService.BatchCreateTargetSites operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSitesResponse:
      description: Response message for SiteSearchEngineService.BatchCreateTargetSites method.
      properties:
        targetSites:
          description: TargetSites created.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaTargetSite"
          type: array
      type: object
    GoogleCloudDiscoveryengineV1alphaCreateDataStoreMetadata:
      description: Metadata related to the progress of the DataStoreService.CreateDataStore operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaCreateEngineMetadata:
      description: Metadata related to the progress of the EngineService.CreateEngine operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaCreateSchemaMetadata:
      description: Metadata for Create Schema LRO.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaCreateTargetSiteMetadata:
      description: Metadata related to the progress of the SiteSearchEngineService.CreateTargetSite operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaDataStore:
      description: DataStore captures global settings and configs at the DataStore level.
      properties:
        aclEnabled:
          description: Immutable. Whether data in the DataStore has ACL information. If set to `true`, the source data must have ACL. ACL will be ingested when data is ingested by DocumentService.ImportDocuments methods. When ACL is enabled for the DataStore, Document can't be accessed by calling DocumentService.GetDocument or DocumentService.ListDocuments. Currently ACL is only supported in `GENERIC` industry vertical with non-`PUBLIC_WEBSITE` content config.
          type: boolean
        contentConfig:
          description: Immutable. The content config of the data store. If this field is unset, the server behavior defaults to ContentConfig.NO_CONTENT.
          enum:
            - CONTENT_CONFIG_UNSPECIFIED
            - NO_CONTENT
            - CONTENT_REQUIRED
            - PUBLIC_WEBSITE
          type: string
        createTime:
          description: Output only. Timestamp the DataStore was created at.
          format: google-datetime
          readOnly: true
          type: string
        defaultSchemaId:
          description: Output only. The id of the default Schema asscociated to this data store.
          readOnly: true
          type: string
        displayName:
          description: Required. The data store display name. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
          type: string
        documentProcessingConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig"
          description: Configuration for Document understanding and enrichment.
        idpConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaIdpConfig"
          description: Output only. Data store level identity provider config.
          readOnly: true
        industryVertical:
          description: Immutable. The industry vertical that the data store registers.
          enum:
            - INDUSTRY_VERTICAL_UNSPECIFIED
            - GENERIC
            - MEDIA
          type: string
        name:
          description: "Immutable. The full resource name of the data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters."
          type: string
        solutionTypes:
          description: "The solutions that the data store enrolls. Available solutions for each industry_vertical: * `MEDIA`: `SOLUTION_TYPE_RECOMMENDATION` and `SOLUTION_TYPE_SEARCH`. * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH` is automatically enrolled. Other solutions cannot be enrolled."
          items:
            enum:
              - SOLUTION_TYPE_UNSPECIFIED
              - SOLUTION_TYPE_RECOMMENDATION
              - SOLUTION_TYPE_SEARCH
              - SOLUTION_TYPE_CHAT
            type: string
          type: array
        startingSchema:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaSchema"
          description: The start schema to use for this DataStore when provisioning it. If unset, a default vertical specialized schema will be used. This field is only used by CreateDataStore API, and will be ignored if used in other APIs. This field will be omitted from all API responses including CreateDataStore API. To retrieve a schema of a DataStore, use SchemaService.GetSchema API instead. The provided schema will be validated against certain rules on schema. Learn more from [this doc](https://cloud.google.com/generative-ai-app-builder/docs/provide-schema).
      type: object
    GoogleCloudDiscoveryengineV1alphaDeleteDataStoreMetadata:
      description: Metadata related to the progress of the DataStoreService.DeleteDataStore operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaDeleteEngineMetadata:
      description: Metadata related to the progress of the EngineService.DeleteEngine operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaDeleteSchemaMetadata:
      description: Metadata for DeleteSchema LRO.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaDeleteTargetSiteMetadata:
      description: Metadata related to the progress of the SiteSearchEngineService.DeleteTargetSite operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaDigitalParsingConfig:
      description: The digital parsing configurations for documents.
      properties: {}
      type: object
    GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchMetadata:
      description: Metadata related to the progress of the SiteSearchEngineService.DisableAdvancedSiteSearch operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchResponse:
      description: Response message for SiteSearchEngineService.DisableAdvancedSiteSearch method.
      properties: {}
      type: object
    GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig:
      description: A singleton resource of DataStore. It's empty when DataStore is created, which defaults to digital parser. The first call to DataStoreService.UpdateDocumentProcessingConfig method will initialize the config.
      properties:
        defaultParsingConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig"
          description: Configurations for default Document parser. If not specified, we will configure it as default DigitalParsingConfig, and the default parsing config will be applied to all file types for Document parsing.
        name:
          description: "The full resource name of the Document Processing Config. Format: `projects/*/locations/*/collections/*/dataStores/*/documentProcessingConfig`."
          type: string
        ocrConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaOcrConfig"
          deprecated: true
          description: "[DEPRECATED] This field is deprecated. To specify OCR parsing config, please specify `ocr_parsing_config` in `default_parsing_config` field The OCR config. Currently it only applies to PDFs."
        parsingConfigOverrides:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig"
          description: "Map from file type to override the default parsing configuration based on the file type. Supported keys: * `pdf`: Override parsing config for PDF files, either digital parsing, ocr parsing or layout parsing is supported. * `html`: Override parsing config for HTML files, only digital parsing and or layout parsing are supported. * `docx`: Override parsing config for DOCX files, only digital parsing and or layout parsing are supported."
          type: object
      type: object
    GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig:
      description: Related configurations applied to a specific type of document parser.
      properties:
        digitalParsingConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaDigitalParsingConfig"
          description: Configurations applied to digital parser.
        layoutParsingConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaLayoutParsingConfig"
          description: Configurations applied to layout parser.
        ocrParsingConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaOcrParsingConfig"
          description: Configurations applied to OCR parser. Currently it only applies to PDFs.
      type: object
    GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchMetadata:
      description: Metadata related to the progress of the SiteSearchEngineService.EnableAdvancedSiteSearch operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchResponse:
      description: Response message for SiteSearchEngineService.EnableAdvancedSiteSearch method.
      properties: {}
      type: object
    GoogleCloudDiscoveryengineV1alphaEngine:
      description: Metadata that describes the training and serving parameters of an Engine.
      properties:
        allowMultipleDataStoresSearchEngine:
          description: Whether the search engine can associate with multiple data stores. If true, the generic search engine can associate with one or more data stores. This is an input-only field.
          type: boolean
        chatEngineConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig"
          description: Configurations for the Chat Engine. Only applicable if solution_type is SOLUTION_TYPE_CHAT.
        chatEngineMetadata:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata"
          description: Output only. Additional information of the Chat Engine. Only applicable if solution_type is SOLUTION_TYPE_CHAT.
          readOnly: true
        commonConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaEngineCommonConfig"
          description: Common config spec that specifies the metadata of the engine.
        createTime:
          description: Output only. Timestamp the Recommendation Engine was created at.
          format: google-datetime
          readOnly: true
          type: string
        dataStoreIds:
          description: The data stores associated with this engine. For SOLUTION_TYPE_SEARCH and SOLUTION_TYPE_RECOMMENDATION type of engines, they can only associate with at most one data store. If solution_type is SOLUTION_TYPE_CHAT, multiple DataStores in the same Collection can be associated here. Note that when used in CreateEngineRequest, one DataStore id must be provided as the system will use it for necessary initializations.
          items:
            type: string
          type: array
        displayName:
          description: Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters.
          type: string
        industryVertical:
          description: "The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to `GENERIC`. Vertical on Engine has to match vertical of the DataStore liniked to the engine."
          enum:
            - INDUSTRY_VERTICAL_UNSPECIFIED
            - GENERIC
            - MEDIA
          type: string
        mediaRecommendationEngineConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig"
          description: Configurations for the Media Engine. Only applicable on the data stores with solution_type SOLUTION_TYPE_RECOMMENDATION and IndustryVertical.MEDIA vertical.
        name:
          description: "Immutable. The fully qualified resource name of the engine. This field must be a UTF-8 encoded string with a length limit of 1024 characters. Format: `projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}` engine should be 1-63 characters, and valid characters are /a-z0-9*/. Otherwise, an INVALID_ARGUMENT error is returned."
          type: string
        recommendationMetadata:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata"
          description: Output only. Additional information of a recommendation engine. Only applicable if solution_type is SOLUTION_TYPE_RECOMMENDATION.
          readOnly: true
        searchEngineConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig"
          description: Configurations for the Search Engine. Only applicable if solution_type is SOLUTION_TYPE_SEARCH.
        similarDocumentsConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaEngineSimilarDocumentsEngineConfig"
          description: Additional config specs for a `similar-items` engine.
        solutionType:
          description: Required. The solutions of the engine.
          enum:
            - SOLUTION_TYPE_UNSPECIFIED
            - SOLUTION_TYPE_RECOMMENDATION
            - SOLUTION_TYPE_SEARCH
            - SOLUTION_TYPE_CHAT
          type: string
        updateTime:
          description: Output only. Timestamp the Recommendation Engine was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig:
      description: Configurations for a Chat Engine.
      properties:
        agentCreationConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig"
          description: The configurationt generate the Dialogflow agent that is associated to this Engine. Note that these configurations are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation.
        dialogflowAgentToLink:
          description: "The resource name of an exist Dialogflow agent to link to this Chat Engine. Customers can either provide `agent_creation_config` to create agent or provide an agent name that links the agent with the Chat engine. Format: `projects//locations//agents/`. Note that the `dialogflow_agent_to_link` are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation. Please use ChatEngineMetadata.dialogflow_agent for actual agent association after Engine is created."
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig:
      description: Configurations for generating a Dialogflow agent. Note that these configurations are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation.
      properties:
        business:
          description: Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search.
          type: string
        defaultLanguageCode:
          description: Required. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.
          type: string
        location:
          description: "Agent location for Agent creation, supported values: global/us/eu. If not provided, us Engine will create Agent using us-central-1 by default; eu Engine will create Agent using eu-west-1 by default."
          type: string
        timeZone:
          description: Required. The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata:
      description: Additional information of a Chat Engine. Fields in this message are output only.
      properties:
        dialogflowAgent:
          description: "The resource name of a Dialogflow agent, that this Chat Engine refers to. Format: `projects//locations//agents/`."
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaEngineCommonConfig:
      description: Common configurations for an Engine.
      properties:
        companyName:
          description: Immutable. The name of the company, business or entity that is associated with the engine. Setting this may help improve LLM related features.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig:
      description: Additional config specs for a Media Recommendation engine.
      properties:
        optimizationObjective:
          description: "The optimization objective. e.g., `cvr`. This field together with optimization_objective describe engine metadata to use to control engine training and serving. Currently supported values: `ctr`, `cvr`. If not specified, we choose default based on engine type. Default depends on type of recommendation: `recommended-for-you` => `ctr` `others-you-may-like` => `ctr`"
          type: string
        optimizationObjectiveConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig"
          description: Name and value of the custom threshold for cvr optimization_objective. For target_field `watch-time`, target_field_value must be an integer value indicating the media progress time in seconds between (0, 86400] (excludes 0, includes 86400) (e.g., 90). For target_field `watch-percentage`, the target_field_value must be a valid float value between (0, 1.0] (excludes 0, includes 1.0) (e.g., 0.5).
        trainingState:
          description: "The training state that the engine is in (e.g. `TRAINING` or `PAUSED`). Since part of the cost of running the service is frequency of training - this can be used to determine when to train engine in order to control cost. If not specified: the default value for `CreateEngine` method is `TRAINING`. The default value for `UpdateEngine` method is to keep the state the same as before."
          enum:
            - TRAINING_STATE_UNSPECIFIED
            - PAUSED
            - TRAINING
          type: string
        type:
          description: "Required. The type of engine. e.g., `recommended-for-you`. This field together with optimization_objective describe engine metadata to use to control engine training and serving. Currently supported values: `recommended-for-you`, `others-you-may-like`, `more-like-this`, `most-popular-items`."
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig:
      description: Custom threshold for `cvr` optimization_objective.
      properties:
        targetField:
          description: "Required. The name of the field to target. Currently supported values: `watch-percentage`, `watch-time`."
          type: string
        targetFieldValueFloat:
          description: Required. The threshold to be applied to the target (e.g., 0.5).
          format: float
          type: number
      type: object
    GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata:
      description: Additional information of a recommendation engine.
      properties:
        dataState:
          description: "Output only. The state of data requirements for this engine: `DATA_OK` and `DATA_ERROR`. Engine cannot be trained if the data is in `DATA_ERROR` state. Engine can have `DATA_ERROR` state even if serving state is `ACTIVE`: engines were trained successfully before, but cannot be refreshed because the underlying engine no longer has sufficient data for training."
          enum:
            - DATA_STATE_UNSPECIFIED
            - DATA_OK
            - DATA_ERROR
          readOnly: true
          type: string
        lastTuneTime:
          description: Output only. The timestamp when the latest successful tune finished. Only applicable on Media Recommendation engines.
          format: google-datetime
          readOnly: true
          type: string
        servingState:
          description: "Output only. The serving state of the engine: `ACTIVE`, `NOT_ACTIVE`."
          enum:
            - SERVING_STATE_UNSPECIFIED
            - INACTIVE
            - ACTIVE
            - TUNED
          readOnly: true
          type: string
        tuningOperation:
          description: Output only. The latest tune operation id associated with the engine. Only applicable on Media Recommendation engines. If present, this operation id can be used to determine if there is an ongoing tune for this engine. To check the operation status, send the GetOperation request with this operation id in the engine resource format. If no tuning has happened for this engine, the string is empty.
          readOnly: true
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig:
      description: Configurations for a Search Engine.
      properties:
        searchAddOns:
          description: The add-on that this search engine enables.
          items:
            enum:
              - SEARCH_ADD_ON_UNSPECIFIED
              - SEARCH_ADD_ON_LLM
            type: string
          type: array
        searchTier:
          description: The search feature tier of this engine. Different tiers might have different pricing. To learn more, please check the pricing documentation. Defaults to SearchTier.SEARCH_TIER_STANDARD if not specified.
          enum:
            - SEARCH_TIER_UNSPECIFIED
            - SEARCH_TIER_STANDARD
            - SEARCH_TIER_ENTERPRISE
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaEngineSimilarDocumentsEngineConfig:
      description: Additional config specs for a `similar-items` engine.
      properties: {}
      type: object
    GoogleCloudDiscoveryengineV1alphaEstimateDataSizeMetadata:
      description: Metadata related to the progress of the EstimateDataSize operation. This is returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaEstimateDataSizeResponse:
      description: Response of the EstimateDataSize request. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.
      properties:
        dataSizeBytes:
          description: Data size in terms of bytes.
          format: int64
          type: string
        documentCount:
          description: Total number of documents.
          format: int64
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaFieldConfig:
      description: Configurations for fields of a schema. For example, configuring a field is indexable, or searchable.
      properties:
        completableOption:
          description: If completable_option is COMPLETABLE_ENABLED, field values are directly used and returned as suggestions for Autocomplete in CompletionService.CompleteQuery. If completable_option is unset, the server behavior defaults to COMPLETABLE_DISABLED for fields that support setting completable options, which are just `string` fields. For those fields that do not support setting completable options, the server will skip completable option setting, and setting completable_option for those fields will throw `INVALID_ARGUMENT` error.
          enum:
            - COMPLETABLE_OPTION_UNSPECIFIED
            - COMPLETABLE_ENABLED
            - COMPLETABLE_DISABLED
          type: string
        dynamicFacetableOption:
          description: If dynamic_facetable_option is DYNAMIC_FACETABLE_ENABLED, field values are available for dynamic facet. Could only be DYNAMIC_FACETABLE_DISABLED if FieldConfig.indexable_option is INDEXABLE_DISABLED. Otherwise, an `INVALID_ARGUMENT` error will be returned. If dynamic_facetable_option is unset, the server behavior defaults to DYNAMIC_FACETABLE_DISABLED for fields that support setting dynamic facetable options. For those fields that do not support setting dynamic facetable options, such as `object` and `boolean`, the server will skip dynamic facetable option setting, and setting dynamic_facetable_option for those fields will throw `INVALID_ARGUMENT` error.
          enum:
            - DYNAMIC_FACETABLE_OPTION_UNSPECIFIED
            - DYNAMIC_FACETABLE_ENABLED
            - DYNAMIC_FACETABLE_DISABLED
          type: string
        fieldPath:
          description: "Required. Field path of the schema field. For example: `title`, `description`, `release_info.release_year`."
          type: string
        fieldType:
          description: Output only. Raw type of the field.
          enum:
            - FIELD_TYPE_UNSPECIFIED
            - OBJECT
            - STRING
            - NUMBER
            - INTEGER
            - BOOLEAN
            - GEOLOCATION
            - DATETIME
          readOnly: true
          type: string
        indexableOption:
          description: If indexable_option is INDEXABLE_ENABLED, field values are indexed so that it can be filtered or faceted in SearchService.Search. If indexable_option is unset, the server behavior defaults to INDEXABLE_DISABLED for fields that support setting indexable options. For those fields that do not support setting indexable options, such as `object` and `boolean` and key properties, the server will skip indexable_option setting, and setting indexable_option for those fields will throw `INVALID_ARGUMENT` error.
          enum:
            - INDEXABLE_OPTION_UNSPECIFIED
            - INDEXABLE_ENABLED
            - INDEXABLE_DISABLED
          type: string
        keyPropertyType:
          description: Output only. Type of the key property that this field is mapped to. Empty string if this is not annotated as mapped to a key property. Example types are `title`, `description`. Full list is defined by `keyPropertyMapping` in the schema field annotation. If the schema field has a `KeyPropertyMapping` annotation, `indexable_option` and `searchable_option` of this field cannot be modified.
          readOnly: true
          type: string
        recsFilterableOption:
          description: If recs_filterable_option is FILTERABLE_ENABLED, field values are filterable by filter expression in RecommendationService.Recommend. If FILTERABLE_ENABLED but the field type is numerical, field values are not filterable by text queries in RecommendationService.Recommend. Only textual fields are supported. If recs_filterable_option is unset, the default setting is FILTERABLE_DISABLED for fields that support setting filterable options. When a field set to [FILTERABLE_DISABLED] is filtered, a warning is generated and an empty result is returned.
          enum:
            - FILTERABLE_OPTION_UNSPECIFIED
            - FILTERABLE_ENABLED
            - FILTERABLE_DISABLED
          type: string
        retrievableOption:
          description: If retrievable_option is RETRIEVABLE_ENABLED, field values are included in the search results. If retrievable_option is unset, the server behavior defaults to RETRIEVABLE_DISABLED for fields that support setting retrievable options. For those fields that do not support setting retrievable options, such as `object` and `boolean`, the server will skip retrievable option setting, and setting retrievable_option for those fields will throw `INVALID_ARGUMENT` error.
          enum:
            - RETRIEVABLE_OPTION_UNSPECIFIED
            - RETRIEVABLE_ENABLED
            - RETRIEVABLE_DISABLED
          type: string
        searchableOption:
          description: If searchable_option is SEARCHABLE_ENABLED, field values are searchable by text queries in SearchService.Search. If SEARCHABLE_ENABLED but field type is numerical, field values will not be searchable by text queries in SearchService.Search, as there are no text values associated to numerical fields. If searchable_option is unset, the server behavior defaults to SEARCHABLE_DISABLED for fields that support setting searchable options. Only `string` fields that have no key property mapping support setting searchable_option. For those fields that do not support setting searchable options, the server will skip searchable option setting, and setting searchable_option for those fields will throw `INVALID_ARGUMENT` error.
          enum:
            - SEARCHABLE_OPTION_UNSPECIFIED
            - SEARCHABLE_ENABLED
            - SEARCHABLE_DISABLED
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaIdpConfig:
      description: Identity Provider Config.
      properties:
        externalIdpConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaIdpConfigExternalIdpConfig"
          description: External Identity provider config.
        idpType:
          description: Identity provider type configured.
          enum:
            - IDP_TYPE_UNSPECIFIED
            - GSUITE
            - THIRD_PARTY
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaIdpConfigExternalIdpConfig:
      description: Third party IDP Config.
      properties:
        workforcePoolName:
          description: 'Workforce pool name. Example: "locations/global/workforcePools/pool_id"'
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaImportDocumentsMetadata:
      description: Metadata related to the progress of the ImportDocuments operation. This is returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        failureCount:
          description: Count of entries that encountered errors while processing.
          format: int64
          type: string
        successCount:
          description: Count of entries that were processed successfully.
          format: int64
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaImportDocumentsResponse:
      description: Response of the ImportDocumentsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.
      properties:
        errorConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaImportErrorConfig"
          description: Echoes the destination for the complete errors in the request if set.
        errorSamples:
          description: A sample of errors encountered while processing the request.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
      type: object
    GoogleCloudDiscoveryengineV1alphaImportErrorConfig:
      description: Configuration of destination for Import related errors.
      properties:
        gcsPrefix:
          description: Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import errors are written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status` message.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesMetadata:
      description: Metadata related to the progress of the ImportSuggestionDenyListEntries operation. This is returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse:
      description: Response message for CompletionService.ImportSuggestionDenyListEntries method.
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the request.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
        failedEntriesCount:
          description: Count of deny list entries that failed to be imported.
          format: int64
          type: string
        importedEntriesCount:
          description: Count of deny list entries successfully imported.
          format: int64
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaImportUserEventsMetadata:
      description: Metadata related to the progress of the Import operation. This is returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        failureCount:
          description: Count of entries that encountered errors while processing.
          format: int64
          type: string
        successCount:
          description: Count of entries that were processed successfully.
          format: int64
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse:
      description: Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.
      properties:
        errorConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaImportErrorConfig"
          description: Echoes the destination for the complete errors if this field was set in the request.
        errorSamples:
          description: A sample of errors encountered while processing the request.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
        joinedEventsCount:
          description: Count of user events imported with complete existing Documents.
          format: int64
          type: string
        unjoinedEventsCount:
          description: Count of user events imported, but with Document information not found in the existing Branch.
          format: int64
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaLayoutParsingConfig:
      description: The layout parsing configurations for documents.
      properties: {}
      type: object
    GoogleCloudDiscoveryengineV1alphaOcrConfig:
      deprecated: true
      description: The OCR options for parsing documents.
      properties:
        enabled:
          description: Required. If OCR is enabled or not. OCR must be enabled for other OcrConfig options to apply. We will only perform OCR on the first 80 pages of the PDF files.
          type: boolean
        enhancedDocumentElements:
          description: "Apply additional enhanced OCR processing to a list of document elements. Supported values: * `table`: advanced table parsing model."
          items:
            type: string
          type: array
        useNativeText:
          description: If true, will use native text instead of OCR text on pages containing native text.
          type: boolean
      type: object
    GoogleCloudDiscoveryengineV1alphaOcrParsingConfig:
      description: The OCR parsing configurations for documents.
      properties:
        enhancedDocumentElements:
          description: "Apply additional enhanced OCR processing to a list of document elements. Supported values: * `table`: advanced table parsing model."
          items:
            type: string
          type: array
        useNativeText:
          description: If true, will use native text instead of OCR text on pages containing native text.
          type: boolean
      type: object
    GoogleCloudDiscoveryengineV1alphaPurgeDocumentsMetadata:
      description: Metadata related to the progress of the PurgeDocuments operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        failureCount:
          description: Count of entries that encountered errors while processing.
          format: int64
          type: string
        ignoredCount:
          description: Count of entries that were ignored as entries were not found.
          format: int64
          type: string
        successCount:
          description: Count of entries that were deleted successfully.
          format: int64
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaPurgeDocumentsResponse:
      description: Response message for DocumentService.PurgeDocuments method. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.
      properties:
        purgeCount:
          description: The total count of documents purged as a result of the operation.
          format: int64
          type: string
        purgeSample:
          description: A sample of document names that will be deleted. Only populated if `force` is set to false. A max of 100 names will be returned and the names are chosen at random.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesMetadata:
      description: Metadata related to the progress of the PurgeSuggestionDenyListEntries operation. This is returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesResponse:
      description: Response message for CompletionService.PurgeSuggestionDenyListEntries method.
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the request.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
        purgeCount:
          description: Number of suggestion deny list entries purged.
          format: int64
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaPurgeUserEventsMetadata:
      description: Metadata related to the progress of the PurgeUserEvents operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        failureCount:
          description: Count of entries that encountered errors while processing.
          format: int64
          type: string
        successCount:
          description: Count of entries that were deleted successfully.
          format: int64
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaPurgeUserEventsResponse:
      description: Response of the PurgeUserEventsRequest. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.
      properties:
        purgeCount:
          description: The total count of events purged as a result of the operation.
          format: int64
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata:
      description: Metadata related to the progress of the SiteSearchEngineService.RecrawlUris operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        invalidUris:
          description: Unique URIs in the request that don't match any TargetSite in the DataStore, only match TargetSites that haven't been fully indexed, or match a TargetSite with type EXCLUDE.
          items:
            type: string
          type: array
        pendingCount:
          description: Total number of URIs that have yet to be crawled.
          format: int32
          type: integer
        quotaExceededCount:
          description: Total number of URIs that were rejected due to insufficient indexing resources.
          format: int32
          type: integer
        successCount:
          description: Total number of URIs that have been crawled so far.
          format: int32
          type: integer
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
        validUrisCount:
          description: Total number of unique URIs in the request that are not in invalid_uris.
          format: int32
          type: integer
      type: object
    GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponse:
      description: Response message for SiteSearchEngineService.RecrawlUris method.
      properties:
        failedUris:
          description: URIs that were not crawled before the LRO terminated.
          items:
            type: string
          type: array
        failureSamples:
          description: Details for a sample of up to 10 `failed_uris`.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfo"
          type: array
      type: object
    GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfo:
      description: Details about why a particular URI failed to be crawled. Each FailureInfo contains one FailureReason per CorpusType.
      properties:
        failureReasons:
          description: List of failure reasons by corpus type (e.g. desktop, mobile).
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason"
          type: array
        uri:
          description: URI that failed to be crawled.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason:
      description: Details about why crawling failed for a particular CorpusType, e.g., DESKTOP and MOBILE crawling may fail for different reasons.
      properties:
        corpusType:
          description: DESKTOP, MOBILE, or CORPUS_TYPE_UNSPECIFIED.
          enum:
            - CORPUS_TYPE_UNSPECIFIED
            - DESKTOP
            - MOBILE
          type: string
        errorMessage:
          description: Reason why the URI was not crawled.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaSchema:
      description: Defines the structure and layout of a type of document data.
      properties:
        fieldConfigs:
          description: Output only. Configurations for fields of the schema.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaFieldConfig"
          readOnly: true
          type: array
        jsonSchema:
          description: The JSON representation of the schema.
          type: string
        name:
          description: Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
          type: string
        structSchema:
          additionalProperties:
            description: Properties of the object.
          description: The structured representation of the schema.
          type: object
      type: object
    GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo:
      description: Verification information for target sites in advanced site search.
      properties:
        siteVerificationState:
          description: Site verification state indicating the ownership and validity.
          enum:
            - SITE_VERIFICATION_STATE_UNSPECIFIED
            - VERIFIED
            - UNVERIFIED
            - EXEMPTED
          type: string
        verifyTime:
          description: Latest site verification time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaTargetSite:
      description: A target site for the SiteSearchEngine.
      properties:
        exactMatch:
          description: Input only. If set to false, a uri_pattern is generated to include all pages whose address contains the provided_uri_pattern. If set to true, an uri_pattern is generated to try to be an exact match of the provided_uri_pattern or just the specific page if the provided_uri_pattern is a specific one. provided_uri_pattern is always normalized to generate the URI pattern to be used by the search engine.
          type: boolean
        failureReason:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReason"
          description: Output only. Failure reason.
          readOnly: true
        generatedUriPattern:
          description: Output only. This is system-generated based on the provided_uri_pattern.
          readOnly: true
          type: string
        indexingStatus:
          description: Output only. Indexing status.
          enum:
            - INDEXING_STATUS_UNSPECIFIED
            - PENDING
            - FAILED
            - SUCCEEDED
            - DELETING
          readOnly: true
          type: string
        name:
          description: Output only. The fully qualified resource name of the target site. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}` The `target_site_id` is system-generated.
          readOnly: true
          type: string
        providedUriPattern:
          description: Required. Input only. The user provided URI pattern from which the `generated_uri_pattern` is generated.
          type: string
        siteVerificationInfo:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo"
          description: Output only. Site ownership and validity verification status.
          readOnly: true
        type:
          description: The type of the target site, e.g., whether the site is to be included or excluded.
          enum:
            - TYPE_UNSPECIFIED
            - INCLUDE
            - EXCLUDE
          type: string
        updateTime:
          description: Output only. The target site's last updated time.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReason:
      description: Site search indexing failure reasons.
      properties:
        quotaFailure:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonQuotaFailure"
          description: Failed due to insufficient quota.
      type: object
    GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonQuotaFailure:
      description: Failed due to insufficient quota.
      properties:
        totalRequiredQuota:
          description: This number is an estimation on how much total quota this project needs to successfully complete indexing.
          format: int64
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaTrainCustomModelMetadata:
      description: Metadata related to the progress of the TrainCustomModel operation. This is returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaTrainCustomModelResponse:
      description: Response of the TrainCustomModelRequest. This message is returned by the google.longrunning.Operations.response field.
      properties:
        errorConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1alphaImportErrorConfig"
          description: Echoes the destination for the complete errors in the request if set.
        errorSamples:
          description: A sample of errors encountered while processing the data.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
        modelStatus:
          description: "The trained model status. Possible values are: * **bad-data**: The training data quality is bad. * **no-improvement**: Tuning didn't improve performance. Won't deploy. * **in-progress**: Model training is in progress. * **ready**: The model is ready for serving."
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaTuneEngineMetadata:
      description: Metadata associated with a tune operation.
      properties:
        engine:
          description: "Required. The resource name of the engine that this tune applies to. Format: `projects/{project_number}/locations/{location_id}/collections/{collection_id}/engines/{engine_id}`"
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaTuneEngineResponse:
      description: Response associated with a tune operation.
      properties: {}
      type: object
    GoogleCloudDiscoveryengineV1alphaUpdateSchemaMetadata:
      description: Metadata for UpdateSchema LRO.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1alphaUpdateTargetSiteMetadata:
      description: Metadata related to the progress of the SiteSearchEngineService.UpdateTargetSite operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaBatchCreateTargetSiteMetadata:
      description: Metadata related to the progress of the SiteSearchEngineService.BatchCreateTargetSites operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesRequest:
      description: Request message for SiteSearchEngineService.BatchCreateTargetSites method.
      properties:
        requests:
          description: Required. The request message specifying the resources to create. A maximum of 20 TargetSites can be created in a batch.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaCreateTargetSiteRequest"
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesResponse:
      description: Response message for SiteSearchEngineService.BatchCreateTargetSites method.
      properties:
        targetSites:
          description: TargetSites created.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaTargetSite"
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaBatchVerifyTargetSitesRequest:
      description: Request message for SiteSearchEngineService.BatchVerifyTargetSites method.
      properties: {}
      type: object
    GoogleCloudDiscoveryengineV1betaBigQuerySource:
      description: BigQuery source import data from.
      properties:
        dataSchema:
          description: "The schema to use when parsing the data from the source. Supported values for user event imports: * `user_event` (default): One UserEvent per row. Supported values for document imports: * `document` (default): One Document format per row. Each document must have a valid Document.id and one of Document.json_data or Document.struct_data. * `custom`: One custom data per row in arbitrary format that conforms to the defined Schema of the data store. This can only be used by Gen App Builder."
          type: string
        datasetId:
          description: Required. The BigQuery data set to copy the data from with a length limit of 1,024 characters.
          type: string
        gcsStagingDir:
          description: Intermediate Cloud Storage directory used for the import with a length limit of 2,000 characters. Can be specified if one wants to have the BigQuery export to a specific Cloud Storage directory.
          type: string
        partitionDate:
          $ref: "#/components/schemas/GoogleTypeDate"
          description: BigQuery time partitioned table's _PARTITIONDATE in YYYY-MM-DD format.
        projectId:
          description: "The project ID (can be project # or ID) that the BigQuery source is in with a length limit of 128 characters. If not specified, inherits the project ID from the parent request."
          type: string
        tableId:
          description: Required. The BigQuery table to copy the data from with a length limit of 1,024 characters.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaCompleteQueryResponse:
      description: Response message for CompletionService.CompleteQuery method.
      properties:
        querySuggestions:
          description: Results of the matched query suggestions. The result list is ordered and the first result is a top suggestion.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaCompleteQueryResponseQuerySuggestion"
          type: array
        tailMatchTriggered:
          description: True if the returned suggestions are all tail suggestions. For tail matching to be triggered, include_tail_suggestions in the request must be true and there must be no suggestions that match the full query.
          type: boolean
      type: object
    GoogleCloudDiscoveryengineV1betaCompleteQueryResponseQuerySuggestion:
      description: Suggestions as search queries.
      properties:
        completableFieldPaths:
          description: The unique document field paths that serve as the source of this suggestion if it was generated from completable fields. This field is only populated for the document-completable model.
          items:
            type: string
          type: array
        suggestion:
          description: The suggestion for the query.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaCompletionInfo:
      description: Detailed completion information including completion attribution token and clicked completion info.
      properties:
        selectedPosition:
          description: End user selected CompleteQueryResponse.QuerySuggestion.suggestion position, starting from 0.
          format: int32
          type: integer
        selectedSuggestion:
          description: End user selected CompleteQueryResponse.QuerySuggestion.suggestion.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaConversation:
      description: External conversation proto definition.
      properties:
        endTime:
          description: Output only. The time the conversation finished.
          format: google-datetime
          readOnly: true
          type: string
        messages:
          description: Conversation messages.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaConversationMessage"
          type: array
        name:
          description: Immutable. Fully qualified name `project/*/locations/global/collections/{collection}/dataStore/*/conversations/*` or `project/*/locations/global/collections/{collection}/engines/*/conversations/*`.
          type: string
        startTime:
          description: Output only. The time the conversation started.
          format: google-datetime
          readOnly: true
          type: string
        state:
          description: The state of the Conversation.
          enum:
            - STATE_UNSPECIFIED
            - IN_PROGRESS
            - COMPLETED
          type: string
        userPseudoId:
          description: A unique identifier for tracking users.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaConversationContext:
      description: Defines context of the conversation
      properties:
        activeDocument:
          description: The current active document the user opened. It contains the document resource reference.
          type: string
        contextDocuments:
          description: The current list of documents the user is seeing. It contains the document resource references.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaConversationMessage:
      description: Defines a conversation message.
      properties:
        createTime:
          description: Output only. Message creation timestamp.
          format: google-datetime
          readOnly: true
          type: string
        reply:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaReply"
          description: Search reply.
        userInput:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaTextInput"
          description: User text input.
      type: object
    GoogleCloudDiscoveryengineV1betaConverseConversationRequest:
      description: Request message for ConversationalSearchService.ConverseConversation method.
      properties:
        boostSpec:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec"
          description: Boost specification to boost certain documents in search results which may affect the converse response. For more information on boosting, see [Boosting](https://cloud.google.com/retail/docs/boosting#boost)
        conversation:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaConversation"
          description: The conversation to be used by auto session only. The name field will be ignored as we automatically assign new name for the conversation in auto session.
        filter:
          description: "The filter syntax consists of an expression language for constructing a predicate from one or more fields of the documents being filtered. Filter expression is case-sensitive. This will be used to filter search results which may affect the summary response. If this field is unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by mapping the LHS filter key to a key property defined in the Vertex AI Search backend -- this mapping is defined by the customer in their schema. For example a media customer might have a field 'name' in their schema. In this case the filter would look like this: filter --> name:'ANY(\"king kong\")' For more information about filtering including syntax and filter operators, see [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)"
          type: string
        query:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaTextInput"
          description: Required. Current user input.
        safeSearch:
          description: Whether to turn on safe search.
          type: boolean
        servingConfig:
          description: "The resource name of the Serving Config to use. Format: `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/servingConfigs/{serving_config_id}` If this is not set, the default serving config will be used."
          type: string
        summarySpec:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec"
          description: A specification for configuring the summary returned in the response.
        userLabels:
          additionalProperties:
            type: string
          description: "The user labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Google Cloud Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details."
          type: object
      type: object
    GoogleCloudDiscoveryengineV1betaConverseConversationResponse:
      description: Response message for ConversationalSearchService.ConverseConversation method.
      properties:
        conversation:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaConversation"
          description: Updated conversation including the answer.
        relatedQuestions:
          description: Suggested related questions.
          items:
            type: string
          type: array
        reply:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaReply"
          description: Answer to the current query.
        searchResults:
          description: Search Results.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult"
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaCreateDataStoreMetadata:
      description: Metadata related to the progress of the DataStoreService.CreateDataStore operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaCreateEngineMetadata:
      description: Metadata related to the progress of the EngineService.CreateEngine operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaCreateSchemaMetadata:
      description: Metadata for Create Schema LRO.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaCreateTargetSiteMetadata:
      description: Metadata related to the progress of the SiteSearchEngineService.CreateTargetSite operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaCreateTargetSiteRequest:
      description: Request message for SiteSearchEngineService.CreateTargetSite method.
      properties:
        parent:
          description: Required. Parent resource name of TargetSite, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
          type: string
        targetSite:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaTargetSite"
          description: Required. The TargetSite to create.
      type: object
    GoogleCloudDiscoveryengineV1betaCustomAttribute:
      description: A custom attribute that is not explicitly modeled in a resource, e.g. UserEvent.
      properties:
        numbers:
          description: The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is "lengths_cm". Exactly one of CustomAttribute.text or CustomAttribute.numbers should be set. Otherwise, an `INVALID_ARGUMENT` error is returned.
          items:
            format: double
            type: number
          type: array
        text:
          description: The textual values of this custom attribute. For example, `["yellow", "green"]` when the key is "color". Empty string is not allowed. Otherwise, an `INVALID_ARGUMENT` error is returned. Exactly one of CustomAttribute.text or CustomAttribute.numbers should be set. Otherwise, an `INVALID_ARGUMENT` error is returned.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaDataStore:
      description: DataStore captures global settings and configs at the DataStore level.
      properties:
        contentConfig:
          description: Immutable. The content config of the data store. If this field is unset, the server behavior defaults to ContentConfig.NO_CONTENT.
          enum:
            - CONTENT_CONFIG_UNSPECIFIED
            - NO_CONTENT
            - CONTENT_REQUIRED
            - PUBLIC_WEBSITE
          type: string
        createTime:
          description: Output only. Timestamp the DataStore was created at.
          format: google-datetime
          readOnly: true
          type: string
        defaultSchemaId:
          description: Output only. The id of the default Schema asscociated to this data store.
          readOnly: true
          type: string
        displayName:
          description: Required. The data store display name. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
          type: string
        documentProcessingConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig"
          description: Configuration for Document understanding and enrichment.
        industryVertical:
          description: Immutable. The industry vertical that the data store registers.
          enum:
            - INDUSTRY_VERTICAL_UNSPECIFIED
            - GENERIC
            - MEDIA
          type: string
        name:
          description: "Immutable. The full resource name of the data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters."
          type: string
        solutionTypes:
          description: "The solutions that the data store enrolls. Available solutions for each industry_vertical: * `MEDIA`: `SOLUTION_TYPE_RECOMMENDATION` and `SOLUTION_TYPE_SEARCH`. * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH` is automatically enrolled. Other solutions cannot be enrolled."
          items:
            enum:
              - SOLUTION_TYPE_UNSPECIFIED
              - SOLUTION_TYPE_RECOMMENDATION
              - SOLUTION_TYPE_SEARCH
              - SOLUTION_TYPE_CHAT
            type: string
          type: array
        startingSchema:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSchema"
          description: The start schema to use for this DataStore when provisioning it. If unset, a default vertical specialized schema will be used. This field is only used by CreateDataStore API, and will be ignored if used in other APIs. This field will be omitted from all API responses including CreateDataStore API. To retrieve a schema of a DataStore, use SchemaService.GetSchema API instead. The provided schema will be validated against certain rules on schema. Learn more from [this doc](https://cloud.google.com/generative-ai-app-builder/docs/provide-schema).
      type: object
    GoogleCloudDiscoveryengineV1betaDeleteDataStoreMetadata:
      description: Metadata related to the progress of the DataStoreService.DeleteDataStore operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaDeleteEngineMetadata:
      description: Metadata related to the progress of the EngineService.DeleteEngine operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaDeleteSchemaMetadata:
      description: Metadata for DeleteSchema LRO.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaDeleteTargetSiteMetadata:
      description: Metadata related to the progress of the SiteSearchEngineService.DeleteTargetSite operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaDigitalParsingConfig:
      description: The digital parsing configurations for documents.
      properties: {}
      type: object
    GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchMetadata:
      description: Metadata related to the progress of the SiteSearchEngineService.DisableAdvancedSiteSearch operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchRequest:
      description: Request message for SiteSearchEngineService.DisableAdvancedSiteSearch method.
      properties: {}
      type: object
    GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchResponse:
      description: Response message for SiteSearchEngineService.DisableAdvancedSiteSearch method.
      properties: {}
      type: object
    GoogleCloudDiscoveryengineV1betaDocument:
      description: Document captures all raw metadata information of items to be recommended or searched.
      properties:
        content:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaDocumentContent"
          description: The unstructured data linked to this document. Content must be set if this document is under a `CONTENT_REQUIRED` data store.
        derivedStructData:
          additionalProperties:
            description: Properties of the object.
          description: Output only. This field is OUTPUT_ONLY. It contains derived data that are not in the original input document.
          readOnly: true
          type: object
        id:
          description: Immutable. The identifier of the document. Id should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters.
          type: string
        indexTime:
          description: Output only. The last time the document was indexed. If this field is set, the document could be returned in search results. This field is OUTPUT_ONLY. If this field is not populated, it means the document has never been indexed.
          format: google-datetime
          readOnly: true
          type: string
        jsonData:
          description: The JSON string representation of the document. It should conform to the registered Schema or an `INVALID_ARGUMENT` error is thrown.
          type: string
        name:
          description: "Immutable. The full resource name of the document. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters."
          type: string
        parentDocumentId:
          description: The identifier of the parent document. Currently supports at most two level document hierarchy. Id should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters.
          type: string
        schemaId:
          description: The identifier of the schema located in the same data store.
          type: string
        structData:
          additionalProperties:
            description: Properties of the object.
          description: The structured JSON data for the document. It should conform to the registered Schema or an `INVALID_ARGUMENT` error is thrown.
          type: object
      type: object
    GoogleCloudDiscoveryengineV1betaDocumentContent:
      description: Unstructured data linked to this document.
      properties:
        mimeType:
          description: "The MIME type of the content. Supported types: * `application/pdf` (PDF, only native PDFs are supported for now) * `text/html` (HTML) * `application/vnd.openxmlformats-officedocument.wordprocessingml.document` (DOCX) * `application/vnd.openxmlformats-officedocument.presentationml.presentation` (PPTX) * `text/plain` (TXT) See https://www.iana.org/assignments/media-types/media-types.xhtml."
          type: string
        rawBytes:
          description: "The content represented as a stream of bytes. The maximum length is 1,000,000 bytes (1 MB / ~0.95 MiB). Note: As with all `bytes` fields, this field is represented as pure binary in Protocol Buffers and base64-encoded string in JSON. For example, `abc123!?$*&()'-=@~` should be represented as `YWJjMTIzIT8kKiYoKSctPUB+` in JSON. See https://developers.google.com/protocol-buffers/docs/proto3#json."
          format: byte
          type: string
        uri:
          description: The URI of the content. Only Cloud Storage URIs (e.g. `gs://bucket-name/path/to/file`) are supported. The maximum file size is 2.5 MB for text-based formats, 100 MB for other formats.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaDocumentInfo:
      description: Detailed document information associated with a user event.
      properties:
        id:
          description: The Document resource ID.
          type: string
        name:
          description: "The Document resource full name, of the form: `projects/{project_id}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/branches/{branch_id}/documents/{document_id}`"
          type: string
        promotionIds:
          description: The promotion IDs associated with this Document. Currently, this field is restricted to at most one ID.
          items:
            type: string
          type: array
        quantity:
          description: "Quantity of the Document associated with the user event. Defaults to 1. For example, this field will be 2 if two quantities of the same Document are involved in a `add-to-cart` event. Required for events of the following event types: * `add-to-cart` * `purchase`"
          format: int32
          type: integer
        uri:
          description: The Document URI - only allowed for website data stores.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig:
      description: A singleton resource of DataStore. It's empty when DataStore is created, which defaults to digital parser. The first call to DataStoreService.UpdateDocumentProcessingConfig method will initialize the config.
      properties:
        defaultParsingConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig"
          description: Configurations for default Document parser. If not specified, we will configure it as default DigitalParsingConfig, and the default parsing config will be applied to all file types for Document parsing.
        name:
          description: "The full resource name of the Document Processing Config. Format: `projects/*/locations/*/collections/*/dataStores/*/documentProcessingConfig`."
          type: string
        parsingConfigOverrides:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig"
          description: "Map from file type to override the default parsing configuration based on the file type. Supported keys: * `pdf`: Override parsing config for PDF files, either digital parsing, ocr parsing or layout parsing is supported. * `html`: Override parsing config for HTML files, only digital parsing and or layout parsing are supported. * `docx`: Override parsing config for DOCX files, only digital parsing and or layout parsing are supported."
          type: object
      type: object
    GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig:
      description: Related configurations applied to a specific type of document parser.
      properties:
        digitalParsingConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaDigitalParsingConfig"
          description: Configurations applied to digital parser.
        ocrParsingConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaOcrParsingConfig"
          description: Configurations applied to OCR parser. Currently it only applies to PDFs.
      type: object
    GoogleCloudDiscoveryengineV1betaDoubleList:
      description: Double list.
      properties:
        values:
          description: Double values.
          items:
            format: double
            type: number
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaEmbeddingConfig:
      description: Defines embedding config, used for bring your own embeddings feature.
      properties:
        fieldPath:
          description: Full field path in the schema mapped as embedding field.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchMetadata:
      description: Metadata related to the progress of the SiteSearchEngineService.EnableAdvancedSiteSearch operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchRequest:
      description: Request message for SiteSearchEngineService.EnableAdvancedSiteSearch method.
      properties: {}
      type: object
    GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchResponse:
      description: Response message for SiteSearchEngineService.EnableAdvancedSiteSearch method.
      properties: {}
      type: object
    GoogleCloudDiscoveryengineV1betaEngine:
      description: Metadata that describes the training and serving parameters of an Engine.
      properties:
        chatEngineConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig"
          description: Configurations for the Chat Engine. Only applicable if solution_type is SOLUTION_TYPE_CHAT.
        chatEngineMetadata:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaEngineChatEngineMetadata"
          description: Output only. Additional information of the Chat Engine. Only applicable if solution_type is SOLUTION_TYPE_CHAT.
          readOnly: true
        commonConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaEngineCommonConfig"
          description: Common config spec that specifies the metadata of the engine.
        createTime:
          description: Output only. Timestamp the Recommendation Engine was created at.
          format: google-datetime
          readOnly: true
          type: string
        dataStoreIds:
          description: The data stores associated with this engine. For SOLUTION_TYPE_SEARCH and SOLUTION_TYPE_RECOMMENDATION type of engines, they can only associate with at most one data store. If solution_type is SOLUTION_TYPE_CHAT, multiple DataStores in the same Collection can be associated here. Note that when used in CreateEngineRequest, one DataStore id must be provided as the system will use it for necessary initializations.
          items:
            type: string
          type: array
        displayName:
          description: Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters.
          type: string
        industryVertical:
          description: "The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to `GENERIC`. Vertical on Engine has to match vertical of the DataStore liniked to the engine."
          enum:
            - INDUSTRY_VERTICAL_UNSPECIFIED
            - GENERIC
            - MEDIA
          type: string
        name:
          description: "Immutable. The fully qualified resource name of the engine. This field must be a UTF-8 encoded string with a length limit of 1024 characters. Format: `projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}` engine should be 1-63 characters, and valid characters are /a-z0-9*/. Otherwise, an INVALID_ARGUMENT error is returned."
          type: string
        searchEngineConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig"
          description: Configurations for the Search Engine. Only applicable if solution_type is SOLUTION_TYPE_SEARCH.
        solutionType:
          description: Required. The solutions of the engine.
          enum:
            - SOLUTION_TYPE_UNSPECIFIED
            - SOLUTION_TYPE_RECOMMENDATION
            - SOLUTION_TYPE_SEARCH
            - SOLUTION_TYPE_CHAT
          type: string
        updateTime:
          description: Output only. Timestamp the Recommendation Engine was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig:
      description: Configurations for a Chat Engine.
      properties:
        agentCreationConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig"
          description: The configurationt generate the Dialogflow agent that is associated to this Engine. Note that these configurations are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation.
        dialogflowAgentToLink:
          description: "The resource name of an exist Dialogflow agent to link to this Chat Engine. Customers can either provide `agent_creation_config` to create agent or provide an agent name that links the agent with the Chat engine. Format: `projects//locations//agents/`. Note that the `dialogflow_agent_to_link` are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation. Please use ChatEngineMetadata.dialogflow_agent for actual agent association after Engine is created."
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig:
      description: Configurations for generating a Dialogflow agent. Note that these configurations are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation.
      properties:
        business:
          description: Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search.
          type: string
        defaultLanguageCode:
          description: Required. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.
          type: string
        location:
          description: "Agent location for Agent creation, supported values: global/us/eu. If not provided, us Engine will create Agent using us-central-1 by default; eu Engine will create Agent using eu-west-1 by default."
          type: string
        timeZone:
          description: Required. The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaEngineChatEngineMetadata:
      description: Additional information of a Chat Engine. Fields in this message are output only.
      properties:
        dialogflowAgent:
          description: "The resource name of a Dialogflow agent, that this Chat Engine refers to. Format: `projects//locations//agents/`."
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaEngineCommonConfig:
      description: Common configurations for an Engine.
      properties:
        companyName:
          description: Immutable. The name of the company, business or entity that is associated with the engine. Setting this may help improve LLM related features.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig:
      description: Configurations for a Search Engine.
      properties:
        searchAddOns:
          description: The add-on that this search engine enables.
          items:
            enum:
              - SEARCH_ADD_ON_UNSPECIFIED
              - SEARCH_ADD_ON_LLM
            type: string
          type: array
        searchTier:
          description: The search feature tier of this engine. Different tiers might have different pricing. To learn more, please check the pricing documentation. Defaults to SearchTier.SEARCH_TIER_STANDARD if not specified.
          enum:
            - SEARCH_TIER_UNSPECIFIED
            - SEARCH_TIER_STANDARD
            - SEARCH_TIER_ENTERPRISE
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaFetchDomainVerificationStatusResponse:
      description: Response message for SiteSearchEngineService.FetchDomainVerificationStatus method.
      properties:
        nextPageToken:
          description: A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        targetSites:
          description: List of TargetSites containing the site verification status.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaTargetSite"
          type: array
        totalSize:
          description: The total number of items matching the request. This will always be populated in the response.
          format: int32
          type: integer
      type: object
    GoogleCloudDiscoveryengineV1betaGcsSource:
      description: Cloud Storage location for input content.
      properties:
        dataSchema:
          description: "The schema to use when parsing the data from the source. Supported values for document imports: * `document` (default): One JSON Document per line. Each document must have a valid Document.id. * `content`: Unstructured data (e.g. PDF, HTML). Each file matched by `input_uris` becomes a document, with the ID set to the first 128 bits of SHA256(URI) encoded as a hex string. * `custom`: One custom data JSON per row in arbitrary format that conforms to the defined Schema of the data store. This can only be used by Gen App Builder. * `csv`: A CSV file with header conforming to the defined Schema of the data store. Each entry after the header is imported as a Document. This can only be used by Gen App Builder. Supported values for user even imports: * `user_event` (default): One JSON UserEvent per line."
          type: string
        inputUris:
          description: Required. Cloud Storage URIs to input files. URI can be up to 2000 characters long. URIs can match the full object path (for example, `gs://bucket/directory/object.json`) or a pattern matching one or more files, such as `gs://bucket/directory/*.json`. A request can contain at most 100 files (or 100,000 files if `data_schema` is `content`). Each file can be up to 2 GB (or 100 MB if `data_schema` is `content`).
          items:
            type: string
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaImportDocumentsMetadata:
      description: Metadata related to the progress of the ImportDocuments operation. This is returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        failureCount:
          description: Count of entries that encountered errors while processing.
          format: int64
          type: string
        successCount:
          description: Count of entries that were processed successfully.
          format: int64
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaImportDocumentsRequest:
      description: Request message for Import methods.
      properties:
        autoGenerateIds:
          description: Whether to automatically generate IDs for the documents if absent. If set to `true`, Document.ids are automatically generated based on the hash of the payload, where IDs may not be consistent during multiple imports. In which case ReconciliationMode.FULL is highly recommended to avoid duplicate contents. If unset or set to `false`, Document.ids have to be specified using id_field, otherwise, documents without IDs fail to be imported. Only set this field when using GcsSource or BigQuerySource, and when GcsSource.data_schema or BigQuerySource.data_schema is `custom` or `csv`. Otherwise, an INVALID_ARGUMENT error is thrown.
          type: boolean
        bigquerySource:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaBigQuerySource"
          description: BigQuery input source.
        errorConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaImportErrorConfig"
          description: The desired location of errors incurred during the Import.
        gcsSource:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaGcsSource"
          description: Cloud Storage location for the input content.
        idField:
          description: 'The field in the Cloud Storage and BigQuery sources that indicates the unique IDs of the documents. For GcsSource it is the key of the JSON field. For instance, `my_id` for JSON `{"my_id": "some_uuid"}`. For BigQuerySource it is the column name of the BigQuery table where the unique ids are stored. The values of the JSON field or the BigQuery column are used as the Document.ids. The JSON field or the BigQuery column must be of string type, and the values must be set as valid strings conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) with 1-63 characters. Otherwise, documents without valid IDs fail to be imported. Only set this field when using GcsSource or BigQuerySource, and when GcsSource.data_schema or BigQuerySource.data_schema is `custom`. And only set this field when auto_generate_ids is unset or set as `false`. Otherwise, an INVALID_ARGUMENT error is thrown. If it is unset, a default value `_id` is used when importing from the allowed data sources.'
          type: string
        inlineSource:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaImportDocumentsRequestInlineSource"
          description: The Inline source for the input content for documents.
        reconciliationMode:
          description: The mode of reconciliation between existing documents and the documents to be imported. Defaults to ReconciliationMode.INCREMENTAL.
          enum:
            - RECONCILIATION_MODE_UNSPECIFIED
            - INCREMENTAL
            - FULL
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaImportDocumentsRequestInlineSource:
      description: The inline source for the input config for ImportDocuments method.
      properties:
        documents:
          description: Required. A list of documents to update/create. Each document must have a valid Document.id. Recommended max of 100 items.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaDocument"
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaImportDocumentsResponse:
      description: Response of the ImportDocumentsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.
      properties:
        errorConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaImportErrorConfig"
          description: Echoes the destination for the complete errors in the request if set.
        errorSamples:
          description: A sample of errors encountered while processing the request.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaImportErrorConfig:
      description: Configuration of destination for Import related errors.
      properties:
        gcsPrefix:
          description: Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import errors are written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status` message.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesMetadata:
      description: Metadata related to the progress of the ImportSuggestionDenyListEntries operation. This is returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequest:
      description: Request message for CompletionService.ImportSuggestionDenyListEntries method.
      properties:
        gcsSource:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaGcsSource"
          description: "Cloud Storage location for the input content. Only 1 file can be specified that contains all entries to import. Supported values `gcs_source.schema` for autocomplete suggestion deny list entry imports: * `suggestion_deny_list` (default): One JSON [SuggestionDenyListEntry] per line."
        inlineSource:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequestInlineSource"
          description: The Inline source for the input content for suggestion deny list entries.
      type: object
    GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequestInlineSource:
      description: The inline source for SuggestionDenyListEntry.
      properties:
        entries:
          description: Required. A list of all denylist entries to import. Max of 1000 items.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry"
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesResponse:
      description: Response message for CompletionService.ImportSuggestionDenyListEntries method.
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the request.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
        failedEntriesCount:
          description: Count of deny list entries that failed to be imported.
          format: int64
          type: string
        importedEntriesCount:
          description: Count of deny list entries successfully imported.
          format: int64
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaImportUserEventsMetadata:
      description: Metadata related to the progress of the Import operation. This is returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        failureCount:
          description: Count of entries that encountered errors while processing.
          format: int64
          type: string
        successCount:
          description: Count of entries that were processed successfully.
          format: int64
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaImportUserEventsRequest:
      description: Request message for the ImportUserEvents request.
      properties:
        bigquerySource:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaBigQuerySource"
          description: BigQuery input source.
        errorConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaImportErrorConfig"
          description: The desired location of errors incurred during the Import. Cannot be set for inline user event imports.
        gcsSource:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaGcsSource"
          description: Cloud Storage location for the input content.
        inlineSource:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaImportUserEventsRequestInlineSource"
          description: The Inline source for the input content for UserEvents.
      type: object
    GoogleCloudDiscoveryengineV1betaImportUserEventsRequestInlineSource:
      description: The inline source for the input config for ImportUserEvents method.
      properties:
        userEvents:
          description: Required. A list of user events to import. Recommended max of 10k items.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaUserEvent"
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaImportUserEventsResponse:
      description: Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.
      properties:
        errorConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaImportErrorConfig"
          description: Echoes the destination for the complete errors if this field was set in the request.
        errorSamples:
          description: A sample of errors encountered while processing the request.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
        joinedEventsCount:
          description: Count of user events imported with complete existing Documents.
          format: int64
          type: string
        unjoinedEventsCount:
          description: Count of user events imported, but with Document information not found in the existing Branch.
          format: int64
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaInterval:
      description: A floating point interval.
      properties:
        exclusiveMaximum:
          description: Exclusive upper bound.
          format: double
          type: number
        exclusiveMinimum:
          description: Exclusive lower bound.
          format: double
          type: number
        maximum:
          description: Inclusive upper bound.
          format: double
          type: number
        minimum:
          description: Inclusive lower bound.
          format: double
          type: number
      type: object
    GoogleCloudDiscoveryengineV1betaListConversationsResponse:
      description: Response for ListConversations method.
      properties:
        conversations:
          description: All the Conversations for a given data store.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaConversation"
          type: array
        nextPageToken:
          description: Pagination token, if not returned indicates the last page.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaListDataStoresResponse:
      description: Response message for DataStoreService.ListDataStores method.
      properties:
        dataStores:
          description: All the customer's DataStores.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaDataStore"
          type: array
        nextPageToken:
          description: A token that can be sent as ListDataStoresRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaListDocumentsResponse:
      description: Response message for DocumentService.ListDocuments method.
      properties:
        documents:
          description: The Documents.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaDocument"
          type: array
        nextPageToken:
          description: A token that can be sent as ListDocumentsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaListEnginesResponse:
      description: Response message for EngineService.ListEngines method.
      properties:
        engines:
          description: All the customer's Engines.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaEngine"
          type: array
        nextPageToken:
          description: Not supported.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaListSchemasResponse:
      description: Response message for SchemaService.ListSchemas method.
      properties:
        nextPageToken:
          description: A token that can be sent as ListSchemasRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        schemas:
          description: The Schemas.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSchema"
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaListServingConfigsResponse:
      description: Response for ListServingConfigs method.
      properties:
        nextPageToken:
          description: Pagination token, if not returned indicates the last page.
          type: string
        servingConfigs:
          description: All the ServingConfigs for a given dataStore.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaServingConfig"
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaListTargetSitesResponse:
      description: Response message for SiteSearchEngineService.ListTargetSites method.
      properties:
        nextPageToken:
          description: A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        targetSites:
          description: List of TargetSites.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaTargetSite"
          type: array
        totalSize:
          description: The total number of items matching the request. This will always be populated in the response.
          format: int32
          type: integer
      type: object
    GoogleCloudDiscoveryengineV1betaMediaInfo:
      description: Media-specific user event information.
      properties:
        mediaProgressDuration:
          description: The media progress time in seconds, if applicable. For example, if the end user has finished 90 seconds of a playback video, then MediaInfo.media_progress_duration.seconds should be set to 90.
          format: google-duration
          type: string
        mediaProgressPercentage:
          description: Media progress should be computed using only the media_progress_duration relative to the media total length. This value must be between `[0, 1.0]` inclusive. If this is not a playback or the progress cannot be computed (e.g. ongoing livestream), this field should be unset.
          format: float
          type: number
      type: object
    GoogleCloudDiscoveryengineV1betaOcrParsingConfig:
      description: The OCR parsing configurations for documents.
      properties:
        enhancedDocumentElements:
          description: "Apply additional enhanced OCR processing to a list of document elements. Supported values: * `table`: advanced table parsing model."
          items:
            type: string
          type: array
        useNativeText:
          description: If true, will use native text instead of OCR text on pages containing native text.
          type: boolean
      type: object
    GoogleCloudDiscoveryengineV1betaPageInfo:
      description: Detailed page information.
      properties:
        pageCategory:
          description: "The most specific category associated with a category page. To represent full path of category, use '>' sign to separate different hierarchies. If '>' is part of the category name, please replace it with other character(s). Category pages include special pages such as sales or promotions. For instance, a special sale page may have the category hierarchy: `\"pageCategory\" : \"Sales > 2017 Black Friday Deals\"`. Required for `view-category-page` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned."
          type: string
        pageviewId:
          description: A unique ID of a web page view. This should be kept the same for all user events triggered from the same pageview. For example, an item detail page view could trigger multiple events as the user is browsing the page. The `pageview_id` property should be kept the same for all these events so that they can be grouped together properly. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically.
          type: string
        referrerUri:
          description: The referrer URL of the current page. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically. However, some browser privacy restrictions may cause this field to be empty.
          type: string
        uri:
          description: Complete URL (window.location.href) of the user's current page. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically. Maximum length 5,000 characters.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaPanelInfo:
      description: Detailed panel information associated with a user event.
      properties:
        displayName:
          description: The display name of the panel.
          type: string
        panelId:
          description: Required. The panel ID.
          type: string
        panelPosition:
          description: The ordered position of the panel, if shown to the user with other panels. If set, then total_panels must also be set.
          format: int32
          type: integer
        totalPanels:
          description: The total number of panels, including this one, shown to the user. Must be set if panel_position is set.
          format: int32
          type: integer
      type: object
    GoogleCloudDiscoveryengineV1betaPurgeDocumentsMetadata:
      description: Metadata related to the progress of the PurgeDocuments operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        failureCount:
          description: Count of entries that encountered errors while processing.
          format: int64
          type: string
        ignoredCount:
          description: Count of entries that were ignored as entries were not found.
          format: int64
          type: string
        successCount:
          description: Count of entries that were deleted successfully.
          format: int64
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest:
      description: Request message for DocumentService.PurgeDocuments method.
      properties:
        filter:
          description: Required. Filter matching documents to purge. Only currently supported value is `*` (all items).
          type: string
        force:
          description: Actually performs the purge. If `force` is set to false, return the expected purge count without deleting any documents.
          type: boolean
      type: object
    GoogleCloudDiscoveryengineV1betaPurgeDocumentsResponse:
      description: Response message for DocumentService.PurgeDocuments method. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.
      properties:
        purgeCount:
          description: The total count of documents purged as a result of the operation.
          format: int64
          type: string
        purgeSample:
          description: A sample of document names that will be deleted. Only populated if `force` is set to false. A max of 100 names will be returned and the names are chosen at random.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesMetadata:
      description: Metadata related to the progress of the PurgeSuggestionDenyListEntries operation. This is returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesRequest:
      description: Request message for CompletionService.PurgeSuggestionDenyListEntries method.
      properties: {}
      type: object
    GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesResponse:
      description: Response message for CompletionService.PurgeSuggestionDenyListEntries method.
      properties:
        errorSamples:
          description: A sample of errors encountered while processing the request.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
        purgeCount:
          description: Number of suggestion deny list entries purged.
          format: int64
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaRecommendRequest:
      description: Request message for Recommend method.
      properties:
        filter:
          description: 'Filter for restricting recommendation results with a length limit of 5,000 characters. Currently, only filter expressions on the `filter_tags` attribute is supported. Examples: * `(filter_tags: ANY("Red", "Blue") OR filter_tags: ANY("Hot", "Cold"))` * `(filter_tags: ANY("Red", "Blue")) AND NOT (filter_tags: ANY("Green"))` If `attributeFilteringSyntax` is set to true under the `params` field, then attribute-based expressions are expected instead of the above described tag-based syntax. Examples: * (launguage: ANY("en", "es")) AND NOT (categories: ANY("Movie")) * (available: true) AND (launguage: ANY("en", "es")) OR (categories: ANY("Movie")) If your filter blocks all results, the API will return generic (unfiltered) popular Documents. If you only want results strictly matching the filters, set `strictFiltering` to True in RecommendRequest.params to receive empty results instead. Note that the API will never return Documents with `storageStatus` of `EXPIRED` or `DELETED` regardless of filter choices.'
          type: string
        pageSize:
          description: Maximum number of results to return. Set this property to the number of recommendation results needed. If zero, the service will choose a reasonable default. The maximum allowed value is 100. Values above 100 will be coerced to 100.
          format: int32
          type: integer
        params:
          additionalProperties: {}
          description: "Additional domain specific parameters for the recommendations. Allowed values: * `returnDocument`: Boolean. If set to true, the associated Document object will be returned in RecommendResponse.RecommendationResult.document. * `returnScore`: Boolean. If set to true, the recommendation 'score' corresponding to each returned Document will be set in RecommendResponse.RecommendationResult.metadata. The given 'score' indicates the probability of a Document conversion given the user's context and history. * `strictFiltering`: Boolean. True by default. If set to false, the service will return generic (unfiltered) popular Documents instead of empty if your filter blocks all recommendation results. * `diversityLevel`: String. Default empty. If set to be non-empty, then it needs to be one of: * `no-diversity` * `low-diversity` * `medium-diversity` * `high-diversity` * `auto-diversity` This gives request-level control and adjusts recommendation results based on Document category. * `attributeFilteringSyntax`: Boolean. False by default. If set to true, the `filter` field is interpreted according to the new, attribute-based syntax."
          type: object
        userEvent:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaUserEvent"
          description: Required. Context about the user, what they are looking at and what action they took to trigger the Recommend request. Note that this user event detail won't be ingested to userEvent logs. Thus, a separate userEvent write request is required for event logging. Don't set UserEvent.user_pseudo_id or UserEvent.user_info.user_id to the same fixed ID for different users. If you are trying to receive non-personalized recommendations (not recommended; this can negatively impact model performance), instead set UserEvent.user_pseudo_id to a random unique ID and leave UserEvent.user_info.user_id unset.
        userLabels:
          additionalProperties:
            type: string
          description: "The user labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details."
          type: object
        validateOnly:
          description: Use validate only mode for this recommendation query. If set to true, a fake model will be used that returns arbitrary Document IDs. Note that the validate only mode should only be used for testing the API, or if the model is not ready.
          type: boolean
      type: object
    GoogleCloudDiscoveryengineV1betaRecommendResponse:
      description: Response message for Recommend method.
      properties:
        attributionToken:
          description: A unique attribution token. This should be included in the UserEvent logs resulting from this recommendation, which enables accurate attribution of recommendation model performance.
          type: string
        missingIds:
          description: IDs of documents in the request that were missing from the default Branch associated with the requested ServingConfig.
          items:
            type: string
          type: array
        results:
          description: A list of recommended Documents. The order represents the ranking (from the most relevant Document to the least).
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult"
          type: array
        validateOnly:
          description: True if RecommendRequest.validate_only was set.
          type: boolean
      type: object
    GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult:
      description: RecommendationResult represents a generic recommendation result with associated metadata.
      properties:
        document:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaDocument"
          description: Set if `returnDocument` is set to true in RecommendRequest.params.
        id:
          description: Resource ID of the recommended Document.
          type: string
        metadata:
          additionalProperties: {}
          description: "Additional Document metadata / annotations. Possible values: * `score`: Recommendation score in double value. Is set if `returnScore` is set to true in RecommendRequest.params."
          type: object
      type: object
    GoogleCloudDiscoveryengineV1betaRecrawlUrisRequest:
      description: Request message for SiteSearchEngineService.RecrawlUris method.
      properties:
        uris:
          description: Required. List of URIs to crawl. At most 10K URIs are supported, otherwise an INVALID_ARGUMENT error is thrown. Each URI should match at least one TargetSite in `site_search_engine`.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaReply:
      description: Defines a reply message to user.
      properties:
        references:
          deprecated: true
          description: References in the reply.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaReplyReference"
          type: array
        reply:
          deprecated: true
          description: "DEPRECATED: use `summary` instead. Text reply."
          type: string
        summary:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseSummary"
          description: Summary based on search results.
      type: object
    GoogleCloudDiscoveryengineV1betaReplyReference:
      deprecated: true
      description: Defines reference in reply.
      properties:
        anchorText:
          description: Anchor text.
          type: string
        end:
          description: Anchor text end index.
          format: int32
          type: integer
        start:
          description: Anchor text start index.
          format: int32
          type: integer
        uri:
          description: URI link reference.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaSchema:
      description: Defines the structure and layout of a type of document data.
      properties:
        jsonSchema:
          description: The JSON representation of the schema.
          type: string
        name:
          description: Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
          type: string
        structSchema:
          additionalProperties:
            description: Properties of the object.
          description: The structured representation of the schema.
          type: object
      type: object
    GoogleCloudDiscoveryengineV1betaSearchInfo:
      description: Detailed search information.
      properties:
        offset:
          description: An integer that specifies the current offset for pagination (the 0-indexed starting location, amongst the products deemed by the API as relevant). See SearchRequest.offset for definition. If this field is negative, an `INVALID_ARGUMENT` is returned. This can only be set for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.
          format: int32
          type: integer
        orderBy:
          description: The order in which products are returned, if applicable. See SearchRequest.order_by for definition and syntax. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. This can only be set for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.
          type: string
        searchQuery:
          description: The user's search query. See SearchRequest.query for definition. The value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. At least one of search_query or PageInfo.page_category is required for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaSearchRequest:
      description: Request message for SearchService.Search method.
      properties:
        boostSpec:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec"
          description: Boost specification to boost certain documents. For more information on boosting, see [Boosting](https://cloud.google.com/retail/docs/boosting#boost)
        branch:
          description: The branch resource name, such as `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/branches/0`. Use `default_branch` as the branch ID or leave this field empty, to search documents under the default branch.
          type: string
        canonicalFilter:
          description: The default filter that is applied when a user performs a search without checking any filters on the search page. The filter applied to every search request when quality improvement such as query expansion is needed. In the case a query does not have a sufficient amount of results this filter will be used to determine whether or not to enable the query expansion flow. The original filter will still be used for the query expanded search. This field is strongly recommended to achieve high search quality. For more information about filter syntax, see SearchRequest.filter.
          type: string
        contentSearchSpec:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec"
          description: A specification for configuring the behavior of content search.
        embeddingSpec:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec"
          description: Uses the provided embedding to do additional semantic document retrieval. The retrieval is based on the dot product of SearchRequest.EmbeddingSpec.EmbeddingVector.vector and the document embedding that is provided in SearchRequest.EmbeddingSpec.EmbeddingVector.field_path. If SearchRequest.EmbeddingSpec.EmbeddingVector.field_path is not provided, it will use ServingConfig.EmbeddingConfig.field_path.
        facetSpecs:
          description: Facet specifications for faceted search. If empty, no facets are returned. A maximum of 100 values are allowed. Otherwise, an `INVALID_ARGUMENT` error is returned.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec"
          type: array
        filter:
          description: "The filter syntax consists of an expression language for constructing a predicate from one or more fields of the documents being filtered. Filter expression is case-sensitive. If this field is unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by mapping the LHS filter key to a key property defined in the Vertex AI Search backend -- this mapping is defined by the customer in their schema. For example a media customer might have a field 'name' in their schema. In this case the filter would look like this: filter --> name:'ANY(\"king kong\")' For more information about filtering including syntax and filter operators, see [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)"
          type: string
        imageQuery:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestImageQuery"
          description: Raw image query.
        offset:
          description: A 0-indexed integer that specifies the current offset (that is, starting result location, amongst the Documents deemed by the API as relevant) in search results. This field is only considered if page_token is unset. If this field is negative, an `INVALID_ARGUMENT` is returned.
          format: int32
          type: integer
        orderBy:
          description: The order in which documents are returned. Documents can be ordered by a field in an Document object. Leave it unset if ordered by relevance. `order_by` expression is case-sensitive. For more information on ordering, see [Ordering](https://cloud.google.com/retail/docs/filter-and-order#order) If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
          type: string
        pageSize:
          description: Maximum number of Documents to return. If unspecified, defaults to a reasonable value. The maximum allowed value is 100. Values above 100 are coerced to 100. If this field is negative, an `INVALID_ARGUMENT` is returned.
          format: int32
          type: integer
        pageToken:
          description: A page token received from a previous SearchService.Search call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to SearchService.Search must match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is returned.
          type: string
        params:
          additionalProperties: {}
          description: 'Additional search parameters. For public website search only, supported values are: * `user_country_code`: string. Default empty. If set to non-empty, results are restricted or boosted based on the location provided. Example: user_country_code: "au" For available codes see [Country Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes) * `search_type`: double. Default empty. Enables non-webpage searching depending on the value. The only valid non-default value is 1, which enables image searching. Example: search_type: 1'
          type: object
        query:
          description: Raw search query.
          type: string
        queryExpansionSpec:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec"
          description: The query expansion specification that specifies the conditions under which query expansion occurs.
        rankingExpression:
          description: 'The ranking expression controls the customized ranking on retrieval documents. This overrides ServingConfig.ranking_expression. The ranking expression is a single function or multiple functions that are joint by "+". * ranking_expression = function, { " + ", function }; Supported functions: * double * relevance_score * double * dotProduct(embedding_field_path) Function variables: `relevance_score`: pre-defined keywords, used for measure relevance between query and document. `embedding_field_path`: the document embedding field used with query embedding vector. `dotProduct`: embedding function between embedding_field_path and query embedding vector. Example ranking expression: If document has an embedding field doc_embedding, the ranking expression could be `0.5 * relevance_score + 0.3 * dotProduct(doc_embedding)`.'
          type: string
        safeSearch:
          description: Whether to turn on safe search. This is only supported for website search.
          type: boolean
        spellCorrectionSpec:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec"
          description: The spell correction specification that specifies the mode under which spell correction takes effect.
        userInfo:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaUserInfo"
          description: Information about the end user. Highly recommended for analytics. UserInfo.user_agent is used to deduce `device_type` for analytics.
        userLabels:
          additionalProperties:
            type: string
          description: "The user labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Google Cloud Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details."
          type: object
        userPseudoId:
          description: A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. This field should NOT have a fixed value such as `unknown_visitor`. This should be the same identifier as UserEvent.user_pseudo_id and CompleteQueryRequest.user_pseudo_id The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec:
      description: Boost specification to boost certain documents.
      properties:
        conditionBoostSpecs:
          description: Condition boost specifications. If a document matches multiple conditions in the specifictions, boost scores from these specifications are all applied and combined in a non-linear way. Maximum number of specifications is 20.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpec"
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpec:
      description: Boost applies to documents which match a condition.
      properties:
        boost:
          description: Strength of the condition boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the document a big promotion. However, it does not necessarily mean that the boosted document will be the top result at all times, nor that other documents will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant documents. Setting to -1.0 gives the document a big demotion. However, results that are deeply relevant might still be shown. The document will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.
          format: float
          type: number
        condition:
          description: 'An expression which specifies a boost condition. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost documents with document ID "doc_1" or "doc_2", and color "Red" or "Blue": * (document_id: ANY("doc_1", "doc_2")) AND (color: ANY("Red", "Blue"))'
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec:
      description: A specification for configuring the behavior of content search.
      properties:
        extractiveContentSpec:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec"
          description: If there is no extractive_content_spec provided, there will be no extractive answer in the search response.
        snippetSpec:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec"
          description: If `snippetSpec` is not specified, snippets are not included in the search response.
        summarySpec:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec"
          description: If `summarySpec` is not specified, summaries are not included in the search response.
      type: object
    GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec:
      description: A specification for configuring the extractive content in a search response.
      properties:
        maxExtractiveAnswerCount:
          description: The maximum number of extractive answers returned in each search result. An extractive answer is a verbatim answer extracted from the original document, which provides a precise and contextually relevant answer to the search query. If the number of matching answers is less than the `max_extractive_answer_count`, return all of the answers. Otherwise, return the `max_extractive_answer_count`. At most five answers are returned for each SearchResult.
          format: int32
          type: integer
        maxExtractiveSegmentCount:
          description: The max number of extractive segments returned in each search result. Only applied if the DataStore is set to DataStore.ContentConfig.CONTENT_REQUIRED or DataStore.solution_types is SOLUTION_TYPE_CHAT. An extractive segment is a text segment extracted from the original document that is relevant to the search query, and, in general, more verbose than an extractive answer. The segment could then be used as input for LLMs to generate summaries and answers. If the number of matching segments is less than `max_extractive_segment_count`, return all of the segments. Otherwise, return the `max_extractive_segment_count`.
          format: int32
          type: integer
        numNextSegments:
          description: Return at most `num_next_segments` segments after each selected segments.
          format: int32
          type: integer
        numPreviousSegments:
          description: Specifies whether to also include the adjacent from each selected segments. Return at most `num_previous_segments` segments before each selected segments.
          format: int32
          type: integer
      type: object
    GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec:
      description: A specification for configuring snippets in a search response.
      properties:
        maxSnippetCount:
          deprecated: true
          description: "[DEPRECATED] This field is deprecated. To control snippet return, use `return_snippet` field. For backwards compatibility, we will return snippet if max_snippet_count > 0."
          format: int32
          type: integer
        referenceOnly:
          deprecated: true
          description: "[DEPRECATED] This field is deprecated and will have no affect on the snippet."
          type: boolean
        returnSnippet:
          description: If `true`, then return snippet. If no snippet can be generated, we return "No snippet is available for this page." A `snippet_status` with `SUCCESS` or `NO_SNIPPET_AVAILABLE` will also be returned.
          type: boolean
      type: object
    GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec:
      description: A specification for configuring a summary returned in a search response.
      properties:
        ignoreAdversarialQuery:
          description: Specifies whether to filter out adversarial queries. The default value is `false`. Google employs search-query classification to detect adversarial queries. No summary is returned if the search query is classified as an adversarial query. For example, a user might ask a question regarding negative comments about the company or submit a query designed to generate unsafe, policy-violating output. If this field is set to `true`, we skip generating summaries for adversarial queries and return fallback messages instead.
          type: boolean
        ignoreNonSummarySeekingQuery:
          description: Specifies whether to filter out queries that are not summary-seeking. The default value is `false`. Google employs search-query classification to detect summary-seeking queries. No summary is returned if the search query is classified as a non-summary seeking query. For example, `why is the sky blue` and `Who is the best soccer player in the world?` are summary-seeking queries, but `SFO airport` and `world cup 2026` are not. They are most likely navigational queries. If this field is set to `true`, we skip generating summaries for non-summary seeking queries and return fallback messages instead.
          type: boolean
        includeCitations:
          description: "Specifies whether to include citations in the summary. The default value is `false`. When this field is set to `true`, summaries include in-line citation numbers. Example summary including citations: BigQuery is Google Cloud's fully managed and completely serverless enterprise data warehouse [1]. BigQuery supports all data types, works across clouds, and has built-in machine learning and business intelligence, all within a unified platform [2, 3]. The citation numbers refer to the returned search results and are 1-indexed. For example, [1] means that the sentence is attributed to the first search result. [2, 3] means that the sentence is attributed to both the second and third search results."
          type: boolean
        languageCode:
          description: "Language code for Summary. Use language tags defined by [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is an experimental feature."
          type: string
        modelPromptSpec:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec"
          description: If specified, the spec will be used to modify the prompt provided to the LLM.
        modelSpec:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec"
          description: If specified, the spec will be used to modify the model specification provided to the LLM.
        summaryResultCount:
          description: The number of top results to generate the summary from. If the number of results returned is less than `summaryResultCount`, the summary is generated from all of the results. At most five results can be used to generate a summary.
          format: int32
          type: integer
      type: object
    GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec:
      description: Specification of the prompt to use with the model.
      properties:
        preamble:
          description: Text at the beginning of the prompt that instructs the assistant. Examples are available in the user guide.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec:
      description: Specification of the model.
      properties:
        version:
          description: "The model version used to generate the summary. Supported values are: * `stable`: string. Default value when no value is specified. Uses a generally available, fine-tuned version of the text-bison@001 model. * `preview`: string. (Public preview) Uses a fine-tuned version of the text-bison@002 model. This model works only for summaries in English."
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec:
      description: The specification that uses customized query embedding vector to do semantic document retrieval.
      properties:
        embeddingVectors:
          description: The embedding vector used for retrieval. Limit to 1.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector"
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector:
      description: Embedding vector.
      properties:
        fieldPath:
          description: Embedding field path in schema.
          type: string
        vector:
          description: Query embedding vector.
          items:
            format: float
            type: number
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec:
      description: A facet specification to perform faceted search.
      properties:
        enableDynamicPosition:
          description: "Enables dynamic position for this facet. If set to true, the position of this facet among all facets in the response is determined automatically. If dynamic facets are enabled, it is ordered together. If set to false, the position of this facet in the response is the same as in the request, and it is ranked before the facets with dynamic position enable and all dynamic facets. For example, you may always want to have rating facet returned in the response, but it's not necessarily to always display the rating facet at the top. In that case, you can set enable_dynamic_position to true so that the position of rating facet in response is determined automatically. Another example, assuming you have the following facets in the request: * \"rating\", enable_dynamic_position = true * \"price\", enable_dynamic_position = false * \"brands\", enable_dynamic_position = false And also you have a dynamic facets enabled, which generates a facet `gender`. Then the final order of the facets in the response can be (\"price\", \"brands\", \"rating\", \"gender\") or (\"price\", \"brands\", \"gender\", \"rating\") depends on how API orders \"gender\" and \"rating\" facets. However, notice that \"price\" and \"brands\" are always ranked at first and second position because their enable_dynamic_position is false."
          type: boolean
        excludedFilterKeys:
          description: List of keys to exclude when faceting. By default, FacetKey.key is not excluded from the filter unless it is listed in this field. Listing a facet key in this field allows its values to appear as facet results, even when they are filtered out of search results. Using this field does not affect what search results are returned. For example, suppose there are 100 documents with the color facet "Red" and 200 documents with the color facet "Blue". A query containing the filter "color:ANY("Red")" and having "color" as FacetKey.key would by default return only "Red" documents in the search results, and also return "Red" with count 100 as the only color facet. Although there are also blue documents available, "Blue" would not be shown as an available facet value. If "color" is listed in "excludedFilterKeys", then the query returns the facet values "Red" with count 100 and "Blue" with count 200, because the "color" key is now excluded from the filter. Because this field doesn't affect search results, the search results are still correctly filtered to return only "Red" documents. A maximum of 100 values are allowed. Otherwise, an `INVALID_ARGUMENT` error is returned.
          items:
            type: string
          type: array
        facetKey:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey"
          description: Required. The facet key specification.
        limit:
          description: Maximum of facet values that should be returned for this facet. If unspecified, defaults to 20. The maximum allowed value is 300. Values above 300 are coerced to 300. If this field is negative, an `INVALID_ARGUMENT` is returned.
          format: int32
          type: integer
      type: object
    GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey:
      description: Specifies how a facet is computed.
      properties:
        caseInsensitive:
          description: True to make facet keys case insensitive when getting faceting values with prefixes or contains; false otherwise.
          type: boolean
        contains:
          description: Only get facet values that contains the given strings. For example, suppose "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "contains" to "2022", the "category" facet only contains "Action > 2022" and "Sci-Fi > 2022". Only supported on textual fields. Maximum is 10.
          items:
            type: string
          type: array
        intervals:
          description: Set only if values should be bucketed into intervals. Must be set for facets with numerical values. Must not be set for facet with text values. Maximum number of intervals is 30.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaInterval"
          type: array
        key:
          description: Required. Supported textual and numerical facet keys in Document object, over which the facet values are computed. Facet key is case-sensitive.
          type: string
        orderBy:
          description: 'The order in which documents are returned. Allowed values are: * "count desc", which means order by SearchResponse.Facet.values.count descending. * "value desc", which means order by SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set, textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals.'
          type: string
        prefixes:
          description: Only get facet values that start with the given string prefix. For example, suppose "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "prefixes" to "Action", the "category" facet only contains "Action > 2022" and "Action > 2021". Only supported on textual fields. Maximum is 10.
          items:
            type: string
          type: array
        restrictedValues:
          description: Only get facet for the given restricted values. Only supported on textual fields. For example, suppose "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "restricted_values" to "Action > 2022", the "category" facet only contains "Action > 2022". Only supported on textual fields. Maximum is 10.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaSearchRequestImageQuery:
      description: Specifies the image query input.
      properties:
        imageBytes:
          description: "Base64 encoded image bytes. Supported image formats: JPEG, PNG, and BMP."
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec:
      description: Specification to determine under which conditions query expansion should occur.
      properties:
        condition:
          description: The condition under which query expansion should occur. Default to Condition.DISABLED.
          enum:
            - CONDITION_UNSPECIFIED
            - DISABLED
            - AUTO
          type: string
        pinUnexpandedResults:
          description: Whether to pin unexpanded results. If this field is set to true, unexpanded products are always at the top of the search results, followed by the expanded results.
          type: boolean
      type: object
    GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec:
      description: The specification for query spell correction.
      properties:
        mode:
          description: The mode under which spell correction should take effect to replace the original search query. Default to Mode.AUTO.
          enum:
            - MODE_UNSPECIFIED
            - SUGGESTION_ONLY
            - AUTO
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaSearchResponse:
      description: Response message for SearchService.Search method.
      properties:
        appliedControls:
          description: Controls applied as part of the Control service.
          items:
            type: string
          type: array
        attributionToken:
          description: A unique search token. This should be included in the UserEvent logs resulting from this search, which enables accurate attribution of search model performance.
          type: string
        correctedQuery:
          description: Contains the spell corrected query, if found. If the spell correction type is AUTOMATIC, then the search results are based on corrected_query. Otherwise the original query is used for search.
          type: string
        facets:
          description: Results of facets requested by user.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseFacet"
          type: array
        geoSearchDebugInfo:
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseGeoSearchDebugInfo"
          type: array
        guidedSearchResult:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResult"
          description: Guided search result.
        nextPageToken:
          description: A token that can be sent as SearchRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        queryExpansionInfo:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseQueryExpansionInfo"
          description: Query expansion information for the returned results.
        redirectUri:
          description: The URI of a customer-defined redirect page. If redirect action is triggered, no search is performed, and only redirect_uri and attribution_token are set in the response.
          type: string
        results:
          description: A list of matched documents. The order represents the ranking.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult"
          type: array
        summary:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseSummary"
          description: A summary as part of the search results. This field is only returned if SearchRequest.ContentSearchSpec.summary_spec is set.
        totalSize:
          description: The estimated total count of matched items irrespective of pagination. The count of results returned by pagination may be less than the total_size that matches.
          format: int32
          type: integer
      type: object
    GoogleCloudDiscoveryengineV1betaSearchResponseFacet:
      description: A facet result.
      properties:
        dynamicFacet:
          description: Whether the facet is dynamically generated.
          type: boolean
        key:
          description: The key for this facet. E.g., "colors" or "price". It matches SearchRequest.FacetSpec.FacetKey.key.
          type: string
        values:
          description: The facet values for this field.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue"
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue:
      description: A facet value which contains value names and their count.
      properties:
        count:
          description: Number of items that have this facet value.
          format: int64
          type: string
        interval:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaInterval"
          description: Interval value for a facet, such as 10, 20) for facet "price". It matches [SearchRequest.FacetSpec.FacetKey.intervals.
        value:
          description: Text value of a facet, such as "Black" for facet "colors".
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaSearchResponseGeoSearchDebugInfo:
      description: Debug information specifically related to forward geocoding issues arising from Geolocation Search.
      properties:
        errorMessage:
          description: The error produced.
          type: string
        originalAddressQuery:
          description: The address from which forward geocoding ingestion produced issues.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResult:
      description: Guided search result. The guided search helps user to refine the search results and narrow down to the real needs from a broaded search results.
      properties:
        followUpQuestions:
          description: Suggested follow-up questions.
          items:
            type: string
          type: array
        refinementAttributes:
          description: A list of ranked refinement attributes.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResultRefinementAttribute"
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResultRefinementAttribute:
      description: Useful attribute for search result refinements.
      properties:
        attributeKey:
          description: Attribute key used to refine the results e.g. 'movie_type'.
          type: string
        attributeValue:
          description: Attribute value used to refine the results e.g. 'drama'.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaSearchResponseQueryExpansionInfo:
      description: Information describing query expansion including whether expansion has occurred.
      properties:
        expandedQuery:
          description: Bool describing whether query expansion has occurred.
          type: boolean
        pinnedResultCount:
          description: Number of pinned results. This field will only be set when expansion happens and SearchRequest.QueryExpansionSpec.pin_unexpanded_results is set to true.
          format: int64
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult:
      description: Represents the search results.
      properties:
        document:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaDocument"
          description: The document data snippet in the search response. Only fields that are marked as retrievable are populated.
        id:
          description: Document.id of the searched Document.
          type: string
        modelScores:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaDoubleList"
          description: Google provided available scores.
          type: object
      type: object
    GoogleCloudDiscoveryengineV1betaSearchResponseSummary:
      description: Summary of the top N search result specified by the summary spec.
      properties:
        safetyAttributes:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseSummarySafetyAttributes"
          description: A collection of Safety Attribute categories and their associated confidence scores.
        summarySkippedReasons:
          description: Additional summary-skipped reasons. This provides the reason for ignored cases. If nothing is skipped, this field is not set.
          items:
            enum:
              - SUMMARY_SKIPPED_REASON_UNSPECIFIED
              - ADVERSARIAL_QUERY_IGNORED
              - NON_SUMMARY_SEEKING_QUERY_IGNORED
              - OUT_OF_DOMAIN_QUERY_IGNORED
              - POTENTIAL_POLICY_VIOLATION
              - LLM_ADDON_NOT_ENABLED
            type: string
          type: array
        summaryText:
          description: The summary content.
          type: string
        summaryWithMetadata:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseSummarySummaryWithMetadata"
          description: Summary with metadata information.
      type: object
    GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitation:
      description: Citation info for a segment.
      properties:
        endIndex:
          description: End of the attributed segment, exclusive.
          format: int64
          type: string
        sources:
          description: Citation sources for the attributed segment.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationSource"
          type: array
        startIndex:
          description: Index indicates the start of the segment, measured in bytes/unicode.
          format: int64
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationMetadata:
      description: Citation metadata.
      properties:
        citations:
          description: Citations for segments.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitation"
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationSource:
      description: Citation source.
      properties:
        referenceIndex:
          description: Document reference index from SummaryWithMetadata.references. It is 0-indexed and the value will be zero if the reference_index is not set explicitly.
          format: int64
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaSearchResponseSummaryReference:
      description: Document reference.
      properties:
        document:
          description: Required. Document.name of the document. Full resource name of the referenced document, in the format `projects/*/locations/*/collections/*/dataStores/*/branches/*/documents/*`.
          type: string
        title:
          description: Title of the document.
          type: string
        uri:
          description: Cloud Storage or HTTP uri for the document.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaSearchResponseSummarySafetyAttributes:
      description: Safety Attribute categories and their associated confidence scores.
      properties:
        categories:
          description: The display names of Safety Attribute categories associated with the generated content. Order matches the Scores.
          items:
            type: string
          type: array
        scores:
          description: The confidence scores of the each category, higher value means higher confidence. Order matches the Categories.
          items:
            format: float
            type: number
          type: array
      type: object
    GoogleCloudDiscoveryengineV1betaSearchResponseSummarySummaryWithMetadata:
      description: Summary with metadata information.
      properties:
        citationMetadata:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationMetadata"
          description: Citation metadata for given summary.
        references:
          description: Document References.
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchResponseSummaryReference"
          type: array
        summary:
          description: Summary text with no citation information.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaServingConfig:
      description: Configures metadata that is used to generate serving time results (e.g. search results or recommendation predictions). The ServingConfig is passed in the search and predict request and generates results.
      properties:
        boostControlIds:
          description: Boost controls to use in serving path. All triggered boost controls will be applied. Boost controls must be in the same data store as the serving config. Maximum of 20 boost controls.
          items:
            type: string
          type: array
        createTime:
          description: Output only. ServingConfig created timestamp.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: Required. The human readable serving config display name. Used in Discovery UI. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
          type: string
        dissociateControlIds:
          description: Condition do not associate specifications. If multiple do not associate conditions match, all matching do not associate controls in the list will execute. Order does not matter. Maximum number of specifications is 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH.
          items:
            type: string
          type: array
        diversityLevel:
          description: "How much diversity to use in recommendation model results e.g. `medium-diversity` or `high-diversity`. Currently supported values: * `no-diversity` * `low-diversity` * `medium-diversity` * `high-diversity` * `auto-diversity` If not specified, we choose default based on recommendation model type. Default value: `no-diversity`. Can only be set if SolutionType is SOLUTION_TYPE_RECOMMENDATION."
          type: string
        embeddingConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaEmbeddingConfig"
          description: Bring your own embedding config. The config is used for search semantic retrieval. The retrieval is based on the dot product of SearchRequest.EmbeddingSpec.EmbeddingVector.vector and the document embeddings that are provided by this EmbeddingConfig. If SearchRequest.EmbeddingSpec.EmbeddingVector.vector is provided, it overrides this ServingConfig.embedding_config.
        filterControlIds:
          description: Filter controls to use in serving path. All triggered filter controls will be applied. Filter controls must be in the same data store as the serving config. Maximum of 20 filter controls.
          items:
            type: string
          type: array
        genericConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaServingConfigGenericConfig"
          description: The GenericConfig of the serving configuration.
        ignoreControlIds:
          description: Condition ignore specifications. If multiple ignore conditions match, all matching ignore controls in the list will execute. Order does not matter. Maximum number of specifications is 100.
          items:
            type: string
          type: array
        mediaConfig:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig"
          description: The MediaConfig of the serving configuration.
        modelId:
          description: The id of the model to use at serving time. Currently only RecommendationModels are supported. Can be changed but only to a compatible model (e.g. others-you-may-like CTR to others-you-may-like CVR). Required when SolutionType is SOLUTION_TYPE_RECOMMENDATION.
          type: string
        name:
          description: Immutable. Fully qualified name `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/servingConfigs/{serving_config_id}`
          type: string
        onewaySynonymsControlIds:
          description: Condition oneway synonyms specifications. If multiple oneway synonyms conditions match, all matching oneway synonyms controls in the list will execute. Maximum number of specifications is 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH.
          items:
            type: string
          type: array
        rankingExpression:
          description: 'The ranking expression controls the customized ranking on retrieval documents. To leverage this, document embedding is required. The ranking expression setting in ServingConfig applies to all search requests served by the serving config. However, if SearchRequest.ranking_expression is specified, it overrides the ServingConfig ranking expression. The ranking expression is a single function or multiple functions that are joined by "+". * ranking_expression = function, { " + ", function }; Supported functions: * double * relevance_score * double * dotProduct(embedding_field_path) Function variables: relevance_score: pre-defined keywords, used for measure relevance between query and document. embedding_field_path: the document embedding field used with query embedding vector. dotProduct: embedding function between embedding_field_path and query embedding vector. Example ranking expression: If document has an embedding field doc_embedding, the ranking expression could be 0.5 * relevance_score + 0.3 * dotProduct(doc_embedding).'
          type: string
        redirectControlIds:
          description: IDs of the redirect controls. Only the first triggered redirect action is applied, even if multiple apply. Maximum number of specifications is 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH.
          items:
            type: string
          type: array
        replacementControlIds:
          description: Condition replacement specifications. Applied according to the order in the list. A previously replaced term can not be re-replaced. Maximum number of specifications is 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH.
          items:
            type: string
          type: array
        solutionType:
          description: Required. Immutable. Specifies the solution type that a serving config can be associated with.
          enum:
            - SOLUTION_TYPE_UNSPECIFIED
            - SOLUTION_TYPE_RECOMMENDATION
            - SOLUTION_TYPE_SEARCH
            - SOLUTION_TYPE_CHAT
          type: string
        synonymsControlIds:
          description: Condition synonyms specifications. If multiple synonyms conditions match, all matching synonyms controls in the list will execute. Maximum number of specifications is 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH.
          items:
            type: string
          type: array
        updateTime:
          description: Output only. ServingConfig updated timestamp.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaServingConfigGenericConfig:
      description: "Specifies the configurations needed for Generic Discovery.Currently we support: * `content_search_spec`: configuration for generic content search."
      properties:
        contentSearchSpec:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec"
          description: Specifies the expected behavior of content search. Only valid for content-search enabled data store.
      type: object
    GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig:
      description: "Specifies the configurations needed for Media Discovery. Currently we support: * `demote_content_watched`: Threshold for watched content demotion. Customers can specify if using watched content demotion or use viewed detail page. Using the content watched demotion, customers need to specify the watched minutes or percentage exceeds the threshold, the content will be demoted in the recommendation result. * `promote_fresh_content`: cutoff days for fresh content promotion. Customers can specify if using content freshness promotion. If the content was published within the cutoff days, the content will be promoted in the recommendation result. Can only be set if SolutionType is SOLUTION_TYPE_RECOMMENDATION."
      properties:
        contentFreshnessCutoffDays:
          description: Specifies the content freshness used for recommendation result. Contents will be demoted if contents were published for more than content freshness cutoff days.
          format: int32
          type: integer
        contentWatchedMinutesThreshold:
          deprecated: true
          description: Specifies the content watched minutes threshold for demotion.
          format: float
          type: number
        contentWatchedPercentageThreshold:
          description: Specifies the content watched percentage threshold for demotion. Threshold value must be between [0, 1.0] inclusive.
          format: float
          type: number
        contentWatchedSecondsThreshold:
          description: Specifies the content watched minutes threshold for demotion.
          format: float
          type: number
        demotionEventType:
          description: "Specifies the event type used for demoting recommendation result. Currently supported values: * `view-item`: Item viewed. * `media-play`: Start/resume watching a video, playing a song, etc. * `media-complete`: Finished or stopped midway through a video, song, etc. If unset, watch history demotion will not be applied. Content freshness demotion will still be applied."
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaSiteSearchEngine:
      description: SiteSearchEngine captures DataStore level site search persisting configurations. It is a singleton value per data store.
      properties:
        name:
          description: "The fully qualified resource name of the site search engine. Format: `projects/*/locations/*/dataStores/*/siteSearchEngine`"
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaSiteVerificationInfo:
      description: Verification information for target sites in advanced site search.
      properties:
        siteVerificationState:
          description: Site verification state indicating the ownership and validity.
          enum:
            - SITE_VERIFICATION_STATE_UNSPECIFIED
            - VERIFIED
            - UNVERIFIED
            - EXEMPTED
          type: string
        verifyTime:
          description: Latest site verification time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry:
      description: Suggestion deny list entry identifying the phrase to block from suggestions and the applied operation for the phrase.
      properties:
        blockPhrase:
          description: Required. Phrase to block from suggestions served. Can be maximum 125 characters.
          type: string
        matchOperator:
          description: Required. The match operator to apply for this phrase. Whether to block the exact phrase, or block any suggestions containing this phrase.
          enum:
            - MATCH_OPERATOR_UNSPECIFIED
            - EXACT_MATCH
            - CONTAINS
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaTargetSite:
      description: A target site for the SiteSearchEngine.
      properties:
        exactMatch:
          description: Input only. If set to false, a uri_pattern is generated to include all pages whose address contains the provided_uri_pattern. If set to true, an uri_pattern is generated to try to be an exact match of the provided_uri_pattern or just the specific page if the provided_uri_pattern is a specific one. provided_uri_pattern is always normalized to generate the URI pattern to be used by the search engine.
          type: boolean
        failureReason:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaTargetSiteFailureReason"
          description: Output only. Failure reason.
          readOnly: true
        generatedUriPattern:
          description: Output only. This is system-generated based on the provided_uri_pattern.
          readOnly: true
          type: string
        indexingStatus:
          description: Output only. Indexing status.
          enum:
            - INDEXING_STATUS_UNSPECIFIED
            - PENDING
            - FAILED
            - SUCCEEDED
            - DELETING
          readOnly: true
          type: string
        name:
          description: Output only. The fully qualified resource name of the target site. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}` The `target_site_id` is system-generated.
          readOnly: true
          type: string
        providedUriPattern:
          description: Required. Input only. The user provided URI pattern from which the `generated_uri_pattern` is generated.
          type: string
        siteVerificationInfo:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSiteVerificationInfo"
          description: Output only. Site ownership and validity verification status.
          readOnly: true
        type:
          description: The type of the target site, e.g., whether the site is to be included or excluded.
          enum:
            - TYPE_UNSPECIFIED
            - INCLUDE
            - EXCLUDE
          type: string
        updateTime:
          description: Output only. The target site's last updated time.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaTargetSiteFailureReason:
      description: Site search indexing failure reasons.
      properties:
        quotaFailure:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaTargetSiteFailureReasonQuotaFailure"
          description: Failed due to insufficient quota.
      type: object
    GoogleCloudDiscoveryengineV1betaTargetSiteFailureReasonQuotaFailure:
      description: Failed due to insufficient quota.
      properties:
        totalRequiredQuota:
          description: This number is an estimation on how much total quota this project needs to successfully complete indexing.
          format: int64
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaTextInput:
      description: Defines text input.
      properties:
        context:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaConversationContext"
          description: Conversation context of the input.
        input:
          description: Text input.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaTransactionInfo:
      description: A transaction represents the entire purchase transaction.
      properties:
        cost:
          description: "All the costs associated with the products. These can be manufacturing costs, shipping expenses not borne by the end user, or any other costs, such that: * Profit = value - tax - cost"
          format: float
          type: number
        currency:
          description: Required. Currency code. Use three-character ISO-4217 code.
          type: string
        discountValue:
          description: "The total discount(s) value applied to this transaction. This figure should be excluded from TransactionInfo.value For example, if a user paid TransactionInfo.value amount, then nominal (pre-discount) value of the transaction is the sum of TransactionInfo.value and TransactionInfo.discount_value This means that profit is calculated the same way, regardless of the discount value, and that TransactionInfo.discount_value can be larger than TransactionInfo.value: * Profit = value - tax - cost"
          format: float
          type: number
        tax:
          description: All the taxes associated with the transaction.
          format: float
          type: number
        transactionId:
          description: The transaction ID with a length limit of 128 characters.
          type: string
        value:
          description: Required. Total non-zero value associated with the transaction. This value may include shipping, tax, or other adjustments to the total value that you want to include.
          format: float
          type: number
      type: object
    GoogleCloudDiscoveryengineV1betaUpdateSchemaMetadata:
      description: Metadata for UpdateSchema LRO.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaUpdateTargetSiteMetadata:
      description: Metadata related to the progress of the SiteSearchEngineService.UpdateTargetSite operation. This will be returned by the google.longrunning.Operation.metadata field.
      properties:
        createTime:
          description: Operation create time.
          format: google-datetime
          type: string
        updateTime:
          description: Operation last update time. If the operation is done, this is also the finish time.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaUserEvent:
      description: UserEvent captures all metadata information Discovery Engine API needs to know about how end users interact with customers' website.
      properties:
        attributes:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaCustomAttribute"
          description: "Extra user event features to include in the recommendation model. These attributes must NOT contain data that needs to be parsed or processed further, e.g. JSON or other encodings. If you provide custom attributes for ingested user events, also include them in the user events that you associate with prediction requests. Custom attribute formatting must be consistent between imported events and events provided with prediction requests. This lets the Discovery Engine API use those custom attributes when training models and serving predictions, which helps improve recommendation quality. This field needs to pass all below criteria, otherwise an `INVALID_ARGUMENT` error is returned: * The key must be a UTF-8 encoded string with a length limit of 5,000 characters. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed. For product recommendations, an example of extra user information is `traffic_channel`, which is how a user arrives at the site. Users can arrive at the site by coming to the site directly, coming through Google search, or in other ways."
          type: object
        attributionToken:
          description: "Token to attribute an API response to user action(s) to trigger the event. Highly recommended for user events that are the result of RecommendationService.Recommend. This field enables accurate attribution of recommendation model performance. The value must be one of: * RecommendResponse.attribution_token for events that are the result of RecommendationService.Recommend. * SearchResponse.attribution_token for events that are the result of SearchService.Search. This token enables us to accurately attribute page view or conversion completion back to the event and the particular predict response containing this clicked/purchased product. If user clicks on product K in the recommendation results, pass RecommendResponse.attribution_token as a URL parameter to product K's page. When recording events on product K's page, log the RecommendResponse.attribution_token to this field."
          type: string
        completionInfo:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaCompletionInfo"
          description: CompletionService.CompleteQuery details related to the event. This field should be set for `search` event when autocomplete function is enabled and the user clicks a suggestion for search.
        directUserRequest:
          description: Should set to true if the request is made directly from the end user, in which case the UserEvent.user_info.user_agent can be populated from the HTTP request. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events). This should not be set when using the JavaScript tag in UserEventService.CollectUserEvent.
          type: boolean
        documents:
          description: "List of Documents associated with this user event. This field is optional except for the following event types: * `view-item` * `add-to-cart` * `purchase` * `media-play` * `media-complete` In a `search` event, this field represents the documents returned to the end user on the current page (the end user may have not finished browsing the whole page yet). When a new page is returned to the end user, after pagination/filtering/ordering even for the same query, a new `search` event with different UserEvent.documents is desired."
          items:
            $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaDocumentInfo"
          type: array
        eventTime:
          description: Only required for UserEventService.ImportUserEvents method. Timestamp of when the user event happened.
          format: google-datetime
          type: string
        eventType:
          description: "Required. User event type. Allowed values are: Generic values: * `search`: Search for Documents. * `view-item`: Detailed page view of a Document. * `view-item-list`: View of a panel or ordered list of Documents. * `view-home-page`: View of the home page. * `view-category-page`: View of a category page, e.g. Home > Men > Jeans Retail-related values: * `add-to-cart`: Add an item(s) to cart, e.g. in Retail online shopping * `purchase`: Purchase an item(s) Media-related values: * `media-play`: Start/resume watching a video, playing a song, etc. * `media-complete`: Finished or stopped midway through a video, song, etc."
          type: string
        filter:
          description: The filter syntax consists of an expression language for constructing a predicate from one or more fields of the documents being filtered. One example is for `search` events, the associated SearchRequest may contain a filter expression in SearchRequest.filter conforming to https://google.aip.dev/160#filtering. Similarly, for `view-item-list` events that are generated from a RecommendRequest, this field may be populated directly from RecommendRequest.filter conforming to https://google.aip.dev/160#filtering. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
          type: string
        mediaInfo:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaMediaInfo"
          description: Media-specific info.
        pageInfo:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaPageInfo"
          description: Page metadata such as categories and other critical information for certain event types such as `view-category-page`.
        panel:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaPanelInfo"
          description: Panel metadata associated with this user event.
        promotionIds:
          description: The promotion IDs if this is an event associated with promotions. Currently, this field is restricted to at most one ID.
          items:
            type: string
          type: array
        searchInfo:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaSearchInfo"
          description: SearchService.Search details related to the event. This field should be set for `search` event.
        sessionId:
          description: "A unique identifier for tracking a visitor session with a length limit of 128 bytes. A session is an aggregation of an end user behavior in a time span. A general guideline to populate the session_id: 1. If user has no activity for 30 min, a new session_id should be assigned. 2. The session_id should be unique across users, suggest use uuid or add UserEvent.user_pseudo_id as prefix."
          type: string
        tagIds:
          description: A list of identifiers for the independent experiment groups this user event belongs to. This is used to distinguish between user events associated with different experiment setups on the customer end.
          items:
            type: string
          type: array
        transactionInfo:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaTransactionInfo"
          description: The transaction metadata (if any) associated with this user event.
        userInfo:
          $ref: "#/components/schemas/GoogleCloudDiscoveryengineV1betaUserInfo"
          description: Information about the end user.
        userPseudoId:
          description: Required. A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Do not set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. The field should not contain PII or user-data. We recommend to use Google Analytics [Client ID](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#clientId) for this field.
          type: string
      type: object
    GoogleCloudDiscoveryengineV1betaUserInfo:
      description: Information of an end user.
      properties:
        userAgent:
          description: User agent as included in the HTTP header. The field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. This should not be set when using the client side event reporting with GTM or JavaScript tag in UserEventService.CollectUserEvent or if UserEvent.direct_user_request is set.
          type: string
        userId:
          description: Highly recommended for logged-in users. Unique identifier for logged-in user, such as a user name. Don't set for anonymous users. Always use a hashed value for this ID. Don't set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
          type: string
      type: object
    GoogleLongrunningListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleLongrunningOperation"
          type: array
      type: object
    GoogleLongrunningOperation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    GoogleProtobufEmpty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    GoogleRpcStatus:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    GoogleTypeDate:
      description: "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"
      properties:
        day:
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
          format: int32
          type: integer
        month:
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
          format: int32
          type: integer
        year:
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
          format: int32
          type: integer
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
