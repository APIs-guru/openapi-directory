# coding: utf-8

"""
    Assured Workloads API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_assuredworkloads_v1beta1_workload_il4_settings import GoogleCloudAssuredworkloadsV1beta1WorkloadIL4Settings

class TestGoogleCloudAssuredworkloadsV1beta1WorkloadIL4Settings(unittest.TestCase):
    """GoogleCloudAssuredworkloadsV1beta1WorkloadIL4Settings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudAssuredworkloadsV1beta1WorkloadIL4Settings:
        """Test GoogleCloudAssuredworkloadsV1beta1WorkloadIL4Settings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudAssuredworkloadsV1beta1WorkloadIL4Settings`
        """
        model = GoogleCloudAssuredworkloadsV1beta1WorkloadIL4Settings()
        if include_optional:
            return GoogleCloudAssuredworkloadsV1beta1WorkloadIL4Settings(
                kms_settings = openapi_client.models.google_cloud_assuredworkloads_v1beta1_workload_kms_settings.GoogleCloudAssuredworkloadsV1beta1WorkloadKMSSettings(
                    next_rotation_time = '', 
                    rotation_period = '', )
            )
        else:
            return GoogleCloudAssuredworkloadsV1beta1WorkloadIL4Settings(
        )
        """

    def testGoogleCloudAssuredworkloadsV1beta1WorkloadIL4Settings(self):
        """Test GoogleCloudAssuredworkloadsV1beta1WorkloadIL4Settings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
