# coding: utf-8

"""
    Artifact Registry API

    Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.upload_googet_artifact_media_response import UploadGoogetArtifactMediaResponse

class TestUploadGoogetArtifactMediaResponse(unittest.TestCase):
    """UploadGoogetArtifactMediaResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UploadGoogetArtifactMediaResponse:
        """Test UploadGoogetArtifactMediaResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UploadGoogetArtifactMediaResponse`
        """
        model = UploadGoogetArtifactMediaResponse()
        if include_optional:
            return UploadGoogetArtifactMediaResponse(
                operation = openapi_client.models.operation.Operation(
                    done = True, 
                    error = openapi_client.models.status.Status(
                        code = 56, 
                        details = [
                            {
                                'key' : null
                                }
                            ], 
                        message = '', ), 
                    metadata = {
                        'key' : null
                        }, 
                    name = '', 
                    response = {
                        'key' : null
                        }, )
            )
        else:
            return UploadGoogetArtifactMediaResponse(
        )
        """

    def testUploadGoogetArtifactMediaResponse(self):
        """Test UploadGoogetArtifactMediaResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
