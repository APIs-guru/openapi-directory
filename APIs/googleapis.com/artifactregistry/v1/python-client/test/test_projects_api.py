# coding: utf-8

"""
    Artifact Registry API

    Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.projects_api import ProjectsApi


class TestProjectsApi(unittest.TestCase):
    """ProjectsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ProjectsApi()

    def tearDown(self) -> None:
        pass

    def test_artifactregistry_projects_locations_list(self) -> None:
        """Test case for artifactregistry_projects_locations_list

        """
        pass

    def test_artifactregistry_projects_locations_repositories_apt_artifacts_import(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_apt_artifacts_import

        """
        pass

    def test_artifactregistry_projects_locations_repositories_apt_artifacts_upload(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_apt_artifacts_upload

        """
        pass

    def test_artifactregistry_projects_locations_repositories_create(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_create

        """
        pass

    def test_artifactregistry_projects_locations_repositories_docker_images_list(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_docker_images_list

        """
        pass

    def test_artifactregistry_projects_locations_repositories_files_list(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_files_list

        """
        pass

    def test_artifactregistry_projects_locations_repositories_get_iam_policy(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_get_iam_policy

        """
        pass

    def test_artifactregistry_projects_locations_repositories_go_modules_upload(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_go_modules_upload

        """
        pass

    def test_artifactregistry_projects_locations_repositories_googet_artifacts_import(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_googet_artifacts_import

        """
        pass

    def test_artifactregistry_projects_locations_repositories_googet_artifacts_upload(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_googet_artifacts_upload

        """
        pass

    def test_artifactregistry_projects_locations_repositories_kfp_artifacts_upload(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_kfp_artifacts_upload

        """
        pass

    def test_artifactregistry_projects_locations_repositories_list(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_list

        """
        pass

    def test_artifactregistry_projects_locations_repositories_maven_artifacts_list(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_maven_artifacts_list

        """
        pass

    def test_artifactregistry_projects_locations_repositories_npm_packages_list(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_npm_packages_list

        """
        pass

    def test_artifactregistry_projects_locations_repositories_packages_list(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_packages_list

        """
        pass

    def test_artifactregistry_projects_locations_repositories_packages_tags_create(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_packages_tags_create

        """
        pass

    def test_artifactregistry_projects_locations_repositories_packages_tags_list(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_packages_tags_list

        """
        pass

    def test_artifactregistry_projects_locations_repositories_packages_tags_patch(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_packages_tags_patch

        """
        pass

    def test_artifactregistry_projects_locations_repositories_packages_versions_batch_delete(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_packages_versions_batch_delete

        """
        pass

    def test_artifactregistry_projects_locations_repositories_packages_versions_delete(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_packages_versions_delete

        """
        pass

    def test_artifactregistry_projects_locations_repositories_packages_versions_list(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_packages_versions_list

        """
        pass

    def test_artifactregistry_projects_locations_repositories_python_packages_get(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_python_packages_get

        """
        pass

    def test_artifactregistry_projects_locations_repositories_python_packages_list(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_python_packages_list

        """
        pass

    def test_artifactregistry_projects_locations_repositories_set_iam_policy(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_set_iam_policy

        """
        pass

    def test_artifactregistry_projects_locations_repositories_test_iam_permissions(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_test_iam_permissions

        """
        pass

    def test_artifactregistry_projects_locations_repositories_yum_artifacts_import(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_yum_artifacts_import

        """
        pass

    def test_artifactregistry_projects_locations_repositories_yum_artifacts_upload(self) -> None:
        """Test case for artifactregistry_projects_locations_repositories_yum_artifacts_upload

        """
        pass


if __name__ == '__main__':
    unittest.main()
