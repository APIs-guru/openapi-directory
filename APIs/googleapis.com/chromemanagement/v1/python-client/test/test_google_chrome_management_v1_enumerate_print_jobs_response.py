# coding: utf-8

"""
    Chrome Management API

    The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_chrome_management_v1_enumerate_print_jobs_response import GoogleChromeManagementV1EnumeratePrintJobsResponse

class TestGoogleChromeManagementV1EnumeratePrintJobsResponse(unittest.TestCase):
    """GoogleChromeManagementV1EnumeratePrintJobsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleChromeManagementV1EnumeratePrintJobsResponse:
        """Test GoogleChromeManagementV1EnumeratePrintJobsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleChromeManagementV1EnumeratePrintJobsResponse`
        """
        model = GoogleChromeManagementV1EnumeratePrintJobsResponse()
        if include_optional:
            return GoogleChromeManagementV1EnumeratePrintJobsResponse(
                next_page_token = '',
                print_jobs = [
                    openapi_client.models.google_chrome_management_v1_print_job.GoogleChromeManagementV1PrintJob(
                        color_mode = 'COLOR_MODE_UNSPECIFIED', 
                        complete_time = '', 
                        copy_count = 56, 
                        create_time = '', 
                        document_page_count = 56, 
                        duplex_mode = 'DUPLEX_MODE_UNSPECIFIED', 
                        id = '', 
                        printer = '', 
                        printer_id = '', 
                        state = 'STATE_UNSPECIFIED', 
                        title = '', 
                        user_email = '', 
                        user_id = '', )
                    ],
                total_size = ''
            )
        else:
            return GoogleChromeManagementV1EnumeratePrintJobsResponse(
        )
        """

    def testGoogleChromeManagementV1EnumeratePrintJobsResponse(self):
        """Test GoogleChromeManagementV1EnumeratePrintJobsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
