# coding: utf-8

"""
    Chrome Management API

    The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_chrome_management_v1_telemetry_notification_config import GoogleChromeManagementV1TelemetryNotificationConfig

class TestGoogleChromeManagementV1TelemetryNotificationConfig(unittest.TestCase):
    """GoogleChromeManagementV1TelemetryNotificationConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleChromeManagementV1TelemetryNotificationConfig:
        """Test GoogleChromeManagementV1TelemetryNotificationConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleChromeManagementV1TelemetryNotificationConfig`
        """
        model = GoogleChromeManagementV1TelemetryNotificationConfig()
        if include_optional:
            return GoogleChromeManagementV1TelemetryNotificationConfig(
                customer = '',
                filter = openapi_client.models.google_chrome_management_v1_telemetry_notification_filter.GoogleChromeManagementV1TelemetryNotificationFilter(
                    device_id = '', 
                    device_org_unit_id = '', 
                    telemetry_event_notification_filter = openapi_client.models.google_chrome_management_v1_telemetry_event_notification_filter.GoogleChromeManagementV1TelemetryEventNotificationFilter(
                        event_types = [
                            'EVENT_TYPE_UNSPECIFIED'
                            ], ), 
                    user_email = '', 
                    user_org_unit_id = '', ),
                google_cloud_pubsub_topic = '',
                name = ''
            )
        else:
            return GoogleChromeManagementV1TelemetryNotificationConfig(
        )
        """

    def testGoogleChromeManagementV1TelemetryNotificationConfig(self):
        """Test GoogleChromeManagementV1TelemetryNotificationConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
