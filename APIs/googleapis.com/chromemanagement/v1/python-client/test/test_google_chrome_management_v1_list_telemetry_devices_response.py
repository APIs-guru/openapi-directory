# coding: utf-8

"""
    Chrome Management API

    The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_chrome_management_v1_list_telemetry_devices_response import GoogleChromeManagementV1ListTelemetryDevicesResponse

class TestGoogleChromeManagementV1ListTelemetryDevicesResponse(unittest.TestCase):
    """GoogleChromeManagementV1ListTelemetryDevicesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleChromeManagementV1ListTelemetryDevicesResponse:
        """Test GoogleChromeManagementV1ListTelemetryDevicesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleChromeManagementV1ListTelemetryDevicesResponse`
        """
        model = GoogleChromeManagementV1ListTelemetryDevicesResponse()
        if include_optional:
            return GoogleChromeManagementV1ListTelemetryDevicesResponse(
                devices = [
                    openapi_client.models.google_chrome_management_v1_telemetry_device.GoogleChromeManagementV1TelemetryDevice(
                        audio_status_report = [
                            openapi_client.models.google_chrome_management_v1_audio_status_report.GoogleChromeManagementV1AudioStatusReport(
                                input_device = '', 
                                input_gain = 56, 
                                input_mute = True, 
                                output_device = '', 
                                output_mute = True, 
                                output_volume = 56, 
                                report_time = '', )
                            ], 
                        battery_info = [
                            openapi_client.models.google_chrome_management_v1_battery_info.GoogleChromeManagementV1BatteryInfo(
                                design_capacity = '', 
                                design_min_voltage = 56, 
                                manufacture_date = openapi_client.models.google_type_date.GoogleTypeDate(
                                    day = 56, 
                                    month = 56, 
                                    year = 56, ), 
                                manufacturer = '', 
                                serial_number = '', 
                                technology = '', )
                            ], 
                        battery_status_report = [
                            openapi_client.models.google_chrome_management_v1_battery_status_report.GoogleChromeManagementV1BatteryStatusReport(
                                battery_health = 'BATTERY_HEALTH_UNSPECIFIED', 
                                cycle_count = 56, 
                                full_charge_capacity = '', 
                                report_time = '', 
                                sample = [
                                    openapi_client.models.google_chrome_management_v1_battery_sample_report.GoogleChromeManagementV1BatterySampleReport(
                                        charge_rate = 56, 
                                        current = '', 
                                        discharge_rate = 56, 
                                        remaining_capacity = '', 
                                        report_time = '', 
                                        status = '', 
                                        temperature = 56, 
                                        voltage = '', )
                                    ], 
                                serial_number = '', )
                            ], 
                        boot_performance_report = [
                            openapi_client.models.google_chrome_management_v1_boot_performance_report.GoogleChromeManagementV1BootPerformanceReport(
                                boot_up_duration = '', 
                                boot_up_time = '', 
                                report_time = '', 
                                shutdown_duration = '', 
                                shutdown_reason = 'SHUTDOWN_REASON_UNSPECIFIED', 
                                shutdown_time = '', )
                            ], 
                        cpu_info = [
                            openapi_client.models.google_chrome_management_v1_cpu_info.GoogleChromeManagementV1CpuInfo(
                                architecture = 'ARCHITECTURE_UNSPECIFIED', 
                                keylocker_configured = True, 
                                keylocker_supported = True, 
                                max_clock_speed = 56, 
                                model = '', )
                            ], 
                        cpu_status_report = [
                            openapi_client.models.google_chrome_management_v1_cpu_status_report.GoogleChromeManagementV1CpuStatusReport(
                                cpu_temperature_info = [
                                    openapi_client.models.google_chrome_management_v1_cpu_temperature_info.GoogleChromeManagementV1CpuTemperatureInfo(
                                        label = '', 
                                        temperature_celsius = 56, )
                                    ], 
                                cpu_utilization_pct = 56, 
                                report_time = '', 
                                sample_frequency = '', )
                            ], 
                        customer = '', 
                        device_id = '', 
                        graphics_info = openapi_client.models.google_chrome_management_v1_graphics_info.GoogleChromeManagementV1GraphicsInfo(
                            adapter_info = openapi_client.models.google_chrome_management_v1_graphics_adapter_info.GoogleChromeManagementV1GraphicsAdapterInfo(
                                adapter = '', 
                                device_id = '', 
                                driver_version = '', ), 
                            display_devices = [
                                openapi_client.models.google_chrome_management_v1_display_device.GoogleChromeManagementV1DisplayDevice(
                                    display_height_mm = 56, 
                                    display_name = '', 
                                    display_width_mm = 56, 
                                    internal = True, 
                                    manufacture_year = 56, 
                                    manufacturer_id = '', 
                                    model_id = 56, )
                                ], 
                            eprivacy_supported = True, 
                            touch_screen_info = openapi_client.models.google_chrome_management_v1_touch_screen_info.GoogleChromeManagementV1TouchScreenInfo(
                                devices = [
                                    openapi_client.models.google_chrome_management_v1_touch_screen_device.GoogleChromeManagementV1TouchScreenDevice(
                                        display_name = '', 
                                        stylus_capable = True, 
                                        touch_point_count = 56, )
                                    ], 
                                touchpad_library = '', ), ), 
                        graphics_status_report = [
                            openapi_client.models.google_chrome_management_v1_graphics_status_report.GoogleChromeManagementV1GraphicsStatusReport(
                                displays = [
                                    openapi_client.models.google_chrome_management_v1_display_info.GoogleChromeManagementV1DisplayInfo(
                                        device_id = '', 
                                        display_name = '', 
                                        is_internal = True, 
                                        refresh_rate = 56, 
                                        resolution_height = 56, 
                                        resolution_width = 56, )
                                    ], 
                                report_time = '', )
                            ], 
                        heartbeat_status_report = [
                            openapi_client.models.google_chrome_management_v1_heartbeat_status_report.GoogleChromeManagementV1HeartbeatStatusReport(
                                report_time = '', 
                                state = 'STATE_UNSPECIFIED', )
                            ], 
                        kiosk_app_status_report = [
                            openapi_client.models.google_chrome_management_v1_kiosk_app_status_report.GoogleChromeManagementV1KioskAppStatusReport(
                                app_id = '', 
                                app_version = '', 
                                report_time = '', )
                            ], 
                        memory_info = openapi_client.models.google_chrome_management_v1_memory_info.GoogleChromeManagementV1MemoryInfo(
                            available_ram_bytes = '', 
                            total_memory_encryption = openapi_client.models.google_chrome_management_v1_total_memory_encryption_info.GoogleChromeManagementV1TotalMemoryEncryptionInfo(
                                encryption_algorithm = 'MEMORY_ENCRYPTION_ALGORITHM_UNSPECIFIED', 
                                encryption_state = 'MEMORY_ENCRYPTION_STATE_UNSPECIFIED', 
                                key_length = '', 
                                max_keys = '', ), 
                            total_ram_bytes = '', ), 
                        memory_status_report = [
                            openapi_client.models.google_chrome_management_v1_memory_status_report.GoogleChromeManagementV1MemoryStatusReport(
                                page_faults = 56, 
                                report_time = '', 
                                sample_frequency = '', 
                                system_ram_free_bytes = '', )
                            ], 
                        name = '', 
                        network_bandwidth_report = [
                            openapi_client.models.google_chrome_management_v1_network_bandwidth_report.GoogleChromeManagementV1NetworkBandwidthReport(
                                download_speed_kbps = '', 
                                report_time = '', )
                            ], 
                        network_diagnostics_report = [
                            openapi_client.models.google_chrome_management_v1_network_diagnostics_report.GoogleChromeManagementV1NetworkDiagnosticsReport(
                                https_latency_data = openapi_client.models.google_chrome_management_v1_https_latency_routine_data.GoogleChromeManagementV1HttpsLatencyRoutineData(
                                    latency = '', 
                                    problem = 'HTTPS_LATENCY_PROBLEM_UNSPECIFIED', ), 
                                report_time = '', )
                            ], 
                        network_info = openapi_client.models.google_chrome_management_v1_network_info.GoogleChromeManagementV1NetworkInfo(
                            network_devices = [
                                openapi_client.models.google_chrome_management_v1_network_device.GoogleChromeManagementV1NetworkDevice(
                                    iccid = '', 
                                    imei = '', 
                                    mac_address = '', 
                                    mdn = '', 
                                    meid = '', 
                                    type = 'NETWORK_DEVICE_TYPE_UNSPECIFIED', )
                                ], ), 
                        network_status_report = [
                            openapi_client.models.google_chrome_management_v1_network_status_report.GoogleChromeManagementV1NetworkStatusReport(
                                connection_state = 'NETWORK_CONNECTION_STATE_UNSPECIFIED', 
                                connection_type = 'NETWORK_TYPE_UNSPECIFIED', 
                                encryption_on = True, 
                                gateway_ip_address = '', 
                                guid = '', 
                                lan_ip_address = '', 
                                receiving_bit_rate_mbps = '', 
                                report_time = '', 
                                sample_frequency = '', 
                                signal_strength_dbm = 56, 
                                transmission_bit_rate_mbps = '', 
                                transmission_power_dbm = 56, 
                                wifi_link_quality = '', 
                                wifi_power_management_enabled = True, )
                            ], 
                        org_unit_id = '', 
                        os_update_status = [
                            openapi_client.models.google_chrome_management_v1_os_update_status.GoogleChromeManagementV1OsUpdateStatus(
                                last_reboot_time = '', 
                                last_update_check_time = '', 
                                last_update_time = '', 
                                new_platform_version = '', 
                                new_requested_platform_version = '', 
                                update_state = 'UPDATE_STATE_UNSPECIFIED', )
                            ], 
                        peripherals_report = [
                            openapi_client.models.google_chrome_management_v1_peripherals_report.GoogleChromeManagementV1PeripheralsReport(
                                report_time = '', 
                                usb_peripheral_report = [
                                    openapi_client.models.google_chrome_management_v1_usb_peripheral_report.GoogleChromeManagementV1UsbPeripheralReport(
                                        categories = [
                                            ''
                                            ], 
                                        class_id = 56, 
                                        firmware_version = '', 
                                        name = '', 
                                        pid = 56, 
                                        subclass_id = 56, 
                                        vendor = '', 
                                        vid = 56, )
                                    ], )
                            ], 
                        runtime_counters_report = [
                            openapi_client.models.google_chrome_management_v1_runtime_counters_report.GoogleChromeManagementV1RuntimeCountersReport(
                                enter_hibernation_count = '', 
                                enter_poweroff_count = '', 
                                enter_sleep_count = '', 
                                report_time = '', 
                                uptime_runtime_duration = '', )
                            ], 
                        serial_number = '', 
                        storage_info = openapi_client.models.google_chrome_management_v1_storage_info.GoogleChromeManagementV1StorageInfo(
                            available_disk_bytes = '', 
                            total_disk_bytes = '', 
                            volume = [
                                openapi_client.models.google_chrome_management_v1_storage_info_disk_volume.GoogleChromeManagementV1StorageInfoDiskVolume(
                                    storage_free_bytes = '', 
                                    storage_total_bytes = '', 
                                    volume_id = '', )
                                ], ), 
                        storage_status_report = [
                            openapi_client.models.google_chrome_management_v1_storage_status_report.GoogleChromeManagementV1StorageStatusReport(
                                disk = [
                                    openapi_client.models.google_chrome_management_v1_disk_info.GoogleChromeManagementV1DiskInfo(
                                        bytes_read_this_session = '', 
                                        bytes_written_this_session = '', 
                                        discard_time_this_session = '', 
                                        health = '', 
                                        io_time_this_session = '', 
                                        manufacturer = '', 
                                        model = '', 
                                        read_time_this_session = '', 
                                        serial_number = '', 
                                        size_bytes = '', 
                                        type = '', 
                                        volume_ids = [
                                            ''
                                            ], 
                                        write_time_this_session = '', )
                                    ], 
                                report_time = '', )
                            ], 
                        thunderbolt_info = [
                            openapi_client.models.google_chrome_management_v1_thunderbolt_info.GoogleChromeManagementV1ThunderboltInfo(
                                security_level = 'THUNDERBOLT_SECURITY_LEVEL_UNSPECIFIED', )
                            ], )
                    ],
                next_page_token = ''
            )
        else:
            return GoogleChromeManagementV1ListTelemetryDevicesResponse(
        )
        """

    def testGoogleChromeManagementV1ListTelemetryDevicesResponse(self):
        """Test GoogleChromeManagementV1ListTelemetryDevicesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
