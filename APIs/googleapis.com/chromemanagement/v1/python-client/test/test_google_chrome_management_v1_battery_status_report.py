# coding: utf-8

"""
    Chrome Management API

    The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_chrome_management_v1_battery_status_report import GoogleChromeManagementV1BatteryStatusReport

class TestGoogleChromeManagementV1BatteryStatusReport(unittest.TestCase):
    """GoogleChromeManagementV1BatteryStatusReport unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleChromeManagementV1BatteryStatusReport:
        """Test GoogleChromeManagementV1BatteryStatusReport
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleChromeManagementV1BatteryStatusReport`
        """
        model = GoogleChromeManagementV1BatteryStatusReport()
        if include_optional:
            return GoogleChromeManagementV1BatteryStatusReport(
                battery_health = 'BATTERY_HEALTH_UNSPECIFIED',
                cycle_count = 56,
                full_charge_capacity = '',
                report_time = '',
                sample = [
                    openapi_client.models.google_chrome_management_v1_battery_sample_report.GoogleChromeManagementV1BatterySampleReport(
                        charge_rate = 56, 
                        current = '', 
                        discharge_rate = 56, 
                        remaining_capacity = '', 
                        report_time = '', 
                        status = '', 
                        temperature = 56, 
                        voltage = '', )
                    ],
                serial_number = ''
            )
        else:
            return GoogleChromeManagementV1BatteryStatusReport(
        )
        """

    def testGoogleChromeManagementV1BatteryStatusReport(self):
        """Test GoogleChromeManagementV1BatteryStatusReport"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
