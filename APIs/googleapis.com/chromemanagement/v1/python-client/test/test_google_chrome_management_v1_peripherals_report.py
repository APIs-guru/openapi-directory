# coding: utf-8

"""
    Chrome Management API

    The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_chrome_management_v1_peripherals_report import GoogleChromeManagementV1PeripheralsReport

class TestGoogleChromeManagementV1PeripheralsReport(unittest.TestCase):
    """GoogleChromeManagementV1PeripheralsReport unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleChromeManagementV1PeripheralsReport:
        """Test GoogleChromeManagementV1PeripheralsReport
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleChromeManagementV1PeripheralsReport`
        """
        model = GoogleChromeManagementV1PeripheralsReport()
        if include_optional:
            return GoogleChromeManagementV1PeripheralsReport(
                report_time = '',
                usb_peripheral_report = [
                    openapi_client.models.google_chrome_management_v1_usb_peripheral_report.GoogleChromeManagementV1UsbPeripheralReport(
                        categories = [
                            ''
                            ], 
                        class_id = 56, 
                        firmware_version = '', 
                        name = '', 
                        pid = 56, 
                        subclass_id = 56, 
                        vendor = '', 
                        vid = 56, )
                    ]
            )
        else:
            return GoogleChromeManagementV1PeripheralsReport(
        )
        """

    def testGoogleChromeManagementV1PeripheralsReport(self):
        """Test GoogleChromeManagementV1PeripheralsReport"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
