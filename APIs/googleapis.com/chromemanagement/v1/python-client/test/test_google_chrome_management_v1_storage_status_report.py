# coding: utf-8

"""
    Chrome Management API

    The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_chrome_management_v1_storage_status_report import GoogleChromeManagementV1StorageStatusReport

class TestGoogleChromeManagementV1StorageStatusReport(unittest.TestCase):
    """GoogleChromeManagementV1StorageStatusReport unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleChromeManagementV1StorageStatusReport:
        """Test GoogleChromeManagementV1StorageStatusReport
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleChromeManagementV1StorageStatusReport`
        """
        model = GoogleChromeManagementV1StorageStatusReport()
        if include_optional:
            return GoogleChromeManagementV1StorageStatusReport(
                disk = [
                    openapi_client.models.google_chrome_management_v1_disk_info.GoogleChromeManagementV1DiskInfo(
                        bytes_read_this_session = '', 
                        bytes_written_this_session = '', 
                        discard_time_this_session = '', 
                        health = '', 
                        io_time_this_session = '', 
                        manufacturer = '', 
                        model = '', 
                        read_time_this_session = '', 
                        serial_number = '', 
                        size_bytes = '', 
                        type = '', 
                        volume_ids = [
                            ''
                            ], 
                        write_time_this_session = '', )
                    ],
                report_time = ''
            )
        else:
            return GoogleChromeManagementV1StorageStatusReport(
        )
        """

    def testGoogleChromeManagementV1StorageStatusReport(self):
        """Test GoogleChromeManagementV1StorageStatusReport"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
