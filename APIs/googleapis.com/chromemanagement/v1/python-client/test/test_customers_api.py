# coding: utf-8

"""
    Chrome Management API

    The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.customers_api import CustomersApi


class TestCustomersApi(unittest.TestCase):
    """CustomersApi unit test stubs"""

    def setUp(self) -> None:
        self.api = CustomersApi()

    def tearDown(self) -> None:
        pass

    def test_chromemanagement_customers_apps_count_chrome_app_requests(self) -> None:
        """Test case for chromemanagement_customers_apps_count_chrome_app_requests

        """
        pass

    def test_chromemanagement_customers_reports_count_chrome_browsers_needing_attention(self) -> None:
        """Test case for chromemanagement_customers_reports_count_chrome_browsers_needing_attention

        """
        pass

    def test_chromemanagement_customers_reports_count_chrome_devices_reaching_auto_expiration_date(self) -> None:
        """Test case for chromemanagement_customers_reports_count_chrome_devices_reaching_auto_expiration_date

        """
        pass

    def test_chromemanagement_customers_reports_count_chrome_devices_that_need_attention(self) -> None:
        """Test case for chromemanagement_customers_reports_count_chrome_devices_that_need_attention

        """
        pass

    def test_chromemanagement_customers_reports_count_chrome_hardware_fleet_devices(self) -> None:
        """Test case for chromemanagement_customers_reports_count_chrome_hardware_fleet_devices

        """
        pass

    def test_chromemanagement_customers_reports_count_chrome_versions(self) -> None:
        """Test case for chromemanagement_customers_reports_count_chrome_versions

        """
        pass

    def test_chromemanagement_customers_reports_count_installed_apps(self) -> None:
        """Test case for chromemanagement_customers_reports_count_installed_apps

        """
        pass

    def test_chromemanagement_customers_reports_count_print_jobs_by_printer(self) -> None:
        """Test case for chromemanagement_customers_reports_count_print_jobs_by_printer

        """
        pass

    def test_chromemanagement_customers_reports_count_print_jobs_by_user(self) -> None:
        """Test case for chromemanagement_customers_reports_count_print_jobs_by_user

        """
        pass

    def test_chromemanagement_customers_reports_enumerate_print_jobs(self) -> None:
        """Test case for chromemanagement_customers_reports_enumerate_print_jobs

        """
        pass

    def test_chromemanagement_customers_reports_find_installed_app_devices(self) -> None:
        """Test case for chromemanagement_customers_reports_find_installed_app_devices

        """
        pass

    def test_chromemanagement_customers_telemetry_devices_list(self) -> None:
        """Test case for chromemanagement_customers_telemetry_devices_list

        """
        pass

    def test_chromemanagement_customers_telemetry_events_list(self) -> None:
        """Test case for chromemanagement_customers_telemetry_events_list

        """
        pass

    def test_chromemanagement_customers_telemetry_notification_configs_create(self) -> None:
        """Test case for chromemanagement_customers_telemetry_notification_configs_create

        """
        pass

    def test_chromemanagement_customers_telemetry_notification_configs_delete(self) -> None:
        """Test case for chromemanagement_customers_telemetry_notification_configs_delete

        """
        pass

    def test_chromemanagement_customers_telemetry_notification_configs_list(self) -> None:
        """Test case for chromemanagement_customers_telemetry_notification_configs_list

        """
        pass

    def test_chromemanagement_customers_telemetry_users_get(self) -> None:
        """Test case for chromemanagement_customers_telemetry_users_get

        """
        pass

    def test_chromemanagement_customers_telemetry_users_list(self) -> None:
        """Test case for chromemanagement_customers_telemetry_users_list

        """
        pass


if __name__ == '__main__':
    unittest.main()
