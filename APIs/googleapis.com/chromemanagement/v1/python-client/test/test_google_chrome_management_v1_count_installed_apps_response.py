# coding: utf-8

"""
    Chrome Management API

    The Chrome Management API is a suite of services that allows Chrome administrators to view, manage and gain insights on their Chrome OS and Chrome Browser devices.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_chrome_management_v1_count_installed_apps_response import GoogleChromeManagementV1CountInstalledAppsResponse

class TestGoogleChromeManagementV1CountInstalledAppsResponse(unittest.TestCase):
    """GoogleChromeManagementV1CountInstalledAppsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleChromeManagementV1CountInstalledAppsResponse:
        """Test GoogleChromeManagementV1CountInstalledAppsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleChromeManagementV1CountInstalledAppsResponse`
        """
        model = GoogleChromeManagementV1CountInstalledAppsResponse()
        if include_optional:
            return GoogleChromeManagementV1CountInstalledAppsResponse(
                installed_apps = [
                    openapi_client.models.google_chrome_management_v1_installed_app.GoogleChromeManagementV1InstalledApp(
                        app_id = '', 
                        app_install_type = 'APP_INSTALL_TYPE_UNSPECIFIED', 
                        app_source = 'APP_SOURCE_UNSPECIFIED', 
                        app_type = 'APP_TYPE_UNSPECIFIED', 
                        browser_device_count = '', 
                        description = '', 
                        disabled = True, 
                        display_name = '', 
                        homepage_uri = '', 
                        os_user_count = '', 
                        permissions = [
                            ''
                            ], )
                    ],
                next_page_token = '',
                total_size = 56
            )
        else:
            return GoogleChromeManagementV1CountInstalledAppsResponse(
        )
        """

    def testGoogleChromeManagementV1CountInstalledAppsResponse(self):
        """Test GoogleChromeManagementV1CountInstalledAppsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
