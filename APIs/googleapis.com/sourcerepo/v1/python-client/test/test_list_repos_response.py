# coding: utf-8

"""
    Cloud Source Repositories API

    Accesses source code repositories hosted by Google.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_repos_response import ListReposResponse

class TestListReposResponse(unittest.TestCase):
    """ListReposResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListReposResponse:
        """Test ListReposResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListReposResponse`
        """
        model = ListReposResponse()
        if include_optional:
            return ListReposResponse(
                next_page_token = '',
                repos = [
                    openapi_client.models.repo.Repo(
                        mirror_config = openapi_client.models.mirror_config.MirrorConfig(
                            deploy_key_id = '', 
                            url = '', 
                            webhook_id = '', ), 
                        name = '', 
                        pubsub_configs = {
                            'key' : openapi_client.models.pubsub_config.PubsubConfig(
                                message_format = 'MESSAGE_FORMAT_UNSPECIFIED', 
                                service_account_email = '', 
                                topic = '', )
                            }, 
                        size = '', 
                        url = '', )
                    ]
            )
        else:
            return ListReposResponse(
        )
        """

    def testListReposResponse(self):
        """Test ListReposResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
