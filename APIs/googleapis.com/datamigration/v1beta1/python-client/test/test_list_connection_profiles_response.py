# coding: utf-8

"""
    Database Migration API

    Manage Cloud Database Migration Service resources on Google Cloud Platform.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_connection_profiles_response import ListConnectionProfilesResponse

class TestListConnectionProfilesResponse(unittest.TestCase):
    """ListConnectionProfilesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListConnectionProfilesResponse:
        """Test ListConnectionProfilesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListConnectionProfilesResponse`
        """
        model = ListConnectionProfilesResponse()
        if include_optional:
            return ListConnectionProfilesResponse(
                connection_profiles = [
                    openapi_client.models.connection_profile.ConnectionProfile(
                        cloudsql = openapi_client.models.cloud_sql_connection_profile.CloudSqlConnectionProfile(
                            cloud_sql_id = '', 
                            private_ip = '', 
                            public_ip = '', 
                            settings = openapi_client.models.cloud_sql_settings.CloudSqlSettings(
                                activation_policy = 'SQL_ACTIVATION_POLICY_UNSPECIFIED', 
                                auto_storage_increase = True, 
                                data_disk_size_gb = '', 
                                data_disk_type = 'SQL_DATA_DISK_TYPE_UNSPECIFIED', 
                                database_flags = {
                                    'key' : ''
                                    }, 
                                database_version = 'SQL_DATABASE_VERSION_UNSPECIFIED', 
                                ip_config = openapi_client.models.sql_ip_config.SqlIpConfig(
                                    authorized_networks = [
                                        openapi_client.models.sql_acl_entry.SqlAclEntry(
                                            expire_time = '', 
                                            label = '', 
                                            ttl = '', 
                                            value = '', )
                                        ], 
                                    enable_ipv4 = True, 
                                    private_network = '', 
                                    require_ssl = True, ), 
                                root_password = '', 
                                root_password_set = True, 
                                source_id = '', 
                                storage_auto_resize_limit = '', 
                                tier = '', 
                                user_labels = {
                                    'key' : ''
                                    }, 
                                zone = '', ), ), 
                        create_time = '', 
                        display_name = '', 
                        error = openapi_client.models.status.Status(
                            code = 56, 
                            details = [
                                {
                                    'key' : null
                                    }
                                ], 
                            message = '', ), 
                        labels = {
                            'key' : ''
                            }, 
                        mysql = openapi_client.models.my_sql_connection_profile.MySqlConnectionProfile(
                            cloud_sql_id = '', 
                            host = '', 
                            password = '', 
                            password_set = True, 
                            port = 56, 
                            ssl = openapi_client.models.ssl_config.SslConfig(
                                ca_certificate = '', 
                                client_certificate = '', 
                                client_key = '', 
                                type = 'SSL_TYPE_UNSPECIFIED', ), 
                            username = '', ), 
                        name = '', 
                        provider = 'DATABASE_PROVIDER_UNSPECIFIED', 
                        state = 'STATE_UNSPECIFIED', 
                        update_time = '', )
                    ],
                next_page_token = '',
                unreachable = [
                    ''
                    ]
            )
        else:
            return ListConnectionProfilesResponse(
        )
        """

    def testListConnectionProfilesResponse(self):
        """Test ListConnectionProfilesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
