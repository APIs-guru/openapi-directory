# coding: utf-8

"""
    Database Migration API

    Manage Cloud Database Migration Service resources on Google Cloud Platform.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cloud_sql_connection_profile import CloudSqlConnectionProfile

class TestCloudSqlConnectionProfile(unittest.TestCase):
    """CloudSqlConnectionProfile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CloudSqlConnectionProfile:
        """Test CloudSqlConnectionProfile
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CloudSqlConnectionProfile`
        """
        model = CloudSqlConnectionProfile()
        if include_optional:
            return CloudSqlConnectionProfile(
                cloud_sql_id = '',
                private_ip = '',
                public_ip = '',
                settings = openapi_client.models.cloud_sql_settings.CloudSqlSettings(
                    activation_policy = 'SQL_ACTIVATION_POLICY_UNSPECIFIED', 
                    auto_storage_increase = True, 
                    data_disk_size_gb = '', 
                    data_disk_type = 'SQL_DATA_DISK_TYPE_UNSPECIFIED', 
                    database_flags = {
                        'key' : ''
                        }, 
                    database_version = 'SQL_DATABASE_VERSION_UNSPECIFIED', 
                    ip_config = openapi_client.models.sql_ip_config.SqlIpConfig(
                        authorized_networks = [
                            openapi_client.models.sql_acl_entry.SqlAclEntry(
                                expire_time = '', 
                                label = '', 
                                ttl = '', 
                                value = '', )
                            ], 
                        enable_ipv4 = True, 
                        private_network = '', 
                        require_ssl = True, ), 
                    root_password = '', 
                    root_password_set = True, 
                    source_id = '', 
                    storage_auto_resize_limit = '', 
                    tier = '', 
                    user_labels = {
                        'key' : ''
                        }, 
                    zone = '', )
            )
        else:
            return CloudSqlConnectionProfile(
        )
        """

    def testCloudSqlConnectionProfile(self):
        """Test CloudSqlConnectionProfile"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
