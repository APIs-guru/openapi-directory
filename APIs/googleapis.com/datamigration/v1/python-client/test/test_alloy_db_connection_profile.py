# coding: utf-8

"""
    Database Migration API

    Manage Cloud Database Migration Service resources on Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.alloy_db_connection_profile import AlloyDbConnectionProfile

class TestAlloyDbConnectionProfile(unittest.TestCase):
    """AlloyDbConnectionProfile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AlloyDbConnectionProfile:
        """Test AlloyDbConnectionProfile
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AlloyDbConnectionProfile`
        """
        model = AlloyDbConnectionProfile()
        if include_optional:
            return AlloyDbConnectionProfile(
                cluster_id = '',
                settings = openapi_client.models.alloy_db_settings.AlloyDbSettings(
                    database_version = 'DATABASE_VERSION_UNSPECIFIED', 
                    encryption_config = openapi_client.models.encryption_config.EncryptionConfig(
                        kms_key_name = '', ), 
                    initial_user = openapi_client.models.user_password.UserPassword(
                        password = '', 
                        password_set = True, 
                        user = '', ), 
                    labels = {
                        'key' : ''
                        }, 
                    primary_instance_settings = openapi_client.models.primary_instance_settings.PrimaryInstanceSettings(
                        database_flags = {
                            'key' : ''
                            }, 
                        id = '', 
                        machine_config = openapi_client.models.machine_config.MachineConfig(
                            cpu_count = 56, ), 
                        private_ip = '', ), 
                    vpc_network = '', )
            )
        else:
            return AlloyDbConnectionProfile(
        )
        """

    def testAlloyDbConnectionProfile(self):
        """Test AlloyDbConnectionProfile"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
