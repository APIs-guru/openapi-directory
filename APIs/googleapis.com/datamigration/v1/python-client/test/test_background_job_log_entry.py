# coding: utf-8

"""
    Database Migration API

    Manage Cloud Database Migration Service resources on Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.background_job_log_entry import BackgroundJobLogEntry

class TestBackgroundJobLogEntry(unittest.TestCase):
    """BackgroundJobLogEntry unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BackgroundJobLogEntry:
        """Test BackgroundJobLogEntry
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BackgroundJobLogEntry`
        """
        model = BackgroundJobLogEntry()
        if include_optional:
            return BackgroundJobLogEntry(
                apply_job_details = openapi_client.models.apply_job_details.ApplyJobDetails(
                    connection_profile = '', 
                    filter = '', ),
                completion_comment = '',
                completion_state = 'JOB_COMPLETION_STATE_UNSPECIFIED',
                convert_job_details = openapi_client.models.convert_job_details.ConvertJobDetails(
                    filter = '', ),
                finish_time = '',
                id = '',
                import_rules_job_details = openapi_client.models.import_rules_job_details.ImportRulesJobDetails(
                    file_format = 'IMPORT_RULES_FILE_FORMAT_UNSPECIFIED', 
                    files = [
                        ''
                        ], ),
                job_type = 'BACKGROUND_JOB_TYPE_UNSPECIFIED',
                request_autocommit = True,
                seed_job_details = openapi_client.models.seed_job_details.SeedJobDetails(
                    connection_profile = '', ),
                start_time = ''
            )
        else:
            return BackgroundJobLogEntry(
        )
        """

    def testBackgroundJobLogEntry(self):
        """Test BackgroundJobLogEntry"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
