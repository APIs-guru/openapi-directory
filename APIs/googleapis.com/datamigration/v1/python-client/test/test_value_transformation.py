# coding: utf-8

"""
    Database Migration API

    Manage Cloud Database Migration Service resources on Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.value_transformation import ValueTransformation

class TestValueTransformation(unittest.TestCase):
    """ValueTransformation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ValueTransformation:
        """Test ValueTransformation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ValueTransformation`
        """
        model = ValueTransformation()
        if include_optional:
            return ValueTransformation(
                apply_hash = openapi_client.models.apply_hash.ApplyHash(
                    uuid_from_bytes = openapi_client.models.uuid_from_bytes.uuidFromBytes(), ),
                assign_max_value = openapi_client.models.uuid_from_bytes.uuidFromBytes(),
                assign_min_value = openapi_client.models.uuid_from_bytes.uuidFromBytes(),
                assign_null = openapi_client.models.uuid_from_bytes.uuidFromBytes(),
                assign_specific_value = openapi_client.models.assign_specific_value.AssignSpecificValue(
                    value = '', ),
                double_comparison = openapi_client.models.double_comparison_filter.DoubleComparisonFilter(
                    value = 1.337, 
                    value_comparison = 'VALUE_COMPARISON_UNSPECIFIED', ),
                int_comparison = openapi_client.models.int_comparison_filter.IntComparisonFilter(
                    value = '', 
                    value_comparison = 'VALUE_COMPARISON_UNSPECIFIED', ),
                is_null = openapi_client.models.uuid_from_bytes.uuidFromBytes(),
                round_scale = openapi_client.models.round_to_scale.RoundToScale(
                    scale = 56, ),
                value_list = openapi_client.models.value_list_filter.ValueListFilter(
                    ignore_case = True, 
                    value_present_list = 'VALUE_PRESENT_IN_LIST_UNSPECIFIED', 
                    values = [
                        ''
                        ], )
            )
        else:
            return ValueTransformation(
        )
        """

    def testValueTransformation(self):
        """Test ValueTransformation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
