# coding: utf-8

"""
    Database Migration API

    Manage Cloud Database Migration Service resources on Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.oracle_connection_profile import OracleConnectionProfile

class TestOracleConnectionProfile(unittest.TestCase):
    """OracleConnectionProfile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OracleConnectionProfile:
        """Test OracleConnectionProfile
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OracleConnectionProfile`
        """
        model = OracleConnectionProfile()
        if include_optional:
            return OracleConnectionProfile(
                database_service = '',
                forward_ssh_connectivity = openapi_client.models.forward_ssh_tunnel_connectivity.ForwardSshTunnelConnectivity(
                    hostname = '', 
                    password = '', 
                    port = 56, 
                    private_key = '', 
                    username = '', ),
                host = '',
                password = '',
                password_set = True,
                port = 56,
                private_connectivity = openapi_client.models.private_connectivity.PrivateConnectivity(
                    private_connection = '', ),
                ssl = openapi_client.models.ssl_config.SslConfig(
                    ca_certificate = '', 
                    client_certificate = '', 
                    client_key = '', 
                    type = 'SSL_TYPE_UNSPECIFIED', ),
                static_service_ip_connectivity = openapi_client.models.static_service_ip_connectivity.StaticServiceIpConnectivity(),
                username = ''
            )
        else:
            return OracleConnectionProfile(
        )
        """

    def testOracleConnectionProfile(self):
        """Test OracleConnectionProfile"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
