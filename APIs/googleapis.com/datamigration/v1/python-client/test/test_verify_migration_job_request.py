# coding: utf-8

"""
    Database Migration API

    Manage Cloud Database Migration Service resources on Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.verify_migration_job_request import VerifyMigrationJobRequest

class TestVerifyMigrationJobRequest(unittest.TestCase):
    """VerifyMigrationJobRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VerifyMigrationJobRequest:
        """Test VerifyMigrationJobRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VerifyMigrationJobRequest`
        """
        model = VerifyMigrationJobRequest()
        if include_optional:
            return VerifyMigrationJobRequest(
                migration_job = openapi_client.models.migration_job.MigrationJob(
                    cmek_key_name = '', 
                    conversion_workspace = openapi_client.models.conversion_workspace_info.ConversionWorkspaceInfo(
                        commit_id = '', 
                        name = '', ), 
                    create_time = '', 
                    destination = '', 
                    destination_database = openapi_client.models.database_type.DatabaseType(
                        engine = 'DATABASE_ENGINE_UNSPECIFIED', 
                        provider = 'DATABASE_PROVIDER_UNSPECIFIED', ), 
                    display_name = '', 
                    dump_flags = openapi_client.models.dump_flags.DumpFlags(), 
                    dump_path = '', 
                    duration = '', 
                    end_time = '', 
                    error = openapi_client.models.status.Status(
                        code = 56, 
                        details = [
                            {
                                'key' : null
                                }
                            ], 
                        message = '', ), 
                    filter = '', 
                    labels = {
                        'key' : ''
                        }, 
                    name = '', 
                    performance_config = openapi_client.models.performance_config.PerformanceConfig(
                        dump_parallel_level = 'DUMP_PARALLEL_LEVEL_UNSPECIFIED', ), 
                    phase = 'PHASE_UNSPECIFIED', 
                    reverse_ssh_connectivity = openapi_client.models.reverse_ssh_connectivity.ReverseSshConnectivity(
                        vm = '', 
                        vm_ip = '', 
                        vm_port = 56, 
                        vpc = '', ), 
                    source = '', 
                    source_database = openapi_client.models.database_type.DatabaseType(
                        engine = 'DATABASE_ENGINE_UNSPECIFIED', 
                        provider = 'DATABASE_PROVIDER_UNSPECIFIED', ), 
                    state = 'STATE_UNSPECIFIED', 
                    static_ip_connectivity = openapi_client.models.static_ip_connectivity.StaticIpConnectivity(), 
                    type = 'TYPE_UNSPECIFIED', 
                    update_time = '', 
                    vpc_peering_connectivity = openapi_client.models.vpc_peering_connectivity.VpcPeeringConnectivity(
                        vpc = '', ), ),
                update_mask = ''
            )
        else:
            return VerifyMigrationJobRequest(
        )
        """

    def testVerifyMigrationJobRequest(self):
        """Test VerifyMigrationJobRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
