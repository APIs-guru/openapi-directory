# coding: utf-8

"""
    Datastream API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.run_stream_request import RunStreamRequest

class TestRunStreamRequest(unittest.TestCase):
    """RunStreamRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RunStreamRequest:
        """Test RunStreamRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RunStreamRequest`
        """
        model = RunStreamRequest()
        if include_optional:
            return RunStreamRequest(
                cdc_strategy = openapi_client.models.cdc_strategy.CdcStrategy(
                    most_recent_start_position = openapi_client.models.most_recent_start_position.mostRecentStartPosition(), 
                    next_available_start_position = openapi_client.models.next_available_start_position.nextAvailableStartPosition(), 
                    specific_start_position = openapi_client.models.specific_start_position.SpecificStartPosition(
                        mysql_log_position = openapi_client.models.mysql_log_position.MysqlLogPosition(
                            log_file = '', 
                            log_position = 56, ), 
                        oracle_scn_position = openapi_client.models.oracle_scn_position.OracleScnPosition(
                            scn = '', ), ), )
            )
        else:
            return RunStreamRequest(
        )
        """

    def testRunStreamRequest(self):
        """Test RunStreamRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
