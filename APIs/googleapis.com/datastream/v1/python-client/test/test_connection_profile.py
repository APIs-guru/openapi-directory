# coding: utf-8

"""
    Datastream API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.connection_profile import ConnectionProfile

class TestConnectionProfile(unittest.TestCase):
    """ConnectionProfile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConnectionProfile:
        """Test ConnectionProfile
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConnectionProfile`
        """
        model = ConnectionProfile()
        if include_optional:
            return ConnectionProfile(
                bigquery_profile = None,
                create_time = '',
                display_name = '',
                forward_ssh_connectivity = openapi_client.models.forward_ssh_tunnel_connectivity.ForwardSshTunnelConnectivity(
                    hostname = '', 
                    password = '', 
                    port = 56, 
                    private_key = '', 
                    username = '', ),
                gcs_profile = openapi_client.models.gcs_profile.GcsProfile(
                    bucket = '', 
                    root_path = '', ),
                labels = {
                    'key' : ''
                    },
                mysql_profile = openapi_client.models.mysql_profile.MysqlProfile(
                    hostname = '', 
                    password = '', 
                    port = 56, 
                    ssl_config = openapi_client.models.mysql_ssl_config.MysqlSslConfig(
                        ca_certificate = '', 
                        ca_certificate_set = True, 
                        client_certificate = '', 
                        client_certificate_set = True, 
                        client_key = '', 
                        client_key_set = True, ), 
                    username = '', ),
                name = '',
                oracle_profile = openapi_client.models.oracle_profile.OracleProfile(
                    connection_attributes = {
                        'key' : ''
                        }, 
                    database_service = '', 
                    hostname = '', 
                    oracle_ssl_config = openapi_client.models.oracle_ssl_config.OracleSslConfig(
                        ca_certificate = '', 
                        ca_certificate_set = True, ), 
                    password = '', 
                    port = 56, 
                    username = '', ),
                postgresql_profile = openapi_client.models.postgresql_profile.PostgresqlProfile(
                    database = '', 
                    hostname = '', 
                    password = '', 
                    port = 56, 
                    username = '', ),
                private_connectivity = openapi_client.models.private_connectivity.PrivateConnectivity(
                    private_connection = '', ),
                sql_server_profile = openapi_client.models.sql_server_profile.SqlServerProfile(
                    database = '', 
                    hostname = '', 
                    password = '', 
                    port = 56, 
                    username = '', ),
                static_service_ip_connectivity = None,
                update_time = ''
            )
        else:
            return ConnectionProfile(
        )
        """

    def testConnectionProfile(self):
        """Test ConnectionProfile"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
