# coding: utf-8

"""
    Datastream API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_streams_response import ListStreamsResponse

class TestListStreamsResponse(unittest.TestCase):
    """ListStreamsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListStreamsResponse:
        """Test ListStreamsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListStreamsResponse`
        """
        model = ListStreamsResponse()
        if include_optional:
            return ListStreamsResponse(
                next_page_token = '',
                streams = [
                    openapi_client.models.stream.Stream(
                        backfill_all = openapi_client.models.backfill_all_strategy.BackfillAllStrategy(
                            mysql_excluded_objects = openapi_client.models.mysql_rdbms.MysqlRdbms(
                                mysql_databases = [
                                    openapi_client.models.mysql_database.MysqlDatabase(
                                        database = '', 
                                        mysql_tables = [
                                            openapi_client.models.mysql_table.MysqlTable(
                                                mysql_columns = [
                                                    openapi_client.models.mysql_column.MysqlColumn(
                                                        collation = '', 
                                                        column = '', 
                                                        data_type = '', 
                                                        length = 56, 
                                                        nullable = True, 
                                                        ordinal_position = 56, 
                                                        precision = 56, 
                                                        primary_key = True, 
                                                        scale = 56, )
                                                    ], 
                                                table = '', )
                                            ], )
                                    ], ), 
                            oracle_excluded_objects = openapi_client.models.oracle_rdbms.OracleRdbms(
                                oracle_schemas = [
                                    openapi_client.models.oracle_schema.OracleSchema(
                                        oracle_tables = [
                                            openapi_client.models.oracle_table.OracleTable(
                                                oracle_columns = [
                                                    openapi_client.models.oracle_column.OracleColumn(
                                                        column = '', 
                                                        data_type = '', 
                                                        encoding = '', 
                                                        length = 56, 
                                                        nullable = True, 
                                                        ordinal_position = 56, 
                                                        precision = 56, 
                                                        primary_key = True, 
                                                        scale = 56, )
                                                    ], 
                                                table = '', )
                                            ], 
                                        schema = '', )
                                    ], ), 
                            postgresql_excluded_objects = openapi_client.models.postgresql_rdbms.PostgresqlRdbms(
                                postgresql_schemas = [
                                    openapi_client.models.postgresql_schema.PostgresqlSchema(
                                        postgresql_tables = [
                                            openapi_client.models.postgresql_table.PostgresqlTable(
                                                postgresql_columns = [
                                                    openapi_client.models.postgresql_column.PostgresqlColumn(
                                                        column = '', 
                                                        data_type = '', 
                                                        length = 56, 
                                                        nullable = True, 
                                                        ordinal_position = 56, 
                                                        precision = 56, 
                                                        primary_key = True, 
                                                        scale = 56, )
                                                    ], 
                                                table = '', )
                                            ], 
                                        schema = '', )
                                    ], ), 
                            sql_server_excluded_objects = openapi_client.models.sql_server_rdbms.SqlServerRdbms(
                                schemas = [
                                    openapi_client.models.sql_server_schema.SqlServerSchema(
                                        schema = '', 
                                        tables = [
                                            openapi_client.models.sql_server_table.SqlServerTable(
                                                columns = [
                                                    openapi_client.models.sql_server_column.SqlServerColumn(
                                                        column = '', 
                                                        data_type = '', 
                                                        length = 56, 
                                                        nullable = True, 
                                                        ordinal_position = 56, 
                                                        precision = 56, 
                                                        primary_key = True, 
                                                        scale = 56, )
                                                    ], 
                                                table = '', )
                                            ], )
                                    ], ), ), 
                        backfill_none = openapi_client.models.backfill_none_strategy.BackfillNoneStrategy(), 
                        create_time = '', 
                        customer_managed_encryption_key = '', 
                        destination_config = openapi_client.models.destination_config.DestinationConfig(
                            bigquery_destination_config = openapi_client.models.big_query_destination_config.BigQueryDestinationConfig(
                                data_freshness = '', 
                                single_target_dataset = openapi_client.models.single_target_dataset.SingleTargetDataset(
                                    dataset_id = '', ), 
                                source_hierarchy_datasets = openapi_client.models.source_hierarchy_datasets.SourceHierarchyDatasets(
                                    dataset_template = openapi_client.models.dataset_template.DatasetTemplate(
                                        dataset_id_prefix = '', 
                                        kms_key_name = '', 
                                        location = '', ), ), ), 
                            destination_connection_profile = '', 
                            gcs_destination_config = openapi_client.models.gcs_destination_config.GcsDestinationConfig(
                                avro_file_format = openapi_client.models.avro_file_format.AvroFileFormat(), 
                                file_rotation_interval = '', 
                                file_rotation_mb = 56, 
                                json_file_format = openapi_client.models.json_file_format.JsonFileFormat(
                                    compression = 'JSON_COMPRESSION_UNSPECIFIED', 
                                    schema_file_format = 'SCHEMA_FILE_FORMAT_UNSPECIFIED', ), 
                                path = '', ), ), 
                        display_name = '', 
                        errors = [
                            openapi_client.models.error.Error(
                                details = {
                                    'key' : ''
                                    }, 
                                error_time = '', 
                                error_uuid = '', 
                                message = '', 
                                reason = '', )
                            ], 
                        labels = {
                            'key' : ''
                            }, 
                        last_recovery_time = '', 
                        name = '', 
                        source_config = openapi_client.models.source_config.SourceConfig(
                            mysql_source_config = openapi_client.models.mysql_source_config.MysqlSourceConfig(
                                exclude_objects = openapi_client.models.mysql_rdbms.MysqlRdbms(), 
                                include_objects = , 
                                max_concurrent_backfill_tasks = 56, 
                                max_concurrent_cdc_tasks = 56, ), 
                            oracle_source_config = openapi_client.models.oracle_source_config.OracleSourceConfig(
                                drop_large_objects = openapi_client.models.drop_large_objects.DropLargeObjects(), 
                                max_concurrent_backfill_tasks = 56, 
                                max_concurrent_cdc_tasks = 56, 
                                stream_large_objects = openapi_client.models.stream_large_objects.StreamLargeObjects(), ), 
                            postgresql_source_config = openapi_client.models.postgresql_source_config.PostgresqlSourceConfig(
                                max_concurrent_backfill_tasks = 56, 
                                publication = '', 
                                replication_slot = '', ), 
                            source_connection_profile = '', 
                            sql_server_source_config = openapi_client.models.sql_server_source_config.SqlServerSourceConfig(
                                max_concurrent_backfill_tasks = 56, 
                                max_concurrent_cdc_tasks = 56, ), ), 
                        state = 'STATE_UNSPECIFIED', 
                        update_time = '', )
                    ],
                unreachable = [
                    ''
                    ]
            )
        else:
            return ListStreamsResponse(
        )
        """

    def testListStreamsResponse(self):
        """Test ListStreamsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
