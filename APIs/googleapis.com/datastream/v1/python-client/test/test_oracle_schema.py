# coding: utf-8

"""
    Datastream API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.oracle_schema import OracleSchema

class TestOracleSchema(unittest.TestCase):
    """OracleSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OracleSchema:
        """Test OracleSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OracleSchema`
        """
        model = OracleSchema()
        if include_optional:
            return OracleSchema(
                oracle_tables = [
                    openapi_client.models.oracle_table.OracleTable(
                        oracle_columns = [
                            openapi_client.models.oracle_column.OracleColumn(
                                column = '', 
                                data_type = '', 
                                encoding = '', 
                                length = 56, 
                                nullable = True, 
                                ordinal_position = 56, 
                                precision = 56, 
                                primary_key = True, 
                                scale = 56, )
                            ], 
                        table = '', )
                    ],
                var_schema = ''
            )
        else:
            return OracleSchema(
        )
        """

    def testOracleSchema(self):
        """Test OracleSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
