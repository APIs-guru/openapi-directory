# coding: utf-8

"""
    Datastream API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.private_connection import PrivateConnection

class TestPrivateConnection(unittest.TestCase):
    """PrivateConnection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PrivateConnection:
        """Test PrivateConnection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PrivateConnection`
        """
        model = PrivateConnection()
        if include_optional:
            return PrivateConnection(
                create_time = '',
                display_name = '',
                error = openapi_client.models.error.Error(
                    details = {
                        'key' : ''
                        }, 
                    error_time = '', 
                    error_uuid = '', 
                    message = '', 
                    reason = '', ),
                labels = {
                    'key' : ''
                    },
                name = '',
                state = 'STATE_UNSPECIFIED',
                update_time = '',
                vpc_peering_config = openapi_client.models.vpc_peering_config.VpcPeeringConfig(
                    subnet = '', 
                    vpc_name = '', )
            )
        else:
            return PrivateConnection(
        )
        """

    def testPrivateConnection(self):
        """Test PrivateConnection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
