# coding: utf-8

"""
    Datastream API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.stream import Stream

class TestStream(unittest.TestCase):
    """Stream unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Stream:
        """Test Stream
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Stream`
        """
        model = Stream()
        if include_optional:
            return Stream(
                backfill_all = openapi_client.models.backfill_all_strategy.BackfillAllStrategy(
                    mysql_excluded_objects = openapi_client.models.mysql_rdbms.MysqlRdbms(
                        mysql_databases = [
                            openapi_client.models.mysql_database.MysqlDatabase(
                                database_name = '', 
                                mysql_tables = [
                                    openapi_client.models.mysql_table.MysqlTable(
                                        mysql_columns = [
                                            openapi_client.models.mysql_column.MysqlColumn(
                                                collation = '', 
                                                column_name = '', 
                                                data_type = '', 
                                                length = 56, 
                                                nullable = True, 
                                                ordinal_position = 56, 
                                                primary_key = True, )
                                            ], 
                                        table_name = '', )
                                    ], )
                            ], ), 
                    oracle_excluded_objects = openapi_client.models.oracle_rdbms.OracleRdbms(
                        oracle_schemas = [
                            openapi_client.models.oracle_schema.OracleSchema(
                                oracle_tables = [
                                    openapi_client.models.oracle_table.OracleTable(
                                        oracle_columns = [
                                            openapi_client.models.oracle_column.OracleColumn(
                                                column_name = '', 
                                                data_type = '', 
                                                encoding = '', 
                                                length = 56, 
                                                nullable = True, 
                                                ordinal_position = 56, 
                                                precision = 56, 
                                                primary_key = True, 
                                                scale = 56, )
                                            ], 
                                        table_name = '', )
                                    ], 
                                schema_name = '', )
                            ], ), ),
                backfill_none = openapi_client.models.backfill_none_strategy.BackfillNoneStrategy(),
                create_time = '',
                customer_managed_encryption_key = '',
                destination_config = openapi_client.models.destination_config.DestinationConfig(
                    destination_connection_profile_name = '', 
                    gcs_destination_config = openapi_client.models.gcs_destination_config.GcsDestinationConfig(
                        avro_file_format = openapi_client.models.avro_file_format.AvroFileFormat(), 
                        file_rotation_interval = '', 
                        file_rotation_mb = 56, 
                        gcs_file_format = 'GCS_FILE_FORMAT_UNSPECIFIED', 
                        json_file_format = openapi_client.models.json_file_format.JsonFileFormat(
                            compression = 'JSON_COMPRESSION_UNSPECIFIED', 
                            schema_file_format = 'SCHEMA_FILE_FORMAT_UNSPECIFIED', ), 
                        path = '', ), ),
                display_name = '',
                errors = [
                    openapi_client.models.error.Error(
                        details = {
                            'key' : ''
                            }, 
                        error_time = '', 
                        error_uuid = '', 
                        message = '', 
                        reason = '', )
                    ],
                labels = {
                    'key' : ''
                    },
                name = '',
                source_config = openapi_client.models.source_config.SourceConfig(
                    mysql_source_config = openapi_client.models.mysql_source_config.MysqlSourceConfig(
                        allowlist = openapi_client.models.mysql_rdbms.MysqlRdbms(
                            mysql_databases = [
                                openapi_client.models.mysql_database.MysqlDatabase(
                                    database_name = '', 
                                    mysql_tables = [
                                        openapi_client.models.mysql_table.MysqlTable(
                                            mysql_columns = [
                                                openapi_client.models.mysql_column.MysqlColumn(
                                                    collation = '', 
                                                    column_name = '', 
                                                    data_type = '', 
                                                    length = 56, 
                                                    nullable = True, 
                                                    ordinal_position = 56, 
                                                    primary_key = True, )
                                                ], 
                                            table_name = '', )
                                        ], )
                                ], ), 
                        rejectlist = openapi_client.models.mysql_rdbms.MysqlRdbms(), ), 
                    oracle_source_config = openapi_client.models.oracle_source_config.OracleSourceConfig(
                        drop_large_objects = openapi_client.models.drop_large_objects.DropLargeObjects(), ), 
                    source_connection_profile_name = '', ),
                state = 'STATE_UNSPECIFIED',
                update_time = ''
            )
        else:
            return Stream(
        )
        """

    def testStream(self):
        """Test Stream"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
