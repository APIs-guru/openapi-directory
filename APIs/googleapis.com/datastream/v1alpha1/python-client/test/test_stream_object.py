# coding: utf-8

"""
    Datastream API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.stream_object import StreamObject

class TestStreamObject(unittest.TestCase):
    """StreamObject unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StreamObject:
        """Test StreamObject
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StreamObject`
        """
        model = StreamObject()
        if include_optional:
            return StreamObject(
                backfill_job = openapi_client.models.backfill_job.BackfillJob(
                    errors = [
                        openapi_client.models.error.Error(
                            details = {
                                'key' : ''
                                }, 
                            error_time = '', 
                            error_uuid = '', 
                            message = '', 
                            reason = '', )
                        ], 
                    last_end_time = '', 
                    last_start_time = '', 
                    state = 'STATE_UNSPECIFIED', 
                    trigger = 'TRIGGER_UNSPECIFIED', ),
                create_time = '',
                display_name = '',
                errors = [
                    openapi_client.models.error.Error(
                        details = {
                            'key' : ''
                            }, 
                        error_time = '', 
                        error_uuid = '', 
                        message = '', 
                        reason = '', )
                    ],
                name = '',
                source_object = openapi_client.models.source_object_identifier.SourceObjectIdentifier(
                    mysql_identifier = openapi_client.models.mysql_object_identifier.MysqlObjectIdentifier(
                        database = '', 
                        table = '', ), 
                    oracle_identifier = openapi_client.models.oracle_object_identifier.OracleObjectIdentifier(
                        schema = '', 
                        table = '', ), ),
                update_time = ''
            )
        else:
            return StreamObject(
        )
        """

    def testStreamObject(self):
        """Test StreamObject"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
