# coding: utf-8

"""
    OS Config API

    OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.os_policy_resource_file_resource import OSPolicyResourceFileResource

class TestOSPolicyResourceFileResource(unittest.TestCase):
    """OSPolicyResourceFileResource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OSPolicyResourceFileResource:
        """Test OSPolicyResourceFileResource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OSPolicyResourceFileResource`
        """
        model = OSPolicyResourceFileResource()
        if include_optional:
            return OSPolicyResourceFileResource(
                content = '',
                file = openapi_client.models.os_policy_resource_file.OSPolicyResourceFile(
                    allow_insecure = True, 
                    gcs = openapi_client.models.os_policy_resource_file_gcs.OSPolicyResourceFileGcs(
                        bucket = '', 
                        generation = '', 
                        object = '', ), 
                    local_path = '', 
                    remote = openapi_client.models.os_policy_resource_file_remote.OSPolicyResourceFileRemote(
                        sha256_checksum = '', 
                        uri = '', ), ),
                path = '',
                permissions = '',
                state = 'DESIRED_STATE_UNSPECIFIED'
            )
        else:
            return OSPolicyResourceFileResource(
        )
        """

    def testOSPolicyResourceFileResource(self):
        """Test OSPolicyResourceFileResource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
