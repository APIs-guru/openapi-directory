# coding: utf-8

"""
    OS Config API

    OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.os_policy_assignment_report_os_policy_compliance import OSPolicyAssignmentReportOSPolicyCompliance

class TestOSPolicyAssignmentReportOSPolicyCompliance(unittest.TestCase):
    """OSPolicyAssignmentReportOSPolicyCompliance unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OSPolicyAssignmentReportOSPolicyCompliance:
        """Test OSPolicyAssignmentReportOSPolicyCompliance
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OSPolicyAssignmentReportOSPolicyCompliance`
        """
        model = OSPolicyAssignmentReportOSPolicyCompliance()
        if include_optional:
            return OSPolicyAssignmentReportOSPolicyCompliance(
                compliance_state = 'UNKNOWN',
                compliance_state_reason = '',
                os_policy_id = '',
                os_policy_resource_compliances = [
                    openapi_client.models.os_policy_assignment_report_os_policy_compliance_os_policy_resource_compliance.OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance(
                        compliance_state = 'UNKNOWN', 
                        compliance_state_reason = '', 
                        config_steps = [
                            openapi_client.models.os_policy_assignment_report_os_policy_compliance_os_policy_resource_compliance_os_policy_resource_config_step.OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceOSPolicyResourceConfigStep(
                                error_message = '', 
                                type = 'TYPE_UNSPECIFIED', )
                            ], 
                        exec_resource_output = openapi_client.models.os_policy_assignment_report_os_policy_compliance_os_policy_resource_compliance_exec_resource_output.OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceExecResourceOutput(
                            enforcement_output = 'YQ==', ), 
                        os_policy_resource_id = '', )
                    ]
            )
        else:
            return OSPolicyAssignmentReportOSPolicyCompliance(
        )
        """

    def testOSPolicyAssignmentReportOSPolicyCompliance(self):
        """Test OSPolicyAssignmentReportOSPolicyCompliance"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
