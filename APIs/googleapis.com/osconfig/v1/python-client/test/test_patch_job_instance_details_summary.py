# coding: utf-8

"""
    OS Config API

    OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.patch_job_instance_details_summary import PatchJobInstanceDetailsSummary

class TestPatchJobInstanceDetailsSummary(unittest.TestCase):
    """PatchJobInstanceDetailsSummary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PatchJobInstanceDetailsSummary:
        """Test PatchJobInstanceDetailsSummary
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PatchJobInstanceDetailsSummary`
        """
        model = PatchJobInstanceDetailsSummary()
        if include_optional:
            return PatchJobInstanceDetailsSummary(
                acked_instance_count = '',
                applying_patches_instance_count = '',
                downloading_patches_instance_count = '',
                failed_instance_count = '',
                inactive_instance_count = '',
                no_agent_detected_instance_count = '',
                notified_instance_count = '',
                pending_instance_count = '',
                post_patch_step_instance_count = '',
                pre_patch_step_instance_count = '',
                rebooting_instance_count = '',
                started_instance_count = '',
                succeeded_instance_count = '',
                succeeded_reboot_required_instance_count = '',
                timed_out_instance_count = ''
            )
        else:
            return PatchJobInstanceDetailsSummary(
        )
        """

    def testPatchJobInstanceDetailsSummary(self):
        """Test PatchJobInstanceDetailsSummary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
