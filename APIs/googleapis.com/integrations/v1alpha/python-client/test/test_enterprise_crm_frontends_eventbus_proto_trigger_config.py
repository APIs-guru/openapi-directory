# coding: utf-8

"""
    Application Integration API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.enterprise_crm_frontends_eventbus_proto_trigger_config import EnterpriseCrmFrontendsEventbusProtoTriggerConfig

class TestEnterpriseCrmFrontendsEventbusProtoTriggerConfig(unittest.TestCase):
    """EnterpriseCrmFrontendsEventbusProtoTriggerConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EnterpriseCrmFrontendsEventbusProtoTriggerConfig:
        """Test EnterpriseCrmFrontendsEventbusProtoTriggerConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EnterpriseCrmFrontendsEventbusProtoTriggerConfig`
        """
        model = EnterpriseCrmFrontendsEventbusProtoTriggerConfig()
        if include_optional:
            return EnterpriseCrmFrontendsEventbusProtoTriggerConfig(
                alert_config = [
                    openapi_client.models.enterprise_crm_eventbus_proto_workflow_alert_config.EnterpriseCrmEventbusProtoWorkflowAlertConfig(
                        aggregation_period = '', 
                        alert_disabled = True, 
                        alert_name = '', 
                        client_id = '', 
                        duration_threshold_ms = '', 
                        error_enum_list = openapi_client.models.enterprise_crm_eventbus_proto_base_alert_config_error_enum_list.EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList(
                            enum_strings = [
                                ''
                                ], 
                            filter_type = 'DEFAULT_INCLUSIVE', ), 
                        metric_type = 'METRIC_TYPE_UNSPECIFIED', 
                        num_aggregation_periods = 56, 
                        only_final_attempt = True, 
                        playbook_url = '', 
                        threshold_type = 'UNSPECIFIED_THRESHOLD_TYPE', 
                        threshold_value = openapi_client.models.enterprise_crm_eventbus_proto_base_alert_config_threshold_value.EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValue(
                            absolute = '', 
                            percentage = 56, ), 
                        warning_enum_list = openapi_client.models.enterprise_crm_eventbus_proto_base_alert_config_error_enum_list.EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList(
                            filter_type = 'DEFAULT_INCLUSIVE', ), )
                    ],
                cloud_scheduler_config = openapi_client.models.enterprise_crm_eventbus_proto_cloud_scheduler_config.EnterpriseCrmEventbusProtoCloudSchedulerConfig(
                    cron_tab = '', 
                    error_message = '', 
                    location = '', 
                    service_account_email = '', ),
                description = '',
                enabled_clients = [
                    ''
                    ],
                error_catcher_id = '',
                label = '',
                next_tasks_execution_policy = 'UNSPECIFIED',
                pause_workflow_executions = True,
                position = openapi_client.models.enterprise_crm_eventbus_proto_coordinate.EnterpriseCrmEventbusProtoCoordinate(
                    x = 56, 
                    y = 56, ),
                properties = {
                    'key' : ''
                    },
                start_tasks = [
                    openapi_client.models.enterprise_crm_eventbus_proto_next_task.EnterpriseCrmEventbusProtoNextTask(
                        combined_conditions = [
                            openapi_client.models.enterprise_crm_eventbus_proto_combined_condition.EnterpriseCrmEventbusProtoCombinedCondition(
                                conditions = [
                                    openapi_client.models.enterprise_crm_eventbus_proto_condition.EnterpriseCrmEventbusProtoCondition(
                                        event_property_key = '', 
                                        operator = 'UNSET', 
                                        value = openapi_client.models.enterprise_crm_eventbus_proto_value_type.EnterpriseCrmEventbusProtoValueType(
                                            boolean_value = True, 
                                            double_array = openapi_client.models.enterprise_crm_eventbus_proto_double_array.EnterpriseCrmEventbusProtoDoubleArray(
                                                values = [
                                                    1.337
                                                    ], ), 
                                            double_value = 1.337, 
                                            int_array = openapi_client.models.enterprise_crm_eventbus_proto_int_array.EnterpriseCrmEventbusProtoIntArray(), 
                                            int_value = '', 
                                            proto_value = {
                                                'key' : null
                                                }, 
                                            string_array = openapi_client.models.enterprise_crm_eventbus_proto_string_array.EnterpriseCrmEventbusProtoStringArray(), 
                                            string_value = '', ), )
                                    ], )
                            ], 
                        condition = '', 
                        description = '', 
                        label = '', 
                        task_config_id = '', 
                        task_number = '', )
                    ],
                trigger_criteria = openapi_client.models.enterprise_crm_eventbus_proto_trigger_criteria.EnterpriseCrmEventbusProtoTriggerCriteria(
                    condition = '', 
                    parameters = openapi_client.models.enterprise_crm_eventbus_proto_event_parameters.EnterpriseCrmEventbusProtoEventParameters(), 
                    trigger_criteria_task_implementation_class_name = '', ),
                trigger_id = '',
                trigger_number = '',
                trigger_type = 'UNKNOWN'
            )
        else:
            return EnterpriseCrmFrontendsEventbusProtoTriggerConfig(
        )
        """

    def testEnterpriseCrmFrontendsEventbusProtoTriggerConfig(self):
        """Test EnterpriseCrmFrontendsEventbusProtoTriggerConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
