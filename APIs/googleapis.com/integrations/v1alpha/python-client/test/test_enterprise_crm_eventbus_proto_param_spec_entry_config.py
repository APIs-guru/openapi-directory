# coding: utf-8

"""
    Application Integration API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.enterprise_crm_eventbus_proto_param_spec_entry_config import EnterpriseCrmEventbusProtoParamSpecEntryConfig

class TestEnterpriseCrmEventbusProtoParamSpecEntryConfig(unittest.TestCase):
    """EnterpriseCrmEventbusProtoParamSpecEntryConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EnterpriseCrmEventbusProtoParamSpecEntryConfig:
        """Test EnterpriseCrmEventbusProtoParamSpecEntryConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EnterpriseCrmEventbusProtoParamSpecEntryConfig`
        """
        model = EnterpriseCrmEventbusProtoParamSpecEntryConfig()
        if include_optional:
            return EnterpriseCrmEventbusProtoParamSpecEntryConfig(
                descriptive_phrase = '',
                help_text = '',
                hide_default_value = True,
                input_display_option = 'DEFAULT',
                is_hidden = True,
                label = '',
                parameter_name_option = 'DEFAULT_NOT_PARAMETER_NAME',
                sub_section_label = '',
                ui_placeholder_text = ''
            )
        else:
            return EnterpriseCrmEventbusProtoParamSpecEntryConfig(
        )
        """

    def testEnterpriseCrmEventbusProtoParamSpecEntryConfig(self):
        """Test EnterpriseCrmEventbusProtoParamSpecEntryConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
