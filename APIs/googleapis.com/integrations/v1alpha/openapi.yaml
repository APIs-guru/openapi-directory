openapi: 3.0.0
servers:
  - url: https://integrations.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: ""
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Application Integration API
  version: v1alpha
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://integrations.googleapis.com/$discovery/rest?version=v1alpha
      version: v1
  x-providerName: googleapis.com
  x-serviceName: integrations
externalDocs:
  url: https://cloud.google.com/application-integration
tags:
  - name: callback
  - name: connectorPlatformRegions
  - name: projects
paths:
  /v1alpha/callback:generateToken:
    get:
      description: Receives the auth code and auth config id to combine that with the client id and secret to retrieve access tokens from the token endpoint. Returns either a success or error message when it's done.
      operationId: integrations.callback.generateToken
      parameters:
        - description: The auth code for the given request
          in: query
          name: code
          schema:
            type: string
        - description: The gcp project id of the request
          in: query
          name: gcpProjectId
          schema:
            type: string
        - description: Which product sends the request
          in: query
          name: product
          schema:
            enum:
              - UNSPECIFIED_PRODUCT
              - IP
              - APIGEE
              - SECURITY
            type: string
        - description: Redirect uri of the auth code request
          in: query
          name: redirectUri
          schema:
            type: string
        - description: The auth config id for the given request
          in: query
          name: state
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaGenerateTokenResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - callback
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1alpha/connectorPlatformRegions:enumerate:
    get:
      description: Enumerates the regions for which Connector Platform is provisioned.
      operationId: integrations.connectorPlatformRegions.enumerate
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaEnumerateConnectorPlatformRegionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - connectorPlatformRegions
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/{integrationVersion}:takeoverEditLock":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Clears the `locked_by` and `locked_at_timestamp`in the DRAFT version of this integration. It then performs the same action as the CreateDraftIntegrationVersion (i.e., copies the DRAFT version of the integration as a SNAPSHOT and then creates a new DRAFT version with the `locked_by` set to the `user_taking_over` and the `locked_at_timestamp` set to the current timestamp). Both the `locked_by` and `user_taking_over` are notified via email about the takeover. This RPC throws an exception if the integration is not in DRAFT status or if the `locked_by` and `locked_at_timestamp` fields are not set.The TakeoverEdit lock is treated the same as an edit of the integration, and hence shares ACLs with edit. Audit fields updated include last_modified_timestamp, last_modified_by.
      operationId: integrations.projects.locations.products.integrations.versions.takeoverEditLock
      parameters:
        - description: "Required. The version to take over edit lock. Format: projects/{project}/locations/{location}/integrations/{integration}/versions/{version}"
          in: path
          name: integrationVersion
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaTakeoverEditLockRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaTakeoverEditLockResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{name}":
    delete:
      description: Deletes an sfdc channel.
      operationId: integrations.projects.locations.sfdcInstances.sfdcChannels.delete
      parameters:
        - description: Required. The name that is associated with the SfdcChannel.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets an sfdc channel. If the channel doesn't exist, Code.NOT_FOUND exception will be thrown.
      operationId: integrations.projects.locations.sfdcInstances.sfdcChannels.get
      parameters:
        - description: Required. The name that is associated with the SfdcChannel.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaSfdcChannel"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates an sfdc channel. Updates the sfdc channel in spanner. Returns the sfdc channel.
      operationId: integrations.projects.locations.sfdcInstances.sfdcChannels.patch
      parameters:
        - description: Resource name of the SFDC channel projects/{project}/locations/{location}/sfdcInstances/{sfdc_instance}/sfdcChannels/{sfdc_channel}.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Field mask specifying the fields in the above SfdcChannel that have been modified and need to be updated.
          in: query
          name: updateMask
          schema:
            type: string
        - description: "'passphrase' should be left unset if private key is not encrypted. Note that 'passphrase' is not the password for web server, but an extra layer of security to protected private key."
          in: query
          name: clientCertificate.passphrase
          schema:
            type: string
        - description: The ssl certificate encoded in PEM format. This string must include the begin header and end footer lines. For example, -----BEGIN CERTIFICATE----- MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1 JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
          in: query
          name: clientCertificate.sslCertificate
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaSfdcChannel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaSfdcChannel"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{name}:archive":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Soft-deletes the integration. Changes the status of the integration to ARCHIVED. If the integration being ARCHIVED is tagged as "HEAD", the tag is removed from this snapshot and set to the previous non-ARCHIVED snapshot. The PUBLISH_REQUESTED, DUE_FOR_DELETION tags are removed too. This RPC throws an exception if the version being archived is DRAFT, and if the `locked_by` user is not the same as the user performing the Archive. Audit fields updated include last_modified_timestamp, last_modified_by. Any existing lock is released when Archiving a integration. Currently, there is no unarchive mechanism.
      operationId: integrations.projects.locations.products.integrations.versions.archive
      parameters:
        - description: "Required. The version to archive. Format: projects/{project}/locations/{location}/integrations/{integration}/versions/{version}"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{name}:archiveBundle":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: PROTECT WITH A VISIBILITY LABEL. THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. Soft-deletes the bundle.
      operationId: integrations.projects.locations.products.integrations.archiveBundle
      parameters:
        - description: "Required. The bundle to archive. Format: projects/{project}/locations/{location}/integrations/{integration}"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaArchiveBundleRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaArchiveBundleResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{name}:cancel":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Cancellation of an execution
      operationId: integrations.projects.locations.products.integrations.executions.cancel
      parameters:
        - description: "Required. The execution resource name. Format: projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integration_id}/executions/{execution_id}"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaCancelExecutionRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaCancelExecutionResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{name}:deactivate":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the status of the ACTIVE integration to SNAPSHOT with a new tag "PREVIOUSLY_PUBLISHED" after validating it. The "HEAD" and "PUBLISH_REQUESTED" tags do not change. This RPC throws an exception if the version being snapshot is not ACTIVE. Audit fields added include action, action_by, action_timestamp.
      operationId: integrations.projects.locations.products.integrations.versions.deactivate
      parameters:
        - description: "Required. The version to deactivate. Format: projects/{project}/locations/{location}/integrations/{integration}/versions/{version}"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{name}:download":
    get:
      description: Downloads an integration. Retrieves the `IntegrationVersion` for a given `integration_id` and returns the response as a string.
      operationId: integrations.projects.locations.products.integrations.versions.download
      parameters:
        - description: "Required. The version to download. Format: projects/{project}/locations/{location}/integrations/{integration}/versions/{version}"
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: File format for download request.
          in: query
          name: fileFormat
          schema:
            enum:
              - FILE_FORMAT_UNSPECIFIED
              - JSON
              - YAML
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaDownloadIntegrationVersionResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/{name}:execute":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Executes integrations synchronously by passing the trigger id in the request body. The request is not returned until the requested executions are either fulfilled or experienced an error. If the integration name is not specified (passing `-`), all of the associated integration under the given trigger_id will be executed. Otherwise only the specified integration for the given `trigger_id` is executed. This is helpful for execution the integration from UI.
      operationId: integrations.projects.locations.products.integrations.execute
      parameters:
        - description: Required. The integration resource name.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaExecuteIntegrationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{name}:getBundle":
    get:
      description: PROTECT WITH A VISIBILITY LABEL. THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. RPC to get details of the Bundle
      operationId: integrations.projects.locations.products.integrations.versions.getBundle
      parameters:
        - description: Required. The bundle name.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaGetBundleResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/{name}:lift":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "* Lifts suspension for advanced suspension task. Fetch corresponding suspension with provided suspension Id, resolve suspension, and set up suspension result for the Suspension Task."
      operationId: integrations.projects.locations.products.integrations.executions.suspensions.lift
      parameters:
        - description: Required. The resource that the suspension belongs to. "projects/{project}/locations/{location}/products/{product}/integrations/{integration}/executions/{execution}/suspensions/{suspenion}" format.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaLiftSuspensionRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaLiftSuspensionResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{name}:publish":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: This RPC throws an exception if the integration is in ARCHIVED or ACTIVE state. This RPC throws an exception if the version being published is DRAFT, and if the `locked_by` user is not the same as the user performing the Publish. Audit fields updated include last_published_timestamp, last_published_by, last_modified_timestamp, last_modified_by. Any existing lock is on this integration is released.
      operationId: integrations.projects.locations.products.integrations.versions.publish
      parameters:
        - description: "Required. The version to publish. Format: projects/{project}/locations/{location}/integrations/{integration}/versions/{version}"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaPublishIntegrationVersionRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaPublishIntegrationVersionResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{name}:resolve":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "* Resolves (lifts/rejects) any number of suspensions. If the integration is already running, only the status of the suspension is updated. Otherwise, the suspended integration will begin execution again."
      operationId: integrations.projects.locations.products.integrations.executions.suspensions.resolve
      parameters:
        - description: Required. projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integration_name}/executions/{execution_name}/suspensions/{suspension_id}
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaResolveSuspensionRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaResolveSuspensionResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{name}:schedule":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Schedules an integration for execution by passing the trigger id and the scheduled time in the request body.
      operationId: integrations.projects.locations.products.integrations.schedule
      parameters:
        - description: The integration resource name.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaScheduleIntegrationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{name}:updateBundle":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. RPC to update the Bundle
      operationId: integrations.projects.locations.products.integrations.versions.updateBundle
      parameters:
        - description: Required. Bundle name
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaUpdateBundleRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaUpdateBundleResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{name}:validate":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Validates the given integration. If the id doesn't exist, a NotFoundException is thrown. If validation fails a CanonicalCodeException is thrown. If there was no failure an empty response is returned.
      operationId: integrations.projects.locations.products.integrations.versions.validate
      parameters:
        - description: "Required. The version to validate. Format: projects/{project}/locations/{location}/integrations/{integration}/versions/{version}"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaValidateIntegrationVersionRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaValidateIntegrationVersionResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{parent}/appsScriptProjects":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an Apps Script project.
      operationId: integrations.projects.locations.appsScriptProjects.create
      parameters:
        - description: Required. The project that the executed integration belongs to.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{parent}/appsScriptProjects:link":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Links a existing Apps Script project.
      operationId: integrations.projects.locations.appsScriptProjects.link
      parameters:
        - description: Required. The project that the executed integration belongs to.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{parent}/authConfigs":
    get:
      description: Lists all auth configs that match the filter. Restrict to auth configs belong to the current client only.
      operationId: integrations.projects.locations.products.authConfigs.list
      parameters:
        - description: Required. The client, which owns this collection of AuthConfigs.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filtering as supported in https://developers.google.com/authorized-buyers/apis/guides/v2/list-filters.
          in: query
          name: filter
          schema:
            type: string
        - description: The size of entries in the response. If unspecified, defaults to 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The token returned in the previous response.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The mask which specifies fields that need to be returned in the AuthConfig's response.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaListAuthConfigsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an auth config record. Fetch corresponding credentials for specific auth types, e.g. access token for OAuth 2.0, JWT token for JWT. Encrypt the auth config with Cloud KMS and store the encrypted credentials in Spanner. Returns the encrypted auth config.
      operationId: integrations.projects.locations.products.authConfigs.create
      parameters:
        - description: Required. "projects/{project}/locations/{location}" format.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The ssl certificate encoded in PEM format. This string must include the begin header and end footer lines. For example, -----BEGIN CERTIFICATE----- MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1 JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
          in: query
          name: clientCertificate.encryptedPrivateKey
          schema:
            type: string
        - description: "'passphrase' should be left unset if private key is not encrypted. Note that 'passphrase' is not the password for web server, but an extra layer of security to protected private key."
          in: query
          name: clientCertificate.passphrase
          schema:
            type: string
        - description: The ssl certificate encoded in PEM format. This string must include the begin header and end footer lines. For example, -----BEGIN CERTIFICATE----- MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1 JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
          in: query
          name: clientCertificate.sslCertificate
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaAuthConfig"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaAuthConfig"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{parent}/certificates":
    get:
      description: List all the certificates that match the filter. Restrict to certificate of current client only.
      operationId: integrations.projects.locations.products.certificates.list
      parameters:
        - description: Required. The client, which owns this collection of Certificates.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filtering as supported in https://developers.google.com/authorized-buyers/apis/guides/v2/list-filters.
          in: query
          name: filter
          schema:
            type: string
        - description: The size of entries in the response. If unspecified, defaults to 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The token returned in the previous response.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The mask which specifies fields that need to be returned in the Certificate's response.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaListCertificatesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new certificate. The certificate will be registered to the trawler service and will be encrypted using cloud KMS and stored in Spanner Returns the certificate.
      operationId: integrations.projects.locations.products.certificates.create
      parameters:
        - description: Required. "projects/{project}/locations/{location}" format.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaCertificate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaCertificate"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{parent}/connections":
    get:
      description: Lists Connections in a given project and location.
      operationId: integrations.projects.locations.connections.list
      parameters:
        - description: "Required. Parent resource of the Connection, of the form: `projects/*/locations/*`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filter.
          in: query
          name: filter
          schema:
            type: string
        - description: Order by parameters.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaListConnectionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/{parent}/executions":
    get:
      description: Lists the status of the integration executions.
      operationId: integrations.projects.locations.products.integrations.executions.list
      parameters:
        - description: Required. The parent resource name of the integration execution.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'Optional. Standard filter field, we support filtering on all fields in EventExecutionParamIndexes table. All fields support for EQUALS, in additional: CreateTimestamp support for LESS_THAN, GREATER_THAN ParameterKey, ParameterValue, ParameterType support for HAS For example: "parameter_value" HAS \"parameter1\" Also supports operators like AND, OR, NOT For example, trigger_id=\"id1\" AND event_execution_state=\"FAILED\"'
          in: query
          name: filter
          schema:
            type: string
        - description: Optional user-provided custom filter.
          in: query
          name: filterParams.customFilter
          schema:
            type: string
        - description: End timestamp.
          in: query
          name: filterParams.endTime
          schema:
            type: string
        - description: List of possible event statuses.
          explode: true
          in: query
          name: filterParams.eventStatuses
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Execution id.
          in: query
          name: filterParams.executionId
          schema:
            type: string
        - description: Param key. DEPRECATED. User parameter_pair_key instead.
          in: query
          name: filterParams.parameterKey
          schema:
            type: string
        - description: Param key in the key value pair filter.
          in: query
          name: filterParams.parameterPairKey
          schema:
            type: string
        - description: Param value in the key value pair filter.
          in: query
          name: filterParams.parameterPairValue
          schema:
            type: string
        - description: Param type.
          in: query
          name: filterParams.parameterType
          schema:
            type: string
        - description: Param value. DEPRECATED. User parameter_pair_value instead.
          in: query
          name: filterParams.parameterValue
          schema:
            type: string
        - description: Start timestamp.
          in: query
          name: filterParams.startTime
          schema:
            type: string
        - description: List of possible task statuses.
          explode: true
          in: query
          name: filterParams.taskStatuses
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Workflow name.
          in: query
          name: filterParams.workflowName
          schema:
            type: string
        - description: Optional. The results would be returned in order you specified here. Currently supporting "last_modified_time" and "create_time".
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. The size of entries in the response.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The token returned in the previous response.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Optional. View mask for the response data. If set, only the field specified will be returned as part of the result. If not set, all fields in event execution info will be filled and returned.
          in: query
          name: readMask
          schema:
            type: string
        - description: Optional. If true, the service will use the most recent acl information to list event execution infos and renew the acl cache. Note that fetching the most recent acl is synchronous, so it will increase RPC call latency.
          in: query
          name: refreshAcl
          schema:
            type: boolean
        - description: Optional. If true, the service will truncate the params to only keep the first 1000 characters of string params and empty the executions in order to make response smaller. Only works for UI and when the params fields are not filtered out.
          in: query
          name: truncateParams
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaListExecutionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/{parent}/executionsnapshots":
    get:
      description: Lists the snapshots of a given integration executions. This RPC is not being used.
      operationId: integrations.projects.locations.products.integrations.executionsnapshots.list
      parameters:
        - description: Required. The parent resource name of the integration execution.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Currently supports filter by `execution_info_id` or `execution_snapshot_id`.
          in: query
          name: filter
          schema:
            type: string
        - description: Number of entries to be returned in a page.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The token used to retrieve the next page results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: View mask for the response data. If set, only the field specified will be returned as part of the result. If not set, all fields in event execution snapshot will be filled and returned.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaListExecutionSnapshotsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/{parent}/integrations":
    get:
      description: Returns the list of all integrations in the specified project.
      operationId: integrations.projects.locations.products.integrations.list
      parameters:
        - description: "Required. Project and location from which the integrations should be listed. Format: projects/{project}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filter on fields of IntegrationVersion. Fields can be compared with literal values by use of ":" (containment), "=" (equality), ">" (greater), "<" (less than), >=" (greater than or equal to), "<=" (less than or equal to), and "!=" (inequality) operators. Negation, conjunction, and disjunction are written using NOT, AND, and OR keywords. For example, organization_id=\"1\" AND state=ACTIVE AND description:"test". Filtering cannot be performed on repeated fields like `task_config`.
          in: query
          name: filter
          schema:
            type: string
        - description: 'The results would be returned in order you specified here. Supported sort keys are: Descending sort order by "last_modified_time", "created_time", "snapshot_number". Ascending sort order by the integration name.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: The page size for the resquest.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The page token for the resquest.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaListIntegrationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/{parent}/runtimeActionSchemas":
    get:
      description: Lists the JSON schemas for the inputs and outputs of actions, filtered by action name.
      operationId: integrations.projects.locations.connections.runtimeActionSchemas.list
      parameters:
        - description: "Required. Parent resource of RuntimeActionSchema. Format: projects/{project}/locations/{location}/connections/{connection}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filter. Only the action field with literal equality operator is supported.
          in: query
          name: filter
          schema:
            type: string
        - description: Page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaListRuntimeActionSchemasResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/{parent}/runtimeEntitySchemas":
    get:
      description: Lists the JSON schemas for the properties of runtime entities, filtered by entity name.
      operationId: integrations.projects.locations.connections.runtimeEntitySchemas.list
      parameters:
        - description: "Required. Parent resource of RuntimeEntitySchema. Format: projects/{project}/locations/{location}/connections/{connection}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filter. Only the entity field with literal equality operator is supported.
          in: query
          name: filter
          schema:
            type: string
        - description: Page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaListRuntimeEntitySchemasResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/{parent}/sfdcChannels":
    get:
      description: Lists all sfdc channels that match the filter. Restrict to sfdc channels belonging to the current client only.
      operationId: integrations.projects.locations.sfdcInstances.sfdcChannels.list
      parameters:
        - description: Required. The client, which owns this collection of SfdcChannels.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filtering as supported in https://developers.google.com/authorized-buyers/apis/guides/v2/list-filters.
          in: query
          name: filter
          schema:
            type: string
        - description: The size of entries in the response. If unspecified, defaults to 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The token returned in the previous response.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The mask which specifies fields that need to be returned in the SfdcChannel's response.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaListSfdcChannelsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an sfdc channel record. Store the sfdc channel in Spanner. Returns the sfdc channel.
      operationId: integrations.projects.locations.sfdcInstances.sfdcChannels.create
      parameters:
        - description: Required. "projects/{project}/locations/{location}" format.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaSfdcChannel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaSfdcChannel"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{parent}/sfdcInstances":
    get:
      description: Lists all sfdc instances that match the filter. Restrict to sfdc instances belonging to the current client only.
      operationId: integrations.projects.locations.sfdcInstances.list
      parameters:
        - description: Required. The client, which owns this collection of SfdcInstances.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filtering as supported in https://developers.google.com/authorized-buyers/apis/guides/v2/list-filters.
          in: query
          name: filter
          schema:
            type: string
        - description: The size of entries in the response. If unspecified, defaults to 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The token returned in the previous response.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The mask which specifies fields that need to be returned in the SfdcInstance's response.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaListSfdcInstancesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an sfdc instance record. Store the sfdc instance in Spanner. Returns the sfdc instance.
      operationId: integrations.projects.locations.sfdcInstances.create
      parameters:
        - description: Required. "projects/{project}/locations/{location}" format.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaSfdcInstance"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaSfdcInstance"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{parent}/suspensions":
    get:
      description: "* Lists suspensions associated with a specific execution. Only those with permissions to resolve the relevant suspensions will be able to view them."
      operationId: integrations.projects.locations.products.integrations.executions.suspensions.list
      parameters:
        - description: Required. projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integration_name}/executions/{execution_name}
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Standard filter field.
          in: query
          name: filter
          schema:
            type: string
        - description: Field name to order by.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Maximum number of entries in the response.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Token to retrieve a specific page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaListSuspensionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/{parent}/versions":
    get:
      description: Returns the list of all IntegrationTemplateVersions in the specified project.
      operationId: integrations.projects.locations.products.integrationtemplates.versions.list
      parameters:
        - description: "Required. Format: projects/{project}/location/{location}/product/{product}/integrationtemplates/{integrationtemplate}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Filter syntax: defined in the EBNF grammar."
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of IntegrationTemplateVersions to return. The service may return fewer than this value. If unspecified, at most 50 versions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListIntegrationTemplateVersions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListIntegrationTemplateVersions` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaListIntegrationTemplateVersionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an IntegrationTemplateVersion.
      operationId: integrations.projects.locations.products.integrationtemplates.versions.create
      parameters:
        - description: "Required. The parent resource where this TemplateVersion will be created. Format: projects/{project}/location/{location}/product/{product}/integrationtemplates/{integrationtemplate}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Set this flag to true, if draft version is to be created for a brand new integration. False, if the request is for an existing integration. For backward compatibility reasons, even if this flag is set to `false` and no existing integration is found, a new draft integration will still be created.
          in: query
          name: newIntegration
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{parent}/versions:upload":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Uploads an integration. The content can be a previously downloaded integration. Performs the same function as CreateDraftIntegrationVersion, but accepts input in a string format, which holds the complete representation of the IntegrationVersion content.
      operationId: integrations.projects.locations.products.integrations.versions.upload
      parameters:
        - description: "Required. The version to upload. Format: projects/{project}/locations/{location}/integrations/{integration}"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaUploadIntegrationVersionResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{parent}:createBundle":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: PROTECT WITH A VISIBILITY LABEL. THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. Create a bundle.
      operationId: integrations.projects.locations.products.createBundle
      parameters:
        - description: Required. The location resource of the request.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaCreateBundleRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaCreateBundleResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1alpha/{parent}:listTaskEntities":
    get:
      description: This is a UI only method and will be moved away. Returns a list of common tasks.
      operationId: integrations.projects.locations.products.listTaskEntities
      parameters:
        - description: Required. The location resource of the request. This is not going to be used but preserve the field for future.
          in: path
          name: parent
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaListTaskEntitiesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/{parent}:monitorexecutionstats":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Get execution stats
      operationId: integrations.projects.locations.products.integrations.monitorexecutionstats
      parameters:
        - description: "Required. The parent resource name: {parent=projects/*/locations/*}."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaMonitorExecutionStatsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    CrmlogErrorCode:
      description: Registered ids for errors, as "oneof" enums. Each task or logical grouping of tasks may share the same enum.
      properties:
        commonErrorCode:
          enum:
            - COMMON_ERROR_CODE_UNSPECIFIED
            - INVALID_CREDENTIALS
            - REQUIRED_FIELDS_MISSING
            - INVALID_FIELDS
            - BACKEND
            - GENERAL
            - INTERNAL
            - IO_ERROR
            - NOT_FOUND
            - EVENT_BUS
            - ALREADY_EXISTS
            - CONCORD
            - CONVERSION
            - FLUME
            - PERMISSION
            - SALES_FORCE
            - SPANNER
            - UNIMPLEMENTED
            - RELTIO
            - WORKFLOW_NOT_FOUND
            - QUOTA_THROTTLED
            - QUOTA_ENQUEUED
            - INVALID_QUOTA_CONFIGURATION
            - TASK_NOT_FOUND
            - EXECUTION_TIMEOUT
            - INVALID_EVENT_EXECUTION_STATE
            - INVALID_ATTRIBUTE
            - MISSING_ATTRIBUTE
            - CLIENT_UNAUTHORIZED_FOR_WORKFLOW
            - INVALID_PARAMETER
            - MISSING_PARAMETER
            - UNAUTHROIZED_WORKFLOW_EDITOR_ACTION
            - FAILED_PRECONDITION
            - INVALID_CLIENT
            - MISSING_CLIENT
            - INVALID_WORKFLOW
            - MISSING_QUOTA_CONFIGURATION
            - UNHANDLED_TASK_ERROR
            - SCRIPT_TASK_RUNTIME_ERROR
            - RPC
            - INVALID_PROTO
            - UNHANDLED_EVENTBUS_ERROR
            - INVALID_TASK_STATE
            - TYPED_TASK_INVALID_INPUT_OPERATION
            - TYPED_TASK_INVALID_OUTPUT_OPERATION
            - VALIDATION_ERROR
            - RESUME_ERROR
            - APPS_SCRIPT_EXECUTION_ERROR
            - INVALID_VECTOR_USER
            - INFORMATICA
            - RETRYABLE_TASK_ERROR
            - INVALID_TENANT
            - WRONG_TENANT
            - INFORMATICA_BACKEND_UNAVAILABLE
            - RPC_PERMISSION_DENIED
            - SYNC_EVENTBUS_EXECUTION_TIMEOUT
            - ASYNC_EVENTBUS_EXECUTION_TIMEOUT
            - NOT_SUPPORTED_DATA_TYPE
            - UNSANITIZED_USER_INPUT
            - TRANSFORM_EXPRESSION_EVALUATION_ERROR
            - HTTP_EXCEPTION
            - EXECUTION_CANCELLED
          type: string
      type: object
    EnterpriseCrmCardsCellValue:
      properties:
        booleanValue:
          type: boolean
        doubleValue:
          format: double
          type: number
        empty:
          $ref: "#/components/schemas/GoogleProtobufEmpty"
        longValue:
          format: int64
          type: string
        stringValue:
          type: string
      type: object
    EnterpriseCrmCardsRow:
      properties:
        cells:
          description: Ordered list of cell values within a row.
          items:
            $ref: "#/components/schemas/EnterpriseCrmCardsCellValue"
          type: array
      type: object
    EnterpriseCrmCardsTabularData:
      description: The generic data format returned from all connectors.
      properties:
        headers:
          description: Ordered list of column headers.
          items:
            type: string
          type: array
        rows:
          description: Ordered list of table rows.
          items:
            $ref: "#/components/schemas/EnterpriseCrmCardsRow"
          type: array
      type: object
    EnterpriseCrmCardsTemplatesAplosSeriesData:
      description: Data used to render an Aplos Series card.
      properties:
        rows:
          description: A single Series Row
          items:
            $ref: "#/components/schemas/EnterpriseCrmCardsTemplatesAplosSeriesDataRow"
          type: array
      type: object
    EnterpriseCrmCardsTemplatesAplosSeriesDataRow:
      description: Aplos series row is exactly two columns labeled x and y.
      properties:
        x:
          $ref: "#/components/schemas/EnterpriseCrmCardsCellValue"
        y:
          $ref: "#/components/schemas/EnterpriseCrmCardsCellValue"
      type: object
    EnterpriseCrmCardsTemplatesAplosSeriesListData:
      description: Data used for Aplos charts that accept multiple Series.
      properties:
        series:
          items:
            $ref: "#/components/schemas/EnterpriseCrmCardsTemplatesAplosSeriesListDataSeries"
          type: array
      type: object
    EnterpriseCrmCardsTemplatesAplosSeriesListDataSeries:
      properties:
        data:
          $ref: "#/components/schemas/EnterpriseCrmCardsTemplatesAplosSeriesData"
        name:
          type: string
      type: object
    EnterpriseCrmEventbusAuthconfigAuthConfigTaskParam:
      properties:
        allowedCredentialTypes:
          description: Defines the credential types to be supported as Task may restrict specific types to use, e.g. Cloud SQL Task will use username/password type only.
          items:
            enum:
              - CREDENTIAL_TYPE_UNSPECIFIED
              - USERNAME_AND_PASSWORD
              - API_KEY
              - OAUTH2_AUTHORIZATION_CODE
              - OAUTH2_IMPLICIT
              - OAUTH2_CLIENT_CREDENTIALS
              - OAUTH2_RESOURCE_OWNER_CREDENTIALS
              - JWT
              - AUTH_TOKEN
              - SERVICE_ACCOUNT
              - CLIENT_CERTIFICATE_ONLY
              - OIDC_TOKEN
            type: string
          type: array
        allowedServiceAccountInContext:
          type: boolean
        authConfigId:
          description: UUID of the AuthConfig.
          type: string
        scope:
          description: A space-delimited list of requested scope permissions.
          type: string
        useServiceAccountInContext:
          type: boolean
      type: object
    EnterpriseCrmEventbusProtoAddress:
      description: Email address along with optional name and tokens. These tokens will be substituted for the variables in the form of [{var_name}], where var_name could be any string of no more than 32 bytes.
      properties:
        email:
          description: Required.
          type: string
        name:
          type: string
        tokens:
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoToken"
          type: array
      type: object
    EnterpriseCrmEventbusProtoAttributes:
      description: "Attributes are additional options that can be associated with each event property. For more information, see go/integration-platform/event_bus/attributes_registry.md. Next available: 8"
      properties:
        dataType:
          description: Things like URL, Email, Currency, Timestamp (rather than string, int64...)
          enum:
            - DATA_TYPE_UNSPECIFIED
            - EMAIL
            - URL
            - CURRENCY
            - TIMESTAMP
            - DOMAIN_NAME
          type: string
        defaultValue:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoValueType"
          description: Used to define defaults.
        isRequired:
          description: Required for event execution. The validation will be done by the event bus when the event is triggered.
          type: boolean
        isSearchable:
          description: "Used to indicate if a ParameterEntry should be converted to ParamIndexes for ST-Spanner full-text search. DEPRECATED: use searchable."
          type: boolean
        logSettings:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoLogSettings"
          description: See go/integration-platform/analytics/logging_task.md for details.
        searchable:
          enum:
            - UNSPECIFIED
            - YES
            - NO
          type: string
        taskVisibility:
          description: List of tasks that can view this property, if empty then all.
          items:
            type: string
          type: array
      type: object
    EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList:
      description: List of error enums for alerts.
      properties:
        enumStrings:
          items:
            type: string
          type: array
        filterType:
          enum:
            - DEFAULT_INCLUSIVE
            - EXCLUSIVE
          type: string
      type: object
    EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValue:
      description: The threshold value of the metric, above or below which the alert should be triggered. See EventAlertConfig or TaskAlertConfig for the different alert metric types in each case. For the *RATE metrics, one or both of these fields may be set. Zero is the default value and can be left at that. For *PERCENTILE_DURATION metrics, one or both of these fields may be set, and also, the duration threshold value should be specified in the threshold_duration_ms member below. For *AVERAGE_DURATION metrics, these fields should not be set at all. A different member, threshold_duration_ms, must be set in the EventAlertConfig or the TaskAlertConfig. See go/eventbus-alert-config-examples
      properties:
        absolute:
          format: int64
          type: string
        percentage:
          format: int32
          type: integer
      type: object
    EnterpriseCrmEventbusProtoBaseFunction:
      properties:
        functionName:
          enum:
            - UNSPECIFIED
            - NOW_IN_MILLIS
            - INT_LIST
            - ENVIRONMENT
            - GET_EXECUTION_ID
            - GET_INTEGRATION_NAME
            - GET_REGION
            - GET_UUID
            - GET_PROJECT_ID
          type: string
      type: object
    EnterpriseCrmEventbusProtoBaseValue:
      properties:
        baseFunction:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoFunction"
          description: Start with a function that does not build on existing values. Eg. CurrentTime, Min, Max, Exists, etc.
        literalValue:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoParameterValueType"
          description: Start with a literal value.
        referenceValue:
          description: Start with a reference value to dereference.
          type: string
      type: object
    EnterpriseCrmEventbusProtoBooleanArrayFunction:
      properties:
        functionName:
          enum:
            - UNSPECIFIED
            - GET
            - APPEND
            - SIZE
            - TO_SET
            - APPEND_ALL
            - TO_JSON
            - SET
            - REMOVE
            - REMOVE_AT
            - CONTAINS
            - FOR_EACH
            - FILTER
          type: string
      type: object
    EnterpriseCrmEventbusProtoBooleanFunction:
      properties:
        functionName:
          enum:
            - UNSPECIFIED
            - TO_JSON
            - NOT
            - AND
            - NAND
            - OR
            - XOR
            - NOR
            - XNOR
            - TO_STRING
            - EQUALS
          type: string
      type: object
    EnterpriseCrmEventbusProtoBooleanParameterArray:
      properties:
        booleanValues:
          items:
            type: boolean
          type: array
      type: object
    EnterpriseCrmEventbusProtoBuganizerNotification:
      properties:
        assigneeEmailAddress:
          description: Whom to assign the new bug. Optional.
          type: string
        componentId:
          description: ID of the buganizer component within which to create a new issue. Required.
          format: int64
          type: string
        templateId:
          description: ID of the buganizer template to use. Optional.
          format: int64
          type: string
        title:
          description: Title of the issue to be created. Required.
          type: string
      type: object
    EnterpriseCrmEventbusProtoCloudSchedulerConfig:
      description: Cloud Scheduler Trigger configuration
      properties:
        cronTab:
          description: Required. The cron tab of cloud scheduler trigger.
          type: string
        errorMessage:
          description: Optional. When the job was deleted from Pantheon UI, error_message will be populated when Get/List integrations
          type: string
        location:
          description: Required. The location where associated cloud scheduler job will be created
          type: string
        serviceAccountEmail:
          description: Required. Service account used by Cloud Scheduler to trigger the integration at scheduled time
          type: string
      type: object
    EnterpriseCrmEventbusProtoCombinedCondition:
      description: This message recursively combines constituent conditions using logical AND.
      properties:
        conditions:
          description: A set of individual constituent conditions.
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoCondition"
          type: array
      type: object
    EnterpriseCrmEventbusProtoCondition:
      description: Condition that uses `operator` to evaluate the key against the value.
      properties:
        eventPropertyKey:
          description: Key that's evaluated against the `value`. Please note the data type of the runtime value associated with the key should match the data type of `value`, else an IllegalArgumentException is thrown.
          type: string
        operator:
          description: Operator used to evaluate the condition. Please note that an operator with an inappropriate key/value operand will result in IllegalArgumentException, e.g. CONTAINS with boolean key/value pair.
          enum:
            - UNSET
            - EQUALS
            - CONTAINS
            - LESS_THAN
            - GREATER_THAN
            - EXISTS
            - DOES_NOT_EXIST
            - IS_EMPTY
            - IS_NOT_EMPTY
          type: string
        value:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoValueType"
          description: Value that's checked for the key.
      type: object
    EnterpriseCrmEventbusProtoConditionResult:
      description: Contains the combined condition calculation results.
      properties:
        currentTaskNumber:
          description: the current task number.
          type: string
        nextTaskNumber:
          description: the next task number.
          type: string
        result:
          description: the result comes out after evaluate the combined condition. True if there's no combined condition specified.
          type: boolean
      type: object
    EnterpriseCrmEventbusProtoConnectorsConnection:
      properties:
        connectionName:
          description: "Connection name Format: projects/{project}/locations/{location}/connections/{connection}"
          type: string
        connectorVersion:
          description: "Connector version Format: projects/{project}/locations/{location}/providers/{provider}/connectors/{connector}/versions/{version}"
          type: string
        serviceName:
          description: "Service name Format: projects/{project}/locations/{location}/namespaces/{namespace}/services/{service}"
          type: string
      type: object
    EnterpriseCrmEventbusProtoConnectorsGenericConnectorTaskConfig:
      properties:
        connection:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoConnectorsConnection"
          description: User-selected connection.
        operation:
          description: Operation to perform using the configured connection.
          enum:
            - OPERATION_UNSPECIFIED
            - EXECUTE_ACTION
            - LIST_ENTITIES
            - GET_ENTITY
            - CREATE_ENTITY
            - UPDATE_ENTITY
            - DELETE_ENTITY
          type: string
      type: object
    EnterpriseCrmEventbusProtoCoordinate:
      description: Represents two-dimensional positions.
      properties:
        x:
          format: int32
          type: integer
        y:
          format: int32
          type: integer
      type: object
    EnterpriseCrmEventbusProtoCustomSuspensionRequest:
      properties:
        postToQueueWithTriggerIdRequest:
          $ref: "#/components/schemas/GoogleInternalCloudCrmEventbusV3PostToQueueWithTriggerIdRequest"
          description: Request to fire an event containing the SuspensionInfo message.
        suspensionInfoEventParameterKey:
          description: In the fired event, set the SuspensionInfo message as the value for this key.
          type: string
      type: object
    EnterpriseCrmEventbusProtoDoubleArray:
      properties:
        values:
          items:
            format: double
            type: number
          type: array
      type: object
    EnterpriseCrmEventbusProtoDoubleArrayFunction:
      properties:
        functionName:
          enum:
            - UNSPECIFIED
            - GET
            - APPEND
            - SIZE
            - SUM
            - AVG
            - MAX
            - MIN
            - TO_SET
            - APPEND_ALL
            - TO_JSON
            - SET
            - REMOVE
            - REMOVE_AT
            - CONTAINS
            - FOR_EACH
            - FILTER
          type: string
      type: object
    EnterpriseCrmEventbusProtoDoubleFunction:
      properties:
        functionName:
          enum:
            - UNSPECIFIED
            - TO_JSON
            - TO_STRING
            - ADD
            - SUBTRACT
            - MULTIPLY
            - DIVIDE
            - EXPONENT
            - ROUND
            - FLOOR
            - CEIL
            - GREATER_THAN
            - LESS_THAN
            - EQUALS
            - GREATER_THAN_EQUALS
            - LESS_THAN_EQUALS
            - MOD
          type: string
      type: object
    EnterpriseCrmEventbusProtoDoubleParameterArray:
      properties:
        doubleValues:
          items:
            format: double
            type: number
          type: array
      type: object
    EnterpriseCrmEventbusProtoErrorDetail:
      description: An error, warning, or information message associated with a workflow.
      properties:
        errorCode:
          $ref: "#/components/schemas/CrmlogErrorCode"
          description: The associated error-code, which can be a common or internal code.
        errorMessage:
          description: The full text of the error message, including any parameters that were thrown along with the exception.
          type: string
        severity:
          description: "The severity of the error: ERROR|WARN|INFO."
          enum:
            - SEVERITY_UNSPECIFIED
            - ERROR
            - WARN
            - INFO
          type: string
        taskNumber:
          description: The task try-number, in which, the error occurred. If zero, the error happened at the event level.
          format: int32
          type: integer
      type: object
    EnterpriseCrmEventbusProtoEventBusProperties:
      description: LINT.IfChange This message is used for storing key value pair properties for each Event / Task in the EventBus. Please see go/cloud-crm-eng/platform/event_bus.md for more details.
      properties:
        properties:
          description: An unordered list of property entries.
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoPropertyEntry"
          type: array
      type: object
    EnterpriseCrmEventbusProtoEventExecutionDetails:
      description: "Contains the details of the execution info of this event: this includes the tasks execution details plus the event execution statistics. Next available id: 10"
      properties:
        eventAttemptStats:
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoEventExecutionDetailsEventAttemptStats"
          type: array
        eventExecutionSnapshot:
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoEventExecutionSnapshot"
          type: array
        eventExecutionState:
          enum:
            - UNSPECIFIED
            - ON_HOLD
            - IN_PROCESS
            - SUCCEEDED
            - FAILED
            - CANCELED
            - RETRY_ON_HOLD
            - SUSPENDED
          type: string
        eventRetriesFromBeginningCount:
          description: Indicates the number of times the execution has restarted from the beginning.
          format: int32
          type: integer
        logFilePath:
          description: The log file path (aka. cns address) for this event.
          type: string
        networkAddress:
          description: The network address (aka. bns address) that indicates where the event executor is running.
          type: string
        nextExecutionTime:
          description: Next scheduled execution time in case the execution status was RETRY_ON_HOLD.
          format: int64
          type: string
        ryeLockUnheldCount:
          description: Used internally and shouldn't be exposed to users. A counter for the cron job to record how many times this event is in in_process state but don't have a lock consecutively/
          format: int32
          type: integer
      type: object
    EnterpriseCrmEventbusProtoEventExecutionDetailsEventAttemptStats:
      properties:
        endTime:
          description: The end time of the event execution for current attempt.
          format: int64
          type: string
        startTime:
          description: The start time of the event execution for current attempt. This could be in the future if it's been scheduled.
          format: int64
          type: string
      type: object
    EnterpriseCrmEventbusProtoEventExecutionSnapshot:
      description: "Contains the snapshot of the event execution for a given checkpoint. Next available id: 13"
      properties:
        checkpointTaskNumber:
          description: Indicates "right after which checkpoint task's execution" this snapshot is taken.
          type: string
        conditionResults:
          description: All of the computed conditions that been calculated.
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoConditionResult"
          type: array
        diffParams:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoEventParameters"
          description: The parameters in Event object that differs from last snapshot.
        eventExecutionInfoId:
          description: Points to the event execution info this snapshot belongs to.
          type: string
        eventExecutionSnapshotId:
          description: Auto-generated. Used as primary key for EventExecutionSnapshots table.
          type: string
        eventExecutionSnapshotMetadata:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata"
        eventParams:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoEventParameters"
          description: The parameters in Event object.
        exceedMaxSize:
          description: indicate whether snapshot exceeded maximum size before clean up
          type: boolean
        snapshotTime:
          description: Indicates when this snapshot is taken.
          format: int64
          type: string
        taskExecutionDetails:
          description: All of the task execution details at the given point of time.
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoTaskExecutionDetails"
          type: array
        taskName:
          description: The task name associated with this snapshot. Could be empty.
          type: string
      type: object
    EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata:
      properties:
        eventAttemptNum:
          description: the event attempt number this snapshot belongs to.
          format: int32
          type: integer
        taskAttemptNum:
          description: the task attempt number this snapshot belongs to. Could be empty.
          format: int32
          type: integer
        taskName:
          description: the task name associated with this snapshot. Could be empty.
          type: string
        taskNumber:
          description: The task number associated with this snapshot. Could be empty.
          type: string
      type: object
    EnterpriseCrmEventbusProtoEventParameters:
      description: "LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see go/integration-platform/event_bus.md for more details. Next id: 4"
      properties:
        parameters:
          description: Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoParameterEntry"
          type: array
      type: object
    EnterpriseCrmEventbusProtoExecutionTraceInfo:
      description: Message that helps aggregate all sub-executions triggered by one execution and keeps track of child-parent relationships.
      properties:
        parentEventExecutionInfoId:
          description: Parent event execution info id that triggers the current execution through SubWorkflowExecutorTask.
          type: string
        traceId:
          description: Used to aggregate ExecutionTraceInfo.
          type: string
      type: object
    EnterpriseCrmEventbusProtoExternalTraffic:
      description: Represents external traffic type and id.
      properties:
        gcpProjectId:
          description: User’s GCP project id the traffic is referring to.
          type: string
        gcpProjectNumber:
          description: User’s GCP project number the traffic is referring to.
          type: string
        location:
          description: Location for the user's request.
          type: string
        source:
          description: LINT.ThenChange(//depot/google3/enterprise/crm/eventbus/proto/product.proto:product, //depot/google3/java/com/google/enterprise/crm/integrationplatform/api/utils/ConverterUtils.java:source_to_product)
          enum:
            - SOURCE_UNSPECIFIED
            - APIGEE
            - SECURITY
          type: string
      type: object
    EnterpriseCrmEventbusProtoFailurePolicy:
      description: Policy that defines the task retry logic and failure type. If no FailurePolicy is defined for a task, all its dependent tasks will not be executed (i.e, a `retry_strategy` of NONE will be applied).
      properties:
        intervalInSeconds:
          description: Required if retry_strategy is FIXED_INTERVAL or LINEAR/EXPONENTIAL_BACKOFF/RESTART_WORKFLOW_WITH_BACKOFF. Defines the initial interval for backoff.
          format: int64
          type: string
        maxNumRetries:
          description: Required if retry_strategy is FIXED_INTERVAL or LINEAR/EXPONENTIAL_BACKOFF/RESTART_WORKFLOW_WITH_BACKOFF. Defines the number of times the task will be retried if failed.
          format: int32
          type: integer
        retryStrategy:
          description: Defines what happens to the task upon failure.
          enum:
            - UNSPECIFIED
            - IGNORE
            - NONE
            - FATAL
            - FIXED_INTERVAL
            - LINEAR_BACKOFF
            - EXPONENTIAL_BACKOFF
            - RESTART_WORKFLOW_WITH_BACKOFF
          type: string
      type: object
    EnterpriseCrmEventbusProtoField:
      description: "Information about the value and type of the field. Next Id: 8"
      properties:
        cardinality:
          description: By default, if the cardinality is unspecified the field is considered required while mapping.
          enum:
            - UNSPECIFIED
            - OPTIONAL
          type: string
        defaultValue:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoParameterValueType"
          description: This holds the default values for the fields. This value is supplied by user so may or may not contain PII or SPII data. This field will be scrubbed using DatapolScrubber#maybeScrub() with go/proto-sanitizer#level3
        fieldType:
          description: Specifies the data type of the field.
          enum:
            - DATA_TYPE_UNSPECIFIED
            - STRING_VALUE
            - INT_VALUE
            - DOUBLE_VALUE
            - BOOLEAN_VALUE
            - PROTO_VALUE
            - SERIALIZED_OBJECT_VALUE
            - STRING_ARRAY
            - INT_ARRAY
            - DOUBLE_ARRAY
            - PROTO_ARRAY
            - PROTO_ENUM
            - BOOLEAN_ARRAY
            - PROTO_ENUM_ARRAY
            - BYTES
            - BYTES_ARRAY
            - NON_SERIALIZABLE_OBJECT
            - JSON_VALUE
          type: string
        protoDefPath:
          description: Optional. The fully qualified proto name (e.g. enterprise.crm.storage.Account). Required for output field of type PROTO_VALUE or PROTO_ARRAY. For e.g., if input field_type is BYTES and output field_type is PROTO_VALUE, then fully qualified proto type url should be provided to parse the input bytes. If field_type is *_ARRAY, then all the converted protos are of the same type.
          type: string
        referenceKey:
          description: This holds the reference key of the workflow or task parameter. 1. Any workflow parameter, for e.g. $workflowParam1$. 2. Any task input or output parameter, for e.g. $task1_param1$. 3. Any workflow or task parameters with subfield references, for e.g., $task1_param1.employee.id$
          type: string
        transformExpression:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoTransformExpression"
          description: This is the transform expression to fetch the input field value. for e.g. $param1$.CONCAT('test'). See go/transform-functions-design for more details. Keep points - 1. Only input field can have a transform expression. 2. If a transform expression is provided, reference_key will be ignored. 3. If no value is returned after evaluation of transform expression, default_value can be mapped if provided. 4. The field_type should be the type of the final object returned after the transform expression is evaluated. Scrubs the transform expression before logging as value provided by user so may or may not contain PII or SPII data.
      type: object
    EnterpriseCrmEventbusProtoFieldMappingConfig:
      description: "Field Mapping Config to map multiple output fields values from input fields values. Next id: 2"
      properties:
        mappedFields:
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoMappedField"
          type: array
      type: object
    EnterpriseCrmEventbusProtoFunction:
      properties:
        functionType:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoFunctionType"
          description: The name of the function to perform.
        parameters:
          description: List of parameters required for the transformation.
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoTransformExpression"
          type: array
      type: object
    EnterpriseCrmEventbusProtoFunctionType:
      properties:
        baseFunction:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoBaseFunction"
          description: LINT.IfChange
        booleanArrayFunction:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoBooleanArrayFunction"
        booleanFunction:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoBooleanFunction"
        doubleArrayFunction:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoDoubleArrayFunction"
        doubleFunction:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoDoubleFunction"
        intArrayFunction:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoIntArrayFunction"
        intFunction:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoIntFunction"
        jsonFunction:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoJsonFunction"
          description: LINT.ThenChange(//depot/google3/alkali/apps/integrationplatform/client/workflow_editor/utils/transform_function.ts)
        protoArrayFunction:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoProtoArrayFunction"
        protoFunction:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoProtoFunction"
        stringArrayFunction:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoStringArrayFunction"
        stringFunction:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoStringFunction"
      type: object
    EnterpriseCrmEventbusProtoIntArray:
      properties:
        values:
          items:
            format: int64
            type: string
          type: array
      type: object
    EnterpriseCrmEventbusProtoIntArrayFunction:
      properties:
        functionName:
          enum:
            - UNSPECIFIED
            - GET
            - APPEND
            - SIZE
            - SUM
            - AVG
            - MAX
            - MIN
            - TO_SET
            - APPEND_ALL
            - TO_JSON
            - SET
            - REMOVE
            - REMOVE_AT
            - CONTAINS
            - FOR_EACH
            - FILTER
          type: string
      type: object
    EnterpriseCrmEventbusProtoIntFunction:
      properties:
        functionName:
          enum:
            - UNSPECIFIED
            - ADD
            - SUBTRACT
            - MULTIPLY
            - DIVIDE
            - EXPONENT
            - GREATER_THAN_EQUAL_TO
            - GREATER_THAN
            - LESS_THAN_EQUAL_TO
            - LESS_THAN
            - TO_DOUBLE
            - TO_STRING
            - EQUALS
            - TO_JSON
            - MOD
            - EPOCH_TO_HUMAN_READABLE_TIME
          type: string
      type: object
    EnterpriseCrmEventbusProtoIntParameterArray:
      properties:
        intValues:
          items:
            format: int64
            type: string
          type: array
      type: object
    EnterpriseCrmEventbusProtoJsonFunction:
      properties:
        functionName:
          enum:
            - UNSPECIFIED
            - GET_PROPERTY
            - GET_ELEMENT
            - APPEND_ELEMENT
            - SIZE
            - SET_PROPERTY
            - FLATTEN
            - FLATTEN_ONCE
            - MERGE
            - TO_STRING
            - TO_INT
            - TO_DOUBLE
            - TO_BOOLEAN
            - TO_PROTO
            - TO_STRING_ARRAY
            - TO_INT_ARRAY
            - TO_DOUBLE_ARRAY
            - TO_PROTO_ARRAY
            - TO_BOOLEAN_ARRAY
            - REMOVE_PROPERTY
            - RESOLVE_TEMPLATE
            - EQUALS
            - FOR_EACH
            - FILTER_ELEMENTS
          type: string
      type: object
    EnterpriseCrmEventbusProtoLogSettings:
      description: The LogSettings define the logging attributes for an event property. These attributes are used to map the property to the parameter in the log proto. Also used to define scrubbing/truncation behavior and PII information. See go/integration-platform/analytics/logging_task.md for details.
      properties:
        logFieldName:
          description: The name of corresponding logging field of the event property. If omitted, assumes the same name as the event property key.
          type: string
        sanitizeOptions:
          $ref: "#/components/schemas/EnterpriseCrmLoggingGwsSanitizeOptions"
          description: Contains the scrubbing options, such as whether to scrub, obfuscate, etc.
        seedPeriod:
          enum:
            - SEED_PERIOD_UNSPECIFIED
            - DAY
            - WEEK
            - MONTH
          type: string
        seedScope:
          enum:
            - SEED_SCOPE_UNSPECIFIED
            - EVENT_NAME
            - TIME_PERIOD
            - PARAM_NAME
          type: string
        shorteningLimits:
          $ref: "#/components/schemas/EnterpriseCrmLoggingGwsFieldLimits"
          description: Contains the field limits for shortening, such as max string length and max array length.
      type: object
    EnterpriseCrmEventbusProtoLoopMetadata:
      properties:
        currentIterationCount:
          description: Starting from 1, not 0.
          format: int64
          type: string
        currentIterationDetail:
          description: Needs to be set by the loop impl class before each iteration. The abstract loop class will append the request and response to it. Eg. The foreach Loop will clean up and set it as the current iteration element at the start of each loop. The post request and response will be appended to the value once they are available.
          type: string
        errorMsg:
          description: Add the error message when loops fail.
          type: string
        failureLocation:
          description: Indicates where in the loop logic did it error out.
          enum:
            - UNKNOWN
            - SUBWORKFLOW
            - PARAM_OVERRIDING
            - PARAM_AGGREGATING
            - SETTING_ITERATION_ELEMENT
            - GETTING_LIST_TO_ITERATE
            - CONDITION_EVALUATION
            - BUILDING_REQUEST
          type: string
      type: object
    EnterpriseCrmEventbusProtoMappedField:
      description: "Mapped field is a pair of input field and output field. Next Id: 3"
      properties:
        inputField:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoField"
          description: The input field being mapped from.
        outputField:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoField"
          description: The output field being mapped to.
      type: object
    EnterpriseCrmEventbusProtoNextTask:
      description: The task that is next in line to be executed, if the condition specified evaluated to true.
      properties:
        combinedConditions:
          description: "Combined condition for this task to become an eligible next task. Each of these combined_conditions are joined with logical OR. DEPRECATED: use `condition`"
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoCombinedCondition"
          type: array
        condition:
          description: Standard filter expression for this task to become an eligible next task.
          type: string
        description:
          description: User-provided description intended to give more business context about the next task edge or condition.
          type: string
        label:
          description: User-provided label that is attached to this edge in the UI.
          type: string
        taskConfigId:
          description: ID of the next task.
          type: string
        taskNumber:
          description: Task number of the next task.
          type: string
      type: object
    EnterpriseCrmEventbusProtoNextTeardownTask:
      description: The teardown task that is next in line to be executed. We support only sequential execution of teardown tasks (i.e. no branching).
      properties:
        name:
          description: Required. Name of the next teardown task.
          type: string
      type: object
    EnterpriseCrmEventbusProtoNodeIdentifier:
      description: "Represents a node identifier (type + id). Next highest id: 3"
      properties:
        elementIdentifier:
          description: Configuration of the edge.
          type: string
        elementType:
          description: Destination node where the edge ends. It can only be a task config.
          enum:
            - UNKNOWN_TYPE
            - TASK_CONFIG
            - TRIGGER_CONFIG
          type: string
      type: object
    EnterpriseCrmEventbusProtoNotification:
      properties:
        buganizerNotification:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoBuganizerNotification"
        emailAddress:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoAddress"
        escalatorQueue:
          type: string
        pubsubTopic:
          type: string
        request:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoCustomSuspensionRequest"
          description: If the out-of-the-box email/pubsub notifications are not suitable and custom logic is required, fire a workflow containing all info needed to notify users to resume execution.
      type: object
    EnterpriseCrmEventbusProtoParamSpecEntryConfig:
      properties:
        descriptivePhrase:
          description: A short phrase to describe what this parameter contains.
          type: string
        helpText:
          description: Detailed help text for this parameter containing information not provided elsewhere. For example, instructions on how to migrate from a deprecated parameter.
          type: string
        hideDefaultValue:
          description: Whether the default value is hidden in the UI.
          type: boolean
        inputDisplayOption:
          enum:
            - DEFAULT
            - STRING_MULTI_LINE
            - NUMBER_SLIDER
            - BOOLEAN_TOGGLE
          type: string
        isHidden:
          description: Whether this field is hidden in the UI.
          type: boolean
        label:
          description: A user-friendly label for the parameter.
          type: string
        parameterNameOption:
          enum:
            - DEFAULT_NOT_PARAMETER_NAME
            - IS_PARAMETER_NAME
            - KEY_IS_PARAMETER_NAME
            - VALUE_IS_PARAMETER_NAME
          type: string
        subSectionLabel:
          description: A user-friendly label for subSection under which the parameter will be displayed.
          type: string
        uiPlaceholderText:
          description: Placeholder text which will appear in the UI input form for this parameter.
          type: string
      type: object
    EnterpriseCrmEventbusProtoParamSpecEntryProtoDefinition:
      properties:
        fullName:
          description: The fully-qualified proto name. This message, for example, would be "enterprise.crm.eventbus.proto.ParamSpecEntry.ProtoDefinition".
          type: string
        path:
          description: Path to the proto file that contains the message type's definition.
          type: string
      type: object
    EnterpriseCrmEventbusProtoParamSpecEntryValidationRule:
      properties:
        doubleRange:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange"
        intRange:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleIntRange"
        stringRegex:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleStringRegex"
      type: object
    EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange:
      description: Range used to validate doubles and floats.
      properties:
        max:
          description: The inclusive maximum of the acceptable range.
          format: double
          type: number
        min:
          description: The inclusive minimum of the acceptable range.
          format: double
          type: number
      type: object
    EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleIntRange:
      description: Range used to validate longs and ints.
      properties:
        max:
          description: The inclusive maximum of the acceptable range.
          format: int64
          type: string
        min:
          description: The inclusive minimum of the acceptable range.
          format: int64
          type: string
      type: object
    EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleStringRegex:
      description: Rule used to validate strings.
      properties:
        exclusive:
          description: Whether the regex matcher is applied exclusively (if true, matching values will be rejected).
          type: boolean
        regex:
          description: The regex applied to the input value(s).
          type: string
      type: object
    EnterpriseCrmEventbusProtoParameterEntry:
      description: Key-value pair of EventBus parameters.
      properties:
        key:
          description: Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the integration definition.
          type: string
        value:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoParameterValueType"
          description: Values for the defined keys. Each value can either be string, int, double or any proto message.
      type: object
    EnterpriseCrmEventbusProtoParameterMap:
      description: A generic multi-map that holds key value pairs. They keys and values can be of any type, unless specified.
      properties:
        entries:
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoParameterMapEntry"
          type: array
        keyType:
          description: Option to specify key value type for all entries of the map. If provided then field types for all entries must conform to this.
          enum:
            - DATA_TYPE_UNSPECIFIED
            - STRING_VALUE
            - INT_VALUE
            - DOUBLE_VALUE
            - BOOLEAN_VALUE
            - PROTO_VALUE
            - SERIALIZED_OBJECT_VALUE
            - STRING_ARRAY
            - INT_ARRAY
            - DOUBLE_ARRAY
            - PROTO_ARRAY
            - PROTO_ENUM
            - BOOLEAN_ARRAY
            - PROTO_ENUM_ARRAY
            - BYTES
            - BYTES_ARRAY
            - NON_SERIALIZABLE_OBJECT
            - JSON_VALUE
          type: string
        valueType:
          enum:
            - DATA_TYPE_UNSPECIFIED
            - STRING_VALUE
            - INT_VALUE
            - DOUBLE_VALUE
            - BOOLEAN_VALUE
            - PROTO_VALUE
            - SERIALIZED_OBJECT_VALUE
            - STRING_ARRAY
            - INT_ARRAY
            - DOUBLE_ARRAY
            - PROTO_ARRAY
            - PROTO_ENUM
            - BOOLEAN_ARRAY
            - PROTO_ENUM_ARRAY
            - BYTES
            - BYTES_ARRAY
            - NON_SERIALIZABLE_OBJECT
            - JSON_VALUE
          type: string
      type: object
    EnterpriseCrmEventbusProtoParameterMapEntry:
      description: Entry is a pair of key and value.
      properties:
        key:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoParameterMapField"
        value:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoParameterMapField"
      type: object
    EnterpriseCrmEventbusProtoParameterMapField:
      description: Field represents either the key or value in an entry.
      properties:
        literalValue:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoParameterValueType"
          description: Passing a literal value.
        referenceKey:
          description: Referencing one of the WF variables.
          type: string
      type: object
    EnterpriseCrmEventbusProtoParameterValueType:
      description: "LINT.IfChange To support various types of parameter values. Next available id: 14"
      properties:
        booleanArray:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoBooleanParameterArray"
        booleanValue:
          type: boolean
        doubleArray:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoDoubleParameterArray"
        doubleValue:
          format: double
          type: number
        intArray:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoIntParameterArray"
        intValue:
          format: int64
          type: string
        protoArray:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoProtoParameterArray"
        protoValue:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          type: object
        serializedObjectValue:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoSerializedObjectParameter"
        stringArray:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoStringParameterArray"
        stringValue:
          type: string
      type: object
    EnterpriseCrmEventbusProtoPropertyEntry:
      description: Key-value pair of EventBus property.
      properties:
        key:
          description: Key is used to retrieve the corresponding property value. This should be unique for a given fired event. The Tasks should be aware of the keys used while firing the events for them to be able to retrieve the values.
          type: string
        value:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoValueType"
          description: Values for the defined keys. Each value can either be string, int, double or any proto message.
      type: object
    EnterpriseCrmEventbusProtoProtoArrayFunction:
      properties:
        functionName:
          enum:
            - UNSPECIFIED
            - GET
            - APPEND
            - SIZE
            - TO_SET
            - APPEND_ALL
            - TO_JSON
            - SET
            - REMOVE
            - REMOVE_AT
            - CONTAINS
            - FOR_EACH
            - FILTER
          type: string
      type: object
    EnterpriseCrmEventbusProtoProtoFunction:
      properties:
        functionName:
          enum:
            - UNSPECIFIED
            - GET_STRING_SUBFIELD
            - GET_INT_SUBFIELD
            - GET_DOUBLE_SUBFIELD
            - GET_BOOLEAN_SUBFIELD
            - GET_STRING_ARRAY_SUBFIELD
            - GET_INT_ARRAY_SUBFIELD
            - GET_DOUBLE_ARRAY_SUBFIELD
            - GET_BOOLEAN_ARRAY_SUBFIELD
            - GET_PROTO_ARRAY_SUBFIELD
            - GET_PROTO_SUBFIELD
            - TO_JSON
            - GET_BYTES_SUBFIELD_AS_UTF_8_STRING
            - GET_BYTES_SUBFIELD_AS_PROTO
            - EQUALS
          type: string
      type: object
    EnterpriseCrmEventbusProtoProtoParameterArray:
      properties:
        protoValues:
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
      type: object
    EnterpriseCrmEventbusProtoScatterResponse:
      properties:
        errorMsg:
          description: The error message of the failure if applicable.
          type: string
        executionIds:
          description: The execution ids of each Subworkflow fired by this scatter.
          items:
            type: string
          type: array
        isSuccessful:
          description: If execution is sync, this is true if the execution passed and false if it failed. If the execution is async, this is true if the WF was fired off successfully, and false if it failed to execute. The success or failure of the subworkflows executed are not captured.
          type: boolean
        responseParams:
          description: A list of all the response parameters in the aggregtorMap stored with the remapped key.
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoParameterEntry"
          type: array
        scatterElement:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoParameterValueType"
          description: The element that was scattered for this execution.
      type: object
    EnterpriseCrmEventbusProtoSerializedObjectParameter:
      properties:
        objectValue:
          format: byte
          type: string
      type: object
    EnterpriseCrmEventbusProtoStringArray:
      properties:
        values:
          items:
            type: string
          type: array
      type: object
    EnterpriseCrmEventbusProtoStringArrayFunction:
      properties:
        functionName:
          enum:
            - UNSPECIFIED
            - GET
            - APPEND
            - SIZE
            - TO_SET
            - APPEND_ALL
            - TO_JSON
            - SET
            - REMOVE
            - REMOVE_AT
            - CONTAINS
            - FOR_EACH
            - FILTER
          type: string
      type: object
    EnterpriseCrmEventbusProtoStringFunction:
      properties:
        functionName:
          enum:
            - UNSPECIFIED
            - CONCAT
            - TO_UPPERCASE
            - TO_LOWERCASE
            - CONTAINS
            - SPLIT
            - LENGTH
            - EQUALS
            - TO_INT
            - TO_DOUBLE
            - TO_BOOLEAN
            - TO_BASE_64
            - TO_JSON
            - EQUALS_IGNORE_CASE
            - REPLACE_ALL
            - SUBSTRING
            - RESOLVE_TEMPLATE
          type: string
      type: object
    EnterpriseCrmEventbusProtoStringParameterArray:
      properties:
        stringValues:
          items:
            type: string
          type: array
      type: object
    EnterpriseCrmEventbusProtoSuccessPolicy:
      description: Policy that dictates the behavior for the task after it completes successfully.
      properties:
        finalState:
          description: State to which the execution snapshot status will be set if the task succeeds.
          enum:
            - UNSPECIFIED
            - SUCCEEDED
            - SUSPENDED
          type: string
      type: object
    EnterpriseCrmEventbusProtoSuspensionAuthPermissions:
      description: LINT.IfChange
      properties:
        gaiaIdentity:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoSuspensionAuthPermissionsGaiaIdentity"
          description: Represents a Gaia identity for a person or service account.
        googleGroup:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoSuspensionAuthPermissionsGaiaIdentity"
        loasRole:
          type: string
        mdbGroup:
          type: string
      type: object
    EnterpriseCrmEventbusProtoSuspensionAuthPermissionsGaiaIdentity:
      properties:
        emailAddress:
          type: string
        gaiaId:
          format: int64
          type: string
      type: object
    EnterpriseCrmEventbusProtoSuspensionConfig:
      properties:
        customMessage:
          description: Optional information to provide recipients of the suspension in addition to the resolution URL, typically containing relevant parameter values from the originating workflow.
          type: string
        notifications:
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoNotification"
          type: array
        suspensionExpiration:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoSuspensionExpiration"
          description: Indicates the next steps when no external actions happen on the suspension.
        whoMayResolve:
          description: Identities able to resolve this suspension.
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoSuspensionAuthPermissions"
          type: array
      type: object
    EnterpriseCrmEventbusProtoSuspensionExpiration:
      properties:
        expireAfterMs:
          description: Milliseconds after which the suspension expires, if no action taken.
          format: int32
          type: integer
        liftWhenExpired:
          description: Whether the suspension will be REJECTED or LIFTED upon expiration. REJECTED is the default behavior.
          type: boolean
        remindAfterMs:
          description: Milliseconds after which the previous suspension action reminder, if any, is sent using the selected notification option, for a suspension which is still PENDING_UNSPECIFIED.
          format: int32
          type: integer
      type: object
    EnterpriseCrmEventbusProtoSuspensionResolutionInfo:
      properties:
        audit:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoSuspensionResolutionInfoAudit"
        createdTimestamp:
          description: Auto-generated.
          format: google-datetime
          type: string
        eventExecutionInfoId:
          description: Required. ID of the associated execution.
          type: string
        externalTraffic:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoExternalTraffic"
          description: The origin of the suspension for periodic notifications.
        lastModifiedTimestamp:
          description: Auto-generated.
          format: google-datetime
          type: string
        product:
          description: Which Google product the suspension belongs to. If not set, the suspension belongs to Integration Platform by default.
          enum:
            - UNSPECIFIED_PRODUCT
            - IP
            - APIGEE
            - SECURITY
          type: string
        status:
          enum:
            - PENDING_UNSPECIFIED
            - REJECTED
            - LIFTED
          type: string
        suspensionConfig:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoSuspensionConfig"
        suspensionId:
          description: Primary key for the SuspensionResolutionInfoTable.
          type: string
        taskNumber:
          description: Required. Task number of the associated SuspensionTask.
          type: string
        workflowName:
          description: Required. The name of the originating workflow.
          type: string
      type: object
    EnterpriseCrmEventbusProtoSuspensionResolutionInfoAudit:
      properties:
        resolvedBy:
          type: string
        timestamp:
          format: google-datetime
          type: string
      type: object
    EnterpriseCrmEventbusProtoTaskAlertConfig:
      description: Message to be used to configure alerting in the {@code TaskConfig} protos for tasks in an event. See go/eventbus-alert-config-examples for examples of the different alerts that can be configured.
      properties:
        aggregationPeriod:
          description: The period over which the metric value should be aggregated and evaluated. Format is , where integer should be a positive integer and unit should be one of (s,m,h,d,w) meaning (second, minute, hour, day, week).
          type: string
        alertDisabled:
          description: Set to false by default. When set to true, the metrics are not aggregated or pushed to Monarch for this workflow alert.
          type: boolean
        alertName:
          description: A name to identify this alert. This will be displayed in the alert subject. If set, this name should be unique in within the scope of the containing workflow.
          type: string
        clientId:
          description: Client associated with this alert configuration. Must be a client enabled in one of the containing workflow's triggers.
          type: string
        durationThresholdMs:
          description: Should be specified only for TASK_AVERAGE_DURATION and TASK_PERCENTILE_DURATION metrics. This member should be used to specify what duration value the metrics should exceed for the alert to trigger.
          format: int64
          type: string
        errorEnumList:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList"
        metricType:
          enum:
            - METRIC_TYPE_UNSPECIFIED
            - TASK_ERROR_RATE
            - TASK_WARNING_RATE
            - TASK_RATE
            - TASK_AVERAGE_DURATION
            - TASK_PERCENTILE_DURATION
          type: string
        numAggregationPeriods:
          description: For how many contiguous aggregation periods should the expected min or max be violated for the alert to be fired.
          format: int32
          type: integer
        onlyFinalAttempt:
          description: Only count final task attempts, not retries.
          type: boolean
        playbookUrl:
          description: Link to a playbook for resolving the issue that triggered this alert.
          type: string
        thresholdType:
          description: The threshold type for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
          enum:
            - UNSPECIFIED_THRESHOLD_TYPE
            - EXPECTED_MIN
            - EXPECTED_MAX
          type: string
        thresholdValue:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValue"
          description: The metric value, above or below which the alert should be triggered.
        warningEnumList:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList"
      type: object
    EnterpriseCrmEventbusProtoTaskExecutionDetails:
      description: "Contains the details of the execution of this task. Next available id: 11"
      properties:
        taskAttemptStats:
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoTaskExecutionDetailsTaskAttemptStats"
          type: array
        taskExecutionState:
          enum:
            - UNSPECIFIED
            - PENDING_EXECUTION
            - IN_PROCESS
            - SUCCEED
            - FAILED
            - FATAL
            - RETRY_ON_HOLD
            - SKIPPED
            - CANCELED
            - PENDING_ROLLBACK
            - ROLLBACK_IN_PROCESS
            - ROLLEDBACK
            - SUSPENDED
          type: string
        taskNumber:
          description: Pointer to the task config it used for execution.
          type: string
      type: object
    EnterpriseCrmEventbusProtoTaskExecutionDetailsTaskAttemptStats:
      properties:
        endTime:
          description: The end time of the task execution for current attempt.
          format: int64
          type: string
        startTime:
          description: The start time of the task execution for current attempt. This could be in the future if it's been scheduled.
          format: int64
          type: string
      type: object
    EnterpriseCrmEventbusProtoTaskMetadata:
      description: "TaskMetadata are attributes that are associated to every common Task we have. Next available: 26"
      properties:
        activeTaskName:
          description: The new task name to replace the current task if it is deprecated. Otherwise, it is the same as the current task name.
          type: string
        admins:
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoTaskMetadataAdmin"
          type: array
        category:
          enum:
            - UNSPECIFIED_CATEGORY
            - CUSTOM
            - FLOW_CONTROL
            - DATA_MANIPULATION
            - SCRIPTING
            - CONNECTOR
            - HIDDEN
            - CLOUD_SYSTEMS
            - CUSTOM_TASK_TEMPLATE
          type: string
        codeSearchLink:
          description: The Code Search link to the Task Java file.
          type: string
        defaultJsonValidationOption:
          description: Controls whether JSON workflow parameters are validated against provided schemas before and/or after this task's execution.
          enum:
            - UNSPECIFIED_JSON_VALIDATION_OPTION
            - SKIP
            - PRE_EXECUTION
            - POST_EXECUTION
            - PRE_POST_EXECUTION
          type: string
        defaultSpec:
          description: Contains the initial configuration of the task with default values set. For now, The string should be compatible to an ASCII-proto format.
          type: string
        description:
          description: In a few sentences, describe the purpose and usage of the task.
          type: string
        descriptiveName:
          description: The string name to show on the task list on the Workflow editor screen. This should be a very short, one to two words name for the task. (e.g. "Send Mail")
          type: string
        docMarkdown:
          description: Snippet of markdown documentation to embed in the RHP for this task.
          type: string
        externalCategory:
          enum:
            - UNSPECIFIED_EXTERNAL_CATEGORY
            - CORE
            - CONNECTORS
          type: string
        externalCategorySequence:
          description: Sequence with which the task in specific category to be displayed in task discovery panel for external users.
          format: int32
          type: integer
        externalDocHtml:
          description: External-facing documention embedded in the RHP for this task.
          type: string
        externalDocLink:
          description: Doc link for external-facing documentation (separate from g3doc).
          type: string
        externalDocMarkdown:
          description: "DEPRECATED: Use external_doc_html."
          type: string
        g3DocLink:
          description: URL to the associated G3 Doc for the task if available
          type: string
        iconLink:
          description: URL to gstatic image icon for this task. This icon shows up on the task list panel along with the task name in the Workflow Editor screen. Use the 24p, 2x, gray color icon image format. See go/icons.
          type: string
        isDeprecated:
          description: The deprecation status of the current task. Default value is false;
          type: boolean
        name:
          description: The actual class name or the annotated name of the task. Task Author should initialize this field with value from the getName() method of the Task class.
          type: string
        standaloneExternalDocHtml:
          description: External-facing documention for standalone IP in pantheon embedded in the RHP for this task. Non null only if different from external_doc_html
          type: string
        status:
          description: Allows author to indicate if the task is ready to use or not. If not set, then it will default to INACTIVE.
          enum:
            - UNSPECIFIED_STATUS
            - DEFAULT_INACTIVE
            - ACTIVE
          type: string
        system:
          enum:
            - UNSPECIFIED_SYSTEM
            - GENERIC
            - BUGANIZER
            - SALESFORCE
            - CLOUD_SQL
            - PLX
            - SHEETS
            - GOOGLE_GROUPS
            - EMAIL
            - SPANNER
            - DATA_BRIDGE
          type: string
        tags:
          description: A set of tags that pertain to a particular task. This can be used to improve the searchability of tasks with several names ("REST Caller" vs. "Call REST Endpoint") or to help users find tasks based on related words.
          items:
            type: string
          type: array
      type: object
    EnterpriseCrmEventbusProtoTaskMetadataAdmin:
      description: Admins are owners of a Task, and have all permissions on a particular task identified by the task name. By default, Eventbus periodically scans all task metadata and syncs (adds) any new admins defined here to Zanzibar.
      properties:
        googleGroupEmail:
          type: string
        userEmail:
          type: string
      type: object
    EnterpriseCrmEventbusProtoTaskUiConfig:
      description: "Task authors would use this type to configure the UI for a particular task by specifying what UI config modules should be included to compose the UI. Learn more about config module framework: go/integration-platform-config-module-framework"
      properties:
        taskUiModuleConfigs:
          description: Configurations of included config modules.
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoTaskUiModuleConfig"
          type: array
      type: object
    EnterpriseCrmEventbusProtoTaskUiModuleConfig:
      description: Task author would use this type to configure a config module.
      properties:
        moduleId:
          description: ID of the config module.
          enum:
            - UNSPECIFIED_TASK_MODULE
            - LABEL
            - ERROR_HANDLING
            - TASK_PARAM_TABLE
            - TASK_PARAM_FORM
            - PRECONDITION
            - SCRIPT_EDITOR
            - RPC
            - TASK_SUMMARY
            - SUSPENSION
            - RPC_TYPED
            - SUB_WORKFLOW
            - APPS_SCRIPT_NAVIGATOR
            - SUB_WORKFLOW_FOR_EACH_LOOP
            - FIELD_MAPPING
            - README
            - REST_CALLER
            - SUB_WORKFLOW_SCATTER_GATHER
            - CLOUD_SQL
            - GENERIC_CONNECTOR_TASK
          type: string
      type: object
    EnterpriseCrmEventbusProtoTeardown:
      properties:
        teardownTaskConfigs:
          description: Required.
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoTeardownTaskConfig"
          type: array
      type: object
    EnterpriseCrmEventbusProtoTeardownTaskConfig:
      properties:
        creatorEmail:
          description: The creator's email address.
          type: string
        name:
          description: Required. Unique identifier of the teardown task within this Config. We use this field as the identifier to find next teardown tasks.
          type: string
        nextTeardownTask:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoNextTeardownTask"
        parameters:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoEventParameters"
          description: The parameters the user can pass to this task.
        properties:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoEventBusProperties"
        teardownTaskImplementationClassName:
          description: Required. Implementation class name.
          type: string
      type: object
    EnterpriseCrmEventbusProtoToken:
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    EnterpriseCrmEventbusProtoTransformExpression:
      properties:
        initialValue:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoBaseValue"
          description: Initial value upon which to perform transformations.
        transformationFunctions:
          description: Transformations to be applied sequentially.
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoFunction"
          type: array
      type: object
    EnterpriseCrmEventbusProtoTriggerCriteria:
      properties:
        condition:
          description: Required. Standard filter expression, when true the workflow will be executed. If there's no trigger_criteria_task_implementation_class_name specified, the condition will be validated directly.
          type: string
        parameters:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoEventParameters"
          description: Optional. To be used in TaskConfig for the implementation class.
        triggerCriteriaTaskImplementationClassName:
          description: Optional. Implementation class name. The class should implement the “TypedTask” interface.
          type: string
      type: object
    EnterpriseCrmEventbusProtoValueType:
      description: Used for define type for values. Currently supported value types include int, string, double, array, and any proto message.
      properties:
        booleanValue:
          type: boolean
        doubleArray:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoDoubleArray"
        doubleValue:
          format: double
          type: number
        intArray:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoIntArray"
        intValue:
          format: int64
          type: string
        protoValue:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          type: object
        stringArray:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoStringArray"
        stringValue:
          type: string
      type: object
    EnterpriseCrmEventbusProtoWorkflowAlertConfig:
      description: Message to be used to configure custom alerting in the {@code EventConfig} protos for an event. See go/eventbus-alert-config-examples for examples of the different alerts that can be configured.
      properties:
        aggregationPeriod:
          description: For an EXPECTED_MIN threshold, this aggregation_period must be lesser than 24 hours.
          type: string
        alertDisabled:
          description: Set to false by default. When set to true, the metrics are not aggregated or pushed to Monarch for this workflow alert.
          type: boolean
        alertName:
          description: A name to identify this alert. This will be displayed in the alert subject. If set, this name should be unique within the scope of the workflow.
          type: string
        clientId:
          description: Client associated with this alert configuration.
          type: string
        durationThresholdMs:
          description: Should be specified only for *AVERAGE_DURATION and *PERCENTILE_DURATION metrics. This member should be used to specify what duration value the metrics should exceed for the alert to trigger.
          format: int64
          type: string
        errorEnumList:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList"
        metricType:
          enum:
            - METRIC_TYPE_UNSPECIFIED
            - EVENT_ERROR_RATE
            - EVENT_WARNING_RATE
            - TASK_ERROR_RATE
            - TASK_WARNING_RATE
            - TASK_RATE
            - EVENT_RATE
            - EVENT_AVERAGE_DURATION
            - EVENT_PERCENTILE_DURATION
            - TASK_AVERAGE_DURATION
            - TASK_PERCENTILE_DURATION
          type: string
        numAggregationPeriods:
          description: For how many contiguous aggregation periods should the expected min or max be violated for the alert to be fired.
          format: int32
          type: integer
        onlyFinalAttempt:
          description: For either events or tasks, depending on the type of alert, count only final attempts, not retries.
          type: boolean
        playbookUrl:
          description: Link to a playbook for resolving the issue that triggered this alert.
          type: string
        thresholdType:
          description: The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
          enum:
            - UNSPECIFIED_THRESHOLD_TYPE
            - EXPECTED_MIN
            - EXPECTED_MAX
          type: string
        thresholdValue:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValue"
          description: The metric value, above or below which the alert should be triggered. See go/eventbus-alert-config-examples.
        warningEnumList:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList"
      type: object
    EnterpriseCrmEventbusStats:
      description: "Stats for the requested dimensions: QPS, duration, and error/warning rate"
      properties:
        dimensions:
          $ref: "#/components/schemas/EnterpriseCrmEventbusStatsDimensions"
          description: Dimensions that these stats have been aggregated on.
        durationInSeconds:
          description: Average duration in seconds.
          format: double
          type: number
        errorRate:
          description: Average error rate.
          format: double
          type: number
        qps:
          description: Queries per second.
          format: double
          type: number
        warningRate:
          description: Average warning rate.
          format: double
          type: number
      type: object
    EnterpriseCrmEventbusStatsDimensions:
      properties:
        clientId:
          type: string
        enumFilterType:
          description: Whether to include or exclude the enums matching the regex.
          enum:
            - DEFAULT_INCLUSIVE
            - EXCLUSIVE
          type: string
        errorEnumString:
          type: string
        retryAttempt:
          enum:
            - UNSPECIFIED
            - FINAL
            - RETRYABLE
            - CANCELED
          type: string
        taskName:
          type: string
        taskNumber:
          type: string
        triggerId:
          description: Stats have been or will be aggregated on set fields for any semantically-meaningful combination.
          type: string
        warningEnumString:
          type: string
        workflowId:
          type: string
        workflowName:
          type: string
      type: object
    EnterpriseCrmFrontendsEventbusProtoBooleanParameterArray:
      properties:
        booleanValues:
          items:
            type: boolean
          type: array
      type: object
    EnterpriseCrmFrontendsEventbusProtoDoubleParameterArray:
      properties:
        doubleValues:
          items:
            format: double
            type: number
          type: array
      type: object
    EnterpriseCrmFrontendsEventbusProtoEventExecutionDetails:
      description: "Contains the details of the execution info of this event: this includes the tasks execution details plus the event execution statistics. Next available id: 10"
      properties:
        eventAttemptStats:
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoEventExecutionDetailsEventAttemptStats"
          type: array
        eventExecutionSnapshot:
          description: After snapshot migration, this field will no longer be populated, but old execution snapshots will still be accessible.
          items:
            $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoEventExecutionSnapshot"
          type: array
        eventExecutionState:
          description: The execution state of this event.
          enum:
            - UNSPECIFIED
            - ON_HOLD
            - IN_PROCESS
            - SUCCEEDED
            - FAILED
            - CANCELED
            - RETRY_ON_HOLD
            - SUSPENDED
          type: string
        eventRetriesFromBeginningCount:
          description: Indicates the number of times the execution has restarted from the beginning.
          format: int32
          type: integer
        logFilePath:
          description: The log file path (aka. cns address) for this event.
          type: string
        networkAddress:
          description: The network address (aka. bns address) that indicates where the event executor is running.
          type: string
        nextExecutionTime:
          description: Next scheduled execution time in case the execution status was RETRY_ON_HOLD.
          format: int64
          type: string
        ryeLockUnheldCount:
          description: Used internally and shouldn't be exposed to users. A counter for the cron job to record how many times this event is in in_process state but don't have a lock consecutively/
          format: int32
          type: integer
      type: object
    EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo:
      description: "Contains all the execution details for a workflow instance. Next available id: 24"
      properties:
        clientId:
          description: The event data user sends as request.
          type: string
        createTime:
          description: Auto-generated.
          format: int64
          type: string
        errorCode:
          $ref: "#/components/schemas/CrmlogErrorCode"
          description: Final error-code if event failed.
        errors:
          description: Errors, warnings, and informationals associated with the workflow/task. The order in which the errors were added by the workflow/task is maintained.
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoErrorDetail"
          type: array
        eventExecutionDetails:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoEventExecutionDetails"
          description: The execution info about this event.
        eventExecutionInfoId:
          description: Auto-generated primary key.
          type: string
        executionTraceInfo:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoExecutionTraceInfo"
          description: Execution trace info to aggregate parent-child executions.
        lastModifiedTime:
          description: Auto-generated.
          format: int64
          type: string
        postMethod:
          description: The ways user posts this event.
          enum:
            - UNSPECIFIED
            - POST
            - POST_TO_QUEUE
            - SCHEDULE
            - POST_BY_EVENT_CONFIG_ID
            - POST_WITH_EVENT_DETAILS
          type: string
        product:
          description: Which Google product the execution_info belongs to. If not set, the execution_info belongs to Integration Platform by default.
          enum:
            - UNSPECIFIED_PRODUCT
            - IP
            - APIGEE
            - SECURITY
          type: string
        requestId:
          description: Optional. This is used to de-dup incoming request.
          type: string
        requestParams:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoEventParameters"
          description: Event parameters come in as part of the request.
        responseParams:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoEventParameters"
          description: Event parameters come out as part of the response.
        snapshotNumber:
          description: Workflow snapshot number.
          format: int64
          type: string
        tenant:
          description: Tenant this event is created. Used to reschedule the event to correct tenant.
          type: string
        triggerId:
          description: The trigger id of the workflow trigger config. If both trigger_id and client_id is present, the workflow is executed from the start tasks provided by the matching trigger config otherwise it is executed from the default start tasks.
          type: string
        workflowId:
          description: Required. Pointer to the workflow it is executing.
          type: string
        workflowName:
          description: Name of the workflow.
          type: string
        workflowRetryBackoffIntervalSeconds:
          description: Time interval in seconds to schedule retry of workflow in manifold when workflow is already running
          format: int64
          type: string
      type: object
    EnterpriseCrmFrontendsEventbusProtoEventExecutionSnapshot:
      properties:
        checkpointTaskNumber:
          description: Indicates "right after which checkpoint task's execution" this snapshot is taken.
          type: string
        conditionResults:
          description: All of the computed conditions that been calculated.
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoConditionResult"
          type: array
        diffParams:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoEventParameters"
          description: The parameters in Event object that differs from last snapshot.
        eventExecutionInfoId:
          description: Points to the event execution info this snapshot belongs to.
          type: string
        eventExecutionSnapshotId:
          description: Auto-generated. Used as primary key for EventExecutionSnapshots table.
          type: string
        eventExecutionSnapshotMetadata:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata"
        eventParams:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoEventParameters"
          description: The parameters in Event object.
        snapshotTime:
          description: Indicates when this snapshot is taken.
          format: int64
          type: string
        taskExecutionDetails:
          description: All of the task execution details at the given point of time.
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoTaskExecutionDetails"
          type: array
        taskName:
          description: The task name associated with this snapshot. Could be empty.
          type: string
      type: object
    EnterpriseCrmFrontendsEventbusProtoEventParameters:
      description: "LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see go/integration-platform/event_bus.md for more details. Next id: 4"
      properties:
        parameters:
          description: Parameters are a part of Event and can be used to communicate between different tasks that are part of the same workflow execution.
          items:
            $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterEntry"
          type: array
      type: object
    EnterpriseCrmFrontendsEventbusProtoIntParameterArray:
      properties:
        intValues:
          items:
            format: int64
            type: string
          type: array
      type: object
    EnterpriseCrmFrontendsEventbusProtoParamSpecEntry:
      description: "Key-value pair of EventBus task parameters. Next id: 13"
      properties:
        className:
          description: The FQCN of the Java object this represents. A string, for example, would be "java.lang.String". If this is "java.lang.Object", the parameter can be of any type.
          type: string
        collectionElementClassName:
          description: If it is a collection of objects, this would be the FCQN of every individual element in the collection. If this is "java.lang.Object", the parameter is a collection of any type.
          type: string
        config:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoParamSpecEntryConfig"
          description: Optional fields, such as help text and other useful info.
        dataType:
          description: The data type of the parameter.
          enum:
            - DATA_TYPE_UNSPECIFIED
            - STRING_VALUE
            - INT_VALUE
            - DOUBLE_VALUE
            - BOOLEAN_VALUE
            - PROTO_VALUE
            - SERIALIZED_OBJECT_VALUE
            - STRING_ARRAY
            - INT_ARRAY
            - DOUBLE_ARRAY
            - PROTO_ARRAY
            - PROTO_ENUM
            - BOOLEAN_ARRAY
            - PROTO_ENUM_ARRAY
            - BYTES
            - BYTES_ARRAY
            - NON_SERIALIZABLE_OBJECT
            - JSON_VALUE
          type: string
        defaultValue:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterValueType"
          description: Default values for the defined keys. Each value can either be string, int, double or any proto message or a serialized object.
        isDeprecated:
          description: If set, this entry is deprecated, so further use of this parameter should be prohibited.
          type: boolean
        isOutput:
          type: boolean
        jsonSchema:
          description: If the data_type is JSON_VALUE, then this will define its schema.
          type: string
        key:
          description: Key is used to retrieve the corresponding parameter value. This should be unique for a given task. These parameters must be predefined in the workflow definition.
          type: string
        protoDef:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoParamSpecEntryProtoDefinition"
          description: Populated if this represents a proto or proto array.
        required:
          description: If set, the user must provide an input value for this parameter.
          type: boolean
        validationRule:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoParamSpecEntryValidationRule"
          description: Rule used to validate inputs (individual values and collection elements) for this parameter.
      type: object
    EnterpriseCrmFrontendsEventbusProtoParamSpecsMessage:
      properties:
        parameters:
          items:
            $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParamSpecEntry"
          type: array
      type: object
    EnterpriseCrmFrontendsEventbusProtoParameterEntry:
      description: Key-value pair of EventBus parameters.
      properties:
        dataType:
          description: Explicitly getting the type of the parameter.
          enum:
            - DATA_TYPE_UNSPECIFIED
            - STRING_VALUE
            - INT_VALUE
            - DOUBLE_VALUE
            - BOOLEAN_VALUE
            - PROTO_VALUE
            - SERIALIZED_OBJECT_VALUE
            - STRING_ARRAY
            - INT_ARRAY
            - DOUBLE_ARRAY
            - PROTO_ARRAY
            - PROTO_ENUM
            - BOOLEAN_ARRAY
            - PROTO_ENUM_ARRAY
            - BYTES
            - BYTES_ARRAY
            - NON_SERIALIZABLE_OBJECT
            - JSON_VALUE
          type: string
        key:
          description: Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the workflow definition.
          type: string
        value:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterValueType"
          description: Values for the defined keys. Each value can either be string, int, double or any proto message.
      type: object
    EnterpriseCrmFrontendsEventbusProtoParameterMap:
      description: A generic multi-map that holds key value pairs. They keys and values can be of any type, unless specified.
      properties:
        entries:
          items:
            $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterMapEntry"
          type: array
        keyType:
          description: Option to specify key value type for all entries of the map. If provided then field types for all entries must conform to this.
          enum:
            - DATA_TYPE_UNSPECIFIED
            - STRING_VALUE
            - INT_VALUE
            - DOUBLE_VALUE
            - BOOLEAN_VALUE
            - PROTO_VALUE
            - SERIALIZED_OBJECT_VALUE
            - STRING_ARRAY
            - INT_ARRAY
            - DOUBLE_ARRAY
            - PROTO_ARRAY
            - PROTO_ENUM
            - BOOLEAN_ARRAY
            - PROTO_ENUM_ARRAY
            - BYTES
            - BYTES_ARRAY
            - NON_SERIALIZABLE_OBJECT
            - JSON_VALUE
          type: string
        valueType:
          enum:
            - DATA_TYPE_UNSPECIFIED
            - STRING_VALUE
            - INT_VALUE
            - DOUBLE_VALUE
            - BOOLEAN_VALUE
            - PROTO_VALUE
            - SERIALIZED_OBJECT_VALUE
            - STRING_ARRAY
            - INT_ARRAY
            - DOUBLE_ARRAY
            - PROTO_ARRAY
            - PROTO_ENUM
            - BOOLEAN_ARRAY
            - PROTO_ENUM_ARRAY
            - BYTES
            - BYTES_ARRAY
            - NON_SERIALIZABLE_OBJECT
            - JSON_VALUE
          type: string
      type: object
    EnterpriseCrmFrontendsEventbusProtoParameterMapEntry:
      description: Entry is a pair of key and value.
      properties:
        key:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterMapField"
        value:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterMapField"
      type: object
    EnterpriseCrmFrontendsEventbusProtoParameterMapField:
      description: Field represents either the key or value in an entry.
      properties:
        literalValue:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterValueType"
          description: Passing a literal value.
        referenceKey:
          description: Referencing one of the WF variables.
          type: string
      type: object
    EnterpriseCrmFrontendsEventbusProtoParameterValueType:
      description: "To support various types of parameter values. Next available id: 14"
      properties:
        booleanArray:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoBooleanParameterArray"
        booleanValue:
          type: boolean
        doubleArray:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoDoubleParameterArray"
        doubleValue:
          format: double
          type: number
        intArray:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoIntParameterArray"
        intValue:
          format: int64
          type: string
        jsonValue:
          type: string
        protoArray:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoProtoParameterArray"
        protoValue:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          type: object
        serializedObjectValue:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoSerializedObjectParameter"
        stringArray:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoStringParameterArray"
        stringValue:
          type: string
      type: object
    EnterpriseCrmFrontendsEventbusProtoProtoParameterArray:
      properties:
        protoValues:
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
      type: object
    EnterpriseCrmFrontendsEventbusProtoRollbackStrategy:
      description: "Next available id: 4"
      properties:
        parameters:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoEventParameters"
          description: Optional. The customized parameters the user can pass to this task.
        rollbackTaskImplementationClassName:
          description: Required. This is the name of the task that needs to be executed upon rollback of this task.
          type: string
        taskNumbersToRollback:
          description: Required. These are the tasks numbers of the tasks whose `rollback_strategy.rollback_task_implementation_class_name` needs to be executed upon failure of this task.
          items:
            type: string
          type: array
      type: object
    EnterpriseCrmFrontendsEventbusProtoSerializedObjectParameter:
      properties:
        objectValue:
          format: byte
          type: string
      type: object
    EnterpriseCrmFrontendsEventbusProtoStringParameterArray:
      properties:
        stringValues:
          items:
            type: string
          type: array
      type: object
    EnterpriseCrmFrontendsEventbusProtoTaskConfig:
      description: "The task configuration details. This is not the implementation of Task. There might be multiple TaskConfigs for the same Task. Next available id: 27"
      properties:
        alertConfigs:
          description: Alert configurations on error rate, warning rate, number of runs, durations, etc.
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoTaskAlertConfig"
          type: array
        createTime:
          description: Auto-generated.
          format: google-datetime
          type: string
        creatorEmail:
          description: The creator's email address. Auto-generated from the user's email.
          type: string
        description:
          description: User-provided description intended to give more business context about the task.
          type: string
        disableStrictTypeValidation:
          description: If this config contains a TypedTask, allow validation to succeed if an input is read from the output of another TypedTask whose output type is declared as a superclass of the requested input type. For instance, if the previous task declares an output of type Message, any task with this flag enabled will pass validation when attempting to read any proto Message type from the resultant Event parameter.
          type: boolean
        failurePolicy:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoFailurePolicy"
          description: Optional. Determines the number of times the task will be retried on failure and with what retry strategy. This is applicable for asynchronous calls to Eventbus alone (Post To Queue, Schedule etc.).
        incomingEdgeCount:
          description: The number of edges leading into this TaskConfig.
          format: int32
          type: integer
        jsonValidationOption:
          description: If set, overrides the option configured in the Task implementation class.
          enum:
            - UNSPECIFIED_JSON_VALIDATION_OPTION
            - SKIP
            - PRE_EXECUTION
            - POST_EXECUTION
            - PRE_POST_EXECUTION
          type: string
        label:
          description: User-provided label that is attached to this TaskConfig in the UI.
          type: string
        lastModifiedTime:
          description: Auto-generated.
          format: google-datetime
          type: string
        nextTasks:
          description: The set of tasks that are next in line to be executed as per the execution graph defined for the parent event, specified by `event_config_id`. Each of these next tasks are executed only if the condition associated with them evaluates to true.
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoNextTask"
          type: array
        nextTasksExecutionPolicy:
          description: The policy dictating the execution of the next set of tasks for the current task.
          enum:
            - UNSPECIFIED
            - RUN_ALL_MATCH
            - RUN_FIRST_MATCH
          type: string
        parameters:
          additionalProperties:
            $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterEntry"
          description: The customized parameters the user can pass to this task.
          type: object
        position:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoCoordinate"
          description: Optional. Informs the front-end application where to draw this task config on the UI.
        precondition:
          description: Optional. Standard filter expression evaluated before execution. Independent of other conditions and tasks. Can be used to enable rollout. e.g. "rollout(5)" will only allow 5% of incoming traffic to task.
          type: string
        preconditionLabel:
          description: Optional. User-provided label that is attached to precondition in the UI.
          type: string
        rollbackStrategy:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoRollbackStrategy"
          description: Optional. Contains information about what needs to be done upon failure (either a permanent error or after it has been retried too many times).
        successPolicy:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoSuccessPolicy"
          description: Determines what action to take upon successful task completion.
        synchronousCallFailurePolicy:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoFailurePolicy"
          description: Optional. Determines the number of times the task will be retried on failure and with what retry strategy. This is applicable for synchronous calls to Eventbus alone (Post).
        taskEntity:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoTaskEntity"
          description: Copy of the task entity that this task config is an instance of.
        taskExecutionStrategy:
          description: The policy dictating the execution strategy of this task.
          enum:
            - WHEN_ALL_SUCCEED
            - WHEN_ANY_SUCCEED
            - WHEN_ALL_TASKS_AND_CONDITIONS_SUCCEED
          type: string
        taskName:
          description: The name for the task.
          type: string
        taskNumber:
          description: "REQUIRED: the identifier of this task within its parent event config, specified by the client. This should be unique among all the tasks belong to the same event config. We use this field as the identifier to find next tasks (via field `next_tasks.task_number`)."
          type: string
        taskSpec:
          description: A string template that allows user to configure task parameters (with either literal default values or tokens which will be resolved at execution time) for the task. It will eventually replace the old "parameters" field. Please refer to go/eventbus-task-spec-example for detailed usage example.
          type: string
        taskTemplateName:
          description: Used to define task-template name if task is of type task-template
          type: string
        taskType:
          description: Defines the type of the task
          enum:
            - TASK
            - ASIS_TEMPLATE
            - IO_TEMPLATE
          type: string
      type: object
    EnterpriseCrmFrontendsEventbusProtoTaskEntity:
      description: "Contains a task's metadata and associated information. Next available id: 7"
      properties:
        disabledForVpcSc:
          description: True if the task has conflict with vpcsc
          type: boolean
        metadata:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoTaskMetadata"
          description: Metadata inclueds the task name, author and so on.
        paramSpecs:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParamSpecsMessage"
          description: Declarations for inputs/outputs for a TypedTask. This is also associated with the METADATA mask.
        stats:
          $ref: "#/components/schemas/EnterpriseCrmEventbusStats"
          description: Deprecated - statistics from the Monarch query.
        taskType:
          description: Defines the type of the task
          enum:
            - TASK
            - ASIS_TEMPLATE
            - IO_TEMPLATE
          type: string
        uiConfig:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoTaskUiConfig"
          description: UI configuration for this task Also associated with the METADATA mask.
      type: object
    EnterpriseCrmFrontendsEventbusProtoTriggerConfig:
      description: "Configuration detail of a trigger. Next available id: 17"
      properties:
        alertConfig:
          description: An alert threshold configuration for the [trigger + client + workflow] tuple. If these values are not specified in the trigger config, default values will be populated by the system. Note that there must be exactly one alert threshold configured per [client + trigger + workflow] when published.
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoWorkflowAlertConfig"
          type: array
        cloudSchedulerConfig:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoCloudSchedulerConfig"
        description:
          description: User-provided description intended to give more business context about the task.
          type: string
        enabledClients:
          description: Required. The list of client ids which are enabled to execute the workflow using this trigger. In other words, these clients have the workflow execution privledges for this trigger. For API trigger, the client id in the incoming request is validated against the list of enabled clients. For non-API triggers, one workflow execution is triggered on behalf of each enabled client.
          items:
            type: string
          type: array
        label:
          description: The user created label for a particular trigger.
          type: string
        nextTasksExecutionPolicy:
          description: Dictates how next tasks will be executed.
          enum:
            - UNSPECIFIED
            - RUN_ALL_MATCH
            - RUN_FIRST_MATCH
          type: string
        pauseWorkflowExecutions:
          description: Optional. If set to true, any upcoming requests for this trigger config will be paused and the executions will be resumed later when the flag is reset. The workflow to which this trigger config belongs has to be in ACTIVE status for the executions to be paused or resumed.
          type: boolean
        position:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoCoordinate"
          description: Optional. Informs the front-end application where to draw this trigger config on the UI.
        properties:
          additionalProperties:
            type: string
          description: Configurable properties of the trigger, not to be confused with workflow parameters. E.g. "name" is a property for API triggers and "subscription" is a property for Cloud Pubsub triggers.
          type: object
        startTasks:
          description: Set of tasks numbers from where the workflow execution is started by this trigger. If this is empty, then workflow is executed with default start tasks. In the list of start tasks, none of two tasks can have direct ancestor-descendant relationships (i.e. in a same workflow execution graph).
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoNextTask"
          type: array
        triggerCriteria:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoTriggerCriteria"
          description: Optional. When set, Eventbus will run the task specified in the trigger_criteria and validate the result using the trigger_criteria.condition, and only execute the workflow when result is true.
        triggerId:
          description: The backend trigger ID.
          type: string
        triggerNumber:
          description: Required. A number to uniquely identify each trigger config within the workflow on UI.
          type: string
        triggerType:
          enum:
            - UNKNOWN
            - CLOUD_PUBSUB
            - GOOPS
            - SFDC_SYNC
            - CRON
            - API
            - MANIFOLD_TRIGGER
            - DATALAYER_DATA_CHANGE
            - SFDC_CHANNEL
            - CLOUD_PUBSUB_EXTERNAL
            - SFDC_CDC_CHANNEL
            - SFDC_PLATFORM_EVENTS_CHANNEL
            - CLOUD_SCHEDULER
          type: string
      type: object
    EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry:
      properties:
        attributes:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoAttributes"
          description: Metadata information about the parameters.
        children:
          description: Child parameters nested within this parameter. This field only applies to protobuf parameters
          items:
            $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry"
          type: array
        dataType:
          description: The data type of the parameter.
          enum:
            - DATA_TYPE_UNSPECIFIED
            - STRING_VALUE
            - INT_VALUE
            - DOUBLE_VALUE
            - BOOLEAN_VALUE
            - PROTO_VALUE
            - SERIALIZED_OBJECT_VALUE
            - STRING_ARRAY
            - INT_ARRAY
            - DOUBLE_ARRAY
            - PROTO_ARRAY
            - PROTO_ENUM
            - BOOLEAN_ARRAY
            - PROTO_ENUM_ARRAY
            - BYTES
            - BYTES_ARRAY
            - NON_SERIALIZABLE_OBJECT
            - JSON_VALUE
          type: string
        defaultValue:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterValueType"
          description: Default values for the defined keys. Each value can either be string, int, double or any proto message or a serialized object.
        inOutType:
          description: Specifies the input/output type for the parameter.
          enum:
            - IN_OUT_TYPE_UNSPECIFIED
            - IN
            - OUT
            - IN_OUT
          type: string
        isTransient:
          description: Whether this parameter is a transient parameter. go/ip-transient-parameters
          type: boolean
        jsonSchema:
          description: This schema will be used to validate runtime JSON-typed values of this parameter.
          type: string
        key:
          description: Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the workflow definition.
          type: string
        name:
          description: The name (without prefix) to be displayed in the UI for this parameter. E.g. if the key is "foo.bar.myName", then the name would be "myName".
          type: string
        producedBy:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoNodeIdentifier"
          description: The identifier of the node (TaskConfig/TriggerConfig) this parameter was produced by, if it is a transient param or a copy of an input param.
        producer:
          type: string
        protoDefName:
          description: The name of the protobuf type if the parameter has a protobuf data type.
          type: string
        protoDefPath:
          description: If the data type is of type proto or proto array, this field needs to be populated with the fully qualified proto name. This message, for example, would be "enterprise.crm.frontends.eventbus.proto.WorkflowParameterEntry".
          type: string
      type: object
    EnterpriseCrmFrontendsEventbusProtoWorkflowParameters:
      description: LINT.IfChange This is the frontend version of WorkflowParameters. It's exactly like the backend version except that instead of flattening protobuf parameters and treating every field and subfield of a protobuf parameter as a separate parameter, the fields/subfields of a protobuf parameter will be nested as "children" (see 'children' field below) parameters of the parent parameter. Please refer to enterprise/crm/eventbus/proto/workflow_parameters.proto for more information about WorkflowParameters.
      properties:
        parameters:
          description: Parameters are a part of Event and can be used to communiticate between different tasks that are part of the same workflow execution.
          items:
            $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry"
          type: array
      type: object
    EnterpriseCrmLoggingGwsFieldLimits:
      description: "Describes string and array limits when writing to logs. When a limit is exceeded the *shortener_type* describes how to shorten the field. next_id: 6"
      properties:
        logAction:
          enum:
            - LOG_ACTION_UNSPECIFIED
            - DONT_LOG
            - LOG
          type: string
        logType:
          description: To which type(s) of logs the limits apply.
          items:
            enum:
              - LOG_TYPE_UNSPECIFIED
              - GWS
              - GTS
              - ALL
            type: string
          type: array
        maxArraySize:
          description: maximum array size. If the array exceds this size, the field (list) is truncated.
          format: int32
          type: integer
        maxStringLength:
          description: maximum string length. If the field exceeds this amount the field is shortened.
          format: int32
          type: integer
        shortenerType:
          enum:
            - SHORTENER_TYPE_UNSPECIFIED
            - SHORTEN
            - HASH
            - SHORTEN_WITH_HASH
            - SHORTEN_EMAIL
            - SHORTEN_EMAIL_WITH_HASH
            - SHORTEN_DOMAIN
          type: string
      type: object
    EnterpriseCrmLoggingGwsSanitizeOptions:
      description: "Identifies whether a field contains, or may contain, PII or sensitive data, and how to sanitize the field if it does. If a field's privacy type cannot be determined then it is sanitized (e.g., scrubbed). The specific sanitizer implementation is determined by run-time configuration and environment options (e.g., prod vs. qa). next_id: 5"
      properties:
        isAlreadySanitized:
          description: If true, the value has already been sanitized and needs no further sanitization. For instance, a D3 customer id is already an obfuscated entity and *might not* need further sanitization.
          type: boolean
        logType:
          description: To which type(s) of logs the sanitize options apply.
          items:
            enum:
              - LOG_TYPE_UNSPECIFIED
              - GWS
              - GTS
              - ALL
            type: string
          type: array
        privacy:
          enum:
            - PRIVACY_TYPE_UNSPECIFIED
            - NOT_PII
            - PII
            - SPII
            - UNSURE
          type: string
        sanitizeType:
          enum:
            - SANITIZE_TYPE_UNSPECIFIED
            - SCRUB
            - ANONYMIZE
            - ANONYMIZE_LIMITED_REPEATABLE
            - OBFUSCATE
            - ENCRYPT
            - DO_NOT_SANITIZE
          type: string
      type: object
    GoogleCloudConnectorsV1AuthConfig:
      description: AuthConfig defines details of a authentication type.
      properties:
        additionalVariables:
          description: List containing additional auth configs.
          items:
            $ref: "#/components/schemas/GoogleCloudConnectorsV1ConfigVariable"
          type: array
        authType:
          description: The type of authentication configured.
          enum:
            - AUTH_TYPE_UNSPECIFIED
            - USER_PASSWORD
            - OAUTH2_JWT_BEARER
            - OAUTH2_CLIENT_CREDENTIALS
            - SSH_PUBLIC_KEY
            - OAUTH2_AUTH_CODE_FLOW
          type: string
        oauth2ClientCredentials:
          $ref: "#/components/schemas/GoogleCloudConnectorsV1AuthConfigOauth2ClientCredentials"
          description: Oauth2ClientCredentials.
        oauth2JwtBearer:
          $ref: "#/components/schemas/GoogleCloudConnectorsV1AuthConfigOauth2JwtBearer"
          description: Oauth2JwtBearer.
        sshPublicKey:
          $ref: "#/components/schemas/GoogleCloudConnectorsV1AuthConfigSshPublicKey"
          description: SSH Public Key.
        userPassword:
          $ref: "#/components/schemas/GoogleCloudConnectorsV1AuthConfigUserPassword"
          description: UserPassword.
      type: object
    GoogleCloudConnectorsV1AuthConfigOauth2ClientCredentials:
      description: Parameters to support Oauth 2.0 Client Credentials Grant Authentication. See https://tools.ietf.org/html/rfc6749#section-1.3.4 for more details.
      properties:
        clientId:
          description: The client identifier.
          type: string
        clientSecret:
          $ref: "#/components/schemas/GoogleCloudConnectorsV1Secret"
          description: Secret version reference containing the client secret.
      type: object
    GoogleCloudConnectorsV1AuthConfigOauth2JwtBearer:
      description: Parameters to support JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication. See https://tools.ietf.org/html/rfc7523 for more details.
      properties:
        clientKey:
          $ref: "#/components/schemas/GoogleCloudConnectorsV1Secret"
          description: "Secret version reference containing a PKCS#8 PEM-encoded private key associated with the Client Certificate. This private key will be used to sign JWTs used for the jwt-bearer authorization grant. Specified in the form as: `projects/*/secrets/*/versions/*`."
        jwtClaims:
          $ref: "#/components/schemas/GoogleCloudConnectorsV1AuthConfigOauth2JwtBearerJwtClaims"
          description: JwtClaims providers fields to generate the token.
      type: object
    GoogleCloudConnectorsV1AuthConfigOauth2JwtBearerJwtClaims:
      description: JWT claims used for the jwt-bearer authorization grant.
      properties:
        audience:
          description: Value for the "aud" claim.
          type: string
        issuer:
          description: Value for the "iss" claim.
          type: string
        subject:
          description: Value for the "sub" claim.
          type: string
      type: object
    GoogleCloudConnectorsV1AuthConfigSshPublicKey:
      description: Parameters to support Ssh public key Authentication.
      properties:
        certType:
          description: Format of SSH Client cert.
          type: string
        sshClientCert:
          $ref: "#/components/schemas/GoogleCloudConnectorsV1Secret"
          description: SSH Client Cert. It should contain both public and private key.
        sshClientCertPass:
          $ref: "#/components/schemas/GoogleCloudConnectorsV1Secret"
          description: Password (passphrase) for ssh client certificate if it has one.
        username:
          description: The user account used to authenticate.
          type: string
      type: object
    GoogleCloudConnectorsV1AuthConfigUserPassword:
      description: Parameters to support Username and Password Authentication.
      properties:
        password:
          $ref: "#/components/schemas/GoogleCloudConnectorsV1Secret"
          description: Secret version reference containing the password.
        username:
          description: Username.
          type: string
      type: object
    GoogleCloudConnectorsV1ConfigVariable:
      description: ConfigVariable represents a configuration variable present in a Connection. or AuthConfig.
      properties:
        boolValue:
          description: Value is a bool.
          type: boolean
        intValue:
          description: Value is an integer
          format: int64
          type: string
        key:
          description: Key of the config variable.
          type: string
        secretValue:
          $ref: "#/components/schemas/GoogleCloudConnectorsV1Secret"
          description: Value is a secret.
        stringValue:
          description: Value is a string.
          type: string
      type: object
    GoogleCloudConnectorsV1Connection:
      description: Connection represents an instance of connector.
      properties:
        authConfig:
          $ref: "#/components/schemas/GoogleCloudConnectorsV1AuthConfig"
          description: Optional. Configuration for establishing the connection's authentication with an external system.
        configVariables:
          description: Optional. Configuration for configuring the connection with an external system.
          items:
            $ref: "#/components/schemas/GoogleCloudConnectorsV1ConfigVariable"
          type: array
        connectorVersion:
          description: "Required. Connector version on which the connection is created. The format is: projects/*/locations/*/providers/*/connectors/*/versions/* Only global location is supported for ConnectorVersion resource."
          type: string
        createTime:
          description: Output only. Created time.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. Description of the resource.
          type: string
        destinationConfigs:
          description: Optional. Configuration of the Connector's destination. Only accepted for Connectors that accepts user defined destination(s).
          items:
            $ref: "#/components/schemas/GoogleCloudConnectorsV1DestinationConfig"
          type: array
        envoyImageLocation:
          description: "Output only. GCR location where the envoy image is stored. formatted like: gcr.io/{bucketName}/{imageName}"
          readOnly: true
          type: string
        imageLocation:
          description: "Output only. GCR location where the runtime image is stored. formatted like: gcr.io/{bucketName}/{imageName}"
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
          type: object
        lockConfig:
          $ref: "#/components/schemas/GoogleCloudConnectorsV1LockConfig"
          description: Optional. Configuration that indicates whether or not the Connection can be edited.
        name:
          description: "Output only. Resource name of the Connection. Format: projects/{project}/locations/{location}/connections/{connection}"
          readOnly: true
          type: string
        nodeConfig:
          $ref: "#/components/schemas/GoogleCloudConnectorsV1NodeConfig"
          description: Optional. Configuration for the connection.
        serviceAccount:
          description: Optional. Service account needed for runtime plane to access GCP resources.
          type: string
        serviceDirectory:
          description: Output only. The name of the Service Directory service name. Used for Private Harpoon to resolve the ILB address. e.g. "projects/cloud-connectors-e2e-testing/locations/us-central1/namespaces/istio-system/services/istio-ingressgateway-connectors"
          readOnly: true
          type: string
        status:
          $ref: "#/components/schemas/GoogleCloudConnectorsV1ConnectionStatus"
          description: Output only. Current status of the connection.
          readOnly: true
        suspended:
          description: Optional. Suspended indicates if a user has suspended a connection or not.
          type: boolean
        updateTime:
          description: Output only. Updated time.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudConnectorsV1ConnectionStatus:
      description: ConnectionStatus indicates the state of the connection.
      properties:
        description:
          description: Description.
          type: string
        state:
          description: State.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - INACTIVE
            - DELETING
            - UPDATING
            - ERROR
          type: string
        status:
          description: Status provides detailed information for the state.
          type: string
      type: object
    GoogleCloudConnectorsV1Destination:
      properties:
        host:
          description: For publicly routable host.
          type: string
        port:
          description: The port is the target port number that is accepted by the destination.
          format: int32
          type: integer
        serviceAttachment:
          description: "PSC service attachments. Format: projects/*/regions/*/serviceAttachments/*"
          type: string
      type: object
    GoogleCloudConnectorsV1DestinationConfig:
      description: Define the Connectors target endpoint.
      properties:
        destinations:
          description: The destinations for the key.
          items:
            $ref: "#/components/schemas/GoogleCloudConnectorsV1Destination"
          type: array
        key:
          description: The key is the destination identifier that is supported by the Connector.
          type: string
      type: object
    GoogleCloudConnectorsV1LockConfig:
      description: Determines whether or no a connection is locked. If locked, a reason must be specified.
      properties:
        locked:
          description: Indicates whether or not the connection is locked.
          type: boolean
        reason:
          description: Describes why a connection is locked.
          type: string
      type: object
    GoogleCloudConnectorsV1NodeConfig:
      description: Configuration for the connection.
      properties:
        maxNodeCount:
          description: Maximum number of nodes in the runtime nodes.
          format: int32
          type: integer
        minNodeCount:
          description: Minimum number of nodes in the runtime nodes.
          format: int32
          type: integer
      type: object
    GoogleCloudConnectorsV1Secret:
      description: Secret provides a reference to entries in Secret Manager.
      properties:
        secretVersion:
          description: "The resource name of the secret version in the format, format as: `projects/*/secrets/*/versions/*`."
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaAccessToken:
      description: The access token represents the authorization of a specific application to access specific parts of a user’s data.
      properties:
        accessToken:
          description: The access token encapsulating the security identity of a process or thread.
          type: string
        accessTokenExpireTime:
          description: Required. The approximate time until the access token retrieved is valid.
          format: google-datetime
          type: string
        refreshToken:
          description: If the access token will expire, use the refresh token to obtain another access token.
          type: string
        refreshTokenExpireTime:
          description: The approximate time until the refresh token retrieved is valid.
          format: google-datetime
          type: string
        tokenType:
          description: Only support "bearer" token in v1 as bearer token is the predominant type used with OAuth 2.0.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaArchiveBundleRequest:
      description: Request for ArchiveBundle.
      properties: {}
      type: object
    GoogleCloudIntegrationsV1alphaArchiveBundleResponse:
      description: Response for ArchiveBundle.
      properties: {}
      type: object
    GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionRequest:
      description: Request for ArchiveIntegrationVersion.
      properties: {}
      type: object
    GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionResponse:
      description: Response for ArchiveIntegrationVersion.
      properties: {}
      type: object
    GoogleCloudIntegrationsV1alphaAttemptStats:
      description: Status for the execution attempt.
      properties:
        endTime:
          description: The end time of the event execution for current attempt.
          format: google-datetime
          type: string
        startTime:
          description: The start time of the event execution for current attempt. This could be in the future if it's been scheduled.
          format: google-datetime
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaAuthConfig:
      description: The AuthConfig resource use to hold channels and connection config data.
      properties:
        certificateId:
          description: Certificate id for client certificate
          type: string
        createTime:
          description: Output only. The timestamp when the auth config is created.
          format: google-datetime
          readOnly: true
          type: string
        creatorEmail:
          description: The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
          type: string
        credentialType:
          description: Credential type of the encrypted credential.
          enum:
            - CREDENTIAL_TYPE_UNSPECIFIED
            - USERNAME_AND_PASSWORD
            - API_KEY
            - OAUTH2_AUTHORIZATION_CODE
            - OAUTH2_IMPLICIT
            - OAUTH2_CLIENT_CREDENTIALS
            - OAUTH2_RESOURCE_OWNER_CREDENTIALS
            - JWT
            - AUTH_TOKEN
            - SERVICE_ACCOUNT
            - CLIENT_CERTIFICATE_ONLY
            - OIDC_TOKEN
          type: string
        decryptedCredential:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaCredential"
          description: Raw auth credentials.
        description:
          description: A description of the auth config.
          type: string
        displayName:
          description: The name of the auth config.
          type: string
        encryptedCredential:
          description: Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key.
          format: byte
          type: string
        expiryNotificationDuration:
          description: User can define the time to receive notification after which the auth config becomes invalid. Support up to 30 days. Support granularity in hours.
          items:
            format: google-duration
            type: string
          type: array
        lastModifierEmail:
          description: The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
          type: string
        name:
          description: Resource name of the SFDC instance projects/{project}/locations/{location}/authConfigs/{authConfig}.
          type: string
        overrideValidTime:
          description: User provided expiry time to override. For the example of Salesforce, username/password credentials can be valid for 6 months depending on the instance settings.
          format: google-datetime
          type: string
        reason:
          description: The reason / details of the current status.
          type: string
        state:
          description: The status of the auth config.
          enum:
            - STATE_UNSPECIFIED
            - VALID
            - INVALID
            - SOFT_DELETED
            - EXPIRED
            - UNAUTHORIZED
            - UNSUPPORTED
          type: string
        updateTime:
          description: Output only. The timestamp when the auth config is modified.
          format: google-datetime
          readOnly: true
          type: string
        validTime:
          description: The time until the auth config is valid. Empty or max value is considered the auth config won't expire.
          format: google-datetime
          type: string
        visibility:
          description: The visibility of the auth config.
          enum:
            - AUTH_CONFIG_VISIBILITY_UNSPECIFIED
            - PRIVATE
            - CLIENT_VISIBLE
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaAuthToken:
      description: The credentials to authenticate a user agent with a server that is put in HTTP Authorization request header.
      properties:
        token:
          description: The token for the auth type.
          type: string
        type:
          description: Authentication type, e.g. "Basic", "Bearer", etc.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaBooleanParameterArray:
      description: This message only contains a field of boolean array.
      properties:
        booleanValues:
          description: Boolean array.
          items:
            type: boolean
          type: array
      type: object
    GoogleCloudIntegrationsV1alphaCancelExecutionRequest:
      description: Request for cancelling an execution.
      properties: {}
      type: object
    GoogleCloudIntegrationsV1alphaCancelExecutionResponse:
      description: Response for cancelling an execution.
      properties:
        isCanceled:
          description: True if cancellation performed successfully
          type: boolean
      type: object
    GoogleCloudIntegrationsV1alphaCertificate:
      description: The certificate definition
      properties:
        certificateStatus:
          description: Status of the certificate
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - EXPIRED
          type: string
        credentialId:
          description: Immutable. Credential id that will be used to register with trawler INTERNAL_ONLY
          type: string
        description:
          description: Description of the certificate
          type: string
        displayName:
          description: Name of the certificate
          type: string
        name:
          description: Output only. Auto generated primary key
          readOnly: true
          type: string
        rawCertificate:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaClientCertificate"
          description: Input only. Raw client certificate which would be registered with trawler
        requestorId:
          description: Immutable. Requestor ID to be used to register certificate with trawler
          type: string
        validEndTime:
          description: Output only. The timestamp after which certificate will expire
          format: google-datetime
          readOnly: true
          type: string
        validStartTime:
          description: Output only. The timestamp after which certificate will be valid
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaClientCertificate:
      description: Contains client certificate information
      properties:
        encryptedPrivateKey:
          description: The ssl certificate encoded in PEM format. This string must include the begin header and end footer lines. For example, -----BEGIN CERTIFICATE----- MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1 JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
          type: string
        passphrase:
          description: "'passphrase' should be left unset if private key is not encrypted. Note that 'passphrase' is not the password for web server, but an extra layer of security to protected private key."
          type: string
        sslCertificate:
          description: The ssl certificate encoded in PEM format. This string must include the begin header and end footer lines. For example, -----BEGIN CERTIFICATE----- MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1 JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaCloudSchedulerConfig:
      description: Cloud Scheduler Trigger configuration
      properties:
        cronTab:
          description: Required. The cron tab of cloud scheduler trigger.
          type: string
        errorMessage:
          description: Optional. When the job was deleted from Pantheon UI, error_message will be populated when Get/List integrations
          type: string
        location:
          description: Required. The location where associated cloud scheduler job will be created
          type: string
        serviceAccountEmail:
          description: Required. Service account used by Cloud Scheduler to trigger the integration at scheduled time
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaConnectionSchemaMetadata:
      description: Metadata of runtime connection schema.
      properties:
        actions:
          description: List of actions.
          items:
            type: string
          type: array
        entities:
          description: List of entity names.
          items:
            type: string
          type: array
      type: object
    GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectRequest:
      description: Request for CreateAppsScriptProject rpc call.
      properties:
        appsScriptProject:
          description: The name of the Apps Script project to be created.
          type: string
        authConfigId:
          description: The auth config id necessary to fetch the necessary credentials to create the project for external clients
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectResponse:
      description: Response for CreateAppsScriptProject rpc call.
      properties:
        projectId:
          description: The created AppsScriptProject ID.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaCreateBundleRequest:
      description: PROTECT WITH A VISIBILITY LABEL. THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. Request to create a new Bundle.
      properties:
        bundleId:
          description: Required. name of the bundle that will be created
          type: string
        integrations:
          description: A list of integrations that can be executed by the bundle
          items:
            type: string
          type: array
        secondaryCustomerOrgId:
          description: Optional. The prefix for the SA, it should be in the format "o". This is an optional field, and if empty service account will be created per project, where we are creating bundle. This should only be used as the org ID for which we want to run the integrations in the bundle.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaCreateBundleResponse:
      description: Response for create bundle.
      properties:
        config:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationBundleConfig"
          description: It contains the bundle data
        triggerId:
          description: trigger_id of the bundle task
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaCredential:
      description: Defines parameters for a single, canonical credential.
      properties:
        authToken:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaAuthToken"
          description: Auth token credential
        credentialType:
          description: Credential type associated with auth config.
          enum:
            - CREDENTIAL_TYPE_UNSPECIFIED
            - USERNAME_AND_PASSWORD
            - API_KEY
            - OAUTH2_AUTHORIZATION_CODE
            - OAUTH2_IMPLICIT
            - OAUTH2_CLIENT_CREDENTIALS
            - OAUTH2_RESOURCE_OWNER_CREDENTIALS
            - JWT
            - AUTH_TOKEN
            - SERVICE_ACCOUNT
            - CLIENT_CERTIFICATE_ONLY
            - OIDC_TOKEN
          type: string
        jwt:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaJwt"
          description: JWT credential
        oauth2AuthorizationCode:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCode"
          description: The api_key and oauth2_implicit are not covered in v1 and will be picked up once v1 is implemented. ApiKey api_key = 3; OAuth2 authorization code credential
        oauth2ClientCredentials:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaOAuth2ClientCredentials"
          description: OAuth2Implicit oauth2_implicit = 5; OAuth2 client credentials
        oauth2ResourceOwnerCredentials:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentials"
          description: OAuth2 resource owner credentials
        oidcToken:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaOidcToken"
          description: Google OIDC ID Token
        serviceAccountCredentials:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaServiceAccountCredentials"
          description: Service account credential
        usernameAndPassword:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaUsernameAndPassword"
          description: Username and password credential
      type: object
    GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionRequest:
      description: Request for DeactivateIntegrationVersion.
      properties: {}
      type: object
    GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionResponse:
      description: Response for DeactivateIntegrationVersion.
      properties: {}
      type: object
    GoogleCloudIntegrationsV1alphaDoubleParameterArray:
      description: This message only contains a field of double number array.
      properties:
        doubleValues:
          description: Double number array.
          items:
            format: double
            type: number
          type: array
      type: object
    GoogleCloudIntegrationsV1alphaDownloadIntegrationVersionResponse:
      description: Response for DownloadIntegrationVersion.
      properties:
        content:
          description: String representation of the integration version.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaEnumerateConnectorPlatformRegionsResponse:
      description: Response containing all provisioned regions for Connector Platform.
      properties:
        regions:
          description: All regions where Connector Platform is provisioned.
          items:
            type: string
          type: array
      type: object
    GoogleCloudIntegrationsV1alphaEventParameter:
      description: This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus.
      properties:
        key:
          description: Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the integration definition.
          type: string
        value:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaValueType"
          description: Values for the defined keys. Each value can either be string, int, double or any proto message.
      type: object
    GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest:
      description: The request for executing an integration.
      properties:
        doNotPropagateError:
          description: Optional. Flag to determine how to should propagate errors. If this flag is set to be true, it will not throw an exception. Instead, it will return a {@link ExecuteIntegrationsResponse} with an execution id and error messages as PostWithTriggerIdExecutionException in {@link EventParameters}. The flag is set to be false by default.
          type: boolean
        executionId:
          description: Optional. The id of the ON_HOLD execution to be resumed.
          type: string
        inputParameters:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaValueType"
          description: Optional. Input parameters used by integration execution.
          type: object
        parameterEntries:
          description: Optional. Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.
          items:
            $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterEntry"
          type: array
        parameters:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoEventParameters"
          description: Optional. Passed in as parameters to each integration execution. Redacted
        requestId:
          description: "Optional. This is used to de-dup incoming request: if the duplicate request was detected, the response from the previous execution is returned."
          type: string
        triggerId:
          description: Optional. Matched against all {@link TriggerConfig}s across all integrations. i.e. TriggerConfig.trigger_id.equals(trigger_id)
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaExecuteIntegrationsResponse:
      description: The response for executing an integration.
      properties:
        eventParameters:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoEventParameters"
          description: Details for the integration that were executed.
        executionFailed:
          description: Is true if any execution in the integration failed. False otherwise.
          type: boolean
        executionId:
          description: The id of the execution corresponding to this run of integration.
          type: string
        outputParameters:
          additionalProperties:
            description: Properties of the object.
          description: "OUTPUT parameters in format of Map. Where Key is the name of the parameter. Note: Name of the system generated parameters are wrapped by backtick(`) to distinguish them from the user defined parameters."
          type: object
        parameterEntries:
          description: Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.
          items:
            $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterEntry"
          type: array
      type: object
    GoogleCloudIntegrationsV1alphaExecution:
      description: The Execution resource contains detailed information of an individual integration execution.
      properties:
        createTime:
          description: Output only. Created time of the execution.
          format: google-datetime
          readOnly: true
          type: string
        directSubExecutions:
          description: Direct sub executions of the following Execution.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaExecution"
          type: array
        eventExecutionDetails:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoEventExecutionDetails"
          description: The execution info about this event.
        executionDetails:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaExecutionDetails"
          description: Detailed info of this execution.
        executionMethod:
          description: The ways user posts this event.
          enum:
            - EXECUTION_METHOD_UNSPECIFIED
            - POST
            - POST_TO_QUEUE
            - SCHEDULE
          type: string
        name:
          description: Auto-generated primary key.
          type: string
        requestParameters:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaValueType"
          description: Event parameters come in as part of the request.
          type: object
        requestParams:
          description: Event parameters come in as part of the request.
          items:
            $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterEntry"
          type: array
        responseParameters:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaValueType"
          description: Event parameters returned as part of the response.
          type: object
        responseParams:
          description: Event parameters come out as part of the response.
          items:
            $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterEntry"
          type: array
        triggerId:
          description: The trigger id of the integration trigger config. If both trigger_id and client_id is present, the integration is executed from the start tasks provided by the matching trigger config otherwise it is executed from the default start tasks.
          type: string
        updateTime:
          description: Output only. Last modified time of the execution.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaExecutionDetails:
      description: "Contains the details of the execution info: this includes the tasks execution details plus the event execution statistics."
      properties:
        attemptStats:
          description: List of Start and end time of the execution attempts.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaAttemptStats"
          type: array
        executionSnapshots:
          description: List of snapshots taken during the execution.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaExecutionSnapshot"
          type: array
        state:
          description: Status of the execution.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - PROCESSING
            - SUCCEEDED
            - FAILED
            - CANCELLED
            - RETRY_ON_HOLD
            - SUSPENDED
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaExecutionSnapshot:
      description: Contains the snapshot of the execution for a given checkpoint.
      properties:
        checkpointTaskNumber:
          description: Indicates "after which checkpoint task's execution" this snapshot is taken.
          type: string
        executionSnapshotMetadata:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaExecutionSnapshotExecutionSnapshotMetadata"
          description: Metadata of the execution snapshot.
        params:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaValueType"
          description: Parameters used during the execution.
          type: object
        taskExecutionDetails:
          description: All of the task execution details at the given point of time.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaTaskExecutionDetails"
          type: array
      type: object
    GoogleCloudIntegrationsV1alphaExecutionSnapshotExecutionSnapshotMetadata:
      description: Metadata of the execution snapshot.
      properties:
        executionAttempt:
          description: the execution attempt number this snapshot belongs to.
          format: int32
          type: integer
        task:
          description: the task name associated with this snapshot.
          type: string
        taskAttempt:
          description: the task attempt number this snapshot belongs to.
          format: int32
          type: integer
        taskNumber:
          description: The task number associated with this snapshot.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaFailurePolicy:
      description: Policy that defines the task retry logic and failure type. If no FailurePolicy is defined for a task, all its dependent tasks will not be executed (i.e, a `retry_strategy` of NONE will be applied).
      properties:
        intervalTime:
          description: Required if retry_strategy is FIXED_INTERVAL or LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the initial interval in seconds for backoff.
          format: google-datetime
          type: string
        maxRetries:
          description: Required if retry_strategy is FIXED_INTERVAL or LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the number of times the task will be retried if failed.
          format: int32
          type: integer
        retryStrategy:
          description: Defines what happens to the task upon failure.
          enum:
            - RETRY_STRATEGY_UNSPECIFIED
            - IGNORE
            - NONE
            - FATAL
            - FIXED_INTERVAL
            - LINEAR_BACKOFF
            - EXPONENTIAL_BACKOFF
            - RESTART_INTEGRATION_WITH_BACKOFF
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaGenerateTokenResponse:
      description: Returns success or error message
      properties:
        message:
          description: The message that notifies the user if the request succeeded or not.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaGetBundleResponse:
      description: Response for GetBundle.
      properties:
        config:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationBundleConfig"
          description: It contains the bundle data
      type: object
    GoogleCloudIntegrationsV1alphaIntParameterArray:
      description: This message only contains a field of integer array.
      properties:
        intValues:
          description: Integer array.
          items:
            format: int64
            type: string
          type: array
      type: object
    GoogleCloudIntegrationsV1alphaIntegration:
      description: The integration definition.
      properties:
        active:
          description: Required. If any integration version is published.
          type: boolean
        description:
          description: Optional.
          type: string
        name:
          description: Required. The resource name of the integration.
          type: string
        updateTime:
          description: Output only. Auto-generated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaIntegrationAlertConfig:
      description: Message to be used to configure custom alerting in the {@code EventConfig} protos for an event.
      properties:
        aggregationPeriod:
          description: The period over which the metric value should be aggregated and evaluated. Format is , where integer should be a positive integer and unit should be one of (s,m,h,d,w) meaning (second, minute, hour, day, week). For an EXPECTED_MIN threshold, this aggregation_period must be lesser than 24 hours.
          type: string
        alertThreshold:
          description: For how many contiguous aggregation periods should the expected min or max be violated for the alert to be fired.
          format: int32
          type: integer
        disableAlert:
          description: Set to false by default. When set to true, the metrics are not aggregated or pushed to Monarch for this integration alert.
          type: boolean
        displayName:
          description: Name of the alert. This will be displayed in the alert subject. If set, this name should be unique within the scope of the integration.
          type: string
        durationThreshold:
          description: Should be specified only for *AVERAGE_DURATION and *PERCENTILE_DURATION metrics. This member should be used to specify what duration value the metrics should exceed for the alert to trigger.
          format: google-duration
          type: string
        metricType:
          description: The type of metric.
          enum:
            - METRIC_TYPE_UNSPECIFIED
            - EVENT_ERROR_RATE
            - EVENT_WARNING_RATE
            - TASK_ERROR_RATE
            - TASK_WARNING_RATE
            - TASK_RATE
            - EVENT_RATE
            - EVENT_AVERAGE_DURATION
            - EVENT_PERCENTILE_DURATION
            - TASK_AVERAGE_DURATION
            - TASK_PERCENTILE_DURATION
          type: string
        onlyFinalAttempt:
          description: For either events or tasks, depending on the type of alert, count only final attempts, not retries.
          type: boolean
        thresholdType:
          description: The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
          enum:
            - THRESHOLD_TYPE_UNSPECIFIED
            - EXPECTED_MIN
            - EXPECTED_MAX
          type: string
        thresholdValue:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdValue"
          description: The metric value, above or below which the alert should be triggered.
      type: object
    GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdValue:
      description: The threshold value of the metric, above or below which the alert should be triggered. See EventAlertConfig or TaskAlertConfig for the different alert metric types in each case. For the *RATE metrics, one or both of these fields may be set. Zero is the default value and can be left at that. For *PERCENTILE_DURATION metrics, one or both of these fields may be set, and also, the duration threshold value should be specified in the threshold_duration_ms member below. For *AVERAGE_DURATION metrics, these fields should not be set at all. A different member, threshold_duration_ms, must be set in the EventAlertConfig or the TaskAlertConfig.
      properties:
        absolute:
          description: Absolute value threshold.
          format: int64
          type: string
        percentage:
          description: Percentage threshold.
          format: int32
          type: integer
      type: object
    GoogleCloudIntegrationsV1alphaIntegrationBundleConfig:
      description: This proto holds the core runner data in the bundle task. It is not expected to be directly edited by the user. Instead, a default value will be provided at the task creation time.
      properties:
        integrations:
          description: A bundle of integrations that can be executed by the task at runtime.
          items:
            type: string
          type: array
        serviceAccount:
          description: Output only. The service account created and owned by IP and added to the customers GCP project.
          readOnly: true
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaIntegrationParameter:
      description: Integration Parameter is defined in the integration config and are used to provide information about data types of the expected parameters and provide any default values if needed. They can also be used to add custom attributes. These are static in nature and should not be used for dynamic event definition.
      properties:
        dataType:
          description: Type of the parameter.
          enum:
            - INTEGRATION_PARAMETER_DATA_TYPE_UNSPECIFIED
            - STRING_VALUE
            - INT_VALUE
            - DOUBLE_VALUE
            - BOOLEAN_VALUE
            - STRING_ARRAY
            - INT_ARRAY
            - DOUBLE_ARRAY
            - BOOLEAN_ARRAY
            - JSON_VALUE
            - PROTO_VALUE
            - PROTO_ARRAY
          type: string
        defaultValue:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaValueType"
          description: Default values for the defined keys. Each value can either be string, int, double or any proto message or a serialized object.
        displayName:
          description: The name (without prefix) to be displayed in the UI for this parameter. E.g. if the key is "foo.bar.myName", then the name would be "myName".
          type: string
        inputOutputType:
          description: Specifies the input/output type for the parameter.
          enum:
            - IN_OUT_TYPE_UNSPECIFIED
            - IN
            - OUT
            - IN_OUT
          type: string
        isTransient:
          description: Whether this parameter is a transient parameter.
          type: boolean
        jsonSchema:
          description: This schema will be used to validate runtime JSON-typed values of this parameter.
          type: string
        key:
          description: Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the integration definition.
          type: string
        producer:
          description: The identifier of the node (TaskConfig/TriggerConfig) this parameter was produced by, if it is a transient param or a copy of an input param.
          type: string
        searchable:
          description: Searchable in the execution log or not.
          type: boolean
      type: object
    GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion:
      description: IntegrationTemplateVersion definition. An IntegrationTemplateVersion provides configurations required to construct an IntegrationVersion. It cannot be executed directly like an Integration. Users can create IntegrationTemplateVersions using Integrations. These Templates can be shared by users across GCP projects.
      properties:
        createTime:
          description: Output only. Auto-generated.
          format: google-datetime
          readOnly: true
          type: string
        databasePersistencePolicy:
          description: Optional. Flag to disable database persistence for execution data, including event execution info, execution export info, execution metadata index and execution param index.
          enum:
            - DATABASE_PERSISTENCE_POLICY_UNSPECIFIED
            - DATABASE_PERSISTENCE_DISABLED
          type: string
        description:
          description: Optional. The templateversion description. Permitted format is alphanumeric with underscores and no spaces.
          type: string
        lastModifierEmail:
          description: Optional. The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
          type: string
        name:
          description: "Output only. Auto-generated primary key. Format: projects/{project}/locations/{location}/products/{product}/integrationtemplates/{integrationtemplate}/versions/{version}"
          readOnly: true
          type: string
        parentIntegrationVersionId:
          description: Optional. ID of the IntegrationVersion that was used to create this IntegrationTemplateVersion
          type: string
        snapshotNumber:
          description: Output only. An increasing sequence that is set when a new snapshot is created.
          format: int64
          readOnly: true
          type: string
        status:
          description: Optional. Generated by eventbus. User should not set it as an input.
          enum:
            - UNKNOWN
            - DRAFT
            - ACTIVE
            - ARCHIVED
            - SNAPSHOT
          type: string
        taskConfigs:
          description: Optional. Task configuration for the IntegrationTemplateVersion. It's optional, but the IntegrationTemplateVersion doesn't do anything without task_configs.
          items:
            $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoTaskConfig"
          type: array
        teardown:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoTeardown"
          description: Optional. Contains a graph of tasks that will be executed before putting the event in a terminal state (SUCCEEDED/FAILED/FATAL), regardless of success or failure, similar to "finally" in code.
        templateParameters:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoWorkflowParameters"
          description: Optional. Parameters that are expected to be passed to the IntegrationTemplateVersion when an event is triggered. This consists of all the parameters that are expected in the IntegrationTemplateVersion execution. This gives the user the ability to provide default values, add information like PII and also provide data types of each parameter.
        triggerConfigs:
          description: Optional. Trigger configurations.
          items:
            $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoTriggerConfig"
          type: array
        updateTime:
          description: Output only. Auto-generated.
          format: google-datetime
          readOnly: true
          type: string
        userLabel:
          description: Optional. A user-defined label that annotates an integration version. Typically, this is only set when the integration version is created.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaIntegrationVersion:
      description: The integration version definition.
      properties:
        createTime:
          description: Output only. Auto-generated.
          format: google-datetime
          readOnly: true
          type: string
        databasePersistencePolicy:
          description: Optional. Flag to disable database persistence for execution data, including event execution info, execution export info, execution metadata index and execution param index.
          enum:
            - DATABASE_PERSISTENCE_POLICY_UNSPECIFIED
            - DATABASE_PERSISTENCE_DISABLED
          type: string
        description:
          description: Optional. The integration description.
          type: string
        integrationParameters:
          description: Optional. Parameters that are expected to be passed to the integration when an event is triggered. This consists of all the parameters that are expected in the integration execution. This gives the user the ability to provide default values, add information like PII and also provide data types of each parameter.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationParameter"
          type: array
        integrationParametersInternal:
          $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoWorkflowParameters"
          description: Optional. Parameters that are expected to be passed to the integration when an event is triggered. This consists of all the parameters that are expected in the integration execution. This gives the user the ability to provide default values, add information like PII and also provide data types of each parameter.
        lastModifierEmail:
          description: Optional. The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
          type: string
        lockHolder:
          description: Optional. The edit lock holder's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
          type: string
        name:
          description: Output only. Auto-generated primary key.
          readOnly: true
          type: string
        origin:
          description: Optional. The origin that indicates where this integration is coming from.
          enum:
            - UNSPECIFIED
            - UI
            - PIPER_V2
            - PIPER_V3
            - APPLICATION_IP_PROVISIONING
          type: string
        parentTemplateId:
          description: Optional. The id of the template which was used to create this integration_version.
          type: string
        snapshotNumber:
          description: Optional. An increasing sequence that is set when a new snapshot is created. The last created snapshot can be identified by [workflow_name, org_id latest(snapshot_number)]. However, last created snapshot need not be same as the HEAD. So users should always use "HEAD" tag to identify the head.
          format: int64
          type: string
        state:
          description: Output only. User should not set it as an input.
          enum:
            - INTEGRATION_STATE_UNSPECIFIED
            - DRAFT
            - ACTIVE
            - ARCHIVED
            - SNAPSHOT
          readOnly: true
          type: string
        status:
          description: Output only. Generated by eventbus. User should not set it as an input.
          enum:
            - UNKNOWN
            - DRAFT
            - ACTIVE
            - ARCHIVED
            - SNAPSHOT
          readOnly: true
          type: string
        taskConfigs:
          description: Optional. Task configuration for the integration. It's optional, but the integration doesn't do anything without task_configs.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaTaskConfig"
          type: array
        taskConfigsInternal:
          description: Optional. Task configuration for the integration. It's optional, but the integration doesn't do anything without task_configs.
          items:
            $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoTaskConfig"
          type: array
        teardown:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoTeardown"
          description: Optional. Contains a graph of tasks that will be executed before putting the event in a terminal state (SUCCEEDED/FAILED/FATAL), regardless of success or failure, similar to "finally" in code.
        triggerConfigs:
          description: Optional. Trigger configurations.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaTriggerConfig"
          type: array
        triggerConfigsInternal:
          description: Optional. Trigger configurations.
          items:
            $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoTriggerConfig"
          type: array
        updateTime:
          description: Output only. Auto-generated.
          format: google-datetime
          readOnly: true
          type: string
        userLabel:
          description: Optional. A user-defined label that annotates an integration version. Typically, this is only set when the integration version is created.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaJwt:
      description: Represents JSON web token(JWT), which is a compact, URL-safe means of representing claims to be transferred between two parties, enabling the claims to be digitally signed or integrity protected.
      properties:
        jwt:
          description: The token calculated by the header, payload and signature.
          type: string
        jwtHeader:
          description: Identifies which algorithm is used to generate the signature.
          type: string
        jwtPayload:
          description: Contains a set of claims. The JWT specification defines seven Registered Claim Names which are the standard fields commonly included in tokens. Custom claims are usually also included, depending on the purpose of the token.
          type: string
        secret:
          description: User's pre-shared secret to sign the token.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaLiftSuspensionRequest:
      description: Request for lift Suspension
      properties:
        suspensionResult:
          description: User passed in suspension result and will be used to control workflow execution branching behavior by setting up corresponnding edge condition with suspension result. For example, if you want to lift the suspension, you can pass "Approved", or if you want to reject the suspension and terminate workfloe execution, you can pass "Rejected" and terminate the workflow execution with configuring the edge condition.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaLiftSuspensionResponse:
      description: Response of lift Suspense
      properties:
        eventExecutionInfoId:
          description: Execution Id that will be returned
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectRequest:
      description: Request for LinkAppsScriptProject rpc call.
      properties:
        scriptId:
          description: The id of the Apps Script project to be linked.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectResponse:
      description: Response for LinkAppsScriptProject rpc call.
      properties:
        scriptId:
          description: The id of the linked Apps Script project.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaListAuthConfigsResponse:
      description: Response to list AuthConfigs.
      properties:
        authConfigs:
          description: The list of AuthConfigs retrieved.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaAuthConfig"
          type: array
        nextPageToken:
          description: The token used to retrieve the next page of results.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaListCertificatesResponse:
      description: Response to list Certificates.
      properties:
        certificates:
          description: The list of Certificates retrieved.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaCertificate"
          type: array
        nextPageToken:
          description: The token used to retrieve the next page of results.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaListConnectionsResponse:
      description: Response containing Connections listed by region.
      properties:
        connections:
          description: Connections.
          items:
            $ref: "#/components/schemas/GoogleCloudConnectorsV1Connection"
          type: array
        nextPageToken:
          description: Next page token.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaListExecutionSnapshotsResponse:
      description: Response for listing the integration execution snapshot.
      properties:
        executionSnapshots:
          description: Required. The detailed information for the execution snapshot.
          items:
            $ref: "#/components/schemas/EnterpriseCrmEventbusProtoEventExecutionSnapshot"
          type: array
        nextPageToken:
          description: The token returned in the previous response.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaListExecutionsResponse:
      description: Response for listing the integration execution data.
      properties:
        executionInfos:
          description: Required. The detailed information of requested executions.
          items:
            $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo"
          type: array
        executions:
          description: The detailed information of requested executions
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaExecution"
          type: array
        nextPageToken:
          description: The token used to retrieve the next page results.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaListIntegrationTemplateVersionsResponse:
      description: Response for IntegrationTemplateVersions.ListIntegrationTemplateVersions.
      properties:
        integrationTemplateVersions:
          description: The IntegrationTemplateVersions which match the request.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion"
          type: array
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaListIntegrationVersionsResponse:
      description: Response for ListIntegrationVersions.
      properties:
        integrationVersions:
          description: The integrations which match the request.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationVersion"
          type: array
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        noPermission:
          description: Whether the user has no permission on the version or not.
          type: boolean
      type: object
    GoogleCloudIntegrationsV1alphaListIntegrationsResponse:
      description: Response for ListIntegrations.
      properties:
        integrations:
          description: The integrations which match the request.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaIntegration"
          type: array
        nextPageToken:
          description: The next page token for the response.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaListRuntimeActionSchemasResponse:
      description: Response for listing RuntimeActionSchemas for a specific Connection.
      properties:
        nextPageToken:
          description: Next page token.
          type: string
        runtimeActionSchemas:
          description: Runtime action schemas.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaRuntimeActionSchema"
          type: array
      type: object
    GoogleCloudIntegrationsV1alphaListRuntimeEntitySchemasResponse:
      description: Response for listing RuntimeEntitySchemas for a specific Connection.
      properties:
        nextPageToken:
          description: Next page token.
          type: string
        runtimeEntitySchemas:
          description: Runtime entity schemas.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaRuntimeEntitySchema"
          type: array
      type: object
    GoogleCloudIntegrationsV1alphaListSfdcChannelsResponse:
      description: Response to list SfdcChannels.
      properties:
        nextPageToken:
          description: The token used to retrieve the next page of results.
          type: string
        sfdcChannels:
          description: The list of SfdcChannels retrieved.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaSfdcChannel"
          type: array
      type: object
    GoogleCloudIntegrationsV1alphaListSfdcInstancesResponse:
      description: Response to list SfdcInstances.
      properties:
        nextPageToken:
          description: The token used to retrieve the next page of results.
          type: string
        sfdcInstances:
          description: The list of SfdcInstances retrieved.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaSfdcInstance"
          type: array
      type: object
    GoogleCloudIntegrationsV1alphaListSuspensionsResponse:
      description: Response for Suspensions.ListSuspensions.
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results.
          type: string
        suspensions:
          description: The suspensions for the relevant execution which the caller has permissions to view and resolve.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaSuspension"
          type: array
      type: object
    GoogleCloudIntegrationsV1alphaListTaskEntitiesResponse:
      description: This is a UI only method and will be moved away. Response for ListTaskEntities.
      properties:
        taskEntities:
          description: The list of the tasks.
          items:
            $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoTaskEntity"
          type: array
      type: object
    GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequest:
      description: The request to get data for monarch connector config.
      properties:
        duration:
          description: 'How long the series data range: "1h","1d",etc.'
          format: google-duration
          type: string
        endTime:
          description: Final time to query over, or the current time if left unset.
          format: google-datetime
          type: string
        mashQuery:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQuery"
          description: Required. Query for searching data in monarch.
        metricFieldTable:
          description: Returns a table of all possible metric field values within the specified duration, ignoring any data samples. Useful for autocomplete functionality.
          type: boolean
        outputPeriod:
          description: The output period for the query. Must be set if there is a window operation within the query and unset otherwise.
          format: google-duration
          type: string
        responseTemplate:
          description: Required. Template for response.
          enum:
            - DATA_FORMAT_UNSPECIFIED
            - TABLE_CONFIG
            - APLOSE_SERIES_LIST_CONFIG
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestGroupBy:
      description: MashQuery GroupBy parameters.
      properties:
        fields:
          description: Optional. optional, metrics list for GroupBy.
          items:
            type: string
          type: array
        reducer:
          description: Optional. optional, reduce function for GroupBy.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQuery:
      description: The MashQuery for searching data, set both queries for Join Operation.
      properties:
        firstQuery:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQueryComponent"
          description: Required. The components for constructing a mash query. Set "point_operation" if this is a single query
        operationMode:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQueryOperationMode"
          description: Optional. optional, only set when joining 2 queries. By default join 2 queries with join operation.
        secondQuery:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQueryComponent"
          description: Optional. optional, only set when joining 2 queries. Set "point_operation" for joined query.
      type: object
    GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQueryComponent:
      description: The components for constructing MashQuery.
      properties:
        borgTaskMetric:
          description: Required. The metric for monarch.BorgTask.
          enum:
            - BORG_TASK_METRIC_UNSPECIFIED
            - TASK_INDIVIDUAL_COUNT
            - EVENT_COUNT
            - EVENT_DURATION
            - TASK_INDIVIDUAL_DURATION
          type: string
        dataFilters:
          description: Optional. optional, filters on fetched data, "metric:client_id" not supported.
          items:
            type: string
          type: array
        fetchFilters:
          description: Optional. optional, filters for Fetch Raw, "metric:client_id" not supported.
          items:
            type: string
          type: array
        groupBy:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestGroupBy"
          description: Optional. optional, GroupBy variables.
        pointOperation:
          description: Optional. optional, Point Operation on single query or joined query.
          type: string
        timeDelta:
          description: Required. Window time delta.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQueryOperationMode:
      description: Operation between 2 query
      properties:
        joinConfig:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQueryOperationModeJoinConfig"
          description: Optional. join operation
        operationType:
          description: Optional. optional operation types.
          enum:
            - OPERATION_TYPE_UNSPECIFIED
            - UNION
            - JOIN
          type: string
        unionConfig:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQueryOperationModeUnionConfig"
          description: Optional. union operation
      type: object
    GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQueryOperationModeJoinConfig:
      description: Join Operation
      properties: {}
      type: object
    GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQueryOperationModeUnionConfig:
      description: Union operation
      properties:
        reducer:
          description: Optional. optional, reduce function
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaMonitorExecutionStatsResponse:
      description: The response for getting Execution stats.
      properties:
        aplosSeriesListData:
          $ref: "#/components/schemas/EnterpriseCrmCardsTemplatesAplosSeriesListData"
          description: List of points.
        tableData:
          $ref: "#/components/schemas/EnterpriseCrmCardsTabularData"
          description: Data in form of table.
      type: object
    GoogleCloudIntegrationsV1alphaNextTask:
      description: The task that is next in line to be executed, if the condition specified evaluated to true.
      properties:
        condition:
          description: Standard filter expression for this task to become an eligible next task.
          type: string
        description:
          description: User-provided description intended to give additional business context about the task.
          type: string
        displayName:
          description: User-provided label that is attached to this edge in the UI.
          type: string
        taskConfigId:
          description: ID of the next task.
          type: string
        taskId:
          description: Task number of the next task.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCode:
      description: The OAuth Type where the client sends request with the client id and requested scopes to auth endpoint. User sees a consent screen and auth code is received at specified redirect url afterwards. The auth code is then combined with the client id and secret and sent to the token endpoint in exchange for the access and refresh token. The refresh token can be used to fetch new access tokens.
      properties:
        accessToken:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaAccessToken"
          description: The access token received from the token endpoint.
        applyReauthPolicy:
          description: Indicates if the user has opted in Google Reauth Policy. If opted in, the refresh token will be valid for 20 hours, after which time users must re-authenticate in order to obtain a new one.
          type: boolean
        authCode:
          description: The Auth Code that is used to initially retrieve the access token.
          type: string
        authEndpoint:
          description: The auth url endpoint to send the auth code request to.
          type: string
        authParams:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaParameterMap"
          description: The auth parameters sent along with the auth code request.
        clientId:
          description: The client's id.
          type: string
        clientSecret:
          description: The client's secret.
          type: string
        requestType:
          description: Represent how to pass parameters to fetch access token
          enum:
            - REQUEST_TYPE_UNSPECIFIED
            - REQUEST_BODY
            - QUERY_PARAMETERS
            - ENCODED_HEADER
          type: string
        scope:
          description: A space-delimited list of requested scope permissions.
          type: string
        tokenEndpoint:
          description: The token url endpoint to send the token request to.
          type: string
        tokenParams:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaParameterMap"
          description: The token parameters sent along with the token request.
      type: object
    GoogleCloudIntegrationsV1alphaOAuth2ClientCredentials:
      description: For client credentials grant, the client sends a POST request with grant_type as 'client_credentials' to the authorization server. The authorization server will respond with a JSON object containing the access token.
      properties:
        accessToken:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaAccessToken"
          description: Access token fetched from the authorization server.
        clientId:
          description: The client's ID.
          type: string
        clientSecret:
          description: The client's secret.
          type: string
        requestType:
          description: Represent how to pass parameters to fetch access token
          enum:
            - REQUEST_TYPE_UNSPECIFIED
            - REQUEST_BODY
            - QUERY_PARAMETERS
            - ENCODED_HEADER
          type: string
        scope:
          description: A space-delimited list of requested scope permissions.
          type: string
        tokenEndpoint:
          description: The token endpoint is used by the client to obtain an access token by presenting its authorization grant or refresh token.
          type: string
        tokenParams:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaParameterMap"
          description: Token parameters for the auth request.
      type: object
    GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentials:
      description: For resource owner credentials grant, the client will ask the user for their authorization credentials (ususally a username and password) and send a POST request to the authorization server. The authorization server will respond with a JSON object containing the access token.
      properties:
        accessToken:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaAccessToken"
          description: Access token fetched from the authorization server.
        clientId:
          description: The client's ID.
          type: string
        clientSecret:
          description: The client's secret.
          type: string
        password:
          description: The user's password.
          type: string
        requestType:
          description: Represent how to pass parameters to fetch access token
          enum:
            - REQUEST_TYPE_UNSPECIFIED
            - REQUEST_BODY
            - QUERY_PARAMETERS
            - ENCODED_HEADER
          type: string
        scope:
          description: A space-delimited list of requested scope permissions.
          type: string
        tokenEndpoint:
          description: The token endpoint is used by the client to obtain an access token by presenting its authorization grant or refresh token.
          type: string
        tokenParams:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaParameterMap"
          description: Token parameters for the auth request.
        username:
          description: The user's username.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaOidcToken:
      description: OIDC Token
      properties:
        audience:
          description: Audience to be used when generating OIDC token. The audience claim identifies the recipients that the JWT is intended for.
          type: string
        serviceAccountEmail:
          description: The service account email to be used as the identity for the token.
          type: string
        token:
          description: ID token obtained for the service account
          type: string
        tokenExpireTime:
          description: The approximate time until the token retrieved is valid.
          format: google-datetime
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaParameterMap:
      description: A generic multi-map that holds key value pairs. They keys and values can be of any type, unless specified.
      properties:
        entries:
          description: A list of parameter map entries.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaParameterMapEntry"
          type: array
        keyType:
          description: Option to specify key type for all entries of the map. If provided then field types for all entries must conform to this.
          enum:
            - INTEGRATION_PARAMETER_DATA_TYPE_UNSPECIFIED
            - STRING_VALUE
            - INT_VALUE
            - DOUBLE_VALUE
            - BOOLEAN_VALUE
            - STRING_ARRAY
            - INT_ARRAY
            - DOUBLE_ARRAY
            - BOOLEAN_ARRAY
            - JSON_VALUE
            - PROTO_VALUE
            - PROTO_ARRAY
          type: string
        valueType:
          description: Option to specify value type for all entries of the map. If provided then field types for all entries must conform to this.
          enum:
            - INTEGRATION_PARAMETER_DATA_TYPE_UNSPECIFIED
            - STRING_VALUE
            - INT_VALUE
            - DOUBLE_VALUE
            - BOOLEAN_VALUE
            - STRING_ARRAY
            - INT_ARRAY
            - DOUBLE_ARRAY
            - BOOLEAN_ARRAY
            - JSON_VALUE
            - PROTO_VALUE
            - PROTO_ARRAY
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaParameterMapEntry:
      description: Entry is a pair of key and value.
      properties:
        key:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaParameterMapField"
          description: Key of the map entry.
        value:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaParameterMapField"
          description: Value of the map entry.
      type: object
    GoogleCloudIntegrationsV1alphaParameterMapField:
      description: Field represents either the key or value in an entry.
      properties:
        literalValue:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaValueType"
          description: Passing a literal value.
        referenceKey:
          description: Referencing one of the Integration variables.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaPublishIntegrationVersionRequest:
      description: Request for PublishIntegrationVersion.
      properties: {}
      type: object
    GoogleCloudIntegrationsV1alphaPublishIntegrationVersionResponse:
      description: Response for PublishIntegrationVersion.
      properties: {}
      type: object
    GoogleCloudIntegrationsV1alphaResolveSuspensionRequest:
      description: Request for [Suspensions.ResolveSuspensions].
      properties:
        suspension:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaSuspension"
          description: Suspension, containing the event_execution_info_id, task_id, and state to set on the corresponding suspension record.
      type: object
    GoogleCloudIntegrationsV1alphaResolveSuspensionResponse:
      description: Response for Suspensions.ResolveSuspensions.
      properties: {}
      type: object
    GoogleCloudIntegrationsV1alphaRuntimeActionSchema:
      description: Metadata of an action, including schemas for its inputs and outputs.
      properties:
        action:
          description: Name of the action.
          type: string
        inputSchema:
          description: Input parameter schema for the action.
          type: string
        outputSchema:
          description: Output parameter schema for the action.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaRuntimeEntitySchema:
      description: Metadata of an entity, including a schema for its properties.
      properties:
        arrayFieldSchema:
          description: The above schema, but for an array of the associated entity.
          type: string
        entity:
          description: Name of the entity.
          type: string
        fieldSchema:
          description: List of fields in the entity.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest:
      description: The request for scheduling an integration.
      properties:
        inputParameters:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaValueType"
          description: Optional. Input parameters used by integration execution.
          type: object
        parameterEntries:
          description: Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.
          items:
            $ref: "#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterEntry"
          type: array
        parameters:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoEventParameters"
          description: Passed in as parameters to each integration execution.
        requestId:
          description: "This is used to de-dup incoming request: if the duplicate request was detected, the response from the previous execution is returned."
          type: string
        scheduleTime:
          description: The time that the integration should be executed. If the time is less or equal to the current time, the integration is executed immediately.
          format: google-datetime
          type: string
        triggerId:
          description: Matched against all {@link TriggerConfig}s across all integrations. i.e. TriggerConfig.trigger_id.equals(trigger_id)
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaScheduleIntegrationsResponse:
      description: The response for executing an integration.
      properties:
        executionInfoIds:
          description: The execution info id for the executed integrations.
          items:
            type: string
          type: array
      type: object
    GoogleCloudIntegrationsV1alphaServiceAccountCredentials:
      description: Represents the service account which can be used to generate access token for authenticating the service call.
      properties:
        scope:
          description: A space-delimited list of requested scope permissions.
          type: string
        serviceAccount:
          description: Name of the service account that has the permission to make the request.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaSfdcChannel:
      description: The SfdcChannel that points to a CDC or Platform Event Channel.
      properties:
        channelTopic:
          description: The Channel topic defined by salesforce once an channel is opened
          type: string
        createTime:
          description: Output only. Time when the channel is created
          format: google-datetime
          readOnly: true
          type: string
        deleteTime:
          description: Output only. Time when the channel was deleted. Empty if not deleted.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: The description for this channel
          type: string
        displayName:
          description: Client level unique name/alias to easily reference a channel.
          type: string
        isActive:
          description: Indicated if a channel has any active integrations referencing it. Set to false when the channel is created, and set to true if there is any integration published with the channel configured in it.
          type: boolean
        lastReplayId:
          description: Last sfdc messsage replay id for channel
          type: string
        name:
          description: Resource name of the SFDC channel projects/{project}/locations/{location}/sfdcInstances/{sfdc_instance}/sfdcChannels/{sfdc_channel}.
          type: string
        updateTime:
          description: Output only. Time when the channel was last updated
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaSfdcInstance:
      description: The SfdcInstance resource use to hold channels and connection config data.
      properties:
        authConfigId:
          description: A list of AuthConfigs that can be tried to open the channel to SFDC
          items:
            type: string
          type: array
        createTime:
          description: Output only. Time when the instance is created
          format: google-datetime
          readOnly: true
          type: string
        deleteTime:
          description: Output only. Time when the instance was deleted. Empty if not deleted.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: A description of the sfdc instance.
          type: string
        displayName:
          description: User selected unique name/alias to easily reference an instance.
          type: string
        name:
          description: Resource name of the SFDC instance projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}.
          type: string
        serviceAuthority:
          description: URL used for API calls after authentication (the login authority is configured within the referenced AuthConfig).
          type: string
        sfdcOrgId:
          description: The SFDC Org Id. This is defined in salesforce.
          type: string
        updateTime:
          description: Output only. Time when the instance was last updated
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaStringParameterArray:
      description: This message only contains a field of string array.
      properties:
        stringValues:
          description: String array.
          items:
            type: string
          type: array
      type: object
    GoogleCloudIntegrationsV1alphaSuccessPolicy:
      description: Policy that dictates the behavior for the task after it completes successfully.
      properties:
        finalState:
          description: State to which the execution snapshot status will be set if the task succeeds.
          enum:
            - FINAL_STATE_UNSPECIFIED
            - SUCCEEDED
            - SUSPENDED
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaSuspension:
      description: A record representing a suspension.
      properties:
        approvalConfig:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaSuspensionApprovalConfig"
          description: Controls the notifications and approval permissions for this suspension.
        audit:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaSuspensionAudit"
          description: Metadata pertaining to the resolution of this suspension.
        createTime:
          description: Output only. Auto-generated.
          format: google-datetime
          readOnly: true
          type: string
        eventExecutionInfoId:
          description: Required. ID of the associated execution.
          type: string
        integration:
          description: Required. The name of the originating integration.
          type: string
        lastModifyTime:
          description: Output only. Auto-generated.
          format: google-datetime
          readOnly: true
          type: string
        name:
          description: Resource name for suspensions suspension/{suspension_id}
          type: string
        state:
          description: Required. State of this suspension, indicating what action a resolver has taken.
          enum:
            - RESOLUTION_STATE_UNSPECIFIED
            - PENDING
            - REJECTED
            - LIFTED
          type: string
        suspensionConfig:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoSuspensionConfig"
          description: Controls the notifications and resolver permissions for this suspension.
        taskId:
          description: Required. Task id of the associated SuspensionTask.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaSuspensionApprovalConfig:
      description: Configurations for approving the Suspension.
      properties:
        customMessage:
          description: Information to provide for recipients.
          type: string
        emailAddresses:
          description: Email addresses to send approval request to.
          items:
            type: string
          type: array
        expiration:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaSuspensionApprovalExpiration"
          description: Indicates the next steps when no external actions happen on the suspension.
      type: object
    GoogleCloudIntegrationsV1alphaSuspensionApprovalExpiration:
      description: Expiration configs for the approval request.
      properties:
        expireTime:
          description: Output only. Time after which the suspension expires, if no action taken.
          format: google-datetime
          readOnly: true
          type: string
        liftWhenExpired:
          description: Whether the suspension will be REJECTED or LIFTED upon expiration. REJECTED is the default behavior.
          type: boolean
        remindTime:
          description: Time after the previous suspension action reminder, if any, is sent using the selected notification option, for a suspension which is still PENDING_UNSPECIFIED.
          format: google-datetime
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaSuspensionAudit:
      description: Contains when and by whom the suspension was resolved.
      properties:
        resolveTime:
          description: Time at which this suspension was resolved.
          format: google-datetime
          type: string
        resolver:
          description: Email address of the person who resolved this suspension.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaTakeoverEditLockRequest:
      description: Request for TakeoverEditLock.
      properties: {}
      type: object
    GoogleCloudIntegrationsV1alphaTakeoverEditLockResponse:
      description: Response for TakeoverEditLock.
      properties:
        integrationVersion:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationVersion"
          description: Version after the lock is acquired by the new user.
      type: object
    GoogleCloudIntegrationsV1alphaTaskConfig:
      description: The task configuration details. This is not the implementation of Task. There might be multiple TaskConfigs for the same Task.
      properties:
        description:
          description: Optional. User-provided description intended to give additional business context about the task.
          type: string
        displayName:
          description: Optional. User-provided label that is attached to this TaskConfig in the UI.
          type: string
        failurePolicy:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaFailurePolicy"
          description: Optional. Determines the number of times the task will be retried on failure and with what retry strategy. This is applicable for asynchronous calls to Eventbus alone (Post To Queue, Schedule etc.).
        jsonValidationOption:
          description: Optional. If set, overrides the option configured in the Task implementation class.
          enum:
            - JSON_VALIDATION_OPTION_UNSPECIFIED
            - SKIP
            - PRE_EXECUTION
            - POST_EXECUTION
            - PRE_POST_EXECUTION
          type: string
        nextTasks:
          description: Optional. The set of tasks that are next in line to be executed as per the execution graph defined for the parent event, specified by `event_config_id`. Each of these next tasks are executed only if the condition associated with them evaluates to true.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaNextTask"
          type: array
        nextTasksExecutionPolicy:
          description: Optional. The policy dictating the execution of the next set of tasks for the current task.
          enum:
            - NEXT_TASKS_EXECUTION_POLICY_UNSPECIFIED
            - RUN_ALL_MATCH
            - RUN_FIRST_MATCH
          type: string
        parameters:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaEventParameter"
          description: Optional. The customized parameters the user can pass to this task.
          type: object
        successPolicy:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaSuccessPolicy"
          description: Optional. Determines what action to take upon successful task completion.
        synchronousCallFailurePolicy:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaFailurePolicy"
          description: Optional. Determines the number of times the task will be retried on failure and with what retry strategy. This is applicable for synchronous calls to Eventbus alone (Post).
        task:
          description: Optional. The name for the task.
          type: string
        taskExecutionStrategy:
          description: Optional. The policy dictating the execution strategy of this task.
          enum:
            - TASK_EXECUTION_STRATEGY_UNSPECIFIED
            - WHEN_ALL_SUCCEED
            - WHEN_ANY_SUCCEED
            - WHEN_ALL_TASKS_AND_CONDITIONS_SUCCEED
          type: string
        taskId:
          description: Required. The identifier of this task within its parent event config, specified by the client. This should be unique among all the tasks belong to the same event config. We use this field as the identifier to find next tasks (via field `next_tasks.task_id`).
          type: string
        taskTemplate:
          description: Optional. Used to define task-template name if task is of type task-template
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaTaskExecutionDetails:
      description: Contains the details of the execution of this task.
      properties:
        taskAttemptStats:
          description: Status for the current task execution attempt.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaAttemptStats"
          type: array
        taskExecutionState:
          description: The execution state of this task.
          enum:
            - TASK_EXECUTION_STATE_UNSPECIFIED
            - PENDING_EXECUTION
            - IN_PROCESS
            - SUCCEED
            - FAILED
            - FATAL
            - RETRY_ON_HOLD
            - SKIPPED
            - CANCELLED
            - PENDING_ROLLBACK
            - ROLLBACK_IN_PROCESS
            - ROLLEDBACK
            - SUSPENDED
          type: string
        taskNumber:
          description: Pointer to the task config it used for execution.
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaTriggerConfig:
      description: Configuration detail of a trigger.
      properties:
        alertConfig:
          description: Optional. An alert threshold configuration for the [trigger + client + integration] tuple. If these values are not specified in the trigger config, default values will be populated by the system. Note that there must be exactly one alert threshold configured per [client + trigger + integration] when published.
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationAlertConfig"
          type: array
        cloudSchedulerConfig:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaCloudSchedulerConfig"
          description: Optional. Cloud Scheduler Trigger related metadata
        description:
          description: Optional. User-provided description intended to give additional business context about the task.
          type: string
        label:
          description: Optional. The user created label for a particular trigger.
          type: string
        nextTasksExecutionPolicy:
          description: Optional. Dictates how next tasks will be executed.
          enum:
            - NEXT_TASKS_EXECUTION_POLICY_UNSPECIFIED
            - RUN_ALL_MATCH
            - RUN_FIRST_MATCH
          type: string
        properties:
          additionalProperties:
            type: string
          description: Optional. Configurable properties of the trigger, not to be confused with integration parameters. E.g. "name" is a property for API triggers and "subscription" is a property for Pub/sub triggers.
          type: object
        startTasks:
          description: Optional. Set of tasks numbers from where the integration execution is started by this trigger. If this is empty, then integration is executed with default start tasks. In the list of start tasks, none of two tasks can have direct ancestor-descendant relationships (i.e. in a same integration execution graph).
          items:
            $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaNextTask"
          type: array
        triggerId:
          description: Optional. The backend trigger ID.
          type: string
        triggerNumber:
          description: Required. A number to uniquely identify each trigger config within the integration on UI.
          type: string
        triggerType:
          description: Optional. Type of trigger
          enum:
            - TRIGGER_TYPE_UNSPECIFIED
            - CRON
            - API
            - SFDC_CHANNEL
            - CLOUD_PUBSUB_EXTERNAL
            - SFDC_CDC_CHANNEL
            - CLOUD_SCHEDULER
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaUpdateBundleRequest:
      description: THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. Request message for Bundle update
      properties:
        config:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationBundleConfig"
          description: It contains the updated bundle data
      type: object
    GoogleCloudIntegrationsV1alphaUpdateBundleResponse:
      description: Response message for Bundle update
      properties:
        config:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationBundleConfig"
          description: Contains updated bundle config
      type: object
    GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequest:
      description: Request for UploadIntegrationVersion.
      properties:
        content:
          description: The textproto of the integration_version.
          type: string
        fileFormat:
          description: File format for upload request.
          enum:
            - FILE_FORMAT_UNSPECIFIED
            - JSON
            - YAML
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaUploadIntegrationVersionResponse:
      description: Response for UploadIntegrationVersion.
      properties:
        integrationVersion:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationVersion"
          description: The uploaded integration.
      type: object
    GoogleCloudIntegrationsV1alphaUsernameAndPassword:
      description: Username and password pair.
      properties:
        password:
          description: Password to be used
          type: string
        username:
          description: Username to be used
          type: string
      type: object
    GoogleCloudIntegrationsV1alphaValidateIntegrationVersionRequest:
      description: Request for ValidateIntegrationVersion.
      properties: {}
      type: object
    GoogleCloudIntegrationsV1alphaValidateIntegrationVersionResponse:
      description: Response for ValidateIntegrationVersion.
      properties: {}
      type: object
    GoogleCloudIntegrationsV1alphaValueType:
      description: The type of the parameter.
      properties:
        booleanArray:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaBooleanParameterArray"
          description: Boolean Array.
        booleanValue:
          description: Boolean.
          type: boolean
        doubleArray:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaDoubleParameterArray"
          description: Double Number Array.
        doubleValue:
          description: Double Number.
          format: double
          type: number
        intArray:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaIntParameterArray"
          description: Integer Array.
        intValue:
          description: Integer.
          format: int64
          type: string
        jsonValue:
          description: Json.
          type: string
        stringArray:
          $ref: "#/components/schemas/GoogleCloudIntegrationsV1alphaStringParameterArray"
          description: String Array.
        stringValue:
          description: String.
          type: string
      type: object
    GoogleInternalCloudCrmEventbusV3PostToQueueWithTriggerIdRequest:
      description: "Use this request to post all workflows associated with a given trigger id. Next available id: 10"
      properties:
        clientId:
          description: Optional. If the client id is provided, then the combination of trigger id and client id is matched across all the workflows. If the client id is not provided, then workflows with matching trigger id are executed for each client id in the {@link TriggerConfig}. For Api Trigger, the client id is required and will be validated against the allowed clients.
          type: string
        ignoreErrorIfNoActiveWorkflow:
          description: Optional. Flag to determine whether clients would suppress a warning when no ACTIVE workflows are not found. If this flag is set to be true, an error will not be thrown if the requested trigger_id or client_id is not found in any ACTIVE workflow. Otherwise, the error is always thrown. The flag is set to be false by default.
          type: boolean
        parameters:
          $ref: "#/components/schemas/EnterpriseCrmEventbusProtoEventParameters"
          description: Passed in as parameters to each workflow execution. Optional.
        priority:
          description: "The request priority this request should be processed at. For internal users:"
          enum:
            - UNSPCIFIED
            - SHEDDABLE
            - SHEDDABLE_PLUS
            - CRITICAL
            - CRITICAL_PLUS
          type: string
        requestId:
          description: "Optional. This is used to de-dup incoming request: if the duplicate request was detected, the response from the previous execution is returned. Must have no more than 36 characters and contain only alphanumeric characters and hyphens."
          type: string
        scheduledTime:
          description: Optional. Time in milliseconds since epoch when the given event would be scheduled.
          format: int64
          type: string
        testMode:
          description: Optional. Sets test mode in {@link enterprise/crm/eventbus/event_message.proto}.
          type: boolean
        triggerId:
          description: Matched against all {@link TriggerConfig}s across all workflows. i.e. TriggerConfig.trigger_id.equals(trigger_id) Required.
          type: string
        workflowName:
          description: Optional. If provided, the workflow_name is used to filter all the matched workflows having same trigger_id+client_id. A combination of trigger_id, client_id and workflow_name identifies a unique workflow.
          type: string
      type: object
    GoogleProtobufEmpty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
