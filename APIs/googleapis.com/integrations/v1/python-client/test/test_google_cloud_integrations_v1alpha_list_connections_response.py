# coding: utf-8

"""
    Application Integration API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_integrations_v1alpha_list_connections_response import GoogleCloudIntegrationsV1alphaListConnectionsResponse

class TestGoogleCloudIntegrationsV1alphaListConnectionsResponse(unittest.TestCase):
    """GoogleCloudIntegrationsV1alphaListConnectionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudIntegrationsV1alphaListConnectionsResponse:
        """Test GoogleCloudIntegrationsV1alphaListConnectionsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudIntegrationsV1alphaListConnectionsResponse`
        """
        model = GoogleCloudIntegrationsV1alphaListConnectionsResponse()
        if include_optional:
            return GoogleCloudIntegrationsV1alphaListConnectionsResponse(
                connections = [
                    openapi_client.models.google_cloud_connectors_v1_connection.GoogleCloudConnectorsV1Connection(
                        auth_config = openapi_client.models.google_cloud_connectors_v1_auth_config.GoogleCloudConnectorsV1AuthConfig(
                            additional_variables = [
                                openapi_client.models.google_cloud_connectors_v1_config_variable.GoogleCloudConnectorsV1ConfigVariable(
                                    bool_value = True, 
                                    encryption_key_value = openapi_client.models.google_cloud_connectors_v1_encryption_key.GoogleCloudConnectorsV1EncryptionKey(
                                        kms_key_name = '', 
                                        type = 'TYPE_UNSPECIFIED', ), 
                                    int_value = '', 
                                    key = '', 
                                    secret_value = openapi_client.models.google_cloud_connectors_v1_secret.GoogleCloudConnectorsV1Secret(
                                        secret_version = '', ), 
                                    string_value = '', )
                                ], 
                            auth_key = '', 
                            auth_type = 'AUTH_TYPE_UNSPECIFIED', 
                            oauth2_auth_code_flow = openapi_client.models.google_cloud_connectors_v1_auth_config_oauth2_auth_code_flow.GoogleCloudConnectorsV1AuthConfigOauth2AuthCodeFlow(
                                auth_code = '', 
                                auth_uri = '', 
                                client_id = '', 
                                client_secret = openapi_client.models.google_cloud_connectors_v1_secret.GoogleCloudConnectorsV1Secret(
                                    secret_version = '', ), 
                                enable_pkce = True, 
                                pkce_verifier = '', 
                                redirect_uri = '', 
                                scopes = [
                                    ''
                                    ], ), 
                            oauth2_client_credentials = openapi_client.models.google_cloud_connectors_v1_auth_config_oauth2_client_credentials.GoogleCloudConnectorsV1AuthConfigOauth2ClientCredentials(
                                client_id = '', ), 
                            oauth2_jwt_bearer = openapi_client.models.google_cloud_connectors_v1_auth_config_oauth2_jwt_bearer.GoogleCloudConnectorsV1AuthConfigOauth2JwtBearer(
                                client_key = , 
                                jwt_claims = openapi_client.models.google_cloud_connectors_v1_auth_config_oauth2_jwt_bearer_jwt_claims.GoogleCloudConnectorsV1AuthConfigOauth2JwtBearerJwtClaims(
                                    audience = '', 
                                    issuer = '', 
                                    subject = '', ), ), 
                            ssh_public_key = openapi_client.models.google_cloud_connectors_v1_auth_config_ssh_public_key.GoogleCloudConnectorsV1AuthConfigSshPublicKey(
                                cert_type = '', 
                                ssh_client_cert = , 
                                ssh_client_cert_pass = , 
                                username = '', ), 
                            user_password = openapi_client.models.google_cloud_connectors_v1_auth_config_user_password.GoogleCloudConnectorsV1AuthConfigUserPassword(
                                password = , 
                                username = '', ), ), 
                        config_variables = [
                            openapi_client.models.google_cloud_connectors_v1_config_variable.GoogleCloudConnectorsV1ConfigVariable(
                                bool_value = True, 
                                int_value = '', 
                                key = '', 
                                string_value = '', )
                            ], 
                        connection_revision = '', 
                        connector_version = '', 
                        connector_version_launch_stage = 'LAUNCH_STAGE_UNSPECIFIED', 
                        create_time = '', 
                        description = '', 
                        destination_configs = [
                            openapi_client.models.google_cloud_connectors_v1_destination_config.GoogleCloudConnectorsV1DestinationConfig(
                                destinations = [
                                    openapi_client.models.google_cloud_connectors_v1_destination.GoogleCloudConnectorsV1Destination(
                                        host = '', 
                                        port = 56, 
                                        service_attachment = '', )
                                    ], 
                                key = '', )
                            ], 
                        envoy_image_location = '', 
                        image_location = '', 
                        labels = {
                            'key' : ''
                            }, 
                        lock_config = openapi_client.models.google_cloud_connectors_v1_lock_config.GoogleCloudConnectorsV1LockConfig(
                            locked = True, 
                            reason = '', ), 
                        log_config = openapi_client.models.google_cloud_connectors_v1_log_config.GoogleCloudConnectorsV1LogConfig(
                            enabled = True, ), 
                        name = '', 
                        node_config = openapi_client.models.google_cloud_connectors_v1_node_config.GoogleCloudConnectorsV1NodeConfig(
                            max_node_count = 56, 
                            min_node_count = 56, ), 
                        service_account = '', 
                        service_directory = '', 
                        ssl_config = openapi_client.models.google_cloud_connectors_v1_ssl_config.GoogleCloudConnectorsV1SslConfig(
                            client_cert_type = 'CERT_TYPE_UNSPECIFIED', 
                            client_certificate = , 
                            client_private_key = , 
                            client_private_key_pass = , 
                            private_server_certificate = , 
                            server_cert_type = 'CERT_TYPE_UNSPECIFIED', 
                            trust_model = 'PUBLIC', 
                            type = 'SSL_TYPE_UNSPECIFIED', 
                            use_ssl = True, ), 
                        status = openapi_client.models.google_cloud_connectors_v1_connection_status.GoogleCloudConnectorsV1ConnectionStatus(
                            description = '', 
                            state = 'STATE_UNSPECIFIED', ), 
                        subscription_type = 'SUBSCRIPTION_TYPE_UNSPECIFIED', 
                        suspended = True, 
                        update_time = '', )
                    ],
                next_page_token = ''
            )
        else:
            return GoogleCloudIntegrationsV1alphaListConnectionsResponse(
        )
        """

    def testGoogleCloudIntegrationsV1alphaListConnectionsResponse(self):
        """Test GoogleCloudIntegrationsV1alphaListConnectionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
