# coding: utf-8

"""
    Application Integration API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.enterprise_crm_eventbus_proto_function_type import EnterpriseCrmEventbusProtoFunctionType

class TestEnterpriseCrmEventbusProtoFunctionType(unittest.TestCase):
    """EnterpriseCrmEventbusProtoFunctionType unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EnterpriseCrmEventbusProtoFunctionType:
        """Test EnterpriseCrmEventbusProtoFunctionType
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EnterpriseCrmEventbusProtoFunctionType`
        """
        model = EnterpriseCrmEventbusProtoFunctionType()
        if include_optional:
            return EnterpriseCrmEventbusProtoFunctionType(
                base_function = openapi_client.models.enterprise_crm_eventbus_proto_base_function.EnterpriseCrmEventbusProtoBaseFunction(
                    function_name = 'UNSPECIFIED', ),
                boolean_array_function = openapi_client.models.enterprise_crm_eventbus_proto_boolean_array_function.EnterpriseCrmEventbusProtoBooleanArrayFunction(
                    function_name = 'UNSPECIFIED', ),
                boolean_function = openapi_client.models.enterprise_crm_eventbus_proto_boolean_function.EnterpriseCrmEventbusProtoBooleanFunction(
                    function_name = 'UNSPECIFIED', ),
                double_array_function = openapi_client.models.enterprise_crm_eventbus_proto_double_array_function.EnterpriseCrmEventbusProtoDoubleArrayFunction(
                    function_name = 'UNSPECIFIED', ),
                double_function = openapi_client.models.enterprise_crm_eventbus_proto_double_function.EnterpriseCrmEventbusProtoDoubleFunction(
                    function_name = 'UNSPECIFIED', ),
                int_array_function = openapi_client.models.enterprise_crm_eventbus_proto_int_array_function.EnterpriseCrmEventbusProtoIntArrayFunction(
                    function_name = 'UNSPECIFIED', ),
                int_function = openapi_client.models.enterprise_crm_eventbus_proto_int_function.EnterpriseCrmEventbusProtoIntFunction(
                    function_name = 'UNSPECIFIED', ),
                json_function = openapi_client.models.enterprise_crm_eventbus_proto_json_function.EnterpriseCrmEventbusProtoJsonFunction(
                    function_name = 'UNSPECIFIED', ),
                proto_array_function = openapi_client.models.enterprise_crm_eventbus_proto_proto_array_function.EnterpriseCrmEventbusProtoProtoArrayFunction(
                    function_name = 'UNSPECIFIED', ),
                proto_function = openapi_client.models.enterprise_crm_eventbus_proto_proto_function.EnterpriseCrmEventbusProtoProtoFunction(
                    function_name = 'UNSPECIFIED', ),
                string_array_function = openapi_client.models.enterprise_crm_eventbus_proto_string_array_function.EnterpriseCrmEventbusProtoStringArrayFunction(
                    function_name = 'UNSPECIFIED', ),
                string_function = openapi_client.models.enterprise_crm_eventbus_proto_string_function.EnterpriseCrmEventbusProtoStringFunction(
                    function_name = 'UNSPECIFIED', )
            )
        else:
            return EnterpriseCrmEventbusProtoFunctionType(
        )
        """

    def testEnterpriseCrmEventbusProtoFunctionType(self):
        """Test EnterpriseCrmEventbusProtoFunctionType"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
