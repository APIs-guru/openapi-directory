# coding: utf-8

"""
    Application Integration API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.enterprise_crm_eventbus_proto_param_spec_entry_validation_rule_double_range import EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange

class TestEnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange(unittest.TestCase):
    """EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange:
        """Test EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange`
        """
        model = EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange()
        if include_optional:
            return EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange(
                max = 1.337,
                min = 1.337
            )
        else:
            return EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange(
        )
        """

    def testEnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange(self):
        """Test EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
