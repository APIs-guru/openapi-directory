# coding: utf-8

"""
    Cloud Build API

    Creates and manages builds on Google Cloud Platform.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.notifier_config import NotifierConfig

class TestNotifierConfig(unittest.TestCase):
    """NotifierConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NotifierConfig:
        """Test NotifierConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NotifierConfig`
        """
        model = NotifierConfig()
        if include_optional:
            return NotifierConfig(
                api_version = '',
                kind = '',
                metadata = openapi_client.models.notifier_metadata.NotifierMetadata(
                    name = '', 
                    notifier = '', ),
                spec = openapi_client.models.notifier_spec.NotifierSpec(
                    notification = openapi_client.models.notification.Notification(
                        filter = '', 
                        http_delivery = openapi_client.models.http_delivery.HTTPDelivery(
                            uri = '', ), 
                        slack_delivery = openapi_client.models.slack_delivery.SlackDelivery(
                            webhook_uri = openapi_client.models.notifier_secret_ref.NotifierSecretRef(
                                secret_ref = '', ), ), 
                        smtp_delivery = openapi_client.models.smtp_delivery.SMTPDelivery(
                            from_address = '', 
                            password = openapi_client.models.notifier_secret_ref.NotifierSecretRef(
                                secret_ref = '', ), 
                            port = '', 
                            recipient_addresses = [
                                ''
                                ], 
                            sender_address = '', 
                            server = '', ), 
                        struct_delivery = {
                            'key' : null
                            }, ), 
                    secrets = [
                        openapi_client.models.notifier_secret.NotifierSecret(
                            name = '', 
                            value = '', )
                        ], )
            )
        else:
            return NotifierConfig(
        )
        """

    def testNotifierConfig(self):
        """Test NotifierConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
