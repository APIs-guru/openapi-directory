# coding: utf-8

"""
    Cloud Build API

    Creates and manages builds on Google Cloud Platform.

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.notifier_spec import NotifierSpec

class TestNotifierSpec(unittest.TestCase):
    """NotifierSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NotifierSpec:
        """Test NotifierSpec
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NotifierSpec`
        """
        model = NotifierSpec()
        if include_optional:
            return NotifierSpec(
                notification = openapi_client.models.notification.Notification(
                    filter = '', 
                    http_delivery = openapi_client.models.http_delivery.HTTPDelivery(
                        uri = '', ), 
                    slack_delivery = openapi_client.models.slack_delivery.SlackDelivery(
                        webhook_uri = openapi_client.models.notifier_secret_ref.NotifierSecretRef(
                            secret_ref = '', ), ), 
                    smtp_delivery = openapi_client.models.smtp_delivery.SMTPDelivery(
                        from_address = '', 
                        password = openapi_client.models.notifier_secret_ref.NotifierSecretRef(
                            secret_ref = '', ), 
                        port = '', 
                        recipient_addresses = [
                            ''
                            ], 
                        sender_address = '', 
                        server = '', ), 
                    struct_delivery = {
                        'key' : null
                        }, ),
                secrets = [
                    openapi_client.models.notifier_secret.NotifierSecret(
                        name = '', 
                        value = '', )
                    ]
            )
        else:
            return NotifierSpec(
        )
        """

    def testNotifierSpec(self):
        """Test NotifierSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
