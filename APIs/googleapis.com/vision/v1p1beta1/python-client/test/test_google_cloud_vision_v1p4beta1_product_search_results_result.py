# coding: utf-8

"""
    Cloud Vision API

    Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.

    The version of the OpenAPI document: v1p1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_vision_v1p4beta1_product_search_results_result import GoogleCloudVisionV1p4beta1ProductSearchResultsResult

class TestGoogleCloudVisionV1p4beta1ProductSearchResultsResult(unittest.TestCase):
    """GoogleCloudVisionV1p4beta1ProductSearchResultsResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudVisionV1p4beta1ProductSearchResultsResult:
        """Test GoogleCloudVisionV1p4beta1ProductSearchResultsResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudVisionV1p4beta1ProductSearchResultsResult`
        """
        model = GoogleCloudVisionV1p4beta1ProductSearchResultsResult()
        if include_optional:
            return GoogleCloudVisionV1p4beta1ProductSearchResultsResult(
                image = '',
                product = openapi_client.models.google_cloud_vision_v1p4beta1_product.GoogleCloudVisionV1p4beta1Product(
                    description = '', 
                    display_name = '', 
                    name = '', 
                    product_category = '', 
                    product_labels = [
                        openapi_client.models.google_cloud_vision_v1p4beta1_product_key_value.GoogleCloudVisionV1p4beta1ProductKeyValue(
                            key = '', 
                            value = '', )
                        ], ),
                score = 1.337
            )
        else:
            return GoogleCloudVisionV1p4beta1ProductSearchResultsResult(
        )
        """

    def testGoogleCloudVisionV1p4beta1ProductSearchResultsResult(self):
        """Test GoogleCloudVisionV1p4beta1ProductSearchResultsResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
