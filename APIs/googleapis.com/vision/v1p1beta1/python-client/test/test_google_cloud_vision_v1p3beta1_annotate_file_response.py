# coding: utf-8

"""
    Cloud Vision API

    Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.

    The version of the OpenAPI document: v1p1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_vision_v1p3beta1_annotate_file_response import GoogleCloudVisionV1p3beta1AnnotateFileResponse

class TestGoogleCloudVisionV1p3beta1AnnotateFileResponse(unittest.TestCase):
    """GoogleCloudVisionV1p3beta1AnnotateFileResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudVisionV1p3beta1AnnotateFileResponse:
        """Test GoogleCloudVisionV1p3beta1AnnotateFileResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudVisionV1p3beta1AnnotateFileResponse`
        """
        model = GoogleCloudVisionV1p3beta1AnnotateFileResponse()
        if include_optional:
            return GoogleCloudVisionV1p3beta1AnnotateFileResponse(
                error = openapi_client.models.status.Status(
                    code = 56, 
                    details = [
                        {
                            'key' : null
                            }
                        ], 
                    message = '', ),
                input_config = openapi_client.models.google_cloud_vision_v1p3beta1_input_config.GoogleCloudVisionV1p3beta1InputConfig(
                    content = 'YQ==', 
                    gcs_source = openapi_client.models.google_cloud_vision_v1p3beta1_gcs_source.GoogleCloudVisionV1p3beta1GcsSource(
                        uri = '', ), 
                    mime_type = '', ),
                responses = [
                    openapi_client.models.google_cloud_vision_v1p3beta1_annotate_image_response.GoogleCloudVisionV1p3beta1AnnotateImageResponse(
                        context = openapi_client.models.google_cloud_vision_v1p3beta1_image_annotation_context.GoogleCloudVisionV1p3beta1ImageAnnotationContext(
                            page_number = 56, 
                            uri = '', ), 
                        crop_hints_annotation = openapi_client.models.google_cloud_vision_v1p3beta1_crop_hints_annotation.GoogleCloudVisionV1p3beta1CropHintsAnnotation(
                            crop_hints = [
                                openapi_client.models.google_cloud_vision_v1p3beta1_crop_hint.GoogleCloudVisionV1p3beta1CropHint(
                                    bounding_poly = openapi_client.models.google_cloud_vision_v1p3beta1_bounding_poly.GoogleCloudVisionV1p3beta1BoundingPoly(
                                        normalized_vertices = [
                                            openapi_client.models.google_cloud_vision_v1p3beta1_normalized_vertex.GoogleCloudVisionV1p3beta1NormalizedVertex(
                                                x = 1.337, 
                                                y = 1.337, )
                                            ], 
                                        vertices = [
                                            openapi_client.models.google_cloud_vision_v1p3beta1_vertex.GoogleCloudVisionV1p3beta1Vertex(
                                                x = 56, 
                                                y = 56, )
                                            ], ), 
                                    confidence = 1.337, 
                                    importance_fraction = 1.337, )
                                ], ), 
                        error = openapi_client.models.status.Status(
                            code = 56, 
                            details = [
                                {
                                    'key' : null
                                    }
                                ], 
                            message = '', ), 
                        face_annotations = [
                            openapi_client.models.google_cloud_vision_v1p3beta1_face_annotation.GoogleCloudVisionV1p3beta1FaceAnnotation(
                                anger_likelihood = 'UNKNOWN', 
                                blurred_likelihood = 'UNKNOWN', 
                                detection_confidence = 1.337, 
                                fd_bounding_poly = openapi_client.models.google_cloud_vision_v1p3beta1_bounding_poly.GoogleCloudVisionV1p3beta1BoundingPoly(), 
                                headwear_likelihood = 'UNKNOWN', 
                                joy_likelihood = 'UNKNOWN', 
                                landmarking_confidence = 1.337, 
                                landmarks = [
                                    openapi_client.models.google_cloud_vision_v1p3beta1_face_annotation_landmark.GoogleCloudVisionV1p3beta1FaceAnnotationLandmark(
                                        position = openapi_client.models.google_cloud_vision_v1p3beta1_position.GoogleCloudVisionV1p3beta1Position(
                                            x = 1.337, 
                                            y = 1.337, 
                                            z = 1.337, ), 
                                        type = 'UNKNOWN_LANDMARK', )
                                    ], 
                                pan_angle = 1.337, 
                                roll_angle = 1.337, 
                                sorrow_likelihood = 'UNKNOWN', 
                                surprise_likelihood = 'UNKNOWN', 
                                tilt_angle = 1.337, 
                                under_exposed_likelihood = 'UNKNOWN', )
                            ], 
                        full_text_annotation = openapi_client.models.google_cloud_vision_v1p3beta1_text_annotation.GoogleCloudVisionV1p3beta1TextAnnotation(
                            pages = [
                                openapi_client.models.google_cloud_vision_v1p3beta1_page.GoogleCloudVisionV1p3beta1Page(
                                    blocks = [
                                        openapi_client.models.google_cloud_vision_v1p3beta1_block.GoogleCloudVisionV1p3beta1Block(
                                            block_type = 'UNKNOWN', 
                                            bounding_box = , 
                                            confidence = 1.337, 
                                            paragraphs = [
                                                openapi_client.models.google_cloud_vision_v1p3beta1_paragraph.GoogleCloudVisionV1p3beta1Paragraph(
                                                    confidence = 1.337, 
                                                    property = openapi_client.models.google_cloud_vision_v1p3beta1_text_annotation_text_property.GoogleCloudVisionV1p3beta1TextAnnotationTextProperty(
                                                        detected_break = openapi_client.models.google_cloud_vision_v1p3beta1_text_annotation_detected_break.GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak(
                                                            is_prefix = True, 
                                                            type = 'UNKNOWN', ), 
                                                        detected_languages = [
                                                            openapi_client.models.google_cloud_vision_v1p3beta1_text_annotation_detected_language.GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage(
                                                                confidence = 1.337, 
                                                                language_code = '', )
                                                            ], ), 
                                                    words = [
                                                        openapi_client.models.google_cloud_vision_v1p3beta1_word.GoogleCloudVisionV1p3beta1Word(
                                                            confidence = 1.337, 
                                                            symbols = [
                                                                openapi_client.models.google_cloud_vision_v1p3beta1_symbol.GoogleCloudVisionV1p3beta1Symbol(
                                                                    confidence = 1.337, 
                                                                    text = '', )
                                                                ], )
                                                        ], )
                                                ], 
                                            property = openapi_client.models.google_cloud_vision_v1p3beta1_text_annotation_text_property.GoogleCloudVisionV1p3beta1TextAnnotationTextProperty(), )
                                        ], 
                                    confidence = 1.337, 
                                    height = 56, 
                                    property = , 
                                    width = 56, )
                                ], 
                            text = '', ), 
                        image_properties_annotation = openapi_client.models.google_cloud_vision_v1p3beta1_image_properties.GoogleCloudVisionV1p3beta1ImageProperties(
                            dominant_colors = openapi_client.models.google_cloud_vision_v1p3beta1_dominant_colors_annotation.GoogleCloudVisionV1p3beta1DominantColorsAnnotation(
                                colors = [
                                    openapi_client.models.google_cloud_vision_v1p3beta1_color_info.GoogleCloudVisionV1p3beta1ColorInfo(
                                        color = openapi_client.models.color.Color(
                                            alpha = 1.337, 
                                            blue = 1.337, 
                                            green = 1.337, 
                                            red = 1.337, ), 
                                        pixel_fraction = 1.337, 
                                        score = 1.337, )
                                    ], ), ), 
                        label_annotations = [
                            openapi_client.models.google_cloud_vision_v1p3beta1_entity_annotation.GoogleCloudVisionV1p3beta1EntityAnnotation(
                                confidence = 1.337, 
                                description = '', 
                                locale = '', 
                                locations = [
                                    openapi_client.models.google_cloud_vision_v1p3beta1_location_info.GoogleCloudVisionV1p3beta1LocationInfo(
                                        lat_lng = openapi_client.models.lat_lng.LatLng(
                                            latitude = 1.337, 
                                            longitude = 1.337, ), )
                                    ], 
                                mid = '', 
                                properties = [
                                    openapi_client.models.google_cloud_vision_v1p3beta1_property.GoogleCloudVisionV1p3beta1Property(
                                        name = '', 
                                        uint64_value = '', 
                                        value = '', )
                                    ], 
                                score = 1.337, 
                                topicality = 1.337, )
                            ], 
                        landmark_annotations = [
                            openapi_client.models.google_cloud_vision_v1p3beta1_entity_annotation.GoogleCloudVisionV1p3beta1EntityAnnotation(
                                confidence = 1.337, 
                                description = '', 
                                locale = '', 
                                mid = '', 
                                score = 1.337, 
                                topicality = 1.337, )
                            ], 
                        localized_object_annotations = [
                            openapi_client.models.google_cloud_vision_v1p3beta1_localized_object_annotation.GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation(
                                language_code = '', 
                                mid = '', 
                                name = '', 
                                score = 1.337, )
                            ], 
                        logo_annotations = [
                            
                            ], 
                        product_search_results = openapi_client.models.google_cloud_vision_v1p3beta1_product_search_results.GoogleCloudVisionV1p3beta1ProductSearchResults(
                            index_time = '', 
                            product_grouped_results = [
                                openapi_client.models.google_cloud_vision_v1p3beta1_product_search_results_grouped_result.GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult(
                                    object_annotations = [
                                        openapi_client.models.google_cloud_vision_v1p3beta1_product_search_results_object_annotation.GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation(
                                            language_code = '', 
                                            mid = '', 
                                            name = '', 
                                            score = 1.337, )
                                        ], 
                                    results = [
                                        openapi_client.models.google_cloud_vision_v1p3beta1_product_search_results_result.GoogleCloudVisionV1p3beta1ProductSearchResultsResult(
                                            image = '', 
                                            product = openapi_client.models.google_cloud_vision_v1p3beta1_product.GoogleCloudVisionV1p3beta1Product(
                                                description = '', 
                                                display_name = '', 
                                                name = '', 
                                                product_category = '', 
                                                product_labels = [
                                                    openapi_client.models.google_cloud_vision_v1p3beta1_product_key_value.GoogleCloudVisionV1p3beta1ProductKeyValue(
                                                        key = '', 
                                                        value = '', )
                                                    ], ), 
                                            score = 1.337, )
                                        ], )
                                ], 
                            results = [
                                openapi_client.models.google_cloud_vision_v1p3beta1_product_search_results_result.GoogleCloudVisionV1p3beta1ProductSearchResultsResult(
                                    image = '', 
                                    score = 1.337, )
                                ], ), 
                        safe_search_annotation = openapi_client.models.google_cloud_vision_v1p3beta1_safe_search_annotation.GoogleCloudVisionV1p3beta1SafeSearchAnnotation(
                            adult = 'UNKNOWN', 
                            medical = 'UNKNOWN', 
                            racy = 'UNKNOWN', 
                            spoof = 'UNKNOWN', 
                            violence = 'UNKNOWN', ), 
                        text_annotations = [
                            
                            ], 
                        web_detection = openapi_client.models.google_cloud_vision_v1p3beta1_web_detection.GoogleCloudVisionV1p3beta1WebDetection(
                            best_guess_labels = [
                                openapi_client.models.google_cloud_vision_v1p3beta1_web_detection_web_label.GoogleCloudVisionV1p3beta1WebDetectionWebLabel(
                                    label = '', 
                                    language_code = '', )
                                ], 
                            full_matching_images = [
                                openapi_client.models.google_cloud_vision_v1p3beta1_web_detection_web_image.GoogleCloudVisionV1p3beta1WebDetectionWebImage(
                                    score = 1.337, 
                                    url = '', )
                                ], 
                            pages_with_matching_images = [
                                openapi_client.models.google_cloud_vision_v1p3beta1_web_detection_web_page.GoogleCloudVisionV1p3beta1WebDetectionWebPage(
                                    page_title = '', 
                                    partial_matching_images = [
                                        openapi_client.models.google_cloud_vision_v1p3beta1_web_detection_web_image.GoogleCloudVisionV1p3beta1WebDetectionWebImage(
                                            score = 1.337, 
                                            url = '', )
                                        ], 
                                    score = 1.337, 
                                    url = '', )
                                ], 
                            partial_matching_images = [
                                
                                ], 
                            visually_similar_images = [
                                
                                ], 
                            web_entities = [
                                openapi_client.models.google_cloud_vision_v1p3beta1_web_detection_web_entity.GoogleCloudVisionV1p3beta1WebDetectionWebEntity(
                                    description = '', 
                                    entity_id = '', 
                                    score = 1.337, )
                                ], ), )
                    ],
                total_pages = 56
            )
        else:
            return GoogleCloudVisionV1p3beta1AnnotateFileResponse(
        )
        """

    def testGoogleCloudVisionV1p3beta1AnnotateFileResponse(self):
        """Test GoogleCloudVisionV1p3beta1AnnotateFileResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
