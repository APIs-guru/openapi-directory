# coding: utf-8

"""
    Cloud Vision API

    Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.

    The version of the OpenAPI document: v1p1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_vision_v1p1beta1_product_search_results_object_annotation import GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation

class TestGoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation(unittest.TestCase):
    """GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation:
        """Test GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation`
        """
        model = GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation()
        if include_optional:
            return GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation(
                language_code = '',
                mid = '',
                name = '',
                score = 1.337
            )
        else:
            return GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation(
        )
        """

    def testGoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation(self):
        """Test GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
