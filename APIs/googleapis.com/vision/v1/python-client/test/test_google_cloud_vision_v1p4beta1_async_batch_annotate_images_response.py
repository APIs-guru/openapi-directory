# coding: utf-8

"""
    Cloud Vision API

    Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_vision_v1p4beta1_async_batch_annotate_images_response import GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse

class TestGoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse(unittest.TestCase):
    """GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse:
        """Test GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse`
        """
        model = GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse()
        if include_optional:
            return GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse(
                output_config = openapi_client.models.google_cloud_vision_v1p4beta1_output_config.GoogleCloudVisionV1p4beta1OutputConfig(
                    batch_size = 56, 
                    gcs_destination = openapi_client.models.google_cloud_vision_v1p4beta1_gcs_destination.GoogleCloudVisionV1p4beta1GcsDestination(
                        uri = '', ), )
            )
        else:
            return GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse(
        )
        """

    def testGoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse(self):
        """Test GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
