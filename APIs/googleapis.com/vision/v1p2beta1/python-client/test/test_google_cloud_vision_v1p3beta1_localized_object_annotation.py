# coding: utf-8

"""
    Cloud Vision API

    Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.

    The version of the OpenAPI document: v1p2beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_vision_v1p3beta1_localized_object_annotation import GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation

class TestGoogleCloudVisionV1p3beta1LocalizedObjectAnnotation(unittest.TestCase):
    """GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation:
        """Test GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation`
        """
        model = GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation()
        if include_optional:
            return GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation(
                bounding_poly = openapi_client.models.google_cloud_vision_v1p3beta1_bounding_poly.GoogleCloudVisionV1p3beta1BoundingPoly(
                    normalized_vertices = [
                        openapi_client.models.google_cloud_vision_v1p3beta1_normalized_vertex.GoogleCloudVisionV1p3beta1NormalizedVertex(
                            x = 1.337, 
                            y = 1.337, )
                        ], 
                    vertices = [
                        openapi_client.models.google_cloud_vision_v1p3beta1_vertex.GoogleCloudVisionV1p3beta1Vertex(
                            x = 56, 
                            y = 56, )
                        ], ),
                language_code = '',
                mid = '',
                name = '',
                score = 1.337
            )
        else:
            return GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation(
        )
        """

    def testGoogleCloudVisionV1p3beta1LocalizedObjectAnnotation(self):
        """Test GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
