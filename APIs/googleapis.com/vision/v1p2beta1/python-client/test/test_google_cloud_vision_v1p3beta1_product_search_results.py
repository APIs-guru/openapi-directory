# coding: utf-8

"""
    Cloud Vision API

    Integrates Google Vision features, including image labeling, face, logo, and landmark detection, optical character recognition (OCR), and detection of explicit content, into applications.

    The version of the OpenAPI document: v1p2beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_vision_v1p3beta1_product_search_results import GoogleCloudVisionV1p3beta1ProductSearchResults

class TestGoogleCloudVisionV1p3beta1ProductSearchResults(unittest.TestCase):
    """GoogleCloudVisionV1p3beta1ProductSearchResults unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudVisionV1p3beta1ProductSearchResults:
        """Test GoogleCloudVisionV1p3beta1ProductSearchResults
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudVisionV1p3beta1ProductSearchResults`
        """
        model = GoogleCloudVisionV1p3beta1ProductSearchResults()
        if include_optional:
            return GoogleCloudVisionV1p3beta1ProductSearchResults(
                index_time = '',
                product_grouped_results = [
                    openapi_client.models.google_cloud_vision_v1p3beta1_product_search_results_grouped_result.GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult(
                        bounding_poly = openapi_client.models.google_cloud_vision_v1p3beta1_bounding_poly.GoogleCloudVisionV1p3beta1BoundingPoly(
                            normalized_vertices = [
                                openapi_client.models.google_cloud_vision_v1p3beta1_normalized_vertex.GoogleCloudVisionV1p3beta1NormalizedVertex(
                                    x = 1.337, 
                                    y = 1.337, )
                                ], 
                            vertices = [
                                openapi_client.models.google_cloud_vision_v1p3beta1_vertex.GoogleCloudVisionV1p3beta1Vertex(
                                    x = 56, 
                                    y = 56, )
                                ], ), 
                        object_annotations = [
                            openapi_client.models.google_cloud_vision_v1p3beta1_product_search_results_object_annotation.GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation(
                                language_code = '', 
                                mid = '', 
                                name = '', 
                                score = 1.337, )
                            ], 
                        results = [
                            openapi_client.models.google_cloud_vision_v1p3beta1_product_search_results_result.GoogleCloudVisionV1p3beta1ProductSearchResultsResult(
                                image = '', 
                                product = openapi_client.models.google_cloud_vision_v1p3beta1_product.GoogleCloudVisionV1p3beta1Product(
                                    description = '', 
                                    display_name = '', 
                                    name = '', 
                                    product_category = '', 
                                    product_labels = [
                                        openapi_client.models.google_cloud_vision_v1p3beta1_product_key_value.GoogleCloudVisionV1p3beta1ProductKeyValue(
                                            key = '', 
                                            value = '', )
                                        ], ), 
                                score = 1.337, )
                            ], )
                    ],
                results = [
                    openapi_client.models.google_cloud_vision_v1p3beta1_product_search_results_result.GoogleCloudVisionV1p3beta1ProductSearchResultsResult(
                        image = '', 
                        product = openapi_client.models.google_cloud_vision_v1p3beta1_product.GoogleCloudVisionV1p3beta1Product(
                            description = '', 
                            display_name = '', 
                            name = '', 
                            product_category = '', 
                            product_labels = [
                                openapi_client.models.google_cloud_vision_v1p3beta1_product_key_value.GoogleCloudVisionV1p3beta1ProductKeyValue(
                                    key = '', 
                                    value = '', )
                                ], ), 
                        score = 1.337, )
                    ]
            )
        else:
            return GoogleCloudVisionV1p3beta1ProductSearchResults(
        )
        """

    def testGoogleCloudVisionV1p3beta1ProductSearchResults(self):
        """Test GoogleCloudVisionV1p3beta1ProductSearchResults"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
