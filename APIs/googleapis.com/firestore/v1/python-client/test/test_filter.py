# coding: utf-8

"""
    Cloud Firestore API

    Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.filter import Filter

class TestFilter(unittest.TestCase):
    """Filter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Filter:
        """Test Filter
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Filter`
        """
        model = Filter()
        if include_optional:
            return Filter(
                composite_filter = openapi_client.models.composite_filter.CompositeFilter(
                    filters = [
                        openapi_client.models.filter.Filter(
                            field_filter = openapi_client.models.field_filter.FieldFilter(
                                field = openapi_client.models.field_reference.FieldReference(
                                    field_path = '', ), 
                                op = 'OPERATOR_UNSPECIFIED', 
                                value = openapi_client.models.value.Value(
                                    array_value = openapi_client.models.array_value.ArrayValue(
                                        values = [
                                            openapi_client.models.value.Value(
                                                boolean_value = True, 
                                                bytes_value = 'YQ==', 
                                                double_value = 1.337, 
                                                geo_point_value = openapi_client.models.lat_lng.LatLng(
                                                    latitude = 1.337, 
                                                    longitude = 1.337, ), 
                                                integer_value = '', 
                                                map_value = openapi_client.models.map_value.MapValue(
                                                    fields = {
                                                        'key' : 
                                                        }, ), 
                                                null_value = 'NULL_VALUE', 
                                                reference_value = '', 
                                                string_value = '', 
                                                timestamp_value = '', )
                                            ], ), 
                                    boolean_value = True, 
                                    bytes_value = 'YQ==', 
                                    double_value = 1.337, 
                                    geo_point_value = openapi_client.models.lat_lng.LatLng(
                                        latitude = 1.337, 
                                        longitude = 1.337, ), 
                                    integer_value = '', 
                                    map_value = openapi_client.models.map_value.MapValue(), 
                                    null_value = 'NULL_VALUE', 
                                    reference_value = '', 
                                    string_value = '', 
                                    timestamp_value = '', ), ), 
                            unary_filter = openapi_client.models.unary_filter.UnaryFilter(
                                op = 'OPERATOR_UNSPECIFIED', ), )
                        ], 
                    op = 'OPERATOR_UNSPECIFIED', ),
                field_filter = openapi_client.models.field_filter.FieldFilter(
                    field = openapi_client.models.field_reference.FieldReference(
                        field_path = '', ), 
                    op = 'OPERATOR_UNSPECIFIED', 
                    value = openapi_client.models.value.Value(
                        array_value = openapi_client.models.array_value.ArrayValue(
                            values = [
                                openapi_client.models.value.Value(
                                    boolean_value = True, 
                                    bytes_value = 'YQ==', 
                                    double_value = 1.337, 
                                    geo_point_value = openapi_client.models.lat_lng.LatLng(
                                        latitude = 1.337, 
                                        longitude = 1.337, ), 
                                    integer_value = '', 
                                    map_value = openapi_client.models.map_value.MapValue(
                                        fields = {
                                            'key' : 
                                            }, ), 
                                    null_value = 'NULL_VALUE', 
                                    reference_value = '', 
                                    string_value = '', 
                                    timestamp_value = '', )
                                ], ), 
                        boolean_value = True, 
                        bytes_value = 'YQ==', 
                        double_value = 1.337, 
                        geo_point_value = openapi_client.models.lat_lng.LatLng(
                            latitude = 1.337, 
                            longitude = 1.337, ), 
                        integer_value = '', 
                        map_value = openapi_client.models.map_value.MapValue(), 
                        null_value = 'NULL_VALUE', 
                        reference_value = '', 
                        string_value = '', 
                        timestamp_value = '', ), ),
                unary_filter = openapi_client.models.unary_filter.UnaryFilter(
                    field = openapi_client.models.field_reference.FieldReference(
                        field_path = '', ), 
                    op = 'OPERATOR_UNSPECIFIED', )
            )
        else:
            return Filter(
        )
        """

    def testFilter(self):
        """Test Filter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
