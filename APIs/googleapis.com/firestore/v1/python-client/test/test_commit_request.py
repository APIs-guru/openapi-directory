# coding: utf-8

"""
    Cloud Firestore API

    Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.commit_request import CommitRequest

class TestCommitRequest(unittest.TestCase):
    """CommitRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CommitRequest:
        """Test CommitRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CommitRequest`
        """
        model = CommitRequest()
        if include_optional:
            return CommitRequest(
                transaction = 'YQ==',
                writes = [
                    openapi_client.models.write.Write(
                        current_document = openapi_client.models.precondition.Precondition(
                            exists = True, 
                            update_time = '', ), 
                        delete = '', 
                        transform = openapi_client.models.document_transform.DocumentTransform(
                            document = '', 
                            field_transforms = [
                                openapi_client.models.field_transform.FieldTransform(
                                    append_missing_elements = openapi_client.models.array_value.ArrayValue(
                                        values = [
                                            openapi_client.models.value.Value(
                                                array_value = openapi_client.models.array_value.ArrayValue(), 
                                                boolean_value = True, 
                                                bytes_value = 'YQ==', 
                                                double_value = 1.337, 
                                                geo_point_value = openapi_client.models.lat_lng.LatLng(
                                                    latitude = 1.337, 
                                                    longitude = 1.337, ), 
                                                integer_value = '', 
                                                map_value = openapi_client.models.map_value.MapValue(
                                                    fields = {
                                                        'key' : openapi_client.models.value.Value(
                                                            boolean_value = True, 
                                                            bytes_value = 'YQ==', 
                                                            double_value = 1.337, 
                                                            integer_value = '', 
                                                            null_value = 'NULL_VALUE', 
                                                            reference_value = '', 
                                                            string_value = '', 
                                                            timestamp_value = '', )
                                                        }, ), 
                                                null_value = 'NULL_VALUE', 
                                                reference_value = '', 
                                                string_value = '', 
                                                timestamp_value = '', )
                                            ], ), 
                                    field_path = '', 
                                    increment = , 
                                    maximum = , 
                                    minimum = , 
                                    remove_all_from_array = , 
                                    set_to_server_value = 'SERVER_VALUE_UNSPECIFIED', )
                                ], ), 
                        update = openapi_client.models.document.Document(
                            create_time = '', 
                            name = '', 
                            update_time = '', ), 
                        update_mask = openapi_client.models.document_mask.DocumentMask(
                            field_paths = [
                                ''
                                ], ), 
                        update_transforms = [
                            openapi_client.models.field_transform.FieldTransform(
                                field_path = '', 
                                set_to_server_value = 'SERVER_VALUE_UNSPECIFIED', )
                            ], )
                    ]
            )
        else:
            return CommitRequest(
        )
        """

    def testCommitRequest(self):
        """Test CommitRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
