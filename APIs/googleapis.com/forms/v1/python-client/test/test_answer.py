# coding: utf-8

"""
    Google Forms API

    Reads and writes Google Forms and responses.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.answer import Answer

class TestAnswer(unittest.TestCase):
    """Answer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Answer:
        """Test Answer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Answer`
        """
        model = Answer()
        if include_optional:
            return Answer(
                file_upload_answers = openapi_client.models.file_upload_answers.FileUploadAnswers(
                    answers = [
                        openapi_client.models.file_upload_answer.FileUploadAnswer(
                            file_id = '', 
                            file_name = '', 
                            mime_type = '', )
                        ], ),
                grade = openapi_client.models.grade.Grade(
                    correct = True, 
                    feedback = openapi_client.models.feedback.Feedback(
                        material = [
                            openapi_client.models.extra_material.ExtraMaterial(
                                link = openapi_client.models.text_link.TextLink(
                                    display_text = '', 
                                    uri = '', ), 
                                video = openapi_client.models.video_link.VideoLink(
                                    display_text = '', 
                                    youtube_uri = '', ), )
                            ], 
                        text = '', ), 
                    score = 1.337, ),
                question_id = '',
                text_answers = openapi_client.models.text_answers.TextAnswers(
                    answers = [
                        openapi_client.models.text_answer.TextAnswer(
                            value = '', )
                        ], )
            )
        else:
            return Answer(
        )
        """

    def testAnswer(self):
        """Test Answer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
