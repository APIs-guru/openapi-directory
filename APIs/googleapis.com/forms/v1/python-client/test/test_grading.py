# coding: utf-8

"""
    Google Forms API

    Reads and writes Google Forms and responses.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.grading import Grading

class TestGrading(unittest.TestCase):
    """Grading unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Grading:
        """Test Grading
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Grading`
        """
        model = Grading()
        if include_optional:
            return Grading(
                correct_answers = openapi_client.models.correct_answers.CorrectAnswers(
                    answers = [
                        openapi_client.models.correct_answer.CorrectAnswer(
                            value = '', )
                        ], ),
                general_feedback = openapi_client.models.feedback.Feedback(
                    material = [
                        openapi_client.models.extra_material.ExtraMaterial(
                            link = openapi_client.models.text_link.TextLink(
                                display_text = '', 
                                uri = '', ), 
                            video = openapi_client.models.video_link.VideoLink(
                                display_text = '', 
                                youtube_uri = '', ), )
                        ], 
                    text = '', ),
                point_value = 56,
                when_right = openapi_client.models.feedback.Feedback(
                    material = [
                        openapi_client.models.extra_material.ExtraMaterial(
                            link = openapi_client.models.text_link.TextLink(
                                display_text = '', 
                                uri = '', ), 
                            video = openapi_client.models.video_link.VideoLink(
                                display_text = '', 
                                youtube_uri = '', ), )
                        ], 
                    text = '', ),
                when_wrong = openapi_client.models.feedback.Feedback(
                    material = [
                        openapi_client.models.extra_material.ExtraMaterial(
                            link = openapi_client.models.text_link.TextLink(
                                display_text = '', 
                                uri = '', ), 
                            video = openapi_client.models.video_link.VideoLink(
                                display_text = '', 
                                youtube_uri = '', ), )
                        ], 
                    text = '', )
            )
        else:
            return Grading(
        )
        """

    def testGrading(self):
        """Test Grading"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
