# coding: utf-8

"""
    SAS Portal API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.sas_portal_list_devices_response import SasPortalListDevicesResponse

class TestSasPortalListDevicesResponse(unittest.TestCase):
    """SasPortalListDevicesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SasPortalListDevicesResponse:
        """Test SasPortalListDevicesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SasPortalListDevicesResponse`
        """
        model = SasPortalListDevicesResponse()
        if include_optional:
            return SasPortalListDevicesResponse(
                devices = [
                    openapi_client.models.sas_portal_device.SasPortalDevice(
                        active_config = openapi_client.models.sas_portal_device_config.SasPortalDeviceConfig(
                            air_interface = openapi_client.models.sas_portal_device_air_interface.SasPortalDeviceAirInterface(
                                radio_technology = 'RADIO_TECHNOLOGY_UNSPECIFIED', 
                                supported_spec = '', ), 
                            call_sign = '', 
                            category = 'DEVICE_CATEGORY_UNSPECIFIED', 
                            installation_params = openapi_client.models.sas_portal_installation_params.SasPortalInstallationParams(
                                antenna_azimuth = 56, 
                                antenna_beamwidth = 56, 
                                antenna_downtilt = 56, 
                                antenna_gain = 56, 
                                antenna_model = '', 
                                cpe_cbsd_indication = True, 
                                eirp_capability = 56, 
                                height = 1.337, 
                                height_type = 'HEIGHT_TYPE_UNSPECIFIED', 
                                horizontal_accuracy = 1.337, 
                                indoor_deployment = True, 
                                latitude = 1.337, 
                                longitude = 1.337, 
                                vertical_accuracy = 1.337, ), 
                            is_signed = True, 
                            measurement_capabilities = [
                                'MEASUREMENT_CAPABILITY_UNSPECIFIED'
                                ], 
                            model = openapi_client.models.sas_portal_device_model.SasPortalDeviceModel(
                                firmware_version = '', 
                                hardware_version = '', 
                                name = '', 
                                software_version = '', 
                                vendor = '', ), 
                            state = 'DEVICE_CONFIG_STATE_UNSPECIFIED', 
                            update_time = '', 
                            user_id = '', ), 
                        current_channels = [
                            openapi_client.models.sas_portal_channel_with_score.SasPortalChannelWithScore(
                                frequency_range = openapi_client.models.sas_portal_frequency_range.SasPortalFrequencyRange(
                                    high_frequency_mhz = 1.337, 
                                    low_frequency_mhz = 1.337, ), 
                                score = 1.337, )
                            ], 
                        device_metadata = openapi_client.models.sas_portal_device_metadata.SasPortalDeviceMetadata(
                            antenna_model = '', 
                            common_channel_group = '', 
                            interference_coordination_group = '', 
                            nrqz_validated = True, 
                            nrqz_validation = openapi_client.models.sas_portal_nrqz_validation.SasPortalNrqzValidation(
                                case_id = '', 
                                cpi_id = '', 
                                latitude = 1.337, 
                                longitude = 1.337, 
                                state = 'STATE_UNSPECIFIED', ), ), 
                        display_name = '', 
                        fcc_id = '', 
                        grant_range_allowlists = [
                            openapi_client.models.sas_portal_frequency_range.SasPortalFrequencyRange(
                                high_frequency_mhz = 1.337, 
                                low_frequency_mhz = 1.337, )
                            ], 
                        grants = [
                            openapi_client.models.sas_portal_device_grant.SasPortalDeviceGrant(
                                channel_type = 'CHANNEL_TYPE_UNSPECIFIED', 
                                expire_time = '', 
                                grant_id = '', 
                                last_heartbeat_transmit_expire_time = '', 
                                max_eirp = 1.337, 
                                move_list = [
                                    openapi_client.models.sas_portal_dpa_move_list.SasPortalDpaMoveList(
                                        dpa_id = '', )
                                    ], 
                                state = 'GRANT_STATE_UNSPECIFIED', 
                                suspension_reason = [
                                    ''
                                    ], )
                            ], 
                        name = '', 
                        preloaded_config = openapi_client.models.sas_portal_device_config.SasPortalDeviceConfig(
                            call_sign = '', 
                            category = 'DEVICE_CATEGORY_UNSPECIFIED', 
                            is_signed = True, 
                            state = 'DEVICE_CONFIG_STATE_UNSPECIFIED', 
                            update_time = '', 
                            user_id = '', ), 
                        serial_number = '', 
                        state = 'DEVICE_STATE_UNSPECIFIED', )
                    ],
                next_page_token = ''
            )
        else:
            return SasPortalListDevicesResponse(
        )
        """

    def testSasPortalListDevicesResponse(self):
        """Test SasPortalListDevicesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
