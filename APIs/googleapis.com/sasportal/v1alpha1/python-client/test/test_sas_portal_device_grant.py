# coding: utf-8

"""
    SAS Portal API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.sas_portal_device_grant import SasPortalDeviceGrant

class TestSasPortalDeviceGrant(unittest.TestCase):
    """SasPortalDeviceGrant unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SasPortalDeviceGrant:
        """Test SasPortalDeviceGrant
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SasPortalDeviceGrant`
        """
        model = SasPortalDeviceGrant()
        if include_optional:
            return SasPortalDeviceGrant(
                channel_type = 'CHANNEL_TYPE_UNSPECIFIED',
                expire_time = '',
                frequency_range = openapi_client.models.sas_portal_frequency_range.SasPortalFrequencyRange(
                    high_frequency_mhz = 1.337, 
                    low_frequency_mhz = 1.337, ),
                grant_id = '',
                last_heartbeat_transmit_expire_time = '',
                max_eirp = 1.337,
                move_list = [
                    openapi_client.models.sas_portal_dpa_move_list.SasPortalDpaMoveList(
                        dpa_id = '', 
                        frequency_range = openapi_client.models.sas_portal_frequency_range.SasPortalFrequencyRange(
                            high_frequency_mhz = 1.337, 
                            low_frequency_mhz = 1.337, ), )
                    ],
                state = 'GRANT_STATE_UNSPECIFIED',
                suspension_reason = [
                    ''
                    ]
            )
        else:
            return SasPortalDeviceGrant(
        )
        """

    def testSasPortalDeviceGrant(self):
        """Test SasPortalDeviceGrant"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
