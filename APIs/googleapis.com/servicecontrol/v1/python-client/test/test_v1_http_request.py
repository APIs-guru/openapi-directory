# coding: utf-8

"""
    Service Control API

    Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v1_http_request import V1HttpRequest

class TestV1HttpRequest(unittest.TestCase):
    """V1HttpRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1HttpRequest:
        """Test V1HttpRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1HttpRequest`
        """
        model = V1HttpRequest()
        if include_optional:
            return V1HttpRequest(
                cache_fill_bytes = '',
                cache_hit = True,
                cache_lookup = True,
                cache_validated_with_origin_server = True,
                latency = '',
                protocol = '',
                referer = '',
                remote_ip = '',
                request_method = '',
                request_size = '',
                request_url = '',
                response_size = '',
                server_ip = '',
                status = 56,
                user_agent = ''
            )
        else:
            return V1HttpRequest(
        )
        """

    def testV1HttpRequest(self):
        """Test V1HttpRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
