# coding: utf-8

"""
    Service Control API

    Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.report_response import ReportResponse

class TestReportResponse(unittest.TestCase):
    """ReportResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReportResponse:
        """Test ReportResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReportResponse`
        """
        model = ReportResponse()
        if include_optional:
            return ReportResponse(
                report_errors = [
                    openapi_client.models.report_error.ReportError(
                        operation_id = '', 
                        status = openapi_client.models.status.Status(
                            code = 56, 
                            details = [
                                {
                                    'key' : null
                                    }
                                ], 
                            message = '', ), )
                    ],
                service_config_id = '',
                service_rollout_id = ''
            )
        else:
            return ReportResponse(
        )
        """

    def testReportResponse(self):
        """Test ReportResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
