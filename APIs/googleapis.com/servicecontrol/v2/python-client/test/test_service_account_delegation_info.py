# coding: utf-8

"""
    Service Control API

    Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.service_account_delegation_info import ServiceAccountDelegationInfo

class TestServiceAccountDelegationInfo(unittest.TestCase):
    """ServiceAccountDelegationInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceAccountDelegationInfo:
        """Test ServiceAccountDelegationInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceAccountDelegationInfo`
        """
        model = ServiceAccountDelegationInfo()
        if include_optional:
            return ServiceAccountDelegationInfo(
                first_party_principal = openapi_client.models.first_party_principal.FirstPartyPrincipal(
                    principal_email = '', 
                    service_metadata = {
                        'key' : null
                        }, ),
                principal_subject = '',
                third_party_principal = openapi_client.models.third_party_principal.ThirdPartyPrincipal(
                    third_party_claims = {
                        'key' : null
                        }, )
            )
        else:
            return ServiceAccountDelegationInfo(
        )
        """

    def testServiceAccountDelegationInfo(self):
        """Test ServiceAccountDelegationInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
