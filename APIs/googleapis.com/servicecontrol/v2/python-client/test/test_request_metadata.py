# coding: utf-8

"""
    Service Control API

    Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.request_metadata import RequestMetadata

class TestRequestMetadata(unittest.TestCase):
    """RequestMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RequestMetadata:
        """Test RequestMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RequestMetadata`
        """
        model = RequestMetadata()
        if include_optional:
            return RequestMetadata(
                caller_ip = '',
                caller_network = '',
                caller_supplied_user_agent = '',
                destination_attributes = openapi_client.models.peer.Peer(
                    ip = '', 
                    labels = {
                        'key' : ''
                        }, 
                    port = '', 
                    principal = '', 
                    region_code = '', ),
                request_attributes = openapi_client.models.request.Request(
                    auth = openapi_client.models.auth.Auth(
                        access_levels = [
                            ''
                            ], 
                        audiences = [
                            ''
                            ], 
                        claims = {
                            'key' : null
                            }, 
                        presenter = '', 
                        principal = '', ), 
                    headers = {
                        'key' : ''
                        }, 
                    host = '', 
                    id = '', 
                    method = '', 
                    path = '', 
                    protocol = '', 
                    query = '', 
                    reason = '', 
                    scheme = '', 
                    size = '', 
                    time = '', )
            )
        else:
            return RequestMetadata(
        )
        """

    def testRequestMetadata(self):
        """Test RequestMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
