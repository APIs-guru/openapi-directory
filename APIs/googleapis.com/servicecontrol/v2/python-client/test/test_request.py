# coding: utf-8

"""
    Service Control API

    Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.request import Request

class TestRequest(unittest.TestCase):
    """Request unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Request:
        """Test Request
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Request`
        """
        model = Request()
        if include_optional:
            return Request(
                auth = openapi_client.models.auth.Auth(
                    access_levels = [
                        ''
                        ], 
                    audiences = [
                        ''
                        ], 
                    claims = {
                        'key' : null
                        }, 
                    presenter = '', 
                    principal = '', ),
                headers = {
                    'key' : ''
                    },
                host = '',
                id = '',
                method = '',
                path = '',
                protocol = '',
                query = '',
                reason = '',
                scheme = '',
                size = '',
                time = ''
            )
        else:
            return Request(
        )
        """

    def testRequest(self):
        """Test Request"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
