# coding: utf-8

"""
    Service Control API

    Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v2_log_entry import V2LogEntry

class TestV2LogEntry(unittest.TestCase):
    """V2LogEntry unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2LogEntry:
        """Test V2LogEntry
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2LogEntry`
        """
        model = V2LogEntry()
        if include_optional:
            return V2LogEntry(
                http_request = openapi_client.models.v2_http_request.V2HttpRequest(
                    cache_fill_bytes = '', 
                    cache_hit = True, 
                    cache_lookup = True, 
                    cache_validated_with_origin_server = True, 
                    latency = '', 
                    protocol = '', 
                    referer = '', 
                    remote_ip = '', 
                    request_method = '', 
                    request_size = '', 
                    request_url = '', 
                    response_size = '', 
                    server_ip = '', 
                    status = 56, 
                    user_agent = '', ),
                insert_id = '',
                labels = {
                    'key' : ''
                    },
                monitored_resource_labels = {
                    'key' : ''
                    },
                name = '',
                operation = openapi_client.models.v2_log_entry_operation.V2LogEntryOperation(
                    first = True, 
                    id = '', 
                    last = True, 
                    producer = '', ),
                proto_payload = {
                    'key' : null
                    },
                severity = 'DEFAULT',
                source_location = openapi_client.models.v2_log_entry_source_location.V2LogEntrySourceLocation(
                    file = '', 
                    function = '', 
                    line = '', ),
                struct_payload = {
                    'key' : null
                    },
                text_payload = '',
                timestamp = '',
                trace = ''
            )
        else:
            return V2LogEntry(
        )
        """

    def testV2LogEntry(self):
        """Test V2LogEntry"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
