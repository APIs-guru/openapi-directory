# coding: utf-8

"""
    Service Control API

    Provides admission control and telemetry reporting for services integrated with Service Infrastructure. 

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.service_delegation_history import ServiceDelegationHistory

class TestServiceDelegationHistory(unittest.TestCase):
    """ServiceDelegationHistory unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceDelegationHistory:
        """Test ServiceDelegationHistory
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceDelegationHistory`
        """
        model = ServiceDelegationHistory()
        if include_optional:
            return ServiceDelegationHistory(
                original_principal = '',
                service_metadata = [
                    openapi_client.models.service_metadata.ServiceMetadata(
                        job_metadata = {
                            'key' : null
                            }, 
                        principal_subject = '', 
                        service_domain = '', )
                    ]
            )
        else:
            return ServiceDelegationHistory(
        )
        """

    def testServiceDelegationHistory(self):
        """Test ServiceDelegationHistory"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
