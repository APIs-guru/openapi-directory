# coding: utf-8

"""
    BigLake API

    The BigLake API provides access to BigLake Metastore, a serverless, fully managed, and highly available metastore for open-source data that can be used for querying Apache Iceberg tables in BigQuery.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.projects_api import ProjectsApi


class TestProjectsApi(unittest.TestCase):
    """ProjectsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ProjectsApi()

    def tearDown(self) -> None:
        pass

    def test_biglake_projects_locations_catalogs_create(self) -> None:
        """Test case for biglake_projects_locations_catalogs_create

        """
        pass

    def test_biglake_projects_locations_catalogs_databases_create(self) -> None:
        """Test case for biglake_projects_locations_catalogs_databases_create

        """
        pass

    def test_biglake_projects_locations_catalogs_databases_list(self) -> None:
        """Test case for biglake_projects_locations_catalogs_databases_list

        """
        pass

    def test_biglake_projects_locations_catalogs_databases_tables_create(self) -> None:
        """Test case for biglake_projects_locations_catalogs_databases_tables_create

        """
        pass

    def test_biglake_projects_locations_catalogs_databases_tables_delete(self) -> None:
        """Test case for biglake_projects_locations_catalogs_databases_tables_delete

        """
        pass

    def test_biglake_projects_locations_catalogs_databases_tables_get(self) -> None:
        """Test case for biglake_projects_locations_catalogs_databases_tables_get

        """
        pass

    def test_biglake_projects_locations_catalogs_databases_tables_list(self) -> None:
        """Test case for biglake_projects_locations_catalogs_databases_tables_list

        """
        pass

    def test_biglake_projects_locations_catalogs_databases_tables_patch(self) -> None:
        """Test case for biglake_projects_locations_catalogs_databases_tables_patch

        """
        pass

    def test_biglake_projects_locations_catalogs_databases_tables_rename(self) -> None:
        """Test case for biglake_projects_locations_catalogs_databases_tables_rename

        """
        pass

    def test_biglake_projects_locations_catalogs_list(self) -> None:
        """Test case for biglake_projects_locations_catalogs_list

        """
        pass


if __name__ == '__main__':
    unittest.main()
