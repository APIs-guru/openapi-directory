# coding: utf-8

"""
    BigLake API

    The BigLake API provides access to BigLake Metastore, a serverless, fully managed, and highly available metastore for open-source data that can be used for querying Apache Iceberg tables in BigQuery.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.rename_table_request import RenameTableRequest

class TestRenameTableRequest(unittest.TestCase):
    """RenameTableRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RenameTableRequest:
        """Test RenameTableRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RenameTableRequest`
        """
        model = RenameTableRequest()
        if include_optional:
            return RenameTableRequest(
                new_name = ''
            )
        else:
            return RenameTableRequest(
        )
        """

    def testRenameTableRequest(self):
        """Test RenameTableRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
