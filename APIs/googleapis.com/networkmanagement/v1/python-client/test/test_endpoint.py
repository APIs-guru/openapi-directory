# coding: utf-8

"""
    Network Management API

    The Network Management API provides a collection of network performance monitoring and diagnostic capabilities.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.endpoint import Endpoint

class TestEndpoint(unittest.TestCase):
    """Endpoint unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Endpoint:
        """Test Endpoint
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Endpoint`
        """
        model = Endpoint()
        if include_optional:
            return Endpoint(
                app_engine_version = openapi_client.models.app_engine_version_endpoint.AppEngineVersionEndpoint(
                    uri = '', ),
                cloud_function = openapi_client.models.cloud_function_endpoint.CloudFunctionEndpoint(
                    uri = '', ),
                cloud_run_revision = openapi_client.models.cloud_run_revision_endpoint.CloudRunRevisionEndpoint(
                    uri = '', ),
                cloud_sql_instance = '',
                forwarding_rule = '',
                forwarding_rule_target = 'FORWARDING_RULE_TARGET_UNSPECIFIED',
                gke_master_cluster = '',
                instance = '',
                ip_address = '',
                load_balancer_id = '',
                load_balancer_type = 'LOAD_BALANCER_TYPE_UNSPECIFIED',
                network = '',
                network_type = 'NETWORK_TYPE_UNSPECIFIED',
                port = 56,
                project_id = ''
            )
        else:
            return Endpoint(
        )
        """

    def testEndpoint(self):
        """Test Endpoint"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
