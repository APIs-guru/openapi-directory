# coding: utf-8

"""
    Network Management API

    The Network Management API provides a collection of network performance monitoring and diagnostic capabilities.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.load_balancer_info import LoadBalancerInfo

class TestLoadBalancerInfo(unittest.TestCase):
    """LoadBalancerInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LoadBalancerInfo:
        """Test LoadBalancerInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LoadBalancerInfo`
        """
        model = LoadBalancerInfo()
        if include_optional:
            return LoadBalancerInfo(
                backend_type = 'BACKEND_TYPE_UNSPECIFIED',
                backend_uri = '',
                backends = [
                    openapi_client.models.load_balancer_backend.LoadBalancerBackend(
                        display_name = '', 
                        health_check_allowing_firewall_rules = [
                            ''
                            ], 
                        health_check_blocking_firewall_rules = [
                            ''
                            ], 
                        health_check_firewall_state = 'HEALTH_CHECK_FIREWALL_STATE_UNSPECIFIED', 
                        uri = '', )
                    ],
                health_check_uri = '',
                load_balancer_type = 'LOAD_BALANCER_TYPE_UNSPECIFIED'
            )
        else:
            return LoadBalancerInfo(
        )
        """

    def testLoadBalancerInfo(self):
        """Test LoadBalancerInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
