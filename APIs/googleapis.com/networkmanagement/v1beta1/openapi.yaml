openapi: 3.0.0
servers:
  - url: https://networkmanagement.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: The Network Management API provides a collection of network performance monitoring and diagnostic capabilities.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Network Management API
  version: v1beta1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - format: google
      url: https://networkmanagement.googleapis.com/$discovery/rest?version=v1beta1
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: networkmanagement
externalDocs:
  url: https://cloud.google.com/
tags:
  - name: projects
paths:
  /v1beta1/{name}:
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: networkmanagement.projects.locations.global.operations.delete
      parameters:
        - description: The name of the operation resource to be deleted.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: networkmanagement.projects.locations.global.operations.get
      parameters:
        - description: The name of the operation resource.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates the configuration of an existing `ConnectivityTest`. After you update a test, the reachability analysis is performed as part of the long running operation, which completes when the analysis completes. The Reachability state in the test resource is updated with the new result. If the endpoint specifications in `ConnectivityTest` are invalid (for example, they contain non-existent resources in the network, or the user does not have read permissions to the network configurations of listed projects), then the reachability result returns a value of UNKNOWN. If the endpoint specifications in `ConnectivityTest` are incomplete, the reachability result returns a value of `AMBIGUOUS`. See the documentation in `ConnectivityTest` for for more details.
      operationId: networkmanagement.projects.locations.global.connectivityTests.patch
      parameters:
        - description: "Required. Unique name of the resource using the form: `projects/{project_id}/locations/global/connectivityTests/{test}`"
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Required. Mask of fields to update. At least one path must be supplied in this field.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnectivityTest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta1/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: networkmanagement.projects.locations.list
      parameters:
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results to return. If not set, the service selects a default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1beta1/{name}/operations:
    get:
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: networkmanagement.projects.locations.global.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1beta1/{name}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: networkmanagement.projects.locations.global.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOperationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta1/{name}:rerun:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Rerun an existing `ConnectivityTest`. After the user triggers the rerun, the reachability analysis is performed as part of the long running operation, which completes when the analysis completes. Even though the test configuration remains the same, the reachability result may change due to underlying network configuration changes. If the endpoint specifications in `ConnectivityTest` become invalid (for example, specified resources are deleted in the network, or you lost read permissions to the network configurations of listed projects), then the reachability result returns a value of `UNKNOWN`.
      operationId: networkmanagement.projects.locations.global.connectivityTests.rerun
      parameters:
        - description: "Required. Connectivity Test resource name using the form: `projects/{project_id}/locations/global/connectivityTests/{test_id}`"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RerunConnectivityTestRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta1/{parent}/connectivityTests:
    get:
      description: Lists all Connectivity Tests owned by a project.
      operationId: networkmanagement.projects.locations.global.connectivityTests.list
      parameters:
        - description: "Required. The parent resource of the Connectivity Tests: `projects/{project_id}/locations/global`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'Lists the `ConnectivityTests` that match the filter expression. A filter expression filters the resources listed in the response. The expression must be of the form ` ` where operators: `<`, `>`, `<=`, `>=`, `!=`, `=`, `:` are supported (colon `:` represents a HAS operator which is roughly synonymous with equality). can refer to a proto or JSON field, or a synthetic field. Field names can be camelCase or snake_case. Examples: - Filter by name: name = "projects/proj-1/locations/global/connectivityTests/test-1 - Filter by labels: - Resources that have a key called `foo` labels.foo:* - Resources that have a key called `foo` whose value is `bar` labels.foo = bar'
          in: query
          name: filter
          schema:
            type: string
        - description: Field to use to sort the list.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Number of `ConnectivityTests` to return.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token from an earlier query, as returned in `next_page_token`.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListConnectivityTestsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new Connectivity Test. After you create a test, the reachability analysis is performed as part of the long running operation, which completes when the analysis completes. If the endpoint specifications in `ConnectivityTest` are invalid (for example, containing non-existent resources in the network, or you don't have read permissions to the network configurations of listed projects), then the reachability result returns a value of `UNKNOWN`. If the endpoint specifications in `ConnectivityTest` are incomplete, the reachability result returns a value of AMBIGUOUS. For more information, see the Connectivity Test documentation.
      operationId: networkmanagement.projects.locations.global.connectivityTests.create
      parameters:
        - description: "Required. The parent resource of the Connectivity Test to create: `projects/{project_id}/locations/global`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Required. The logical name of the Connectivity Test in your project with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-40 characters. * Must end with a number or a letter. * Must be unique within the customer project"
          in: query
          name: testId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnectivityTest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta1/{resource}:getIamPolicy:
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: networkmanagement.projects.locations.global.connectivityTests.getIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1beta1/{resource}:setIamPolicy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: networkmanagement.projects.locations.global.connectivityTests.setIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetIamPolicyRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1beta1/{resource}:testIamPermissions:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: networkmanagement.projects.locations.global.connectivityTests.testIamPermissions
      parameters:
        - description: "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestIamPermissionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AbortInfo:
      description: Details of the final state "abort" and associated resource.
      properties:
        cause:
          description: Causes that the analysis is aborted.
          enum:
            - CAUSE_UNSPECIFIED
            - UNKNOWN_NETWORK
            - UNKNOWN_PROJECT
            - NO_EXTERNAL_IP
            - UNINTENDED_DESTINATION
            - SOURCE_ENDPOINT_NOT_FOUND
            - MISMATCHED_SOURCE_NETWORK
            - DESTINATION_ENDPOINT_NOT_FOUND
            - MISMATCHED_DESTINATION_NETWORK
            - UNKNOWN_IP
            - SOURCE_IP_ADDRESS_NOT_IN_SOURCE_NETWORK
            - PERMISSION_DENIED
            - PERMISSION_DENIED_NO_CLOUD_NAT_CONFIGS
            - PERMISSION_DENIED_NO_NEG_ENDPOINT_CONFIGS
            - NO_SOURCE_LOCATION
            - INVALID_ARGUMENT
            - TRACE_TOO_LONG
            - INTERNAL_ERROR
            - UNSUPPORTED
            - MISMATCHED_IP_VERSION
            - GKE_KONNECTIVITY_PROXY_UNSUPPORTED
            - RESOURCE_CONFIG_NOT_FOUND
            - VM_INSTANCE_CONFIG_NOT_FOUND
            - NETWORK_CONFIG_NOT_FOUND
            - FIREWALL_CONFIG_NOT_FOUND
            - ROUTE_CONFIG_NOT_FOUND
            - GOOGLE_MANAGED_SERVICE_AMBIGUOUS_PSC_ENDPOINT
            - SOURCE_PSC_CLOUD_SQL_UNSUPPORTED
            - SOURCE_FORWARDING_RULE_UNSUPPORTED
            - NON_ROUTABLE_IP_ADDRESS
          type: string
          x-enumDeprecated:
            - false
            - true
            - true
            - true
            - true
            - true
            - true
            - true
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
        ipAddress:
          description: IP address that caused the abort.
          type: string
        projectsMissingPermission:
          description: List of project IDs the user specified in the request but lacks access to. In this case, analysis is aborted with the PERMISSION_DENIED cause.
          items:
            type: string
          type: array
        resourceUri:
          description: URI of the resource that caused the abort.
          type: string
      type: object
    AppEngineVersionEndpoint:
      description: Wrapper for the App Engine service version attributes.
      properties:
        uri:
          description: An [App Engine](https://cloud.google.com/appengine) [service version](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions) name.
          type: string
      type: object
    AppEngineVersionInfo:
      description: For display only. Metadata associated with an App Engine version.
      properties:
        displayName:
          description: Name of an App Engine version.
          type: string
        environment:
          description: App Engine execution environment for a version.
          type: string
        runtime:
          description: Runtime of the App Engine version.
          type: string
        uri:
          description: URI of an App Engine version.
          type: string
      type: object
    AuditConfig:
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: "#/components/schemas/AuditLogConfig"
          type: array
        service:
          description: Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
          type: string
      type: object
    AuditLogConfig:
      description: "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
      properties:
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
      type: object
    Binding:
      description: Associates `members`, or principals, with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
          description: The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        members:
          description: "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`."
          items:
            type: string
          type: array
        role:
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
      type: object
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    CloudFunctionEndpoint:
      description: Wrapper for Cloud Function attributes.
      properties:
        uri:
          description: A [Cloud Function](https://cloud.google.com/functions) name.
          type: string
      type: object
    CloudFunctionInfo:
      description: For display only. Metadata associated with a Cloud Function.
      properties:
        displayName:
          description: Name of a Cloud Function.
          type: string
        location:
          description: Location in which the Cloud Function is deployed.
          type: string
        uri:
          description: URI of a Cloud Function.
          type: string
        versionId:
          description: Latest successfully deployed version id of the Cloud Function.
          format: int64
          type: string
      type: object
    CloudRunRevisionEndpoint:
      description: Wrapper for Cloud Run revision attributes.
      properties:
        uri:
          description: "A [Cloud Run](https://cloud.google.com/run) [revision](https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get) URI. The format is: projects/{project}/locations/{location}/revisions/{revision}"
          type: string
      type: object
    CloudRunRevisionInfo:
      description: For display only. Metadata associated with a Cloud Run revision.
      properties:
        displayName:
          description: Name of a Cloud Run revision.
          type: string
        location:
          description: Location in which this revision is deployed.
          type: string
        serviceName:
          deprecated: true
          description: ID of Cloud Run Service this revision belongs to.
          type: string
        serviceUri:
          description: URI of Cloud Run service this revision belongs to.
          type: string
        uri:
          description: URI of a Cloud Run revision.
          type: string
      type: object
    CloudSQLInstanceInfo:
      description: For display only. Metadata associated with a Cloud SQL instance.
      properties:
        displayName:
          description: Name of a Cloud SQL instance.
          type: string
        externalIp:
          description: External IP address of a Cloud SQL instance.
          type: string
        internalIp:
          description: Internal IP address of a Cloud SQL instance.
          type: string
        networkUri:
          description: URI of a Cloud SQL instance network or empty string if the instance does not have one.
          type: string
        region:
          description: Region in which the Cloud SQL instance is running.
          type: string
        uri:
          description: URI of a Cloud SQL instance.
          type: string
      type: object
    ConnectivityTest:
      description: A Connectivity Test for a network reachability analysis.
      properties:
        createTime:
          description: Output only. The time the test was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: The user-supplied description of the Connectivity Test. Maximum of 512 characters.
          type: string
        destination:
          $ref: "#/components/schemas/Endpoint"
          description: Required. Destination specification of the Connectivity Test. You can use a combination of destination IP address, Compute Engine VM instance, or VPC network to uniquely identify the destination location. Even if the destination IP address is not unique, the source IP location is unique. Usually, the analysis can infer the destination endpoint from route information. If the destination you specify is a VM instance and the instance has multiple network interfaces, then you must also specify either a destination IP address or VPC network to identify the destination interface. A reachability analysis proceeds even if the destination location is ambiguous. However, the result can include endpoints that you don't intend to test.
        displayName:
          description: Output only. The display name of a Connectivity Test.
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Resource labels to represent user-provided metadata.
          type: object
        name:
          description: "Required. Unique name of the resource using the form: `projects/{project_id}/locations/global/connectivityTests/{test}`"
          type: string
        probingDetails:
          $ref: "#/components/schemas/ProbingDetails"
          description: Output only. The probing details of this test from the latest run, present for applicable tests only. The details are updated when creating a new test, updating an existing test, or triggering a one-time rerun of an existing test.
          readOnly: true
        protocol:
          description: IP Protocol of the test. When not provided, "TCP" is assumed.
          type: string
        reachabilityDetails:
          $ref: "#/components/schemas/ReachabilityDetails"
          description: Output only. The reachability details of this test from the latest run. The details are updated when creating a new test, updating an existing test, or triggering a one-time rerun of an existing test.
          readOnly: true
        relatedProjects:
          description: Other projects that may be relevant for reachability analysis. This is applicable to scenarios where a test can cross project boundaries.
          items:
            type: string
          type: array
        source:
          $ref: "#/components/schemas/Endpoint"
          description: "Required. Source specification of the Connectivity Test. You can use a combination of source IP address, virtual machine (VM) instance, or Compute Engine network to uniquely identify the source location. Examples: If the source IP address is an internal IP address within a Google Cloud Virtual Private Cloud (VPC) network, then you must also specify the VPC network. Otherwise, specify the VM instance, which already contains its internal IP address and VPC network information. If the source of the test is within an on-premises network, then you must provide the destination VPC network. If the source endpoint is a Compute Engine VM instance with multiple network interfaces, the instance itself is not sufficient to identify the endpoint. So, you must also specify the source IP address or VPC network. A reachability analysis proceeds even if the source location is ambiguous. However, the test result may include endpoints that you don't intend to test."
        updateTime:
          description: Output only. The time the test's configuration was updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    DeliverInfo:
      description: Details of the final state "deliver" and associated resource.
      properties:
        ipAddress:
          description: IP address of the target (if applicable).
          type: string
        resourceUri:
          description: URI of the resource that the packet is delivered to.
          type: string
        target:
          description: Target type where the packet is delivered to.
          enum:
            - TARGET_UNSPECIFIED
            - INSTANCE
            - INTERNET
            - GOOGLE_API
            - GKE_MASTER
            - CLOUD_SQL_INSTANCE
            - PSC_PUBLISHED_SERVICE
            - PSC_GOOGLE_API
            - PSC_VPC_SC
            - SERVERLESS_NEG
            - STORAGE_BUCKET
            - PRIVATE_NETWORK
            - CLOUD_FUNCTION
            - APP_ENGINE_VERSION
            - CLOUD_RUN_REVISION
          type: string
      type: object
    DropInfo:
      description: Details of the final state "drop" and associated resource.
      properties:
        cause:
          description: Cause that the packet is dropped.
          enum:
            - CAUSE_UNSPECIFIED
            - UNKNOWN_EXTERNAL_ADDRESS
            - FOREIGN_IP_DISALLOWED
            - FIREWALL_RULE
            - NO_ROUTE
            - ROUTE_BLACKHOLE
            - ROUTE_WRONG_NETWORK
            - ROUTE_NEXT_HOP_IP_ADDRESS_NOT_RESOLVED
            - ROUTE_NEXT_HOP_RESOURCE_NOT_FOUND
            - ROUTE_NEXT_HOP_INSTANCE_WRONG_NETWORK
            - ROUTE_NEXT_HOP_INSTANCE_NON_PRIMARY_IP
            - ROUTE_NEXT_HOP_FORWARDING_RULE_IP_MISMATCH
            - ROUTE_NEXT_HOP_VPN_TUNNEL_NOT_ESTABLISHED
            - ROUTE_NEXT_HOP_FORWARDING_RULE_TYPE_INVALID
            - NO_ROUTE_FROM_INTERNET_TO_PRIVATE_IPV6_ADDRESS
            - VPN_TUNNEL_LOCAL_SELECTOR_MISMATCH
            - VPN_TUNNEL_REMOTE_SELECTOR_MISMATCH
            - PRIVATE_TRAFFIC_TO_INTERNET
            - PRIVATE_GOOGLE_ACCESS_DISALLOWED
            - PRIVATE_GOOGLE_ACCESS_VIA_VPN_TUNNEL_UNSUPPORTED
            - NO_EXTERNAL_ADDRESS
            - UNKNOWN_INTERNAL_ADDRESS
            - FORWARDING_RULE_MISMATCH
            - FORWARDING_RULE_NO_INSTANCES
            - FIREWALL_BLOCKING_LOAD_BALANCER_BACKEND_HEALTH_CHECK
            - INSTANCE_NOT_RUNNING
            - GKE_CLUSTER_NOT_RUNNING
            - CLOUD_SQL_INSTANCE_NOT_RUNNING
            - TRAFFIC_TYPE_BLOCKED
            - GKE_MASTER_UNAUTHORIZED_ACCESS
            - CLOUD_SQL_INSTANCE_UNAUTHORIZED_ACCESS
            - DROPPED_INSIDE_GKE_SERVICE
            - DROPPED_INSIDE_CLOUD_SQL_SERVICE
            - GOOGLE_MANAGED_SERVICE_NO_PEERING
            - GOOGLE_MANAGED_SERVICE_NO_PSC_ENDPOINT
            - GKE_PSC_ENDPOINT_MISSING
            - CLOUD_SQL_INSTANCE_NO_IP_ADDRESS
            - GKE_CONTROL_PLANE_REGION_MISMATCH
            - PUBLIC_GKE_CONTROL_PLANE_TO_PRIVATE_DESTINATION
            - GKE_CONTROL_PLANE_NO_ROUTE
            - CLOUD_SQL_INSTANCE_NOT_CONFIGURED_FOR_EXTERNAL_TRAFFIC
            - PUBLIC_CLOUD_SQL_INSTANCE_TO_PRIVATE_DESTINATION
            - CLOUD_SQL_INSTANCE_NO_ROUTE
            - CLOUD_FUNCTION_NOT_ACTIVE
            - VPC_CONNECTOR_NOT_SET
            - VPC_CONNECTOR_NOT_RUNNING
            - FORWARDING_RULE_REGION_MISMATCH
            - PSC_CONNECTION_NOT_ACCEPTED
            - PSC_ENDPOINT_ACCESSED_FROM_PEERED_NETWORK
            - PSC_NEG_PRODUCER_ENDPOINT_NO_GLOBAL_ACCESS
            - PSC_NEG_PRODUCER_FORWARDING_RULE_MULTIPLE_PORTS
            - NO_NAT_SUBNETS_FOR_PSC_SERVICE_ATTACHMENT
            - HYBRID_NEG_NON_DYNAMIC_ROUTE_MATCHED
            - HYBRID_NEG_NON_LOCAL_DYNAMIC_ROUTE_MATCHED
            - CLOUD_RUN_REVISION_NOT_READY
            - DROPPED_INSIDE_PSC_SERVICE_PRODUCER
            - LOAD_BALANCER_HAS_NO_PROXY_SUBNET
            - CLOUD_NAT_NO_ADDRESSES
          type: string
        destinationIp:
          description: Destination IP address of the dropped packet (if relevant).
          type: string
        region:
          description: Region of the dropped packet (if relevant).
          type: string
        resourceUri:
          description: URI of the resource that caused the drop.
          type: string
        sourceIp:
          description: Source IP address of the dropped packet (if relevant).
          type: string
      type: object
    EdgeLocation:
      description: Representation of a network edge location as per https://cloud.google.com/vpc/docs/edge-locations.
      properties:
        metropolitanArea:
          description: Name of the metropolitan area.
          type: string
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    Endpoint:
      description: Source or destination of the Connectivity Test.
      properties:
        appEngineVersion:
          $ref: "#/components/schemas/AppEngineVersionEndpoint"
          description: An [App Engine](https://cloud.google.com/appengine) [service version](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions).
        cloudFunction:
          $ref: "#/components/schemas/CloudFunctionEndpoint"
          description: A [Cloud Function](https://cloud.google.com/functions).
        cloudRunRevision:
          $ref: "#/components/schemas/CloudRunRevisionEndpoint"
          description: A [Cloud Run](https://cloud.google.com/run) [revision](https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get)
        cloudSqlInstance:
          description: A [Cloud SQL](https://cloud.google.com/sql) instance URI.
          type: string
        forwardingRule:
          description: "A forwarding rule and its corresponding IP address represent the frontend configuration of a Google Cloud load balancer. Forwarding rules are also used for protocol forwarding, Private Service Connect and other network services to provide forwarding information in the control plane. Format: projects/{project}/global/forwardingRules/{id} or projects/{project}/regions/{region}/forwardingRules/{id}"
          type: string
        forwardingRuleTarget:
          description: Output only. Specifies the type of the target of the forwarding rule.
          enum:
            - FORWARDING_RULE_TARGET_UNSPECIFIED
            - INSTANCE
            - LOAD_BALANCER
            - VPN_GATEWAY
            - PSC
          readOnly: true
          type: string
        gkeMasterCluster:
          description: A cluster URI for [Google Kubernetes Engine master](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture).
          type: string
        instance:
          description: A Compute Engine instance URI.
          type: string
        ipAddress:
          description: The IP address of the endpoint, which can be an external or internal IP.
          type: string
        loadBalancerId:
          description: Output only. ID of the load balancer the forwarding rule points to. Empty for forwarding rules not related to load balancers.
          readOnly: true
          type: string
        loadBalancerType:
          description: Output only. Type of the load balancer the forwarding rule points to.
          enum:
            - LOAD_BALANCER_TYPE_UNSPECIFIED
            - HTTPS_ADVANCED_LOAD_BALANCER
            - HTTPS_LOAD_BALANCER
            - REGIONAL_HTTPS_LOAD_BALANCER
            - INTERNAL_HTTPS_LOAD_BALANCER
            - SSL_PROXY_LOAD_BALANCER
            - TCP_PROXY_LOAD_BALANCER
            - INTERNAL_TCP_PROXY_LOAD_BALANCER
            - NETWORK_LOAD_BALANCER
            - LEGACY_NETWORK_LOAD_BALANCER
            - TCP_UDP_INTERNAL_LOAD_BALANCER
          readOnly: true
          type: string
        network:
          description: A Compute Engine network URI.
          type: string
        networkType:
          description: Type of the network where the endpoint is located. Applicable only to source endpoint, as destination network type can be inferred from the source.
          enum:
            - NETWORK_TYPE_UNSPECIFIED
            - GCP_NETWORK
            - NON_GCP_NETWORK
          type: string
        port:
          description: The IP protocol port of the endpoint. Only applicable when protocol is TCP or UDP.
          format: int32
          type: integer
        projectId:
          description: "Project ID where the endpoint is located. The Project ID can be derived from the URI if you provide a VM instance or network URI. The following are two cases where you must provide the project ID: 1. Only the IP address is specified, and the IP address is within a Google Cloud project. 2. When you are using Shared VPC and the IP address that you provide is from the service project. In this case, the network that the IP address resides in is defined in the host project."
          type: string
      type: object
    EndpointInfo:
      description: For display only. The specification of the endpoints for the test. EndpointInfo is derived from source and destination Endpoint and validated by the backend data plane model.
      properties:
        destinationIp:
          description: Destination IP address.
          type: string
        destinationNetworkUri:
          description: URI of the network where this packet is sent to.
          type: string
        destinationPort:
          description: Destination port. Only valid when protocol is TCP or UDP.
          format: int32
          type: integer
        protocol:
          description: 'IP protocol in string format, for example: "TCP", "UDP", "ICMP".'
          type: string
        sourceAgentUri:
          description: URI of the source telemetry agent this packet originates from.
          type: string
        sourceIp:
          description: Source IP address.
          type: string
        sourceNetworkUri:
          description: URI of the network where this packet originates from.
          type: string
        sourcePort:
          description: Source port. Only valid when protocol is TCP or UDP.
          format: int32
          type: integer
      type: object
    Expr:
      description: "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
      properties:
        description:
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
          type: string
      type: object
    FirewallInfo:
      description: For display only. Metadata associated with a VPC firewall rule, an implied VPC firewall rule, or a hierarchical firewall policy rule.
      properties:
        action:
          description: "Possible values: ALLOW, DENY, APPLY_SECURITY_PROFILE_GROUP"
          type: string
        direction:
          description: "Possible values: INGRESS, EGRESS"
          type: string
        displayName:
          description: The display name of the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.
          type: string
        firewallRuleType:
          description: The firewall rule's type.
          enum:
            - FIREWALL_RULE_TYPE_UNSPECIFIED
            - HIERARCHICAL_FIREWALL_POLICY_RULE
            - VPC_FIREWALL_RULE
            - IMPLIED_VPC_FIREWALL_RULE
            - SERVERLESS_VPC_ACCESS_MANAGED_FIREWALL_RULE
            - NETWORK_FIREWALL_POLICY_RULE
            - NETWORK_REGIONAL_FIREWALL_POLICY_RULE
            - UNSUPPORTED_FIREWALL_POLICY_RULE
            - TRACKING_STATE
          type: string
        networkUri:
          description: The URI of the VPC network that the firewall rule is associated with. This field is not applicable to hierarchical firewall policy rules.
          type: string
        policy:
          description: The hierarchical firewall policy that this rule is associated with. This field is not applicable to VPC firewall rules.
          type: string
        priority:
          description: The priority of the firewall rule.
          format: int32
          type: integer
        targetServiceAccounts:
          description: The target service accounts specified by the firewall rule.
          items:
            type: string
          type: array
        targetTags:
          description: The target tags defined by the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.
          items:
            type: string
          type: array
        uri:
          description: The URI of the VPC firewall rule. This field is not applicable to implied firewall rules or hierarchical firewall policy rules.
          type: string
      type: object
    ForwardInfo:
      description: Details of the final state "forward" and associated resource.
      properties:
        ipAddress:
          description: IP address of the target (if applicable).
          type: string
        resourceUri:
          description: URI of the resource that the packet is forwarded to.
          type: string
        target:
          description: Target type where this packet is forwarded to.
          enum:
            - TARGET_UNSPECIFIED
            - PEERING_VPC
            - VPN_GATEWAY
            - INTERCONNECT
            - GKE_MASTER
            - IMPORTED_CUSTOM_ROUTE_NEXT_HOP
            - CLOUD_SQL_INSTANCE
            - ANOTHER_PROJECT
            - NCC_HUB
            - ROUTER_APPLIANCE
          type: string
          x-enumDeprecated:
            - false
            - false
            - false
            - false
            - true
            - false
            - true
            - false
            - false
            - false
      type: object
    ForwardingRuleInfo:
      description: For display only. Metadata associated with a Compute Engine forwarding rule.
      properties:
        displayName:
          description: Name of a Compute Engine forwarding rule.
          type: string
        matchedPortRange:
          description: Port range defined in the forwarding rule that matches the test.
          type: string
        matchedProtocol:
          description: Protocol defined in the forwarding rule that matches the test.
          type: string
        networkUri:
          description: Network URI. Only valid for Internal Load Balancer.
          type: string
        target:
          description: Target type of the forwarding rule.
          type: string
        uri:
          description: URI of a Compute Engine forwarding rule.
          type: string
        vip:
          description: VIP of the forwarding rule.
          type: string
      type: object
    GKEMasterInfo:
      description: For display only. Metadata associated with a Google Kubernetes Engine (GKE) cluster master.
      properties:
        clusterNetworkUri:
          description: URI of a GKE cluster network.
          type: string
        clusterUri:
          description: URI of a GKE cluster.
          type: string
        externalIp:
          description: External IP address of a GKE cluster master.
          type: string
        internalIp:
          description: Internal IP address of a GKE cluster master.
          type: string
      type: object
    GoogleServiceInfo:
      description: For display only. Details of a Google Service sending packets to a VPC network. Although the source IP might be a publicly routable address, some Google Services use special routes within Google production infrastructure to reach Compute Engine Instances. https://cloud.google.com/vpc/docs/routes#special_return_paths
      properties:
        googleServiceType:
          description: Recognized type of a Google Service.
          enum:
            - GOOGLE_SERVICE_TYPE_UNSPECIFIED
            - IAP
            - GFE_PROXY_OR_HEALTH_CHECK_PROBER
            - CLOUD_DNS
            - GOOGLE_API
            - GOOGLE_API_PSC
            - GOOGLE_API_VPC_SC
          type: string
        sourceIp:
          description: Source IP address.
          type: string
      type: object
    InstanceInfo:
      description: For display only. Metadata associated with a Compute Engine instance.
      properties:
        displayName:
          description: Name of a Compute Engine instance.
          type: string
        externalIp:
          description: External IP address of the network interface.
          type: string
        interface:
          description: Name of the network interface of a Compute Engine instance.
          type: string
        internalIp:
          description: Internal IP address of the network interface.
          type: string
        networkTags:
          description: Network tags configured on the instance.
          items:
            type: string
          type: array
        networkUri:
          description: URI of a Compute Engine network.
          type: string
        serviceAccount:
          deprecated: true
          description: Service account authorized for the instance.
          type: string
        uri:
          description: URI of a Compute Engine instance.
          type: string
      type: object
    LatencyDistribution:
      description: Describes measured latency distribution.
      properties:
        latencyPercentiles:
          description: Representative latency percentiles.
          items:
            $ref: "#/components/schemas/LatencyPercentile"
          type: array
      type: object
    LatencyPercentile:
      description: Latency percentile rank and value.
      properties:
        latencyMicros:
          description: percent-th percentile of latency observed, in microseconds. Fraction of percent/100 of samples have latency lower or equal to the value of this field.
          format: int64
          type: string
        percent:
          description: Percentage of samples this data point applies to.
          format: int32
          type: integer
      type: object
    ListConnectivityTestsResponse:
      description: Response for the `ListConnectivityTests` method.
      properties:
        nextPageToken:
          description: Page token to fetch the next set of Connectivity Tests.
          type: string
        resources:
          description: List of Connectivity Tests.
          items:
            $ref: "#/components/schemas/ConnectivityTest"
          type: array
        unreachable:
          description: Locations that could not be reached (when querying all locations with `-`).
          items:
            type: string
          type: array
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    LoadBalancerBackend:
      description: For display only. Metadata associated with a specific load balancer backend.
      properties:
        displayName:
          description: Name of a Compute Engine instance or network endpoint.
          type: string
        healthCheckAllowingFirewallRules:
          description: A list of firewall rule URIs allowing probes from health check IP ranges.
          items:
            type: string
          type: array
        healthCheckBlockingFirewallRules:
          description: A list of firewall rule URIs blocking probes from health check IP ranges.
          items:
            type: string
          type: array
        healthCheckFirewallState:
          description: State of the health check firewall configuration.
          enum:
            - HEALTH_CHECK_FIREWALL_STATE_UNSPECIFIED
            - CONFIGURED
            - MISCONFIGURED
          type: string
        uri:
          description: URI of a Compute Engine instance or network endpoint.
          type: string
      type: object
    LoadBalancerBackendInfo:
      description: For display only. Metadata associated with the load balancer backend.
      properties:
        backendBucketUri:
          description: URI of the backend bucket this backend targets (if applicable).
          type: string
        backendServiceUri:
          description: URI of the backend service this backend belongs to (if applicable).
          type: string
        healthCheckFirewallsConfigState:
          description: "Output only. Health check firewalls configuration state for the backend. This is a result of the static firewall analysis (verifying that health check traffic from required IP ranges to the backend is allowed or not). The backend might still be unhealthy even if these firewalls are configured. Please refer to the documentation for more information: https://cloud.google.com/load-balancing/docs/firewall-rules"
          enum:
            - HEALTH_CHECK_FIREWALLS_CONFIG_STATE_UNSPECIFIED
            - FIREWALLS_CONFIGURED
            - FIREWALLS_PARTIALLY_CONFIGURED
            - FIREWALLS_NOT_CONFIGURED
            - FIREWALLS_UNSUPPORTED
          readOnly: true
          type: string
        healthCheckUri:
          description: URI of the health check attached to this backend (if applicable).
          type: string
        instanceGroupUri:
          description: URI of the instance group this backend belongs to (if applicable).
          type: string
        instanceUri:
          description: URI of the backend instance (if applicable). Populated for instance group backends, and zonal NEG backends.
          type: string
        name:
          description: Display name of the backend. For example, it might be an instance name for the instance group backends, or an IP address and port for zonal network endpoint group backends.
          type: string
        networkEndpointGroupUri:
          description: URI of the network endpoint group this backend belongs to (if applicable).
          type: string
        pscGoogleApiTarget:
          description: PSC Google API target this PSC NEG backend targets (if applicable).
          type: string
        pscServiceAttachmentUri:
          description: URI of the PSC service attachment this PSC NEG backend targets (if applicable).
          type: string
      type: object
    LoadBalancerInfo:
      description: For display only. Metadata associated with a load balancer.
      properties:
        backendType:
          description: Type of load balancer's backend configuration.
          enum:
            - BACKEND_TYPE_UNSPECIFIED
            - BACKEND_SERVICE
            - TARGET_POOL
            - TARGET_INSTANCE
          type: string
        backendUri:
          description: Backend configuration URI.
          type: string
        backends:
          description: Information for the loadbalancer backends.
          items:
            $ref: "#/components/schemas/LoadBalancerBackend"
          type: array
        healthCheckUri:
          deprecated: true
          description: URI of the health check for the load balancer. Deprecated and no longer populated as different load balancer backends might have different health checks.
          type: string
        loadBalancerType:
          description: Type of the load balancer.
          enum:
            - LOAD_BALANCER_TYPE_UNSPECIFIED
            - INTERNAL_TCP_UDP
            - NETWORK_TCP_UDP
            - HTTP_PROXY
            - TCP_PROXY
            - SSL_PROXY
          type: string
      type: object
    Location:
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      type: object
    NatInfo:
      description: For display only. Metadata associated with NAT.
      properties:
        natGatewayName:
          description: The name of Cloud NAT Gateway. Only valid when type is CLOUD_NAT.
          type: string
        networkUri:
          description: URI of the network where NAT translation takes place.
          type: string
        newDestinationIp:
          description: Destination IP address after NAT translation.
          type: string
        newDestinationPort:
          description: Destination port after NAT translation. Only valid when protocol is TCP or UDP.
          format: int32
          type: integer
        newSourceIp:
          description: Source IP address after NAT translation.
          type: string
        newSourcePort:
          description: Source port after NAT translation. Only valid when protocol is TCP or UDP.
          format: int32
          type: integer
        oldDestinationIp:
          description: Destination IP address before NAT translation.
          type: string
        oldDestinationPort:
          description: Destination port before NAT translation. Only valid when protocol is TCP or UDP.
          format: int32
          type: integer
        oldSourceIp:
          description: Source IP address before NAT translation.
          type: string
        oldSourcePort:
          description: Source port before NAT translation. Only valid when protocol is TCP or UDP.
          format: int32
          type: integer
        protocol:
          description: 'IP protocol in string format, for example: "TCP", "UDP", "ICMP".'
          type: string
        routerUri:
          description: Uri of the Cloud Router. Only valid when type is CLOUD_NAT.
          type: string
        type:
          description: Type of NAT.
          enum:
            - TYPE_UNSPECIFIED
            - INTERNAL_TO_EXTERNAL
            - EXTERNAL_TO_INTERNAL
            - CLOUD_NAT
            - PRIVATE_SERVICE_CONNECT
          type: string
      type: object
    NetworkInfo:
      description: For display only. Metadata associated with a Compute Engine network.
      properties:
        displayName:
          description: Name of a Compute Engine network.
          type: string
        matchedIpRange:
          description: The IP range that matches the test.
          type: string
        uri:
          description: URI of a Compute Engine network.
          type: string
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    OperationMetadata:
      description: Metadata describing an Operation
      properties:
        apiVersion:
          description: API version.
          type: string
        cancelRequested:
          description: Specifies if cancellation was requested for the operation.
          type: boolean
        createTime:
          description: The time the operation was created.
          format: google-datetime
          type: string
        endTime:
          description: The time the operation finished running.
          format: google-datetime
          type: string
        statusDetail:
          description: Human-readable status of the operation, if any.
          type: string
        target:
          description: Target of the operation - for example projects/project-1/locations/global/connectivityTests/test-1
          type: string
        verb:
          description: Name of the verb executed by the operation.
          type: string
      type: object
    Policy:
      description: "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/AuditConfig"
          type: array
        bindings:
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
          format: byte
          type: string
        version:
          description: "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
          format: int32
          type: integer
      type: object
    ProbingDetails:
      description: Results of active probing from the last run of the test.
      properties:
        abortCause:
          description: The reason probing was aborted.
          enum:
            - PROBING_ABORT_CAUSE_UNSPECIFIED
            - PERMISSION_DENIED
            - NO_SOURCE_LOCATION
          type: string
        destinationEgressLocation:
          $ref: "#/components/schemas/EdgeLocation"
          description: The EdgeLocation from which a packet destined for/originating from the internet will egress/ingress the Google network. This will only be populated for a connectivity test which has an internet destination/source address. The absence of this field *must not* be used as an indication that the destination/source is part of the Google network.
        endpointInfo:
          $ref: "#/components/schemas/EndpointInfo"
          description: The source and destination endpoints derived from the test input and used for active probing.
        error:
          $ref: "#/components/schemas/Status"
          description: Details about an internal failure or the cancellation of active probing.
        probingLatency:
          $ref: "#/components/schemas/LatencyDistribution"
          description: "Latency as measured by active probing in one direction: from the source to the destination endpoint."
        result:
          description: The overall result of active probing.
          enum:
            - PROBING_RESULT_UNSPECIFIED
            - REACHABLE
            - UNREACHABLE
            - REACHABILITY_INCONSISTENT
            - UNDETERMINED
          type: string
        sentProbeCount:
          description: Number of probes sent.
          format: int32
          type: integer
        successfulProbeCount:
          description: Number of probes that reached the destination.
          format: int32
          type: integer
        verifyTime:
          description: The time that reachability was assessed through active probing.
          format: google-datetime
          type: string
      type: object
    ProxyConnectionInfo:
      description: For display only. Metadata associated with ProxyConnection.
      properties:
        networkUri:
          description: URI of the network where connection is proxied.
          type: string
        newDestinationIp:
          description: Destination IP address of a new connection.
          type: string
        newDestinationPort:
          description: Destination port of a new connection. Only valid when protocol is TCP or UDP.
          format: int32
          type: integer
        newSourceIp:
          description: Source IP address of a new connection.
          type: string
        newSourcePort:
          description: Source port of a new connection. Only valid when protocol is TCP or UDP.
          format: int32
          type: integer
        oldDestinationIp:
          description: Destination IP address of an original connection
          type: string
        oldDestinationPort:
          description: Destination port of an original connection. Only valid when protocol is TCP or UDP.
          format: int32
          type: integer
        oldSourceIp:
          description: Source IP address of an original connection.
          type: string
        oldSourcePort:
          description: Source port of an original connection. Only valid when protocol is TCP or UDP.
          format: int32
          type: integer
        protocol:
          description: 'IP protocol in string format, for example: "TCP", "UDP", "ICMP".'
          type: string
        subnetUri:
          description: Uri of proxy subnet.
          type: string
      type: object
    ReachabilityDetails:
      description: Results of the configuration analysis from the last run of the test.
      properties:
        error:
          $ref: "#/components/schemas/Status"
          description: The details of a failure or a cancellation of reachability analysis.
        result:
          description: The overall result of the test's configuration analysis.
          enum:
            - RESULT_UNSPECIFIED
            - REACHABLE
            - UNREACHABLE
            - AMBIGUOUS
            - UNDETERMINED
          type: string
        traces:
          description: Result may contain a list of traces if a test has multiple possible paths in the network, such as when destination endpoint is a load balancer with multiple backends.
          items:
            $ref: "#/components/schemas/Trace"
          type: array
        verifyTime:
          description: The time of the configuration analysis.
          format: google-datetime
          type: string
      type: object
    RerunConnectivityTestRequest:
      description: Request for the `RerunConnectivityTest` method.
      properties: {}
      type: object
    RouteInfo:
      description: For display only. Metadata associated with a Compute Engine route.
      properties:
        destIpRange:
          description: Destination IP range of the route.
          type: string
        destPortRanges:
          description: Destination port ranges of the route. Policy based routes only.
          items:
            type: string
          type: array
        displayName:
          description: Name of a route.
          type: string
        instanceTags:
          description: Instance tags of the route.
          items:
            type: string
          type: array
        nccHubUri:
          description: URI of a NCC Hub. NCC_HUB routes only.
          type: string
        nccSpokeUri:
          description: URI of a NCC Spoke. NCC_HUB routes only.
          type: string
        networkUri:
          description: URI of a Compute Engine network. NETWORK routes only.
          type: string
        nextHop:
          description: Next hop of the route.
          type: string
        nextHopType:
          description: Type of next hop.
          enum:
            - NEXT_HOP_TYPE_UNSPECIFIED
            - NEXT_HOP_IP
            - NEXT_HOP_INSTANCE
            - NEXT_HOP_NETWORK
            - NEXT_HOP_PEERING
            - NEXT_HOP_INTERCONNECT
            - NEXT_HOP_VPN_TUNNEL
            - NEXT_HOP_VPN_GATEWAY
            - NEXT_HOP_INTERNET_GATEWAY
            - NEXT_HOP_BLACKHOLE
            - NEXT_HOP_ILB
            - NEXT_HOP_ROUTER_APPLIANCE
            - NEXT_HOP_NCC_HUB
          type: string
        priority:
          description: Priority of the route.
          format: int32
          type: integer
        protocols:
          description: Protocols of the route. Policy based routes only.
          items:
            type: string
          type: array
        routeScope:
          description: Indicates where route is applicable.
          enum:
            - ROUTE_SCOPE_UNSPECIFIED
            - NETWORK
            - NCC_HUB
          type: string
        routeType:
          description: Type of route.
          enum:
            - ROUTE_TYPE_UNSPECIFIED
            - SUBNET
            - STATIC
            - DYNAMIC
            - PEERING_SUBNET
            - PEERING_STATIC
            - PEERING_DYNAMIC
            - POLICY_BASED
          type: string
        srcIpRange:
          description: Source IP address range of the route. Policy based routes only.
          type: string
        srcPortRanges:
          description: Source port ranges of the route. Policy based routes only.
          items:
            type: string
          type: array
        uri:
          description: URI of a route. Dynamic, peering static and peering dynamic routes do not have an URI. Advertised route from Google Cloud VPC to on-premises network also does not have an URI.
          type: string
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
          description: "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        updateMask:
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          format: google-fieldmask
          type: string
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    Step:
      description: A simulated forwarding path is composed of multiple steps. Each step has a well-defined state and an associated configuration.
      properties:
        abort:
          $ref: "#/components/schemas/AbortInfo"
          description: Display information of the final state "abort" and reason.
        appEngineVersion:
          $ref: "#/components/schemas/AppEngineVersionInfo"
          description: Display information of an App Engine service version.
        causesDrop:
          description: This is a step that leads to the final state Drop.
          type: boolean
        cloudFunction:
          $ref: "#/components/schemas/CloudFunctionInfo"
          description: Display information of a Cloud Function.
        cloudRunRevision:
          $ref: "#/components/schemas/CloudRunRevisionInfo"
          description: Display information of a Cloud Run revision.
        cloudSqlInstance:
          $ref: "#/components/schemas/CloudSQLInstanceInfo"
          description: Display information of a Cloud SQL instance.
        deliver:
          $ref: "#/components/schemas/DeliverInfo"
          description: Display information of the final state "deliver" and reason.
        description:
          description: A description of the step. Usually this is a summary of the state.
          type: string
        drop:
          $ref: "#/components/schemas/DropInfo"
          description: Display information of the final state "drop" and reason.
        endpoint:
          $ref: "#/components/schemas/EndpointInfo"
          description: Display information of the source and destination under analysis. The endpoint information in an intermediate state may differ with the initial input, as it might be modified by state like NAT, or Connection Proxy.
        firewall:
          $ref: "#/components/schemas/FirewallInfo"
          description: Display information of a Compute Engine firewall rule.
        forward:
          $ref: "#/components/schemas/ForwardInfo"
          description: Display information of the final state "forward" and reason.
        forwardingRule:
          $ref: "#/components/schemas/ForwardingRuleInfo"
          description: Display information of a Compute Engine forwarding rule.
        gkeMaster:
          $ref: "#/components/schemas/GKEMasterInfo"
          description: Display information of a Google Kubernetes Engine cluster master.
        googleService:
          $ref: "#/components/schemas/GoogleServiceInfo"
          description: Display information of a Google service
        instance:
          $ref: "#/components/schemas/InstanceInfo"
          description: Display information of a Compute Engine instance.
        loadBalancer:
          $ref: "#/components/schemas/LoadBalancerInfo"
          deprecated: true
          description: Display information of the load balancers. Deprecated in favor of the `load_balancer_backend_info` field, not used in new tests.
        loadBalancerBackendInfo:
          $ref: "#/components/schemas/LoadBalancerBackendInfo"
          description: Display information of a specific load balancer backend.
        nat:
          $ref: "#/components/schemas/NatInfo"
          description: Display information of a NAT.
        network:
          $ref: "#/components/schemas/NetworkInfo"
          description: Display information of a Google Cloud network.
        projectId:
          description: Project ID that contains the configuration this step is validating.
          type: string
        proxyConnection:
          $ref: "#/components/schemas/ProxyConnectionInfo"
          description: Display information of a ProxyConnection.
        route:
          $ref: "#/components/schemas/RouteInfo"
          description: Display information of a Compute Engine route.
        state:
          description: Each step is in one of the pre-defined states.
          enum:
            - STATE_UNSPECIFIED
            - START_FROM_INSTANCE
            - START_FROM_INTERNET
            - START_FROM_GOOGLE_SERVICE
            - START_FROM_PRIVATE_NETWORK
            - START_FROM_GKE_MASTER
            - START_FROM_CLOUD_SQL_INSTANCE
            - START_FROM_CLOUD_FUNCTION
            - START_FROM_APP_ENGINE_VERSION
            - START_FROM_CLOUD_RUN_REVISION
            - START_FROM_STORAGE_BUCKET
            - START_FROM_PSC_PUBLISHED_SERVICE
            - APPLY_INGRESS_FIREWALL_RULE
            - APPLY_EGRESS_FIREWALL_RULE
            - APPLY_ROUTE
            - APPLY_FORWARDING_RULE
            - ANALYZE_LOAD_BALANCER_BACKEND
            - SPOOFING_APPROVED
            - ARRIVE_AT_INSTANCE
            - ARRIVE_AT_INTERNAL_LOAD_BALANCER
            - ARRIVE_AT_EXTERNAL_LOAD_BALANCER
            - ARRIVE_AT_VPN_GATEWAY
            - ARRIVE_AT_VPN_TUNNEL
            - ARRIVE_AT_VPC_CONNECTOR
            - NAT
            - PROXY_CONNECTION
            - DELIVER
            - DROP
            - FORWARD
            - ABORT
            - VIEWER_PERMISSION_MISSING
          type: string
          x-enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
        storageBucket:
          $ref: "#/components/schemas/StorageBucketInfo"
          description: Display information of a Storage Bucket. Used only for return traces.
        vpcConnector:
          $ref: "#/components/schemas/VpcConnectorInfo"
          description: Display information of a VPC connector.
        vpnGateway:
          $ref: "#/components/schemas/VpnGatewayInfo"
          description: Display information of a Compute Engine VPN gateway.
        vpnTunnel:
          $ref: "#/components/schemas/VpnTunnelInfo"
          description: Display information of a Compute Engine VPN tunnel.
      type: object
    StorageBucketInfo:
      description: For display only. Metadata associated with Storage Bucket.
      properties:
        bucket:
          description: Cloud Storage Bucket name.
          type: string
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
          type: array
      type: object
    Trace:
      description: Trace represents one simulated packet forwarding path. * Each trace contains multiple ordered steps. * Each step is in a particular state with associated configuration. * State is categorized as final or non-final states. * Each final state has a reason associated. * Each trace must end with a final state (the last step). ``` |---------------------Trace----------------------| Step1(State) Step2(State) --- StepN(State(final)) ```
      properties:
        endpointInfo:
          $ref: "#/components/schemas/EndpointInfo"
          description: Derived from the source and destination endpoints definition specified by user request, and validated by the data plane model. If there are multiple traces starting from different source locations, then the endpoint_info may be different between traces.
        forwardTraceId:
          description: ID of trace. For forward traces, this ID is unique for each trace. For return traces, it matches ID of associated forward trace. A single forward trace can be associated with none, one or more than one return trace.
          format: int32
          type: integer
        steps:
          description: A trace of a test contains multiple steps from the initial state to the final state (delivered, dropped, forwarded, or aborted). The steps are ordered by the processing sequence within the simulated network state machine. It is critical to preserve the order of the steps and avoid reordering or sorting them.
          items:
            $ref: "#/components/schemas/Step"
          type: array
      type: object
    VpcConnectorInfo:
      description: For display only. Metadata associated with a VPC connector.
      properties:
        displayName:
          description: Name of a VPC connector.
          type: string
        location:
          description: Location in which the VPC connector is deployed.
          type: string
        uri:
          description: URI of a VPC connector.
          type: string
      type: object
    VpnGatewayInfo:
      description: For display only. Metadata associated with a Compute Engine VPN gateway.
      properties:
        displayName:
          description: Name of a VPN gateway.
          type: string
        ipAddress:
          description: IP address of the VPN gateway.
          type: string
        networkUri:
          description: URI of a Compute Engine network where the VPN gateway is configured.
          type: string
        region:
          description: Name of a Google Cloud region where this VPN gateway is configured.
          type: string
        uri:
          description: URI of a VPN gateway.
          type: string
        vpnTunnelUri:
          description: A VPN tunnel that is associated with this VPN gateway. There may be multiple VPN tunnels configured on a VPN gateway, and only the one relevant to the test is displayed.
          type: string
      type: object
    VpnTunnelInfo:
      description: For display only. Metadata associated with a Compute Engine VPN tunnel.
      properties:
        displayName:
          description: Name of a VPN tunnel.
          type: string
        networkUri:
          description: URI of a Compute Engine network where the VPN tunnel is configured.
          type: string
        region:
          description: Name of a Google Cloud region where this VPN tunnel is configured.
          type: string
        remoteGateway:
          description: URI of a VPN gateway at remote end of the tunnel.
          type: string
        remoteGatewayIp:
          description: Remote VPN gateway's IP address.
          type: string
        routingType:
          description: Type of the routing policy.
          enum:
            - ROUTING_TYPE_UNSPECIFIED
            - ROUTE_BASED
            - POLICY_BASED
            - DYNAMIC
          type: string
        sourceGateway:
          description: URI of the VPN gateway at local end of the tunnel.
          type: string
        sourceGatewayIp:
          description: Local VPN gateway's IP address.
          type: string
        uri:
          description: URI of a VPN tunnel.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
