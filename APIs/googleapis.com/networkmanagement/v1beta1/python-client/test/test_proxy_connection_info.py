# coding: utf-8

"""
    Network Management API

    The Network Management API provides a collection of network performance monitoring and diagnostic capabilities.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.proxy_connection_info import ProxyConnectionInfo

class TestProxyConnectionInfo(unittest.TestCase):
    """ProxyConnectionInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProxyConnectionInfo:
        """Test ProxyConnectionInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProxyConnectionInfo`
        """
        model = ProxyConnectionInfo()
        if include_optional:
            return ProxyConnectionInfo(
                network_uri = '',
                new_destination_ip = '',
                new_destination_port = 56,
                new_source_ip = '',
                new_source_port = 56,
                old_destination_ip = '',
                old_destination_port = 56,
                old_source_ip = '',
                old_source_port = 56,
                protocol = '',
                subnet_uri = ''
            )
        else:
            return ProxyConnectionInfo(
        )
        """

    def testProxyConnectionInfo(self):
        """Test ProxyConnectionInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
