# coding: utf-8

"""
    My Business Business Information API

    The My Business Business Information API provides an interface for managing business information. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.search_google_locations_response import SearchGoogleLocationsResponse

class TestSearchGoogleLocationsResponse(unittest.TestCase):
    """SearchGoogleLocationsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchGoogleLocationsResponse:
        """Test SearchGoogleLocationsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchGoogleLocationsResponse`
        """
        model = SearchGoogleLocationsResponse()
        if include_optional:
            return SearchGoogleLocationsResponse(
                google_locations = [
                    openapi_client.models.google_location.GoogleLocation(
                        location = openapi_client.models.location.Location(
                            ad_words_location_extensions = openapi_client.models.ad_words_location_extensions.AdWordsLocationExtensions(
                                ad_phone = '', ), 
                            categories = openapi_client.models.categories.Categories(
                                additional_categories = [
                                    openapi_client.models.category.Category(
                                        display_name = '', 
                                        more_hours_types = [
                                            openapi_client.models.more_hours_type.MoreHoursType(
                                                display_name = '', 
                                                hours_type_id = '', 
                                                localized_display_name = '', )
                                            ], 
                                        name = '', 
                                        service_types = [
                                            openapi_client.models.service_type.ServiceType(
                                                display_name = '', 
                                                service_type_id = '', )
                                            ], )
                                    ], 
                                primary_category = openapi_client.models.category.Category(
                                    display_name = '', 
                                    name = '', ), ), 
                            labels = [
                                ''
                                ], 
                            language_code = '', 
                            latlng = openapi_client.models.lat_lng.LatLng(
                                latitude = 1.337, 
                                longitude = 1.337, ), 
                            metadata = openapi_client.models.metadata.Metadata(
                                can_delete = True, 
                                can_have_business_calls = True, 
                                can_have_food_menus = True, 
                                can_modify_service_list = True, 
                                can_operate_health_data = True, 
                                can_operate_local_post = True, 
                                can_operate_lodging_data = True, 
                                duplicate_location = '', 
                                has_google_updated = True, 
                                has_pending_edits = True, 
                                has_voice_of_merchant = True, 
                                maps_uri = '', 
                                new_review_uri = '', 
                                place_id = '', ), 
                            more_hours = [
                                openapi_client.models.more_hours.MoreHours(
                                    hours_type_id = '', 
                                    periods = [
                                        openapi_client.models.time_period.TimePeriod(
                                            close_day = 'DAY_OF_WEEK_UNSPECIFIED', 
                                            close_time = openapi_client.models.time_of_day.TimeOfDay(
                                                hours = 56, 
                                                minutes = 56, 
                                                nanos = 56, 
                                                seconds = 56, ), 
                                            open_day = 'DAY_OF_WEEK_UNSPECIFIED', 
                                            open_time = openapi_client.models.time_of_day.TimeOfDay(
                                                hours = 56, 
                                                minutes = 56, 
                                                nanos = 56, 
                                                seconds = 56, ), )
                                        ], )
                                ], 
                            name = '', 
                            open_info = openapi_client.models.open_info.OpenInfo(
                                can_reopen = True, 
                                opening_date = openapi_client.models.date.Date(
                                    day = 56, 
                                    month = 56, 
                                    year = 56, ), 
                                status = 'OPEN_FOR_BUSINESS_UNSPECIFIED', ), 
                            phone_numbers = openapi_client.models.phone_numbers.PhoneNumbers(
                                additional_phones = [
                                    ''
                                    ], 
                                primary_phone = '', ), 
                            profile = openapi_client.models.profile.Profile(
                                description = '', ), 
                            regular_hours = openapi_client.models.business_hours.BusinessHours(), 
                            relationship_data = openapi_client.models.relationship_data.RelationshipData(
                                children_locations = [
                                    openapi_client.models.relevant_location.RelevantLocation(
                                        place_id = '', 
                                        relation_type = 'RELATION_TYPE_UNSPECIFIED', )
                                    ], 
                                parent_chain = '', 
                                parent_location = openapi_client.models.relevant_location.RelevantLocation(
                                    place_id = '', 
                                    relation_type = 'RELATION_TYPE_UNSPECIFIED', ), ), 
                            service_area = openapi_client.models.service_area_business.ServiceAreaBusiness(
                                business_type = 'BUSINESS_TYPE_UNSPECIFIED', 
                                places = openapi_client.models.places.Places(
                                    place_infos = [
                                        openapi_client.models.place_info.PlaceInfo(
                                            place_id = '', 
                                            place_name = '', )
                                        ], ), 
                                region_code = '', ), 
                            service_items = [
                                openapi_client.models.service_item.ServiceItem(
                                    free_form_service_item = openapi_client.models.free_form_service_item.FreeFormServiceItem(
                                        category = '', 
                                        label = openapi_client.models.label.Label(
                                            description = '', 
                                            display_name = '', 
                                            language_code = '', ), ), 
                                    price = openapi_client.models.money.Money(
                                        currency_code = '', 
                                        nanos = 56, 
                                        units = '', ), 
                                    structured_service_item = openapi_client.models.structured_service_item.StructuredServiceItem(
                                        description = '', 
                                        service_type_id = '', ), )
                                ], 
                            special_hours = openapi_client.models.special_hours.SpecialHours(
                                special_hour_periods = [
                                    openapi_client.models.special_hour_period.SpecialHourPeriod(
                                        closed = True, 
                                        end_date = openapi_client.models.date.Date(
                                            day = 56, 
                                            month = 56, 
                                            year = 56, ), 
                                        start_date = , )
                                    ], ), 
                            store_code = '', 
                            storefront_address = openapi_client.models.postal_address.PostalAddress(
                                address_lines = [
                                    ''
                                    ], 
                                administrative_area = '', 
                                language_code = '', 
                                locality = '', 
                                organization = '', 
                                postal_code = '', 
                                recipients = [
                                    ''
                                    ], 
                                region_code = '', 
                                revision = 56, 
                                sorting_code = '', 
                                sublocality = '', ), 
                            title = '', 
                            website_uri = '', ), 
                        name = '', 
                        request_admin_rights_uri = '', )
                    ]
            )
        else:
            return SearchGoogleLocationsResponse(
        )
        """

    def testSearchGoogleLocationsResponse(self):
        """Test SearchGoogleLocationsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
