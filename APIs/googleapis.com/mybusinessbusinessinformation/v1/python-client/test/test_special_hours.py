# coding: utf-8

"""
    My Business Business Information API

    The My Business Business Information API provides an interface for managing business information. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.special_hours import SpecialHours

class TestSpecialHours(unittest.TestCase):
    """SpecialHours unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SpecialHours:
        """Test SpecialHours
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SpecialHours`
        """
        model = SpecialHours()
        if include_optional:
            return SpecialHours(
                special_hour_periods = [
                    openapi_client.models.special_hour_period.SpecialHourPeriod(
                        close_time = openapi_client.models.time_of_day.TimeOfDay(
                            hours = 56, 
                            minutes = 56, 
                            nanos = 56, 
                            seconds = 56, ), 
                        closed = True, 
                        end_date = openapi_client.models.date.Date(
                            day = 56, 
                            month = 56, 
                            year = 56, ), 
                        open_time = openapi_client.models.time_of_day.TimeOfDay(
                            hours = 56, 
                            minutes = 56, 
                            nanos = 56, 
                            seconds = 56, ), 
                        start_date = openapi_client.models.date.Date(
                            day = 56, 
                            month = 56, 
                            year = 56, ), )
                    ]
            )
        else:
            return SpecialHours(
        )
        """

    def testSpecialHours(self):
        """Test SpecialHours"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
