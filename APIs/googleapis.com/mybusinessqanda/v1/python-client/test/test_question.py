# coding: utf-8

"""
    My Business Q&A API

    The My Business Q&A API allows questions and answers to be posted for specific listings. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.question import Question

class TestQuestion(unittest.TestCase):
    """Question unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Question:
        """Test Question
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Question`
        """
        model = Question()
        if include_optional:
            return Question(
                author = openapi_client.models.author.Author(
                    display_name = '', 
                    profile_photo_uri = '', 
                    type = 'AUTHOR_TYPE_UNSPECIFIED', ),
                create_time = '',
                name = '',
                text = '',
                top_answers = [
                    openapi_client.models.answer.Answer(
                        author = openapi_client.models.author.Author(
                            display_name = '', 
                            profile_photo_uri = '', 
                            type = 'AUTHOR_TYPE_UNSPECIFIED', ), 
                        create_time = '', 
                        name = '', 
                        text = '', 
                        update_time = '', 
                        upvote_count = 56, )
                    ],
                total_answer_count = 56,
                update_time = '',
                upvote_count = 56
            )
        else:
            return Question(
        )
        """

    def testQuestion(self):
        """Test Question"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
