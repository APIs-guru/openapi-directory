# coding: utf-8

"""
    Cloud Monitoring API

    Manages your Cloud Monitoring data and configurations.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.metric_absence import MetricAbsence

class TestMetricAbsence(unittest.TestCase):
    """MetricAbsence unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MetricAbsence:
        """Test MetricAbsence
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MetricAbsence`
        """
        model = MetricAbsence()
        if include_optional:
            return MetricAbsence(
                aggregations = [
                    openapi_client.models.aggregation.Aggregation(
                        alignment_period = '', 
                        cross_series_reducer = 'REDUCE_NONE', 
                        group_by_fields = [
                            ''
                            ], 
                        per_series_aligner = 'ALIGN_NONE', )
                    ],
                duration = '',
                filter = '',
                trigger = openapi_client.models.trigger.Trigger(
                    count = 56, 
                    percent = 1.337, )
            )
        else:
            return MetricAbsence(
        )
        """

    def testMetricAbsence(self):
        """Test MetricAbsence"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
