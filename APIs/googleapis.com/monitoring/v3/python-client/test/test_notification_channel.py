# coding: utf-8

"""
    Cloud Monitoring API

    Manages your Cloud Monitoring data and configurations.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.notification_channel import NotificationChannel

class TestNotificationChannel(unittest.TestCase):
    """NotificationChannel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NotificationChannel:
        """Test NotificationChannel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NotificationChannel`
        """
        model = NotificationChannel()
        if include_optional:
            return NotificationChannel(
                creation_record = openapi_client.models.mutation_record.MutationRecord(
                    mutate_time = '', 
                    mutated_by = '', ),
                description = '',
                display_name = '',
                enabled = True,
                labels = {
                    'key' : ''
                    },
                mutation_records = [
                    openapi_client.models.mutation_record.MutationRecord(
                        mutate_time = '', 
                        mutated_by = '', )
                    ],
                name = '',
                type = '',
                user_labels = {
                    'key' : ''
                    },
                verification_status = 'VERIFICATION_STATUS_UNSPECIFIED'
            )
        else:
            return NotificationChannel(
        )
        """

    def testNotificationChannel(self):
        """Test NotificationChannel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
