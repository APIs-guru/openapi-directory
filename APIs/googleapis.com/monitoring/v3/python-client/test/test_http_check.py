# coding: utf-8

"""
    Cloud Monitoring API

    Manages your Cloud Monitoring data and configurations.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.http_check import HttpCheck

class TestHttpCheck(unittest.TestCase):
    """HttpCheck unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HttpCheck:
        """Test HttpCheck
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HttpCheck`
        """
        model = HttpCheck()
        if include_optional:
            return HttpCheck(
                accepted_response_status_codes = [
                    openapi_client.models.response_status_code.ResponseStatusCode(
                        status_class = 'STATUS_CLASS_UNSPECIFIED', 
                        status_value = 56, )
                    ],
                auth_info = openapi_client.models.basic_authentication.BasicAuthentication(
                    password = '', 
                    username = '', ),
                body = 'YQ==',
                content_type = 'TYPE_UNSPECIFIED',
                custom_content_type = '',
                headers = {
                    'key' : ''
                    },
                mask_headers = True,
                path = '',
                ping_config = openapi_client.models.ping_config.PingConfig(
                    pings_count = 56, ),
                port = 56,
                request_method = 'METHOD_UNSPECIFIED',
                use_ssl = True,
                validate_ssl = True
            )
        else:
            return HttpCheck(
        )
        """

    def testHttpCheck(self):
        """Test HttpCheck"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
