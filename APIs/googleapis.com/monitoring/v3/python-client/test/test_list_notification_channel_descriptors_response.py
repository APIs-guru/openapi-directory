# coding: utf-8

"""
    Cloud Monitoring API

    Manages your Cloud Monitoring data and configurations.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_notification_channel_descriptors_response import ListNotificationChannelDescriptorsResponse

class TestListNotificationChannelDescriptorsResponse(unittest.TestCase):
    """ListNotificationChannelDescriptorsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListNotificationChannelDescriptorsResponse:
        """Test ListNotificationChannelDescriptorsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListNotificationChannelDescriptorsResponse`
        """
        model = ListNotificationChannelDescriptorsResponse()
        if include_optional:
            return ListNotificationChannelDescriptorsResponse(
                channel_descriptors = [
                    openapi_client.models.notification_channel_descriptor.NotificationChannelDescriptor(
                        description = '', 
                        display_name = '', 
                        labels = [
                            openapi_client.models.label_descriptor.LabelDescriptor(
                                description = '', 
                                key = '', 
                                value_type = 'STRING', )
                            ], 
                        launch_stage = 'LAUNCH_STAGE_UNSPECIFIED', 
                        name = '', 
                        supported_tiers = [
                            'SERVICE_TIER_UNSPECIFIED'
                            ], 
                        type = '', )
                    ],
                next_page_token = ''
            )
        else:
            return ListNotificationChannelDescriptorsResponse(
        )
        """

    def testListNotificationChannelDescriptorsResponse(self):
        """Test ListNotificationChannelDescriptorsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
