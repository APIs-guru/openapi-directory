# coding: utf-8

"""
    Cloud Monitoring API

    Manages your Cloud Monitoring data and configurations.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.distribution import Distribution

class TestDistribution(unittest.TestCase):
    """Distribution unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Distribution:
        """Test Distribution
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Distribution`
        """
        model = Distribution()
        if include_optional:
            return Distribution(
                bucket_counts = [
                    ''
                    ],
                bucket_options = openapi_client.models.bucket_options.BucketOptions(
                    explicit_buckets = openapi_client.models.explicit.Explicit(
                        bounds = [
                            1.337
                            ], ), 
                    exponential_buckets = openapi_client.models.exponential.Exponential(
                        growth_factor = 1.337, 
                        num_finite_buckets = 56, 
                        scale = 1.337, ), 
                    linear_buckets = openapi_client.models.linear.Linear(
                        num_finite_buckets = 56, 
                        offset = 1.337, 
                        width = 1.337, ), ),
                count = '',
                exemplars = [
                    openapi_client.models.exemplar.Exemplar(
                        attachments = [
                            {
                                'key' : null
                                }
                            ], 
                        timestamp = '', 
                        value = 1.337, )
                    ],
                mean = 1.337,
                range = openapi_client.models.range.Range(
                    max = 1.337, 
                    min = 1.337, ),
                sum_of_squared_deviation = 1.337
            )
        else:
            return Distribution(
        )
        """

    def testDistribution(self):
        """Test Distribution"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
