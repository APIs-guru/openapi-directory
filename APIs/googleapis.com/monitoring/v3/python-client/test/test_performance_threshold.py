# coding: utf-8

"""
    Cloud Monitoring API

    Manages your Cloud Monitoring data and configurations.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.performance_threshold import PerformanceThreshold

class TestPerformanceThreshold(unittest.TestCase):
    """PerformanceThreshold unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PerformanceThreshold:
        """Test PerformanceThreshold
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PerformanceThreshold`
        """
        model = PerformanceThreshold()
        if include_optional:
            return PerformanceThreshold(
                basic_sli_performance = openapi_client.models.basic_sli.BasicSli(
                    availability = openapi_client.models.availability.availability(), 
                    latency = openapi_client.models.latency_criteria.LatencyCriteria(
                        threshold = '', ), 
                    location = [
                        ''
                        ], 
                    method = [
                        ''
                        ], 
                    version = [
                        ''
                        ], ),
                performance = openapi_client.models.request_based_sli.RequestBasedSli(
                    distribution_cut = openapi_client.models.distribution_cut.DistributionCut(
                        distribution_filter = '', 
                        range = openapi_client.models.google_monitoring_v3_range.GoogleMonitoringV3Range(
                            max = 1.337, 
                            min = 1.337, ), ), 
                    good_total_ratio = openapi_client.models.time_series_ratio.TimeSeriesRatio(
                        bad_service_filter = '', 
                        good_service_filter = '', 
                        total_service_filter = '', ), ),
                threshold = 1.337
            )
        else:
            return PerformanceThreshold(
        )
        """

    def testPerformanceThreshold(self):
        """Test PerformanceThreshold"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
