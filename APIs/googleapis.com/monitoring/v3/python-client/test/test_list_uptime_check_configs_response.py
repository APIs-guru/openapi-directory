# coding: utf-8

"""
    Cloud Monitoring API

    Manages your Cloud Monitoring data and configurations.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_uptime_check_configs_response import ListUptimeCheckConfigsResponse

class TestListUptimeCheckConfigsResponse(unittest.TestCase):
    """ListUptimeCheckConfigsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListUptimeCheckConfigsResponse:
        """Test ListUptimeCheckConfigsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListUptimeCheckConfigsResponse`
        """
        model = ListUptimeCheckConfigsResponse()
        if include_optional:
            return ListUptimeCheckConfigsResponse(
                next_page_token = '',
                total_size = 56,
                uptime_check_configs = [
                    openapi_client.models.uptime_check_config.UptimeCheckConfig(
                        checker_type = 'CHECKER_TYPE_UNSPECIFIED', 
                        content_matchers = [
                            openapi_client.models.content_matcher.ContentMatcher(
                                content = '', 
                                json_path_matcher = openapi_client.models.json_path_matcher.JsonPathMatcher(
                                    json_matcher = 'JSON_PATH_MATCHER_OPTION_UNSPECIFIED', 
                                    json_path = '', ), 
                                matcher = 'CONTENT_MATCHER_OPTION_UNSPECIFIED', )
                            ], 
                        display_name = '', 
                        http_check = openapi_client.models.http_check.HttpCheck(
                            accepted_response_status_codes = [
                                openapi_client.models.response_status_code.ResponseStatusCode(
                                    status_class = 'STATUS_CLASS_UNSPECIFIED', 
                                    status_value = 56, )
                                ], 
                            auth_info = openapi_client.models.basic_authentication.BasicAuthentication(
                                password = '', 
                                username = '', ), 
                            body = 'YQ==', 
                            content_type = 'TYPE_UNSPECIFIED', 
                            custom_content_type = '', 
                            headers = {
                                'key' : ''
                                }, 
                            mask_headers = True, 
                            path = '', 
                            ping_config = openapi_client.models.ping_config.PingConfig(
                                pings_count = 56, ), 
                            port = 56, 
                            request_method = 'METHOD_UNSPECIFIED', 
                            use_ssl = True, 
                            validate_ssl = True, ), 
                        internal_checkers = [
                            openapi_client.models.internal_checker.InternalChecker(
                                display_name = '', 
                                gcp_zone = '', 
                                name = '', 
                                network = '', 
                                peer_project_id = '', 
                                state = 'UNSPECIFIED', )
                            ], 
                        is_internal = True, 
                        monitored_resource = openapi_client.models.monitored_resource.MonitoredResource(
                            labels = {
                                'key' : ''
                                }, 
                            type = '', ), 
                        name = '', 
                        period = '', 
                        resource_group = openapi_client.models.resource_group.ResourceGroup(
                            group_id = '', 
                            resource_type = 'RESOURCE_TYPE_UNSPECIFIED', ), 
                        selected_regions = [
                            'REGION_UNSPECIFIED'
                            ], 
                        synthetic_monitor = openapi_client.models.synthetic_monitor_target.SyntheticMonitorTarget(
                            cloud_function_v2 = openapi_client.models.cloud_function_v2_target.CloudFunctionV2Target(
                                cloud_run_revision = openapi_client.models.monitored_resource.MonitoredResource(
                                    type = '', ), 
                                name = '', ), ), 
                        tcp_check = openapi_client.models.tcp_check.TcpCheck(
                            port = 56, ), 
                        timeout = '', 
                        user_labels = {
                            'key' : ''
                            }, )
                    ]
            )
        else:
            return ListUptimeCheckConfigsResponse(
        )
        """

    def testListUptimeCheckConfigsResponse(self):
        """Test ListUptimeCheckConfigsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
