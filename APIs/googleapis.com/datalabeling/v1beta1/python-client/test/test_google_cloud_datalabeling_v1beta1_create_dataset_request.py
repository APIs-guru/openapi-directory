# coding: utf-8

"""
    Data Labeling API

    Public API for Google Cloud AI Data Labeling Service.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_datalabeling_v1beta1_create_dataset_request import GoogleCloudDatalabelingV1beta1CreateDatasetRequest

class TestGoogleCloudDatalabelingV1beta1CreateDatasetRequest(unittest.TestCase):
    """GoogleCloudDatalabelingV1beta1CreateDatasetRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDatalabelingV1beta1CreateDatasetRequest:
        """Test GoogleCloudDatalabelingV1beta1CreateDatasetRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDatalabelingV1beta1CreateDatasetRequest`
        """
        model = GoogleCloudDatalabelingV1beta1CreateDatasetRequest()
        if include_optional:
            return GoogleCloudDatalabelingV1beta1CreateDatasetRequest(
                dataset = openapi_client.models.google_cloud_datalabeling_v1beta1_dataset.GoogleCloudDatalabelingV1beta1Dataset(
                    blocking_resources = [
                        ''
                        ], 
                    create_time = '', 
                    data_item_count = '', 
                    description = '', 
                    display_name = '', 
                    input_configs = [
                        openapi_client.models.google_cloud_datalabeling_v1beta1_input_config.GoogleCloudDatalabelingV1beta1InputConfig(
                            annotation_type = 'ANNOTATION_TYPE_UNSPECIFIED', 
                            bigquery_source = openapi_client.models.google_cloud_datalabeling_v1beta1_big_query_source.GoogleCloudDatalabelingV1beta1BigQuerySource(
                                input_uri = '', ), 
                            classification_metadata = openapi_client.models.google_cloud_datalabeling_v1beta1_classification_metadata.GoogleCloudDatalabelingV1beta1ClassificationMetadata(
                                is_multi_label = True, ), 
                            data_type = 'DATA_TYPE_UNSPECIFIED', 
                            gcs_source = openapi_client.models.google_cloud_datalabeling_v1beta1_gcs_source.GoogleCloudDatalabelingV1beta1GcsSource(
                                input_uri = '', 
                                mime_type = '', ), 
                            text_metadata = openapi_client.models.google_cloud_datalabeling_v1beta1_text_metadata.GoogleCloudDatalabelingV1beta1TextMetadata(
                                language_code = '', ), )
                        ], 
                    last_migrate_time = '', 
                    name = '', )
            )
        else:
            return GoogleCloudDatalabelingV1beta1CreateDatasetRequest(
        )
        """

    def testGoogleCloudDatalabelingV1beta1CreateDatasetRequest(self):
        """Test GoogleCloudDatalabelingV1beta1CreateDatasetRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
