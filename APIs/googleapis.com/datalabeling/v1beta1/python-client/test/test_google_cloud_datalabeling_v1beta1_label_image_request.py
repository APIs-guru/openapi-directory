# coding: utf-8

"""
    Data Labeling API

    Public API for Google Cloud AI Data Labeling Service.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_datalabeling_v1beta1_label_image_request import GoogleCloudDatalabelingV1beta1LabelImageRequest

class TestGoogleCloudDatalabelingV1beta1LabelImageRequest(unittest.TestCase):
    """GoogleCloudDatalabelingV1beta1LabelImageRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDatalabelingV1beta1LabelImageRequest:
        """Test GoogleCloudDatalabelingV1beta1LabelImageRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDatalabelingV1beta1LabelImageRequest`
        """
        model = GoogleCloudDatalabelingV1beta1LabelImageRequest()
        if include_optional:
            return GoogleCloudDatalabelingV1beta1LabelImageRequest(
                basic_config = openapi_client.models.google_cloud_datalabeling_v1beta1_human_annotation_config.GoogleCloudDatalabelingV1beta1HumanAnnotationConfig(
                    annotated_dataset_description = '', 
                    annotated_dataset_display_name = '', 
                    contributor_emails = [
                        ''
                        ], 
                    instruction = '', 
                    label_group = '', 
                    language_code = '', 
                    question_duration = '', 
                    replica_count = 56, 
                    user_email_address = '', ),
                bounding_poly_config = openapi_client.models.google_cloud_datalabeling_v1beta1_bounding_poly_config.GoogleCloudDatalabelingV1beta1BoundingPolyConfig(
                    annotation_spec_set = '', 
                    instruction_message = '', ),
                feature = 'FEATURE_UNSPECIFIED',
                image_classification_config = openapi_client.models.google_cloud_datalabeling_v1beta1_image_classification_config.GoogleCloudDatalabelingV1beta1ImageClassificationConfig(
                    allow_multi_label = True, 
                    annotation_spec_set = '', 
                    answer_aggregation_type = 'STRING_AGGREGATION_TYPE_UNSPECIFIED', ),
                polyline_config = openapi_client.models.google_cloud_datalabeling_v1beta1_polyline_config.GoogleCloudDatalabelingV1beta1PolylineConfig(
                    annotation_spec_set = '', 
                    instruction_message = '', ),
                segmentation_config = openapi_client.models.google_cloud_datalabeling_v1beta1_segmentation_config.GoogleCloudDatalabelingV1beta1SegmentationConfig(
                    annotation_spec_set = '', 
                    instruction_message = '', )
            )
        else:
            return GoogleCloudDatalabelingV1beta1LabelImageRequest(
        )
        """

    def testGoogleCloudDatalabelingV1beta1LabelImageRequest(self):
        """Test GoogleCloudDatalabelingV1beta1LabelImageRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
