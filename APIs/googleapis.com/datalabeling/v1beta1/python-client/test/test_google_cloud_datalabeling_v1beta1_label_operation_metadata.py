# coding: utf-8

"""
    Data Labeling API

    Public API for Google Cloud AI Data Labeling Service.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_datalabeling_v1beta1_label_operation_metadata import GoogleCloudDatalabelingV1beta1LabelOperationMetadata

class TestGoogleCloudDatalabelingV1beta1LabelOperationMetadata(unittest.TestCase):
    """GoogleCloudDatalabelingV1beta1LabelOperationMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDatalabelingV1beta1LabelOperationMetadata:
        """Test GoogleCloudDatalabelingV1beta1LabelOperationMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDatalabelingV1beta1LabelOperationMetadata`
        """
        model = GoogleCloudDatalabelingV1beta1LabelOperationMetadata()
        if include_optional:
            return GoogleCloudDatalabelingV1beta1LabelOperationMetadata(
                annotated_dataset = '',
                create_time = '',
                dataset = '',
                image_bounding_box_details = openapi_client.models.google_cloud_datalabeling_v1beta1_label_image_bounding_box_operation_metadata.GoogleCloudDatalabelingV1beta1LabelImageBoundingBoxOperationMetadata(
                    basic_config = openapi_client.models.google_cloud_datalabeling_v1beta1_human_annotation_config.GoogleCloudDatalabelingV1beta1HumanAnnotationConfig(
                        annotated_dataset_description = '', 
                        annotated_dataset_display_name = '', 
                        contributor_emails = [
                            ''
                            ], 
                        instruction = '', 
                        label_group = '', 
                        language_code = '', 
                        question_duration = '', 
                        replica_count = 56, 
                        user_email_address = '', ), ),
                image_bounding_poly_details = openapi_client.models.google_cloud_datalabeling_v1beta1_label_image_bounding_poly_operation_metadata.GoogleCloudDatalabelingV1beta1LabelImageBoundingPolyOperationMetadata(
                    basic_config = openapi_client.models.google_cloud_datalabeling_v1beta1_human_annotation_config.GoogleCloudDatalabelingV1beta1HumanAnnotationConfig(
                        annotated_dataset_description = '', 
                        annotated_dataset_display_name = '', 
                        contributor_emails = [
                            ''
                            ], 
                        instruction = '', 
                        label_group = '', 
                        language_code = '', 
                        question_duration = '', 
                        replica_count = 56, 
                        user_email_address = '', ), ),
                image_classification_details = openapi_client.models.google_cloud_datalabeling_v1beta1_label_image_classification_operation_metadata.GoogleCloudDatalabelingV1beta1LabelImageClassificationOperationMetadata(
                    basic_config = openapi_client.models.google_cloud_datalabeling_v1beta1_human_annotation_config.GoogleCloudDatalabelingV1beta1HumanAnnotationConfig(
                        annotated_dataset_description = '', 
                        annotated_dataset_display_name = '', 
                        contributor_emails = [
                            ''
                            ], 
                        instruction = '', 
                        label_group = '', 
                        language_code = '', 
                        question_duration = '', 
                        replica_count = 56, 
                        user_email_address = '', ), ),
                image_oriented_bounding_box_details = openapi_client.models.google_cloud_datalabeling_v1beta1_label_image_oriented_bounding_box_operation_metadata.GoogleCloudDatalabelingV1beta1LabelImageOrientedBoundingBoxOperationMetadata(
                    basic_config = openapi_client.models.google_cloud_datalabeling_v1beta1_human_annotation_config.GoogleCloudDatalabelingV1beta1HumanAnnotationConfig(
                        annotated_dataset_description = '', 
                        annotated_dataset_display_name = '', 
                        contributor_emails = [
                            ''
                            ], 
                        instruction = '', 
                        label_group = '', 
                        language_code = '', 
                        question_duration = '', 
                        replica_count = 56, 
                        user_email_address = '', ), ),
                image_polyline_details = openapi_client.models.google_cloud_datalabeling_v1beta1_label_image_polyline_operation_metadata.GoogleCloudDatalabelingV1beta1LabelImagePolylineOperationMetadata(
                    basic_config = openapi_client.models.google_cloud_datalabeling_v1beta1_human_annotation_config.GoogleCloudDatalabelingV1beta1HumanAnnotationConfig(
                        annotated_dataset_description = '', 
                        annotated_dataset_display_name = '', 
                        contributor_emails = [
                            ''
                            ], 
                        instruction = '', 
                        label_group = '', 
                        language_code = '', 
                        question_duration = '', 
                        replica_count = 56, 
                        user_email_address = '', ), ),
                image_segmentation_details = openapi_client.models.google_cloud_datalabeling_v1beta1_label_image_segmentation_operation_metadata.GoogleCloudDatalabelingV1beta1LabelImageSegmentationOperationMetadata(
                    basic_config = openapi_client.models.google_cloud_datalabeling_v1beta1_human_annotation_config.GoogleCloudDatalabelingV1beta1HumanAnnotationConfig(
                        annotated_dataset_description = '', 
                        annotated_dataset_display_name = '', 
                        contributor_emails = [
                            ''
                            ], 
                        instruction = '', 
                        label_group = '', 
                        language_code = '', 
                        question_duration = '', 
                        replica_count = 56, 
                        user_email_address = '', ), ),
                partial_failures = [
                    openapi_client.models.google_rpc_status.GoogleRpcStatus(
                        code = 56, 
                        details = [
                            {
                                'key' : null
                                }
                            ], 
                        message = '', )
                    ],
                progress_percent = 56,
                text_classification_details = openapi_client.models.google_cloud_datalabeling_v1beta1_label_text_classification_operation_metadata.GoogleCloudDatalabelingV1beta1LabelTextClassificationOperationMetadata(
                    basic_config = openapi_client.models.google_cloud_datalabeling_v1beta1_human_annotation_config.GoogleCloudDatalabelingV1beta1HumanAnnotationConfig(
                        annotated_dataset_description = '', 
                        annotated_dataset_display_name = '', 
                        contributor_emails = [
                            ''
                            ], 
                        instruction = '', 
                        label_group = '', 
                        language_code = '', 
                        question_duration = '', 
                        replica_count = 56, 
                        user_email_address = '', ), ),
                text_entity_extraction_details = openapi_client.models.google_cloud_datalabeling_v1beta1_label_text_entity_extraction_operation_metadata.GoogleCloudDatalabelingV1beta1LabelTextEntityExtractionOperationMetadata(
                    basic_config = openapi_client.models.google_cloud_datalabeling_v1beta1_human_annotation_config.GoogleCloudDatalabelingV1beta1HumanAnnotationConfig(
                        annotated_dataset_description = '', 
                        annotated_dataset_display_name = '', 
                        contributor_emails = [
                            ''
                            ], 
                        instruction = '', 
                        label_group = '', 
                        language_code = '', 
                        question_duration = '', 
                        replica_count = 56, 
                        user_email_address = '', ), ),
                video_classification_details = openapi_client.models.google_cloud_datalabeling_v1beta1_label_video_classification_operation_metadata.GoogleCloudDatalabelingV1beta1LabelVideoClassificationOperationMetadata(
                    basic_config = openapi_client.models.google_cloud_datalabeling_v1beta1_human_annotation_config.GoogleCloudDatalabelingV1beta1HumanAnnotationConfig(
                        annotated_dataset_description = '', 
                        annotated_dataset_display_name = '', 
                        contributor_emails = [
                            ''
                            ], 
                        instruction = '', 
                        label_group = '', 
                        language_code = '', 
                        question_duration = '', 
                        replica_count = 56, 
                        user_email_address = '', ), ),
                video_event_details = openapi_client.models.google_cloud_datalabeling_v1beta1_label_video_event_operation_metadata.GoogleCloudDatalabelingV1beta1LabelVideoEventOperationMetadata(
                    basic_config = openapi_client.models.google_cloud_datalabeling_v1beta1_human_annotation_config.GoogleCloudDatalabelingV1beta1HumanAnnotationConfig(
                        annotated_dataset_description = '', 
                        annotated_dataset_display_name = '', 
                        contributor_emails = [
                            ''
                            ], 
                        instruction = '', 
                        label_group = '', 
                        language_code = '', 
                        question_duration = '', 
                        replica_count = 56, 
                        user_email_address = '', ), ),
                video_object_detection_details = openapi_client.models.google_cloud_datalabeling_v1beta1_label_video_object_detection_operation_metadata.GoogleCloudDatalabelingV1beta1LabelVideoObjectDetectionOperationMetadata(
                    basic_config = openapi_client.models.google_cloud_datalabeling_v1beta1_human_annotation_config.GoogleCloudDatalabelingV1beta1HumanAnnotationConfig(
                        annotated_dataset_description = '', 
                        annotated_dataset_display_name = '', 
                        contributor_emails = [
                            ''
                            ], 
                        instruction = '', 
                        label_group = '', 
                        language_code = '', 
                        question_duration = '', 
                        replica_count = 56, 
                        user_email_address = '', ), ),
                video_object_tracking_details = openapi_client.models.google_cloud_datalabeling_v1beta1_label_video_object_tracking_operation_metadata.GoogleCloudDatalabelingV1beta1LabelVideoObjectTrackingOperationMetadata(
                    basic_config = openapi_client.models.google_cloud_datalabeling_v1beta1_human_annotation_config.GoogleCloudDatalabelingV1beta1HumanAnnotationConfig(
                        annotated_dataset_description = '', 
                        annotated_dataset_display_name = '', 
                        contributor_emails = [
                            ''
                            ], 
                        instruction = '', 
                        label_group = '', 
                        language_code = '', 
                        question_duration = '', 
                        replica_count = 56, 
                        user_email_address = '', ), )
            )
        else:
            return GoogleCloudDatalabelingV1beta1LabelOperationMetadata(
        )
        """

    def testGoogleCloudDatalabelingV1beta1LabelOperationMetadata(self):
        """Test GoogleCloudDatalabelingV1beta1LabelOperationMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
