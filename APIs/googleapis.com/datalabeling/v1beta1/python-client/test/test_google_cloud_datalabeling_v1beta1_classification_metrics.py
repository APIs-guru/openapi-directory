# coding: utf-8

"""
    Data Labeling API

    Public API for Google Cloud AI Data Labeling Service.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_datalabeling_v1beta1_classification_metrics import GoogleCloudDatalabelingV1beta1ClassificationMetrics

class TestGoogleCloudDatalabelingV1beta1ClassificationMetrics(unittest.TestCase):
    """GoogleCloudDatalabelingV1beta1ClassificationMetrics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDatalabelingV1beta1ClassificationMetrics:
        """Test GoogleCloudDatalabelingV1beta1ClassificationMetrics
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDatalabelingV1beta1ClassificationMetrics`
        """
        model = GoogleCloudDatalabelingV1beta1ClassificationMetrics()
        if include_optional:
            return GoogleCloudDatalabelingV1beta1ClassificationMetrics(
                confusion_matrix = openapi_client.models.google_cloud_datalabeling_v1beta1_confusion_matrix.GoogleCloudDatalabelingV1beta1ConfusionMatrix(
                    row = [
                        openapi_client.models.google_cloud_datalabeling_v1beta1_row.GoogleCloudDatalabelingV1beta1Row(
                            annotation_spec = openapi_client.models.google_cloud_datalabeling_v1beta1_annotation_spec.GoogleCloudDatalabelingV1beta1AnnotationSpec(
                                description = '', 
                                display_name = '', 
                                index = 56, ), 
                            entries = [
                                openapi_client.models.google_cloud_datalabeling_v1beta1_confusion_matrix_entry.GoogleCloudDatalabelingV1beta1ConfusionMatrixEntry(
                                    item_count = 56, )
                                ], )
                        ], ),
                pr_curve = openapi_client.models.google_cloud_datalabeling_v1beta1_pr_curve.GoogleCloudDatalabelingV1beta1PrCurve(
                    annotation_spec = openapi_client.models.google_cloud_datalabeling_v1beta1_annotation_spec.GoogleCloudDatalabelingV1beta1AnnotationSpec(
                        description = '', 
                        display_name = '', 
                        index = 56, ), 
                    area_under_curve = 1.337, 
                    confidence_metrics_entries = [
                        openapi_client.models.google_cloud_datalabeling_v1beta1_confidence_metrics_entry.GoogleCloudDatalabelingV1beta1ConfidenceMetricsEntry(
                            confidence_threshold = 1.337, 
                            f1_score = 1.337, 
                            f1_score_at1 = 1.337, 
                            f1_score_at5 = 1.337, 
                            precision = 1.337, 
                            precision_at1 = 1.337, 
                            precision_at5 = 1.337, 
                            recall = 1.337, 
                            recall_at1 = 1.337, 
                            recall_at5 = 1.337, )
                        ], 
                    mean_average_precision = 1.337, )
            )
        else:
            return GoogleCloudDatalabelingV1beta1ClassificationMetrics(
        )
        """

    def testGoogleCloudDatalabelingV1beta1ClassificationMetrics(self):
        """Test GoogleCloudDatalabelingV1beta1ClassificationMetrics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
