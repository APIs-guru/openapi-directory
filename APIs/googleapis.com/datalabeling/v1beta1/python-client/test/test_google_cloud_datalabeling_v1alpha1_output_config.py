# coding: utf-8

"""
    Data Labeling API

    Public API for Google Cloud AI Data Labeling Service.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_datalabeling_v1alpha1_output_config import GoogleCloudDatalabelingV1alpha1OutputConfig

class TestGoogleCloudDatalabelingV1alpha1OutputConfig(unittest.TestCase):
    """GoogleCloudDatalabelingV1alpha1OutputConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDatalabelingV1alpha1OutputConfig:
        """Test GoogleCloudDatalabelingV1alpha1OutputConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDatalabelingV1alpha1OutputConfig`
        """
        model = GoogleCloudDatalabelingV1alpha1OutputConfig()
        if include_optional:
            return GoogleCloudDatalabelingV1alpha1OutputConfig(
                gcs_destination = openapi_client.models.google_cloud_datalabeling_v1alpha1_gcs_destination.GoogleCloudDatalabelingV1alpha1GcsDestination(
                    mime_type = '', 
                    output_uri = '', ),
                gcs_folder_destination = openapi_client.models.google_cloud_datalabeling_v1alpha1_gcs_folder_destination.GoogleCloudDatalabelingV1alpha1GcsFolderDestination(
                    output_folder_uri = '', )
            )
        else:
            return GoogleCloudDatalabelingV1alpha1OutputConfig(
        )
        """

    def testGoogleCloudDatalabelingV1alpha1OutputConfig(self):
        """Test GoogleCloudDatalabelingV1alpha1OutputConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
