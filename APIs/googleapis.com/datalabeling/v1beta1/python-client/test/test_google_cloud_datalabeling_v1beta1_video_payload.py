# coding: utf-8

"""
    Data Labeling API

    Public API for Google Cloud AI Data Labeling Service.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_datalabeling_v1beta1_video_payload import GoogleCloudDatalabelingV1beta1VideoPayload

class TestGoogleCloudDatalabelingV1beta1VideoPayload(unittest.TestCase):
    """GoogleCloudDatalabelingV1beta1VideoPayload unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDatalabelingV1beta1VideoPayload:
        """Test GoogleCloudDatalabelingV1beta1VideoPayload
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDatalabelingV1beta1VideoPayload`
        """
        model = GoogleCloudDatalabelingV1beta1VideoPayload()
        if include_optional:
            return GoogleCloudDatalabelingV1beta1VideoPayload(
                frame_rate = 1.337,
                mime_type = '',
                signed_uri = '',
                video_thumbnails = [
                    openapi_client.models.google_cloud_datalabeling_v1beta1_video_thumbnail.GoogleCloudDatalabelingV1beta1VideoThumbnail(
                        thumbnail = 'YQ==', 
                        time_offset = '', )
                    ],
                video_uri = ''
            )
        else:
            return GoogleCloudDatalabelingV1beta1VideoPayload(
        )
        """

    def testGoogleCloudDatalabelingV1beta1VideoPayload(self):
        """Test GoogleCloudDatalabelingV1beta1VideoPayload"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
