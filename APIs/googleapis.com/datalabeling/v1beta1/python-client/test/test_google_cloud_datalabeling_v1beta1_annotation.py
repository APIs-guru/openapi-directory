# coding: utf-8

"""
    Data Labeling API

    Public API for Google Cloud AI Data Labeling Service.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_datalabeling_v1beta1_annotation import GoogleCloudDatalabelingV1beta1Annotation

class TestGoogleCloudDatalabelingV1beta1Annotation(unittest.TestCase):
    """GoogleCloudDatalabelingV1beta1Annotation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDatalabelingV1beta1Annotation:
        """Test GoogleCloudDatalabelingV1beta1Annotation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDatalabelingV1beta1Annotation`
        """
        model = GoogleCloudDatalabelingV1beta1Annotation()
        if include_optional:
            return GoogleCloudDatalabelingV1beta1Annotation(
                annotation_metadata = openapi_client.models.google_cloud_datalabeling_v1beta1_annotation_metadata.GoogleCloudDatalabelingV1beta1AnnotationMetadata(
                    operator_metadata = openapi_client.models.google_cloud_datalabeling_v1beta1_operator_metadata.GoogleCloudDatalabelingV1beta1OperatorMetadata(
                        comments = [
                            ''
                            ], 
                        label_votes = 56, 
                        score = 1.337, 
                        total_votes = 56, ), ),
                annotation_sentiment = 'ANNOTATION_SENTIMENT_UNSPECIFIED',
                annotation_source = 'ANNOTATION_SOURCE_UNSPECIFIED',
                annotation_value = openapi_client.models.google_cloud_datalabeling_v1beta1_annotation_value.GoogleCloudDatalabelingV1beta1AnnotationValue(
                    image_bounding_poly_annotation = openapi_client.models.google_cloud_datalabeling_v1beta1_image_bounding_poly_annotation.GoogleCloudDatalabelingV1beta1ImageBoundingPolyAnnotation(
                        annotation_spec = openapi_client.models.google_cloud_datalabeling_v1beta1_annotation_spec.GoogleCloudDatalabelingV1beta1AnnotationSpec(
                            description = '', 
                            display_name = '', 
                            index = 56, ), 
                        bounding_poly = openapi_client.models.google_cloud_datalabeling_v1beta1_bounding_poly.GoogleCloudDatalabelingV1beta1BoundingPoly(
                            vertices = [
                                openapi_client.models.google_cloud_datalabeling_v1beta1_vertex.GoogleCloudDatalabelingV1beta1Vertex(
                                    x = 56, 
                                    y = 56, )
                                ], ), 
                        normalized_bounding_poly = openapi_client.models.google_cloud_datalabeling_v1beta1_normalized_bounding_poly.GoogleCloudDatalabelingV1beta1NormalizedBoundingPoly(
                            normalized_vertices = [
                                openapi_client.models.google_cloud_datalabeling_v1beta1_normalized_vertex.GoogleCloudDatalabelingV1beta1NormalizedVertex(
                                    x = 1.337, 
                                    y = 1.337, )
                                ], ), ), 
                    image_classification_annotation = openapi_client.models.google_cloud_datalabeling_v1beta1_image_classification_annotation.GoogleCloudDatalabelingV1beta1ImageClassificationAnnotation(), 
                    image_polyline_annotation = openapi_client.models.google_cloud_datalabeling_v1beta1_image_polyline_annotation.GoogleCloudDatalabelingV1beta1ImagePolylineAnnotation(
                        normalized_polyline = openapi_client.models.google_cloud_datalabeling_v1beta1_normalized_polyline.GoogleCloudDatalabelingV1beta1NormalizedPolyline(), 
                        polyline = openapi_client.models.google_cloud_datalabeling_v1beta1_polyline.GoogleCloudDatalabelingV1beta1Polyline(), ), 
                    image_segmentation_annotation = openapi_client.models.google_cloud_datalabeling_v1beta1_image_segmentation_annotation.GoogleCloudDatalabelingV1beta1ImageSegmentationAnnotation(
                        annotation_colors = {
                            'key' : openapi_client.models.google_cloud_datalabeling_v1beta1_annotation_spec.GoogleCloudDatalabelingV1beta1AnnotationSpec(
                                description = '', 
                                display_name = '', 
                                index = 56, )
                            }, 
                        image_bytes = 'YQ==', 
                        mime_type = '', ), 
                    text_classification_annotation = openapi_client.models.google_cloud_datalabeling_v1beta1_text_classification_annotation.GoogleCloudDatalabelingV1beta1TextClassificationAnnotation(), 
                    text_entity_extraction_annotation = openapi_client.models.google_cloud_datalabeling_v1beta1_text_entity_extraction_annotation.GoogleCloudDatalabelingV1beta1TextEntityExtractionAnnotation(
                        sequential_segment = openapi_client.models.google_cloud_datalabeling_v1beta1_sequential_segment.GoogleCloudDatalabelingV1beta1SequentialSegment(
                            end = 56, 
                            start = 56, ), ), 
                    video_classification_annotation = openapi_client.models.google_cloud_datalabeling_v1beta1_video_classification_annotation.GoogleCloudDatalabelingV1beta1VideoClassificationAnnotation(
                        time_segment = openapi_client.models.google_cloud_datalabeling_v1beta1_time_segment.GoogleCloudDatalabelingV1beta1TimeSegment(
                            end_time_offset = '', 
                            start_time_offset = '', ), ), 
                    video_event_annotation = openapi_client.models.google_cloud_datalabeling_v1beta1_video_event_annotation.GoogleCloudDatalabelingV1beta1VideoEventAnnotation(), 
                    video_object_tracking_annotation = openapi_client.models.google_cloud_datalabeling_v1beta1_video_object_tracking_annotation.GoogleCloudDatalabelingV1beta1VideoObjectTrackingAnnotation(
                        object_tracking_frames = [
                            openapi_client.models.google_cloud_datalabeling_v1beta1_object_tracking_frame.GoogleCloudDatalabelingV1beta1ObjectTrackingFrame(
                                time_offset = '', )
                            ], ), ),
                name = ''
            )
        else:
            return GoogleCloudDatalabelingV1beta1Annotation(
        )
        """

    def testGoogleCloudDatalabelingV1beta1Annotation(self):
        """Test GoogleCloudDatalabelingV1beta1Annotation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
