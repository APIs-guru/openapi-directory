# coding: utf-8

"""
    Storage Transfer API

    Transfers data from external data sources to a Google Cloud Storage bucket or between Google Cloud Storage buckets. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.transfer_counters import TransferCounters

class TestTransferCounters(unittest.TestCase):
    """TransferCounters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TransferCounters:
        """Test TransferCounters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TransferCounters`
        """
        model = TransferCounters()
        if include_optional:
            return TransferCounters(
                bytes_copied_to_sink = '',
                bytes_deleted_from_sink = '',
                bytes_deleted_from_source = '',
                bytes_failed_to_delete_from_sink = '',
                bytes_found_from_source = '',
                bytes_found_only_from_sink = '',
                bytes_from_source_failed = '',
                bytes_from_source_skipped_by_sync = '',
                directories_failed_to_list_from_source = '',
                directories_found_from_source = '',
                directories_successfully_listed_from_source = '',
                intermediate_objects_cleaned_up = '',
                intermediate_objects_failed_cleaned_up = '',
                objects_copied_to_sink = '',
                objects_deleted_from_sink = '',
                objects_deleted_from_source = '',
                objects_failed_to_delete_from_sink = '',
                objects_found_from_source = '',
                objects_found_only_from_sink = '',
                objects_from_source_failed = '',
                objects_from_source_skipped_by_sync = ''
            )
        else:
            return TransferCounters(
        )
        """

    def testTransferCounters(self):
        """Test TransferCounters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
