# coding: utf-8

"""
    Service Management API

    Google Service Management allows service producers to publish their services on Google Cloud Platform so that they can be discovered and used by service consumers.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.services_api import ServicesApi


class TestServicesApi(unittest.TestCase):
    """ServicesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ServicesApi()

    def tearDown(self) -> None:
        pass

    def test_servicemanagement_services_configs_create(self) -> None:
        """Test case for servicemanagement_services_configs_create

        """
        pass

    def test_servicemanagement_services_configs_get(self) -> None:
        """Test case for servicemanagement_services_configs_get

        """
        pass

    def test_servicemanagement_services_configs_list(self) -> None:
        """Test case for servicemanagement_services_configs_list

        """
        pass

    def test_servicemanagement_services_configs_submit(self) -> None:
        """Test case for servicemanagement_services_configs_submit

        """
        pass

    def test_servicemanagement_services_consumers_get_iam_policy(self) -> None:
        """Test case for servicemanagement_services_consumers_get_iam_policy

        """
        pass

    def test_servicemanagement_services_consumers_set_iam_policy(self) -> None:
        """Test case for servicemanagement_services_consumers_set_iam_policy

        """
        pass

    def test_servicemanagement_services_consumers_test_iam_permissions(self) -> None:
        """Test case for servicemanagement_services_consumers_test_iam_permissions

        """
        pass

    def test_servicemanagement_services_create(self) -> None:
        """Test case for servicemanagement_services_create

        """
        pass

    def test_servicemanagement_services_delete(self) -> None:
        """Test case for servicemanagement_services_delete

        """
        pass

    def test_servicemanagement_services_generate_config_report(self) -> None:
        """Test case for servicemanagement_services_generate_config_report

        """
        pass

    def test_servicemanagement_services_get(self) -> None:
        """Test case for servicemanagement_services_get

        """
        pass

    def test_servicemanagement_services_get_config(self) -> None:
        """Test case for servicemanagement_services_get_config

        """
        pass

    def test_servicemanagement_services_list(self) -> None:
        """Test case for servicemanagement_services_list

        """
        pass

    def test_servicemanagement_services_rollouts_create(self) -> None:
        """Test case for servicemanagement_services_rollouts_create

        """
        pass

    def test_servicemanagement_services_rollouts_get(self) -> None:
        """Test case for servicemanagement_services_rollouts_get

        """
        pass

    def test_servicemanagement_services_rollouts_list(self) -> None:
        """Test case for servicemanagement_services_rollouts_list

        """
        pass

    def test_servicemanagement_services_undelete(self) -> None:
        """Test case for servicemanagement_services_undelete

        """
        pass


if __name__ == '__main__':
    unittest.main()
