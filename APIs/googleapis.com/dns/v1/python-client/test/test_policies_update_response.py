# coding: utf-8

"""
    Cloud DNS API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.policies_update_response import PoliciesUpdateResponse

class TestPoliciesUpdateResponse(unittest.TestCase):
    """PoliciesUpdateResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PoliciesUpdateResponse:
        """Test PoliciesUpdateResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PoliciesUpdateResponse`
        """
        model = PoliciesUpdateResponse()
        if include_optional:
            return PoliciesUpdateResponse(
                header = openapi_client.models.response_header.ResponseHeader(
                    operation_id = '', ),
                policy = openapi_client.models.policy.Policy(
                    alternative_name_server_config = openapi_client.models.policy_alternative_name_server_config.PolicyAlternativeNameServerConfig(
                        kind = 'dns#policyAlternativeNameServerConfig', 
                        target_name_servers = [
                            openapi_client.models.policy_alternative_name_server_config_target_name_server.PolicyAlternativeNameServerConfigTargetNameServer(
                                forwarding_path = 'default', 
                                ipv4_address = '', 
                                ipv6_address = '', 
                                kind = 'dns#policyAlternativeNameServerConfigTargetNameServer', )
                            ], ), 
                    description = '', 
                    enable_inbound_forwarding = True, 
                    enable_logging = True, 
                    id = '', 
                    kind = 'dns#policy', 
                    name = '', 
                    networks = [
                        openapi_client.models.policy_network.PolicyNetwork(
                            kind = 'dns#policyNetwork', 
                            network_url = '', )
                        ], )
            )
        else:
            return PoliciesUpdateResponse(
        )
        """

    def testPoliciesUpdateResponse(self):
        """Test PoliciesUpdateResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
