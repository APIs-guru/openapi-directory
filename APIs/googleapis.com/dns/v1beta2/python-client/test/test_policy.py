# coding: utf-8

"""
    Cloud DNS API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1beta2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.policy import Policy

class TestPolicy(unittest.TestCase):
    """Policy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Policy:
        """Test Policy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Policy`
        """
        model = Policy()
        if include_optional:
            return Policy(
                alternative_name_server_config = openapi_client.models.policy_alternative_name_server_config.PolicyAlternativeNameServerConfig(
                    kind = 'dns#policyAlternativeNameServerConfig', 
                    target_name_servers = [
                        openapi_client.models.policy_alternative_name_server_config_target_name_server.PolicyAlternativeNameServerConfigTargetNameServer(
                            forwarding_path = 'default', 
                            ipv4_address = '', 
                            ipv6_address = '', 
                            kind = 'dns#policyAlternativeNameServerConfigTargetNameServer', )
                        ], ),
                description = '',
                enable_inbound_forwarding = True,
                enable_logging = True,
                id = '',
                kind = 'dns#policy',
                name = '',
                networks = [
                    openapi_client.models.policy_network.PolicyNetwork(
                        kind = 'dns#policyNetwork', 
                        network_url = '', )
                    ]
            )
        else:
            return Policy(
        )
        """

    def testPolicy(self):
        """Test Policy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
