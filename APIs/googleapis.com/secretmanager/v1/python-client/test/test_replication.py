# coding: utf-8

"""
    Secret Manager API

    Stores sensitive data such as API keys, passwords, and certificates. Provides convenience while improving security. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.replication import Replication

class TestReplication(unittest.TestCase):
    """Replication unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Replication:
        """Test Replication
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Replication`
        """
        model = Replication()
        if include_optional:
            return Replication(
                automatic = openapi_client.models.automatic.Automatic(
                    customer_managed_encryption = openapi_client.models.customer_managed_encryption.CustomerManagedEncryption(
                        kms_key_name = '', ), ),
                user_managed = openapi_client.models.user_managed.UserManaged(
                    replicas = [
                        openapi_client.models.replica.Replica(
                            customer_managed_encryption = openapi_client.models.customer_managed_encryption.CustomerManagedEncryption(
                                kms_key_name = '', ), 
                            location = '', )
                        ], )
            )
        else:
            return Replication(
        )
        """

    def testReplication(self):
        """Test Replication"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
