# coding: utf-8

"""
    BigQuery Reservation API

    A service to modify your BigQuery flat-rate reservations.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_capacity_commitments_response import ListCapacityCommitmentsResponse

class TestListCapacityCommitmentsResponse(unittest.TestCase):
    """ListCapacityCommitmentsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListCapacityCommitmentsResponse:
        """Test ListCapacityCommitmentsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListCapacityCommitmentsResponse`
        """
        model = ListCapacityCommitmentsResponse()
        if include_optional:
            return ListCapacityCommitmentsResponse(
                capacity_commitments = [
                    openapi_client.models.capacity_commitment.CapacityCommitment(
                        commitment_end_time = '', 
                        commitment_start_time = '', 
                        edition = 'EDITION_UNSPECIFIED', 
                        failure_status = openapi_client.models.status.Status(
                            code = 56, 
                            details = [
                                {
                                    'key' : null
                                    }
                                ], 
                            message = '', ), 
                        is_flat_rate = True, 
                        multi_region_auxiliary = True, 
                        name = '', 
                        plan = 'COMMITMENT_PLAN_UNSPECIFIED', 
                        renewal_plan = 'COMMITMENT_PLAN_UNSPECIFIED', 
                        slot_count = '', 
                        state = 'STATE_UNSPECIFIED', )
                    ],
                next_page_token = ''
            )
        else:
            return ListCapacityCommitmentsResponse(
        )
        """

    def testListCapacityCommitmentsResponse(self):
        """Test ListCapacityCommitmentsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
