# coding: utf-8

"""
    BigQuery Reservation API

    A service to modify your BigQuery flat-rate reservations.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.split_capacity_commitment_response import SplitCapacityCommitmentResponse

class TestSplitCapacityCommitmentResponse(unittest.TestCase):
    """SplitCapacityCommitmentResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SplitCapacityCommitmentResponse:
        """Test SplitCapacityCommitmentResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SplitCapacityCommitmentResponse`
        """
        model = SplitCapacityCommitmentResponse()
        if include_optional:
            return SplitCapacityCommitmentResponse(
                first = openapi_client.models.capacity_commitment.CapacityCommitment(
                    commitment_end_time = '', 
                    commitment_start_time = '', 
                    failure_status = openapi_client.models.status.Status(
                        code = 56, 
                        details = [
                            {
                                'key' : null
                                }
                            ], 
                        message = '', ), 
                    multi_region_auxiliary = True, 
                    name = '', 
                    plan = 'COMMITMENT_PLAN_UNSPECIFIED', 
                    renewal_plan = 'COMMITMENT_PLAN_UNSPECIFIED', 
                    slot_count = '', 
                    state = 'STATE_UNSPECIFIED', ),
                second = openapi_client.models.capacity_commitment.CapacityCommitment(
                    commitment_end_time = '', 
                    commitment_start_time = '', 
                    failure_status = openapi_client.models.status.Status(
                        code = 56, 
                        details = [
                            {
                                'key' : null
                                }
                            ], 
                        message = '', ), 
                    multi_region_auxiliary = True, 
                    name = '', 
                    plan = 'COMMITMENT_PLAN_UNSPECIFIED', 
                    renewal_plan = 'COMMITMENT_PLAN_UNSPECIFIED', 
                    slot_count = '', 
                    state = 'STATE_UNSPECIFIED', )
            )
        else:
            return SplitCapacityCommitmentResponse(
        )
        """

    def testSplitCapacityCommitmentResponse(self):
        """Test SplitCapacityCommitmentResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
