openapi: 3.0.0
servers:
  - url: https://language.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Provides natural language understanding technologies, such as sentiment analysis, entity recognition, entity sentiment analysis, and other text annotations, to developers.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Natural Language API
  version: v2
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - format: google
      url: https://language.googleapis.com/$discovery/rest?version=v2
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: language
externalDocs:
  url: https://cloud.google.com/natural-language/
tags:
  - name: documents
paths:
  /v2/documents:analyzeEntities:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Finds named entities (currently proper names and common nouns) in the text along with entity types, probability, mentions for each entity, and other properties.
      operationId: language.documents.analyzeEntities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnalyzeEntitiesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyzeEntitiesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-language
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-language
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - documents
  /v2/documents:analyzeSentiment:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Analyzes the sentiment of the provided text.
      operationId: language.documents.analyzeSentiment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnalyzeSentimentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyzeSentimentResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-language
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-language
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - documents
  /v2/documents:annotateText:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: A convenience method that provides all features in one call.
      operationId: language.documents.annotateText
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnnotateTextRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnnotateTextResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-language
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-language
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - documents
  /v2/documents:classifyText:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Classifies a document into categories.
      operationId: language.documents.classifyText
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClassifyTextRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClassifyTextResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-language
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-language
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - documents
  /v2/documents:moderateText:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Moderates a document for harmful and sensitive categories.
      operationId: language.documents.moderateText
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModerateTextRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModerateTextResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-language
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-language
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - documents
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AnalyzeEntitiesRequest:
      description: The entity analysis request message.
      properties:
        document:
          $ref: "#/components/schemas/Document"
          description: Required. Input document.
        encodingType:
          description: The encoding type used by the API to calculate offsets.
          enum:
            - NONE
            - UTF8
            - UTF16
            - UTF32
          type: string
      type: object
    AnalyzeEntitiesResponse:
      description: The entity analysis response message.
      properties:
        entities:
          description: The recognized entities in the input document.
          items:
            $ref: "#/components/schemas/Entity"
          type: array
        languageCode:
          description: The language of the text, which will be the same as the language specified in the request or, if not specified, the automatically-detected language. See Document.language field for more details.
          type: string
        languageSupported:
          description: Whether the language is officially supported. The API may still return a response when the language is not supported, but it is on a best effort basis.
          type: boolean
      type: object
    AnalyzeSentimentRequest:
      description: The sentiment analysis request message.
      properties:
        document:
          $ref: "#/components/schemas/Document"
          description: Required. Input document.
        encodingType:
          description: The encoding type used by the API to calculate sentence offsets.
          enum:
            - NONE
            - UTF8
            - UTF16
            - UTF32
          type: string
      type: object
    AnalyzeSentimentResponse:
      description: The sentiment analysis response message.
      properties:
        documentSentiment:
          $ref: "#/components/schemas/Sentiment"
          description: The overall sentiment of the input document.
        languageCode:
          description: The language of the text, which will be the same as the language specified in the request or, if not specified, the automatically-detected language. See Document.language field for more details.
          type: string
        languageSupported:
          description: Whether the language is officially supported. The API may still return a response when the language is not supported, but it is on a best effort basis.
          type: boolean
        sentences:
          description: The sentiment for all the sentences in the document.
          items:
            $ref: "#/components/schemas/Sentence"
          type: array
      type: object
    AnnotateTextRequest:
      description: The request message for the text annotation API, which can perform multiple analysis types in one call.
      properties:
        document:
          $ref: "#/components/schemas/Document"
          description: Required. Input document.
        encodingType:
          description: The encoding type used by the API to calculate offsets.
          enum:
            - NONE
            - UTF8
            - UTF16
            - UTF32
          type: string
        features:
          $ref: "#/components/schemas/Features"
          description: Required. The enabled features.
      type: object
    AnnotateTextResponse:
      description: The text annotations response message.
      properties:
        categories:
          description: Categories identified in the input document.
          items:
            $ref: "#/components/schemas/ClassificationCategory"
          type: array
        documentSentiment:
          $ref: "#/components/schemas/Sentiment"
          description: The overall sentiment for the document. Populated if the user enables AnnotateTextRequest.Features.extract_document_sentiment.
        entities:
          description: Entities, along with their semantic information, in the input document. Populated if the user enables AnnotateTextRequest.Features.extract_entities or AnnotateTextRequest.Features.extract_entity_sentiment.
          items:
            $ref: "#/components/schemas/Entity"
          type: array
        languageCode:
          description: The language of the text, which will be the same as the language specified in the request or, if not specified, the automatically-detected language. See Document.language field for more details.
          type: string
        languageSupported:
          description: Whether the language is officially supported by all requested features. The API may still return a response when the language is not supported, but it is on a best effort basis.
          type: boolean
        moderationCategories:
          description: Harmful and sensitive categories identified in the input document.
          items:
            $ref: "#/components/schemas/ClassificationCategory"
          type: array
        sentences:
          description: Sentences in the input document. Populated if the user enables AnnotateTextRequest.Features.extract_document_sentiment.
          items:
            $ref: "#/components/schemas/Sentence"
          type: array
      type: object
    ClassificationCategory:
      description: Represents a category returned from the text classifier.
      properties:
        confidence:
          description: The classifier's confidence of the category. Number represents how certain the classifier is that this category represents the given text.
          format: float
          type: number
        name:
          description: The name of the category representing the document.
          type: string
      type: object
    ClassifyTextRequest:
      description: The document classification request message.
      properties:
        document:
          $ref: "#/components/schemas/Document"
          description: Required. Input document.
      type: object
    ClassifyTextResponse:
      description: The document classification response message.
      properties:
        categories:
          description: Categories representing the input document.
          items:
            $ref: "#/components/schemas/ClassificationCategory"
          type: array
        languageCode:
          description: The language of the text, which will be the same as the language specified in the request or, if not specified, the automatically-detected language. See Document.language field for more details.
          type: string
        languageSupported:
          description: Whether the language is officially supported. The API may still return a response when the language is not supported, but it is on a best effort basis.
          type: boolean
      type: object
    Document:
      description: Represents the input to API methods.
      properties:
        content:
          description: The content of the input in string format. Cloud audit logging exempt since it is based on user data.
          type: string
        gcsContentUri:
          description: "The Google Cloud Storage URI where the file content is located. This URI must be of the form: gs://bucket_name/object_name. For more details, see https://cloud.google.com/storage/docs/reference-uris. NOTE: Cloud Storage object versioning is not supported."
          type: string
        languageCode:
          description: Optional. The language of the document (if not specified, the language is automatically detected). Both ISO and BCP-47 language codes are accepted. [Language Support](https://cloud.google.com/natural-language/docs/languages) lists currently supported languages for each API method. If the language (either specified by the caller or automatically detected) is not supported by the called API method, an `INVALID_ARGUMENT` error is returned.
          type: string
        type:
          description: Required. If the type is not set or is `TYPE_UNSPECIFIED`, returns an `INVALID_ARGUMENT` error.
          enum:
            - TYPE_UNSPECIFIED
            - PLAIN_TEXT
            - HTML
          type: string
      type: object
    Entity:
      description: Represents a phrase in the text that is a known entity, such as a person, an organization, or location. The API associates information, such as probability and mentions, with entities.
      properties:
        mentions:
          description: The mentions of this entity in the input document. The API currently supports proper noun mentions.
          items:
            $ref: "#/components/schemas/EntityMention"
          type: array
        metadata:
          additionalProperties:
            type: string
          description: Metadata associated with the entity. For the metadata associated with other entity types, see the Type table below.
          type: object
        name:
          description: The representative name for the entity.
          type: string
        sentiment:
          $ref: "#/components/schemas/Sentiment"
          description: For calls to AnalyzeEntitySentiment or if AnnotateTextRequest.Features.extract_entity_sentiment is set to true, this field will contain the aggregate sentiment expressed for this entity in the provided document.
        type:
          description: The entity type.
          enum:
            - UNKNOWN
            - PERSON
            - LOCATION
            - ORGANIZATION
            - EVENT
            - WORK_OF_ART
            - CONSUMER_GOOD
            - OTHER
            - PHONE_NUMBER
            - ADDRESS
            - DATE
            - NUMBER
            - PRICE
          type: string
      type: object
    EntityMention:
      description: Represents a mention for an entity in the text. Currently, proper noun mentions are supported.
      properties:
        probability:
          description: Probability score associated with the entity. The score shows the probability of the entity mention being the entity type. The score is in (0, 1] range.
          format: float
          type: number
        sentiment:
          $ref: "#/components/schemas/Sentiment"
          description: For calls to AnalyzeEntitySentiment or if AnnotateTextRequest.Features.extract_entity_sentiment is set to true, this field will contain the sentiment expressed for this mention of the entity in the provided document.
        text:
          $ref: "#/components/schemas/TextSpan"
          description: The mention text.
        type:
          description: The type of the entity mention.
          enum:
            - TYPE_UNKNOWN
            - PROPER
            - COMMON
          type: string
      type: object
    Features:
      description: All available features. Setting each one to true will enable that specific analysis for the input.
      properties:
        classifyText:
          description: Optional. Classify the full document into categories.
          type: boolean
        extractDocumentSentiment:
          description: Optional. Extract document-level sentiment.
          type: boolean
        extractEntities:
          description: Optional. Extract entities.
          type: boolean
        moderateText:
          description: Optional. Moderate the document for harmful and sensitive categories.
          type: boolean
      type: object
    ModerateTextRequest:
      description: The document moderation request message.
      properties:
        document:
          $ref: "#/components/schemas/Document"
          description: Required. Input document.
      type: object
    ModerateTextResponse:
      description: The document moderation response message.
      properties:
        languageCode:
          description: The language of the text, which will be the same as the language specified in the request or, if not specified, the automatically-detected language. See Document.language field for more details.
          type: string
        languageSupported:
          description: Whether the language is officially supported. The API may still return a response when the language is not supported, but it is on a best effort basis.
          type: boolean
        moderationCategories:
          description: Harmful and sensitive categories representing the input document.
          items:
            $ref: "#/components/schemas/ClassificationCategory"
          type: array
      type: object
    Sentence:
      description: Represents a sentence in the input document.
      properties:
        sentiment:
          $ref: "#/components/schemas/Sentiment"
          description: For calls to AnalyzeSentiment or if AnnotateTextRequest.Features.extract_document_sentiment is set to true, this field will contain the sentiment for the sentence.
        text:
          $ref: "#/components/schemas/TextSpan"
          description: The sentence text.
      type: object
    Sentiment:
      description: Represents the feeling associated with the entire text or entities in the text.
      properties:
        magnitude:
          description: A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment regardless of score (positive or negative).
          format: float
          type: number
        score:
          description: Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).
          format: float
          type: number
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    TextSpan:
      description: Represents a text span in the input document.
      properties:
        beginOffset:
          description: The API calculates the beginning offset of the content in the original document according to the EncodingType specified in the API request.
          format: int32
          type: integer
        content:
          description: The content of the text span, which is a substring of the document.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-language: Apply machine learning models to reveal the structure and meaning of text
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-language: Apply machine learning models to reveal the structure and meaning of text
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
