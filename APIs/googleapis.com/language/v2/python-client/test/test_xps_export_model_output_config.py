# coding: utf-8

"""
    Cloud Natural Language API

    Provides natural language understanding technologies, such as sentiment analysis, entity recognition, entity sentiment analysis, and other text annotations, to developers.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.xps_export_model_output_config import XPSExportModelOutputConfig

class TestXPSExportModelOutputConfig(unittest.TestCase):
    """XPSExportModelOutputConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> XPSExportModelOutputConfig:
        """Test XPSExportModelOutputConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `XPSExportModelOutputConfig`
        """
        model = XPSExportModelOutputConfig()
        if include_optional:
            return XPSExportModelOutputConfig(
                core_ml_format = None,
                docker_format = openapi_client.models.xps_docker_format.XPSDockerFormat(
                    cpu_architecture = 'CPU_ARCHITECTURE_UNSPECIFIED', 
                    gpu_architecture = 'GPU_ARCHITECTURE_UNSPECIFIED', ),
                edge_tpu_tf_lite_format = None,
                export_firebase_auxiliary_info = True,
                output_gcr_uri = '',
                output_gcs_uri = '',
                tf_js_format = None,
                tf_lite_format = None,
                tf_saved_model_format = None
            )
        else:
            return XPSExportModelOutputConfig(
        )
        """

    def testXPSExportModelOutputConfig(self):
        """Test XPSExportModelOutputConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
