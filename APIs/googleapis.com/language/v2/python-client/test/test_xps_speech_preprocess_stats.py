# coding: utf-8

"""
    Cloud Natural Language API

    Provides natural language understanding technologies, such as sentiment analysis, entity recognition, entity sentiment analysis, and other text annotations, to developers.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.xps_speech_preprocess_stats import XPSSpeechPreprocessStats

class TestXPSSpeechPreprocessStats(unittest.TestCase):
    """XPSSpeechPreprocessStats unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> XPSSpeechPreprocessStats:
        """Test XPSSpeechPreprocessStats
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `XPSSpeechPreprocessStats`
        """
        model = XPSSpeechPreprocessStats()
        if include_optional:
            return XPSSpeechPreprocessStats(
                data_errors = [
                    openapi_client.models.xps_data_errors.XPSDataErrors(
                        count = 56, 
                        error_type = 'ERROR_TYPE_UNSPECIFIED', )
                    ],
                num_human_labeled_examples = 56,
                num_logs_examples = 56,
                num_machine_transcribed_examples = 56,
                test_examples_count = 56,
                test_sentences_count = 56,
                test_words_count = 56,
                train_examples_count = 56,
                train_sentences_count = 56,
                train_words_count = 56
            )
        else:
            return XPSSpeechPreprocessStats(
        )
        """

    def testXPSSpeechPreprocessStats(self):
        """Test XPSSpeechPreprocessStats"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
