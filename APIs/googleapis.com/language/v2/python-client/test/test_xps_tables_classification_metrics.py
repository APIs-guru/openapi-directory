# coding: utf-8

"""
    Cloud Natural Language API

    Provides natural language understanding technologies, such as sentiment analysis, entity recognition, entity sentiment analysis, and other text annotations, to developers.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.xps_tables_classification_metrics import XPSTablesClassificationMetrics

class TestXPSTablesClassificationMetrics(unittest.TestCase):
    """XPSTablesClassificationMetrics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> XPSTablesClassificationMetrics:
        """Test XPSTablesClassificationMetrics
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `XPSTablesClassificationMetrics`
        """
        model = XPSTablesClassificationMetrics()
        if include_optional:
            return XPSTablesClassificationMetrics(
                curve_metrics = [
                    openapi_client.models.xps_tables_classification_metrics_curve_metrics.XPSTablesClassificationMetricsCurveMetrics(
                        auc_pr = 1.337, 
                        auc_roc = 1.337, 
                        confidence_metrics_entries = [
                            openapi_client.models.xps_tables_confidence_metrics_entry.XPSTablesConfidenceMetricsEntry(
                                confidence_threshold = 1.337, 
                                f1_score = 1.337, 
                                false_negative_count = '', 
                                false_positive_count = '', 
                                false_positive_rate = 1.337, 
                                precision = 1.337, 
                                recall = 1.337, 
                                true_negative_count = '', 
                                true_positive_count = '', 
                                true_positive_rate = 1.337, )
                            ], 
                        log_loss = 1.337, 
                        position_threshold = 56, 
                        value = '', )
                    ]
            )
        else:
            return XPSTablesClassificationMetrics(
        )
        """

    def testXPSTablesClassificationMetrics(self):
        """Test XPSTablesClassificationMetrics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
