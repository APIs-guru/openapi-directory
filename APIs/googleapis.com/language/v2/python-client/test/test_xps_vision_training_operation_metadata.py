# coding: utf-8

"""
    Cloud Natural Language API

    Provides natural language understanding technologies, such as sentiment analysis, entity recognition, entity sentiment analysis, and other text annotations, to developers.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.xps_vision_training_operation_metadata import XPSVisionTrainingOperationMetadata

class TestXPSVisionTrainingOperationMetadata(unittest.TestCase):
    """XPSVisionTrainingOperationMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> XPSVisionTrainingOperationMetadata:
        """Test XPSVisionTrainingOperationMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `XPSVisionTrainingOperationMetadata`
        """
        model = XPSVisionTrainingOperationMetadata()
        if include_optional:
            return XPSVisionTrainingOperationMetadata(
                explanation_usage = openapi_client.models.infra_usage.InfraUsage(
                    cpu_metrics = [
                        openapi_client.models.cpu_metric.CpuMetric(
                            core_number = '', 
                            core_sec = '', 
                            cpu_type = 'UNKNOWN_CPU_TYPE', 
                            machine_spec = 'UNKNOWN_MACHINE_SPEC', 
                            tracking_labels = {
                                'key' : ''
                                }, )
                        ], 
                    disk_metrics = [
                        openapi_client.models.disk_metric.DiskMetric(
                            disk_type = 'UNKNOWN_DISK_TYPE', 
                            gib_sec = '', )
                        ], 
                    gpu_metrics = [
                        openapi_client.models.gpu_metric.GpuMetric(
                            gpu_sec = '', 
                            gpu_type = 'UNKNOWN_GPU_TYPE', 
                            machine_spec = 'UNKNOWN_MACHINE_SPEC', )
                        ], 
                    ram_metrics = [
                        openapi_client.models.ram_metric.RamMetric(
                            gib_sec = '', 
                            machine_spec = 'UNKNOWN_MACHINE_SPEC', 
                            memories = 1.337, 
                            ram_type = 'UNKNOWN_RAM_TYPE', )
                        ], 
                    tpu_metrics = [
                        openapi_client.models.tpu_metric.TpuMetric(
                            tpu_sec = '', 
                            tpu_type = 'UNKNOWN_TPU_TYPE', )
                        ], )
            )
        else:
            return XPSVisionTrainingOperationMetadata(
        )
        """

    def testXPSVisionTrainingOperationMetadata(self):
        """Test XPSVisionTrainingOperationMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
