# coding: utf-8

"""
    Cloud Natural Language API

    Provides natural language understanding technologies, such as sentiment analysis, entity recognition, entity sentiment analysis, and other text annotations, to developers.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.xps_tables_training_operation_metadata import XPSTablesTrainingOperationMetadata

class TestXPSTablesTrainingOperationMetadata(unittest.TestCase):
    """XPSTablesTrainingOperationMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> XPSTablesTrainingOperationMetadata:
        """Test XPSTablesTrainingOperationMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `XPSTablesTrainingOperationMetadata`
        """
        model = XPSTablesTrainingOperationMetadata()
        if include_optional:
            return XPSTablesTrainingOperationMetadata(
                create_model_stage = 'CREATE_MODEL_STAGE_UNSPECIFIED',
                optimization_objective = '',
                top_trials = [
                    openapi_client.models.xps_tuning_trial.XPSTuningTrial(
                        model_structure = openapi_client.models.xps_tables_model_structure.XPSTablesModelStructure(
                            model_parameters = [
                                openapi_client.models.xps_tables_model_structure_model_parameters.XPSTablesModelStructureModelParameters(
                                    hyperparameters = [
                                        openapi_client.models.xps_tables_model_structure_model_parameters_parameter.XPSTablesModelStructureModelParametersParameter(
                                            float_value = 1.337, 
                                            int_value = '', 
                                            name = '', 
                                            string_value = '', )
                                        ], )
                                ], ), 
                        training_objective_point = openapi_client.models.xps_training_objective_point.XPSTrainingObjectivePoint(
                            create_time = '', 
                            value = 1.337, ), )
                    ],
                train_budget_milli_node_hours = '',
                training_objective_points = [
                    openapi_client.models.xps_training_objective_point.XPSTrainingObjectivePoint(
                        create_time = '', 
                        value = 1.337, )
                    ],
                training_start_time = ''
            )
        else:
            return XPSTablesTrainingOperationMetadata(
        )
        """

    def testXPSTablesTrainingOperationMetadata(self):
        """Test XPSTablesTrainingOperationMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
