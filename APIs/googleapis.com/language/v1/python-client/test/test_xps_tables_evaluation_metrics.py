# coding: utf-8

"""
    Cloud Natural Language API

    Provides natural language understanding technologies, such as sentiment analysis, entity recognition, entity sentiment analysis, and other text annotations, to developers.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.xps_tables_evaluation_metrics import XPSTablesEvaluationMetrics

class TestXPSTablesEvaluationMetrics(unittest.TestCase):
    """XPSTablesEvaluationMetrics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> XPSTablesEvaluationMetrics:
        """Test XPSTablesEvaluationMetrics
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `XPSTablesEvaluationMetrics`
        """
        model = XPSTablesEvaluationMetrics()
        if include_optional:
            return XPSTablesEvaluationMetrics(
                classification_metrics = openapi_client.models.xps_tables_classification_metrics.XPSTablesClassificationMetrics(
                    curve_metrics = [
                        openapi_client.models.xps_tables_classification_metrics_curve_metrics.XPSTablesClassificationMetricsCurveMetrics(
                            auc_pr = 1.337, 
                            auc_roc = 1.337, 
                            confidence_metrics_entries = [
                                openapi_client.models.xps_tables_confidence_metrics_entry.XPSTablesConfidenceMetricsEntry(
                                    confidence_threshold = 1.337, 
                                    f1_score = 1.337, 
                                    false_negative_count = '', 
                                    false_positive_count = '', 
                                    false_positive_rate = 1.337, 
                                    precision = 1.337, 
                                    recall = 1.337, 
                                    true_negative_count = '', 
                                    true_positive_count = '', 
                                    true_positive_rate = 1.337, )
                                ], 
                            log_loss = 1.337, 
                            position_threshold = 56, 
                            value = '', )
                        ], ),
                regression_metrics = openapi_client.models.xps_tables_regression_metrics.XPSTablesRegressionMetrics(
                    mean_absolute_error = 1.337, 
                    mean_absolute_percentage_error = 1.337, 
                    r_squared = 1.337, 
                    regression_metrics_entries = [
                        openapi_client.models.xps_regression_metrics_entry.XPSRegressionMetricsEntry(
                            predicted_value = 1.337, 
                            true_value = 1.337, )
                        ], 
                    root_mean_squared_error = 1.337, 
                    root_mean_squared_log_error = 1.337, )
            )
        else:
            return XPSTablesEvaluationMetrics(
        )
        """

    def testXPSTablesEvaluationMetrics(self):
        """Test XPSTablesEvaluationMetrics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
