# coding: utf-8

"""
    Cloud Natural Language API

    Provides natural language understanding technologies, such as sentiment analysis, entity recognition, entity sentiment analysis, and other text annotations, to developers.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.xps_text_train_response import XPSTextTrainResponse

class TestXPSTextTrainResponse(unittest.TestCase):
    """XPSTextTrainResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> XPSTextTrainResponse:
        """Test XPSTextTrainResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `XPSTextTrainResponse`
        """
        model = XPSTextTrainResponse()
        if include_optional:
            return XPSTextTrainResponse(
                component_model = [
                    openapi_client.models.xps_text_component_model.XPSTextComponentModel(
                        batch_prediction_model_gcs_uri = '', 
                        online_prediction_model_gcs_uri = '', 
                        partition = 'PARTITION_TYPE_UNSPECIFIED', 
                        serving_artifact = openapi_client.models.xps_model_artifact_item.XPSModelArtifactItem(
                            artifact_format = 'ARTIFACT_FORMAT_UNSPECIFIED', 
                            gcs_uri = '', ), 
                        servo_model_name = '', 
                        submodel_name = '', 
                        submodel_type = 'TEXT_MODEL_TYPE_UNSPECIFIED', 
                        tf_runtime_version = '', 
                        version_number = '', )
                    ]
            )
        else:
            return XPSTextTrainResponse(
        )
        """

    def testXPSTextTrainResponse(self):
        """Test XPSTextTrainResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
