# coding: utf-8

"""
    Cloud Natural Language API

    Provides natural language understanding technologies, such as sentiment analysis, entity recognition, entity sentiment analysis, and other text annotations, to developers.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.xps_confidence_metrics_entry import XPSConfidenceMetricsEntry

class TestXPSConfidenceMetricsEntry(unittest.TestCase):
    """XPSConfidenceMetricsEntry unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> XPSConfidenceMetricsEntry:
        """Test XPSConfidenceMetricsEntry
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `XPSConfidenceMetricsEntry`
        """
        model = XPSConfidenceMetricsEntry()
        if include_optional:
            return XPSConfidenceMetricsEntry(
                confidence_threshold = 1.337,
                f1_score = 1.337,
                f1_score_at1 = 1.337,
                false_negative_count = '',
                false_positive_count = '',
                false_positive_rate = 1.337,
                false_positive_rate_at1 = 1.337,
                position_threshold = 56,
                precision = 1.337,
                precision_at1 = 1.337,
                recall = 1.337,
                recall_at1 = 1.337,
                true_negative_count = '',
                true_positive_count = ''
            )
        else:
            return XPSConfidenceMetricsEntry(
        )
        """

    def testXPSConfidenceMetricsEntry(self):
        """Test XPSConfidenceMetricsEntry"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
