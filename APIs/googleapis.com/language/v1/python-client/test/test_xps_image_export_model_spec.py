# coding: utf-8

"""
    Cloud Natural Language API

    Provides natural language understanding technologies, such as sentiment analysis, entity recognition, entity sentiment analysis, and other text annotations, to developers.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.xps_image_export_model_spec import XPSImageExportModelSpec

class TestXPSImageExportModelSpec(unittest.TestCase):
    """XPSImageExportModelSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> XPSImageExportModelSpec:
        """Test XPSImageExportModelSpec
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `XPSImageExportModelSpec`
        """
        model = XPSImageExportModelSpec()
        if include_optional:
            return XPSImageExportModelSpec(
                export_model_output_config = [
                    openapi_client.models.xps_export_model_output_config.XPSExportModelOutputConfig(
                        core_ml_format = openapi_client.models.core_ml_format.coreMlFormat(), 
                        docker_format = openapi_client.models.xps_docker_format.XPSDockerFormat(
                            cpu_architecture = 'CPU_ARCHITECTURE_UNSPECIFIED', 
                            gpu_architecture = 'GPU_ARCHITECTURE_UNSPECIFIED', ), 
                        edge_tpu_tf_lite_format = openapi_client.models.edge_tpu_tf_lite_format.edgeTpuTfLiteFormat(), 
                        export_firebase_auxiliary_info = True, 
                        output_gcr_uri = '', 
                        output_gcs_uri = '', 
                        tf_js_format = openapi_client.models.tf_js_format.tfJsFormat(), 
                        tf_lite_format = openapi_client.models.tf_lite_format.tfLiteFormat(), 
                        tf_saved_model_format = openapi_client.models.tf_saved_model_format.tfSavedModelFormat(), )
                    ]
            )
        else:
            return XPSImageExportModelSpec(
        )
        """

    def testXPSImageExportModelSpec(self):
        """Test XPSImageExportModelSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
