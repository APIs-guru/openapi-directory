# coding: utf-8

"""
    Cloud Natural Language API

    Provides natural language understanding technologies, such as sentiment analysis, entity recognition, entity sentiment analysis, and other text annotations, to developers.

    The version of the OpenAPI document: v1beta2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.xps_video_object_tracking_evaluation_metrics import XPSVideoObjectTrackingEvaluationMetrics

class TestXPSVideoObjectTrackingEvaluationMetrics(unittest.TestCase):
    """XPSVideoObjectTrackingEvaluationMetrics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> XPSVideoObjectTrackingEvaluationMetrics:
        """Test XPSVideoObjectTrackingEvaluationMetrics
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `XPSVideoObjectTrackingEvaluationMetrics`
        """
        model = XPSVideoObjectTrackingEvaluationMetrics()
        if include_optional:
            return XPSVideoObjectTrackingEvaluationMetrics(
                bounding_box_mean_average_precision = 1.337,
                bounding_box_metrics_entries = [
                    openapi_client.models.xps_bounding_box_metrics_entry.XPSBoundingBoxMetricsEntry(
                        confidence_metrics_entries = [
                            openapi_client.models.xps_bounding_box_metrics_entry_confidence_metrics_entry.XPSBoundingBoxMetricsEntryConfidenceMetricsEntry(
                                confidence_threshold = 1.337, 
                                f1_score = 1.337, 
                                precision = 1.337, 
                                recall = 1.337, )
                            ], 
                        iou_threshold = 1.337, 
                        mean_average_precision = 1.337, )
                    ],
                evaluated_boundingbox_count = 56,
                evaluated_frame_count = 56,
                evaluated_track_count = 56,
                track_mean_average_precision = 1.337,
                track_mean_bounding_box_iou = 1.337,
                track_mean_mismatch_rate = 1.337,
                track_metrics_entries = [
                    openapi_client.models.xps_track_metrics_entry.XPSTrackMetricsEntry(
                        confidence_metrics_entries = [
                            openapi_client.models.xps_track_metrics_entry_confidence_metrics_entry.XPSTrackMetricsEntryConfidenceMetricsEntry(
                                bounding_box_iou = 1.337, 
                                confidence_threshold = 1.337, 
                                mismatch_rate = 1.337, 
                                tracking_precision = 1.337, 
                                tracking_recall = 1.337, )
                            ], 
                        iou_threshold = 1.337, 
                        mean_bounding_box_iou = 1.337, 
                        mean_mismatch_rate = 1.337, 
                        mean_tracking_average_precision = 1.337, )
                    ]
            )
        else:
            return XPSVideoObjectTrackingEvaluationMetrics(
        )
        """

    def testXPSVideoObjectTrackingEvaluationMetrics(self):
        """Test XPSVideoObjectTrackingEvaluationMetrics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
