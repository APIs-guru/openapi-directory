# coding: utf-8

"""
    Cloud Natural Language API

    Provides natural language understanding technologies, such as sentiment analysis, entity recognition, entity sentiment analysis, and other text annotations, to developers.

    The version of the OpenAPI document: v1beta2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.xps_response_explanation_metadata_input_metadata import XPSResponseExplanationMetadataInputMetadata

class TestXPSResponseExplanationMetadataInputMetadata(unittest.TestCase):
    """XPSResponseExplanationMetadataInputMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> XPSResponseExplanationMetadataInputMetadata:
        """Test XPSResponseExplanationMetadataInputMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `XPSResponseExplanationMetadataInputMetadata`
        """
        model = XPSResponseExplanationMetadataInputMetadata()
        if include_optional:
            return XPSResponseExplanationMetadataInputMetadata(
                input_tensor_name = '',
                modality = 'MODALITY_UNSPECIFIED',
                visualization_config = openapi_client.models.xps_visualization.XPSVisualization(
                    clip_percent_lowerbound = 1.337, 
                    clip_percent_upperbound = 1.337, 
                    color_map = 'COLOR_MAP_UNSPECIFIED', 
                    overlay_type = 'OVERLAY_TYPE_UNSPECIFIED', 
                    polarity = 'POLARITY_UNSPECIFIED', 
                    type = 'TYPE_UNSPECIFIED', )
            )
        else:
            return XPSResponseExplanationMetadataInputMetadata(
        )
        """

    def testXPSResponseExplanationMetadataInputMetadata(self):
        """Test XPSResponseExplanationMetadataInputMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
