# coding: utf-8

"""
    Cloud Natural Language API

    Provides natural language understanding technologies, such as sentiment analysis, entity recognition, entity sentiment analysis, and other text annotations, to developers.

    The version of the OpenAPI document: v1beta2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.xps_array_stats import XPSArrayStats

class TestXPSArrayStats(unittest.TestCase):
    """XPSArrayStats unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> XPSArrayStats:
        """Test XPSArrayStats
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `XPSArrayStats`
        """
        model = XPSArrayStats()
        if include_optional:
            return XPSArrayStats(
                common_stats = openapi_client.models.xps_common_stats.XPSCommonStats(
                    distinct_value_count = '', 
                    null_value_count = '', 
                    valid_value_count = '', ),
                member_stats = openapi_client.models.xps_data_stats.XPSDataStats(
                    array_stats = openapi_client.models.xps_array_stats.XPSArrayStats(
                        common_stats = openapi_client.models.xps_common_stats.XPSCommonStats(
                            distinct_value_count = '', 
                            null_value_count = '', 
                            valid_value_count = '', ), 
                        member_stats = openapi_client.models.xps_data_stats.XPSDataStats(
                            category_stats = openapi_client.models.xps_category_stats.XPSCategoryStats(
                                top_category_stats = [
                                    openapi_client.models.xps_category_stats_single_category_stats.XPSCategoryStatsSingleCategoryStats(
                                        count = '', 
                                        value = '', )
                                    ], ), 
                            distinct_value_count = '', 
                            float64_stats = openapi_client.models.xps_float64_stats.XPSFloat64Stats(
                                histogram_buckets = [
                                    openapi_client.models.xps_float64_stats_histogram_bucket.XPSFloat64StatsHistogramBucket(
                                        count = '', 
                                        max = 1.337, 
                                        min = 1.337, )
                                    ], 
                                mean = 1.337, 
                                quantiles = [
                                    1.337
                                    ], 
                                standard_deviation = 1.337, ), 
                            null_value_count = '', 
                            string_stats = openapi_client.models.xps_string_stats.XPSStringStats(
                                top_unigram_stats = [
                                    openapi_client.models.xps_string_stats_unigram_stats.XPSStringStatsUnigramStats(
                                        count = '', 
                                        value = '', )
                                    ], ), 
                            struct_stats = openapi_client.models.xps_struct_stats.XPSStructStats(
                                field_stats = {
                                    'key' : 
                                    }, ), 
                            timestamp_stats = openapi_client.models.xps_timestamp_stats.XPSTimestampStats(
                                granular_stats = {
                                    'key' : openapi_client.models.xps_timestamp_stats_granular_stats.XPSTimestampStatsGranularStats(
                                        buckets = {
                                            'key' : ''
                                            }, )
                                    }, 
                                median_timestamp_nanos = '', ), 
                            valid_value_count = '', ), ), 
                    category_stats = openapi_client.models.xps_category_stats.XPSCategoryStats(), 
                    distinct_value_count = '', 
                    float64_stats = openapi_client.models.xps_float64_stats.XPSFloat64Stats(
                        mean = 1.337, 
                        standard_deviation = 1.337, ), 
                    null_value_count = '', 
                    string_stats = openapi_client.models.xps_string_stats.XPSStringStats(), 
                    struct_stats = openapi_client.models.xps_struct_stats.XPSStructStats(), 
                    timestamp_stats = openapi_client.models.xps_timestamp_stats.XPSTimestampStats(
                        median_timestamp_nanos = '', ), 
                    valid_value_count = '', )
            )
        else:
            return XPSArrayStats(
        )
        """

    def testXPSArrayStats(self):
        """Test XPSArrayStats"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
