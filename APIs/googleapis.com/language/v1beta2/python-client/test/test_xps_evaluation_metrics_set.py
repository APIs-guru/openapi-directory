# coding: utf-8

"""
    Cloud Natural Language API

    Provides natural language understanding technologies, such as sentiment analysis, entity recognition, entity sentiment analysis, and other text annotations, to developers.

    The version of the OpenAPI document: v1beta2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.xps_evaluation_metrics_set import XPSEvaluationMetricsSet

class TestXPSEvaluationMetricsSet(unittest.TestCase):
    """XPSEvaluationMetricsSet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> XPSEvaluationMetricsSet:
        """Test XPSEvaluationMetricsSet
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `XPSEvaluationMetricsSet`
        """
        model = XPSEvaluationMetricsSet()
        if include_optional:
            return XPSEvaluationMetricsSet(
                evaluation_metrics = [
                    openapi_client.models.xps_evaluation_metrics.XPSEvaluationMetrics(
                        annotation_spec_id_token = '', 
                        category = 56, 
                        evaluated_example_count = 56, 
                        image_classification_eval_metrics = openapi_client.models.xps_classification_evaluation_metrics.XPSClassificationEvaluationMetrics(
                            au_prc = 1.337, 
                            au_roc = 1.337, 
                            base_au_prc = 1.337, 
                            confidence_metrics_entries = [
                                openapi_client.models.xps_confidence_metrics_entry.XPSConfidenceMetricsEntry(
                                    confidence_threshold = 1.337, 
                                    f1_score = 1.337, 
                                    f1_score_at1 = 1.337, 
                                    false_negative_count = '', 
                                    false_positive_count = '', 
                                    false_positive_rate = 1.337, 
                                    false_positive_rate_at1 = 1.337, 
                                    position_threshold = 56, 
                                    precision = 1.337, 
                                    precision_at1 = 1.337, 
                                    recall = 1.337, 
                                    recall_at1 = 1.337, 
                                    true_negative_count = '', 
                                    true_positive_count = '', )
                                ], 
                            confusion_matrix = openapi_client.models.xps_confusion_matrix.XPSConfusionMatrix(
                                annotation_spec_id_token = [
                                    ''
                                    ], 
                                category = [
                                    56
                                    ], 
                                row = [
                                    openapi_client.models.xps_confusion_matrix_row.XPSConfusionMatrixRow(
                                        count = [
                                            ''
                                            ], 
                                        example_count = [
                                            56
                                            ], )
                                    ], 
                                sentiment_label = [
                                    56
                                    ], ), 
                            evaluated_examples_count = 56, 
                            log_loss = 1.337, ), 
                        image_object_detection_eval_metrics = openapi_client.models.xps_image_object_detection_evaluation_metrics.XPSImageObjectDetectionEvaluationMetrics(
                            bounding_box_mean_average_precision = 1.337, 
                            bounding_box_metrics_entries = [
                                openapi_client.models.xps_bounding_box_metrics_entry.XPSBoundingBoxMetricsEntry(
                                    iou_threshold = 1.337, 
                                    mean_average_precision = 1.337, )
                                ], 
                            evaluated_bounding_box_count = 56, ), 
                        image_segmentation_eval_metrics = openapi_client.models.xps_image_segmentation_evaluation_metrics.XPSImageSegmentationEvaluationMetrics(), 
                        label = '', 
                        regression_eval_metrics = openapi_client.models.xps_regression_evaluation_metrics.XPSRegressionEvaluationMetrics(
                            mean_absolute_error = 1.337, 
                            mean_absolute_percentage_error = 1.337, 
                            r_squared = 1.337, 
                            regression_metrics_entries = [
                                openapi_client.models.xps_regression_metrics_entry.XPSRegressionMetricsEntry(
                                    predicted_value = 1.337, 
                                    true_value = 1.337, )
                                ], 
                            root_mean_squared_error = 1.337, 
                            root_mean_squared_log_error = 1.337, ), 
                        tables_classification_eval_metrics = openapi_client.models.xps_classification_evaluation_metrics.XPSClassificationEvaluationMetrics(
                            au_prc = 1.337, 
                            au_roc = 1.337, 
                            base_au_prc = 1.337, 
                            evaluated_examples_count = 56, 
                            log_loss = 1.337, ), 
                        tables_eval_metrics = openapi_client.models.xps_tables_evaluation_metrics.XPSTablesEvaluationMetrics(
                            classification_metrics = openapi_client.models.xps_tables_classification_metrics.XPSTablesClassificationMetrics(
                                curve_metrics = [
                                    openapi_client.models.xps_tables_classification_metrics_curve_metrics.XPSTablesClassificationMetricsCurveMetrics(
                                        auc_pr = 1.337, 
                                        auc_roc = 1.337, 
                                        log_loss = 1.337, 
                                        position_threshold = 56, 
                                        value = '', )
                                    ], ), 
                            regression_metrics = openapi_client.models.xps_tables_regression_metrics.XPSTablesRegressionMetrics(
                                mean_absolute_error = 1.337, 
                                mean_absolute_percentage_error = 1.337, 
                                r_squared = 1.337, 
                                root_mean_squared_error = 1.337, 
                                root_mean_squared_log_error = 1.337, ), ), 
                        text_classification_eval_metrics = , 
                        text_extraction_eval_metrics = openapi_client.models.xps_text_extraction_evaluation_metrics.XPSTextExtractionEvaluationMetrics(
                            best_f1_confidence_metrics = openapi_client.models.xps_confidence_metrics_entry.XPSConfidenceMetricsEntry(
                                confidence_threshold = 1.337, 
                                f1_score = 1.337, 
                                f1_score_at1 = 1.337, 
                                false_negative_count = '', 
                                false_positive_count = '', 
                                false_positive_rate = 1.337, 
                                false_positive_rate_at1 = 1.337, 
                                position_threshold = 56, 
                                precision = 1.337, 
                                precision_at1 = 1.337, 
                                recall = 1.337, 
                                recall_at1 = 1.337, 
                                true_negative_count = '', 
                                true_positive_count = '', ), 
                            per_label_confidence_metrics = {
                                'key' : 
                                }, ), 
                        text_sentiment_eval_metrics = openapi_client.models.xps_text_sentiment_evaluation_metrics.XPSTextSentimentEvaluationMetrics(
                            f1_score = 1.337, 
                            linear_kappa = 1.337, 
                            mean_absolute_error = 1.337, 
                            mean_squared_error = 1.337, 
                            precision = 1.337, 
                            quadratic_kappa = 1.337, 
                            recall = 1.337, ), 
                        translation_eval_metrics = openapi_client.models.xps_translation_evaluation_metrics.XPSTranslationEvaluationMetrics(
                            base_bleu_score = 1.337, 
                            bleu_score = 1.337, ), 
                        video_action_recognition_eval_metrics = openapi_client.models.xps_video_action_recognition_evaluation_metrics.XPSVideoActionRecognitionEvaluationMetrics(
                            evaluated_action_count = 56, 
                            video_action_metrics_entries = [
                                openapi_client.models.xps_video_action_metrics_entry.XPSVideoActionMetricsEntry(
                                    mean_average_precision = 1.337, 
                                    precision_window_length = '', )
                                ], ), 
                        video_classification_eval_metrics = , 
                        video_object_tracking_eval_metrics = openapi_client.models.xps_video_object_tracking_evaluation_metrics.XPSVideoObjectTrackingEvaluationMetrics(
                            bounding_box_mean_average_precision = 1.337, 
                            evaluated_boundingbox_count = 56, 
                            evaluated_frame_count = 56, 
                            evaluated_track_count = 56, 
                            track_mean_average_precision = 1.337, 
                            track_mean_bounding_box_iou = 1.337, 
                            track_mean_mismatch_rate = 1.337, 
                            track_metrics_entries = [
                                openapi_client.models.xps_track_metrics_entry.XPSTrackMetricsEntry(
                                    iou_threshold = 1.337, 
                                    mean_bounding_box_iou = 1.337, 
                                    mean_mismatch_rate = 1.337, 
                                    mean_tracking_average_precision = 1.337, )
                                ], ), )
                    ],
                file_spec = openapi_client.models.xps_file_spec.XPSFileSpec(
                    directory_path = '', 
                    file_format = 'FILE_FORMAT_UNKNOWN', 
                    file_spec = '', 
                    single_file_path = '', ),
                num_evaluation_metrics = ''
            )
        else:
            return XPSEvaluationMetricsSet(
        )
        """

    def testXPSEvaluationMetricsSet(self):
        """Test XPSEvaluationMetricsSet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
