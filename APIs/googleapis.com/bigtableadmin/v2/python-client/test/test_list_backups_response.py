# coding: utf-8

"""
    Cloud Bigtable Admin API

    Administer your Cloud Bigtable tables and instances.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_backups_response import ListBackupsResponse

class TestListBackupsResponse(unittest.TestCase):
    """ListBackupsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListBackupsResponse:
        """Test ListBackupsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListBackupsResponse`
        """
        model = ListBackupsResponse()
        if include_optional:
            return ListBackupsResponse(
                backups = [
                    openapi_client.models.backup.Backup(
                        encryption_info = openapi_client.models.encryption_info.EncryptionInfo(
                            encryption_status = openapi_client.models.status.Status(
                                code = 56, 
                                details = [
                                    {
                                        'key' : null
                                        }
                                    ], 
                                message = '', ), 
                            encryption_type = 'ENCRYPTION_TYPE_UNSPECIFIED', 
                            kms_key_version = '', ), 
                        end_time = '', 
                        expire_time = '', 
                        name = '', 
                        size_bytes = '', 
                        source_backup = '', 
                        source_table = '', 
                        start_time = '', 
                        state = 'STATE_UNSPECIFIED', )
                    ],
                next_page_token = ''
            )
        else:
            return ListBackupsResponse(
        )
        """

    def testListBackupsResponse(self):
        """Test ListBackupsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
