# coding: utf-8

"""
    Cloud Bigtable Admin API

    Administer your Cloud Bigtable tables and instances.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_instance_metadata import UpdateInstanceMetadata

class TestUpdateInstanceMetadata(unittest.TestCase):
    """UpdateInstanceMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateInstanceMetadata:
        """Test UpdateInstanceMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateInstanceMetadata`
        """
        model = UpdateInstanceMetadata()
        if include_optional:
            return UpdateInstanceMetadata(
                finish_time = '',
                original_request = openapi_client.models.partial_update_instance_request.PartialUpdateInstanceRequest(
                    instance = openapi_client.models.instance.Instance(
                        create_time = '', 
                        display_name = '', 
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        satisfies_pzs = True, 
                        state = 'STATE_NOT_KNOWN', 
                        type = 'TYPE_UNSPECIFIED', ), 
                    update_mask = '', ),
                request_time = ''
            )
        else:
            return UpdateInstanceMetadata(
        )
        """

    def testUpdateInstanceMetadata(self):
        """Test UpdateInstanceMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
