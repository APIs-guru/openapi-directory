# coding: utf-8

"""
    Cloud Bigtable Admin API

    Administer your Cloud Bigtable tables and instances.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.gc_rule import GcRule

class TestGcRule(unittest.TestCase):
    """GcRule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GcRule:
        """Test GcRule
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GcRule`
        """
        model = GcRule()
        if include_optional:
            return GcRule(
                intersection = openapi_client.models.intersection.Intersection(
                    rules = [
                        openapi_client.models.gc_rule.GcRule(
                            max_age = '', 
                            max_num_versions = 56, 
                            union = openapi_client.models.union.Union(), )
                        ], ),
                max_age = '',
                max_num_versions = 56,
                union = openapi_client.models.union.Union(
                    rules = [
                        openapi_client.models.gc_rule.GcRule(
                            intersection = openapi_client.models.intersection.Intersection(), 
                            max_age = '', 
                            max_num_versions = 56, )
                        ], )
            )
        else:
            return GcRule(
        )
        """

    def testGcRule(self):
        """Test GcRule"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
