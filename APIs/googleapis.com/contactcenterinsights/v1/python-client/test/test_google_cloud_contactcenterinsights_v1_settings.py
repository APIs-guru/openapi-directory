# coding: utf-8

"""
    Contact Center AI Insights API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_contactcenterinsights_v1_settings import GoogleCloudContactcenterinsightsV1Settings

class TestGoogleCloudContactcenterinsightsV1Settings(unittest.TestCase):
    """GoogleCloudContactcenterinsightsV1Settings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudContactcenterinsightsV1Settings:
        """Test GoogleCloudContactcenterinsightsV1Settings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudContactcenterinsightsV1Settings`
        """
        model = GoogleCloudContactcenterinsightsV1Settings()
        if include_optional:
            return GoogleCloudContactcenterinsightsV1Settings(
                analysis_config = openapi_client.models.google_cloud_contactcenterinsights_v1_settings_analysis_config.GoogleCloudContactcenterinsightsV1SettingsAnalysisConfig(
                    annotator_selector = openapi_client.models.google_cloud_contactcenterinsights_v1_annotator_selector.GoogleCloudContactcenterinsightsV1AnnotatorSelector(
                        issue_models = [
                            ''
                            ], 
                        phrase_matchers = [
                            ''
                            ], 
                        run_entity_annotator = True, 
                        run_intent_annotator = True, 
                        run_interruption_annotator = True, 
                        run_issue_model_annotator = True, 
                        run_phrase_matcher_annotator = True, 
                        run_sentiment_annotator = True, 
                        run_silence_annotator = True, 
                        run_summarization_annotator = True, 
                        summarization_config = openapi_client.models.google_cloud_contactcenterinsights_v1_annotator_selector_summarization_config.GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig(
                            conversation_profile = '', 
                            summarization_model = 'SUMMARIZATION_MODEL_UNSPECIFIED', ), ), 
                    runtime_integration_analysis_percentage = 1.337, 
                    upload_conversation_analysis_percentage = 1.337, ),
                conversation_ttl = '',
                create_time = '',
                language_code = '',
                name = '',
                pubsub_notification_settings = {
                    'key' : ''
                    },
                redaction_config = openapi_client.models.google_cloud_contactcenterinsights_v1_redaction_config.GoogleCloudContactcenterinsightsV1RedactionConfig(
                    deidentify_template = '', 
                    inspect_template = '', ),
                speech_config = openapi_client.models.google_cloud_contactcenterinsights_v1_speech_config.GoogleCloudContactcenterinsightsV1SpeechConfig(
                    speech_recognizer = '', ),
                update_time = ''
            )
        else:
            return GoogleCloudContactcenterinsightsV1Settings(
        )
        """

    def testGoogleCloudContactcenterinsightsV1Settings(self):
        """Test GoogleCloudContactcenterinsightsV1Settings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
