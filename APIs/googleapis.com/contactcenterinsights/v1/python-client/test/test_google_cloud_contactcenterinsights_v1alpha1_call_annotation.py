# coding: utf-8

"""
    Contact Center AI Insights API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_contactcenterinsights_v1alpha1_call_annotation import GoogleCloudContactcenterinsightsV1alpha1CallAnnotation

class TestGoogleCloudContactcenterinsightsV1alpha1CallAnnotation(unittest.TestCase):
    """GoogleCloudContactcenterinsightsV1alpha1CallAnnotation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudContactcenterinsightsV1alpha1CallAnnotation:
        """Test GoogleCloudContactcenterinsightsV1alpha1CallAnnotation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudContactcenterinsightsV1alpha1CallAnnotation`
        """
        model = GoogleCloudContactcenterinsightsV1alpha1CallAnnotation()
        if include_optional:
            return GoogleCloudContactcenterinsightsV1alpha1CallAnnotation(
                annotation_end_boundary = openapi_client.models.google_cloud_contactcenterinsights_v1alpha1_annotation_boundary.GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary(
                    transcript_index = 56, 
                    word_index = 56, ),
                annotation_start_boundary = openapi_client.models.google_cloud_contactcenterinsights_v1alpha1_annotation_boundary.GoogleCloudContactcenterinsightsV1alpha1AnnotationBoundary(
                    transcript_index = 56, 
                    word_index = 56, ),
                channel_tag = 56,
                entity_mention_data = openapi_client.models.google_cloud_contactcenterinsights_v1alpha1_entity_mention_data.GoogleCloudContactcenterinsightsV1alpha1EntityMentionData(
                    entity_unique_id = '', 
                    sentiment = openapi_client.models.google_cloud_contactcenterinsights_v1alpha1_sentiment_data.GoogleCloudContactcenterinsightsV1alpha1SentimentData(
                        magnitude = 1.337, 
                        score = 1.337, ), 
                    type = 'MENTION_TYPE_UNSPECIFIED', ),
                hold_data = openapi_client.models.google_cloud_contactcenterinsights_v1alpha1_hold_data.GoogleCloudContactcenterinsightsV1alpha1HoldData(),
                intent_match_data = openapi_client.models.google_cloud_contactcenterinsights_v1alpha1_intent_match_data.GoogleCloudContactcenterinsightsV1alpha1IntentMatchData(
                    intent_unique_id = '', ),
                interruption_data = openapi_client.models.google_cloud_contactcenterinsights_v1alpha1_interruption_data.GoogleCloudContactcenterinsightsV1alpha1InterruptionData(),
                issue_match_data = openapi_client.models.google_cloud_contactcenterinsights_v1alpha1_issue_match_data.GoogleCloudContactcenterinsightsV1alpha1IssueMatchData(
                    issue_assignment = openapi_client.models.google_cloud_contactcenterinsights_v1alpha1_issue_assignment.GoogleCloudContactcenterinsightsV1alpha1IssueAssignment(
                        display_name = '', 
                        issue = '', 
                        score = 1.337, ), ),
                phrase_match_data = openapi_client.models.google_cloud_contactcenterinsights_v1alpha1_phrase_match_data.GoogleCloudContactcenterinsightsV1alpha1PhraseMatchData(
                    display_name = '', 
                    phrase_matcher = '', ),
                sentiment_data = openapi_client.models.google_cloud_contactcenterinsights_v1alpha1_sentiment_data.GoogleCloudContactcenterinsightsV1alpha1SentimentData(
                    magnitude = 1.337, 
                    score = 1.337, ),
                silence_data = openapi_client.models.google_cloud_contactcenterinsights_v1alpha1_silence_data.GoogleCloudContactcenterinsightsV1alpha1SilenceData()
            )
        else:
            return GoogleCloudContactcenterinsightsV1alpha1CallAnnotation(
        )
        """

    def testGoogleCloudContactcenterinsightsV1alpha1CallAnnotation(self):
        """Test GoogleCloudContactcenterinsightsV1alpha1CallAnnotation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
