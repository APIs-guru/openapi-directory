# coding: utf-8

"""
    Contact Center AI Insights API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_contactcenterinsights_v1_analysis_result import GoogleCloudContactcenterinsightsV1AnalysisResult

class TestGoogleCloudContactcenterinsightsV1AnalysisResult(unittest.TestCase):
    """GoogleCloudContactcenterinsightsV1AnalysisResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudContactcenterinsightsV1AnalysisResult:
        """Test GoogleCloudContactcenterinsightsV1AnalysisResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudContactcenterinsightsV1AnalysisResult`
        """
        model = GoogleCloudContactcenterinsightsV1AnalysisResult()
        if include_optional:
            return GoogleCloudContactcenterinsightsV1AnalysisResult(
                call_analysis_metadata = openapi_client.models.google_cloud_contactcenterinsights_v1_analysis_result_call_analysis_metadata.GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata(
                    annotations = [
                        openapi_client.models.google_cloud_contactcenterinsights_v1_call_annotation.GoogleCloudContactcenterinsightsV1CallAnnotation(
                            annotation_end_boundary = openapi_client.models.google_cloud_contactcenterinsights_v1_annotation_boundary.GoogleCloudContactcenterinsightsV1AnnotationBoundary(
                                transcript_index = 56, 
                                word_index = 56, ), 
                            annotation_start_boundary = openapi_client.models.google_cloud_contactcenterinsights_v1_annotation_boundary.GoogleCloudContactcenterinsightsV1AnnotationBoundary(
                                transcript_index = 56, 
                                word_index = 56, ), 
                            channel_tag = 56, 
                            entity_mention_data = openapi_client.models.google_cloud_contactcenterinsights_v1_entity_mention_data.GoogleCloudContactcenterinsightsV1EntityMentionData(
                                entity_unique_id = '', 
                                sentiment = openapi_client.models.google_cloud_contactcenterinsights_v1_sentiment_data.GoogleCloudContactcenterinsightsV1SentimentData(
                                    magnitude = 1.337, 
                                    score = 1.337, ), 
                                type = 'MENTION_TYPE_UNSPECIFIED', ), 
                            hold_data = openapi_client.models.google_cloud_contactcenterinsights_v1_hold_data.GoogleCloudContactcenterinsightsV1HoldData(), 
                            intent_match_data = openapi_client.models.google_cloud_contactcenterinsights_v1_intent_match_data.GoogleCloudContactcenterinsightsV1IntentMatchData(
                                intent_unique_id = '', ), 
                            interruption_data = openapi_client.models.google_cloud_contactcenterinsights_v1_interruption_data.GoogleCloudContactcenterinsightsV1InterruptionData(), 
                            issue_match_data = openapi_client.models.google_cloud_contactcenterinsights_v1_issue_match_data.GoogleCloudContactcenterinsightsV1IssueMatchData(
                                issue_assignment = openapi_client.models.google_cloud_contactcenterinsights_v1_issue_assignment.GoogleCloudContactcenterinsightsV1IssueAssignment(
                                    display_name = '', 
                                    issue = '', 
                                    score = 1.337, ), ), 
                            phrase_match_data = openapi_client.models.google_cloud_contactcenterinsights_v1_phrase_match_data.GoogleCloudContactcenterinsightsV1PhraseMatchData(
                                display_name = '', 
                                phrase_matcher = '', ), 
                            sentiment_data = openapi_client.models.google_cloud_contactcenterinsights_v1_sentiment_data.GoogleCloudContactcenterinsightsV1SentimentData(
                                magnitude = 1.337, 
                                score = 1.337, ), 
                            silence_data = openapi_client.models.google_cloud_contactcenterinsights_v1_silence_data.GoogleCloudContactcenterinsightsV1SilenceData(), )
                        ], 
                    entities = {
                        'key' : openapi_client.models.google_cloud_contactcenterinsights_v1_entity.GoogleCloudContactcenterinsightsV1Entity(
                            display_name = '', 
                            metadata = {
                                'key' : ''
                                }, 
                            salience = 1.337, 
                            type = 'TYPE_UNSPECIFIED', )
                        }, 
                    intents = {
                        'key' : openapi_client.models.google_cloud_contactcenterinsights_v1_intent.GoogleCloudContactcenterinsightsV1Intent(
                            display_name = '', 
                            id = '', )
                        }, 
                    issue_model_result = openapi_client.models.google_cloud_contactcenterinsights_v1_issue_model_result.GoogleCloudContactcenterinsightsV1IssueModelResult(
                        issue_model = '', 
                        issues = [
                            openapi_client.models.google_cloud_contactcenterinsights_v1_issue_assignment.GoogleCloudContactcenterinsightsV1IssueAssignment(
                                display_name = '', 
                                issue = '', 
                                score = 1.337, )
                            ], ), 
                    phrase_matchers = {
                        'key' : openapi_client.models.google_cloud_contactcenterinsights_v1_phrase_match_data.GoogleCloudContactcenterinsightsV1PhraseMatchData(
                            display_name = '', 
                            phrase_matcher = '', )
                        }, 
                    sentiments = [
                        openapi_client.models.google_cloud_contactcenterinsights_v1_conversation_level_sentiment.GoogleCloudContactcenterinsightsV1ConversationLevelSentiment(
                            channel_tag = 56, )
                        ], ),
                end_time = ''
            )
        else:
            return GoogleCloudContactcenterinsightsV1AnalysisResult(
        )
        """

    def testGoogleCloudContactcenterinsightsV1AnalysisResult(self):
        """Test GoogleCloudContactcenterinsightsV1AnalysisResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
