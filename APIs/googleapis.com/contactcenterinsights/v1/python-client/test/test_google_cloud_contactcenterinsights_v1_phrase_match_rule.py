# coding: utf-8

"""
    Contact Center AI Insights API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_contactcenterinsights_v1_phrase_match_rule import GoogleCloudContactcenterinsightsV1PhraseMatchRule

class TestGoogleCloudContactcenterinsightsV1PhraseMatchRule(unittest.TestCase):
    """GoogleCloudContactcenterinsightsV1PhraseMatchRule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudContactcenterinsightsV1PhraseMatchRule:
        """Test GoogleCloudContactcenterinsightsV1PhraseMatchRule
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudContactcenterinsightsV1PhraseMatchRule`
        """
        model = GoogleCloudContactcenterinsightsV1PhraseMatchRule()
        if include_optional:
            return GoogleCloudContactcenterinsightsV1PhraseMatchRule(
                config = openapi_client.models.google_cloud_contactcenterinsights_v1_phrase_match_rule_config.GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig(
                    exact_match_config = openapi_client.models.google_cloud_contactcenterinsights_v1_exact_match_config.GoogleCloudContactcenterinsightsV1ExactMatchConfig(
                        case_sensitive = True, ), ),
                negated = True,
                query = ''
            )
        else:
            return GoogleCloudContactcenterinsightsV1PhraseMatchRule(
        )
        """

    def testGoogleCloudContactcenterinsightsV1PhraseMatchRule(self):
        """Test GoogleCloudContactcenterinsightsV1PhraseMatchRule"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
