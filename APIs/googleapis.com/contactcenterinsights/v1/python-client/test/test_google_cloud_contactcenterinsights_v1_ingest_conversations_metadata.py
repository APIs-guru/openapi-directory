# coding: utf-8

"""
    Contact Center AI Insights API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_contactcenterinsights_v1_ingest_conversations_metadata import GoogleCloudContactcenterinsightsV1IngestConversationsMetadata

class TestGoogleCloudContactcenterinsightsV1IngestConversationsMetadata(unittest.TestCase):
    """GoogleCloudContactcenterinsightsV1IngestConversationsMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudContactcenterinsightsV1IngestConversationsMetadata:
        """Test GoogleCloudContactcenterinsightsV1IngestConversationsMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudContactcenterinsightsV1IngestConversationsMetadata`
        """
        model = GoogleCloudContactcenterinsightsV1IngestConversationsMetadata()
        if include_optional:
            return GoogleCloudContactcenterinsightsV1IngestConversationsMetadata(
                create_time = '',
                end_time = '',
                ingest_conversations_stats = openapi_client.models.google_cloud_contactcenterinsights_v1_ingest_conversations_metadata_ingest_conversations_stats.GoogleCloudContactcenterinsightsV1IngestConversationsMetadataIngestConversationsStats(
                    duplicates_skipped_count = 56, 
                    failed_ingest_count = 56, 
                    processed_object_count = 56, 
                    successful_ingest_count = 56, ),
                partial_errors = [
                    openapi_client.models.google_rpc_status.GoogleRpcStatus(
                        code = 56, 
                        details = [
                            {
                                'key' : null
                                }
                            ], 
                        message = '', )
                    ],
                request = openapi_client.models.google_cloud_contactcenterinsights_v1_ingest_conversations_request.GoogleCloudContactcenterinsightsV1IngestConversationsRequest(
                    conversation_config = openapi_client.models.google_cloud_contactcenterinsights_v1_ingest_conversations_request_conversation_config.GoogleCloudContactcenterinsightsV1IngestConversationsRequestConversationConfig(
                        agent_channel = 56, 
                        agent_id = '', 
                        customer_channel = 56, ), 
                    gcs_source = openapi_client.models.google_cloud_contactcenterinsights_v1_ingest_conversations_request_gcs_source.GoogleCloudContactcenterinsightsV1IngestConversationsRequestGcsSource(
                        bucket_object_type = 'BUCKET_OBJECT_TYPE_UNSPECIFIED', 
                        bucket_uri = '', 
                        custom_metadata_keys = [
                            ''
                            ], 
                        metadata_bucket_uri = '', ), 
                    parent = '', 
                    redaction_config = openapi_client.models.google_cloud_contactcenterinsights_v1_redaction_config.GoogleCloudContactcenterinsightsV1RedactionConfig(
                        deidentify_template = '', 
                        inspect_template = '', ), 
                    speech_config = openapi_client.models.google_cloud_contactcenterinsights_v1_speech_config.GoogleCloudContactcenterinsightsV1SpeechConfig(
                        speech_recognizer = '', ), 
                    transcript_object_config = openapi_client.models.google_cloud_contactcenterinsights_v1_ingest_conversations_request_transcript_object_config.GoogleCloudContactcenterinsightsV1IngestConversationsRequestTranscriptObjectConfig(
                        medium = 'MEDIUM_UNSPECIFIED', ), )
            )
        else:
            return GoogleCloudContactcenterinsightsV1IngestConversationsMetadata(
        )
        """

    def testGoogleCloudContactcenterinsightsV1IngestConversationsMetadata(self):
        """Test GoogleCloudContactcenterinsightsV1IngestConversationsMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
