# coding: utf-8

"""
    Dataproc Metastore API

    The Dataproc Metastore API is used to manage the lifecycle and configuration of metastore services.

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.database_dump import DatabaseDump

class TestDatabaseDump(unittest.TestCase):
    """DatabaseDump unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DatabaseDump:
        """Test DatabaseDump
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DatabaseDump`
        """
        model = DatabaseDump()
        if include_optional:
            return DatabaseDump(
                database_type = 'DATABASE_TYPE_UNSPECIFIED',
                gcs_uri = '',
                source_database = '',
                type = 'TYPE_UNSPECIFIED'
            )
        else:
            return DatabaseDump(
        )
        """

    def testDatabaseDump(self):
        """Test DatabaseDump"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
