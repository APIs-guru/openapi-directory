# coding: utf-8

"""
    Dataproc Metastore API

    The Dataproc Metastore API is used to manage the lifecycle and configuration of metastore services.

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.projects_api import ProjectsApi


class TestProjectsApi(unittest.TestCase):
    """ProjectsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ProjectsApi()

    def tearDown(self) -> None:
        pass

    def test_metastore_projects_locations_federations_create(self) -> None:
        """Test case for metastore_projects_locations_federations_create

        """
        pass

    def test_metastore_projects_locations_federations_list(self) -> None:
        """Test case for metastore_projects_locations_federations_list

        """
        pass

    def test_metastore_projects_locations_list(self) -> None:
        """Test case for metastore_projects_locations_list

        """
        pass

    def test_metastore_projects_locations_operations_cancel(self) -> None:
        """Test case for metastore_projects_locations_operations_cancel

        """
        pass

    def test_metastore_projects_locations_operations_list(self) -> None:
        """Test case for metastore_projects_locations_operations_list

        """
        pass

    def test_metastore_projects_locations_services_alter_location(self) -> None:
        """Test case for metastore_projects_locations_services_alter_location

        """
        pass

    def test_metastore_projects_locations_services_alter_table_properties(self) -> None:
        """Test case for metastore_projects_locations_services_alter_table_properties

        """
        pass

    def test_metastore_projects_locations_services_backups_create(self) -> None:
        """Test case for metastore_projects_locations_services_backups_create

        """
        pass

    def test_metastore_projects_locations_services_backups_list(self) -> None:
        """Test case for metastore_projects_locations_services_backups_list

        """
        pass

    def test_metastore_projects_locations_services_create(self) -> None:
        """Test case for metastore_projects_locations_services_create

        """
        pass

    def test_metastore_projects_locations_services_databases_tables_get_iam_policy(self) -> None:
        """Test case for metastore_projects_locations_services_databases_tables_get_iam_policy

        """
        pass

    def test_metastore_projects_locations_services_databases_tables_set_iam_policy(self) -> None:
        """Test case for metastore_projects_locations_services_databases_tables_set_iam_policy

        """
        pass

    def test_metastore_projects_locations_services_databases_tables_test_iam_permissions(self) -> None:
        """Test case for metastore_projects_locations_services_databases_tables_test_iam_permissions

        """
        pass

    def test_metastore_projects_locations_services_export_metadata(self) -> None:
        """Test case for metastore_projects_locations_services_export_metadata

        """
        pass

    def test_metastore_projects_locations_services_list(self) -> None:
        """Test case for metastore_projects_locations_services_list

        """
        pass

    def test_metastore_projects_locations_services_metadata_imports_create(self) -> None:
        """Test case for metastore_projects_locations_services_metadata_imports_create

        """
        pass

    def test_metastore_projects_locations_services_metadata_imports_get(self) -> None:
        """Test case for metastore_projects_locations_services_metadata_imports_get

        """
        pass

    def test_metastore_projects_locations_services_metadata_imports_list(self) -> None:
        """Test case for metastore_projects_locations_services_metadata_imports_list

        """
        pass

    def test_metastore_projects_locations_services_metadata_imports_patch(self) -> None:
        """Test case for metastore_projects_locations_services_metadata_imports_patch

        """
        pass

    def test_metastore_projects_locations_services_migration_executions_delete(self) -> None:
        """Test case for metastore_projects_locations_services_migration_executions_delete

        """
        pass

    def test_metastore_projects_locations_services_move_table_to_database(self) -> None:
        """Test case for metastore_projects_locations_services_move_table_to_database

        """
        pass

    def test_metastore_projects_locations_services_query_metadata(self) -> None:
        """Test case for metastore_projects_locations_services_query_metadata

        """
        pass

    def test_metastore_projects_locations_services_remove_iam_policy(self) -> None:
        """Test case for metastore_projects_locations_services_remove_iam_policy

        """
        pass

    def test_metastore_projects_locations_services_restore(self) -> None:
        """Test case for metastore_projects_locations_services_restore

        """
        pass


if __name__ == '__main__':
    unittest.main()
