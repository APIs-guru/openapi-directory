# coding: utf-8

"""
    Dataproc Metastore API

    The Dataproc Metastore API is used to manage the lifecycle and configuration of metastore services.

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.network_config import NetworkConfig

class TestNetworkConfig(unittest.TestCase):
    """NetworkConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NetworkConfig:
        """Test NetworkConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NetworkConfig`
        """
        model = NetworkConfig()
        if include_optional:
            return NetworkConfig(
                consumers = [
                    openapi_client.models.consumer.Consumer(
                        endpoint_location = '', 
                        endpoint_uri = '', 
                        subnetwork = '', )
                    ],
                custom_routes_enabled = True
            )
        else:
            return NetworkConfig(
        )
        """

    def testNetworkConfig(self):
        """Test NetworkConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
