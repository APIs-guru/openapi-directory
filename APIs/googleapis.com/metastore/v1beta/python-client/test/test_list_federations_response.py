# coding: utf-8

"""
    Dataproc Metastore API

    The Dataproc Metastore API is used to manage the lifecycle and configuration of metastore services.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_federations_response import ListFederationsResponse

class TestListFederationsResponse(unittest.TestCase):
    """ListFederationsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListFederationsResponse:
        """Test ListFederationsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListFederationsResponse`
        """
        model = ListFederationsResponse()
        if include_optional:
            return ListFederationsResponse(
                federations = [
                    openapi_client.models.federation.Federation(
                        backend_metastores = {
                            'key' : openapi_client.models.backend_metastore.BackendMetastore(
                                metastore_type = 'METASTORE_TYPE_UNSPECIFIED', 
                                name = '', )
                            }, 
                        create_time = '', 
                        endpoint_uri = '', 
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        state = 'STATE_UNSPECIFIED', 
                        state_message = '', 
                        uid = '', 
                        update_time = '', 
                        version = '', )
                    ],
                next_page_token = '',
                unreachable = [
                    ''
                    ]
            )
        else:
            return ListFederationsResponse(
        )
        """

    def testListFederationsResponse(self):
        """Test ListFederationsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
