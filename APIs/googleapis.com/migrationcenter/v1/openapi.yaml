openapi: 3.0.0
servers:
  - url: https://migrationcenter.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Migration Center API
  version: v1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://migrationcenter.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: migrationcenter
externalDocs:
  url: https://cloud.google.com/migration-center
tags:
  - name: projects
paths:
  /v1/{group}:addAssets:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Adds assets to a group.
      operationId: migrationcenter.projects.locations.groups.addAssets
      parameters:
        - description: Required. Group reference.
          in: path
          name: group
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddAssetsToGroupRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{group}:removeAssets:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Removes assets from a group.
      operationId: migrationcenter.projects.locations.groups.removeAssets
      parameters:
        - description: Required. Group reference.
          in: path
          name: group
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoveAssetsFromGroupRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:
    delete:
      description: Deletes a source.
      operationId: migrationcenter.projects.locations.sources.delete
      parameters:
        - description: Required. Name of the resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets the details of an error frame.
      operationId: migrationcenter.projects.locations.sources.errorFrames.get
      parameters:
        - description: "Required. The name of the frame to retrieve. Format: projects/{project}/locations/{location}/sources/{source}/errorFrames/{error_frame}"
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. An optional view mode to control the level of details for the frame. The default is a basic frame view.
          in: query
          name: view
          schema:
            enum:
              - ERROR_FRAME_VIEW_UNSPECIFIED
              - ERROR_FRAME_VIEW_BASIC
              - ERROR_FRAME_VIEW_FULL
              - REPORT_VIEW_STANDARD
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorFrame"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates the parameters of a source.
      operationId: migrationcenter.projects.locations.sources.patch
      parameters:
        - description: Output only. The full name of the source.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Required. Field mask is used to specify the fields to be overwritten in the `Source` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Source"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: migrationcenter.projects.locations.list
      parameters:
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results to return. If not set, the service selects a default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}/operations:
    get:
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: migrationcenter.projects.locations.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: migrationcenter.projects.locations.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOperationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:run:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Runs an import job.
      operationId: migrationcenter.projects.locations.importJobs.run
      parameters:
        - description: Required. The name of the import job to run.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunImportJobRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:validate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Validates an import job.
      operationId: migrationcenter.projects.locations.importJobs.validate
      parameters:
        - description: Required. The name of the import job to validate.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidateImportJobRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/assets:
    get:
      description: Lists all the assets in a given project and location.
      operationId: migrationcenter.projects.locations.assets.list
      parameters:
        - description: Required. Parent value for `ListAssetsRequest`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filtering results.
          in: query
          name: filter
          schema:
            type: string
        - description: Field to sort by. See https://google.aip.dev/132#ordering for more details.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return.
          in: query
          name: pageToken
          schema:
            type: string
        - description: View of the assets. Defaults to BASIC.
          in: query
          name: view
          schema:
            enum:
              - ASSET_VIEW_UNSPECIFIED
              - ASSET_VIEW_BASIC
              - ASSET_VIEW_FULL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAssetsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/assets:aggregateValues:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Aggregates the requested fields based on provided function.
      operationId: migrationcenter.projects.locations.assets.aggregateValues
      parameters:
        - description: Required. Parent value for `AggregateAssetsValuesRequest`.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AggregateAssetsValuesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AggregateAssetsValuesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/assets:batchDelete:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Deletes list of Assets.
      operationId: migrationcenter.projects.locations.assets.batchDelete
      parameters:
        - description: Required. Parent value for batch asset delete.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDeleteAssetsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/assets:batchUpdate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates the parameters of a list of assets.
      operationId: migrationcenter.projects.locations.assets.batchUpdate
      parameters:
        - description: Required. Parent value for batch asset update.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchUpdateAssetsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchUpdateAssetsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/assets:reportAssetFrames:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Reports a set of frames.
      operationId: migrationcenter.projects.locations.assets.reportAssetFrames
      parameters:
        - description: Required. Parent of the resource.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. Reference to a source.
          in: query
          name: source
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Frames"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportAssetFramesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/errorFrames:
    get:
      description: Lists all error frames in a given source and location.
      operationId: migrationcenter.projects.locations.sources.errorFrames.list
      parameters:
        - description: Required. Parent value (the source) for `ListErrorFramesRequest`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Optional. An optional view mode to control the level of details of each error frame. The default is a BASIC frame view.
          in: query
          name: view
          schema:
            enum:
              - ERROR_FRAME_VIEW_UNSPECIFIED
              - ERROR_FRAME_VIEW_BASIC
              - ERROR_FRAME_VIEW_FULL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListErrorFramesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/groups:
    get:
      description: Lists all groups in a given project and location.
      operationId: migrationcenter.projects.locations.groups.list
      parameters:
        - description: Required. Parent value for `ListGroupsRequest`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filtering results.
          in: query
          name: filter
          schema:
            type: string
        - description: Field to sort by. See https://google.aip.dev/132#ordering for more details.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGroupsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new group in a given project and location.
      operationId: migrationcenter.projects.locations.groups.create
      parameters:
        - description: Required. Value for parent.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`."
          in: query
          name: groupId
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Group"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/importDataFiles:
    get:
      description: List import data files.
      operationId: migrationcenter.projects.locations.importJobs.importDataFiles.list
      parameters:
        - description: Required. Name of the parent of the `ImportDataFiles` resource.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filtering results.
          in: query
          name: filter
          schema:
            type: string
        - description: Field to sort by. See https://google.aip.dev/132#ordering for more details.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of data files to return. The service may return fewer than this value. If unspecified, at most 500 data files will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListImportDataFiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListImportDataFiles` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListImportDataFilesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an import data file.
      operationId: migrationcenter.projects.locations.importJobs.importDataFiles.create
      parameters:
        - description: Required. Name of the parent of the ImportDataFile.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. The ID of the new data file.
          in: query
          name: importDataFileId
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportDataFile"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/importJobs:
    get:
      description: Lists all import jobs.
      operationId: migrationcenter.projects.locations.importJobs.list
      parameters:
        - description: Required. Parent value for `ListImportJobsRequest`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filtering results.
          in: query
          name: filter
          schema:
            type: string
        - description: Field to sort by. See https://google.aip.dev/132#ordering for more details.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Optional. The level of details of each import job. Default value is BASIC.
          in: query
          name: view
          schema:
            enum:
              - IMPORT_JOB_VIEW_UNSPECIFIED
              - IMPORT_JOB_VIEW_BASIC
              - IMPORT_JOB_VIEW_FULL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListImportJobsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an import job.
      operationId: migrationcenter.projects.locations.importJobs.create
      parameters:
        - description: Required. Value for parent.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. ID of the import job.
          in: query
          name: importJobId
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportJob"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/preferenceSets:
    get:
      description: Lists all the preference sets in a given project and location.
      operationId: migrationcenter.projects.locations.preferenceSets.list
      parameters:
        - description: Required. Parent value for `ListPreferenceSetsRequest`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Field to sort by. See https://google.aip.dev/132#ordering for more details.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Server may return fewer items than requested. If unspecified, at most 500 preference sets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPreferenceSetsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new preference set in a given project and location.
      operationId: migrationcenter.projects.locations.preferenceSets.create
      parameters:
        - description: Required. Value for parent.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. User specified ID for the preference set. It will become the last component of the preference set name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.
          in: query
          name: preferenceSetId
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PreferenceSet"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/reportConfigs:
    get:
      description: Lists ReportConfigs in a given project and location.
      operationId: migrationcenter.projects.locations.reportConfigs.list
      parameters:
        - description: Required. Parent value for `ListReportConfigsRequest`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filtering results.
          in: query
          name: filter
          schema:
            type: string
        - description: Field to sort by. See https://google.aip.dev/132#ordering for more details.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListReportConfigsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a report configuration.
      operationId: migrationcenter.projects.locations.reportConfigs.create
      parameters:
        - description: Required. Value for parent.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Required. User specified ID for the report config. It will become the last component of the report config name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?."
          in: query
          name: reportConfigId
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReportConfig"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/reports:
    get:
      description: Lists Reports in a given ReportConfig.
      operationId: migrationcenter.projects.locations.reportConfigs.reports.list
      parameters:
        - description: Required. Parent value for `ListReportsRequest`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filtering results.
          in: query
          name: filter
          schema:
            type: string
        - description: Field to sort by. See https://google.aip.dev/132#ordering for more details.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results that the server should return.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Determines what information to retrieve for each Report.
          in: query
          name: view
          schema:
            enum:
              - REPORT_VIEW_UNSPECIFIED
              - REPORT_VIEW_BASIC
              - REPORT_VIEW_FULL
              - REPORT_VIEW_STANDARD
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListReportsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a report.
      operationId: migrationcenter.projects.locations.reportConfigs.reports.create
      parameters:
        - description: Required. Value for parent.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Required. User specified id for the report. It will become the last component of the report name. The id must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The id must match the regular expression: [a-z]([a-z0-9-]{0,61}[a-z0-9])?."
          in: query
          name: reportId
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Report"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/sources:
    get:
      description: Lists all the sources in a given project and location.
      operationId: migrationcenter.projects.locations.sources.list
      parameters:
        - description: Required. Parent value for `ListSourcesRequest`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filtering results.
          in: query
          name: filter
          schema:
            type: string
        - description: Field to sort by. See https://google.aip.dev/132#ordering for more details.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. The server may return fewer items than requested. If unspecified, the server will pick an appropriate default value.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results that the server should return.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSourcesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new source in a given project and location.
      operationId: migrationcenter.projects.locations.sources.create
      parameters:
        - description: Required. Value for parent.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: "Required. User specified ID for the source. It will become the last component of the source name. The ID must be unique within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`."
          in: query
          name: sourceId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Source"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AddAssetsToGroupRequest:
      description: A request to add assets to a group.
      properties:
        allowExisting:
          description: Optional. When this value is set to `false` and one of the given assets is already an existing member of the group, the operation fails with an `Already Exists` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.
          type: boolean
        assets:
          $ref: "#/components/schemas/AssetList"
          description: Required. List of assets to be added. The maximum number of assets that can be added in a single request is 1000.
        requestId:
          description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
      type: object
    AggregateAssetsValuesRequest:
      description: A request to aggregate one or more values.
      properties:
        aggregations:
          description: Array of aggregations to perform. Up to 25 aggregations can be defined.
          items:
            $ref: "#/components/schemas/Aggregation"
          type: array
        filter:
          description: The aggregation will be performed on assets that match the provided filter.
          type: string
      type: object
    AggregateAssetsValuesResponse:
      description: A response to a request to aggregated assets values.
      properties:
        results:
          description: The aggregation results.
          items:
            $ref: "#/components/schemas/AggregationResult"
          type: array
      type: object
    Aggregation:
      description: Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation.
      properties:
        count:
          $ref: "#/components/schemas/AggregationCount"
          description: Count the number of matching objects.
        field:
          description: The name of the field on which to aggregate.
          type: string
        frequency:
          $ref: "#/components/schemas/AggregationFrequency"
          description: Creates a frequency distribution of all field values.
        histogram:
          $ref: "#/components/schemas/AggregationHistogram"
          description: Creates a bucketed histogram of field values.
        sum:
          $ref: "#/components/schemas/AggregationSum"
          description: Sum over a numeric field.
      type: object
    AggregationCount:
      description: Object count.
      properties: {}
      type: object
    AggregationFrequency:
      description: Frequency distribution of all field values.
      properties: {}
      type: object
    AggregationHistogram:
      description: Histogram of bucketed assets counts by field value.
      properties:
        lowerBounds:
          description: Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.
          items:
            format: double
            type: number
          type: array
      type: object
    AggregationResult:
      description: Message describing a result of an aggregation.
      properties:
        count:
          $ref: "#/components/schemas/AggregationResultCount"
        field:
          type: string
        frequency:
          $ref: "#/components/schemas/AggregationResultFrequency"
        histogram:
          $ref: "#/components/schemas/AggregationResultHistogram"
        sum:
          $ref: "#/components/schemas/AggregationResultSum"
      type: object
    AggregationResultCount:
      description: The result of a count aggregation.
      properties:
        value:
          format: int64
          type: string
      type: object
    AggregationResultFrequency:
      description: The result of a frequency distribution aggregation.
      properties:
        values:
          additionalProperties:
            format: int64
            type: string
          type: object
      type: object
    AggregationResultHistogram:
      description: The result of a bucketed histogram aggregation.
      properties:
        buckets:
          description: Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.
          items:
            $ref: "#/components/schemas/AggregationResultHistogramBucket"
          type: array
      type: object
    AggregationResultHistogramBucket:
      description: A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.
      properties:
        count:
          description: Count of items in the bucket.
          format: int64
          type: string
        lowerBound:
          description: Lower bound - inclusive.
          format: double
          type: number
        upperBound:
          description: Upper bound - exclusive.
          format: double
          type: number
      type: object
    AggregationResultSum:
      description: The result of a sum aggregation.
      properties:
        value:
          format: double
          type: number
      type: object
    AggregationSum:
      description: Sum of field values.
      properties: {}
      type: object
    Asset:
      description: An asset represents a resource in your environment. Asset types include virtual machines and databases.
      properties:
        assignedGroups:
          description: Output only. The list of groups that the asset is assigned to.
          items:
            type: string
          readOnly: true
          type: array
        attributes:
          additionalProperties:
            type: string
          description: Generic asset attributes.
          type: object
        createTime:
          description: Output only. The timestamp when the asset was created.
          format: google-datetime
          readOnly: true
          type: string
        insightList:
          $ref: "#/components/schemas/InsightList"
          description: Output only. The list of insights associated with the asset.
          readOnly: true
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs.
          type: object
        machineDetails:
          $ref: "#/components/schemas/MachineDetails"
          description: Output only. Asset information specific for virtual and physical machines.
          readOnly: true
        name:
          description: Output only. The full name of the asset.
          readOnly: true
          type: string
        performanceData:
          $ref: "#/components/schemas/AssetPerformanceData"
          description: Output only. Performance data for the asset.
          readOnly: true
        sources:
          description: Output only. The list of sources contributing to the asset.
          items:
            type: string
          readOnly: true
          type: array
        updateTime:
          description: Output only. The timestamp when the asset was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    AssetFrame:
      description: Contains data reported from an inventory source on an asset.
      properties:
        attributes:
          additionalProperties:
            type: string
          description: Generic asset attributes.
          type: object
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs.
          type: object
        machineDetails:
          $ref: "#/components/schemas/MachineDetails"
          description: Asset information specific for virtual machines.
        performanceSamples:
          description: Asset performance data samples. Samples that are from more than 40 days ago or after tomorrow are ignored.
          items:
            $ref: "#/components/schemas/PerformanceSample"
          type: array
        reportTime:
          description: The time the data was reported.
          format: google-datetime
          type: string
        traceToken:
          description: Optional. Trace token is optionally provided to assist with debugging and traceability.
          type: string
      type: object
    AssetList:
      description: Lists the asset IDs of all assets.
      properties:
        assetIds:
          description: Required. A list of asset IDs
          items:
            type: string
          type: array
      type: object
    AssetPerformanceData:
      description: Performance data for an asset.
      properties:
        dailyResourceUsageAggregations:
          description: Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days. Aggregations are sorted from oldest to most recent.
          items:
            $ref: "#/components/schemas/DailyResourceUsageAggregation"
          type: array
      type: object
    AwsEc2PlatformDetails:
      description: AWS EC2 specific details.
      properties:
        location:
          description: The location of the machine in the AWS format.
          type: string
        machineTypeLabel:
          description: AWS platform's machine type label.
          type: string
      type: object
    AzureVmPlatformDetails:
      description: Azure VM specific details.
      properties:
        location:
          description: The location of the machine in the Azure format.
          type: string
        machineTypeLabel:
          description: Azure platform's machine type label.
          type: string
        provisioningState:
          description: Azure platform's provisioning state.
          type: string
      type: object
    BatchDeleteAssetsRequest:
      description: A request to delete a list of asset.
      properties:
        allowMissing:
          description: Optional. When this value is set to `true` the request is a no-op for non-existing assets. See https://google.aip.dev/135#delete-if-existing for additional details. Default value is `false`.
          type: boolean
        names:
          description: "Required. The IDs of the assets to delete. A maximum of 1000 assets can be deleted in a batch. Format: projects/{project}/locations/{location}/assets/{name}."
          items:
            type: string
          type: array
      type: object
    BatchUpdateAssetsRequest:
      description: A request to update a list of assets.
      properties:
        requests:
          description: Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.
          items:
            $ref: "#/components/schemas/UpdateAssetRequest"
          type: array
      type: object
    BatchUpdateAssetsResponse:
      description: Response for updating a list of assets.
      properties:
        assets:
          description: Update asset content. The content only includes values after field mask being applied.
          items:
            $ref: "#/components/schemas/Asset"
          type: array
      type: object
    BiosDetails:
      description: Details about the BIOS.
      properties:
        biosName:
          deprecated: true
          description: BIOS name. This fields is deprecated. Please use the `id` field instead.
          type: string
        id:
          description: BIOS ID.
          type: string
        manufacturer:
          description: BIOS manufacturer.
          type: string
        releaseDate:
          $ref: "#/components/schemas/Date"
          description: BIOS release date.
        smbiosUuid:
          description: SMBIOS UUID.
          type: string
        version:
          description: BIOS version.
          type: string
      type: object
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    ComputeEngineMigrationTarget:
      description: Compute engine migration target.
      properties:
        shape:
          $ref: "#/components/schemas/ComputeEngineShapeDescriptor"
          description: Description of the suggested shape for the migration target.
      type: object
    ComputeEnginePreferences:
      description: The user preferences relating to Compute Engine target platform.
      properties:
        licenseType:
          description: License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.
          enum:
            - LICENSE_TYPE_UNSPECIFIED
            - LICENSE_TYPE_DEFAULT
            - LICENSE_TYPE_BRING_YOUR_OWN_LICENSE
          type: string
        machinePreferences:
          $ref: "#/components/schemas/MachinePreferences"
          description: Preferences concerning the machine types to consider on Compute Engine.
        persistentDiskType:
          description: Persistent disk type to use. If unspecified (default), all types are considered, based on available usage data.
          enum:
            - PERSISTENT_DISK_TYPE_UNSPECIFIED
            - PERSISTENT_DISK_TYPE_STANDARD
            - PERSISTENT_DISK_TYPE_BALANCED
            - PERSISTENT_DISK_TYPE_SSD
          type: string
      type: object
    ComputeEngineShapeDescriptor:
      description: Compute Engine target shape descriptor.
      properties:
        logicalCoreCount:
          description: Number of logical cores.
          format: int32
          type: integer
        machineType:
          description: Compute Engine machine type.
          type: string
        memoryMb:
          description: Memory in mebibytes.
          format: int32
          type: integer
        physicalCoreCount:
          description: Number of physical cores.
          format: int32
          type: integer
        series:
          description: Compute Engine machine series.
          type: string
        storage:
          description: Compute Engine storage. Never empty.
          items:
            $ref: "#/components/schemas/ComputeStorageDescriptor"
          type: array
      type: object
    ComputeStorageDescriptor:
      description: Compute Engine storage option descriptor.
      properties:
        sizeGb:
          description: Disk size in GiB.
          format: int32
          type: integer
        type:
          description: Disk type backing the storage.
          enum:
            - PERSISTENT_DISK_TYPE_UNSPECIFIED
            - PERSISTENT_DISK_TYPE_STANDARD
            - PERSISTENT_DISK_TYPE_BALANCED
            - PERSISTENT_DISK_TYPE_SSD
          type: string
      type: object
    CpuUsageSample:
      description: CPU usage sample.
      properties:
        utilizedPercentage:
          description: Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.
          format: float
          type: number
      type: object
    DailyResourceUsageAggregation:
      description: Usage data aggregation for a single day.
      properties:
        cpu:
          $ref: "#/components/schemas/DailyResourceUsageAggregationCPU"
          description: CPU usage.
        date:
          $ref: "#/components/schemas/Date"
          description: Aggregation date. Day boundaries are at midnight UTC.
        disk:
          $ref: "#/components/schemas/DailyResourceUsageAggregationDisk"
          description: Disk usage.
        memory:
          $ref: "#/components/schemas/DailyResourceUsageAggregationMemory"
          description: Memory usage.
        network:
          $ref: "#/components/schemas/DailyResourceUsageAggregationNetwork"
          description: Network usage.
      type: object
    DailyResourceUsageAggregationCPU:
      description: Statistical aggregation of CPU usage.
      properties:
        utilizationPercentage:
          $ref: "#/components/schemas/DailyResourceUsageAggregationStats"
          description: CPU utilization percentage.
      type: object
    DailyResourceUsageAggregationDisk:
      description: Statistical aggregation of disk usage.
      properties:
        iops:
          $ref: "#/components/schemas/DailyResourceUsageAggregationStats"
          description: Disk I/O operations per second.
      type: object
    DailyResourceUsageAggregationMemory:
      description: Statistical aggregation of memory usage.
      properties:
        utilizationPercentage:
          $ref: "#/components/schemas/DailyResourceUsageAggregationStats"
          description: Memory utilization percentage.
      type: object
    DailyResourceUsageAggregationNetwork:
      description: Statistical aggregation of network usage.
      properties:
        egressBps:
          $ref: "#/components/schemas/DailyResourceUsageAggregationStats"
          description: Network egress in B/s.
        ingressBps:
          $ref: "#/components/schemas/DailyResourceUsageAggregationStats"
          description: Network ingress in B/s.
      type: object
    DailyResourceUsageAggregationStats:
      description: Statistical aggregation of samples for a single resource usage.
      properties:
        average:
          description: Average usage value.
          format: float
          type: number
        median:
          description: Median usage value.
          format: float
          type: number
        ninteyFifthPercentile:
          description: 95th percentile usage value.
          format: float
          type: number
        peak:
          description: Peak usage value.
          format: float
          type: number
      type: object
    Date:
      description: "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"
      properties:
        day:
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
          format: int32
          type: integer
        month:
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
          format: int32
          type: integer
        year:
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
          format: int32
          type: integer
      type: object
    DiskEntry:
      description: Single disk entry.
      properties:
        capacityBytes:
          description: Disk capacity.
          format: int64
          type: string
        diskLabel:
          description: Disk label.
          type: string
        diskLabelType:
          description: Disk label type (e.g. BIOS/GPT)
          type: string
        freeBytes:
          description: Disk free space.
          format: int64
          type: string
        hwAddress:
          description: Disk hardware address (e.g. 0:1 for SCSI).
          type: string
        interfaceType:
          description: Disks interface type.
          enum:
            - INTERFACE_TYPE_UNSPECIFIED
            - IDE
            - SATA
            - SAS
            - SCSI
            - NVME
            - FC
            - ISCSI
          type: string
        partitions:
          $ref: "#/components/schemas/DiskPartitionList"
          description: Partition layout.
        vmware:
          $ref: "#/components/schemas/VmwareDiskConfig"
          description: VMware disk details.
      type: object
    DiskEntryList:
      description: VM disks.
      properties:
        entries:
          description: Disk entries.
          items:
            $ref: "#/components/schemas/DiskEntry"
          type: array
      type: object
    DiskPartition:
      description: Disk Partition details.
      properties:
        capacityBytes:
          description: Partition capacity.
          format: int64
          type: string
        fileSystem:
          description: Partition file system.
          type: string
        freeBytes:
          description: Partition free space.
          format: int64
          type: string
        mountPoint:
          description: Mount pount (Linux/Windows) or drive letter (Windows).
          type: string
        subPartitions:
          $ref: "#/components/schemas/DiskPartitionList"
          description: Sub-partitions.
        type:
          description: Partition type.
          type: string
        uuid:
          description: Partition UUID.
          type: string
      type: object
    DiskPartitionList:
      description: Disk partition list.
      properties:
        entries:
          description: Partition entries.
          items:
            $ref: "#/components/schemas/DiskPartition"
          type: array
      type: object
    DiskUsageSample:
      description: Disk usage sample. Values are across all disks.
      properties:
        averageIops:
          description: Average IOPS sampled over a short window. Must be non-negative.
          format: float
          type: number
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    ErrorFrame:
      description: Message representing a frame which failed to be processed due to an error.
      properties:
        ingestionTime:
          description: Output only. Frame ingestion time.
          format: google-datetime
          readOnly: true
          type: string
        name:
          description: Output only. The identifier of the ErrorFrame.
          readOnly: true
          type: string
        originalFrame:
          $ref: "#/components/schemas/AssetFrame"
          description: Output only. The frame that was originally reported.
          readOnly: true
        violations:
          description: Output only. All the violations that were detected for the frame.
          items:
            $ref: "#/components/schemas/FrameViolationEntry"
          readOnly: true
          type: array
      type: object
    ExecutionReport:
      description: A resource that reports result of the import job execution.
      properties:
        executionErrors:
          $ref: "#/components/schemas/ValidationReport"
          description: Validation errors encountered during the execution of the import job.
        framesReported:
          description: Total number of asset frames reported for the import job.
          format: int32
          type: integer
        totalRowsCount:
          description: Output only. Total number of rows in the import job.
          format: int32
          readOnly: true
          type: integer
      type: object
    FileValidationReport:
      description: A resource that aggregates the validation errors found in an import job file.
      properties:
        fileErrors:
          description: List of file level errors.
          items:
            $ref: "#/components/schemas/ImportError"
          type: array
        fileName:
          description: The name of the file.
          type: string
        partialReport:
          description: Flag indicating that processing was aborted due to maximum number of errors.
          type: boolean
        rowErrors:
          description: Partial list of rows that encountered validation error.
          items:
            $ref: "#/components/schemas/ImportRowError"
          type: array
      type: object
    FitDescriptor:
      description: Describes the fit level of an asset for migration to a specific target.
      properties:
        fitLevel:
          description: Fit level.
          enum:
            - FIT_LEVEL_UNSPECIFIED
            - FIT
            - NO_FIT
            - REQUIRES_EFFORT
          type: string
      type: object
    FrameViolationEntry:
      description: A resource that contains a single violation of a reported `AssetFrame` resource.
      properties:
        field:
          description: The field of the original frame where the violation occurred.
          type: string
        violation:
          description: A message describing the violation.
          type: string
      type: object
    Frames:
      description: Collection of frame data.
      properties:
        framesData:
          description: A repeated field of asset data.
          items:
            $ref: "#/components/schemas/AssetFrame"
          type: array
      type: object
    FstabEntry:
      description: Single fstab entry.
      properties:
        file:
          description: The mount point for the filesystem.
          type: string
        freq:
          description: Used by dump to determine which filesystems need to be dumped.
          format: int32
          type: integer
        mntops:
          description: Mount options associated with the filesystem.
          type: string
        passno:
          description: Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.
          format: int32
          type: integer
        spec:
          description: The block special device or remote filesystem to be mounted.
          type: string
        vfstype:
          description: The type of the filesystem.
          type: string
      type: object
    FstabEntryList:
      description: Fstab content.
      properties:
        entries:
          description: Fstab entries.
          items:
            $ref: "#/components/schemas/FstabEntry"
          type: array
      type: object
    GenericInsight:
      description: A generic insight about an asset.
      properties:
        additionalInformation:
          description: Output only. Additional information about the insight, each entry can be a logical entry and must make sense if it is displayed with line breaks between each entry. Text can contain md style links.
          items:
            type: string
          readOnly: true
          type: array
        defaultMessage:
          description: Output only. In case message_code is not yet known by the client default_message will be the message to be used instead.
          readOnly: true
          type: string
        messageId:
          description: Output only. Represents a globally unique message id for this insight, can be used for localization purposes, in case message_code is not yet known by the client use default_message instead.
          format: int64
          readOnly: true
          type: string
      type: object
    GenericPlatformDetails:
      description: Generic platform details.
      properties:
        location:
          description: Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field.
          type: string
      type: object
    Group:
      description: A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups.
      properties:
        createTime:
          description: Output only. The timestamp when the group was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. The description of the group.
          type: string
        displayName:
          description: Optional. User-friendly display name.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs.
          type: object
        name:
          description: Output only. The name of the group.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The timestamp when the group was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GuestConfigDetails:
      description: Guest OS config information.
      properties:
        fstab:
          $ref: "#/components/schemas/FstabEntryList"
          description: Mount list (Linux fstab).
        hosts:
          $ref: "#/components/schemas/HostsEntryList"
          description: Hosts file (/etc/hosts).
        issue:
          description: OS issue (typically /etc/issue in Linux).
          type: string
        nfsExports:
          $ref: "#/components/schemas/NfsExportList"
          description: NFS exports.
        selinuxMode:
          description: Security-Enhanced Linux (SELinux) mode.
          enum:
            - SE_LINUX_MODE_UNSPECIFIED
            - SE_LINUX_MODE_DISABLED
            - SE_LINUX_MODE_PERMISSIVE
            - SE_LINUX_MODE_ENFORCING
          type: string
      type: object
    GuestInstalledApplication:
      description: Guest installed application information.
      properties:
        applicationName:
          description: Installed application name.
          type: string
        installTime:
          description: The time when the application was installed.
          format: google-datetime
          type: string
        licenses:
          description: License strings associated with the installed application.
          items:
            type: string
          type: array
        path:
          description: Source path.
          type: string
        vendor:
          description: Installed application vendor.
          type: string
        version:
          description: Installed application version.
          type: string
      type: object
    GuestInstalledApplicationList:
      description: Guest installed application list.
      properties:
        entries:
          description: Application entries.
          items:
            $ref: "#/components/schemas/GuestInstalledApplication"
          type: array
      type: object
    GuestOsDetails:
      description: Information from Guest-level collections.
      properties:
        config:
          $ref: "#/components/schemas/GuestConfigDetails"
          description: OS and app configuration.
        family:
          description: What family the OS belong to, if known.
          enum:
            - OS_FAMILY_UNKNOWN
            - OS_FAMILY_WINDOWS
            - OS_FAMILY_LINUX
            - OS_FAMILY_UNIX
          type: string
        osName:
          description: The name of the operating system.
          type: string
        runtime:
          $ref: "#/components/schemas/GuestRuntimeDetails"
          description: Runtime information.
        version:
          description: The version of the operating system.
          type: string
      type: object
    GuestRuntimeDetails:
      description: Guest OS runtime information.
      properties:
        domain:
          description: Domain, e.g. c.stratozone-development.internal.
          type: string
        installedApps:
          $ref: "#/components/schemas/GuestInstalledApplicationList"
          description: Installed applications information.
        lastBootTime:
          description: Last time the OS was booted.
          format: google-datetime
          type: string
        machineName:
          description: Machine name.
          type: string
        network:
          $ref: "#/components/schemas/RuntimeNetworkInfo"
          description: Runtime network information (connections, ports).
        openFileList:
          $ref: "#/components/schemas/OpenFileList"
          description: Open files information.
        processes:
          $ref: "#/components/schemas/RunningProcessList"
          description: Running processes.
        services:
          $ref: "#/components/schemas/RunningServiceList"
          description: Running background services.
      type: object
    HostsEntry:
      description: Single /etc/hosts entry.
      properties:
        hostNames:
          description: List of host names / aliases.
          items:
            type: string
          type: array
        ip:
          description: IP (raw, IPv4/6 agnostic).
          type: string
      type: object
    HostsEntryList:
      description: Hosts content.
      properties:
        entries:
          description: Hosts entries.
          items:
            $ref: "#/components/schemas/HostsEntry"
          type: array
      type: object
    ImportDataFile:
      description: A resource that represents a payload file in an import job.
      properties:
        createTime:
          description: Output only. The timestamp when the file was created.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: User-friendly display name. Maximum length is 63 characters.
          type: string
        format:
          description: Required. The payload format.
          enum:
            - IMPORT_JOB_FORMAT_UNSPECIFIED
            - IMPORT_JOB_FORMAT_RVTOOLS_XLSX
            - IMPORT_JOB_FORMAT_RVTOOLS_CSV
            - IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV
            - IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV
            - IMPORT_JOB_FORMAT_STRATOZONE_CSV
          type: string
        name:
          description: Output only. The name of the file.
          readOnly: true
          type: string
        state:
          description: Output only. The state of the import data file.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
          readOnly: true
          type: string
        uploadFileInfo:
          $ref: "#/components/schemas/UploadFileInfo"
          description: Information about a file that is uploaded to a storage service.
      type: object
    ImportError:
      description: A resource that reports the errors encountered while processing an import job.
      properties:
        errorDetails:
          description: The error information.
          type: string
        severity:
          description: The severity of the error.
          enum:
            - SEVERITY_UNSPECIFIED
            - ERROR
            - WARNING
            - INFO
          type: string
      type: object
    ImportJob:
      description: A resource that represents the background job that imports asset frames.
      properties:
        assetSource:
          description: Required. Reference to a source.
          type: string
        completeTime:
          description: Output only. The timestamp when the import job was completed.
          format: google-datetime
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when the import job was created.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: Optional. User-friendly display name. Maximum length is 256 characters.
          type: string
        executionReport:
          $ref: "#/components/schemas/ExecutionReport"
          description: Output only. The report with the results of running the import job.
          readOnly: true
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs.
          type: object
        name:
          description: Output only. The full name of the import job.
          readOnly: true
          type: string
        state:
          description: Output only. The state of the import job.
          enum:
            - IMPORT_JOB_STATE_UNSPECIFIED
            - IMPORT_JOB_STATE_PENDING
            - IMPORT_JOB_STATE_RUNNING
            - IMPORT_JOB_STATE_COMPLETED
            - IMPORT_JOB_STATE_FAILED
            - IMPORT_JOB_STATE_VALIDATING
            - IMPORT_JOB_STATE_FAILED_VALIDATION
            - IMPORT_JOB_STATE_READY
          readOnly: true
          type: string
        updateTime:
          description: Output only. The timestamp when the import job was last updated.
          format: google-datetime
          readOnly: true
          type: string
        validationReport:
          $ref: "#/components/schemas/ValidationReport"
          description: Output only. The report with the validation results of the import job.
          readOnly: true
      type: object
    ImportRowError:
      description: A resource that reports the import job errors at row level.
      properties:
        errors:
          description: The list of errors detected in the row.
          items:
            $ref: "#/components/schemas/ImportError"
          type: array
        rowNumber:
          deprecated: true
          description: The row number where the error was detected.
          format: int32
          type: integer
        vmName:
          description: The name of the VM in the row.
          type: string
        vmUuid:
          description: The VM UUID.
          type: string
      type: object
    Insight:
      description: An insight about an asset.
      properties:
        genericInsight:
          $ref: "#/components/schemas/GenericInsight"
          description: Output only. A generic insight about an asset
          readOnly: true
        migrationInsight:
          $ref: "#/components/schemas/MigrationInsight"
          description: Output only. An insight about potential migrations for an asset.
          readOnly: true
      type: object
    InsightList:
      description: Message containing insights list.
      properties:
        insights:
          description: Output only. Insights of the list.
          items:
            $ref: "#/components/schemas/Insight"
          readOnly: true
          type: array
        updateTime:
          description: Output only. Update timestamp.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    ListAssetsResponse:
      description: Response message for listing assets.
      properties:
        assets:
          description: A list of assets.
          items:
            $ref: "#/components/schemas/Asset"
          type: array
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListErrorFramesResponse:
      description: A response for listing error frames.
      properties:
        errorFrames:
          description: The list of error frames.
          items:
            $ref: "#/components/schemas/ErrorFrame"
          type: array
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListGroupsResponse:
      description: A response for listing groups.
      properties:
        groups:
          description: The list of Group
          items:
            $ref: "#/components/schemas/Group"
          type: array
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListImportDataFilesResponse:
      description: Response for listing payload files of an import job.
      properties:
        importDataFiles:
          description: The list of import data files.
          items:
            $ref: "#/components/schemas/ImportDataFile"
          type: array
        nextPageToken:
          description: A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListImportJobsResponse:
      description: A response for listing import jobs.
      properties:
        importJobs:
          description: The list of import jobs.
          items:
            $ref: "#/components/schemas/ImportJob"
          type: array
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    ListPreferenceSetsResponse:
      description: Response message for listing preference sets.
      properties:
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        preferenceSets:
          description: The list of PreferenceSets
          items:
            $ref: "#/components/schemas/PreferenceSet"
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListReportConfigsResponse:
      description: Response message for listing report configs.
      properties:
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        reportConfigs:
          description: A list of report configs.
          items:
            $ref: "#/components/schemas/ReportConfig"
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListReportsResponse:
      description: Response message for listing Reports.
      properties:
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        reports:
          description: The list of Reports.
          items:
            $ref: "#/components/schemas/Report"
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListSourcesResponse:
      description: Response message for listing sources.
      properties:
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        sources:
          description: The list of sources.
          items:
            $ref: "#/components/schemas/Source"
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    Location:
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      type: object
    MachineArchitectureDetails:
      description: Details of the machine architecture.
      properties:
        bios:
          $ref: "#/components/schemas/BiosDetails"
          description: BIOS Details.
        cpuArchitecture:
          description: CPU architecture, e.g., "x64-based PC", "x86_64", "i686" etc.
          type: string
        cpuName:
          description: CPU name, e.g., "Intel Xeon E5-2690", "AMD EPYC 7571" etc.
          type: string
        cpuSocketCount:
          description: Number of processor sockets allocated to the machine.
          format: int32
          type: integer
        cpuThreadCount:
          description: Number of CPU threads allocated to the machine.
          format: int32
          type: integer
        firmwareType:
          description: Firmware type.
          enum:
            - FIRMWARE_TYPE_UNSPECIFIED
            - BIOS
            - EFI
          type: string
        hyperthreading:
          description: CPU hyper-threading support.
          enum:
            - CPU_HYPER_THREADING_UNSPECIFIED
            - DISABLED
            - ENABLED
          type: string
        vendor:
          description: Hardware vendor.
          type: string
      type: object
    MachineDetails:
      description: Details of a machine.
      properties:
        architecture:
          $ref: "#/components/schemas/MachineArchitectureDetails"
          description: Architecture details (vendor, CPU architecture).
        coreCount:
          description: Number of CPU cores in the machine. Must be non-negative.
          format: int32
          type: integer
        createTime:
          description: Machine creation time.
          format: google-datetime
          type: string
        disks:
          $ref: "#/components/schemas/MachineDiskDetails"
          description: Disk details.
        guestOs:
          $ref: "#/components/schemas/GuestOsDetails"
          description: Guest OS information.
        machineName:
          description: Machine name.
          type: string
        memoryMb:
          description: The amount of memory in the machine. Must be non-negative.
          format: int32
          type: integer
        network:
          $ref: "#/components/schemas/MachineNetworkDetails"
          description: Network details.
        platform:
          $ref: "#/components/schemas/PlatformDetails"
          description: Platform specific information.
        powerState:
          description: Power state of the machine.
          enum:
            - POWER_STATE_UNSPECIFIED
            - PENDING
            - ACTIVE
            - SUSPENDING
            - SUSPENDED
            - DELETING
            - DELETED
          type: string
        uuid:
          description: Machine unique identifier.
          type: string
      type: object
    MachineDiskDetails:
      description: Details of machine disks.
      properties:
        disks:
          $ref: "#/components/schemas/DiskEntryList"
          description: List of disks.
        totalCapacityBytes:
          description: Disk total Capacity.
          format: int64
          type: string
        totalFreeBytes:
          description: Total disk free space.
          format: int64
          type: string
      type: object
    MachineNetworkDetails:
      description: Details of network adapters and settings.
      properties:
        adapters:
          $ref: "#/components/schemas/NetworkAdapterList"
          description: List of network adapters.
        primaryIpAddress:
          description: The primary IP address of the machine.
          type: string
        primaryMacAddress:
          description: MAC address of the machine. This property is used to uniqly identify the machine.
          type: string
        publicIpAddress:
          description: The public IP address of the machine.
          type: string
      type: object
    MachinePreferences:
      description: The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.
      properties:
        allowedMachineSeries:
          description: Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.
          items:
            $ref: "#/components/schemas/MachineSeries"
          type: array
      type: object
    MachineSeries:
      description: A Compute Engine machine series.
      properties:
        code:
          description: Code to identify a Compute Engine machine series. Consult https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison for more details on the available series.
          type: string
      type: object
    MemoryUsageSample:
      description: Memory usage sample.
      properties:
        utilizedPercentage:
          description: Percentage of system memory utilized. Must be in the interval [0, 100].
          format: float
          type: number
      type: object
    MigrationInsight:
      description: An insight about potential migrations for an asset.
      properties:
        computeEngineTarget:
          $ref: "#/components/schemas/ComputeEngineMigrationTarget"
          description: Output only. A Google Compute Engine target.
          readOnly: true
        fit:
          $ref: "#/components/schemas/FitDescriptor"
          description: Output only. Description of how well the asset this insight is associated with fits the proposed migration.
          readOnly: true
      type: object
    Money:
      description: Represents an amount of money with its currency type.
      properties:
        currencyCode:
          description: The three-letter currency code defined in ISO 4217.
          type: string
        nanos:
          description: Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
          format: int32
          type: integer
        units:
          description: The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
          format: int64
          type: string
      type: object
    NetworkAdapterDetails:
      description: Details of network adapter.
      properties:
        adapterType:
          description: Network adapter type (e.g. VMXNET3).
          type: string
        addresses:
          $ref: "#/components/schemas/NetworkAddressList"
          description: NetworkAddressList
        macAddress:
          description: MAC address.
          type: string
      type: object
    NetworkAdapterList:
      description: List of network adapters.
      properties:
        entries:
          description: Network adapter entries.
          items:
            $ref: "#/components/schemas/NetworkAdapterDetails"
          type: array
      type: object
    NetworkAddress:
      description: Details of network address.
      properties:
        assignment:
          description: Whether DHCP is used to assign addresses.
          enum:
            - ADDRESS_ASSIGNMENT_UNSPECIFIED
            - ADDRESS_ASSIGNMENT_STATIC
            - ADDRESS_ASSIGNMENT_DHCP
          type: string
        bcast:
          description: Broadcast address.
          type: string
        fqdn:
          description: Fully qualified domain name.
          type: string
        ipAddress:
          description: Assigned or configured IP Address.
          type: string
        subnetMask:
          description: Subnet mask.
          type: string
      type: object
    NetworkAddressList:
      description: List of allocated/assigned network addresses.
      properties:
        entries:
          description: Network address entries.
          items:
            $ref: "#/components/schemas/NetworkAddress"
          type: array
      type: object
    NetworkConnection:
      properties:
        localIpAddress:
          description: Local IP address.
          type: string
        localPort:
          description: Local port.
          format: int32
          type: integer
        pid:
          description: Process ID.
          format: int64
          type: string
        processName:
          description: Process or service name.
          type: string
        protocol:
          description: Connection protocol (e.g. TCP/UDP).
          type: string
        remoteIpAddress:
          description: Remote IP address.
          type: string
        remotePort:
          description: Remote port.
          format: int32
          type: integer
        state:
          description: Network connection state.
          enum:
            - STATE_UNSPECIFIED
            - OPENING
            - OPEN
            - LISTEN
            - CLOSING
            - CLOSED
          type: string
      type: object
    NetworkConnectionList:
      description: Network connection list.
      properties:
        entries:
          description: Network connection entries.
          items:
            $ref: "#/components/schemas/NetworkConnection"
          type: array
      type: object
    NetworkUsageSample:
      description: Network usage sample. Values are across all network interfaces.
      properties:
        averageEgressBps:
          description: Average network egress in B/s sampled over a short window. Must be non-negative.
          format: float
          type: number
        averageIngressBps:
          description: Average network ingress in B/s sampled over a short window. Must be non-negative.
          format: float
          type: number
      type: object
    NfsExport:
      description: NFS export.
      properties:
        exportDirectory:
          description: The directory being exported.
          type: string
        hosts:
          description: The hosts or networks to which the export is being shared.
          items:
            type: string
          type: array
      type: object
    NfsExportList:
      description: NFS exports.
      properties:
        entries:
          description: NFS export entries.
          items:
            $ref: "#/components/schemas/NfsExport"
          type: array
      type: object
    OpenFileDetails:
      description: Open file Information.
      properties:
        command:
          description: Opened file command.
          type: string
        filePath:
          description: Opened file file path.
          type: string
        fileType:
          description: Opened file file type.
          type: string
        user:
          description: Opened file user.
          type: string
      type: object
    OpenFileList:
      description: Open file list.
      properties:
        entries:
          description: Open file details entries.
          items:
            $ref: "#/components/schemas/OpenFileDetails"
          type: array
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    OperationMetadata:
      description: Represents the metadata of the long-running operation.
      properties:
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        requestedCancellation:
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
      type: object
    PerformanceSample:
      description: Performance data sample.
      properties:
        cpu:
          $ref: "#/components/schemas/CpuUsageSample"
          description: CPU usage sample.
        disk:
          $ref: "#/components/schemas/DiskUsageSample"
          description: Disk usage sample.
        memory:
          $ref: "#/components/schemas/MemoryUsageSample"
          description: Memory usage sample.
        network:
          $ref: "#/components/schemas/NetworkUsageSample"
          description: Network usage sample.
        sampleTime:
          description: Time the sample was collected. If omitted, the frame report time will be used.
          format: google-datetime
          type: string
      type: object
    PhysicalPlatformDetails:
      description: Platform specific details for Physical Machines.
      properties:
        location:
          description: Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field.
          type: string
      type: object
    PlatformDetails:
      description: Information about the platform.
      properties:
        awsEc2Details:
          $ref: "#/components/schemas/AwsEc2PlatformDetails"
          description: AWS EC2 specific details.
        azureVmDetails:
          $ref: "#/components/schemas/AzureVmPlatformDetails"
          description: Azure VM specific details.
        genericDetails:
          $ref: "#/components/schemas/GenericPlatformDetails"
          description: Generic platform details.
        physicalDetails:
          $ref: "#/components/schemas/PhysicalPlatformDetails"
          description: Physical machines platform details.
        vmwareDetails:
          $ref: "#/components/schemas/VmwarePlatformDetails"
          description: VMware specific details.
      type: object
    PreferenceSet:
      description: The preferences that apply to all assets in a given context.
      properties:
        createTime:
          description: Output only. The timestamp when the preference set was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: A description of the preference set.
          type: string
        displayName:
          description: User-friendly display name. Maximum length is 63 characters.
          type: string
        name:
          description: Output only. Name of the preference set.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The timestamp when the preference set was last updated.
          format: google-datetime
          readOnly: true
          type: string
        virtualMachinePreferences:
          $ref: "#/components/schemas/VirtualMachinePreferences"
          description: A set of preferences that applies to all virtual machines in the context.
      type: object
    RegionPreferences:
      description: The user preferences relating to target regions.
      properties:
        preferredRegions:
          description: A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions.
          items:
            type: string
          type: array
      type: object
    RemoveAssetsFromGroupRequest:
      description: A request to remove assets from a group.
      properties:
        allowMissing:
          description: Optional. When this value is set to `false` and one of the given assets is not an existing member of the group, the operation fails with a `Not Found` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.
          type: boolean
        assets:
          $ref: "#/components/schemas/AssetList"
          description: Required. List of assets to be removed. The maximum number of assets that can be removed in a single request is 1000.
        requestId:
          description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
      type: object
    Report:
      description: Report represents a point-in-time rendering of the ReportConfig results.
      properties:
        createTime:
          description: Output only. Creation timestamp.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Free-text description.
          type: string
        displayName:
          description: User-friendly display name. Maximum length is 63 characters.
          type: string
        name:
          description: Output only. Name of resource.
          readOnly: true
          type: string
        state:
          description: Report creation state.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - SUCCEEDED
            - FAILED
          type: string
        summary:
          $ref: "#/components/schemas/ReportSummary"
          description: Output only. Summary view of the Report.
          readOnly: true
        type:
          description: Report type.
          enum:
            - TYPE_UNSPECIFIED
            - TOTAL_COST_OF_OWNERSHIP
          type: string
        updateTime:
          description: Output only. Last update timestamp.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    ReportAssetFramesResponse:
      description: A response to a call to `ReportAssetFrame`.
      properties: {}
      type: object
    ReportConfig:
      description: The groups and associated preference sets on which we can generate reports.
      properties:
        createTime:
          description: Output only. The timestamp when the resource was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Free-text description.
          type: string
        displayName:
          description: User-friendly display name. Maximum length is 63 characters.
          type: string
        groupPreferencesetAssignments:
          description: Required. Collection of combinations of groups and preference sets.
          items:
            $ref: "#/components/schemas/ReportConfigGroupPreferenceSetAssignment"
          type: array
        name:
          description: Output only. Name of resource.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The timestamp when the resource was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    ReportConfigGroupPreferenceSetAssignment:
      description: Represents a combination of a group with a preference set.
      properties:
        group:
          description: Required. Name of the group.
          type: string
        preferenceSet:
          description: Required. Name of the Preference Set.
          type: string
      type: object
    ReportSummary:
      description: Describes the Summary view of a Report, which contains aggregated values for all the groups and preference sets included in this Report.
      properties:
        allAssetsStats:
          $ref: "#/components/schemas/ReportSummaryAssetAggregateStats"
          description: Aggregate statistics for all the assets across all the groups.
        groupFindings:
          description: Findings for each Group included in this report.
          items:
            $ref: "#/components/schemas/ReportSummaryGroupFinding"
          type: array
      type: object
    ReportSummaryAssetAggregateStats:
      description: Aggregate statistics for a collection of assets.
      properties:
        coreCountHistogram:
          $ref: "#/components/schemas/ReportSummaryHistogramChartData"
          description: Histogram showing a distribution of CPU core counts.
        memoryBytesHistogram:
          $ref: "#/components/schemas/ReportSummaryHistogramChartData"
          description: Histogram showing a distribution of memory sizes.
        memoryUtilizationChart:
          $ref: "#/components/schemas/ReportSummaryUtilizationChartData"
          description: Total memory split into Used/Free buckets.
        operatingSystem:
          $ref: "#/components/schemas/ReportSummaryChartData"
          description: Count of assets grouped by Operating System families.
        storageBytesHistogram:
          $ref: "#/components/schemas/ReportSummaryHistogramChartData"
          description: Histogram showing a distribution of storage sizes.
        storageUtilizationChart:
          $ref: "#/components/schemas/ReportSummaryUtilizationChartData"
          description: Total memory split into Used/Free buckets.
        totalAssets:
          description: Count of the number of unique assets in this collection.
          format: int64
          type: string
        totalCores:
          description: Sum of the CPU core count of all the assets in this collection.
          format: int64
          type: string
        totalMemoryBytes:
          description: Sum of the memory in bytes of all the assets in this collection.
          format: int64
          type: string
        totalStorageBytes:
          description: Sum of persistent storage in bytes of all the assets in this collection.
          format: int64
          type: string
      type: object
    ReportSummaryChartData:
      description: Describes a collection of data points rendered as a Chart.
      properties:
        dataPoints:
          description: Each data point in the chart is represented as a name-value pair with the name being the x-axis label, and the value being the y-axis value.
          items:
            $ref: "#/components/schemas/ReportSummaryChartDataDataPoint"
          type: array
      type: object
    ReportSummaryChartDataDataPoint:
      description: Describes a single data point in the Chart.
      properties:
        label:
          description: The X-axis label for this data point.
          type: string
        value:
          description: The Y-axis value for this data point.
          format: double
          type: number
      type: object
    ReportSummaryComputeEngineFinding:
      description: A set of findings that applies to assets destined for Compute Engine.
      properties:
        allocatedAssetCount:
          description: Count of assets which were allocated.
          format: int64
          type: string
        allocatedDiskTypes:
          description: Set of disk types allocated to assets.
          items:
            enum:
              - PERSISTENT_DISK_TYPE_UNSPECIFIED
              - PERSISTENT_DISK_TYPE_STANDARD
              - PERSISTENT_DISK_TYPE_BALANCED
              - PERSISTENT_DISK_TYPE_SSD
            type: string
          type: array
        allocatedRegions:
          description: Set of regions in which the assets were allocated.
          items:
            type: string
          type: array
        machineSeriesAllocations:
          description: Distribution of assets based on the Machine Series.
          items:
            $ref: "#/components/schemas/ReportSummaryMachineSeriesAllocation"
          type: array
      type: object
    ReportSummaryGroupFinding:
      description: Summary Findings for a specific Group.
      properties:
        assetAggregateStats:
          $ref: "#/components/schemas/ReportSummaryAssetAggregateStats"
          description: Summary statistics for all the assets in this group.
        description:
          description: Description for the Group.
          type: string
        displayName:
          description: Display Name for the Group.
          type: string
        overlappingAssetCount:
          deprecated: true
          description: This field is deprecated, do not rely on it having a value.
          format: int64
          type: string
        preferenceSetFindings:
          description: Findings for each of the PreferenceSets for this group.
          items:
            $ref: "#/components/schemas/ReportSummaryGroupPreferenceSetFinding"
          type: array
      type: object
    ReportSummaryGroupPreferenceSetFinding:
      description: Summary Findings for a specific Group/PreferenceSet combination.
      properties:
        computeEngineFinding:
          $ref: "#/components/schemas/ReportSummaryComputeEngineFinding"
          description: A set of findings that applies to Compute Engine machines in the input.
        description:
          description: Description for the Preference Set.
          type: string
        displayName:
          description: Display Name of the Preference Set
          type: string
        machinePreferences:
          $ref: "#/components/schemas/VirtualMachinePreferences"
          description: A set of preferences that applies to all machines in the context.
        monthlyCostCompute:
          $ref: "#/components/schemas/Money"
          description: Compute monthly cost for this preference set.
        monthlyCostNetworkEgress:
          $ref: "#/components/schemas/Money"
          description: Network Egress monthly cost for this preference set.
        monthlyCostOsLicense:
          $ref: "#/components/schemas/Money"
          description: Licensing monthly cost for this preference set.
        monthlyCostOther:
          $ref: "#/components/schemas/Money"
          description: Miscellaneous monthly cost for this preference set.
        monthlyCostStorage:
          $ref: "#/components/schemas/Money"
          description: Storage monthly cost for this preference set.
        monthlyCostTotal:
          $ref: "#/components/schemas/Money"
          description: Total monthly cost for this preference set.
        soleTenantFinding:
          $ref: "#/components/schemas/ReportSummarySoleTenantFinding"
          description: A set of findings that applies to Sole-Tenant machines in the input.
        vmwareEngineFinding:
          $ref: "#/components/schemas/ReportSummaryVmwareEngineFinding"
          description: A set of findings that applies to VMWare machines in the input.
      type: object
    ReportSummaryHistogramChartData:
      description: A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket.
      properties:
        buckets:
          description: Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.
          items:
            $ref: "#/components/schemas/ReportSummaryHistogramChartDataBucket"
          type: array
      type: object
    ReportSummaryHistogramChartDataBucket:
      description: A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.
      properties:
        count:
          description: Count of items in the bucket.
          format: int64
          type: string
        lowerBound:
          description: Lower bound - inclusive.
          format: int64
          type: string
        upperBound:
          description: Upper bound - exclusive.
          format: int64
          type: string
      type: object
    ReportSummaryMachineSeriesAllocation:
      description: Represents a data point tracking the count of assets allocated for a specific Machine Series.
      properties:
        allocatedAssetCount:
          description: Count of assets allocated to this machine series.
          format: int64
          type: string
        machineSeries:
          $ref: "#/components/schemas/MachineSeries"
          description: The Machine Series (e.g. "E2", "N2")
      type: object
    ReportSummarySoleTenantFinding:
      description: A set of findings that applies to assets destined for Sole-Tenant nodes.
      properties:
        allocatedAssetCount:
          description: Count of assets which are allocated
          format: int64
          type: string
        allocatedRegions:
          description: Set of regions in which the assets are allocated
          items:
            type: string
          type: array
        nodeAllocations:
          description: Set of per-nodetype allocation records
          items:
            $ref: "#/components/schemas/ReportSummarySoleTenantNodeAllocation"
          type: array
      type: object
    ReportSummarySoleTenantNodeAllocation:
      description: Represents the assets allocated to a specific Sole-Tenant node type.
      properties:
        allocatedAssetCount:
          description: Count of assets allocated to these nodes
          format: int64
          type: string
        node:
          $ref: "#/components/schemas/SoleTenantNodeType"
          description: Sole Tenant node type, e.g. "m3-node-128-3904"
        nodeCount:
          description: Count of this node type to be provisioned
          format: int64
          type: string
      type: object
    ReportSummaryUtilizationChartData:
      description: Utilization Chart is a specific type of visualization which displays a metric classified into "Used" and "Free" buckets.
      properties:
        free:
          description: Aggregate value which falls into the "Free" bucket.
          format: int64
          type: string
        used:
          description: Aggregate value which falls into the "Used" bucket.
          format: int64
          type: string
      type: object
    ReportSummaryVmwareEngineFinding:
      description: A set of findings that applies to assets destined for VMWare Engine.
      properties:
        allocatedAssetCount:
          description: Count of assets which are allocated
          format: int64
          type: string
        allocatedRegions:
          description: Set of regions in which the assets were allocated
          items:
            type: string
          type: array
        nodeAllocations:
          description: Set of per-nodetype allocation records
          items:
            $ref: "#/components/schemas/ReportSummaryVmwareNodeAllocation"
          type: array
      type: object
    ReportSummaryVmwareNode:
      description: A VMWare Engine Node
      properties:
        code:
          description: Code to identify VMware Engine node series, e.g. "ve1-standard-72". Based on the displayName of cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.nodeTypes
          type: string
      type: object
    ReportSummaryVmwareNodeAllocation:
      description: Represents assets allocated to a specific VMWare Node type.
      properties:
        allocatedAssetCount:
          description: Count of assets allocated to these nodes
          format: int64
          type: string
        nodeCount:
          description: Count of this node type to be provisioned
          format: int64
          type: string
        vmwareNode:
          $ref: "#/components/schemas/ReportSummaryVmwareNode"
          description: VMWare node type, e.g. "ve1-standard-72"
      type: object
    RunImportJobRequest:
      description: A request to run an import job.
      properties:
        requestId:
          description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
      type: object
    RunningProcess:
      description: Guest OS running process details.
      properties:
        attributes:
          additionalProperties:
            type: string
          description: Process extended attributes.
          type: object
        cmdline:
          description: Process full command line.
          type: string
        exePath:
          description: Process binary path.
          type: string
        pid:
          description: Process ID.
          format: int64
          type: string
        user:
          description: User running the process.
          type: string
      type: object
    RunningProcessList:
      description: List of running guest OS processes.
      properties:
        entries:
          description: Running process entries.
          items:
            $ref: "#/components/schemas/RunningProcess"
          type: array
      type: object
    RunningService:
      description: Guest OS running service details.
      properties:
        cmdline:
          description: Service command line.
          type: string
        exePath:
          description: Service binary path.
          type: string
        pid:
          description: Service pid.
          format: int64
          type: string
        serviceName:
          description: Service name.
          type: string
        startMode:
          description: Service start mode (OS-agnostic).
          enum:
            - START_MODE_UNSPECIFIED
            - BOOT
            - SYSTEM
            - AUTO
            - MANUAL
            - DISABLED
          type: string
        state:
          description: Service state (OS-agnostic).
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - PAUSED
            - STOPPED
          type: string
      type: object
    RunningServiceList:
      description: List of running guest OS services.
      properties:
        entries:
          description: Running service entries.
          items:
            $ref: "#/components/schemas/RunningService"
          type: array
      type: object
    RuntimeNetworkInfo:
      description: Runtime networking information.
      properties:
        connections:
          $ref: "#/components/schemas/NetworkConnectionList"
          description: Network connections.
        scanTime:
          description: Time of the last network scan.
          format: google-datetime
          type: string
      type: object
    Settings:
      description: Describes the Migration Center settings related to the project.
      properties:
        disableCloudLogging:
          description: Disable Cloud Logging for the Migration Center API. Users are billed for the logs.
          type: boolean
        name:
          description: Output only. The name of the resource.
          readOnly: true
          type: string
        preferenceSet:
          description: The preference set used by default for a project.
          type: string
      type: object
    SoleTenancyPreferences:
      description: Preferences concerning Sole Tenancy nodes and VMs.
      properties:
        commitmentPlan:
          description: Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
          enum:
            - COMMITMENT_PLAN_UNSPECIFIED
            - ON_DEMAND
            - COMMITMENT_1_YEAR
            - COMMITMENT_3_YEAR
          type: string
        cpuOvercommitRatio:
          description: CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.
          format: double
          type: number
        hostMaintenancePolicy:
          description: Sole Tenancy nodes maintenance policy.
          enum:
            - HOST_MAINTENANCE_POLICY_UNSPECIFIED
            - HOST_MAINTENANCE_POLICY_DEFAULT
            - HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE
            - HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP
          type: string
        nodeTypes:
          description: A list of sole tenant node types. An empty list means that all possible node types will be considered.
          items:
            $ref: "#/components/schemas/SoleTenantNodeType"
          type: array
      type: object
    SoleTenantNodeType:
      description: A Sole Tenant node type.
      properties:
        nodeName:
          description: Name of the Sole Tenant node. Consult https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes
          type: string
      type: object
    Source:
      description: Source represents an object from which asset information is streamed to Migration Center.
      properties:
        createTime:
          description: Output only. The timestamp when the source was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Free-text description.
          type: string
        displayName:
          description: User-friendly display name.
          type: string
        errorFrameCount:
          description: Output only. The number of frames that were reported by the source and contained errors.
          format: int32
          readOnly: true
          type: integer
        managed:
          description: If `true`, the source is managed by other service(s).
          type: boolean
        name:
          description: Output only. The full name of the source.
          readOnly: true
          type: string
        pendingFrameCount:
          description: Output only. Number of frames that are still being processed.
          format: int32
          readOnly: true
          type: integer
        priority:
          description: The information confidence of the source. The higher the value, the higher the confidence.
          format: int32
          type: integer
        state:
          description: Output only. The state of the source.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETING
            - INVALID
          readOnly: true
          type: string
        type:
          description: Data source type.
          enum:
            - SOURCE_TYPE_UNKNOWN
            - SOURCE_TYPE_UPLOAD
            - SOURCE_TYPE_GUEST_OS_SCAN
            - SOURCE_TYPE_INVENTORY_SCAN
            - SOURCE_TYPE_CUSTOM
          type: string
        updateTime:
          description: Output only. The timestamp when the source was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    UpdateAssetRequest:
      description: A request to update an asset.
      properties:
        asset:
          $ref: "#/components/schemas/Asset"
          description: Required. The resource being updated.
        requestId:
          description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
        updateMask:
          description: Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.
          format: google-fieldmask
          type: string
      type: object
    UploadFileInfo:
      description: A resource that contains a URI to which a data file can be uploaded.
      properties:
        headers:
          additionalProperties:
            type: string
          description: Output only. The headers that were used to sign the URI.
          readOnly: true
          type: object
        signedUri:
          description: Output only. Upload URI for the file.
          readOnly: true
          type: string
        uriExpirationTime:
          description: Output only. Expiration time of the upload URI.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    ValidateImportJobRequest:
      description: A request to validate an import job.
      properties:
        requestId:
          description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
      type: object
    ValidationReport:
      description: A resource that aggregates errors across import job files.
      properties:
        fileValidations:
          description: List of errors found in files.
          items:
            $ref: "#/components/schemas/FileValidationReport"
          type: array
        jobErrors:
          description: List of job level errors.
          items:
            $ref: "#/components/schemas/ImportError"
          type: array
      type: object
    VirtualMachinePreferences:
      description: VirtualMachinePreferences enables you to create sets of assumptions, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets.
      properties:
        commitmentPlan:
          description: Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
          enum:
            - COMMITMENT_PLAN_UNSPECIFIED
            - COMMITMENT_PLAN_NONE
            - COMMITMENT_PLAN_ONE_YEAR
            - COMMITMENT_PLAN_THREE_YEARS
          type: string
        computeEnginePreferences:
          $ref: "#/components/schemas/ComputeEnginePreferences"
          description: Compute Engine preferences concern insights and recommendations for Compute Engine target.
        regionPreferences:
          $ref: "#/components/schemas/RegionPreferences"
          description: Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with.
        sizingOptimizationStrategy:
          description: Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.
          enum:
            - SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED
            - SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE
            - SIZING_OPTIMIZATION_STRATEGY_MODERATE
            - SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE
          type: string
        soleTenancyPreferences:
          $ref: "#/components/schemas/SoleTenancyPreferences"
          description: Preferences concerning Sole Tenant nodes and virtual machines.
        targetProduct:
          description: Target product for assets using this preference set. Specify either target product or business goal, but not both.
          enum:
            - COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED
            - COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE
            - COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE
            - COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY
          type: string
        vmwareEnginePreferences:
          $ref: "#/components/schemas/VmwareEnginePreferences"
          description: Preferences concerning insights and recommendations for Google Cloud VMware Engine.
      type: object
    VmwareDiskConfig:
      description: VMware disk config details.
      properties:
        backingType:
          description: VMDK backing type.
          enum:
            - BACKING_TYPE_UNSPECIFIED
            - BACKING_TYPE_FLAT_V1
            - BACKING_TYPE_FLAT_V2
            - BACKING_TYPE_PMEM
            - BACKING_TYPE_RDM_V1
            - BACKING_TYPE_RDM_V2
            - BACKING_TYPE_SESPARSE
            - BACKING_TYPE_SESPARSE_V1
            - BACKING_TYPE_SESPARSE_V2
          type: string
        rdmCompatibility:
          description: RDM compatibility mode.
          enum:
            - RDM_COMPATIBILITY_UNSPECIFIED
            - PHYSICAL_COMPATIBILITY
            - VIRTUAL_COMPATIBILITY
          type: string
        shared:
          description: Is VMDK shared with other VMs.
          type: boolean
        vmdkMode:
          description: VMDK disk mode.
          enum:
            - VMDK_MODE_UNSPECIFIED
            - DEPENDENT
            - INDEPENDENT_PERSISTENT
            - INDEPENDENT_NONPERSISTENT
          type: string
      type: object
    VmwareEnginePreferences:
      description: The user preferences relating to Google Cloud VMware Engine target platform.
      properties:
        commitmentPlan:
          description: Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
          enum:
            - COMMITMENT_PLAN_UNSPECIFIED
            - ON_DEMAND
            - COMMITMENT_1_YEAR_MONTHLY_PAYMENTS
            - COMMITMENT_3_YEAR_MONTHLY_PAYMENTS
            - COMMITMENT_1_YEAR_UPFRONT_PAYMENT
            - COMMITMENT_3_YEAR_UPFRONT_PAYMENT
          type: string
        cpuOvercommitRatio:
          description: CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1 increment.
          format: double
          type: number
        memoryOvercommitRatio:
          description: Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0.
          format: double
          type: number
        storageDeduplicationCompressionRatio:
          description: The Deduplication and Compression ratio is based on the logical (Used Before) space required to store data before applying deduplication and compression, in relation to the physical (Used After) space required after applying deduplication and compression. Specifically, the ratio is the Used Before space divided by the Used After space. For example, if the Used Before space is 3 GB, but the physical Used After space is 1 GB, the deduplication and compression ratio is 3x. Acceptable values are between 1.0 and 4.0.
          format: double
          type: number
      type: object
    VmwarePlatformDetails:
      description: VMware specific details.
      properties:
        esxVersion:
          description: ESX version.
          type: string
        osid:
          description: VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.
          type: string
        vcenterFolder:
          description: Folder name in vCenter where asset resides.
          type: string
        vcenterUri:
          description: vCenter URI used in collection.
          type: string
        vcenterVersion:
          description: vCenter version.
          type: string
        vcenterVmId:
          description: vCenter VM ID.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
