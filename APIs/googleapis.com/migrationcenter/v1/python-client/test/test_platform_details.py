# coding: utf-8

"""
    Migration Center API

    A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.platform_details import PlatformDetails

class TestPlatformDetails(unittest.TestCase):
    """PlatformDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PlatformDetails:
        """Test PlatformDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PlatformDetails`
        """
        model = PlatformDetails()
        if include_optional:
            return PlatformDetails(
                aws_ec2_details = openapi_client.models.aws_ec2_platform_details.AwsEc2PlatformDetails(
                    location = '', 
                    machine_type_label = '', ),
                azure_vm_details = openapi_client.models.azure_vm_platform_details.AzureVmPlatformDetails(
                    location = '', 
                    machine_type_label = '', 
                    provisioning_state = '', ),
                generic_details = openapi_client.models.generic_platform_details.GenericPlatformDetails(
                    location = '', ),
                physical_details = openapi_client.models.physical_platform_details.PhysicalPlatformDetails(
                    location = '', ),
                vmware_details = openapi_client.models.vmware_platform_details.VmwarePlatformDetails(
                    esx_version = '', 
                    osid = '', 
                    vcenter_folder = '', 
                    vcenter_uri = '', 
                    vcenter_version = '', 
                    vcenter_vm_id = '', )
            )
        else:
            return PlatformDetails(
        )
        """

    def testPlatformDetails(self):
        """Test PlatformDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
