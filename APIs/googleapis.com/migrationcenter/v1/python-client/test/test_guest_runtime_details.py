# coding: utf-8

"""
    Migration Center API

    A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.guest_runtime_details import GuestRuntimeDetails

class TestGuestRuntimeDetails(unittest.TestCase):
    """GuestRuntimeDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GuestRuntimeDetails:
        """Test GuestRuntimeDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GuestRuntimeDetails`
        """
        model = GuestRuntimeDetails()
        if include_optional:
            return GuestRuntimeDetails(
                domain = '',
                installed_apps = openapi_client.models.guest_installed_application_list.GuestInstalledApplicationList(
                    entries = [
                        openapi_client.models.guest_installed_application.GuestInstalledApplication(
                            application_name = '', 
                            install_time = '', 
                            licenses = [
                                ''
                                ], 
                            path = '', 
                            vendor = '', 
                            version = '', )
                        ], ),
                last_boot_time = '',
                machine_name = '',
                network = openapi_client.models.runtime_network_info.RuntimeNetworkInfo(
                    connections = openapi_client.models.network_connection_list.NetworkConnectionList(
                        entries = [
                            openapi_client.models.network_connection.NetworkConnection(
                                local_ip_address = '', 
                                local_port = 56, 
                                pid = '', 
                                process_name = '', 
                                protocol = '', 
                                remote_ip_address = '', 
                                remote_port = 56, 
                                state = 'STATE_UNSPECIFIED', )
                            ], ), 
                    scan_time = '', ),
                open_file_list = openapi_client.models.open_file_list.OpenFileList(
                    entries = [
                        openapi_client.models.open_file_details.OpenFileDetails(
                            command = '', 
                            file_path = '', 
                            file_type = '', 
                            user = '', )
                        ], ),
                processes = openapi_client.models.running_process_list.RunningProcessList(
                    entries = [
                        openapi_client.models.running_process.RunningProcess(
                            attributes = {
                                'key' : ''
                                }, 
                            cmdline = '', 
                            exe_path = '', 
                            pid = '', 
                            user = '', )
                        ], ),
                services = openapi_client.models.running_service_list.RunningServiceList(
                    entries = [
                        openapi_client.models.running_service.RunningService(
                            cmdline = '', 
                            exe_path = '', 
                            pid = '', 
                            service_name = '', 
                            start_mode = 'START_MODE_UNSPECIFIED', 
                            state = 'STATE_UNSPECIFIED', )
                        ], )
            )
        else:
            return GuestRuntimeDetails(
        )
        """

    def testGuestRuntimeDetails(self):
        """Test GuestRuntimeDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
