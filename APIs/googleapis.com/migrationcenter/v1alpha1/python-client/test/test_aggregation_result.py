# coding: utf-8

"""
    Migration Center API

    A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.aggregation_result import AggregationResult

class TestAggregationResult(unittest.TestCase):
    """AggregationResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AggregationResult:
        """Test AggregationResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AggregationResult`
        """
        model = AggregationResult()
        if include_optional:
            return AggregationResult(
                count = openapi_client.models.aggregation_result_count.AggregationResultCount(
                    value = '', ),
                var_field = '',
                frequency = openapi_client.models.aggregation_result_frequency.AggregationResultFrequency(
                    values = {
                        'key' : ''
                        }, ),
                histogram = openapi_client.models.aggregation_result_histogram.AggregationResultHistogram(
                    buckets = [
                        openapi_client.models.aggregation_result_histogram_bucket.AggregationResultHistogramBucket(
                            count = '', 
                            lower_bound = 1.337, 
                            upper_bound = 1.337, )
                        ], ),
                sum = openapi_client.models.aggregation_result_sum.AggregationResultSum(
                    value = 1.337, )
            )
        else:
            return AggregationResult(
        )
        """

    def testAggregationResult(self):
        """Test AggregationResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
