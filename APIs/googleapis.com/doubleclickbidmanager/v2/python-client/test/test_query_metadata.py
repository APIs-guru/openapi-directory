# coding: utf-8

"""
    DoubleClick Bid Manager API

    DoubleClick Bid Manager API allows users to manage and create campaigns and reports.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.query_metadata import QueryMetadata

class TestQueryMetadata(unittest.TestCase):
    """QueryMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> QueryMetadata:
        """Test QueryMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `QueryMetadata`
        """
        model = QueryMetadata()
        if include_optional:
            return QueryMetadata(
                data_range = openapi_client.models.data_range.DataRange(
                    custom_end_date = openapi_client.models.date.Date(
                        day = 56, 
                        month = 56, 
                        year = 56, ), 
                    custom_start_date = openapi_client.models.date.Date(
                        day = 56, 
                        month = 56, 
                        year = 56, ), 
                    range = 'RANGE_UNSPECIFIED', ),
                format = 'FORMAT_UNSPECIFIED',
                send_notification = True,
                share_email_address = [
                    ''
                    ],
                title = ''
            )
        else:
            return QueryMetadata(
        )
        """

    def testQueryMetadata(self):
        """Test QueryMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
