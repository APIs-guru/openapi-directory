# coding: utf-8

"""
    DoubleClick Bid Manager API

    DoubleClick Bid Manager API allows users to manage and create campaigns and reports.

    The version of the OpenAPI document: v1.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.report_metadata import ReportMetadata

class TestReportMetadata(unittest.TestCase):
    """ReportMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReportMetadata:
        """Test ReportMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReportMetadata`
        """
        model = ReportMetadata()
        if include_optional:
            return ReportMetadata(
                google_cloud_storage_path = '',
                report_data_end_time_ms = '',
                report_data_start_time_ms = '',
                status = openapi_client.models.report_status.ReportStatus(
                    failure = openapi_client.models.report_failure.ReportFailure(
                        error_code = 'AUTHENTICATION_ERROR', ), 
                    finish_time_ms = '', 
                    format = 'CSV', 
                    state = 'RUNNING', )
            )
        else:
            return ReportMetadata(
        )
        """

    def testReportMetadata(self):
        """Test ReportMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
