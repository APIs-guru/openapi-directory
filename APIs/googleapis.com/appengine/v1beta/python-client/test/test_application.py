# coding: utf-8

"""
    App Engine Admin API

    Provisions and manages developers' App Engine applications.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.application import Application

class TestApplication(unittest.TestCase):
    """Application unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Application:
        """Test Application
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Application`
        """
        model = Application()
        if include_optional:
            return Application(
                auth_domain = '',
                code_bucket = '',
                database_type = 'DATABASE_TYPE_UNSPECIFIED',
                default_bucket = '',
                default_cookie_expiration = '',
                default_hostname = '',
                dispatch_rules = [
                    openapi_client.models.url_dispatch_rule.UrlDispatchRule(
                        domain = '', 
                        path = '', 
                        service = '', )
                    ],
                feature_settings = openapi_client.models.feature_settings.FeatureSettings(
                    split_health_checks = True, 
                    use_container_optimized_os = True, ),
                gcr_domain = '',
                generated_customer_metadata = {
                    'key' : null
                    },
                iap = openapi_client.models.identity_aware_proxy.IdentityAwareProxy(
                    enabled = True, 
                    oauth2_client_id = '', 
                    oauth2_client_secret = '', 
                    oauth2_client_secret_sha256 = '', ),
                id = '',
                location_id = '',
                name = '',
                service_account = '',
                serving_status = 'UNSPECIFIED'
            )
        else:
            return Application(
        )
        """

    def testApplication(self):
        """Test Application"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
