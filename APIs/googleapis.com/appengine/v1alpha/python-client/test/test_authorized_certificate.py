# coding: utf-8

"""
    App Engine Admin API

    Provisions and manages developers' App Engine applications.

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.authorized_certificate import AuthorizedCertificate

class TestAuthorizedCertificate(unittest.TestCase):
    """AuthorizedCertificate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AuthorizedCertificate:
        """Test AuthorizedCertificate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AuthorizedCertificate`
        """
        model = AuthorizedCertificate()
        if include_optional:
            return AuthorizedCertificate(
                certificate_raw_data = openapi_client.models.certificate_raw_data.CertificateRawData(
                    private_key = '', 
                    public_certificate = '', ),
                display_name = '',
                domain_mappings_count = 56,
                domain_names = [
                    ''
                    ],
                expire_time = '',
                id = '',
                managed_certificate = openapi_client.models.managed_certificate.ManagedCertificate(
                    last_renewal_time = '', 
                    status = 'UNSPECIFIED_STATUS', ),
                name = '',
                visible_domain_mappings = [
                    ''
                    ]
            )
        else:
            return AuthorizedCertificate(
        )
        """

    def testAuthorizedCertificate(self):
        """Test AuthorizedCertificate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
