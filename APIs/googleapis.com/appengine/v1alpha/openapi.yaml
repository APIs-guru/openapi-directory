openapi: 3.0.0
servers:
  - url: https://appengine.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Provisions and manages developers' App Engine applications.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: App Engine Admin API
  version: v1alpha
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - format: openapi
      url: https://appengine.googleapis.com/$discovery/rest?version=v1alpha
      version: "3.0"
  x-providerName: googleapis.com
  x-serviceName: appengine
  x-preferred: true
externalDocs:
  url: https://cloud.google.com/appengine/docs/admin-api/
tags:
  - name: apps
  - name: projects
paths:
  "/v1alpha/apps/{appsId}/authorizedCertificates":
    get:
      description: Lists all SSL certificates the user is authorized to administer.
      operationId: appengine.apps.authorizedCertificates.list
      parameters:
        - description: "Part of `parent`. Name of the parent Application resource. Example: apps/myapp."
          in: path
          name: appsId
          required: true
          schema:
            type: string
        - description: Maximum results to return per page.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Continuation token for fetching the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Controls the set of fields returned in the LIST response.
          in: query
          name: view
          schema:
            enum:
              - BASIC_CERTIFICATE
              - FULL_CERTIFICATE
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAuthorizedCertificatesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - apps
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Uploads the specified SSL certificate.
      operationId: appengine.apps.authorizedCertificates.create
      parameters:
        - description: "Part of `parent`. Name of the parent Application resource. Example: apps/myapp."
          in: path
          name: appsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizedCertificate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizedCertificate"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - apps
  "/v1alpha/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}":
    delete:
      description: Deletes the specified SSL certificate.
      operationId: appengine.apps.authorizedCertificates.delete
      parameters:
        - description: "Part of `name`. Name of the resource to delete. Example: apps/myapp/authorizedCertificates/12345."
          in: path
          name: appsId
          required: true
          schema:
            type: string
        - description: Part of `name`. See documentation of `appsId`.
          in: path
          name: authorizedCertificatesId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - apps
    get:
      description: Gets the specified SSL certificate.
      operationId: appengine.apps.authorizedCertificates.get
      parameters:
        - description: "Part of `name`. Name of the resource requested. Example: apps/myapp/authorizedCertificates/12345."
          in: path
          name: appsId
          required: true
          schema:
            type: string
        - description: Part of `name`. See documentation of `appsId`.
          in: path
          name: authorizedCertificatesId
          required: true
          schema:
            type: string
        - description: Controls the set of fields returned in the GET response.
          in: query
          name: view
          schema:
            enum:
              - BASIC_CERTIFICATE
              - FULL_CERTIFICATE
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizedCertificate"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - apps
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates the specified SSL certificate. To renew a certificate and maintain its existing domain mappings, update certificate_data with a new certificate. The new certificate must be applicable to the same domains as the original certificate. The certificate display_name may also be updated.
      operationId: appengine.apps.authorizedCertificates.patch
      parameters:
        - description: "Part of `name`. Name of the resource to update. Example: apps/myapp/authorizedCertificates/12345."
          in: path
          name: appsId
          required: true
          schema:
            type: string
        - description: Part of `name`. See documentation of `appsId`.
          in: path
          name: authorizedCertificatesId
          required: true
          schema:
            type: string
        - description: Standard field mask for the set of fields to be updated. Updates are only supported on the certificate_raw_data and display_name fields.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizedCertificate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizedCertificate"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - apps
  "/v1alpha/apps/{appsId}/authorizedDomains":
    get:
      description: Lists all domains the user is authorized to administer.
      operationId: appengine.apps.authorizedDomains.list
      parameters:
        - description: "Part of `parent`. Name of the parent Application resource. Example: apps/myapp."
          in: path
          name: appsId
          required: true
          schema:
            type: string
        - description: Maximum results to return per page.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Continuation token for fetching the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAuthorizedDomainsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - apps
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/apps/{appsId}/domainMappings":
    get:
      description: Lists the domain mappings on an application.
      operationId: appengine.apps.domainMappings.list
      parameters:
        - description: "Part of `parent`. Name of the parent Application resource. Example: apps/myapp."
          in: path
          name: appsId
          required: true
          schema:
            type: string
        - description: Maximum results to return per page.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Continuation token for fetching the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDomainMappingsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - apps
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Maps a domain to an application. A user must be authorized to administer a domain in order to map it to an application. For a list of available authorized domains, see AuthorizedDomains.ListAuthorizedDomains.
      operationId: appengine.apps.domainMappings.create
      parameters:
        - description: "Part of `parent`. Name of the parent Application resource. Example: apps/myapp."
          in: path
          name: appsId
          required: true
          schema:
            type: string
        - description: Whether a managed certificate should be provided by App Engine. If true, a certificate ID must be manaually set in the DomainMapping resource to configure SSL for this domain. If false, a managed certificate will be provisioned and a certificate ID will be automatically populated.
          in: query
          name: noManagedCertificate
          schema:
            type: boolean
        - description: Whether the domain creation should override any existing mappings for this domain. By default, overrides are rejected.
          in: query
          name: overrideStrategy
          schema:
            enum:
              - UNSPECIFIED_DOMAIN_OVERRIDE_STRATEGY
              - STRICT
              - OVERRIDE
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DomainMapping"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - apps
  "/v1alpha/apps/{appsId}/domainMappings/{domainMappingsId}":
    delete:
      description: Deletes the specified domain mapping. A user must be authorized to administer the associated domain in order to delete a DomainMapping resource.
      operationId: appengine.apps.domainMappings.delete
      parameters:
        - description: "Part of `name`. Name of the resource to delete. Example: apps/myapp/domainMappings/example.com."
          in: path
          name: appsId
          required: true
          schema:
            type: string
        - description: Part of `name`. See documentation of `appsId`.
          in: path
          name: domainMappingsId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - apps
    get:
      description: Gets the specified domain mapping.
      operationId: appengine.apps.domainMappings.get
      parameters:
        - description: "Part of `name`. Name of the resource requested. Example: apps/myapp/domainMappings/example.com."
          in: path
          name: appsId
          required: true
          schema:
            type: string
        - description: Part of `name`. See documentation of `appsId`.
          in: path
          name: domainMappingsId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainMapping"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - apps
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates the specified domain mapping. To map an SSL certificate to a domain mapping, update certificate_id to point to an AuthorizedCertificate resource. A user must be authorized to administer the associated domain in order to update a DomainMapping resource.
      operationId: appengine.apps.domainMappings.patch
      parameters:
        - description: "Part of `name`. Name of the resource to update. Example: apps/myapp/domainMappings/example.com."
          in: path
          name: appsId
          required: true
          schema:
            type: string
        - description: Part of `name`. See documentation of `appsId`.
          in: path
          name: domainMappingsId
          required: true
          schema:
            type: string
        - description: Whether a managed certificate should be provided by App Engine. If true, a certificate ID must be manually set in the DomainMapping resource to configure SSL for this domain. If false, a managed certificate will be provisioned and a certificate ID will be automatically populated. Only applicable if ssl_settings.certificate_id is specified in the update mask.
          in: query
          name: noManagedCertificate
          schema:
            type: boolean
        - description: Required. Standard field mask for the set of fields to be updated.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DomainMapping"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - apps
  "/v1alpha/apps/{appsId}/locations":
    get:
      description: Lists information about the supported locations for this service.
      operationId: appengine.apps.locations.list
      parameters:
        - description: Part of `name`. The resource that owns the locations collection, if applicable.
          in: path
          name: appsId
          required: true
          schema:
            type: string
        - description: A filter to narrow down results to a preferred subset. The filtering language accepts strings like "displayName=tokyo", and is documented in more detail in AIP-160 (https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results to return. If not set, the service selects a default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token received from the next_page_token field in the response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - apps
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/apps/{appsId}/locations/{locationsId}":
    get:
      description: Gets information about a location.
      operationId: appengine.apps.locations.get
      parameters:
        - description: Part of `name`. Resource name for the location.
          in: path
          name: appsId
          required: true
          schema:
            type: string
        - description: Part of `name`. See documentation of `appsId`.
          in: path
          name: locationsId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - apps
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/apps/{appsId}/operations":
    get:
      description: "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the binding to use different resource name schemes, such as users/*/operations. To override the binding, API services can add a binding such as \"/v1/{name=users/*}/operations\" to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
      operationId: appengine.apps.operations.list
      parameters:
        - description: Part of `name`. The name of the operation's parent resource.
          in: path
          name: appsId
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - apps
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/apps/{appsId}/operations/{operationsId}":
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: appengine.apps.operations.get
      parameters:
        - description: Part of `name`. The name of the operation resource.
          in: path
          name: appsId
          required: true
          schema:
            type: string
        - description: Part of `name`. See documentation of `appsId`.
          in: path
          name: operationsId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - apps
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/projects/{projectsId}/locations":
    get:
      description: Lists information about the supported locations for this service.
      operationId: appengine.projects.locations.list
      parameters:
        - description: Part of `name`. The resource that owns the locations collection, if applicable.
          in: path
          name: projectsId
          required: true
          schema:
            type: string
        - description: A filter to narrow down results to a preferred subset. The filtering language accepts strings like "displayName=tokyo", and is documented in more detail in AIP-160 (https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results to return. If not set, the service selects a default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token received from the next_page_token field in the response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/projects/{projectsId}/locations/{locationsId}":
    get:
      description: Gets information about a location.
      operationId: appengine.projects.locations.get
      parameters:
        - description: Part of `name`. Resource name for the location.
          in: path
          name: projectsId
          required: true
          schema:
            type: string
        - description: Part of `name`. See documentation of `projectsId`.
          in: path
          name: locationsId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/projects/{projectsId}/locations/{locationsId}/operations":
    get:
      description: "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the binding to use different resource name schemes, such as users/*/operations. To override the binding, API services can add a binding such as \"/v1/{name=users/*}/operations\" to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
      operationId: appengine.projects.locations.operations.list
      parameters:
        - description: Part of `name`. The name of the operation's parent resource.
          in: path
          name: projectsId
          required: true
          schema:
            type: string
        - description: Part of `name`. See documentation of `projectsId`.
          in: path
          name: locationsId
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}":
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: appengine.projects.locations.operations.get
      parameters:
        - description: Part of `name`. The name of the operation resource.
          in: path
          name: projectsId
          required: true
          schema:
            type: string
        - description: Part of `name`. See documentation of `projectsId`.
          in: path
          name: locationsId
          required: true
          schema:
            type: string
        - description: Part of `name`. See documentation of `projectsId`.
          in: path
          name: operationsId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AuthorizedCertificate:
      description: An SSL certificate that a user has been authorized to administer. A user is authorized to administer any certificate that applies to one of their authorized domains.
      properties:
        certificateRawData:
          $ref: "#/components/schemas/CertificateRawData"
          description: The SSL certificate serving the AuthorizedCertificate resource. This must be obtained independently from a certificate authority.
        displayName:
          description: "The user-specified display name of the certificate. This is not guaranteed to be unique. Example: My Certificate."
          type: string
        domainMappingsCount:
          description: Aggregate count of the domain mappings with this certificate mapped. This count includes domain mappings on applications for which the user does not have VIEWER permissions.Only returned by GET or LIST requests when specifically requested by the view=FULL_CERTIFICATE option.@OutputOnly
          format: int32
          type: integer
        domainNames:
          description: "Topmost applicable domains of this certificate. This certificate applies to these domains and their subdomains. Example: example.com.@OutputOnly"
          items:
            type: string
          type: array
        expireTime:
          description: The time when this certificate expires. To update the renewal time on this certificate, upload an SSL certificate with a different expiration time using AuthorizedCertificates.UpdateAuthorizedCertificate.@OutputOnly
          format: google-datetime
          type: string
        id:
          description: "Relative name of the certificate. This is a unique value autogenerated on AuthorizedCertificate resource creation. Example: 12345.@OutputOnly"
          type: string
        managedCertificate:
          $ref: "#/components/schemas/ManagedCertificate"
          description: Only applicable if this certificate is managed by App Engine. Managed certificates are tied to the lifecycle of a DomainMapping and cannot be updated or deleted via the AuthorizedCertificates API. If this certificate is manually administered by the user, this field will be empty.@OutputOnly
        name:
          description: "Full path to the AuthorizedCertificate resource in the API. Example: apps/myapp/authorizedCertificates/12345.@OutputOnly"
          type: string
        visibleDomainMappings:
          description: "The full paths to user visible Domain Mapping resources that have this certificate mapped. Example: apps/myapp/domainMappings/example.com.This may not represent the full list of mapped domain mappings if the user does not have VIEWER permissions on all of the applications that have this certificate mapped. See domain_mappings_count for a complete count.Only returned by GET or LIST requests when specifically requested by the view=FULL_CERTIFICATE option.@OutputOnly"
          items:
            type: string
          type: array
      type: object
    AuthorizedDomain:
      description: A domain that a user has been authorized to administer. To authorize use of a domain, verify ownership via Webmaster Central (https://www.google.com/webmasters/verification/home).
      properties:
        id:
          description: "Fully qualified domain name of the domain authorized for use. Example: example.com."
          type: string
        name:
          description: "Full path to the AuthorizedDomain resource in the API. Example: apps/myapp/authorizedDomains/example.com.@OutputOnly"
          type: string
      type: object
    CertificateRawData:
      description: An SSL certificate obtained from a certificate authority.
      properties:
        privateKey:
          description: "Unencrypted PEM encoded RSA private key. This field is set once on certificate creation and then encrypted. The key size must be 2048 bits or fewer. Must include the header and footer. Example: -----BEGIN RSA PRIVATE KEY----- -----END RSA PRIVATE KEY----- @InputOnly"
          type: string
        publicCertificate:
          description: "PEM encoded x.509 public key certificate. This field is set once on certificate creation. Must include the header and footer. Example: -----BEGIN CERTIFICATE----- -----END CERTIFICATE----- "
          type: string
      type: object
    CreateVersionMetadataV1:
      description: Metadata for the given google.longrunning.Operation during a google.appengine.v1.CreateVersionRequest.
      properties:
        cloudBuildId:
          description: The Cloud Build ID if one was created as part of the version create. @OutputOnly
          type: string
      type: object
    CreateVersionMetadataV1Alpha:
      description: Metadata for the given google.longrunning.Operation during a google.appengine.v1alpha.CreateVersionRequest.
      properties:
        cloudBuildId:
          description: The Cloud Build ID if one was created as part of the version create. @OutputOnly
          type: string
      type: object
    CreateVersionMetadataV1Beta:
      description: Metadata for the given google.longrunning.Operation during a google.appengine.v1beta.CreateVersionRequest.
      properties:
        cloudBuildId:
          description: The Cloud Build ID if one was created as part of the version create. @OutputOnly
          type: string
      type: object
    DomainMapping:
      description: A domain serving an App Engine application.
      properties:
        id:
          description: "Relative name of the domain serving the application. Example: example.com."
          type: string
        name:
          description: "Full path to the DomainMapping resource in the API. Example: apps/myapp/domainMapping/example.com.@OutputOnly"
          type: string
        resourceRecords:
          description: The resource records required to configure this domain mapping. These records must be added to the domain's DNS configuration in order to serve the application via this domain mapping.@OutputOnly
          items:
            $ref: "#/components/schemas/ResourceRecord"
          type: array
        sslSettings:
          $ref: "#/components/schemas/SslSettings"
          description: SSL configuration for this domain. If unconfigured, this domain will not serve with SSL.
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } "
      properties: {}
      type: object
    GoogleAppengineV1betaLocationMetadata:
      description: Metadata for the given google.cloud.location.Location.
      properties:
        flexibleEnvironmentAvailable:
          description: App Engine flexible environment is available in the given location.@OutputOnly
          type: boolean
        searchApiAvailable:
          description: Output only. Search API (https://cloud.google.com/appengine/docs/standard/python/search) is available in the given location.
          readOnly: true
          type: boolean
        standardEnvironmentAvailable:
          description: App Engine standard environment is available in the given location.@OutputOnly
          type: boolean
      type: object
    ListAuthorizedCertificatesResponse:
      description: Response message for AuthorizedCertificates.ListAuthorizedCertificates.
      properties:
        certificates:
          description: The SSL certificates the user is authorized to administer.
          items:
            $ref: "#/components/schemas/AuthorizedCertificate"
          type: array
        nextPageToken:
          description: Continuation token for fetching the next page of results.
          type: string
      type: object
    ListAuthorizedDomainsResponse:
      description: Response message for AuthorizedDomains.ListAuthorizedDomains.
      properties:
        domains:
          description: The authorized domains belonging to the user.
          items:
            $ref: "#/components/schemas/AuthorizedDomain"
          type: array
        nextPageToken:
          description: Continuation token for fetching the next page of results.
          type: string
      type: object
    ListDomainMappingsResponse:
      description: Response message for DomainMappings.ListDomainMappings.
      properties:
        domainMappings:
          description: The domain mappings for the application.
          items:
            $ref: "#/components/schemas/DomainMapping"
          type: array
        nextPageToken:
          description: Continuation token for fetching the next page of results.
          type: string
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    Location:
      description: A resource that represents Google Cloud Platform location.
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"} '
          type: object
        locationId:
          description: 'The canonical id for this location. For example: "us-east1".'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: "projects/example-project/locations/us-east1"'
          type: string
      type: object
    LocationMetadata:
      description: Metadata for the given google.cloud.location.Location.
      properties:
        flexibleEnvironmentAvailable:
          description: App Engine flexible environment is available in the given location.@OutputOnly
          type: boolean
        searchApiAvailable:
          description: Output only. Search API (https://cloud.google.com/appengine/docs/standard/python/search) is available in the given location.
          readOnly: true
          type: boolean
        standardEnvironmentAvailable:
          description: App Engine standard environment is available in the given location.@OutputOnly
          type: boolean
      type: object
    ManagedCertificate:
      description: A certificate managed by App Engine.
      properties:
        lastRenewalTime:
          description: Time at which the certificate was last renewed. The renewal process is fully managed. Certificate renewal will automatically occur before the certificate expires. Renewal errors can be tracked via ManagementStatus.@OutputOnly
          format: google-datetime
          type: string
        status:
          description: Status of certificate management. Refers to the most recent certificate acquisition or renewal attempt.@OutputOnly
          enum:
            - UNSPECIFIED_STATUS
            - OK
            - PENDING
            - FAILED_RETRYING_INTERNAL
            - FAILED_RETRYING_NOT_VISIBLE
            - FAILED_PERMANENTLY_NOT_VISIBLE
            - FAILED_RETRYING_CAA_FORBIDDEN
            - FAILED_RETRYING_CAA_CHECKING
          type: string
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.
          type: object
      type: object
    OperationMetadataV1:
      description: Metadata for the given google.longrunning.Operation.
      properties:
        createVersionMetadata:
          $ref: "#/components/schemas/CreateVersionMetadataV1"
        endTime:
          description: Time that this operation completed.@OutputOnly
          format: google-datetime
          type: string
        ephemeralMessage:
          description: Ephemeral message that may change every time the operation is polled. @OutputOnly
          type: string
        insertTime:
          description: Time that this operation was created.@OutputOnly
          format: google-datetime
          type: string
        method:
          description: "API method that initiated this operation. Example: google.appengine.v1.Versions.CreateVersion.@OutputOnly"
          type: string
        target:
          description: "Name of the resource that this operation is acting on. Example: apps/myapp/services/default.@OutputOnly"
          type: string
        user:
          description: User who requested this operation.@OutputOnly
          type: string
        warning:
          description: Durable messages that persist on every operation poll. @OutputOnly
          items:
            type: string
          type: array
      type: object
    OperationMetadataV1Alpha:
      description: Metadata for the given google.longrunning.Operation.
      properties:
        createVersionMetadata:
          $ref: "#/components/schemas/CreateVersionMetadataV1Alpha"
        endTime:
          description: Time that this operation completed.@OutputOnly
          format: google-datetime
          type: string
        ephemeralMessage:
          description: Ephemeral message that may change every time the operation is polled. @OutputOnly
          type: string
        insertTime:
          description: Time that this operation was created.@OutputOnly
          format: google-datetime
          type: string
        method:
          description: "API method that initiated this operation. Example: google.appengine.v1alpha.Versions.CreateVersion.@OutputOnly"
          type: string
        target:
          description: "Name of the resource that this operation is acting on. Example: apps/myapp/services/default.@OutputOnly"
          type: string
        user:
          description: User who requested this operation.@OutputOnly
          type: string
        warning:
          description: Durable messages that persist on every operation poll. @OutputOnly
          items:
            type: string
          type: array
      type: object
    OperationMetadataV1Beta:
      description: Metadata for the given google.longrunning.Operation.
      properties:
        createVersionMetadata:
          $ref: "#/components/schemas/CreateVersionMetadataV1Beta"
        endTime:
          description: Time that this operation completed.@OutputOnly
          format: google-datetime
          type: string
        ephemeralMessage:
          description: Ephemeral message that may change every time the operation is polled. @OutputOnly
          type: string
        insertTime:
          description: Time that this operation was created.@OutputOnly
          format: google-datetime
          type: string
        method:
          description: "API method that initiated this operation. Example: google.appengine.v1beta.Versions.CreateVersion.@OutputOnly"
          type: string
        target:
          description: "Name of the resource that this operation is acting on. Example: apps/myapp/services/default.@OutputOnly"
          type: string
        user:
          description: User who requested this operation.@OutputOnly
          type: string
        warning:
          description: Durable messages that persist on every operation poll. @OutputOnly
          items:
            type: string
          type: array
      type: object
    ResourceRecord:
      description: A DNS resource record.
      properties:
        name:
          description: "Relative name of the object affected by this record. Only applicable for CNAME records. Example: 'www'."
          type: string
        rrdata:
          description: Data for this record. Values vary by record type, as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1).
          type: string
        type:
          description: "Resource record type. Example: AAAA."
          enum:
            - A
            - AAAA
            - CNAME
          type: string
      type: object
    SslSettings:
      description: SSL configuration for a DomainMapping resource.
      properties:
        certificateId:
          description: "ID of the AuthorizedCertificate resource configuring SSL for the application. Clearing this field will remove SSL support.By default, a managed certificate is automatically created for every domain mapping. To omit SSL support or to configure SSL manually, specify no_managed_certificate on a CREATE or UPDATE request. You must be authorized to administer the AuthorizedCertificate resource to manually map it to a DomainMapping resource. Example: 12345."
          type: string
        isManagedCertificate:
          description: Whether the mapped certificate is an App Engine managed certificate. Managed certificates are created by default with a domain mapping. To opt out, specify no_managed_certificate on a CREATE or UPDATE request.@OutputOnly
          type: boolean
      type: object
    Status:
      description: "The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/appengine.admin: View and manage your applications deployed on Google App Engine
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud services and see the email address of your Google Account
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/appengine.admin: View and manage your applications deployed on Google App Engine
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud services and see the email address of your Google Account
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
source:
  url: {}
