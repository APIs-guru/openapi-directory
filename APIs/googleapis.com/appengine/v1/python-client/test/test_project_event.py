# coding: utf-8

"""
    App Engine Admin API

    Provisions and manages developers' App Engine applications.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.project_event import ProjectEvent

class TestProjectEvent(unittest.TestCase):
    """ProjectEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProjectEvent:
        """Test ProjectEvent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProjectEvent`
        """
        model = ProjectEvent()
        if include_optional:
            return ProjectEvent(
                event_id = '',
                phase = 'UNKNOWN',
                project_metadata = openapi_client.models.projects_metadata.ProjectsMetadata(
                    consumer_project_id = '', 
                    consumer_project_number = '', 
                    consumer_project_state = 'UNKNOWN_STATE', 
                    p4_service_account = '', 
                    producer_project_id = '', 
                    producer_project_number = '', 
                    tenant_project_id = '', 
                    tenant_project_number = '', ),
                state = openapi_client.models.container_state.ContainerState(
                    current_reasons = openapi_client.models.reasons.Reasons(
                        abuse = 'ABUSE_UNKNOWN_REASON', 
                        billing = 'BILLING_UNKNOWN_REASON', 
                        data_governance = 'DATA_GOVERNANCE_UNKNOWN_REASON', 
                        service_activation = 'SERVICE_ACTIVATION_STATUS_UNSPECIFIED', 
                        service_management = 'SERVICE_MANAGEMENT_UNKNOWN_REASON', ), 
                    previous_reasons = openapi_client.models.reasons.Reasons(
                        abuse = 'ABUSE_UNKNOWN_REASON', 
                        billing = 'BILLING_UNKNOWN_REASON', 
                        data_governance = 'DATA_GOVERNANCE_UNKNOWN_REASON', 
                        service_activation = 'SERVICE_ACTIVATION_STATUS_UNSPECIFIED', 
                        service_management = 'SERVICE_MANAGEMENT_UNKNOWN_REASON', ), 
                    state = 'UNKNOWN_STATE', )
            )
        else:
            return ProjectEvent(
        )
        """

    def testProjectEvent(self):
        """Test ProjectEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
