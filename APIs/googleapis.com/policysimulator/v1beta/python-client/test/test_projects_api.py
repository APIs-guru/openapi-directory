# coding: utf-8

"""
    Policy Simulator API

     Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.projects_api import ProjectsApi


class TestProjectsApi(unittest.TestCase):
    """ProjectsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ProjectsApi()

    def tearDown(self) -> None:
        pass

    def test_policysimulator_projects_locations_replays_create(self) -> None:
        """Test case for policysimulator_projects_locations_replays_create

        """
        pass

    def test_policysimulator_projects_locations_replays_list(self) -> None:
        """Test case for policysimulator_projects_locations_replays_list

        """
        pass

    def test_policysimulator_projects_locations_replays_operations_list(self) -> None:
        """Test case for policysimulator_projects_locations_replays_operations_list

        """
        pass

    def test_policysimulator_projects_locations_replays_results_list(self) -> None:
        """Test case for policysimulator_projects_locations_replays_results_list

        """
        pass


if __name__ == '__main__':
    unittest.main()
