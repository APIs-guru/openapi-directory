# coding: utf-8

"""
    Google Analytics API

    Views and manages your Google Analytics data.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.profile import Profile

class TestProfile(unittest.TestCase):
    """Profile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Profile:
        """Test Profile
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Profile`
        """
        model = Profile()
        if include_optional:
            return Profile(
                account_id = '',
                bot_filtering_enabled = True,
                child_link = openapi_client.models.profile_child_link.Profile_childLink(
                    href = '', 
                    type = 'analytics#goals', ),
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                currency = '',
                default_page = '',
                e_commerce_tracking = True,
                enhanced_e_commerce_tracking = True,
                exclude_query_parameters = '',
                id = '',
                internal_web_property_id = '',
                kind = 'analytics#profile',
                name = '',
                parent_link = openapi_client.models.profile_parent_link.Profile_parentLink(
                    href = '', 
                    type = 'analytics#webproperty', ),
                permissions = openapi_client.models.profile_permissions.Profile_permissions(
                    effective = [
                        ''
                        ], ),
                self_link = '',
                site_search_category_parameters = '',
                site_search_query_parameters = '',
                starred = True,
                strip_site_search_category_parameters = True,
                strip_site_search_query_parameters = True,
                timezone = '',
                type = '',
                updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                web_property_id = '',
                website_url = ''
            )
        else:
            return Profile(
        )
        """

    def testProfile(self):
        """Test Profile"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
