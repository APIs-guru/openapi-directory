# coding: utf-8

"""
    Google Analytics API

    Views and manages your Google Analytics data.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.experiments import Experiments

class TestExperiments(unittest.TestCase):
    """Experiments unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Experiments:
        """Test Experiments
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Experiments`
        """
        model = Experiments()
        if include_optional:
            return Experiments(
                items = [
                    openapi_client.models.experiment.Experiment(
                        account_id = '', 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = '', 
                        editable_in_ga_ui = True, 
                        end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        equal_weighting = True, 
                        id = '', 
                        internal_web_property_id = '', 
                        kind = 'analytics#experiment', 
                        minimum_experiment_length_in_days = 56, 
                        name = '', 
                        objective_metric = '', 
                        optimization_type = '', 
                        parent_link = openapi_client.models.experiment_parent_link.Experiment_parentLink(
                            href = '', 
                            type = 'analytics#profile', ), 
                        profile_id = '', 
                        reason_experiment_ended = '', 
                        rewrite_variation_urls_as_original = True, 
                        self_link = '', 
                        serving_framework = '', 
                        snippet = '', 
                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        status = '', 
                        traffic_coverage = 1.337, 
                        updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        variations = [
                            openapi_client.models.experiment_variations_inner.Experiment_variations_inner(
                                name = '', 
                                status = '', 
                                url = '', 
                                weight = 1.337, 
                                won = True, )
                            ], 
                        web_property_id = '', 
                        winner_confidence_level = 1.337, 
                        winner_found = True, )
                    ],
                items_per_page = 56,
                kind = 'analytics#experiments',
                next_link = '',
                previous_link = '',
                start_index = 56,
                total_results = 56,
                username = ''
            )
        else:
            return Experiments(
        )
        """

    def testExperiments(self):
        """Test Experiments"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
