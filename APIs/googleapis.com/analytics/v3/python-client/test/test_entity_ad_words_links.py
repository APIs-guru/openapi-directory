# coding: utf-8

"""
    Google Analytics API

    Views and manages your Google Analytics data.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.entity_ad_words_links import EntityAdWordsLinks

class TestEntityAdWordsLinks(unittest.TestCase):
    """EntityAdWordsLinks unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EntityAdWordsLinks:
        """Test EntityAdWordsLinks
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EntityAdWordsLinks`
        """
        model = EntityAdWordsLinks()
        if include_optional:
            return EntityAdWordsLinks(
                items = [
                    openapi_client.models.entity_ad_words_link.EntityAdWordsLink(
                        ad_words_accounts = [
                            openapi_client.models.ad_words_account.AdWordsAccount(
                                auto_tagging_enabled = True, 
                                customer_id = '', 
                                kind = 'analytics#adWordsAccount', )
                            ], 
                        entity = openapi_client.models.entity_ad_words_link_entity.EntityAdWordsLink_entity(
                            web_property_ref = openapi_client.models.web_property_ref.WebPropertyRef(
                                account_id = '', 
                                href = '', 
                                id = '', 
                                internal_web_property_id = '', 
                                kind = 'analytics#webPropertyRef', 
                                name = '', ), ), 
                        id = '', 
                        kind = 'analytics#entityAdWordsLink', 
                        name = '', 
                        profile_ids = [
                            ''
                            ], 
                        self_link = '', )
                    ],
                items_per_page = 56,
                kind = 'analytics#entityAdWordsLinks',
                next_link = '',
                previous_link = '',
                start_index = 56,
                total_results = 56
            )
        else:
            return EntityAdWordsLinks(
        )
        """

    def testEntityAdWordsLinks(self):
        """Test EntityAdWordsLinks"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
