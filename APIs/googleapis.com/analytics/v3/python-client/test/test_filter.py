# coding: utf-8

"""
    Google Analytics API

    Views and manages your Google Analytics data.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.filter import Filter

class TestFilter(unittest.TestCase):
    """Filter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Filter:
        """Test Filter
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Filter`
        """
        model = Filter()
        if include_optional:
            return Filter(
                account_id = '',
                advanced_details = openapi_client.models.filter_advanced_details.Filter_advancedDetails(
                    case_sensitive = True, 
                    extract_a = '', 
                    extract_b = '', 
                    field_a = '', 
                    field_a_index = 56, 
                    field_a_required = True, 
                    field_b = '', 
                    field_b_index = 56, 
                    field_b_required = True, 
                    output_constructor = '', 
                    output_to_field = '', 
                    output_to_field_index = 56, 
                    override_output_field = True, ),
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                exclude_details = openapi_client.models.filter_expression.FilterExpression(
                    case_sensitive = True, 
                    expression_value = '', 
                    field = '', 
                    field_index = 56, 
                    kind = 'analytics#filterExpression', 
                    match_type = '', ),
                id = '',
                include_details = openapi_client.models.filter_expression.FilterExpression(
                    case_sensitive = True, 
                    expression_value = '', 
                    field = '', 
                    field_index = 56, 
                    kind = 'analytics#filterExpression', 
                    match_type = '', ),
                kind = 'analytics#filter',
                lowercase_details = openapi_client.models.filter_lowercase_details.Filter_lowercaseDetails(
                    field = '', 
                    field_index = 56, ),
                name = '',
                parent_link = openapi_client.models.filter_parent_link.Filter_parentLink(
                    href = '', 
                    type = 'analytics#account', ),
                search_and_replace_details = openapi_client.models.filter_search_and_replace_details.Filter_searchAndReplaceDetails(
                    case_sensitive = True, 
                    field = '', 
                    field_index = 56, 
                    replace_string = '', 
                    search_string = '', ),
                self_link = '',
                type = '',
                updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                uppercase_details = openapi_client.models.filter_uppercase_details.Filter_uppercaseDetails(
                    field = '', 
                    field_index = 56, )
            )
        else:
            return Filter(
        )
        """

    def testFilter(self):
        """Test Filter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
