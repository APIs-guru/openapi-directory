# coding: utf-8

"""
    Google Analytics API

    Views and manages your Google Analytics data.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.custom_metrics import CustomMetrics

class TestCustomMetrics(unittest.TestCase):
    """CustomMetrics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomMetrics:
        """Test CustomMetrics
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomMetrics`
        """
        model = CustomMetrics()
        if include_optional:
            return CustomMetrics(
                items = [
                    openapi_client.models.custom_metric.CustomMetric(
                        account_id = '', 
                        active = True, 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        id = '', 
                        index = 56, 
                        kind = 'analytics#customMetric', 
                        max_value = '', 
                        min_value = '', 
                        name = '', 
                        parent_link = openapi_client.models.custom_metric_parent_link.CustomMetric_parentLink(
                            href = '', 
                            type = 'analytics#webproperty', ), 
                        scope = '', 
                        self_link = '', 
                        type = '', 
                        updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        web_property_id = '', )
                    ],
                items_per_page = 56,
                kind = 'analytics#customMetrics',
                next_link = '',
                previous_link = '',
                start_index = 56,
                total_results = 56,
                username = ''
            )
        else:
            return CustomMetrics(
        )
        """

    def testCustomMetrics(self):
        """Test CustomMetrics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
