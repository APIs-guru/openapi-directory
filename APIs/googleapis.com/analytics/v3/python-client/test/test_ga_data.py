# coding: utf-8

"""
    Google Analytics API

    Views and manages your Google Analytics data.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ga_data import GaData

class TestGaData(unittest.TestCase):
    """GaData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GaData:
        """Test GaData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GaData`
        """
        model = GaData()
        if include_optional:
            return GaData(
                column_headers = [
                    openapi_client.models.ga_data_column_headers_inner.GaData_columnHeaders_inner(
                        column_type = '', 
                        data_type = '', 
                        name = '', )
                    ],
                contains_sampled_data = True,
                data_last_refreshed = '',
                data_table = openapi_client.models.ga_data_data_table.GaData_dataTable(
                    cols = [
                        openapi_client.models.ga_data_data_table_cols_inner.GaData_dataTable_cols_inner(
                            id = '', 
                            label = '', 
                            type = '', )
                        ], 
                    rows = [
                        openapi_client.models.ga_data_data_table_rows_inner.GaData_dataTable_rows_inner(
                            c = [
                                openapi_client.models.ga_data_data_table_rows_inner_c_inner.GaData_dataTable_rows_inner_c_inner(
                                    v = '', )
                                ], )
                        ], ),
                id = '',
                items_per_page = 56,
                kind = 'analytics#gaData',
                next_link = '',
                previous_link = '',
                profile_info = openapi_client.models.ga_data_profile_info.GaData_profileInfo(
                    account_id = '', 
                    internal_web_property_id = '', 
                    profile_id = '', 
                    profile_name = '', 
                    table_id = '', 
                    web_property_id = '', ),
                query = openapi_client.models.ga_data_query.GaData_query(
                    dimensions = '', 
                    end_date = '', 
                    filters = '', 
                    ids = '', 
                    max_results = 56, 
                    metrics = [
                        ''
                        ], 
                    sampling_level = '', 
                    segment = '', 
                    sort = [
                        ''
                        ], 
                    start_date = '', 
                    start_index = 56, ),
                rows = [
                    [
                        ''
                        ]
                    ],
                sample_size = '',
                sample_space = '',
                self_link = '',
                total_results = 56,
                totals_for_all_results = {
                    'key' : ''
                    }
            )
        else:
            return GaData(
        )
        """

    def testGaData(self):
        """Test GaData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
