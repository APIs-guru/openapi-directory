# coding: utf-8

"""
    Google Analytics API

    Views and manages your Google Analytics data.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.realtime_data import RealtimeData

class TestRealtimeData(unittest.TestCase):
    """RealtimeData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RealtimeData:
        """Test RealtimeData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RealtimeData`
        """
        model = RealtimeData()
        if include_optional:
            return RealtimeData(
                column_headers = [
                    openapi_client.models.ga_data_column_headers_inner.GaData_columnHeaders_inner(
                        column_type = '', 
                        data_type = '', 
                        name = '', )
                    ],
                id = '',
                kind = 'analytics#realtimeData',
                profile_info = openapi_client.models.realtime_data_profile_info.RealtimeData_profileInfo(
                    account_id = '', 
                    internal_web_property_id = '', 
                    profile_id = '', 
                    profile_name = '', 
                    table_id = '', 
                    web_property_id = '', ),
                query = openapi_client.models.realtime_data_query.RealtimeData_query(
                    dimensions = '', 
                    filters = '', 
                    ids = '', 
                    max_results = 56, 
                    metrics = [
                        ''
                        ], 
                    sort = [
                        ''
                        ], ),
                rows = [
                    [
                        ''
                        ]
                    ],
                self_link = '',
                total_results = 56,
                totals_for_all_results = {
                    'key' : ''
                    }
            )
        else:
            return RealtimeData(
        )
        """

    def testRealtimeData(self):
        """Test RealtimeData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
