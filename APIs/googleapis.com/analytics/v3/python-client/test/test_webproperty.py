# coding: utf-8

"""
    Google Analytics API

    Views and manages your Google Analytics data.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.webproperty import Webproperty

class TestWebproperty(unittest.TestCase):
    """Webproperty unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Webproperty:
        """Test Webproperty
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Webproperty`
        """
        model = Webproperty()
        if include_optional:
            return Webproperty(
                account_id = '',
                child_link = openapi_client.models.webproperty_child_link.Webproperty_childLink(
                    href = '', 
                    type = 'analytics#profiles', ),
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                data_retention_reset_on_new_activity = True,
                data_retention_ttl = '',
                default_profile_id = '',
                id = '',
                industry_vertical = '',
                internal_web_property_id = '',
                kind = 'analytics#webproperty',
                level = '',
                name = '',
                parent_link = openapi_client.models.webproperty_parent_link.Webproperty_parentLink(
                    href = '', 
                    type = 'analytics#account', ),
                permissions = openapi_client.models.webproperty_permissions.Webproperty_permissions(
                    effective = [
                        ''
                        ], ),
                profile_count = 56,
                self_link = '',
                starred = True,
                updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                website_url = ''
            )
        else:
            return Webproperty(
        )
        """

    def testWebproperty(self):
        """Test Webproperty"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
