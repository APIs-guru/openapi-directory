# coding: utf-8

"""
    Gmail API

    The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_filters_response import ListFiltersResponse

class TestListFiltersResponse(unittest.TestCase):
    """ListFiltersResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListFiltersResponse:
        """Test ListFiltersResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListFiltersResponse`
        """
        model = ListFiltersResponse()
        if include_optional:
            return ListFiltersResponse(
                filter = [
                    openapi_client.models.filter.Filter(
                        action = openapi_client.models.filter_action.FilterAction(
                            add_label_ids = [
                                ''
                                ], 
                            forward = '', 
                            remove_label_ids = [
                                ''
                                ], ), 
                        criteria = openapi_client.models.filter_criteria.FilterCriteria(
                            exclude_chats = True, 
                            from = '', 
                            has_attachment = True, 
                            negated_query = '', 
                            query = '', 
                            size = 56, 
                            size_comparison = 'unspecified', 
                            subject = '', 
                            to = '', ), 
                        id = '', )
                    ]
            )
        else:
            return ListFiltersResponse(
        )
        """

    def testListFiltersResponse(self):
        """Test ListFiltersResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
