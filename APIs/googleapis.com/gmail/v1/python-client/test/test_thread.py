# coding: utf-8

"""
    Gmail API

    The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.thread import Thread

class TestThread(unittest.TestCase):
    """Thread unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Thread:
        """Test Thread
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Thread`
        """
        model = Thread()
        if include_optional:
            return Thread(
                history_id = '',
                id = '',
                messages = [
                    openapi_client.models.message.Message(
                        history_id = '', 
                        id = '', 
                        internal_date = '', 
                        label_ids = [
                            ''
                            ], 
                        payload = openapi_client.models.message_part.MessagePart(
                            body = openapi_client.models.message_part_body.MessagePartBody(
                                attachment_id = '', 
                                data = 'YQ==', 
                                size = 56, ), 
                            filename = '', 
                            headers = [
                                openapi_client.models.message_part_header.MessagePartHeader(
                                    name = '', 
                                    value = '', )
                                ], 
                            mime_type = '', 
                            part_id = '', 
                            parts = [
                                openapi_client.models.message_part.MessagePart(
                                    filename = '', 
                                    mime_type = '', 
                                    part_id = '', )
                                ], ), 
                        raw = 'YQ==', 
                        size_estimate = 56, 
                        snippet = '', 
                        thread_id = '', )
                    ],
                snippet = ''
            )
        else:
            return Thread(
        )
        """

    def testThread(self):
        """Test Thread"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
