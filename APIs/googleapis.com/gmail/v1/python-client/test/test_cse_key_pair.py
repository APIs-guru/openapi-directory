# coding: utf-8

"""
    Gmail API

    The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cse_key_pair import CseKeyPair

class TestCseKeyPair(unittest.TestCase):
    """CseKeyPair unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CseKeyPair:
        """Test CseKeyPair
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CseKeyPair`
        """
        model = CseKeyPair()
        if include_optional:
            return CseKeyPair(
                disable_time = '',
                enablement_state = 'stateUnspecified',
                key_pair_id = '',
                pem = '',
                pkcs7 = '',
                private_key_metadata = [
                    openapi_client.models.cse_private_key_metadata.CsePrivateKeyMetadata(
                        hardware_key_metadata = openapi_client.models.hardware_key_metadata.HardwareKeyMetadata(
                            description = '', ), 
                        kacls_key_metadata = openapi_client.models.kacls_key_metadata.KaclsKeyMetadata(
                            kacls_data = '', 
                            kacls_uri = '', ), 
                        private_key_metadata_id = '', )
                    ],
                subject_email_addresses = [
                    ''
                    ]
            )
        else:
            return CseKeyPair(
        )
        """

    def testCseKeyPair(self):
        """Test CseKeyPair"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
