# coding: utf-8

"""
    Managed Service for Microsoft Active Directory API

    The Managed Service for Microsoft Active Directory API is used for managing a highly available, hardened service running Microsoft Active Directory (AD).

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.trust import Trust

class TestTrust(unittest.TestCase):
    """Trust unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Trust:
        """Test Trust
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Trust`
        """
        model = Trust()
        if include_optional:
            return Trust(
                create_time = '',
                last_trust_heartbeat_time = '',
                selective_authentication = True,
                state = 'STATE_UNSPECIFIED',
                state_description = '',
                target_dns_ip_addresses = [
                    ''
                    ],
                target_domain_name = '',
                trust_direction = 'TRUST_DIRECTION_UNSPECIFIED',
                trust_handshake_secret = '',
                trust_type = 'TRUST_TYPE_UNSPECIFIED',
                update_time = ''
            )
        else:
            return Trust(
        )
        """

    def testTrust(self):
        """Test Trust"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
