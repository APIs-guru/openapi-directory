# coding: utf-8

"""
    Managed Service for Microsoft Active Directory API

    The Managed Service for Microsoft Active Directory API is used for managing a highly available, hardened service running Microsoft Active Directory (AD).

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_domains_response import ListDomainsResponse

class TestListDomainsResponse(unittest.TestCase):
    """ListDomainsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListDomainsResponse:
        """Test ListDomainsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListDomainsResponse`
        """
        model = ListDomainsResponse()
        if include_optional:
            return ListDomainsResponse(
                domains = [
                    openapi_client.models.domain.Domain(
                        audit_logs_enabled = True, 
                        authorized_networks = [
                            ''
                            ], 
                        create_time = '', 
                        fqdn = '', 
                        labels = {
                            'key' : ''
                            }, 
                        locations = [
                            ''
                            ], 
                        managed_identities_admin_name = '', 
                        name = '', 
                        reserved_ip_range = '', 
                        state = 'STATE_UNSPECIFIED', 
                        status_message = '', 
                        trusts = [
                            openapi_client.models.trust.Trust(
                                create_time = '', 
                                last_known_trust_connected_heartbeat_time = '', 
                                selective_authentication = True, 
                                state = 'STATE_UNSPECIFIED', 
                                state_description = '', 
                                target_dns_ip_addresses = [
                                    ''
                                    ], 
                                target_domain_name = '', 
                                trust_direction = 'TRUST_DIRECTION_UNSPECIFIED', 
                                trust_handshake_secret = '', 
                                trust_type = 'TRUST_TYPE_UNSPECIFIED', 
                                update_time = '', )
                            ], 
                        update_time = '', )
                    ],
                next_page_token = '',
                unreachable = [
                    ''
                    ]
            )
        else:
            return ListDomainsResponse(
        )
        """

    def testListDomainsResponse(self):
        """Test ListDomainsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
