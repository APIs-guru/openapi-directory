# coding: utf-8

"""
    Managed Service for Microsoft Active Directory API

    The Managed Service for Microsoft Active Directory API is used for managing a highly available, hardened service running Microsoft Active Directory (AD).

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_managedidentities_v1alpha1_op_metadata import GoogleCloudManagedidentitiesV1alpha1OpMetadata

class TestGoogleCloudManagedidentitiesV1alpha1OpMetadata(unittest.TestCase):
    """GoogleCloudManagedidentitiesV1alpha1OpMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudManagedidentitiesV1alpha1OpMetadata:
        """Test GoogleCloudManagedidentitiesV1alpha1OpMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudManagedidentitiesV1alpha1OpMetadata`
        """
        model = GoogleCloudManagedidentitiesV1alpha1OpMetadata()
        if include_optional:
            return GoogleCloudManagedidentitiesV1alpha1OpMetadata(
                api_version = '',
                create_time = '',
                end_time = '',
                requested_cancellation = True,
                target = '',
                verb = ''
            )
        else:
            return GoogleCloudManagedidentitiesV1alpha1OpMetadata(
        )
        """

    def testGoogleCloudManagedidentitiesV1alpha1OpMetadata(self):
        """Test GoogleCloudManagedidentitiesV1alpha1OpMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
