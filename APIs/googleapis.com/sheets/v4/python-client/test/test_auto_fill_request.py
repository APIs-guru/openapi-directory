# coding: utf-8

"""
    Google Sheets API

    Reads and writes Google Sheets.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.auto_fill_request import AutoFillRequest

class TestAutoFillRequest(unittest.TestCase):
    """AutoFillRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AutoFillRequest:
        """Test AutoFillRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AutoFillRequest`
        """
        model = AutoFillRequest()
        if include_optional:
            return AutoFillRequest(
                range = openapi_client.models.grid_range.GridRange(
                    end_column_index = 56, 
                    end_row_index = 56, 
                    sheet_id = 56, 
                    start_column_index = 56, 
                    start_row_index = 56, ),
                source_and_destination = openapi_client.models.source_and_destination.SourceAndDestination(
                    dimension = 'DIMENSION_UNSPECIFIED', 
                    fill_length = 56, 
                    source = openapi_client.models.grid_range.GridRange(
                        end_column_index = 56, 
                        end_row_index = 56, 
                        sheet_id = 56, 
                        start_column_index = 56, 
                        start_row_index = 56, ), ),
                use_alternate_series = True
            )
        else:
            return AutoFillRequest(
        )
        """

    def testAutoFillRequest(self):
        """Test AutoFillRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
