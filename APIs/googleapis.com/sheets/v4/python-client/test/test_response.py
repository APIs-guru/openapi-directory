# coding: utf-8

"""
    Google Sheets API

    Reads and writes Google Sheets.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.response import Response

class TestResponse(unittest.TestCase):
    """Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Response:
        """Test Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Response`
        """
        model = Response()
        if include_optional:
            return Response(
                add_banding = openapi_client.models.add_banding_response.AddBandingResponse(
                    banded_range = openapi_client.models.banded_range.BandedRange(
                        banded_range_id = 56, 
                        column_properties = openapi_client.models.banding_properties.BandingProperties(
                            first_band_color = openapi_client.models.color.Color(
                                alpha = 1.337, 
                                blue = 1.337, 
                                green = 1.337, 
                                red = 1.337, ), 
                            first_band_color_style = openapi_client.models.color_style.ColorStyle(
                                rgb_color = openapi_client.models.color.Color(
                                    alpha = 1.337, 
                                    blue = 1.337, 
                                    green = 1.337, 
                                    red = 1.337, ), 
                                theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                            footer_color = , 
                            footer_color_style = openapi_client.models.color_style.ColorStyle(
                                theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                            header_color = , 
                            header_color_style = , 
                            second_band_color = , 
                            second_band_color_style = , ), 
                        range = openapi_client.models.grid_range.GridRange(
                            end_column_index = 56, 
                            end_row_index = 56, 
                            sheet_id = 56, 
                            start_column_index = 56, 
                            start_row_index = 56, ), 
                        row_properties = openapi_client.models.banding_properties.BandingProperties(), ), ),
                add_chart = openapi_client.models.add_chart_response.AddChartResponse(
                    chart = openapi_client.models.embedded_chart.EmbeddedChart(
                        border = openapi_client.models.embedded_object_border.EmbeddedObjectBorder(
                            color = openapi_client.models.color.Color(
                                alpha = 1.337, 
                                blue = 1.337, 
                                green = 1.337, 
                                red = 1.337, ), 
                            color_style = openapi_client.models.color_style.ColorStyle(
                                rgb_color = openapi_client.models.color.Color(
                                    alpha = 1.337, 
                                    blue = 1.337, 
                                    green = 1.337, 
                                    red = 1.337, ), 
                                theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), ), 
                        chart_id = 56, 
                        position = openapi_client.models.embedded_object_position.EmbeddedObjectPosition(
                            new_sheet = True, 
                            overlay_position = openapi_client.models.overlay_position.OverlayPosition(
                                anchor_cell = openapi_client.models.grid_coordinate.GridCoordinate(
                                    column_index = 56, 
                                    row_index = 56, 
                                    sheet_id = 56, ), 
                                height_pixels = 56, 
                                offset_x_pixels = 56, 
                                offset_y_pixels = 56, 
                                width_pixels = 56, ), 
                            sheet_id = 56, ), 
                        spec = openapi_client.models.chart_spec.ChartSpec(
                            alt_text = '', 
                            background_color = , 
                            background_color_style = openapi_client.models.color_style.ColorStyle(
                                theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                            basic_chart = openapi_client.models.basic_chart_spec.BasicChartSpec(
                                axis = [
                                    openapi_client.models.basic_chart_axis.BasicChartAxis(
                                        format = openapi_client.models.text_format.TextFormat(
                                            bold = True, 
                                            font_family = '', 
                                            font_size = 56, 
                                            foreground_color = , 
                                            foreground_color_style = , 
                                            italic = True, 
                                            link = openapi_client.models.link.Link(
                                                uri = '', ), 
                                            strikethrough = True, 
                                            underline = True, ), 
                                        title = '', 
                                        title_text_position = openapi_client.models.text_position.TextPosition(
                                            horizontal_alignment = 'HORIZONTAL_ALIGN_UNSPECIFIED', ), 
                                        view_window_options = openapi_client.models.chart_axis_view_window_options.ChartAxisViewWindowOptions(
                                            view_window_max = 1.337, 
                                            view_window_min = 1.337, 
                                            view_window_mode = 'DEFAULT_VIEW_WINDOW_MODE', ), )
                                    ], 
                                chart_type = 'BASIC_CHART_TYPE_UNSPECIFIED', 
                                compare_mode = 'BASIC_CHART_COMPARE_MODE_UNSPECIFIED', 
                                domains = [
                                    openapi_client.models.basic_chart_domain.BasicChartDomain(
                                        domain = openapi_client.models.chart_data.ChartData(
                                            aggregate_type = 'CHART_AGGREGATE_TYPE_UNSPECIFIED', 
                                            column_reference = openapi_client.models.data_source_column_reference.DataSourceColumnReference(
                                                name = '', ), 
                                            group_rule = openapi_client.models.chart_group_rule.ChartGroupRule(
                                                date_time_rule = openapi_client.models.chart_date_time_rule.ChartDateTimeRule(
                                                    type = 'CHART_DATE_TIME_RULE_TYPE_UNSPECIFIED', ), 
                                                histogram_rule = openapi_client.models.chart_histogram_rule.ChartHistogramRule(
                                                    interval_size = 1.337, 
                                                    max_value = 1.337, 
                                                    min_value = 1.337, ), ), 
                                            source_range = openapi_client.models.chart_source_range.ChartSourceRange(
                                                sources = [
                                                    openapi_client.models.grid_range.GridRange(
                                                        end_column_index = 56, 
                                                        end_row_index = 56, 
                                                        sheet_id = 56, 
                                                        start_column_index = 56, 
                                                        start_row_index = 56, )
                                                    ], ), ), 
                                        reversed = True, )
                                    ], 
                                header_count = 56, 
                                interpolate_nulls = True, 
                                legend_position = 'BASIC_CHART_LEGEND_POSITION_UNSPECIFIED', 
                                line_smoothing = True, 
                                series = [
                                    openapi_client.models.basic_chart_series.BasicChartSeries(
                                        data_label = openapi_client.models.data_label.DataLabel(
                                            custom_label_data = openapi_client.models.chart_data.ChartData(
                                                aggregate_type = 'CHART_AGGREGATE_TYPE_UNSPECIFIED', ), 
                                            placement = 'DATA_LABEL_PLACEMENT_UNSPECIFIED', 
                                            text_format = openapi_client.models.text_format.TextFormat(
                                                bold = True, 
                                                font_family = '', 
                                                font_size = 56, 
                                                italic = True, 
                                                strikethrough = True, 
                                                underline = True, ), 
                                            type = 'DATA_LABEL_TYPE_UNSPECIFIED', ), 
                                        line_style = openapi_client.models.line_style.LineStyle(
                                            type = 'LINE_DASH_TYPE_UNSPECIFIED', 
                                            width = 56, ), 
                                        point_style = openapi_client.models.point_style.PointStyle(
                                            shape = 'POINT_SHAPE_UNSPECIFIED', 
                                            size = 1.337, ), 
                                        style_overrides = [
                                            openapi_client.models.basic_series_data_point_style_override.BasicSeriesDataPointStyleOverride(
                                                index = 56, )
                                            ], 
                                        target_axis = 'BASIC_CHART_AXIS_POSITION_UNSPECIFIED', 
                                        type = 'BASIC_CHART_TYPE_UNSPECIFIED', )
                                    ], 
                                stacked_type = 'BASIC_CHART_STACKED_TYPE_UNSPECIFIED', 
                                three_dimensional = True, 
                                total_data_label = openapi_client.models.data_label.DataLabel(
                                    placement = 'DATA_LABEL_PLACEMENT_UNSPECIFIED', 
                                    type = 'DATA_LABEL_TYPE_UNSPECIFIED', ), ), 
                            bubble_chart = openapi_client.models.bubble_chart_spec.BubbleChartSpec(
                                bubble_border_color = , 
                                bubble_border_color_style = , 
                                bubble_labels = , 
                                bubble_max_radius_size = 56, 
                                bubble_min_radius_size = 56, 
                                bubble_opacity = 1.337, 
                                bubble_sizes = , 
                                bubble_text_style = , 
                                group_ids = , 
                                legend_position = 'BUBBLE_CHART_LEGEND_POSITION_UNSPECIFIED', ), 
                            candlestick_chart = openapi_client.models.candlestick_chart_spec.CandlestickChartSpec(
                                data = [
                                    openapi_client.models.candlestick_data.CandlestickData(
                                        close_series = openapi_client.models.candlestick_series.CandlestickSeries(), 
                                        high_series = openapi_client.models.candlestick_series.CandlestickSeries(), 
                                        low_series = , 
                                        open_series = , )
                                    ], ), 
                            data_source_chart_properties = openapi_client.models.data_source_chart_properties.DataSourceChartProperties(
                                data_execution_status = openapi_client.models.data_execution_status.DataExecutionStatus(
                                    error_code = 'DATA_EXECUTION_ERROR_CODE_UNSPECIFIED', 
                                    error_message = '', 
                                    last_refresh_time = '', 
                                    state = 'DATA_EXECUTION_STATE_UNSPECIFIED', ), 
                                data_source_id = '', ), 
                            filter_specs = [
                                openapi_client.models.filter_spec.FilterSpec(
                                    column_index = 56, 
                                    data_source_column_reference = openapi_client.models.data_source_column_reference.DataSourceColumnReference(
                                        name = '', ), 
                                    filter_criteria = openapi_client.models.filter_criteria.FilterCriteria(
                                        condition = openapi_client.models.boolean_condition.BooleanCondition(
                                            type = 'CONDITION_TYPE_UNSPECIFIED', 
                                            values = [
                                                openapi_client.models.condition_value.ConditionValue(
                                                    relative_date = 'RELATIVE_DATE_UNSPECIFIED', 
                                                    user_entered_value = '', )
                                                ], ), 
                                        hidden_values = [
                                            ''
                                            ], 
                                        visible_background_color = , 
                                        visible_background_color_style = , 
                                        visible_foreground_color = , 
                                        visible_foreground_color_style = , ), )
                                ], 
                            font_name = '', 
                            hidden_dimension_strategy = 'CHART_HIDDEN_DIMENSION_STRATEGY_UNSPECIFIED', 
                            histogram_chart = openapi_client.models.histogram_chart_spec.HistogramChartSpec(
                                bucket_size = 1.337, 
                                legend_position = 'HISTOGRAM_CHART_LEGEND_POSITION_UNSPECIFIED', 
                                outlier_percentile = 1.337, 
                                show_item_dividers = True, ), 
                            maximized = True, 
                            org_chart = openapi_client.models.org_chart_spec.OrgChartSpec(
                                labels = , 
                                node_color = , 
                                node_color_style = , 
                                node_size = 'ORG_CHART_LABEL_SIZE_UNSPECIFIED', 
                                parent_labels = , 
                                selected_node_color = , 
                                selected_node_color_style = , 
                                tooltips = , ), 
                            pie_chart = openapi_client.models.pie_chart_spec.PieChartSpec(
                                legend_position = 'PIE_CHART_LEGEND_POSITION_UNSPECIFIED', 
                                pie_hole = 1.337, 
                                three_dimensional = True, ), 
                            scorecard_chart = openapi_client.models.scorecard_chart_spec.ScorecardChartSpec(
                                aggregate_type = 'CHART_AGGREGATE_TYPE_UNSPECIFIED', 
                                baseline_value_data = , 
                                baseline_value_format = openapi_client.models.baseline_value_format.BaselineValueFormat(
                                    comparison_type = 'COMPARISON_TYPE_UNDEFINED', 
                                    description = '', 
                                    negative_color = , 
                                    negative_color_style = , 
                                    positive_color = , 
                                    positive_color_style = , ), 
                                custom_format_options = openapi_client.models.chart_custom_number_format_options.ChartCustomNumberFormatOptions(
                                    prefix = '', 
                                    suffix = '', ), 
                                key_value_data = , 
                                key_value_format = openapi_client.models.key_value_format.KeyValueFormat(), 
                                number_format_source = 'CHART_NUMBER_FORMAT_SOURCE_UNDEFINED', 
                                scale_factor = 1.337, ), 
                            sort_specs = [
                                openapi_client.models.sort_spec.SortSpec(
                                    dimension_index = 56, 
                                    sort_order = 'SORT_ORDER_UNSPECIFIED', )
                                ], 
                            subtitle = '', 
                            subtitle_text_format = , 
                            subtitle_text_position = openapi_client.models.text_position.TextPosition(
                                horizontal_alignment = 'HORIZONTAL_ALIGN_UNSPECIFIED', ), 
                            title = '', 
                            title_text_format = , 
                            title_text_position = , 
                            treemap_chart = openapi_client.models.treemap_chart_spec.TreemapChartSpec(
                                color_data = , 
                                color_scale = openapi_client.models.treemap_chart_color_scale.TreemapChartColorScale(
                                    max_value_color = , 
                                    max_value_color_style = , 
                                    mid_value_color = , 
                                    mid_value_color_style = , 
                                    min_value_color = , 
                                    min_value_color_style = , 
                                    no_data_color = , 
                                    no_data_color_style = , ), 
                                header_color = , 
                                header_color_style = , 
                                hide_tooltips = True, 
                                hinted_levels = 56, 
                                levels = 56, 
                                max_value = 1.337, 
                                min_value = 1.337, 
                                size_data = , ), 
                            waterfall_chart = openapi_client.models.waterfall_chart_spec.WaterfallChartSpec(
                                connector_line_style = openapi_client.models.line_style.LineStyle(
                                    type = 'LINE_DASH_TYPE_UNSPECIFIED', 
                                    width = 56, ), 
                                first_value_is_total = True, 
                                hide_connector_lines = True, 
                                stacked_type = 'WATERFALL_STACKED_TYPE_UNSPECIFIED', ), ), ), ),
                add_data_source = openapi_client.models.add_data_source_response.AddDataSourceResponse(
                    data_execution_status = openapi_client.models.data_execution_status.DataExecutionStatus(
                        error_code = 'DATA_EXECUTION_ERROR_CODE_UNSPECIFIED', 
                        error_message = '', 
                        last_refresh_time = '', 
                        state = 'DATA_EXECUTION_STATE_UNSPECIFIED', ), 
                    data_source = openapi_client.models.data_source.DataSource(
                        calculated_columns = [
                            openapi_client.models.data_source_column.DataSourceColumn(
                                formula = '', 
                                reference = openapi_client.models.data_source_column_reference.DataSourceColumnReference(
                                    name = '', ), )
                            ], 
                        data_source_id = '', 
                        sheet_id = 56, 
                        spec = openapi_client.models.data_source_spec.DataSourceSpec(
                            big_query = openapi_client.models.big_query_data_source_spec.BigQueryDataSourceSpec(
                                project_id = '', 
                                query_spec = openapi_client.models.big_query_query_spec.BigQueryQuerySpec(
                                    raw_query = '', ), 
                                table_spec = openapi_client.models.big_query_table_spec.BigQueryTableSpec(
                                    dataset_id = '', 
                                    table_id = '', 
                                    table_project_id = '', ), ), 
                            parameters = [
                                openapi_client.models.data_source_parameter.DataSourceParameter(
                                    name = '', 
                                    named_range_id = '', 
                                    range = openapi_client.models.grid_range.GridRange(
                                        end_column_index = 56, 
                                        end_row_index = 56, 
                                        sheet_id = 56, 
                                        start_column_index = 56, 
                                        start_row_index = 56, ), )
                                ], ), ), ),
                add_dimension_group = openapi_client.models.add_dimension_group_response.AddDimensionGroupResponse(
                    dimension_groups = [
                        openapi_client.models.dimension_group.DimensionGroup(
                            collapsed = True, 
                            depth = 56, 
                            range = openapi_client.models.dimension_range.DimensionRange(
                                dimension = 'DIMENSION_UNSPECIFIED', 
                                end_index = 56, 
                                sheet_id = 56, 
                                start_index = 56, ), )
                        ], ),
                add_filter_view = openapi_client.models.add_filter_view_response.AddFilterViewResponse(
                    filter = openapi_client.models.filter_view.FilterView(
                        criteria = {
                            'key' : openapi_client.models.filter_criteria.FilterCriteria(
                                condition = openapi_client.models.boolean_condition.BooleanCondition(
                                    type = 'CONDITION_TYPE_UNSPECIFIED', 
                                    values = [
                                        openapi_client.models.condition_value.ConditionValue(
                                            relative_date = 'RELATIVE_DATE_UNSPECIFIED', 
                                            user_entered_value = '', )
                                        ], ), 
                                hidden_values = [
                                    ''
                                    ], 
                                visible_background_color = openapi_client.models.color.Color(
                                    alpha = 1.337, 
                                    blue = 1.337, 
                                    green = 1.337, 
                                    red = 1.337, ), 
                                visible_background_color_style = openapi_client.models.color_style.ColorStyle(
                                    rgb_color = openapi_client.models.color.Color(
                                        alpha = 1.337, 
                                        blue = 1.337, 
                                        green = 1.337, 
                                        red = 1.337, ), 
                                    theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                                visible_foreground_color = , 
                                visible_foreground_color_style = openapi_client.models.color_style.ColorStyle(
                                    theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), )
                            }, 
                        filter_specs = [
                            openapi_client.models.filter_spec.FilterSpec(
                                column_index = 56, 
                                data_source_column_reference = openapi_client.models.data_source_column_reference.DataSourceColumnReference(
                                    name = '', ), 
                                filter_criteria = openapi_client.models.filter_criteria.FilterCriteria(), )
                            ], 
                        filter_view_id = 56, 
                        named_range_id = '', 
                        range = openapi_client.models.grid_range.GridRange(
                            end_column_index = 56, 
                            end_row_index = 56, 
                            sheet_id = 56, 
                            start_column_index = 56, 
                            start_row_index = 56, ), 
                        sort_specs = [
                            openapi_client.models.sort_spec.SortSpec(
                                background_color = , 
                                background_color_style = , 
                                dimension_index = 56, 
                                foreground_color = , 
                                foreground_color_style = , 
                                sort_order = 'SORT_ORDER_UNSPECIFIED', )
                            ], 
                        title = '', ), ),
                add_named_range = openapi_client.models.add_named_range_response.AddNamedRangeResponse(
                    named_range = openapi_client.models.named_range.NamedRange(
                        name = '', 
                        named_range_id = '', 
                        range = openapi_client.models.grid_range.GridRange(
                            end_column_index = 56, 
                            end_row_index = 56, 
                            sheet_id = 56, 
                            start_column_index = 56, 
                            start_row_index = 56, ), ), ),
                add_protected_range = openapi_client.models.add_protected_range_response.AddProtectedRangeResponse(
                    protected_range = openapi_client.models.protected_range.ProtectedRange(
                        description = '', 
                        editors = openapi_client.models.editors.Editors(
                            domain_users_can_edit = True, 
                            groups = [
                                ''
                                ], 
                            users = [
                                ''
                                ], ), 
                        named_range_id = '', 
                        protected_range_id = 56, 
                        range = openapi_client.models.grid_range.GridRange(
                            end_column_index = 56, 
                            end_row_index = 56, 
                            sheet_id = 56, 
                            start_column_index = 56, 
                            start_row_index = 56, ), 
                        requesting_user_can_edit = True, 
                        unprotected_ranges = [
                            openapi_client.models.grid_range.GridRange(
                                end_column_index = 56, 
                                end_row_index = 56, 
                                sheet_id = 56, 
                                start_column_index = 56, 
                                start_row_index = 56, )
                            ], 
                        warning_only = True, ), ),
                add_sheet = openapi_client.models.add_sheet_response.AddSheetResponse(
                    properties = openapi_client.models.sheet_properties.SheetProperties(
                        data_source_sheet_properties = openapi_client.models.data_source_sheet_properties.DataSourceSheetProperties(
                            columns = [
                                openapi_client.models.data_source_column.DataSourceColumn(
                                    formula = '', 
                                    reference = openapi_client.models.data_source_column_reference.DataSourceColumnReference(
                                        name = '', ), )
                                ], 
                            data_execution_status = openapi_client.models.data_execution_status.DataExecutionStatus(
                                error_code = 'DATA_EXECUTION_ERROR_CODE_UNSPECIFIED', 
                                error_message = '', 
                                last_refresh_time = '', 
                                state = 'DATA_EXECUTION_STATE_UNSPECIFIED', ), 
                            data_source_id = '', ), 
                        grid_properties = openapi_client.models.grid_properties.GridProperties(
                            column_count = 56, 
                            column_group_control_after = True, 
                            frozen_column_count = 56, 
                            frozen_row_count = 56, 
                            hide_gridlines = True, 
                            row_count = 56, 
                            row_group_control_after = True, ), 
                        hidden = True, 
                        index = 56, 
                        right_to_left = True, 
                        sheet_id = 56, 
                        sheet_type = 'SHEET_TYPE_UNSPECIFIED', 
                        tab_color = openapi_client.models.color.Color(
                            alpha = 1.337, 
                            blue = 1.337, 
                            green = 1.337, 
                            red = 1.337, ), 
                        tab_color_style = openapi_client.models.color_style.ColorStyle(
                            rgb_color = openapi_client.models.color.Color(
                                alpha = 1.337, 
                                blue = 1.337, 
                                green = 1.337, 
                                red = 1.337, ), 
                            theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                        title = '', ), ),
                add_slicer = openapi_client.models.add_slicer_response.AddSlicerResponse(
                    slicer = openapi_client.models.slicer.Slicer(
                        position = openapi_client.models.embedded_object_position.EmbeddedObjectPosition(
                            new_sheet = True, 
                            overlay_position = openapi_client.models.overlay_position.OverlayPosition(
                                anchor_cell = openapi_client.models.grid_coordinate.GridCoordinate(
                                    column_index = 56, 
                                    row_index = 56, 
                                    sheet_id = 56, ), 
                                height_pixels = 56, 
                                offset_x_pixels = 56, 
                                offset_y_pixels = 56, 
                                width_pixels = 56, ), 
                            sheet_id = 56, ), 
                        slicer_id = 56, 
                        spec = openapi_client.models.slicer_spec.SlicerSpec(
                            apply_to_pivot_tables = True, 
                            background_color = openapi_client.models.color.Color(
                                alpha = 1.337, 
                                blue = 1.337, 
                                green = 1.337, 
                                red = 1.337, ), 
                            background_color_style = openapi_client.models.color_style.ColorStyle(
                                rgb_color = openapi_client.models.color.Color(
                                    alpha = 1.337, 
                                    blue = 1.337, 
                                    green = 1.337, 
                                    red = 1.337, ), 
                                theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                            column_index = 56, 
                            data_range = openapi_client.models.grid_range.GridRange(
                                end_column_index = 56, 
                                end_row_index = 56, 
                                sheet_id = 56, 
                                start_column_index = 56, 
                                start_row_index = 56, ), 
                            filter_criteria = openapi_client.models.filter_criteria.FilterCriteria(
                                condition = openapi_client.models.boolean_condition.BooleanCondition(
                                    type = 'CONDITION_TYPE_UNSPECIFIED', 
                                    values = [
                                        openapi_client.models.condition_value.ConditionValue(
                                            relative_date = 'RELATIVE_DATE_UNSPECIFIED', 
                                            user_entered_value = '', )
                                        ], ), 
                                hidden_values = [
                                    ''
                                    ], 
                                visible_background_color = , 
                                visible_background_color_style = openapi_client.models.color_style.ColorStyle(
                                    theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                                visible_foreground_color = , 
                                visible_foreground_color_style = , ), 
                            horizontal_alignment = 'HORIZONTAL_ALIGN_UNSPECIFIED', 
                            text_format = openapi_client.models.text_format.TextFormat(
                                bold = True, 
                                font_family = '', 
                                font_size = 56, 
                                foreground_color = , 
                                foreground_color_style = , 
                                italic = True, 
                                link = openapi_client.models.link.Link(
                                    uri = '', ), 
                                strikethrough = True, 
                                underline = True, ), 
                            title = '', ), ), ),
                create_developer_metadata = openapi_client.models.create_developer_metadata_response.CreateDeveloperMetadataResponse(
                    developer_metadata = openapi_client.models.developer_metadata.DeveloperMetadata(
                        location = openapi_client.models.developer_metadata_location.DeveloperMetadataLocation(
                            dimension_range = openapi_client.models.dimension_range.DimensionRange(
                                dimension = 'DIMENSION_UNSPECIFIED', 
                                end_index = 56, 
                                sheet_id = 56, 
                                start_index = 56, ), 
                            location_type = 'DEVELOPER_METADATA_LOCATION_TYPE_UNSPECIFIED', 
                            sheet_id = 56, 
                            spreadsheet = True, ), 
                        metadata_id = 56, 
                        metadata_key = '', 
                        metadata_value = '', 
                        visibility = 'DEVELOPER_METADATA_VISIBILITY_UNSPECIFIED', ), ),
                delete_conditional_format_rule = openapi_client.models.delete_conditional_format_rule_response.DeleteConditionalFormatRuleResponse(
                    rule = openapi_client.models.conditional_format_rule.ConditionalFormatRule(
                        boolean_rule = openapi_client.models.boolean_rule.BooleanRule(
                            condition = openapi_client.models.boolean_condition.BooleanCondition(
                                type = 'CONDITION_TYPE_UNSPECIFIED', 
                                values = [
                                    openapi_client.models.condition_value.ConditionValue(
                                        relative_date = 'RELATIVE_DATE_UNSPECIFIED', 
                                        user_entered_value = '', )
                                    ], ), 
                            format = openapi_client.models.cell_format.CellFormat(
                                background_color = openapi_client.models.color.Color(
                                    alpha = 1.337, 
                                    blue = 1.337, 
                                    green = 1.337, 
                                    red = 1.337, ), 
                                background_color_style = openapi_client.models.color_style.ColorStyle(
                                    rgb_color = openapi_client.models.color.Color(
                                        alpha = 1.337, 
                                        blue = 1.337, 
                                        green = 1.337, 
                                        red = 1.337, ), 
                                    theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                                borders = openapi_client.models.borders.Borders(
                                    bottom = openapi_client.models.border.Border(
                                        color = , 
                                        color_style = openapi_client.models.color_style.ColorStyle(
                                            theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                                        style = 'STYLE_UNSPECIFIED', 
                                        width = 56, ), 
                                    left = openapi_client.models.border.Border(
                                        style = 'STYLE_UNSPECIFIED', 
                                        width = 56, ), 
                                    right = , 
                                    top = , ), 
                                horizontal_alignment = 'HORIZONTAL_ALIGN_UNSPECIFIED', 
                                hyperlink_display_type = 'HYPERLINK_DISPLAY_TYPE_UNSPECIFIED', 
                                number_format = openapi_client.models.number_format.NumberFormat(
                                    pattern = '', 
                                    type = 'NUMBER_FORMAT_TYPE_UNSPECIFIED', ), 
                                padding = openapi_client.models.padding.Padding(), 
                                text_direction = 'TEXT_DIRECTION_UNSPECIFIED', 
                                text_format = openapi_client.models.text_format.TextFormat(
                                    bold = True, 
                                    font_family = '', 
                                    font_size = 56, 
                                    foreground_color = , 
                                    foreground_color_style = , 
                                    italic = True, 
                                    link = openapi_client.models.link.Link(
                                        uri = '', ), 
                                    strikethrough = True, 
                                    underline = True, ), 
                                text_rotation = openapi_client.models.text_rotation.TextRotation(
                                    angle = 56, 
                                    vertical = True, ), 
                                vertical_alignment = 'VERTICAL_ALIGN_UNSPECIFIED', 
                                wrap_strategy = 'WRAP_STRATEGY_UNSPECIFIED', ), ), 
                        gradient_rule = openapi_client.models.gradient_rule.GradientRule(
                            maxpoint = openapi_client.models.interpolation_point.InterpolationPoint(
                                type = 'INTERPOLATION_POINT_TYPE_UNSPECIFIED', 
                                value = '', ), 
                            midpoint = openapi_client.models.interpolation_point.InterpolationPoint(
                                type = 'INTERPOLATION_POINT_TYPE_UNSPECIFIED', 
                                value = '', ), 
                            minpoint = , ), 
                        ranges = [
                            openapi_client.models.grid_range.GridRange(
                                end_column_index = 56, 
                                end_row_index = 56, 
                                sheet_id = 56, 
                                start_column_index = 56, 
                                start_row_index = 56, )
                            ], ), ),
                delete_developer_metadata = openapi_client.models.delete_developer_metadata_response.DeleteDeveloperMetadataResponse(
                    deleted_developer_metadata = [
                        openapi_client.models.developer_metadata.DeveloperMetadata(
                            location = openapi_client.models.developer_metadata_location.DeveloperMetadataLocation(
                                dimension_range = openapi_client.models.dimension_range.DimensionRange(
                                    dimension = 'DIMENSION_UNSPECIFIED', 
                                    end_index = 56, 
                                    sheet_id = 56, 
                                    start_index = 56, ), 
                                location_type = 'DEVELOPER_METADATA_LOCATION_TYPE_UNSPECIFIED', 
                                sheet_id = 56, 
                                spreadsheet = True, ), 
                            metadata_id = 56, 
                            metadata_key = '', 
                            metadata_value = '', 
                            visibility = 'DEVELOPER_METADATA_VISIBILITY_UNSPECIFIED', )
                        ], ),
                delete_dimension_group = openapi_client.models.delete_dimension_group_response.DeleteDimensionGroupResponse(
                    dimension_groups = [
                        openapi_client.models.dimension_group.DimensionGroup(
                            collapsed = True, 
                            depth = 56, 
                            range = openapi_client.models.dimension_range.DimensionRange(
                                dimension = 'DIMENSION_UNSPECIFIED', 
                                end_index = 56, 
                                sheet_id = 56, 
                                start_index = 56, ), )
                        ], ),
                delete_duplicates = openapi_client.models.delete_duplicates_response.DeleteDuplicatesResponse(
                    duplicates_removed_count = 56, ),
                duplicate_filter_view = openapi_client.models.duplicate_filter_view_response.DuplicateFilterViewResponse(
                    filter = openapi_client.models.filter_view.FilterView(
                        criteria = {
                            'key' : openapi_client.models.filter_criteria.FilterCriteria(
                                condition = openapi_client.models.boolean_condition.BooleanCondition(
                                    type = 'CONDITION_TYPE_UNSPECIFIED', 
                                    values = [
                                        openapi_client.models.condition_value.ConditionValue(
                                            relative_date = 'RELATIVE_DATE_UNSPECIFIED', 
                                            user_entered_value = '', )
                                        ], ), 
                                hidden_values = [
                                    ''
                                    ], 
                                visible_background_color = openapi_client.models.color.Color(
                                    alpha = 1.337, 
                                    blue = 1.337, 
                                    green = 1.337, 
                                    red = 1.337, ), 
                                visible_background_color_style = openapi_client.models.color_style.ColorStyle(
                                    rgb_color = openapi_client.models.color.Color(
                                        alpha = 1.337, 
                                        blue = 1.337, 
                                        green = 1.337, 
                                        red = 1.337, ), 
                                    theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                                visible_foreground_color = , 
                                visible_foreground_color_style = openapi_client.models.color_style.ColorStyle(
                                    theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), )
                            }, 
                        filter_specs = [
                            openapi_client.models.filter_spec.FilterSpec(
                                column_index = 56, 
                                data_source_column_reference = openapi_client.models.data_source_column_reference.DataSourceColumnReference(
                                    name = '', ), 
                                filter_criteria = openapi_client.models.filter_criteria.FilterCriteria(), )
                            ], 
                        filter_view_id = 56, 
                        named_range_id = '', 
                        range = openapi_client.models.grid_range.GridRange(
                            end_column_index = 56, 
                            end_row_index = 56, 
                            sheet_id = 56, 
                            start_column_index = 56, 
                            start_row_index = 56, ), 
                        sort_specs = [
                            openapi_client.models.sort_spec.SortSpec(
                                background_color = , 
                                background_color_style = , 
                                dimension_index = 56, 
                                foreground_color = , 
                                foreground_color_style = , 
                                sort_order = 'SORT_ORDER_UNSPECIFIED', )
                            ], 
                        title = '', ), ),
                duplicate_sheet = openapi_client.models.duplicate_sheet_response.DuplicateSheetResponse(
                    properties = openapi_client.models.sheet_properties.SheetProperties(
                        data_source_sheet_properties = openapi_client.models.data_source_sheet_properties.DataSourceSheetProperties(
                            columns = [
                                openapi_client.models.data_source_column.DataSourceColumn(
                                    formula = '', 
                                    reference = openapi_client.models.data_source_column_reference.DataSourceColumnReference(
                                        name = '', ), )
                                ], 
                            data_execution_status = openapi_client.models.data_execution_status.DataExecutionStatus(
                                error_code = 'DATA_EXECUTION_ERROR_CODE_UNSPECIFIED', 
                                error_message = '', 
                                last_refresh_time = '', 
                                state = 'DATA_EXECUTION_STATE_UNSPECIFIED', ), 
                            data_source_id = '', ), 
                        grid_properties = openapi_client.models.grid_properties.GridProperties(
                            column_count = 56, 
                            column_group_control_after = True, 
                            frozen_column_count = 56, 
                            frozen_row_count = 56, 
                            hide_gridlines = True, 
                            row_count = 56, 
                            row_group_control_after = True, ), 
                        hidden = True, 
                        index = 56, 
                        right_to_left = True, 
                        sheet_id = 56, 
                        sheet_type = 'SHEET_TYPE_UNSPECIFIED', 
                        tab_color = openapi_client.models.color.Color(
                            alpha = 1.337, 
                            blue = 1.337, 
                            green = 1.337, 
                            red = 1.337, ), 
                        tab_color_style = openapi_client.models.color_style.ColorStyle(
                            rgb_color = openapi_client.models.color.Color(
                                alpha = 1.337, 
                                blue = 1.337, 
                                green = 1.337, 
                                red = 1.337, ), 
                            theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                        title = '', ), ),
                find_replace = openapi_client.models.find_replace_response.FindReplaceResponse(
                    formulas_changed = 56, 
                    occurrences_changed = 56, 
                    rows_changed = 56, 
                    sheets_changed = 56, 
                    values_changed = 56, ),
                refresh_data_source = openapi_client.models.refresh_data_source_response.RefreshDataSourceResponse(
                    statuses = [
                        openapi_client.models.refresh_data_source_object_execution_status.RefreshDataSourceObjectExecutionStatus(
                            data_execution_status = openapi_client.models.data_execution_status.DataExecutionStatus(
                                error_code = 'DATA_EXECUTION_ERROR_CODE_UNSPECIFIED', 
                                error_message = '', 
                                last_refresh_time = '', 
                                state = 'DATA_EXECUTION_STATE_UNSPECIFIED', ), 
                            reference = openapi_client.models.data_source_object_reference.DataSourceObjectReference(
                                chart_id = 56, 
                                data_source_formula_cell = openapi_client.models.grid_coordinate.GridCoordinate(
                                    column_index = 56, 
                                    row_index = 56, 
                                    sheet_id = 56, ), 
                                data_source_pivot_table_anchor_cell = openapi_client.models.grid_coordinate.GridCoordinate(
                                    column_index = 56, 
                                    row_index = 56, 
                                    sheet_id = 56, ), 
                                data_source_table_anchor_cell = , 
                                sheet_id = '', ), )
                        ], ),
                trim_whitespace = openapi_client.models.trim_whitespace_response.TrimWhitespaceResponse(
                    cells_changed_count = 56, ),
                update_conditional_format_rule = openapi_client.models.update_conditional_format_rule_response.UpdateConditionalFormatRuleResponse(
                    new_index = 56, 
                    new_rule = openapi_client.models.conditional_format_rule.ConditionalFormatRule(
                        boolean_rule = openapi_client.models.boolean_rule.BooleanRule(
                            condition = openapi_client.models.boolean_condition.BooleanCondition(
                                type = 'CONDITION_TYPE_UNSPECIFIED', 
                                values = [
                                    openapi_client.models.condition_value.ConditionValue(
                                        relative_date = 'RELATIVE_DATE_UNSPECIFIED', 
                                        user_entered_value = '', )
                                    ], ), 
                            format = openapi_client.models.cell_format.CellFormat(
                                background_color = openapi_client.models.color.Color(
                                    alpha = 1.337, 
                                    blue = 1.337, 
                                    green = 1.337, 
                                    red = 1.337, ), 
                                background_color_style = openapi_client.models.color_style.ColorStyle(
                                    rgb_color = openapi_client.models.color.Color(
                                        alpha = 1.337, 
                                        blue = 1.337, 
                                        green = 1.337, 
                                        red = 1.337, ), 
                                    theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                                borders = openapi_client.models.borders.Borders(
                                    bottom = openapi_client.models.border.Border(
                                        color = , 
                                        color_style = openapi_client.models.color_style.ColorStyle(
                                            theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                                        style = 'STYLE_UNSPECIFIED', 
                                        width = 56, ), 
                                    left = openapi_client.models.border.Border(
                                        style = 'STYLE_UNSPECIFIED', 
                                        width = 56, ), 
                                    right = , 
                                    top = , ), 
                                horizontal_alignment = 'HORIZONTAL_ALIGN_UNSPECIFIED', 
                                hyperlink_display_type = 'HYPERLINK_DISPLAY_TYPE_UNSPECIFIED', 
                                number_format = openapi_client.models.number_format.NumberFormat(
                                    pattern = '', 
                                    type = 'NUMBER_FORMAT_TYPE_UNSPECIFIED', ), 
                                padding = openapi_client.models.padding.Padding(), 
                                text_direction = 'TEXT_DIRECTION_UNSPECIFIED', 
                                text_format = openapi_client.models.text_format.TextFormat(
                                    bold = True, 
                                    font_family = '', 
                                    font_size = 56, 
                                    foreground_color = , 
                                    foreground_color_style = , 
                                    italic = True, 
                                    link = openapi_client.models.link.Link(
                                        uri = '', ), 
                                    strikethrough = True, 
                                    underline = True, ), 
                                text_rotation = openapi_client.models.text_rotation.TextRotation(
                                    angle = 56, 
                                    vertical = True, ), 
                                vertical_alignment = 'VERTICAL_ALIGN_UNSPECIFIED', 
                                wrap_strategy = 'WRAP_STRATEGY_UNSPECIFIED', ), ), 
                        gradient_rule = openapi_client.models.gradient_rule.GradientRule(
                            maxpoint = openapi_client.models.interpolation_point.InterpolationPoint(
                                type = 'INTERPOLATION_POINT_TYPE_UNSPECIFIED', 
                                value = '', ), 
                            midpoint = openapi_client.models.interpolation_point.InterpolationPoint(
                                type = 'INTERPOLATION_POINT_TYPE_UNSPECIFIED', 
                                value = '', ), 
                            minpoint = , ), 
                        ranges = [
                            openapi_client.models.grid_range.GridRange(
                                end_column_index = 56, 
                                end_row_index = 56, 
                                sheet_id = 56, 
                                start_column_index = 56, 
                                start_row_index = 56, )
                            ], ), 
                    old_index = 56, 
                    old_rule = openapi_client.models.conditional_format_rule.ConditionalFormatRule(), ),
                update_data_source = openapi_client.models.update_data_source_response.UpdateDataSourceResponse(
                    data_execution_status = openapi_client.models.data_execution_status.DataExecutionStatus(
                        error_code = 'DATA_EXECUTION_ERROR_CODE_UNSPECIFIED', 
                        error_message = '', 
                        last_refresh_time = '', 
                        state = 'DATA_EXECUTION_STATE_UNSPECIFIED', ), 
                    data_source = openapi_client.models.data_source.DataSource(
                        calculated_columns = [
                            openapi_client.models.data_source_column.DataSourceColumn(
                                formula = '', 
                                reference = openapi_client.models.data_source_column_reference.DataSourceColumnReference(
                                    name = '', ), )
                            ], 
                        data_source_id = '', 
                        sheet_id = 56, 
                        spec = openapi_client.models.data_source_spec.DataSourceSpec(
                            big_query = openapi_client.models.big_query_data_source_spec.BigQueryDataSourceSpec(
                                project_id = '', 
                                query_spec = openapi_client.models.big_query_query_spec.BigQueryQuerySpec(
                                    raw_query = '', ), 
                                table_spec = openapi_client.models.big_query_table_spec.BigQueryTableSpec(
                                    dataset_id = '', 
                                    table_id = '', 
                                    table_project_id = '', ), ), 
                            parameters = [
                                openapi_client.models.data_source_parameter.DataSourceParameter(
                                    name = '', 
                                    named_range_id = '', 
                                    range = openapi_client.models.grid_range.GridRange(
                                        end_column_index = 56, 
                                        end_row_index = 56, 
                                        sheet_id = 56, 
                                        start_column_index = 56, 
                                        start_row_index = 56, ), )
                                ], ), ), ),
                update_developer_metadata = openapi_client.models.update_developer_metadata_response.UpdateDeveloperMetadataResponse(
                    developer_metadata = [
                        openapi_client.models.developer_metadata.DeveloperMetadata(
                            location = openapi_client.models.developer_metadata_location.DeveloperMetadataLocation(
                                dimension_range = openapi_client.models.dimension_range.DimensionRange(
                                    dimension = 'DIMENSION_UNSPECIFIED', 
                                    end_index = 56, 
                                    sheet_id = 56, 
                                    start_index = 56, ), 
                                location_type = 'DEVELOPER_METADATA_LOCATION_TYPE_UNSPECIFIED', 
                                sheet_id = 56, 
                                spreadsheet = True, ), 
                            metadata_id = 56, 
                            metadata_key = '', 
                            metadata_value = '', 
                            visibility = 'DEVELOPER_METADATA_VISIBILITY_UNSPECIFIED', )
                        ], ),
                update_embedded_object_position = openapi_client.models.update_embedded_object_position_response.UpdateEmbeddedObjectPositionResponse(
                    position = openapi_client.models.embedded_object_position.EmbeddedObjectPosition(
                        new_sheet = True, 
                        overlay_position = openapi_client.models.overlay_position.OverlayPosition(
                            anchor_cell = openapi_client.models.grid_coordinate.GridCoordinate(
                                column_index = 56, 
                                row_index = 56, 
                                sheet_id = 56, ), 
                            height_pixels = 56, 
                            offset_x_pixels = 56, 
                            offset_y_pixels = 56, 
                            width_pixels = 56, ), 
                        sheet_id = 56, ), )
            )
        else:
            return Response(
        )
        """

    def testResponse(self):
        """Test Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
