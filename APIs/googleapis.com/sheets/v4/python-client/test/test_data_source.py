# coding: utf-8

"""
    Google Sheets API

    Reads and writes Google Sheets.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.data_source import DataSource

class TestDataSource(unittest.TestCase):
    """DataSource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataSource:
        """Test DataSource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataSource`
        """
        model = DataSource()
        if include_optional:
            return DataSource(
                calculated_columns = [
                    openapi_client.models.data_source_column.DataSourceColumn(
                        formula = '', 
                        reference = openapi_client.models.data_source_column_reference.DataSourceColumnReference(
                            name = '', ), )
                    ],
                data_source_id = '',
                sheet_id = 56,
                spec = openapi_client.models.data_source_spec.DataSourceSpec(
                    big_query = openapi_client.models.big_query_data_source_spec.BigQueryDataSourceSpec(
                        project_id = '', 
                        query_spec = openapi_client.models.big_query_query_spec.BigQueryQuerySpec(
                            raw_query = '', ), 
                        table_spec = openapi_client.models.big_query_table_spec.BigQueryTableSpec(
                            dataset_id = '', 
                            table_id = '', 
                            table_project_id = '', ), ), 
                    parameters = [
                        openapi_client.models.data_source_parameter.DataSourceParameter(
                            name = '', 
                            named_range_id = '', 
                            range = openapi_client.models.grid_range.GridRange(
                                end_column_index = 56, 
                                end_row_index = 56, 
                                sheet_id = 56, 
                                start_column_index = 56, 
                                start_row_index = 56, ), )
                        ], )
            )
        else:
            return DataSource(
        )
        """

    def testDataSource(self):
        """Test DataSource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
