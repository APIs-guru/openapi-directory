# coding: utf-8

"""
    Google Sheets API

    Reads and writes Google Sheets.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_borders_request import UpdateBordersRequest

class TestUpdateBordersRequest(unittest.TestCase):
    """UpdateBordersRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateBordersRequest:
        """Test UpdateBordersRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateBordersRequest`
        """
        model = UpdateBordersRequest()
        if include_optional:
            return UpdateBordersRequest(
                bottom = openapi_client.models.border.Border(
                    color = openapi_client.models.color.Color(
                        alpha = 1.337, 
                        blue = 1.337, 
                        green = 1.337, 
                        red = 1.337, ), 
                    color_style = openapi_client.models.color_style.ColorStyle(
                        rgb_color = openapi_client.models.color.Color(
                            alpha = 1.337, 
                            blue = 1.337, 
                            green = 1.337, 
                            red = 1.337, ), 
                        theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                    style = 'STYLE_UNSPECIFIED', 
                    width = 56, ),
                inner_horizontal = openapi_client.models.border.Border(
                    color = openapi_client.models.color.Color(
                        alpha = 1.337, 
                        blue = 1.337, 
                        green = 1.337, 
                        red = 1.337, ), 
                    color_style = openapi_client.models.color_style.ColorStyle(
                        rgb_color = openapi_client.models.color.Color(
                            alpha = 1.337, 
                            blue = 1.337, 
                            green = 1.337, 
                            red = 1.337, ), 
                        theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                    style = 'STYLE_UNSPECIFIED', 
                    width = 56, ),
                inner_vertical = openapi_client.models.border.Border(
                    color = openapi_client.models.color.Color(
                        alpha = 1.337, 
                        blue = 1.337, 
                        green = 1.337, 
                        red = 1.337, ), 
                    color_style = openapi_client.models.color_style.ColorStyle(
                        rgb_color = openapi_client.models.color.Color(
                            alpha = 1.337, 
                            blue = 1.337, 
                            green = 1.337, 
                            red = 1.337, ), 
                        theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                    style = 'STYLE_UNSPECIFIED', 
                    width = 56, ),
                left = openapi_client.models.border.Border(
                    color = openapi_client.models.color.Color(
                        alpha = 1.337, 
                        blue = 1.337, 
                        green = 1.337, 
                        red = 1.337, ), 
                    color_style = openapi_client.models.color_style.ColorStyle(
                        rgb_color = openapi_client.models.color.Color(
                            alpha = 1.337, 
                            blue = 1.337, 
                            green = 1.337, 
                            red = 1.337, ), 
                        theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                    style = 'STYLE_UNSPECIFIED', 
                    width = 56, ),
                range = openapi_client.models.grid_range.GridRange(
                    end_column_index = 56, 
                    end_row_index = 56, 
                    sheet_id = 56, 
                    start_column_index = 56, 
                    start_row_index = 56, ),
                right = openapi_client.models.border.Border(
                    color = openapi_client.models.color.Color(
                        alpha = 1.337, 
                        blue = 1.337, 
                        green = 1.337, 
                        red = 1.337, ), 
                    color_style = openapi_client.models.color_style.ColorStyle(
                        rgb_color = openapi_client.models.color.Color(
                            alpha = 1.337, 
                            blue = 1.337, 
                            green = 1.337, 
                            red = 1.337, ), 
                        theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                    style = 'STYLE_UNSPECIFIED', 
                    width = 56, ),
                top = openapi_client.models.border.Border(
                    color = openapi_client.models.color.Color(
                        alpha = 1.337, 
                        blue = 1.337, 
                        green = 1.337, 
                        red = 1.337, ), 
                    color_style = openapi_client.models.color_style.ColorStyle(
                        rgb_color = openapi_client.models.color.Color(
                            alpha = 1.337, 
                            blue = 1.337, 
                            green = 1.337, 
                            red = 1.337, ), 
                        theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                    style = 'STYLE_UNSPECIFIED', 
                    width = 56, )
            )
        else:
            return UpdateBordersRequest(
        )
        """

    def testUpdateBordersRequest(self):
        """Test UpdateBordersRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
