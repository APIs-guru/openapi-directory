# coding: utf-8

"""
    Google Sheets API

    Reads and writes Google Sheets.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pivot_filter_spec import PivotFilterSpec

class TestPivotFilterSpec(unittest.TestCase):
    """PivotFilterSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PivotFilterSpec:
        """Test PivotFilterSpec
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PivotFilterSpec`
        """
        model = PivotFilterSpec()
        if include_optional:
            return PivotFilterSpec(
                column_offset_index = 56,
                data_source_column_reference = openapi_client.models.data_source_column_reference.DataSourceColumnReference(
                    name = '', ),
                filter_criteria = openapi_client.models.pivot_filter_criteria.PivotFilterCriteria(
                    condition = openapi_client.models.boolean_condition.BooleanCondition(
                        type = 'CONDITION_TYPE_UNSPECIFIED', 
                        values = [
                            openapi_client.models.condition_value.ConditionValue(
                                relative_date = 'RELATIVE_DATE_UNSPECIFIED', 
                                user_entered_value = '', )
                            ], ), 
                    visible_by_default = True, 
                    visible_values = [
                        ''
                        ], )
            )
        else:
            return PivotFilterSpec(
        )
        """

    def testPivotFilterSpec(self):
        """Test PivotFilterSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
