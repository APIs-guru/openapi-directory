# coding: utf-8

"""
    Google Sheets API

    Reads and writes Google Sheets.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pivot_group import PivotGroup

class TestPivotGroup(unittest.TestCase):
    """PivotGroup unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PivotGroup:
        """Test PivotGroup
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PivotGroup`
        """
        model = PivotGroup()
        if include_optional:
            return PivotGroup(
                data_source_column_reference = openapi_client.models.data_source_column_reference.DataSourceColumnReference(
                    name = '', ),
                group_limit = openapi_client.models.pivot_group_limit.PivotGroupLimit(
                    apply_order = 56, 
                    count_limit = 56, ),
                group_rule = openapi_client.models.pivot_group_rule.PivotGroupRule(
                    date_time_rule = openapi_client.models.date_time_rule.DateTimeRule(
                        type = 'DATE_TIME_RULE_TYPE_UNSPECIFIED', ), 
                    histogram_rule = openapi_client.models.histogram_rule.HistogramRule(
                        end = 1.337, 
                        interval = 1.337, 
                        start = 1.337, ), 
                    manual_rule = openapi_client.models.manual_rule.ManualRule(
                        groups = [
                            openapi_client.models.manual_rule_group.ManualRuleGroup(
                                group_name = openapi_client.models.extended_value.ExtendedValue(
                                    bool_value = True, 
                                    error_value = openapi_client.models.error_value.ErrorValue(
                                        message = '', 
                                        type = 'ERROR_TYPE_UNSPECIFIED', ), 
                                    formula_value = '', 
                                    number_value = 1.337, 
                                    string_value = '', ), 
                                items = [
                                    openapi_client.models.extended_value.ExtendedValue(
                                        bool_value = True, 
                                        formula_value = '', 
                                        number_value = 1.337, 
                                        string_value = '', )
                                    ], )
                            ], ), ),
                label = '',
                repeat_headings = True,
                show_totals = True,
                sort_order = 'SORT_ORDER_UNSPECIFIED',
                source_column_offset = 56,
                value_bucket = openapi_client.models.pivot_group_sort_value_bucket.PivotGroupSortValueBucket(
                    buckets = [
                        openapi_client.models.extended_value.ExtendedValue(
                            bool_value = True, 
                            error_value = openapi_client.models.error_value.ErrorValue(
                                message = '', 
                                type = 'ERROR_TYPE_UNSPECIFIED', ), 
                            formula_value = '', 
                            number_value = 1.337, 
                            string_value = '', )
                        ], 
                    values_index = 56, ),
                value_metadata = [
                    openapi_client.models.pivot_group_value_metadata.PivotGroupValueMetadata(
                        collapsed = True, 
                        value = openapi_client.models.extended_value.ExtendedValue(
                            bool_value = True, 
                            error_value = openapi_client.models.error_value.ErrorValue(
                                message = '', 
                                type = 'ERROR_TYPE_UNSPECIFIED', ), 
                            formula_value = '', 
                            number_value = 1.337, 
                            string_value = '', ), )
                    ]
            )
        else:
            return PivotGroup(
        )
        """

    def testPivotGroup(self):
        """Test PivotGroup"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
