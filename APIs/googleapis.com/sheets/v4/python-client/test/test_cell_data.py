# coding: utf-8

"""
    Google Sheets API

    Reads and writes Google Sheets.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cell_data import CellData

class TestCellData(unittest.TestCase):
    """CellData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CellData:
        """Test CellData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CellData`
        """
        model = CellData()
        if include_optional:
            return CellData(
                data_source_formula = openapi_client.models.data_source_formula.DataSourceFormula(
                    data_execution_status = openapi_client.models.data_execution_status.DataExecutionStatus(
                        error_code = 'DATA_EXECUTION_ERROR_CODE_UNSPECIFIED', 
                        error_message = '', 
                        last_refresh_time = '', 
                        state = 'DATA_EXECUTION_STATE_UNSPECIFIED', ), 
                    data_source_id = '', ),
                data_source_table = openapi_client.models.data_source_table.DataSourceTable(
                    column_selection_type = 'DATA_SOURCE_TABLE_COLUMN_SELECTION_TYPE_UNSPECIFIED', 
                    columns = [
                        openapi_client.models.data_source_column_reference.DataSourceColumnReference(
                            name = '', )
                        ], 
                    data_execution_status = openapi_client.models.data_execution_status.DataExecutionStatus(
                        error_code = 'DATA_EXECUTION_ERROR_CODE_UNSPECIFIED', 
                        error_message = '', 
                        last_refresh_time = '', 
                        state = 'DATA_EXECUTION_STATE_UNSPECIFIED', ), 
                    data_source_id = '', 
                    filter_specs = [
                        openapi_client.models.filter_spec.FilterSpec(
                            column_index = 56, 
                            data_source_column_reference = openapi_client.models.data_source_column_reference.DataSourceColumnReference(
                                name = '', ), 
                            filter_criteria = openapi_client.models.filter_criteria.FilterCriteria(
                                condition = openapi_client.models.boolean_condition.BooleanCondition(
                                    type = 'CONDITION_TYPE_UNSPECIFIED', 
                                    values = [
                                        openapi_client.models.condition_value.ConditionValue(
                                            relative_date = 'RELATIVE_DATE_UNSPECIFIED', 
                                            user_entered_value = '', )
                                        ], ), 
                                hidden_values = [
                                    ''
                                    ], 
                                visible_background_color = openapi_client.models.color.Color(
                                    alpha = 1.337, 
                                    blue = 1.337, 
                                    green = 1.337, 
                                    red = 1.337, ), 
                                visible_background_color_style = openapi_client.models.color_style.ColorStyle(
                                    rgb_color = openapi_client.models.color.Color(
                                        alpha = 1.337, 
                                        blue = 1.337, 
                                        green = 1.337, 
                                        red = 1.337, ), 
                                    theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                                visible_foreground_color = , 
                                visible_foreground_color_style = openapi_client.models.color_style.ColorStyle(
                                    theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), ), )
                        ], 
                    row_limit = 56, 
                    sort_specs = [
                        openapi_client.models.sort_spec.SortSpec(
                            background_color = , 
                            background_color_style = , 
                            dimension_index = 56, 
                            foreground_color = , 
                            foreground_color_style = , 
                            sort_order = 'SORT_ORDER_UNSPECIFIED', )
                        ], ),
                data_validation = openapi_client.models.data_validation_rule.DataValidationRule(
                    condition = openapi_client.models.boolean_condition.BooleanCondition(
                        type = 'CONDITION_TYPE_UNSPECIFIED', 
                        values = [
                            openapi_client.models.condition_value.ConditionValue(
                                relative_date = 'RELATIVE_DATE_UNSPECIFIED', 
                                user_entered_value = '', )
                            ], ), 
                    input_message = '', 
                    show_custom_ui = True, 
                    strict = True, ),
                effective_format = openapi_client.models.cell_format.CellFormat(
                    background_color = openapi_client.models.color.Color(
                        alpha = 1.337, 
                        blue = 1.337, 
                        green = 1.337, 
                        red = 1.337, ), 
                    background_color_style = openapi_client.models.color_style.ColorStyle(
                        rgb_color = openapi_client.models.color.Color(
                            alpha = 1.337, 
                            blue = 1.337, 
                            green = 1.337, 
                            red = 1.337, ), 
                        theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                    borders = openapi_client.models.borders.Borders(
                        bottom = openapi_client.models.border.Border(
                            color = , 
                            color_style = openapi_client.models.color_style.ColorStyle(
                                theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                            style = 'STYLE_UNSPECIFIED', 
                            width = 56, ), 
                        left = openapi_client.models.border.Border(
                            style = 'STYLE_UNSPECIFIED', 
                            width = 56, ), 
                        right = , 
                        top = , ), 
                    horizontal_alignment = 'HORIZONTAL_ALIGN_UNSPECIFIED', 
                    hyperlink_display_type = 'HYPERLINK_DISPLAY_TYPE_UNSPECIFIED', 
                    number_format = openapi_client.models.number_format.NumberFormat(
                        pattern = '', 
                        type = 'NUMBER_FORMAT_TYPE_UNSPECIFIED', ), 
                    padding = openapi_client.models.padding.Padding(), 
                    text_direction = 'TEXT_DIRECTION_UNSPECIFIED', 
                    text_format = openapi_client.models.text_format.TextFormat(
                        bold = True, 
                        font_family = '', 
                        font_size = 56, 
                        foreground_color = , 
                        foreground_color_style = , 
                        italic = True, 
                        link = openapi_client.models.link.Link(
                            uri = '', ), 
                        strikethrough = True, 
                        underline = True, ), 
                    text_rotation = openapi_client.models.text_rotation.TextRotation(
                        angle = 56, 
                        vertical = True, ), 
                    vertical_alignment = 'VERTICAL_ALIGN_UNSPECIFIED', 
                    wrap_strategy = 'WRAP_STRATEGY_UNSPECIFIED', ),
                effective_value = openapi_client.models.extended_value.ExtendedValue(
                    bool_value = True, 
                    error_value = openapi_client.models.error_value.ErrorValue(
                        message = '', 
                        type = 'ERROR_TYPE_UNSPECIFIED', ), 
                    formula_value = '', 
                    number_value = 1.337, 
                    string_value = '', ),
                formatted_value = '',
                hyperlink = '',
                note = '',
                pivot_table = openapi_client.models.pivot_table.PivotTable(
                    columns = [
                        openapi_client.models.pivot_group.PivotGroup(
                            data_source_column_reference = openapi_client.models.data_source_column_reference.DataSourceColumnReference(
                                name = '', ), 
                            group_limit = openapi_client.models.pivot_group_limit.PivotGroupLimit(
                                apply_order = 56, 
                                count_limit = 56, ), 
                            group_rule = openapi_client.models.pivot_group_rule.PivotGroupRule(
                                date_time_rule = openapi_client.models.date_time_rule.DateTimeRule(
                                    type = 'DATE_TIME_RULE_TYPE_UNSPECIFIED', ), 
                                histogram_rule = openapi_client.models.histogram_rule.HistogramRule(
                                    end = 1.337, 
                                    interval = 1.337, 
                                    start = 1.337, ), 
                                manual_rule = openapi_client.models.manual_rule.ManualRule(
                                    groups = [
                                        openapi_client.models.manual_rule_group.ManualRuleGroup(
                                            group_name = openapi_client.models.extended_value.ExtendedValue(
                                                bool_value = True, 
                                                error_value = openapi_client.models.error_value.ErrorValue(
                                                    message = '', 
                                                    type = 'ERROR_TYPE_UNSPECIFIED', ), 
                                                formula_value = '', 
                                                number_value = 1.337, 
                                                string_value = '', ), 
                                            items = [
                                                openapi_client.models.extended_value.ExtendedValue(
                                                    bool_value = True, 
                                                    formula_value = '', 
                                                    number_value = 1.337, 
                                                    string_value = '', )
                                                ], )
                                        ], ), ), 
                            label = '', 
                            repeat_headings = True, 
                            show_totals = True, 
                            sort_order = 'SORT_ORDER_UNSPECIFIED', 
                            source_column_offset = 56, 
                            value_bucket = openapi_client.models.pivot_group_sort_value_bucket.PivotGroupSortValueBucket(
                                buckets = [
                                    
                                    ], 
                                values_index = 56, ), 
                            value_metadata = [
                                openapi_client.models.pivot_group_value_metadata.PivotGroupValueMetadata(
                                    collapsed = True, 
                                    value = , )
                                ], )
                        ], 
                    criteria = {
                        'key' : openapi_client.models.pivot_filter_criteria.PivotFilterCriteria(
                            condition = openapi_client.models.boolean_condition.BooleanCondition(
                                type = 'CONDITION_TYPE_UNSPECIFIED', 
                                values = [
                                    openapi_client.models.condition_value.ConditionValue(
                                        relative_date = 'RELATIVE_DATE_UNSPECIFIED', 
                                        user_entered_value = '', )
                                    ], ), 
                            visible_by_default = True, 
                            visible_values = [
                                ''
                                ], )
                        }, 
                    data_execution_status = openapi_client.models.data_execution_status.DataExecutionStatus(
                        error_code = 'DATA_EXECUTION_ERROR_CODE_UNSPECIFIED', 
                        error_message = '', 
                        last_refresh_time = '', 
                        state = 'DATA_EXECUTION_STATE_UNSPECIFIED', ), 
                    data_source_id = '', 
                    filter_specs = [
                        openapi_client.models.pivot_filter_spec.PivotFilterSpec(
                            column_offset_index = 56, 
                            filter_criteria = openapi_client.models.pivot_filter_criteria.PivotFilterCriteria(
                                visible_by_default = True, ), )
                        ], 
                    rows = [
                        openapi_client.models.pivot_group.PivotGroup(
                            label = '', 
                            repeat_headings = True, 
                            show_totals = True, 
                            sort_order = 'SORT_ORDER_UNSPECIFIED', 
                            source_column_offset = 56, )
                        ], 
                    source = openapi_client.models.grid_range.GridRange(
                        end_column_index = 56, 
                        end_row_index = 56, 
                        sheet_id = 56, 
                        start_column_index = 56, 
                        start_row_index = 56, ), 
                    value_layout = 'HORIZONTAL', 
                    values = [
                        openapi_client.models.pivot_value.PivotValue(
                            calculated_display_type = 'PIVOT_VALUE_CALCULATED_DISPLAY_TYPE_UNSPECIFIED', 
                            formula = '', 
                            name = '', 
                            source_column_offset = 56, 
                            summarize_function = 'PIVOT_STANDARD_VALUE_FUNCTION_UNSPECIFIED', )
                        ], ),
                text_format_runs = [
                    openapi_client.models.text_format_run.TextFormatRun(
                        format = openapi_client.models.text_format.TextFormat(
                            bold = True, 
                            font_family = '', 
                            font_size = 56, 
                            foreground_color = openapi_client.models.color.Color(
                                alpha = 1.337, 
                                blue = 1.337, 
                                green = 1.337, 
                                red = 1.337, ), 
                            foreground_color_style = openapi_client.models.color_style.ColorStyle(
                                rgb_color = openapi_client.models.color.Color(
                                    alpha = 1.337, 
                                    blue = 1.337, 
                                    green = 1.337, 
                                    red = 1.337, ), 
                                theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                            italic = True, 
                            link = openapi_client.models.link.Link(
                                uri = '', ), 
                            strikethrough = True, 
                            underline = True, ), 
                        start_index = 56, )
                    ],
                user_entered_format = openapi_client.models.cell_format.CellFormat(
                    background_color = openapi_client.models.color.Color(
                        alpha = 1.337, 
                        blue = 1.337, 
                        green = 1.337, 
                        red = 1.337, ), 
                    background_color_style = openapi_client.models.color_style.ColorStyle(
                        rgb_color = openapi_client.models.color.Color(
                            alpha = 1.337, 
                            blue = 1.337, 
                            green = 1.337, 
                            red = 1.337, ), 
                        theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                    borders = openapi_client.models.borders.Borders(
                        bottom = openapi_client.models.border.Border(
                            color = , 
                            color_style = openapi_client.models.color_style.ColorStyle(
                                theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                            style = 'STYLE_UNSPECIFIED', 
                            width = 56, ), 
                        left = openapi_client.models.border.Border(
                            style = 'STYLE_UNSPECIFIED', 
                            width = 56, ), 
                        right = , 
                        top = , ), 
                    horizontal_alignment = 'HORIZONTAL_ALIGN_UNSPECIFIED', 
                    hyperlink_display_type = 'HYPERLINK_DISPLAY_TYPE_UNSPECIFIED', 
                    number_format = openapi_client.models.number_format.NumberFormat(
                        pattern = '', 
                        type = 'NUMBER_FORMAT_TYPE_UNSPECIFIED', ), 
                    padding = openapi_client.models.padding.Padding(), 
                    text_direction = 'TEXT_DIRECTION_UNSPECIFIED', 
                    text_format = openapi_client.models.text_format.TextFormat(
                        bold = True, 
                        font_family = '', 
                        font_size = 56, 
                        foreground_color = , 
                        foreground_color_style = , 
                        italic = True, 
                        link = openapi_client.models.link.Link(
                            uri = '', ), 
                        strikethrough = True, 
                        underline = True, ), 
                    text_rotation = openapi_client.models.text_rotation.TextRotation(
                        angle = 56, 
                        vertical = True, ), 
                    vertical_alignment = 'VERTICAL_ALIGN_UNSPECIFIED', 
                    wrap_strategy = 'WRAP_STRATEGY_UNSPECIFIED', ),
                user_entered_value = openapi_client.models.extended_value.ExtendedValue(
                    bool_value = True, 
                    error_value = openapi_client.models.error_value.ErrorValue(
                        message = '', 
                        type = 'ERROR_TYPE_UNSPECIFIED', ), 
                    formula_value = '', 
                    number_value = 1.337, 
                    string_value = '', )
            )
        else:
            return CellData(
        )
        """

    def testCellData(self):
        """Test CellData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
