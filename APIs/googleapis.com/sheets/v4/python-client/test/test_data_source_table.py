# coding: utf-8

"""
    Google Sheets API

    Reads and writes Google Sheets.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.data_source_table import DataSourceTable

class TestDataSourceTable(unittest.TestCase):
    """DataSourceTable unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataSourceTable:
        """Test DataSourceTable
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataSourceTable`
        """
        model = DataSourceTable()
        if include_optional:
            return DataSourceTable(
                column_selection_type = 'DATA_SOURCE_TABLE_COLUMN_SELECTION_TYPE_UNSPECIFIED',
                columns = [
                    openapi_client.models.data_source_column_reference.DataSourceColumnReference(
                        name = '', )
                    ],
                data_execution_status = openapi_client.models.data_execution_status.DataExecutionStatus(
                    error_code = 'DATA_EXECUTION_ERROR_CODE_UNSPECIFIED', 
                    error_message = '', 
                    last_refresh_time = '', 
                    state = 'DATA_EXECUTION_STATE_UNSPECIFIED', ),
                data_source_id = '',
                filter_specs = [
                    openapi_client.models.filter_spec.FilterSpec(
                        column_index = 56, 
                        data_source_column_reference = openapi_client.models.data_source_column_reference.DataSourceColumnReference(
                            name = '', ), 
                        filter_criteria = openapi_client.models.filter_criteria.FilterCriteria(
                            condition = openapi_client.models.boolean_condition.BooleanCondition(
                                type = 'CONDITION_TYPE_UNSPECIFIED', 
                                values = [
                                    openapi_client.models.condition_value.ConditionValue(
                                        relative_date = 'RELATIVE_DATE_UNSPECIFIED', 
                                        user_entered_value = '', )
                                    ], ), 
                            hidden_values = [
                                ''
                                ], 
                            visible_background_color = openapi_client.models.color.Color(
                                alpha = 1.337, 
                                blue = 1.337, 
                                green = 1.337, 
                                red = 1.337, ), 
                            visible_background_color_style = openapi_client.models.color_style.ColorStyle(
                                rgb_color = openapi_client.models.color.Color(
                                    alpha = 1.337, 
                                    blue = 1.337, 
                                    green = 1.337, 
                                    red = 1.337, ), 
                                theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                            visible_foreground_color = , 
                            visible_foreground_color_style = openapi_client.models.color_style.ColorStyle(
                                theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), ), )
                    ],
                row_limit = 56,
                sort_specs = [
                    openapi_client.models.sort_spec.SortSpec(
                        background_color = openapi_client.models.color.Color(
                            alpha = 1.337, 
                            blue = 1.337, 
                            green = 1.337, 
                            red = 1.337, ), 
                        background_color_style = openapi_client.models.color_style.ColorStyle(
                            rgb_color = openapi_client.models.color.Color(
                                alpha = 1.337, 
                                blue = 1.337, 
                                green = 1.337, 
                                red = 1.337, ), 
                            theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                        data_source_column_reference = openapi_client.models.data_source_column_reference.DataSourceColumnReference(
                            name = '', ), 
                        dimension_index = 56, 
                        foreground_color = , 
                        foreground_color_style = openapi_client.models.color_style.ColorStyle(
                            theme_color = 'THEME_COLOR_TYPE_UNSPECIFIED', ), 
                        sort_order = 'SORT_ORDER_UNSPECIFIED', )
                    ]
            )
        else:
            return DataSourceTable(
        )
        """

    def testDataSourceTable(self):
        """Test DataSourceTable"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
