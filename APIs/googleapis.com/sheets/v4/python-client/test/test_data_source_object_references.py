# coding: utf-8

"""
    Google Sheets API

    Reads and writes Google Sheets.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.data_source_object_references import DataSourceObjectReferences

class TestDataSourceObjectReferences(unittest.TestCase):
    """DataSourceObjectReferences unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataSourceObjectReferences:
        """Test DataSourceObjectReferences
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataSourceObjectReferences`
        """
        model = DataSourceObjectReferences()
        if include_optional:
            return DataSourceObjectReferences(
                references = [
                    openapi_client.models.data_source_object_reference.DataSourceObjectReference(
                        chart_id = 56, 
                        data_source_formula_cell = openapi_client.models.grid_coordinate.GridCoordinate(
                            column_index = 56, 
                            row_index = 56, 
                            sheet_id = 56, ), 
                        data_source_pivot_table_anchor_cell = openapi_client.models.grid_coordinate.GridCoordinate(
                            column_index = 56, 
                            row_index = 56, 
                            sheet_id = 56, ), 
                        data_source_table_anchor_cell = , 
                        sheet_id = '', )
                    ]
            )
        else:
            return DataSourceObjectReferences(
        )
        """

    def testDataSourceObjectReferences(self):
        """Test DataSourceObjectReferences"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
