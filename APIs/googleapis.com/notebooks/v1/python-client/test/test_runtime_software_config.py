# coding: utf-8

"""
    Notebooks API

    Notebooks API is used to manage notebook resources in Google Cloud.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.runtime_software_config import RuntimeSoftwareConfig

class TestRuntimeSoftwareConfig(unittest.TestCase):
    """RuntimeSoftwareConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RuntimeSoftwareConfig:
        """Test RuntimeSoftwareConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RuntimeSoftwareConfig`
        """
        model = RuntimeSoftwareConfig()
        if include_optional:
            return RuntimeSoftwareConfig(
                custom_gpu_driver_path = '',
                disable_terminal = True,
                enable_health_monitoring = True,
                idle_shutdown = True,
                idle_shutdown_timeout = 56,
                install_gpu_driver = True,
                kernels = [
                    openapi_client.models.container_image.ContainerImage(
                        repository = '', 
                        tag = '', )
                    ],
                mixer_disabled = True,
                notebook_upgrade_schedule = '',
                post_startup_script = '',
                post_startup_script_behavior = 'POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED',
                upgradeable = True,
                version = ''
            )
        else:
            return RuntimeSoftwareConfig(
        )
        """

    def testRuntimeSoftwareConfig(self):
        """Test RuntimeSoftwareConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
