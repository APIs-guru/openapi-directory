# coding: utf-8

"""
    Android Management API

    The Android Management API provides remote enterprise management of Android devices and apps.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.non_compliance_detail import NonComplianceDetail

class TestNonComplianceDetail(unittest.TestCase):
    """NonComplianceDetail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NonComplianceDetail:
        """Test NonComplianceDetail
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NonComplianceDetail`
        """
        model = NonComplianceDetail()
        if include_optional:
            return NonComplianceDetail(
                current_value = None,
                field_path = '',
                installation_failure_reason = 'INSTALLATION_FAILURE_REASON_UNSPECIFIED',
                non_compliance_reason = 'NON_COMPLIANCE_REASON_UNSPECIFIED',
                package_name = '',
                setting_name = '',
                specific_non_compliance_context = openapi_client.models.specific_non_compliance_context.SpecificNonComplianceContext(
                    onc_wifi_context = openapi_client.models.onc_wifi_context.OncWifiContext(
                        wifi_guid = '', ), 
                    password_policies_context = openapi_client.models.password_policies_context.PasswordPoliciesContext(
                        password_policy_scope = 'SCOPE_UNSPECIFIED', ), ),
                specific_non_compliance_reason = 'SPECIFIC_NON_COMPLIANCE_REASON_UNSPECIFIED'
            )
        else:
            return NonComplianceDetail(
        )
        """

    def testNonComplianceDetail(self):
        """Test NonComplianceDetail"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
