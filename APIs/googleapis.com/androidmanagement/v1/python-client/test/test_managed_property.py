# coding: utf-8

"""
    Android Management API

    The Android Management API provides remote enterprise management of Android devices and apps.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.managed_property import ManagedProperty

class TestManagedProperty(unittest.TestCase):
    """ManagedProperty unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ManagedProperty:
        """Test ManagedProperty
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ManagedProperty`
        """
        model = ManagedProperty()
        if include_optional:
            return ManagedProperty(
                default_value = None,
                description = '',
                entries = [
                    openapi_client.models.managed_property_entry.ManagedPropertyEntry(
                        name = '', 
                        value = '', )
                    ],
                key = '',
                nested_properties = [
                    openapi_client.models.managed_property.ManagedProperty(
                        default_value = null, 
                        description = '', 
                        entries = [
                            openapi_client.models.managed_property_entry.ManagedPropertyEntry(
                                name = '', 
                                value = '', )
                            ], 
                        key = '', 
                        title = '', 
                        type = 'MANAGED_PROPERTY_TYPE_UNSPECIFIED', )
                    ],
                title = '',
                type = 'MANAGED_PROPERTY_TYPE_UNSPECIFIED'
            )
        else:
            return ManagedProperty(
        )
        """

    def testManagedProperty(self):
        """Test ManagedProperty"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
