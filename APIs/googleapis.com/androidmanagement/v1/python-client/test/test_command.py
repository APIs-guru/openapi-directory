# coding: utf-8

"""
    Android Management API

    The Android Management API provides remote enterprise management of Android devices and apps.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.command import Command

class TestCommand(unittest.TestCase):
    """Command unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Command:
        """Test Command
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Command`
        """
        model = Command()
        if include_optional:
            return Command(
                clear_apps_data_params = openapi_client.models.clear_apps_data_params.ClearAppsDataParams(
                    package_names = [
                        ''
                        ], ),
                clear_apps_data_status = openapi_client.models.clear_apps_data_status.ClearAppsDataStatus(
                    results = {
                        'key' : openapi_client.models.per_app_result.PerAppResult(
                            clearing_result = 'CLEARING_RESULT_UNSPECIFIED', )
                        }, ),
                create_time = '',
                duration = '',
                error_code = 'COMMAND_ERROR_CODE_UNSPECIFIED',
                new_password = '',
                reset_password_flags = [
                    'RESET_PASSWORD_FLAG_UNSPECIFIED'
                    ],
                start_lost_mode_params = openapi_client.models.start_lost_mode_params.StartLostModeParams(
                    lost_email_address = '', 
                    lost_message = openapi_client.models.user_facing_message.UserFacingMessage(
                        default_message = '', 
                        localized_messages = {
                            'key' : ''
                            }, ), 
                    lost_organization = openapi_client.models.user_facing_message.UserFacingMessage(
                        default_message = '', ), 
                    lost_phone_number = , 
                    lost_street_address = , ),
                start_lost_mode_status = openapi_client.models.start_lost_mode_status.StartLostModeStatus(
                    status = 'STATUS_UNSPECIFIED', ),
                stop_lost_mode_params = None,
                stop_lost_mode_status = openapi_client.models.stop_lost_mode_status.StopLostModeStatus(
                    status = 'STATUS_UNSPECIFIED', ),
                type = 'COMMAND_TYPE_UNSPECIFIED',
                user_name = ''
            )
        else:
            return Command(
        )
        """

    def testCommand(self):
        """Test Command"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
