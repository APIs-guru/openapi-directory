# coding: utf-8

"""
    Android Management API

    The Android Management API provides remote enterprise management of Android devices and apps.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.password_requirements import PasswordRequirements

class TestPasswordRequirements(unittest.TestCase):
    """PasswordRequirements unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PasswordRequirements:
        """Test PasswordRequirements
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PasswordRequirements`
        """
        model = PasswordRequirements()
        if include_optional:
            return PasswordRequirements(
                maximum_failed_passwords_for_wipe = 56,
                password_expiration_timeout = '',
                password_history_length = 56,
                password_minimum_length = 56,
                password_minimum_letters = 56,
                password_minimum_lower_case = 56,
                password_minimum_non_letter = 56,
                password_minimum_numeric = 56,
                password_minimum_symbols = 56,
                password_minimum_upper_case = 56,
                password_quality = 'PASSWORD_QUALITY_UNSPECIFIED',
                password_scope = 'SCOPE_UNSPECIFIED',
                require_password_unlock = 'REQUIRE_PASSWORD_UNLOCK_UNSPECIFIED',
                unified_lock_settings = 'UNIFIED_LOCK_SETTINGS_UNSPECIFIED'
            )
        else:
            return PasswordRequirements(
        )
        """

    def testPasswordRequirements(self):
        """Test PasswordRequirements"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
