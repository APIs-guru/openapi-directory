# coding: utf-8

"""
    Android Management API

    The Android Management API provides remote enterprise management of Android devices and apps.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_migration_tokens_response import ListMigrationTokensResponse

class TestListMigrationTokensResponse(unittest.TestCase):
    """ListMigrationTokensResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListMigrationTokensResponse:
        """Test ListMigrationTokensResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListMigrationTokensResponse`
        """
        model = ListMigrationTokensResponse()
        if include_optional:
            return ListMigrationTokensResponse(
                migration_tokens = [
                    openapi_client.models.migration_token.MigrationToken(
                        additional_data = '', 
                        create_time = '', 
                        device = '', 
                        device_id = '', 
                        expire_time = '', 
                        management_mode = 'MANAGEMENT_MODE_UNSPECIFIED', 
                        name = '', 
                        policy = '', 
                        ttl = '', 
                        user_id = '', 
                        value = '', )
                    ],
                next_page_token = ''
            )
        else:
            return ListMigrationTokensResponse(
        )
        """

    def testListMigrationTokensResponse(self):
        """Test ListMigrationTokensResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
