# coding: utf-8

"""
    Fitness API

    The Fitness API for managing users' fitness tracking data.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.aggregate_response import AggregateResponse

class TestAggregateResponse(unittest.TestCase):
    """AggregateResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AggregateResponse:
        """Test AggregateResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AggregateResponse`
        """
        model = AggregateResponse()
        if include_optional:
            return AggregateResponse(
                bucket = [
                    openapi_client.models.aggregate_bucket.AggregateBucket(
                        activity = 56, 
                        dataset = [
                            openapi_client.models.dataset.Dataset(
                                data_source_id = '', 
                                max_end_time_ns = '', 
                                min_start_time_ns = '', 
                                next_page_token = '', 
                                point = [
                                    openapi_client.models.data_point.DataPoint(
                                        computation_time_millis = '', 
                                        data_type_name = '', 
                                        end_time_nanos = '', 
                                        modified_time_millis = '', 
                                        origin_data_source_id = '', 
                                        raw_timestamp_nanos = '', 
                                        start_time_nanos = '', 
                                        value = [
                                            openapi_client.models.value.Value(
                                                fp_val = 1.337, 
                                                int_val = 56, 
                                                map_val = [
                                                    openapi_client.models.value_map_val_entry.ValueMapValEntry(
                                                        key = '', )
                                                    ], 
                                                string_val = '', )
                                            ], )
                                    ], )
                            ], 
                        end_time_millis = '', 
                        session = openapi_client.models.session.Session(
                            active_time_millis = '', 
                            activity_type = 56, 
                            application = openapi_client.models.application.Application(
                                details_url = '', 
                                name = '', 
                                package_name = '', 
                                version = '', ), 
                            description = '', 
                            end_time_millis = '', 
                            id = '', 
                            modified_time_millis = '', 
                            name = '', 
                            start_time_millis = '', ), 
                        start_time_millis = '', 
                        type = 'unknown', )
                    ]
            )
        else:
            return AggregateResponse(
        )
        """

    def testAggregateResponse(self):
        """Test AggregateResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
