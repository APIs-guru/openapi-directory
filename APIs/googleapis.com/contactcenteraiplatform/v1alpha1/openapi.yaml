openapi: 3.0.0
servers:
  - url: https://contactcenteraiplatform.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: ""
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Contact Center AI Platform API
  version: v1alpha1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://contactcenteraiplatform.googleapis.com/$discovery/rest?version=v1alpha1
      version: v1
  x-providerName: googleapis.com
  x-serviceName: contactcenteraiplatform
externalDocs:
  url: https://cloud.google.com/solutions/contact-center-ai-platform
tags:
  - name: projects
paths:
  /v1alpha1/{name}:
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: contactcenteraiplatform.projects.locations.operations.delete
      parameters:
        - description: The name of the operation resource to be deleted.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: contactcenteraiplatform.projects.locations.operations.get
      parameters:
        - description: The name of the operation resource.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates the parameters of a single ContactCenter.
      operationId: contactcenteraiplatform.projects.locations.contactCenters.patch
      parameters:
        - description: name of resource
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Required. Field mask is used to specify the fields to be overwritten in the ContactCenter resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactCenter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1alpha1/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: contactcenteraiplatform.projects.locations.list
      parameters:
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results to return. If not set, the service selects a default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1alpha1/{name}/operations:
    get:
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: contactcenteraiplatform.projects.locations.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1alpha1/{name}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: contactcenteraiplatform.projects.locations.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOperationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1alpha1/{parent}/contactCenters:
    get:
      description: Lists ContactCenters in a given project and location.
      operationId: contactcenteraiplatform.projects.locations.contactCenters.list
      parameters:
        - description: Required. Parent value for ListContactCentersRequest
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filtering results
          in: query
          name: filter
          schema:
            type: string
        - description: Hint for how to order the results
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListContactCentersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new ContactCenter in a given project and location.
      operationId: contactcenteraiplatform.projects.locations.contactCenters.create
      parameters:
        - description: Required. Value for parent.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. Id of the requesting object If auto-generating Id server-side, remove this field and contact_center_id from the method_signature of Create RPC
          in: query
          name: contactCenterId
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactCenter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1alpha1/{parent}:queryContactCenterQuota:
    get:
      description: Queries the contact center quota, an aggregation over all the projects, that belongs to the billing account, which the input project belongs to.
      operationId: contactcenteraiplatform.projects.locations.queryContactCenterQuota
      parameters:
        - description: Required. Parent project resource id.
          in: path
          name: parent
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactCenterQuota"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AdminUser:
      description: "Message storing info about the first admin user. Next ID: 3"
      properties:
        familyName:
          description: Optional. Last/family name of the first admin user.
          type: string
        givenName:
          description: Optional. First/given name of the first admin user.
          type: string
      type: object
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    ContactCenter:
      description: "Message describing ContactCenter object Next ID: 20"
      properties:
        adminUser:
          $ref: "#/components/schemas/AdminUser"
          description: Optional. Info about the first admin user, such as given name and family name.
        ccaipManagedUsers:
          description: Optional. Whether to enable users to be created in the CCAIP-instance concurrently to having users in Cloud identity
          type: boolean
        createTime:
          description: Output only. [Output only] Create time stamp
          format: google-datetime
          readOnly: true
          type: string
        customerDomainPrefix:
          description: Required. Immutable. At least 2 and max 16 char long, must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).
          type: string
        displayName:
          description: Required. A user friendly name for the ContactCenter.
          type: string
        instanceConfig:
          $ref: "#/components/schemas/InstanceConfig"
          description: The configuration of this instance, it is currently immutable once created.
        kmsKey:
          description: Immutable. The KMS key name to encrypt the user input (`ContactCenter`).
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs
          type: object
        name:
          description: name of resource
          type: string
        privateComponents:
          description: Output only. A list of UJET components that should be privately accessed. This field is set by reading settings from the data plane. For more information about the format of the component please refer to go/ccaip-vpc-sc-org-policy. This field is must be fully populated only for Create/Update resource operations. The main use case for this field is OrgPolicy checks via CPE.
          items:
            type: string
          readOnly: true
          type: array
        samlParams:
          $ref: "#/components/schemas/SAMLParams"
          description: Optional. Params that sets up Google as IdP.
        state:
          description: Output only. The state of this contact center.
          enum:
            - STATE_UNSPECIFIED
            - STATE_DEPLOYING
            - STATE_DEPLOYED
            - STATE_TERMINATING
            - STATE_FAILED
            - STATE_TERMINATING_FAILED
            - STATE_TERMINATED
            - STATE_IN_GRACE_PERIOD
          readOnly: true
          type: string
        updateTime:
          description: Output only. [Output only] Update time stamp
          format: google-datetime
          readOnly: true
          type: string
        uris:
          $ref: "#/components/schemas/URIs"
          description: Output only. URIs to access the deployed ContactCenters.
          readOnly: true
        userEmail:
          description: Optional. Email address of the first admin user.
          type: string
      type: object
    ContactCenterQuota:
      description: Represents a quota for contact centers.
      properties:
        contactCenterCountLimit:
          deprecated: true
          description: "Deprecated: Use the Quota fields instead. Reflects the count limit of contact centers on a billing account."
          format: int32
          type: integer
        contactCenterCountSum:
          deprecated: true
          description: "Deprecated: Use the Quota fields instead. Reflects the count sum of contact centers on a billing account."
          format: int32
          type: integer
        quotas:
          description: Quota details per contact center instance type.
          items:
            $ref: "#/components/schemas/Quota"
          type: array
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    GoogleCloudCommonOperationMetadata:
      description: Represents the metadata of the long-running operation.
      properties:
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        cancelRequested:
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        statusDetail:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
      type: object
    InstanceConfig:
      description: Message storing the instance configuration.
      properties:
        instanceSize:
          description: The instance size of this the instance configuration.
          enum:
            - INSTANCE_SIZE_UNSPECIFIED
            - STANDARD_SMALL
            - STANDARD_MEDIUM
            - STANDARD_LARGE
            - STANDARD_XLARGE
            - STANDARD_2XLARGE
            - STANDARD_3XLARGE
            - DEV_XSMALL
          type: string
      type: object
    ListContactCentersResponse:
      description: Message for response to listing ContactCenters
      properties:
        contactCenters:
          description: The list of ContactCenter
          items:
            $ref: "#/components/schemas/ContactCenter"
          type: array
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    Location:
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    OperationMetadata:
      description: Represents the metadata of the long-running operation.
      properties:
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        contactCenter:
          $ref: "#/components/schemas/ContactCenter"
          description: Contact center information for this request
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        requestedCancellation:
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
      type: object
    Quota:
      description: Quota details.
      properties:
        contactCenterCountLimit:
          description: Reflects the count limit of contact centers on a billing account.
          format: int32
          type: integer
        contactCenterCountSum:
          description: Reflects the count sum of contact centers on a billing account.
          format: int32
          type: integer
        contactCenterInstanceSize:
          description: Contact center instance type.
          enum:
            - INSTANCE_SIZE_UNSPECIFIED
            - STANDARD_SMALL
            - STANDARD_MEDIUM
            - STANDARD_LARGE
            - STANDARD_XLARGE
            - STANDARD_2XLARGE
            - STANDARD_3XLARGE
            - DEV_XSMALL
          type: string
      type: object
    SAMLParams:
      description: Message storing SAML params to enable Google as IDP.
      properties:
        certificate:
          description: SAML certificate
          type: string
        emailMapping:
          description: IdP field that maps to the user’s email address
          type: string
        entityId:
          description: Entity id URL
          type: string
        ssoUri:
          description: Single sign-on URL
          type: string
        userEmail:
          deprecated: true
          description: Email address of the first admin users.
          type: string
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    URIs:
      description: Message storing the URIs of the ContactCenter.
      properties:
        chatBotUri:
          description: Chat Bot Uri of the ContactCenter
          type: string
        mediaUri:
          description: Media Uri of the ContactCenter.
          type: string
        rootUri:
          description: Root Uri of the ContactCenter.
          type: string
        virtualAgentStreamingServiceUri:
          description: Virtual Agent Streaming Service Uri of the ContactCenter.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
