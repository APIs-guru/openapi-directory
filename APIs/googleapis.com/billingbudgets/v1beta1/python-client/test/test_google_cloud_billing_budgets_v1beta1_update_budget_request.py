# coding: utf-8

"""
    Cloud Billing Budget API

    The Cloud Billing Budget API stores Cloud Billing budgets, which define a budget plan and the rules to execute as spend is tracked against that plan.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_billing_budgets_v1beta1_update_budget_request import GoogleCloudBillingBudgetsV1beta1UpdateBudgetRequest

class TestGoogleCloudBillingBudgetsV1beta1UpdateBudgetRequest(unittest.TestCase):
    """GoogleCloudBillingBudgetsV1beta1UpdateBudgetRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudBillingBudgetsV1beta1UpdateBudgetRequest:
        """Test GoogleCloudBillingBudgetsV1beta1UpdateBudgetRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudBillingBudgetsV1beta1UpdateBudgetRequest`
        """
        model = GoogleCloudBillingBudgetsV1beta1UpdateBudgetRequest()
        if include_optional:
            return GoogleCloudBillingBudgetsV1beta1UpdateBudgetRequest(
                budget = openapi_client.models.google_cloud_billing_budgets_v1beta1_budget.GoogleCloudBillingBudgetsV1beta1Budget(
                    all_updates_rule = openapi_client.models.google_cloud_billing_budgets_v1beta1_all_updates_rule.GoogleCloudBillingBudgetsV1beta1AllUpdatesRule(
                        disable_default_iam_recipients = True, 
                        enable_project_level_recipients = True, 
                        monitoring_notification_channels = [
                            ''
                            ], 
                        pubsub_topic = '', 
                        schema_version = '', ), 
                    amount = openapi_client.models.google_cloud_billing_budgets_v1beta1_budget_amount.GoogleCloudBillingBudgetsV1beta1BudgetAmount(
                        last_period_amount = openapi_client.models.google_cloud_billing_budgets_v1beta1_last_period_amount.GoogleCloudBillingBudgetsV1beta1LastPeriodAmount(), 
                        specified_amount = openapi_client.models.google_type_money.GoogleTypeMoney(
                            currency_code = '', 
                            nanos = 56, 
                            units = '', ), ), 
                    budget_filter = openapi_client.models.google_cloud_billing_budgets_v1beta1_filter.GoogleCloudBillingBudgetsV1beta1Filter(
                        calendar_period = 'CALENDAR_PERIOD_UNSPECIFIED', 
                        credit_types = [
                            ''
                            ], 
                        credit_types_treatment = 'CREDIT_TYPES_TREATMENT_UNSPECIFIED', 
                        custom_period = openapi_client.models.google_cloud_billing_budgets_v1beta1_custom_period.GoogleCloudBillingBudgetsV1beta1CustomPeriod(
                            end_date = openapi_client.models.google_type_date.GoogleTypeDate(
                                day = 56, 
                                month = 56, 
                                year = 56, ), 
                            start_date = openapi_client.models.google_type_date.GoogleTypeDate(
                                day = 56, 
                                month = 56, 
                                year = 56, ), ), 
                        labels = {
                            'key' : [
                                null
                                ]
                            }, 
                        projects = [
                            ''
                            ], 
                        resource_ancestors = [
                            ''
                            ], 
                        services = [
                            ''
                            ], 
                        subaccounts = [
                            ''
                            ], ), 
                    display_name = '', 
                    etag = '', 
                    name = '', 
                    ownership_scope = 'OWNERSHIP_SCOPE_UNSPECIFIED', 
                    threshold_rules = [
                        openapi_client.models.google_cloud_billing_budgets_v1beta1_threshold_rule.GoogleCloudBillingBudgetsV1beta1ThresholdRule(
                            spend_basis = 'BASIS_UNSPECIFIED', 
                            threshold_percent = 1.337, )
                        ], ),
                update_mask = ''
            )
        else:
            return GoogleCloudBillingBudgetsV1beta1UpdateBudgetRequest(
        )
        """

    def testGoogleCloudBillingBudgetsV1beta1UpdateBudgetRequest(self):
        """Test GoogleCloudBillingBudgetsV1beta1UpdateBudgetRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
