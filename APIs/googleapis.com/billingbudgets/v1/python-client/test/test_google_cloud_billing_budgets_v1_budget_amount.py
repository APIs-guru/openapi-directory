# coding: utf-8

"""
    Cloud Billing Budget API

    The Cloud Billing Budget API stores Cloud Billing budgets, which define a budget plan and the rules to execute as spend is tracked against that plan.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_billing_budgets_v1_budget_amount import GoogleCloudBillingBudgetsV1BudgetAmount

class TestGoogleCloudBillingBudgetsV1BudgetAmount(unittest.TestCase):
    """GoogleCloudBillingBudgetsV1BudgetAmount unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudBillingBudgetsV1BudgetAmount:
        """Test GoogleCloudBillingBudgetsV1BudgetAmount
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudBillingBudgetsV1BudgetAmount`
        """
        model = GoogleCloudBillingBudgetsV1BudgetAmount()
        if include_optional:
            return GoogleCloudBillingBudgetsV1BudgetAmount(
                last_period_amount = openapi_client.models.google_cloud_billing_budgets_v1_last_period_amount.GoogleCloudBillingBudgetsV1LastPeriodAmount(),
                specified_amount = openapi_client.models.google_type_money.GoogleTypeMoney(
                    currency_code = '', 
                    nanos = 56, 
                    units = '', )
            )
        else:
            return GoogleCloudBillingBudgetsV1BudgetAmount(
        )
        """

    def testGoogleCloudBillingBudgetsV1BudgetAmount(self):
        """Test GoogleCloudBillingBudgetsV1BudgetAmount"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
