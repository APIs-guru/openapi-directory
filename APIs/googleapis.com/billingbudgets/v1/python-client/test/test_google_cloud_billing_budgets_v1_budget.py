# coding: utf-8

"""
    Cloud Billing Budget API

    The Cloud Billing Budget API stores Cloud Billing budgets, which define a budget plan and the rules to execute as spend is tracked against that plan.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_billing_budgets_v1_budget import GoogleCloudBillingBudgetsV1Budget

class TestGoogleCloudBillingBudgetsV1Budget(unittest.TestCase):
    """GoogleCloudBillingBudgetsV1Budget unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudBillingBudgetsV1Budget:
        """Test GoogleCloudBillingBudgetsV1Budget
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudBillingBudgetsV1Budget`
        """
        model = GoogleCloudBillingBudgetsV1Budget()
        if include_optional:
            return GoogleCloudBillingBudgetsV1Budget(
                amount = openapi_client.models.google_cloud_billing_budgets_v1_budget_amount.GoogleCloudBillingBudgetsV1BudgetAmount(
                    last_period_amount = openapi_client.models.google_cloud_billing_budgets_v1_last_period_amount.GoogleCloudBillingBudgetsV1LastPeriodAmount(), 
                    specified_amount = openapi_client.models.google_type_money.GoogleTypeMoney(
                        currency_code = '', 
                        nanos = 56, 
                        units = '', ), ),
                budget_filter = openapi_client.models.google_cloud_billing_budgets_v1_filter.GoogleCloudBillingBudgetsV1Filter(
                    calendar_period = 'CALENDAR_PERIOD_UNSPECIFIED', 
                    credit_types = [
                        ''
                        ], 
                    credit_types_treatment = 'CREDIT_TYPES_TREATMENT_UNSPECIFIED', 
                    custom_period = openapi_client.models.google_cloud_billing_budgets_v1_custom_period.GoogleCloudBillingBudgetsV1CustomPeriod(
                        end_date = openapi_client.models.google_type_date.GoogleTypeDate(
                            day = 56, 
                            month = 56, 
                            year = 56, ), 
                        start_date = openapi_client.models.google_type_date.GoogleTypeDate(
                            day = 56, 
                            month = 56, 
                            year = 56, ), ), 
                    labels = {
                        'key' : [
                            null
                            ]
                        }, 
                    projects = [
                        ''
                        ], 
                    resource_ancestors = [
                        ''
                        ], 
                    services = [
                        ''
                        ], 
                    subaccounts = [
                        ''
                        ], ),
                display_name = '',
                etag = '',
                name = '',
                notifications_rule = openapi_client.models.google_cloud_billing_budgets_v1_notifications_rule.GoogleCloudBillingBudgetsV1NotificationsRule(
                    disable_default_iam_recipients = True, 
                    enable_project_level_recipients = True, 
                    monitoring_notification_channels = [
                        ''
                        ], 
                    pubsub_topic = '', 
                    schema_version = '', ),
                ownership_scope = 'OWNERSHIP_SCOPE_UNSPECIFIED',
                threshold_rules = [
                    openapi_client.models.google_cloud_billing_budgets_v1_threshold_rule.GoogleCloudBillingBudgetsV1ThresholdRule(
                        spend_basis = 'BASIS_UNSPECIFIED', 
                        threshold_percent = 1.337, )
                    ]
            )
        else:
            return GoogleCloudBillingBudgetsV1Budget(
        )
        """

    def testGoogleCloudBillingBudgetsV1Budget(self):
        """Test GoogleCloudBillingBudgetsV1Budget"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
