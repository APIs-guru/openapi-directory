# coding: utf-8

"""
    Cloud Pub/Sub API

    Provides reliable, many-to-many, asynchronous messaging between applications. 

    The version of the OpenAPI document: v1beta1a
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pubsub_event import PubsubEvent

class TestPubsubEvent(unittest.TestCase):
    """PubsubEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PubsubEvent:
        """Test PubsubEvent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PubsubEvent`
        """
        model = PubsubEvent()
        if include_optional:
            return PubsubEvent(
                deleted = True,
                message = openapi_client.models.pubsub_message.PubsubMessage(
                    data = 'YQ==', 
                    label = [
                        openapi_client.models.label.Label(
                            key = '', 
                            num_value = '', 
                            str_value = '', )
                        ], 
                    message_id = '', 
                    publish_time = '', ),
                subscription = '',
                truncated = True
            )
        else:
            return PubsubEvent(
        )
        """

    def testPubsubEvent(self):
        """Test PubsubEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
