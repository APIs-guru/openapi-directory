# coding: utf-8

"""
    Cloud Storage JSON API

    Lets you store and retrieve potentially-large, immutable data objects.

    The version of the OpenAPI document: v1beta2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictStr, field_validator
from typing import Optional
from typing_extensions import Annotated
from openapi_client.models.channel import Channel
from openapi_client.models.compose_request import ComposeRequest
from openapi_client.models.object import Object
from openapi_client.models.objects import Objects

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class ObjectsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def storage_objects_compose(
        self,
        destination_bucket: Annotated[StrictStr, Field(description="Name of the bucket containing the source objects. The destination object is stored in this bucket.")],
        destination_object: Annotated[StrictStr, Field(description="Name of the new object.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation matches the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration matches the given value.")] = None,
        compose_request: Optional[ComposeRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Object:
        """storage_objects_compose

        Concatenates a list of existing objects into a new object in the same bucket.

        :param destination_bucket: Name of the bucket containing the source objects. The destination object is stored in this bucket. (required)
        :type destination_bucket: str
        :param destination_object: Name of the new object. (required)
        :type destination_object: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param if_generation_match: Makes the operation conditional on whether the object's current generation matches the given value.
        :type if_generation_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param compose_request:
        :type compose_request: ComposeRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_compose_serialize(
            destination_bucket=destination_bucket,
            destination_object=destination_object,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            if_generation_match=if_generation_match,
            if_metageneration_match=if_metageneration_match,
            compose_request=compose_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def storage_objects_compose_with_http_info(
        self,
        destination_bucket: Annotated[StrictStr, Field(description="Name of the bucket containing the source objects. The destination object is stored in this bucket.")],
        destination_object: Annotated[StrictStr, Field(description="Name of the new object.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation matches the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration matches the given value.")] = None,
        compose_request: Optional[ComposeRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Object]:
        """storage_objects_compose

        Concatenates a list of existing objects into a new object in the same bucket.

        :param destination_bucket: Name of the bucket containing the source objects. The destination object is stored in this bucket. (required)
        :type destination_bucket: str
        :param destination_object: Name of the new object. (required)
        :type destination_object: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param if_generation_match: Makes the operation conditional on whether the object's current generation matches the given value.
        :type if_generation_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param compose_request:
        :type compose_request: ComposeRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_compose_serialize(
            destination_bucket=destination_bucket,
            destination_object=destination_object,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            if_generation_match=if_generation_match,
            if_metageneration_match=if_metageneration_match,
            compose_request=compose_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def storage_objects_compose_without_preload_content(
        self,
        destination_bucket: Annotated[StrictStr, Field(description="Name of the bucket containing the source objects. The destination object is stored in this bucket.")],
        destination_object: Annotated[StrictStr, Field(description="Name of the new object.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation matches the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration matches the given value.")] = None,
        compose_request: Optional[ComposeRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """storage_objects_compose

        Concatenates a list of existing objects into a new object in the same bucket.

        :param destination_bucket: Name of the bucket containing the source objects. The destination object is stored in this bucket. (required)
        :type destination_bucket: str
        :param destination_object: Name of the new object. (required)
        :type destination_object: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param if_generation_match: Makes the operation conditional on whether the object's current generation matches the given value.
        :type if_generation_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param compose_request:
        :type compose_request: ComposeRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_compose_serialize(
            destination_bucket=destination_bucket,
            destination_object=destination_object,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            if_generation_match=if_generation_match,
            if_metageneration_match=if_metageneration_match,
            compose_request=compose_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _storage_objects_compose_serialize(
        self,
        destination_bucket,
        destination_object,
        alt,
        fields,
        key,
        oauth_token,
        pretty_print,
        quota_user,
        user_ip,
        if_generation_match,
        if_metageneration_match,
        compose_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if destination_bucket is not None:
            _path_params['destinationBucket'] = destination_bucket
        if destination_object is not None:
            _path_params['destinationObject'] = destination_object
        # process the query parameters
        if alt is not None:
            
            _query_params.append(('alt', alt))
            
        if fields is not None:
            
            _query_params.append(('fields', fields))
            
        if key is not None:
            
            _query_params.append(('key', key))
            
        if oauth_token is not None:
            
            _query_params.append(('oauth_token', oauth_token))
            
        if pretty_print is not None:
            
            _query_params.append(('prettyPrint', pretty_print))
            
        if quota_user is not None:
            
            _query_params.append(('quotaUser', quota_user))
            
        if user_ip is not None:
            
            _query_params.append(('userIp', user_ip))
            
        if if_generation_match is not None:
            
            _query_params.append(('ifGenerationMatch', if_generation_match))
            
        if if_metageneration_match is not None:
            
            _query_params.append(('ifMetagenerationMatch', if_metageneration_match))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if compose_request is not None:
            _body_params = compose_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Oauth2c', 
            'Oauth2'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/b/{destinationBucket}/o/{destinationObject}/compose',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def storage_objects_copy(
        self,
        source_bucket: Annotated[StrictStr, Field(description="Name of the bucket in which to find the source object.")],
        source_object: Annotated[StrictStr, Field(description="Name of the source object.")],
        destination_bucket: Annotated[StrictStr, Field(description="Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.")],
        destination_object: Annotated[StrictStr, Field(description="Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the destination object's current generation matches the given value.")] = None,
        if_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the destination object's current generation does not match the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the destination object's current metageneration matches the given value.")] = None,
        if_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the destination object's current metageneration does not match the given value.")] = None,
        if_source_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the source object's generation matches the given value.")] = None,
        if_source_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the source object's generation does not match the given value.")] = None,
        if_source_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the source object's current metageneration matches the given value.")] = None,
        if_source_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the source object's current metageneration does not match the given value.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.")] = None,
        source_generation: Annotated[Optional[StrictStr], Field(description="If present, selects a specific revision of the source object (as opposed to the latest version, the default).")] = None,
        object: Optional[Object] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Object:
        """storage_objects_copy

        Copies an object to a destination in the same location. Optionally overrides metadata.

        :param source_bucket: Name of the bucket in which to find the source object. (required)
        :type source_bucket: str
        :param source_object: Name of the source object. (required)
        :type source_object: str
        :param destination_bucket: Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any. (required)
        :type destination_bucket: str
        :param destination_object: Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any. (required)
        :type destination_object: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param if_generation_match: Makes the operation conditional on whether the destination object's current generation matches the given value.
        :type if_generation_match: str
        :param if_generation_not_match: Makes the operation conditional on whether the destination object's current generation does not match the given value.
        :type if_generation_not_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the destination object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param if_metageneration_not_match: Makes the operation conditional on whether the destination object's current metageneration does not match the given value.
        :type if_metageneration_not_match: str
        :param if_source_generation_match: Makes the operation conditional on whether the source object's generation matches the given value.
        :type if_source_generation_match: str
        :param if_source_generation_not_match: Makes the operation conditional on whether the source object's generation does not match the given value.
        :type if_source_generation_not_match: str
        :param if_source_metageneration_match: Makes the operation conditional on whether the source object's current metageneration matches the given value.
        :type if_source_metageneration_match: str
        :param if_source_metageneration_not_match: Makes the operation conditional on whether the source object's current metageneration does not match the given value.
        :type if_source_metageneration_not_match: str
        :param projection: Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
        :type projection: str
        :param source_generation: If present, selects a specific revision of the source object (as opposed to the latest version, the default).
        :type source_generation: str
        :param object:
        :type object: Object
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_copy_serialize(
            source_bucket=source_bucket,
            source_object=source_object,
            destination_bucket=destination_bucket,
            destination_object=destination_object,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            if_generation_match=if_generation_match,
            if_generation_not_match=if_generation_not_match,
            if_metageneration_match=if_metageneration_match,
            if_metageneration_not_match=if_metageneration_not_match,
            if_source_generation_match=if_source_generation_match,
            if_source_generation_not_match=if_source_generation_not_match,
            if_source_metageneration_match=if_source_metageneration_match,
            if_source_metageneration_not_match=if_source_metageneration_not_match,
            projection=projection,
            source_generation=source_generation,
            object=object,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def storage_objects_copy_with_http_info(
        self,
        source_bucket: Annotated[StrictStr, Field(description="Name of the bucket in which to find the source object.")],
        source_object: Annotated[StrictStr, Field(description="Name of the source object.")],
        destination_bucket: Annotated[StrictStr, Field(description="Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.")],
        destination_object: Annotated[StrictStr, Field(description="Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the destination object's current generation matches the given value.")] = None,
        if_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the destination object's current generation does not match the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the destination object's current metageneration matches the given value.")] = None,
        if_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the destination object's current metageneration does not match the given value.")] = None,
        if_source_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the source object's generation matches the given value.")] = None,
        if_source_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the source object's generation does not match the given value.")] = None,
        if_source_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the source object's current metageneration matches the given value.")] = None,
        if_source_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the source object's current metageneration does not match the given value.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.")] = None,
        source_generation: Annotated[Optional[StrictStr], Field(description="If present, selects a specific revision of the source object (as opposed to the latest version, the default).")] = None,
        object: Optional[Object] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Object]:
        """storage_objects_copy

        Copies an object to a destination in the same location. Optionally overrides metadata.

        :param source_bucket: Name of the bucket in which to find the source object. (required)
        :type source_bucket: str
        :param source_object: Name of the source object. (required)
        :type source_object: str
        :param destination_bucket: Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any. (required)
        :type destination_bucket: str
        :param destination_object: Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any. (required)
        :type destination_object: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param if_generation_match: Makes the operation conditional on whether the destination object's current generation matches the given value.
        :type if_generation_match: str
        :param if_generation_not_match: Makes the operation conditional on whether the destination object's current generation does not match the given value.
        :type if_generation_not_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the destination object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param if_metageneration_not_match: Makes the operation conditional on whether the destination object's current metageneration does not match the given value.
        :type if_metageneration_not_match: str
        :param if_source_generation_match: Makes the operation conditional on whether the source object's generation matches the given value.
        :type if_source_generation_match: str
        :param if_source_generation_not_match: Makes the operation conditional on whether the source object's generation does not match the given value.
        :type if_source_generation_not_match: str
        :param if_source_metageneration_match: Makes the operation conditional on whether the source object's current metageneration matches the given value.
        :type if_source_metageneration_match: str
        :param if_source_metageneration_not_match: Makes the operation conditional on whether the source object's current metageneration does not match the given value.
        :type if_source_metageneration_not_match: str
        :param projection: Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
        :type projection: str
        :param source_generation: If present, selects a specific revision of the source object (as opposed to the latest version, the default).
        :type source_generation: str
        :param object:
        :type object: Object
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_copy_serialize(
            source_bucket=source_bucket,
            source_object=source_object,
            destination_bucket=destination_bucket,
            destination_object=destination_object,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            if_generation_match=if_generation_match,
            if_generation_not_match=if_generation_not_match,
            if_metageneration_match=if_metageneration_match,
            if_metageneration_not_match=if_metageneration_not_match,
            if_source_generation_match=if_source_generation_match,
            if_source_generation_not_match=if_source_generation_not_match,
            if_source_metageneration_match=if_source_metageneration_match,
            if_source_metageneration_not_match=if_source_metageneration_not_match,
            projection=projection,
            source_generation=source_generation,
            object=object,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def storage_objects_copy_without_preload_content(
        self,
        source_bucket: Annotated[StrictStr, Field(description="Name of the bucket in which to find the source object.")],
        source_object: Annotated[StrictStr, Field(description="Name of the source object.")],
        destination_bucket: Annotated[StrictStr, Field(description="Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.")],
        destination_object: Annotated[StrictStr, Field(description="Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the destination object's current generation matches the given value.")] = None,
        if_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the destination object's current generation does not match the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the destination object's current metageneration matches the given value.")] = None,
        if_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the destination object's current metageneration does not match the given value.")] = None,
        if_source_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the source object's generation matches the given value.")] = None,
        if_source_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the source object's generation does not match the given value.")] = None,
        if_source_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the source object's current metageneration matches the given value.")] = None,
        if_source_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the source object's current metageneration does not match the given value.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.")] = None,
        source_generation: Annotated[Optional[StrictStr], Field(description="If present, selects a specific revision of the source object (as opposed to the latest version, the default).")] = None,
        object: Optional[Object] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """storage_objects_copy

        Copies an object to a destination in the same location. Optionally overrides metadata.

        :param source_bucket: Name of the bucket in which to find the source object. (required)
        :type source_bucket: str
        :param source_object: Name of the source object. (required)
        :type source_object: str
        :param destination_bucket: Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any. (required)
        :type destination_bucket: str
        :param destination_object: Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any. (required)
        :type destination_object: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param if_generation_match: Makes the operation conditional on whether the destination object's current generation matches the given value.
        :type if_generation_match: str
        :param if_generation_not_match: Makes the operation conditional on whether the destination object's current generation does not match the given value.
        :type if_generation_not_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the destination object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param if_metageneration_not_match: Makes the operation conditional on whether the destination object's current metageneration does not match the given value.
        :type if_metageneration_not_match: str
        :param if_source_generation_match: Makes the operation conditional on whether the source object's generation matches the given value.
        :type if_source_generation_match: str
        :param if_source_generation_not_match: Makes the operation conditional on whether the source object's generation does not match the given value.
        :type if_source_generation_not_match: str
        :param if_source_metageneration_match: Makes the operation conditional on whether the source object's current metageneration matches the given value.
        :type if_source_metageneration_match: str
        :param if_source_metageneration_not_match: Makes the operation conditional on whether the source object's current metageneration does not match the given value.
        :type if_source_metageneration_not_match: str
        :param projection: Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
        :type projection: str
        :param source_generation: If present, selects a specific revision of the source object (as opposed to the latest version, the default).
        :type source_generation: str
        :param object:
        :type object: Object
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_copy_serialize(
            source_bucket=source_bucket,
            source_object=source_object,
            destination_bucket=destination_bucket,
            destination_object=destination_object,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            if_generation_match=if_generation_match,
            if_generation_not_match=if_generation_not_match,
            if_metageneration_match=if_metageneration_match,
            if_metageneration_not_match=if_metageneration_not_match,
            if_source_generation_match=if_source_generation_match,
            if_source_generation_not_match=if_source_generation_not_match,
            if_source_metageneration_match=if_source_metageneration_match,
            if_source_metageneration_not_match=if_source_metageneration_not_match,
            projection=projection,
            source_generation=source_generation,
            object=object,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _storage_objects_copy_serialize(
        self,
        source_bucket,
        source_object,
        destination_bucket,
        destination_object,
        alt,
        fields,
        key,
        oauth_token,
        pretty_print,
        quota_user,
        user_ip,
        if_generation_match,
        if_generation_not_match,
        if_metageneration_match,
        if_metageneration_not_match,
        if_source_generation_match,
        if_source_generation_not_match,
        if_source_metageneration_match,
        if_source_metageneration_not_match,
        projection,
        source_generation,
        object,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if source_bucket is not None:
            _path_params['sourceBucket'] = source_bucket
        if source_object is not None:
            _path_params['sourceObject'] = source_object
        if destination_bucket is not None:
            _path_params['destinationBucket'] = destination_bucket
        if destination_object is not None:
            _path_params['destinationObject'] = destination_object
        # process the query parameters
        if alt is not None:
            
            _query_params.append(('alt', alt))
            
        if fields is not None:
            
            _query_params.append(('fields', fields))
            
        if key is not None:
            
            _query_params.append(('key', key))
            
        if oauth_token is not None:
            
            _query_params.append(('oauth_token', oauth_token))
            
        if pretty_print is not None:
            
            _query_params.append(('prettyPrint', pretty_print))
            
        if quota_user is not None:
            
            _query_params.append(('quotaUser', quota_user))
            
        if user_ip is not None:
            
            _query_params.append(('userIp', user_ip))
            
        if if_generation_match is not None:
            
            _query_params.append(('ifGenerationMatch', if_generation_match))
            
        if if_generation_not_match is not None:
            
            _query_params.append(('ifGenerationNotMatch', if_generation_not_match))
            
        if if_metageneration_match is not None:
            
            _query_params.append(('ifMetagenerationMatch', if_metageneration_match))
            
        if if_metageneration_not_match is not None:
            
            _query_params.append(('ifMetagenerationNotMatch', if_metageneration_not_match))
            
        if if_source_generation_match is not None:
            
            _query_params.append(('ifSourceGenerationMatch', if_source_generation_match))
            
        if if_source_generation_not_match is not None:
            
            _query_params.append(('ifSourceGenerationNotMatch', if_source_generation_not_match))
            
        if if_source_metageneration_match is not None:
            
            _query_params.append(('ifSourceMetagenerationMatch', if_source_metageneration_match))
            
        if if_source_metageneration_not_match is not None:
            
            _query_params.append(('ifSourceMetagenerationNotMatch', if_source_metageneration_not_match))
            
        if projection is not None:
            
            _query_params.append(('projection', projection))
            
        if source_generation is not None:
            
            _query_params.append(('sourceGeneration', source_generation))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if object is not None:
            _body_params = object


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Oauth2c', 
            'Oauth2'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/b/{sourceBucket}/o/{sourceObject}/copyTo/b/{destinationBucket}/o/{destinationObject}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def storage_objects_delete(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which the object resides.")],
        object: Annotated[StrictStr, Field(description="Name of the object.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        generation: Annotated[Optional[StrictStr], Field(description="If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default).")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation matches the given value.")] = None,
        if_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation does not match the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration matches the given value.")] = None,
        if_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration does not match the given value.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """storage_objects_delete

        Deletes data blobs and associated metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.

        :param bucket: Name of the bucket in which the object resides. (required)
        :type bucket: str
        :param object: Name of the object. (required)
        :type object: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param generation: If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default).
        :type generation: str
        :param if_generation_match: Makes the operation conditional on whether the object's current generation matches the given value.
        :type if_generation_match: str
        :param if_generation_not_match: Makes the operation conditional on whether the object's current generation does not match the given value.
        :type if_generation_not_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param if_metageneration_not_match: Makes the operation conditional on whether the object's current metageneration does not match the given value.
        :type if_metageneration_not_match: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_delete_serialize(
            bucket=bucket,
            object=object,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            generation=generation,
            if_generation_match=if_generation_match,
            if_generation_not_match=if_generation_not_match,
            if_metageneration_match=if_metageneration_match,
            if_metageneration_not_match=if_metageneration_not_match,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def storage_objects_delete_with_http_info(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which the object resides.")],
        object: Annotated[StrictStr, Field(description="Name of the object.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        generation: Annotated[Optional[StrictStr], Field(description="If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default).")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation matches the given value.")] = None,
        if_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation does not match the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration matches the given value.")] = None,
        if_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration does not match the given value.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """storage_objects_delete

        Deletes data blobs and associated metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.

        :param bucket: Name of the bucket in which the object resides. (required)
        :type bucket: str
        :param object: Name of the object. (required)
        :type object: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param generation: If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default).
        :type generation: str
        :param if_generation_match: Makes the operation conditional on whether the object's current generation matches the given value.
        :type if_generation_match: str
        :param if_generation_not_match: Makes the operation conditional on whether the object's current generation does not match the given value.
        :type if_generation_not_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param if_metageneration_not_match: Makes the operation conditional on whether the object's current metageneration does not match the given value.
        :type if_metageneration_not_match: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_delete_serialize(
            bucket=bucket,
            object=object,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            generation=generation,
            if_generation_match=if_generation_match,
            if_generation_not_match=if_generation_not_match,
            if_metageneration_match=if_metageneration_match,
            if_metageneration_not_match=if_metageneration_not_match,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def storage_objects_delete_without_preload_content(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which the object resides.")],
        object: Annotated[StrictStr, Field(description="Name of the object.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        generation: Annotated[Optional[StrictStr], Field(description="If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default).")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation matches the given value.")] = None,
        if_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation does not match the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration matches the given value.")] = None,
        if_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration does not match the given value.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """storage_objects_delete

        Deletes data blobs and associated metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.

        :param bucket: Name of the bucket in which the object resides. (required)
        :type bucket: str
        :param object: Name of the object. (required)
        :type object: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param generation: If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default).
        :type generation: str
        :param if_generation_match: Makes the operation conditional on whether the object's current generation matches the given value.
        :type if_generation_match: str
        :param if_generation_not_match: Makes the operation conditional on whether the object's current generation does not match the given value.
        :type if_generation_not_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param if_metageneration_not_match: Makes the operation conditional on whether the object's current metageneration does not match the given value.
        :type if_metageneration_not_match: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_delete_serialize(
            bucket=bucket,
            object=object,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            generation=generation,
            if_generation_match=if_generation_match,
            if_generation_not_match=if_generation_not_match,
            if_metageneration_match=if_metageneration_match,
            if_metageneration_not_match=if_metageneration_not_match,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _storage_objects_delete_serialize(
        self,
        bucket,
        object,
        alt,
        fields,
        key,
        oauth_token,
        pretty_print,
        quota_user,
        user_ip,
        generation,
        if_generation_match,
        if_generation_not_match,
        if_metageneration_match,
        if_metageneration_not_match,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if bucket is not None:
            _path_params['bucket'] = bucket
        if object is not None:
            _path_params['object'] = object
        # process the query parameters
        if alt is not None:
            
            _query_params.append(('alt', alt))
            
        if fields is not None:
            
            _query_params.append(('fields', fields))
            
        if key is not None:
            
            _query_params.append(('key', key))
            
        if oauth_token is not None:
            
            _query_params.append(('oauth_token', oauth_token))
            
        if pretty_print is not None:
            
            _query_params.append(('prettyPrint', pretty_print))
            
        if quota_user is not None:
            
            _query_params.append(('quotaUser', quota_user))
            
        if user_ip is not None:
            
            _query_params.append(('userIp', user_ip))
            
        if generation is not None:
            
            _query_params.append(('generation', generation))
            
        if if_generation_match is not None:
            
            _query_params.append(('ifGenerationMatch', if_generation_match))
            
        if if_generation_not_match is not None:
            
            _query_params.append(('ifGenerationNotMatch', if_generation_not_match))
            
        if if_metageneration_match is not None:
            
            _query_params.append(('ifMetagenerationMatch', if_metageneration_match))
            
        if if_metageneration_not_match is not None:
            
            _query_params.append(('ifMetagenerationNotMatch', if_metageneration_not_match))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter




        # authentication setting
        _auth_settings: List[str] = [
            'Oauth2c', 
            'Oauth2'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/b/{bucket}/o/{object}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def storage_objects_get(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which the object resides.")],
        object: Annotated[StrictStr, Field(description="Name of the object.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        generation: Annotated[Optional[StrictStr], Field(description="If present, selects a specific revision of this object (as opposed to the latest version, the default).")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's generation matches the given value.")] = None,
        if_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's generation does not match the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration matches the given value.")] = None,
        if_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration does not match the given value.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to noAcl.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Object:
        """storage_objects_get

        Retrieves objects or their associated metadata.

        :param bucket: Name of the bucket in which the object resides. (required)
        :type bucket: str
        :param object: Name of the object. (required)
        :type object: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param generation: If present, selects a specific revision of this object (as opposed to the latest version, the default).
        :type generation: str
        :param if_generation_match: Makes the operation conditional on whether the object's generation matches the given value.
        :type if_generation_match: str
        :param if_generation_not_match: Makes the operation conditional on whether the object's generation does not match the given value.
        :type if_generation_not_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param if_metageneration_not_match: Makes the operation conditional on whether the object's current metageneration does not match the given value.
        :type if_metageneration_not_match: str
        :param projection: Set of properties to return. Defaults to noAcl.
        :type projection: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_get_serialize(
            bucket=bucket,
            object=object,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            generation=generation,
            if_generation_match=if_generation_match,
            if_generation_not_match=if_generation_not_match,
            if_metageneration_match=if_metageneration_match,
            if_metageneration_not_match=if_metageneration_not_match,
            projection=projection,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def storage_objects_get_with_http_info(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which the object resides.")],
        object: Annotated[StrictStr, Field(description="Name of the object.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        generation: Annotated[Optional[StrictStr], Field(description="If present, selects a specific revision of this object (as opposed to the latest version, the default).")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's generation matches the given value.")] = None,
        if_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's generation does not match the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration matches the given value.")] = None,
        if_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration does not match the given value.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to noAcl.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Object]:
        """storage_objects_get

        Retrieves objects or their associated metadata.

        :param bucket: Name of the bucket in which the object resides. (required)
        :type bucket: str
        :param object: Name of the object. (required)
        :type object: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param generation: If present, selects a specific revision of this object (as opposed to the latest version, the default).
        :type generation: str
        :param if_generation_match: Makes the operation conditional on whether the object's generation matches the given value.
        :type if_generation_match: str
        :param if_generation_not_match: Makes the operation conditional on whether the object's generation does not match the given value.
        :type if_generation_not_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param if_metageneration_not_match: Makes the operation conditional on whether the object's current metageneration does not match the given value.
        :type if_metageneration_not_match: str
        :param projection: Set of properties to return. Defaults to noAcl.
        :type projection: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_get_serialize(
            bucket=bucket,
            object=object,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            generation=generation,
            if_generation_match=if_generation_match,
            if_generation_not_match=if_generation_not_match,
            if_metageneration_match=if_metageneration_match,
            if_metageneration_not_match=if_metageneration_not_match,
            projection=projection,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def storage_objects_get_without_preload_content(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which the object resides.")],
        object: Annotated[StrictStr, Field(description="Name of the object.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        generation: Annotated[Optional[StrictStr], Field(description="If present, selects a specific revision of this object (as opposed to the latest version, the default).")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's generation matches the given value.")] = None,
        if_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's generation does not match the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration matches the given value.")] = None,
        if_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration does not match the given value.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to noAcl.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """storage_objects_get

        Retrieves objects or their associated metadata.

        :param bucket: Name of the bucket in which the object resides. (required)
        :type bucket: str
        :param object: Name of the object. (required)
        :type object: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param generation: If present, selects a specific revision of this object (as opposed to the latest version, the default).
        :type generation: str
        :param if_generation_match: Makes the operation conditional on whether the object's generation matches the given value.
        :type if_generation_match: str
        :param if_generation_not_match: Makes the operation conditional on whether the object's generation does not match the given value.
        :type if_generation_not_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param if_metageneration_not_match: Makes the operation conditional on whether the object's current metageneration does not match the given value.
        :type if_metageneration_not_match: str
        :param projection: Set of properties to return. Defaults to noAcl.
        :type projection: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_get_serialize(
            bucket=bucket,
            object=object,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            generation=generation,
            if_generation_match=if_generation_match,
            if_generation_not_match=if_generation_not_match,
            if_metageneration_match=if_metageneration_match,
            if_metageneration_not_match=if_metageneration_not_match,
            projection=projection,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _storage_objects_get_serialize(
        self,
        bucket,
        object,
        alt,
        fields,
        key,
        oauth_token,
        pretty_print,
        quota_user,
        user_ip,
        generation,
        if_generation_match,
        if_generation_not_match,
        if_metageneration_match,
        if_metageneration_not_match,
        projection,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if bucket is not None:
            _path_params['bucket'] = bucket
        if object is not None:
            _path_params['object'] = object
        # process the query parameters
        if alt is not None:
            
            _query_params.append(('alt', alt))
            
        if fields is not None:
            
            _query_params.append(('fields', fields))
            
        if key is not None:
            
            _query_params.append(('key', key))
            
        if oauth_token is not None:
            
            _query_params.append(('oauth_token', oauth_token))
            
        if pretty_print is not None:
            
            _query_params.append(('prettyPrint', pretty_print))
            
        if quota_user is not None:
            
            _query_params.append(('quotaUser', quota_user))
            
        if user_ip is not None:
            
            _query_params.append(('userIp', user_ip))
            
        if generation is not None:
            
            _query_params.append(('generation', generation))
            
        if if_generation_match is not None:
            
            _query_params.append(('ifGenerationMatch', if_generation_match))
            
        if if_generation_not_match is not None:
            
            _query_params.append(('ifGenerationNotMatch', if_generation_not_match))
            
        if if_metageneration_match is not None:
            
            _query_params.append(('ifMetagenerationMatch', if_metageneration_match))
            
        if if_metageneration_not_match is not None:
            
            _query_params.append(('ifMetagenerationNotMatch', if_metageneration_not_match))
            
        if projection is not None:
            
            _query_params.append(('projection', projection))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'Oauth2c', 
            'Oauth2'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/b/{bucket}/o/{object}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def storage_objects_insert(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation matches the given value.")] = None,
        if_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation does not match the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration matches the given value.")] = None,
        if_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration does not match the given value.")] = None,
        name: Annotated[Optional[StrictStr], Field(description="Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.")] = None,
        object: Optional[Object] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Object:
        """storage_objects_insert

        Stores new data blobs and associated metadata.

        :param bucket: Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any. (required)
        :type bucket: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param if_generation_match: Makes the operation conditional on whether the object's current generation matches the given value.
        :type if_generation_match: str
        :param if_generation_not_match: Makes the operation conditional on whether the object's current generation does not match the given value.
        :type if_generation_not_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param if_metageneration_not_match: Makes the operation conditional on whether the object's current metageneration does not match the given value.
        :type if_metageneration_not_match: str
        :param name: Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.
        :type name: str
        :param projection: Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
        :type projection: str
        :param object:
        :type object: Object
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_insert_serialize(
            bucket=bucket,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            if_generation_match=if_generation_match,
            if_generation_not_match=if_generation_not_match,
            if_metageneration_match=if_metageneration_match,
            if_metageneration_not_match=if_metageneration_not_match,
            name=name,
            projection=projection,
            object=object,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def storage_objects_insert_with_http_info(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation matches the given value.")] = None,
        if_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation does not match the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration matches the given value.")] = None,
        if_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration does not match the given value.")] = None,
        name: Annotated[Optional[StrictStr], Field(description="Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.")] = None,
        object: Optional[Object] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Object]:
        """storage_objects_insert

        Stores new data blobs and associated metadata.

        :param bucket: Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any. (required)
        :type bucket: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param if_generation_match: Makes the operation conditional on whether the object's current generation matches the given value.
        :type if_generation_match: str
        :param if_generation_not_match: Makes the operation conditional on whether the object's current generation does not match the given value.
        :type if_generation_not_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param if_metageneration_not_match: Makes the operation conditional on whether the object's current metageneration does not match the given value.
        :type if_metageneration_not_match: str
        :param name: Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.
        :type name: str
        :param projection: Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
        :type projection: str
        :param object:
        :type object: Object
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_insert_serialize(
            bucket=bucket,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            if_generation_match=if_generation_match,
            if_generation_not_match=if_generation_not_match,
            if_metageneration_match=if_metageneration_match,
            if_metageneration_not_match=if_metageneration_not_match,
            name=name,
            projection=projection,
            object=object,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def storage_objects_insert_without_preload_content(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation matches the given value.")] = None,
        if_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation does not match the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration matches the given value.")] = None,
        if_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration does not match the given value.")] = None,
        name: Annotated[Optional[StrictStr], Field(description="Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.")] = None,
        object: Optional[Object] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """storage_objects_insert

        Stores new data blobs and associated metadata.

        :param bucket: Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any. (required)
        :type bucket: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param if_generation_match: Makes the operation conditional on whether the object's current generation matches the given value.
        :type if_generation_match: str
        :param if_generation_not_match: Makes the operation conditional on whether the object's current generation does not match the given value.
        :type if_generation_not_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param if_metageneration_not_match: Makes the operation conditional on whether the object's current metageneration does not match the given value.
        :type if_metageneration_not_match: str
        :param name: Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.
        :type name: str
        :param projection: Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
        :type projection: str
        :param object:
        :type object: Object
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_insert_serialize(
            bucket=bucket,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            if_generation_match=if_generation_match,
            if_generation_not_match=if_generation_not_match,
            if_metageneration_match=if_metageneration_match,
            if_metageneration_not_match=if_metageneration_not_match,
            name=name,
            projection=projection,
            object=object,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _storage_objects_insert_serialize(
        self,
        bucket,
        alt,
        fields,
        key,
        oauth_token,
        pretty_print,
        quota_user,
        user_ip,
        if_generation_match,
        if_generation_not_match,
        if_metageneration_match,
        if_metageneration_not_match,
        name,
        projection,
        object,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if bucket is not None:
            _path_params['bucket'] = bucket
        # process the query parameters
        if alt is not None:
            
            _query_params.append(('alt', alt))
            
        if fields is not None:
            
            _query_params.append(('fields', fields))
            
        if key is not None:
            
            _query_params.append(('key', key))
            
        if oauth_token is not None:
            
            _query_params.append(('oauth_token', oauth_token))
            
        if pretty_print is not None:
            
            _query_params.append(('prettyPrint', pretty_print))
            
        if quota_user is not None:
            
            _query_params.append(('quotaUser', quota_user))
            
        if user_ip is not None:
            
            _query_params.append(('userIp', user_ip))
            
        if if_generation_match is not None:
            
            _query_params.append(('ifGenerationMatch', if_generation_match))
            
        if if_generation_not_match is not None:
            
            _query_params.append(('ifGenerationNotMatch', if_generation_not_match))
            
        if if_metageneration_match is not None:
            
            _query_params.append(('ifMetagenerationMatch', if_metageneration_match))
            
        if if_metageneration_not_match is not None:
            
            _query_params.append(('ifMetagenerationNotMatch', if_metageneration_not_match))
            
        if name is not None:
            
            _query_params.append(('name', name))
            
        if projection is not None:
            
            _query_params.append(('projection', projection))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if object is not None:
            _body_params = object


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/octet-stream'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Oauth2c', 
            'Oauth2'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/b/{bucket}/o',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def storage_objects_list(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which to look for objects.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        delimiter: Annotated[Optional[StrictStr], Field(description="Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.")] = None,
        max_results: Annotated[Optional[Annotated[int, Field(strict=True, ge=0)]], Field(description="Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.")] = None,
        page_token: Annotated[Optional[StrictStr], Field(description="A previously-returned page token representing part of the larger set of results to view.")] = None,
        prefix: Annotated[Optional[StrictStr], Field(description="Filter results to objects whose names begin with this prefix.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to noAcl.")] = None,
        versions: Annotated[Optional[StrictBool], Field(description="If true, lists all versions of a file as distinct results.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Objects:
        """storage_objects_list

        Retrieves a list of objects matching the criteria.

        :param bucket: Name of the bucket in which to look for objects. (required)
        :type bucket: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param delimiter: Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
        :type delimiter: str
        :param max_results: Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.
        :type max_results: int
        :param page_token: A previously-returned page token representing part of the larger set of results to view.
        :type page_token: str
        :param prefix: Filter results to objects whose names begin with this prefix.
        :type prefix: str
        :param projection: Set of properties to return. Defaults to noAcl.
        :type projection: str
        :param versions: If true, lists all versions of a file as distinct results.
        :type versions: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_list_serialize(
            bucket=bucket,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            delimiter=delimiter,
            max_results=max_results,
            page_token=page_token,
            prefix=prefix,
            projection=projection,
            versions=versions,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Objects",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def storage_objects_list_with_http_info(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which to look for objects.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        delimiter: Annotated[Optional[StrictStr], Field(description="Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.")] = None,
        max_results: Annotated[Optional[Annotated[int, Field(strict=True, ge=0)]], Field(description="Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.")] = None,
        page_token: Annotated[Optional[StrictStr], Field(description="A previously-returned page token representing part of the larger set of results to view.")] = None,
        prefix: Annotated[Optional[StrictStr], Field(description="Filter results to objects whose names begin with this prefix.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to noAcl.")] = None,
        versions: Annotated[Optional[StrictBool], Field(description="If true, lists all versions of a file as distinct results.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Objects]:
        """storage_objects_list

        Retrieves a list of objects matching the criteria.

        :param bucket: Name of the bucket in which to look for objects. (required)
        :type bucket: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param delimiter: Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
        :type delimiter: str
        :param max_results: Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.
        :type max_results: int
        :param page_token: A previously-returned page token representing part of the larger set of results to view.
        :type page_token: str
        :param prefix: Filter results to objects whose names begin with this prefix.
        :type prefix: str
        :param projection: Set of properties to return. Defaults to noAcl.
        :type projection: str
        :param versions: If true, lists all versions of a file as distinct results.
        :type versions: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_list_serialize(
            bucket=bucket,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            delimiter=delimiter,
            max_results=max_results,
            page_token=page_token,
            prefix=prefix,
            projection=projection,
            versions=versions,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Objects",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def storage_objects_list_without_preload_content(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which to look for objects.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        delimiter: Annotated[Optional[StrictStr], Field(description="Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.")] = None,
        max_results: Annotated[Optional[Annotated[int, Field(strict=True, ge=0)]], Field(description="Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.")] = None,
        page_token: Annotated[Optional[StrictStr], Field(description="A previously-returned page token representing part of the larger set of results to view.")] = None,
        prefix: Annotated[Optional[StrictStr], Field(description="Filter results to objects whose names begin with this prefix.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to noAcl.")] = None,
        versions: Annotated[Optional[StrictBool], Field(description="If true, lists all versions of a file as distinct results.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """storage_objects_list

        Retrieves a list of objects matching the criteria.

        :param bucket: Name of the bucket in which to look for objects. (required)
        :type bucket: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param delimiter: Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
        :type delimiter: str
        :param max_results: Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.
        :type max_results: int
        :param page_token: A previously-returned page token representing part of the larger set of results to view.
        :type page_token: str
        :param prefix: Filter results to objects whose names begin with this prefix.
        :type prefix: str
        :param projection: Set of properties to return. Defaults to noAcl.
        :type projection: str
        :param versions: If true, lists all versions of a file as distinct results.
        :type versions: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_list_serialize(
            bucket=bucket,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            delimiter=delimiter,
            max_results=max_results,
            page_token=page_token,
            prefix=prefix,
            projection=projection,
            versions=versions,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Objects",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _storage_objects_list_serialize(
        self,
        bucket,
        alt,
        fields,
        key,
        oauth_token,
        pretty_print,
        quota_user,
        user_ip,
        delimiter,
        max_results,
        page_token,
        prefix,
        projection,
        versions,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if bucket is not None:
            _path_params['bucket'] = bucket
        # process the query parameters
        if alt is not None:
            
            _query_params.append(('alt', alt))
            
        if fields is not None:
            
            _query_params.append(('fields', fields))
            
        if key is not None:
            
            _query_params.append(('key', key))
            
        if oauth_token is not None:
            
            _query_params.append(('oauth_token', oauth_token))
            
        if pretty_print is not None:
            
            _query_params.append(('prettyPrint', pretty_print))
            
        if quota_user is not None:
            
            _query_params.append(('quotaUser', quota_user))
            
        if user_ip is not None:
            
            _query_params.append(('userIp', user_ip))
            
        if delimiter is not None:
            
            _query_params.append(('delimiter', delimiter))
            
        if max_results is not None:
            
            _query_params.append(('maxResults', max_results))
            
        if page_token is not None:
            
            _query_params.append(('pageToken', page_token))
            
        if prefix is not None:
            
            _query_params.append(('prefix', prefix))
            
        if projection is not None:
            
            _query_params.append(('projection', projection))
            
        if versions is not None:
            
            _query_params.append(('versions', versions))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'Oauth2c', 
            'Oauth2'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/b/{bucket}/o',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def storage_objects_patch(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which the object resides.")],
        object: Annotated[StrictStr, Field(description="Name of the object.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        generation: Annotated[Optional[StrictStr], Field(description="If present, selects a specific revision of this object (as opposed to the latest version, the default).")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation matches the given value.")] = None,
        if_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation does not match the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration matches the given value.")] = None,
        if_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration does not match the given value.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to full.")] = None,
        object2: Optional[Object] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Object:
        """storage_objects_patch

        Updates a data blob's associated metadata. This method supports patch semantics.

        :param bucket: Name of the bucket in which the object resides. (required)
        :type bucket: str
        :param object: Name of the object. (required)
        :type object: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param generation: If present, selects a specific revision of this object (as opposed to the latest version, the default).
        :type generation: str
        :param if_generation_match: Makes the operation conditional on whether the object's current generation matches the given value.
        :type if_generation_match: str
        :param if_generation_not_match: Makes the operation conditional on whether the object's current generation does not match the given value.
        :type if_generation_not_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param if_metageneration_not_match: Makes the operation conditional on whether the object's current metageneration does not match the given value.
        :type if_metageneration_not_match: str
        :param projection: Set of properties to return. Defaults to full.
        :type projection: str
        :param object2:
        :type object2: Object
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_patch_serialize(
            bucket=bucket,
            object=object,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            generation=generation,
            if_generation_match=if_generation_match,
            if_generation_not_match=if_generation_not_match,
            if_metageneration_match=if_metageneration_match,
            if_metageneration_not_match=if_metageneration_not_match,
            projection=projection,
            object2=object2,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def storage_objects_patch_with_http_info(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which the object resides.")],
        object: Annotated[StrictStr, Field(description="Name of the object.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        generation: Annotated[Optional[StrictStr], Field(description="If present, selects a specific revision of this object (as opposed to the latest version, the default).")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation matches the given value.")] = None,
        if_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation does not match the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration matches the given value.")] = None,
        if_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration does not match the given value.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to full.")] = None,
        object2: Optional[Object] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Object]:
        """storage_objects_patch

        Updates a data blob's associated metadata. This method supports patch semantics.

        :param bucket: Name of the bucket in which the object resides. (required)
        :type bucket: str
        :param object: Name of the object. (required)
        :type object: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param generation: If present, selects a specific revision of this object (as opposed to the latest version, the default).
        :type generation: str
        :param if_generation_match: Makes the operation conditional on whether the object's current generation matches the given value.
        :type if_generation_match: str
        :param if_generation_not_match: Makes the operation conditional on whether the object's current generation does not match the given value.
        :type if_generation_not_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param if_metageneration_not_match: Makes the operation conditional on whether the object's current metageneration does not match the given value.
        :type if_metageneration_not_match: str
        :param projection: Set of properties to return. Defaults to full.
        :type projection: str
        :param object2:
        :type object2: Object
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_patch_serialize(
            bucket=bucket,
            object=object,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            generation=generation,
            if_generation_match=if_generation_match,
            if_generation_not_match=if_generation_not_match,
            if_metageneration_match=if_metageneration_match,
            if_metageneration_not_match=if_metageneration_not_match,
            projection=projection,
            object2=object2,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def storage_objects_patch_without_preload_content(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which the object resides.")],
        object: Annotated[StrictStr, Field(description="Name of the object.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        generation: Annotated[Optional[StrictStr], Field(description="If present, selects a specific revision of this object (as opposed to the latest version, the default).")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation matches the given value.")] = None,
        if_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation does not match the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration matches the given value.")] = None,
        if_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration does not match the given value.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to full.")] = None,
        object2: Optional[Object] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """storage_objects_patch

        Updates a data blob's associated metadata. This method supports patch semantics.

        :param bucket: Name of the bucket in which the object resides. (required)
        :type bucket: str
        :param object: Name of the object. (required)
        :type object: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param generation: If present, selects a specific revision of this object (as opposed to the latest version, the default).
        :type generation: str
        :param if_generation_match: Makes the operation conditional on whether the object's current generation matches the given value.
        :type if_generation_match: str
        :param if_generation_not_match: Makes the operation conditional on whether the object's current generation does not match the given value.
        :type if_generation_not_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param if_metageneration_not_match: Makes the operation conditional on whether the object's current metageneration does not match the given value.
        :type if_metageneration_not_match: str
        :param projection: Set of properties to return. Defaults to full.
        :type projection: str
        :param object2:
        :type object2: Object
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_patch_serialize(
            bucket=bucket,
            object=object,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            generation=generation,
            if_generation_match=if_generation_match,
            if_generation_not_match=if_generation_not_match,
            if_metageneration_match=if_metageneration_match,
            if_metageneration_not_match=if_metageneration_not_match,
            projection=projection,
            object2=object2,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _storage_objects_patch_serialize(
        self,
        bucket,
        object,
        alt,
        fields,
        key,
        oauth_token,
        pretty_print,
        quota_user,
        user_ip,
        generation,
        if_generation_match,
        if_generation_not_match,
        if_metageneration_match,
        if_metageneration_not_match,
        projection,
        object2,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if bucket is not None:
            _path_params['bucket'] = bucket
        if object is not None:
            _path_params['object'] = object
        # process the query parameters
        if alt is not None:
            
            _query_params.append(('alt', alt))
            
        if fields is not None:
            
            _query_params.append(('fields', fields))
            
        if key is not None:
            
            _query_params.append(('key', key))
            
        if oauth_token is not None:
            
            _query_params.append(('oauth_token', oauth_token))
            
        if pretty_print is not None:
            
            _query_params.append(('prettyPrint', pretty_print))
            
        if quota_user is not None:
            
            _query_params.append(('quotaUser', quota_user))
            
        if user_ip is not None:
            
            _query_params.append(('userIp', user_ip))
            
        if generation is not None:
            
            _query_params.append(('generation', generation))
            
        if if_generation_match is not None:
            
            _query_params.append(('ifGenerationMatch', if_generation_match))
            
        if if_generation_not_match is not None:
            
            _query_params.append(('ifGenerationNotMatch', if_generation_not_match))
            
        if if_metageneration_match is not None:
            
            _query_params.append(('ifMetagenerationMatch', if_metageneration_match))
            
        if if_metageneration_not_match is not None:
            
            _query_params.append(('ifMetagenerationNotMatch', if_metageneration_not_match))
            
        if projection is not None:
            
            _query_params.append(('projection', projection))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if object2 is not None:
            _body_params = object2


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Oauth2c', 
            'Oauth2'
        ]

        return self.api_client.param_serialize(
            method='PATCH',
            resource_path='/b/{bucket}/o/{object}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def storage_objects_update(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which the object resides.")],
        object: Annotated[StrictStr, Field(description="Name of the object.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        generation: Annotated[Optional[StrictStr], Field(description="If present, selects a specific revision of this object (as opposed to the latest version, the default).")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation matches the given value.")] = None,
        if_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation does not match the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration matches the given value.")] = None,
        if_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration does not match the given value.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to full.")] = None,
        object2: Optional[Object] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Object:
        """storage_objects_update

        Updates a data blob's associated metadata.

        :param bucket: Name of the bucket in which the object resides. (required)
        :type bucket: str
        :param object: Name of the object. (required)
        :type object: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param generation: If present, selects a specific revision of this object (as opposed to the latest version, the default).
        :type generation: str
        :param if_generation_match: Makes the operation conditional on whether the object's current generation matches the given value.
        :type if_generation_match: str
        :param if_generation_not_match: Makes the operation conditional on whether the object's current generation does not match the given value.
        :type if_generation_not_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param if_metageneration_not_match: Makes the operation conditional on whether the object's current metageneration does not match the given value.
        :type if_metageneration_not_match: str
        :param projection: Set of properties to return. Defaults to full.
        :type projection: str
        :param object2:
        :type object2: Object
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_update_serialize(
            bucket=bucket,
            object=object,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            generation=generation,
            if_generation_match=if_generation_match,
            if_generation_not_match=if_generation_not_match,
            if_metageneration_match=if_metageneration_match,
            if_metageneration_not_match=if_metageneration_not_match,
            projection=projection,
            object2=object2,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def storage_objects_update_with_http_info(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which the object resides.")],
        object: Annotated[StrictStr, Field(description="Name of the object.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        generation: Annotated[Optional[StrictStr], Field(description="If present, selects a specific revision of this object (as opposed to the latest version, the default).")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation matches the given value.")] = None,
        if_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation does not match the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration matches the given value.")] = None,
        if_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration does not match the given value.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to full.")] = None,
        object2: Optional[Object] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Object]:
        """storage_objects_update

        Updates a data blob's associated metadata.

        :param bucket: Name of the bucket in which the object resides. (required)
        :type bucket: str
        :param object: Name of the object. (required)
        :type object: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param generation: If present, selects a specific revision of this object (as opposed to the latest version, the default).
        :type generation: str
        :param if_generation_match: Makes the operation conditional on whether the object's current generation matches the given value.
        :type if_generation_match: str
        :param if_generation_not_match: Makes the operation conditional on whether the object's current generation does not match the given value.
        :type if_generation_not_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param if_metageneration_not_match: Makes the operation conditional on whether the object's current metageneration does not match the given value.
        :type if_metageneration_not_match: str
        :param projection: Set of properties to return. Defaults to full.
        :type projection: str
        :param object2:
        :type object2: Object
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_update_serialize(
            bucket=bucket,
            object=object,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            generation=generation,
            if_generation_match=if_generation_match,
            if_generation_not_match=if_generation_not_match,
            if_metageneration_match=if_metageneration_match,
            if_metageneration_not_match=if_metageneration_not_match,
            projection=projection,
            object2=object2,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def storage_objects_update_without_preload_content(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which the object resides.")],
        object: Annotated[StrictStr, Field(description="Name of the object.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        generation: Annotated[Optional[StrictStr], Field(description="If present, selects a specific revision of this object (as opposed to the latest version, the default).")] = None,
        if_generation_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation matches the given value.")] = None,
        if_generation_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current generation does not match the given value.")] = None,
        if_metageneration_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration matches the given value.")] = None,
        if_metageneration_not_match: Annotated[Optional[StrictStr], Field(description="Makes the operation conditional on whether the object's current metageneration does not match the given value.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to full.")] = None,
        object2: Optional[Object] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """storage_objects_update

        Updates a data blob's associated metadata.

        :param bucket: Name of the bucket in which the object resides. (required)
        :type bucket: str
        :param object: Name of the object. (required)
        :type object: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param generation: If present, selects a specific revision of this object (as opposed to the latest version, the default).
        :type generation: str
        :param if_generation_match: Makes the operation conditional on whether the object's current generation matches the given value.
        :type if_generation_match: str
        :param if_generation_not_match: Makes the operation conditional on whether the object's current generation does not match the given value.
        :type if_generation_not_match: str
        :param if_metageneration_match: Makes the operation conditional on whether the object's current metageneration matches the given value.
        :type if_metageneration_match: str
        :param if_metageneration_not_match: Makes the operation conditional on whether the object's current metageneration does not match the given value.
        :type if_metageneration_not_match: str
        :param projection: Set of properties to return. Defaults to full.
        :type projection: str
        :param object2:
        :type object2: Object
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_update_serialize(
            bucket=bucket,
            object=object,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            generation=generation,
            if_generation_match=if_generation_match,
            if_generation_not_match=if_generation_not_match,
            if_metageneration_match=if_metageneration_match,
            if_metageneration_not_match=if_metageneration_not_match,
            projection=projection,
            object2=object2,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Object",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _storage_objects_update_serialize(
        self,
        bucket,
        object,
        alt,
        fields,
        key,
        oauth_token,
        pretty_print,
        quota_user,
        user_ip,
        generation,
        if_generation_match,
        if_generation_not_match,
        if_metageneration_match,
        if_metageneration_not_match,
        projection,
        object2,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if bucket is not None:
            _path_params['bucket'] = bucket
        if object is not None:
            _path_params['object'] = object
        # process the query parameters
        if alt is not None:
            
            _query_params.append(('alt', alt))
            
        if fields is not None:
            
            _query_params.append(('fields', fields))
            
        if key is not None:
            
            _query_params.append(('key', key))
            
        if oauth_token is not None:
            
            _query_params.append(('oauth_token', oauth_token))
            
        if pretty_print is not None:
            
            _query_params.append(('prettyPrint', pretty_print))
            
        if quota_user is not None:
            
            _query_params.append(('quotaUser', quota_user))
            
        if user_ip is not None:
            
            _query_params.append(('userIp', user_ip))
            
        if generation is not None:
            
            _query_params.append(('generation', generation))
            
        if if_generation_match is not None:
            
            _query_params.append(('ifGenerationMatch', if_generation_match))
            
        if if_generation_not_match is not None:
            
            _query_params.append(('ifGenerationNotMatch', if_generation_not_match))
            
        if if_metageneration_match is not None:
            
            _query_params.append(('ifMetagenerationMatch', if_metageneration_match))
            
        if if_metageneration_not_match is not None:
            
            _query_params.append(('ifMetagenerationNotMatch', if_metageneration_not_match))
            
        if projection is not None:
            
            _query_params.append(('projection', projection))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if object2 is not None:
            _body_params = object2


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Oauth2c', 
            'Oauth2'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/b/{bucket}/o/{object}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def storage_objects_watch_all(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which to look for objects.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        delimiter: Annotated[Optional[StrictStr], Field(description="Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.")] = None,
        max_results: Annotated[Optional[Annotated[int, Field(strict=True, ge=0)]], Field(description="Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.")] = None,
        page_token: Annotated[Optional[StrictStr], Field(description="A previously-returned page token representing part of the larger set of results to view.")] = None,
        prefix: Annotated[Optional[StrictStr], Field(description="Filter results to objects whose names begin with this prefix.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to noAcl.")] = None,
        versions: Annotated[Optional[StrictBool], Field(description="If true, lists all versions of a file as distinct results.")] = None,
        channel: Optional[Channel] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Channel:
        """storage_objects_watch_all

        Watch for changes on all objects in a bucket.

        :param bucket: Name of the bucket in which to look for objects. (required)
        :type bucket: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param delimiter: Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
        :type delimiter: str
        :param max_results: Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.
        :type max_results: int
        :param page_token: A previously-returned page token representing part of the larger set of results to view.
        :type page_token: str
        :param prefix: Filter results to objects whose names begin with this prefix.
        :type prefix: str
        :param projection: Set of properties to return. Defaults to noAcl.
        :type projection: str
        :param versions: If true, lists all versions of a file as distinct results.
        :type versions: bool
        :param channel:
        :type channel: Channel
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_watch_all_serialize(
            bucket=bucket,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            delimiter=delimiter,
            max_results=max_results,
            page_token=page_token,
            prefix=prefix,
            projection=projection,
            versions=versions,
            channel=channel,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Channel",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def storage_objects_watch_all_with_http_info(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which to look for objects.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        delimiter: Annotated[Optional[StrictStr], Field(description="Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.")] = None,
        max_results: Annotated[Optional[Annotated[int, Field(strict=True, ge=0)]], Field(description="Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.")] = None,
        page_token: Annotated[Optional[StrictStr], Field(description="A previously-returned page token representing part of the larger set of results to view.")] = None,
        prefix: Annotated[Optional[StrictStr], Field(description="Filter results to objects whose names begin with this prefix.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to noAcl.")] = None,
        versions: Annotated[Optional[StrictBool], Field(description="If true, lists all versions of a file as distinct results.")] = None,
        channel: Optional[Channel] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Channel]:
        """storage_objects_watch_all

        Watch for changes on all objects in a bucket.

        :param bucket: Name of the bucket in which to look for objects. (required)
        :type bucket: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param delimiter: Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
        :type delimiter: str
        :param max_results: Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.
        :type max_results: int
        :param page_token: A previously-returned page token representing part of the larger set of results to view.
        :type page_token: str
        :param prefix: Filter results to objects whose names begin with this prefix.
        :type prefix: str
        :param projection: Set of properties to return. Defaults to noAcl.
        :type projection: str
        :param versions: If true, lists all versions of a file as distinct results.
        :type versions: bool
        :param channel:
        :type channel: Channel
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_watch_all_serialize(
            bucket=bucket,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            delimiter=delimiter,
            max_results=max_results,
            page_token=page_token,
            prefix=prefix,
            projection=projection,
            versions=versions,
            channel=channel,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Channel",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def storage_objects_watch_all_without_preload_content(
        self,
        bucket: Annotated[StrictStr, Field(description="Name of the bucket in which to look for objects.")],
        alt: Annotated[Optional[StrictStr], Field(description="Data format for the response.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Selector specifying which fields to include in a partial response.")] = None,
        key: Annotated[Optional[StrictStr], Field(description="API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.")] = None,
        oauth_token: Annotated[Optional[StrictStr], Field(description="OAuth 2.0 token for the current user.")] = None,
        pretty_print: Annotated[Optional[StrictBool], Field(description="Returns response with indentations and line breaks.")] = None,
        quota_user: Annotated[Optional[StrictStr], Field(description="An opaque string that represents a user for quota purposes. Must not exceed 40 characters.")] = None,
        user_ip: Annotated[Optional[StrictStr], Field(description="Deprecated. Please use quotaUser instead.")] = None,
        delimiter: Annotated[Optional[StrictStr], Field(description="Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.")] = None,
        max_results: Annotated[Optional[Annotated[int, Field(strict=True, ge=0)]], Field(description="Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.")] = None,
        page_token: Annotated[Optional[StrictStr], Field(description="A previously-returned page token representing part of the larger set of results to view.")] = None,
        prefix: Annotated[Optional[StrictStr], Field(description="Filter results to objects whose names begin with this prefix.")] = None,
        projection: Annotated[Optional[StrictStr], Field(description="Set of properties to return. Defaults to noAcl.")] = None,
        versions: Annotated[Optional[StrictBool], Field(description="If true, lists all versions of a file as distinct results.")] = None,
        channel: Optional[Channel] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """storage_objects_watch_all

        Watch for changes on all objects in a bucket.

        :param bucket: Name of the bucket in which to look for objects. (required)
        :type bucket: str
        :param alt: Data format for the response.
        :type alt: str
        :param fields: Selector specifying which fields to include in a partial response.
        :type fields: str
        :param key: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        :type key: str
        :param oauth_token: OAuth 2.0 token for the current user.
        :type oauth_token: str
        :param pretty_print: Returns response with indentations and line breaks.
        :type pretty_print: bool
        :param quota_user: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
        :type quota_user: str
        :param user_ip: Deprecated. Please use quotaUser instead.
        :type user_ip: str
        :param delimiter: Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
        :type delimiter: str
        :param max_results: Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.
        :type max_results: int
        :param page_token: A previously-returned page token representing part of the larger set of results to view.
        :type page_token: str
        :param prefix: Filter results to objects whose names begin with this prefix.
        :type prefix: str
        :param projection: Set of properties to return. Defaults to noAcl.
        :type projection: str
        :param versions: If true, lists all versions of a file as distinct results.
        :type versions: bool
        :param channel:
        :type channel: Channel
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_objects_watch_all_serialize(
            bucket=bucket,
            alt=alt,
            fields=fields,
            key=key,
            oauth_token=oauth_token,
            pretty_print=pretty_print,
            quota_user=quota_user,
            user_ip=user_ip,
            delimiter=delimiter,
            max_results=max_results,
            page_token=page_token,
            prefix=prefix,
            projection=projection,
            versions=versions,
            channel=channel,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Channel",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _storage_objects_watch_all_serialize(
        self,
        bucket,
        alt,
        fields,
        key,
        oauth_token,
        pretty_print,
        quota_user,
        user_ip,
        delimiter,
        max_results,
        page_token,
        prefix,
        projection,
        versions,
        channel,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if bucket is not None:
            _path_params['bucket'] = bucket
        # process the query parameters
        if alt is not None:
            
            _query_params.append(('alt', alt))
            
        if fields is not None:
            
            _query_params.append(('fields', fields))
            
        if key is not None:
            
            _query_params.append(('key', key))
            
        if oauth_token is not None:
            
            _query_params.append(('oauth_token', oauth_token))
            
        if pretty_print is not None:
            
            _query_params.append(('prettyPrint', pretty_print))
            
        if quota_user is not None:
            
            _query_params.append(('quotaUser', quota_user))
            
        if user_ip is not None:
            
            _query_params.append(('userIp', user_ip))
            
        if delimiter is not None:
            
            _query_params.append(('delimiter', delimiter))
            
        if max_results is not None:
            
            _query_params.append(('maxResults', max_results))
            
        if page_token is not None:
            
            _query_params.append(('pageToken', page_token))
            
        if prefix is not None:
            
            _query_params.append(('prefix', prefix))
            
        if projection is not None:
            
            _query_params.append(('projection', projection))
            
        if versions is not None:
            
            _query_params.append(('versions', versions))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if channel is not None:
            _body_params = channel


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Oauth2c', 
            'Oauth2'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/b/{bucket}/o/watch',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


