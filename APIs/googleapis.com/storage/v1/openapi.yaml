openapi: 3.0.0
servers:
  - url: https://storage.googleapis.com/storage/v1
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Stores and retrieves potentially large, immutable data objects.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Storage JSON API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - format: google
      url: https://storage.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: storage
externalDocs:
  url: https://developers.google.com/storage/docs/json_api/
tags:
  - name: anywhereCaches
  - name: bucketAccessControls
  - name: buckets
  - name: channels
  - name: defaultObjectAccessControls
  - name: folders
  - name: managedFolders
  - name: notifications
  - name: objectAccessControls
  - name: objects
  - name: operations
  - name: projects
paths:
  /b:
    get:
      description: Retrieves a list of buckets for a given project.
      operationId: storage.buckets.list
      parameters:
        - description: A valid API project identifier.
          in: query
          name: project
          required: true
          schema:
            type: string
        - description: Maximum number of buckets to return in a single response. The service will use this parameter or 1,000 items, whichever is smaller.
          in: query
          name: maxResults
          schema:
            minimum: 0
            type: integer
        - description: A previously-returned page token representing part of the larger set of results to view.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Filter results to buckets whose names begin with this prefix.
          in: query
          name: prefix
          schema:
            type: string
        - description: Set of properties to return. Defaults to noAcl.
          in: query
          name: projection
          schema:
            enum:
              - full
              - noAcl
            type: string
        - description: The project to be billed for this request.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Buckets"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - buckets
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a new bucket.
      operationId: storage.buckets.insert
      parameters:
        - description: A valid API project identifier.
          in: query
          name: project
          required: true
          schema:
            type: string
        - description: When set to true, object retention is enabled for this bucket.
          in: query
          name: enableObjectRetention
          schema:
            type: boolean
        - description: Apply a predefined set of access controls to this bucket.
          in: query
          name: predefinedAcl
          schema:
            enum:
              - authenticatedRead
              - private
              - projectPrivate
              - publicRead
              - publicReadWrite
            type: string
        - description: Apply a predefined set of default object access controls to this bucket.
          in: query
          name: predefinedDefaultObjectAcl
          schema:
            enum:
              - authenticatedRead
              - bucketOwnerFullControl
              - bucketOwnerRead
              - private
              - projectPrivate
              - publicRead
            type: string
        - description: Set of properties to return. Defaults to noAcl, unless the bucket resource specifies acl or defaultObjectAcl properties, when it defaults to full.
          in: query
          name: projection
          schema:
            enum:
              - full
              - noAcl
            type: string
        - description: The project to be billed for this request.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Bucket"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bucket"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - buckets
  /b/{bucket}:
    delete:
      description: Permanently deletes an empty bucket.
      operationId: storage.buckets.delete
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: If set, only deletes the bucket if its metageneration matches this value.
          in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - description: If set, only deletes the bucket if its metageneration does not match this value.
          in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - buckets
    get:
      description: Returns metadata for the specified bucket.
      operationId: storage.buckets.get
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.
          in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - description: Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.
          in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - description: Set of properties to return. Defaults to noAcl.
          in: query
          name: projection
          schema:
            enum:
              - full
              - noAcl
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bucket"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - buckets
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Patches a bucket. Changes to the bucket will be readable immediately after writing, but configuration changes may take time to propagate.
      operationId: storage.buckets.patch
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.
          in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - description: Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.
          in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - description: Apply a predefined set of access controls to this bucket.
          in: query
          name: predefinedAcl
          schema:
            enum:
              - authenticatedRead
              - private
              - projectPrivate
              - publicRead
              - publicReadWrite
            type: string
        - description: Apply a predefined set of default object access controls to this bucket.
          in: query
          name: predefinedDefaultObjectAcl
          schema:
            enum:
              - authenticatedRead
              - bucketOwnerFullControl
              - bucketOwnerRead
              - private
              - projectPrivate
              - publicRead
            type: string
        - description: Set of properties to return. Defaults to full.
          in: query
          name: projection
          schema:
            enum:
              - full
              - noAcl
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Bucket"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bucket"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - buckets
    put:
      description: Updates a bucket. Changes to the bucket will be readable immediately after writing, but configuration changes may take time to propagate.
      operationId: storage.buckets.update
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.
          in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - description: Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.
          in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - description: Apply a predefined set of access controls to this bucket.
          in: query
          name: predefinedAcl
          schema:
            enum:
              - authenticatedRead
              - private
              - projectPrivate
              - publicRead
              - publicReadWrite
            type: string
        - description: Apply a predefined set of default object access controls to this bucket.
          in: query
          name: predefinedDefaultObjectAcl
          schema:
            enum:
              - authenticatedRead
              - bucketOwnerFullControl
              - bucketOwnerRead
              - private
              - projectPrivate
              - publicRead
            type: string
        - description: Set of properties to return. Defaults to full.
          in: query
          name: projection
          schema:
            enum:
              - full
              - noAcl
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Bucket"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bucket"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - buckets
  /b/{bucket}/acl:
    get:
      description: Retrieves ACL entries on the specified bucket.
      operationId: storage.bucketAccessControls.list
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BucketAccessControls"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - bucketAccessControls
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a new ACL entry on the specified bucket.
      operationId: storage.bucketAccessControls.insert
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BucketAccessControl"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BucketAccessControl"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - bucketAccessControls
  /b/{bucket}/acl/{entity}:
    delete:
      description: Permanently deletes the ACL entry for the specified entity on the specified bucket.
      operationId: storage.bucketAccessControls.delete
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
          in: path
          name: entity
          required: true
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - bucketAccessControls
    get:
      description: Returns the ACL entry for the specified entity on the specified bucket.
      operationId: storage.bucketAccessControls.get
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
          in: path
          name: entity
          required: true
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BucketAccessControl"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - bucketAccessControls
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Patches an ACL entry on the specified bucket.
      operationId: storage.bucketAccessControls.patch
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
          in: path
          name: entity
          required: true
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BucketAccessControl"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BucketAccessControl"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - bucketAccessControls
    put:
      description: Updates an ACL entry on the specified bucket.
      operationId: storage.bucketAccessControls.update
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
          in: path
          name: entity
          required: true
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BucketAccessControl"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BucketAccessControl"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - bucketAccessControls
  /b/{bucket}/anywhereCaches:
    get:
      description: Returns a list of Anywhere Cache instances of the bucket matching the criteria.
      operationId: storage.anywhereCaches.list
      parameters:
        - description: Name of the parent bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Maximum number of items to return in a single page of responses. Maximum 1000.
          in: query
          name: pageSize
          schema:
            minimum: 0
            type: integer
        - description: A previously-returned page token representing part of the larger set of results to view.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnywhereCaches"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - anywhereCaches
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates an Anywhere Cache instance.
      operationId: storage.anywhereCaches.insert
      parameters:
        - description: Name of the parent bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnywhereCache"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - anywhereCaches
  /b/{bucket}/anywhereCaches/{anywhereCacheId}:
    get:
      description: Returns the metadata of an Anywhere Cache instance.
      operationId: storage.anywhereCaches.get
      parameters:
        - description: Name of the parent bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The ID of requested Anywhere Cache instance.
          in: path
          name: anywhereCacheId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnywhereCache"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - anywhereCaches
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates the config(ttl and admissionPolicy) of an Anywhere Cache instance.
      operationId: storage.anywhereCaches.update
      parameters:
        - description: Name of the parent bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The ID of requested Anywhere Cache instance.
          in: path
          name: anywhereCacheId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnywhereCache"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - anywhereCaches
  /b/{bucket}/anywhereCaches/{anywhereCacheId}/disable:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Disables an Anywhere Cache instance.
      operationId: storage.anywhereCaches.disable
      parameters:
        - description: Name of the parent bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The ID of requested Anywhere Cache instance.
          in: path
          name: anywhereCacheId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnywhereCache"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - anywhereCaches
  /b/{bucket}/anywhereCaches/{anywhereCacheId}/pause:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Pauses an Anywhere Cache instance.
      operationId: storage.anywhereCaches.pause
      parameters:
        - description: Name of the parent bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The ID of requested Anywhere Cache instance.
          in: path
          name: anywhereCacheId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnywhereCache"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - anywhereCaches
  /b/{bucket}/anywhereCaches/{anywhereCacheId}/resume:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Resumes a paused or disabled Anywhere Cache instance.
      operationId: storage.anywhereCaches.resume
      parameters:
        - description: Name of the parent bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The ID of requested Anywhere Cache instance.
          in: path
          name: anywhereCacheId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnywhereCache"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - anywhereCaches
  /b/{bucket}/defaultObjectAcl:
    get:
      description: Retrieves default object ACL entries on the specified bucket.
      operationId: storage.defaultObjectAccessControls.list
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: If present, only return default ACL listing if the bucket's current metageneration matches this value.
          in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - description: If present, only return default ACL listing if the bucket's current metageneration does not match the given value.
          in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectAccessControls"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - defaultObjectAccessControls
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a new default object ACL entry on the specified bucket.
      operationId: storage.defaultObjectAccessControls.insert
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ObjectAccessControl"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectAccessControl"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - defaultObjectAccessControls
  /b/{bucket}/defaultObjectAcl/{entity}:
    delete:
      description: Permanently deletes the default object ACL entry for the specified entity on the specified bucket.
      operationId: storage.defaultObjectAccessControls.delete
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
          in: path
          name: entity
          required: true
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - defaultObjectAccessControls
    get:
      description: Returns the default object ACL entry for the specified entity on the specified bucket.
      operationId: storage.defaultObjectAccessControls.get
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
          in: path
          name: entity
          required: true
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectAccessControl"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - defaultObjectAccessControls
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Patches a default object ACL entry on the specified bucket.
      operationId: storage.defaultObjectAccessControls.patch
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
          in: path
          name: entity
          required: true
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ObjectAccessControl"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectAccessControl"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - defaultObjectAccessControls
    put:
      description: Updates a default object ACL entry on the specified bucket.
      operationId: storage.defaultObjectAccessControls.update
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
          in: path
          name: entity
          required: true
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ObjectAccessControl"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectAccessControl"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - defaultObjectAccessControls
  /b/{bucket}/folders:
    get:
      description: Retrieves a list of folders matching the criteria. Only applicable to buckets with hierarchical namespace enabled.
      operationId: storage.folders.list
      parameters:
        - description: Name of the bucket in which to look for folders.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Returns results in a directory-like mode. The only supported value is '/'. If set, items will only contain folders that either exactly match the prefix, or are one level below the prefix.
          in: query
          name: delimiter
          schema:
            type: string
        - description: Filter results to folders whose names are lexicographically before endOffset. If startOffset is also set, the folders listed will have names between startOffset (inclusive) and endOffset (exclusive).
          in: query
          name: endOffset
          schema:
            type: string
        - description: Maximum number of items to return in a single page of responses.
          in: query
          name: pageSize
          schema:
            minimum: 0
            type: integer
        - description: A previously-returned page token representing part of the larger set of results to view.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Filter results to folders whose paths begin with this prefix. If set, the value must either be an empty string or end with a '/'.
          in: query
          name: prefix
          schema:
            type: string
        - description: Filter results to folders whose names are lexicographically equal to or after startOffset. If endOffset is also set, the folders listed will have names between startOffset (inclusive) and endOffset (exclusive).
          in: query
          name: startOffset
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Folders"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - folders
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a new folder. Only applicable to buckets with hierarchical namespace enabled.
      operationId: storage.folders.insert
      parameters:
        - description: Name of the bucket in which the folder resides.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: If true, any parent folder which doesn’t exist will be created automatically.
          in: query
          name: recursive
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Folder"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Folder"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - folders
  /b/{bucket}/folders/{folder}:
    delete:
      description: Permanently deletes a folder. Only applicable to buckets with hierarchical namespace enabled.
      operationId: storage.folders.delete
      parameters:
        - description: Name of the bucket in which the folder resides.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Name of a folder.
          in: path
          name: folder
          required: true
          schema:
            type: string
        - description: If set, only deletes the folder if its metageneration matches this value.
          in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - description: If set, only deletes the folder if its metageneration does not match this value.
          in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - folders
    get:
      description: Returns metadata for the specified folder. Only applicable to buckets with hierarchical namespace enabled.
      operationId: storage.folders.get
      parameters:
        - description: Name of the bucket in which the folder resides.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Name of a folder.
          in: path
          name: folder
          required: true
          schema:
            type: string
        - description: Makes the return of the folder metadata conditional on whether the folder's current metageneration matches the given value.
          in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - description: Makes the return of the folder metadata conditional on whether the folder's current metageneration does not match the given value.
          in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Folder"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - folders
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
  /b/{bucket}/folders/{sourceFolder}/renameTo/folders/{destinationFolder}:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Renames a source folder to a destination folder. Only applicable to buckets with hierarchical namespace enabled.
      operationId: storage.folders.rename
      parameters:
        - description: Name of the bucket in which the folders are in.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Name of the source folder.
          in: path
          name: sourceFolder
          required: true
          schema:
            type: string
        - description: Name of the destination folder.
          in: path
          name: destinationFolder
          required: true
          schema:
            type: string
        - description: Makes the operation conditional on whether the source object's current metageneration matches the given value.
          in: query
          name: ifSourceMetagenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the source object's current metageneration does not match the given value.
          in: query
          name: ifSourceMetagenerationNotMatch
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - folders
  /b/{bucket}/iam:
    get:
      description: Returns an IAM policy for the specified bucket.
      operationId: storage.buckets.getIamPolicy
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The IAM policy format version to be returned. If the optionsRequestedPolicyVersion is for an older version that doesn't support part of the requested IAM policy, the request fails.
          in: query
          name: optionsRequestedPolicyVersion
          schema:
            minimum: 1
            type: integer
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - buckets
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    put:
      description: Updates an IAM policy for the specified bucket.
      operationId: storage.buckets.setIamPolicy
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Policy"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - buckets
  /b/{bucket}/iam/testPermissions:
    get:
      description: Tests a set of permissions on the given bucket to see which, if any, are held by the caller.
      operationId: storage.buckets.testIamPermissions
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Permissions to test.
          explode: true
          in: query
          name: permissions
          required: true
          schema:
            items:
              type: string
            type: array
          style: form
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - buckets
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
  /b/{bucket}/lockRetentionPolicy:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Locks retention policy on a bucket.
      operationId: storage.buckets.lockRetentionPolicy
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Makes the operation conditional on whether bucket's current metageneration matches the given value.
          in: query
          name: ifMetagenerationMatch
          required: true
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bucket"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - buckets
  /b/{bucket}/managedFolders:
    get:
      description: Lists managed folders in the given bucket.
      operationId: storage.managedFolders.list
      parameters:
        - description: Name of the bucket containing the managed folder.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Maximum number of items to return in a single page of responses.
          in: query
          name: pageSize
          schema:
            minimum: 0
            type: integer
        - description: A previously-returned page token representing part of the larger set of results to view.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The managed folder name/path prefix to filter the output list of results.
          in: query
          name: prefix
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManagedFolders"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - managedFolders
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a new managed folder.
      operationId: storage.managedFolders.insert
      parameters:
        - description: Name of the bucket containing the managed folder.
          in: path
          name: bucket
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ManagedFolder"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManagedFolder"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - managedFolders
  /b/{bucket}/managedFolders/{managedFolder}:
    delete:
      description: Permanently deletes a managed folder.
      operationId: storage.managedFolders.delete
      parameters:
        - description: Name of the bucket containing the managed folder.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The managed folder name/path.
          in: path
          name: managedFolder
          required: true
          schema:
            type: string
        - description: If set, only deletes the managed folder if its metageneration matches this value.
          in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - description: If set, only deletes the managed folder if its metageneration does not match this value.
          in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - managedFolders
    get:
      description: Returns metadata of the specified managed folder.
      operationId: storage.managedFolders.get
      parameters:
        - description: Name of the bucket containing the managed folder.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The managed folder name/path.
          in: path
          name: managedFolder
          required: true
          schema:
            type: string
        - description: Makes the return of the managed folder metadata conditional on whether the managed folder's current metageneration matches the given value.
          in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - description: Makes the return of the managed folder metadata conditional on whether the managed folder's current metageneration does not match the given value.
          in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManagedFolder"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - managedFolders
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
  /b/{bucket}/managedFolders/{managedFolder}/iam:
    get:
      description: Returns an IAM policy for the specified managed folder.
      operationId: storage.managedFolders.getIamPolicy
      parameters:
        - description: Name of the bucket containing the managed folder.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The managed folder name/path.
          in: path
          name: managedFolder
          required: true
          schema:
            type: string
        - description: The IAM policy format version to be returned. If the optionsRequestedPolicyVersion is for an older version that doesn't support part of the requested IAM policy, the request fails.
          in: query
          name: optionsRequestedPolicyVersion
          schema:
            minimum: 1
            type: integer
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - managedFolders
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    put:
      description: Updates an IAM policy for the specified managed folder.
      operationId: storage.managedFolders.setIamPolicy
      parameters:
        - description: Name of the bucket containing the managed folder.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The managed folder name/path.
          in: path
          name: managedFolder
          required: true
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Policy"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - managedFolders
  /b/{bucket}/managedFolders/{managedFolder}/iam/testPermissions:
    get:
      description: Tests a set of permissions on the given managed folder to see which, if any, are held by the caller.
      operationId: storage.managedFolders.testIamPermissions
      parameters:
        - description: Name of the bucket containing the managed folder.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The managed folder name/path.
          in: path
          name: managedFolder
          required: true
          schema:
            type: string
        - description: Permissions to test.
          explode: true
          in: query
          name: permissions
          required: true
          schema:
            items:
              type: string
            type: array
          style: form
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - managedFolders
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
  /b/{bucket}/notificationConfigs:
    get:
      description: Retrieves a list of notification subscriptions for a given bucket.
      operationId: storage.notifications.list
      parameters:
        - description: Name of a Google Cloud Storage bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notifications"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - notifications
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a notification subscription for a given bucket.
      operationId: storage.notifications.insert
      parameters:
        - description: The parent bucket of the notification.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notification"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - notifications
  /b/{bucket}/notificationConfigs/{notification}:
    delete:
      description: Permanently deletes a notification subscription.
      operationId: storage.notifications.delete
      parameters:
        - description: The parent bucket of the notification.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: ID of the notification to delete.
          in: path
          name: notification
          required: true
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - notifications
    get:
      description: View a notification configuration.
      operationId: storage.notifications.get
      parameters:
        - description: The parent bucket of the notification.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Notification ID
          in: path
          name: notification
          required: true
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - notifications
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
  /b/{bucket}/o:
    get:
      description: Retrieves a list of objects matching the criteria.
      operationId: storage.objects.list
      parameters:
        - description: Name of the bucket in which to look for objects.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
          in: query
          name: delimiter
          schema:
            type: string
        - description: Filter results to objects whose names are lexicographically before endOffset. If startOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
          in: query
          name: endOffset
          schema:
            type: string
        - description: Only applicable if delimiter is set to '/'. If true, will also include folders and managed folders (besides objects) in the returned prefixes.
          in: query
          name: includeFoldersAsPrefixes
          schema:
            type: boolean
        - description: If true, objects that end in exactly one instance of delimiter will have their metadata included in items in addition to prefixes.
          in: query
          name: includeTrailingDelimiter
          schema:
            type: boolean
        - description: Filter results to objects and prefixes that match this glob pattern.
          in: query
          name: matchGlob
          schema:
            type: string
        - description: Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller.
          in: query
          name: maxResults
          schema:
            minimum: 0
            type: integer
        - description: A previously-returned page token representing part of the larger set of results to view.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Filter results to objects whose names begin with this prefix.
          in: query
          name: prefix
          schema:
            type: string
        - description: Set of properties to return. Defaults to noAcl.
          in: query
          name: projection
          schema:
            enum:
              - full
              - noAcl
            type: string
        - description: If true, only soft-deleted object versions will be listed. The default is false. For more information, see Soft Delete.
          in: query
          name: softDeleted
          schema:
            type: boolean
        - description: Filter results to objects whose names are lexicographically equal to or after startOffset. If endOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
          in: query
          name: startOffset
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
        - description: If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning.
          in: query
          name: versions
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Objects"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - objects
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Stores a new object and metadata.
      operationId: storage.objects.insert
      parameters:
        - description: Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: If set, sets the contentEncoding property of the final object to this value. Setting this parameter is equivalent to setting the contentEncoding metadata property. This can be useful when uploading an object with uploadType=media to indicate the encoding of the content being uploaded.
          in: query
          name: contentEncoding
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
          in: query
          name: ifGenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
          in: query
          name: ifGenerationNotMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current metageneration matches the given value.
          in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current metageneration does not match the given value.
          in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - description: Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
          in: query
          name: kmsKeyName
          schema:
            type: string
        - description: Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
          in: query
          name: name
          schema:
            type: string
        - description: Apply a predefined set of access controls to this object.
          in: query
          name: predefinedAcl
          schema:
            enum:
              - authenticatedRead
              - bucketOwnerFullControl
              - bucketOwnerRead
              - private
              - projectPrivate
              - publicRead
            type: string
        - description: Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
          in: query
          name: projection
          schema:
            enum:
              - full
              - noAcl
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - objects
  /b/{bucket}/o/bulkRestore:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Initiates a long-running bulk restore operation on the specified bucket.
      operationId: storage.objects.bulkRestore
      parameters:
        - description: Name of the bucket in which the object resides.
          in: path
          name: bucket
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkRestoreObjectsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - objects
  /b/{bucket}/o/watch:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Watch for changes on all objects in a bucket.
      operationId: storage.objects.watchAll
      parameters:
        - description: Name of the bucket in which to look for objects.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
          in: query
          name: delimiter
          schema:
            type: string
        - description: Filter results to objects whose names are lexicographically before endOffset. If startOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
          in: query
          name: endOffset
          schema:
            type: string
        - description: If true, objects that end in exactly one instance of delimiter will have their metadata included in items in addition to prefixes.
          in: query
          name: includeTrailingDelimiter
          schema:
            type: boolean
        - description: Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller.
          in: query
          name: maxResults
          schema:
            minimum: 0
            type: integer
        - description: A previously-returned page token representing part of the larger set of results to view.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Filter results to objects whose names begin with this prefix.
          in: query
          name: prefix
          schema:
            type: string
        - description: Set of properties to return. Defaults to noAcl.
          in: query
          name: projection
          schema:
            enum:
              - full
              - noAcl
            type: string
        - description: Filter results to objects whose names are lexicographically equal to or after startOffset. If endOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
          in: query
          name: startOffset
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
        - description: If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning.
          in: query
          name: versions
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Channel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channel"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - objects
  /b/{bucket}/o/{object}:
    delete:
      description: Deletes an object and its metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.
      operationId: storage.objects.delete
      parameters:
        - description: Name of the bucket in which the object resides.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default).
          in: query
          name: generation
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
          in: query
          name: ifGenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
          in: query
          name: ifGenerationNotMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current metageneration matches the given value.
          in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current metageneration does not match the given value.
          in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - objects
    get:
      description: Retrieves an object or its metadata.
      operationId: storage.objects.get
      parameters:
        - description: Name of the bucket in which the object resides.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: If present, selects a specific revision of this object (as opposed to the latest version, the default).
          in: query
          name: generation
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
          in: query
          name: ifGenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
          in: query
          name: ifGenerationNotMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current metageneration matches the given value.
          in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current metageneration does not match the given value.
          in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - description: Set of properties to return. Defaults to noAcl.
          in: query
          name: projection
          schema:
            enum:
              - full
              - noAcl
            type: string
        - description: If true, only soft-deleted object versions will be listed. The default is false. For more information, see Soft Delete.
          in: query
          name: softDeleted
          schema:
            type: boolean
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - objects
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Patches an object's metadata.
      operationId: storage.objects.patch
      parameters:
        - description: Name of the bucket in which the object resides.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: If present, selects a specific revision of this object (as opposed to the latest version, the default).
          in: query
          name: generation
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
          in: query
          name: ifGenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
          in: query
          name: ifGenerationNotMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current metageneration matches the given value.
          in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current metageneration does not match the given value.
          in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - description: Must be true to remove the retention configuration, reduce its unlocked retention period, or change its mode from unlocked to locked.
          in: query
          name: overrideUnlockedRetention
          schema:
            type: boolean
        - description: Apply a predefined set of access controls to this object.
          in: query
          name: predefinedAcl
          schema:
            enum:
              - authenticatedRead
              - bucketOwnerFullControl
              - bucketOwnerRead
              - private
              - projectPrivate
              - publicRead
            type: string
        - description: Set of properties to return. Defaults to full.
          in: query
          name: projection
          schema:
            enum:
              - full
              - noAcl
            type: string
        - description: The project to be billed for this request, for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - objects
    put:
      description: Updates an object's metadata.
      operationId: storage.objects.update
      parameters:
        - description: Name of the bucket in which the object resides.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: If present, selects a specific revision of this object (as opposed to the latest version, the default).
          in: query
          name: generation
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
          in: query
          name: ifGenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
          in: query
          name: ifGenerationNotMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current metageneration matches the given value.
          in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current metageneration does not match the given value.
          in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - description: Must be true to remove the retention configuration, reduce its unlocked retention period, or change its mode from unlocked to locked.
          in: query
          name: overrideUnlockedRetention
          schema:
            type: boolean
        - description: Apply a predefined set of access controls to this object.
          in: query
          name: predefinedAcl
          schema:
            enum:
              - authenticatedRead
              - bucketOwnerFullControl
              - bucketOwnerRead
              - private
              - projectPrivate
              - publicRead
            type: string
        - description: Set of properties to return. Defaults to full.
          in: query
          name: projection
          schema:
            enum:
              - full
              - noAcl
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - objects
  /b/{bucket}/o/{object}/acl:
    get:
      description: Retrieves ACL entries on the specified object.
      operationId: storage.objectAccessControls.list
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: If present, selects a specific revision of this object (as opposed to the latest version, the default).
          in: query
          name: generation
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectAccessControls"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - objectAccessControls
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a new ACL entry on the specified object.
      operationId: storage.objectAccessControls.insert
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: If present, selects a specific revision of this object (as opposed to the latest version, the default).
          in: query
          name: generation
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ObjectAccessControl"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectAccessControl"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - objectAccessControls
  /b/{bucket}/o/{object}/acl/{entity}:
    delete:
      description: Permanently deletes the ACL entry for the specified entity on the specified object.
      operationId: storage.objectAccessControls.delete
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
          in: path
          name: entity
          required: true
          schema:
            type: string
        - description: If present, selects a specific revision of this object (as opposed to the latest version, the default).
          in: query
          name: generation
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - objectAccessControls
    get:
      description: Returns the ACL entry for the specified entity on the specified object.
      operationId: storage.objectAccessControls.get
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
          in: path
          name: entity
          required: true
          schema:
            type: string
        - description: If present, selects a specific revision of this object (as opposed to the latest version, the default).
          in: query
          name: generation
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectAccessControl"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - objectAccessControls
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Patches an ACL entry on the specified object.
      operationId: storage.objectAccessControls.patch
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
          in: path
          name: entity
          required: true
          schema:
            type: string
        - description: If present, selects a specific revision of this object (as opposed to the latest version, the default).
          in: query
          name: generation
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ObjectAccessControl"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectAccessControl"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - objectAccessControls
    put:
      description: Updates an ACL entry on the specified object.
      operationId: storage.objectAccessControls.update
      parameters:
        - description: Name of a bucket.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
          in: path
          name: entity
          required: true
          schema:
            type: string
        - description: If present, selects a specific revision of this object (as opposed to the latest version, the default).
          in: query
          name: generation
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ObjectAccessControl"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectAccessControl"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - objectAccessControls
  /b/{bucket}/o/{object}/iam:
    get:
      description: Returns an IAM policy for the specified object.
      operationId: storage.objects.getIamPolicy
      parameters:
        - description: Name of the bucket in which the object resides.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: If present, selects a specific revision of this object (as opposed to the latest version, the default).
          in: query
          name: generation
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - objects
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    put:
      description: Updates an IAM policy for the specified object.
      operationId: storage.objects.setIamPolicy
      parameters:
        - description: Name of the bucket in which the object resides.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: If present, selects a specific revision of this object (as opposed to the latest version, the default).
          in: query
          name: generation
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Policy"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - objects
  /b/{bucket}/o/{object}/iam/testPermissions:
    get:
      description: Tests a set of permissions on the given object to see which, if any, are held by the caller.
      operationId: storage.objects.testIamPermissions
      parameters:
        - description: Name of the bucket in which the object resides.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Name of the object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: Permissions to test.
          explode: true
          in: query
          name: permissions
          required: true
          schema:
            items:
              type: string
            type: array
          style: form
        - description: If present, selects a specific revision of this object (as opposed to the latest version, the default).
          in: query
          name: generation
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - objects
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
  /b/{bucket}/o/{object}/restore:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Restores a soft-deleted object.
      operationId: storage.objects.restore
      parameters:
        - description: Name of the bucket in which the object resides.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
          in: path
          name: object
          required: true
          schema:
            type: string
        - description: If true, copies the source object's ACL; otherwise, uses the bucket's default object ACL. The default is false.
          in: query
          name: copySourceAcl
          schema:
            type: boolean
        - description: Selects a specific revision of this object.
          in: query
          name: generation
          required: true
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's one live generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
          in: query
          name: ifGenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether none of the object's live generations match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
          in: query
          name: ifGenerationNotMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's one live metageneration matches the given value.
          in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether none of the object's live metagenerations match the given value.
          in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - description: Set of properties to return. Defaults to full.
          in: query
          name: projection
          schema:
            enum:
              - full
              - noAcl
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - objects
  /b/{bucket}/operations:
    get:
      description: Lists operations that match the specified filter in the request.
      operationId: storage.buckets.operations.list
      parameters:
        - description: Name of the bucket in which to look for operations.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: A filter to narrow down results to a preferred subset. The filtering language is documented in more detail in [AIP-160](https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: Maximum number of items to return in a single page of responses. Fewer total results may be returned than requested. The service uses this parameter or 100 items, whichever is smaller.
          in: query
          name: pageSize
          schema:
            minimum: 0
            type: integer
        - description: A previously-returned page token representing part of the larger set of results to view.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - operations
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
  /b/{bucket}/operations/{operationId}:
    get:
      description: Gets the latest state of a long-running operation.
      operationId: storage.buckets.operations.get
      parameters:
        - description: The parent bucket of the operation resource.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The ID of the operation resource.
          in: path
          name: operationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - operations
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
  /b/{bucket}/operations/{operationId}/cancel:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed.
      operationId: storage.buckets.operations.cancel
      parameters:
        - description: The parent bucket of the operation resource.
          in: path
          name: bucket
          required: true
          schema:
            type: string
        - description: The ID of the operation resource.
          in: path
          name: operationId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - operations
  /b/{destinationBucket}/o/{destinationObject}/compose:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Concatenates a list of existing objects into a new object in the same bucket.
      operationId: storage.objects.compose
      parameters:
        - description: Name of the bucket containing the source objects. The destination object is stored in this bucket.
          in: path
          name: destinationBucket
          required: true
          schema:
            type: string
        - description: Name of the new object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
          in: path
          name: destinationObject
          required: true
          schema:
            type: string
        - description: Apply a predefined set of access controls to the destination object.
          in: query
          name: destinationPredefinedAcl
          schema:
            enum:
              - authenticatedRead
              - bucketOwnerFullControl
              - bucketOwnerRead
              - private
              - projectPrivate
              - publicRead
            type: string
        - description: Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
          in: query
          name: ifGenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current metageneration matches the given value.
          in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - description: Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
          in: query
          name: kmsKeyName
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ComposeRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - objects
  /b/{sourceBucket}/o/{sourceObject}/copyTo/b/{destinationBucket}/o/{destinationObject}:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Copies a source object to a destination object. Optionally overrides metadata.
      operationId: storage.objects.copy
      parameters:
        - description: Name of the bucket in which to find the source object.
          in: path
          name: sourceBucket
          required: true
          schema:
            type: string
        - description: Name of the source object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
          in: path
          name: sourceObject
          required: true
          schema:
            type: string
        - description: Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
          in: path
          name: destinationBucket
          required: true
          schema:
            type: string
        - description: Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.
          in: path
          name: destinationObject
          required: true
          schema:
            type: string
        - description: Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
          in: query
          name: destinationKmsKeyName
          schema:
            type: string
        - description: Apply a predefined set of access controls to the destination object.
          in: query
          name: destinationPredefinedAcl
          schema:
            enum:
              - authenticatedRead
              - bucketOwnerFullControl
              - bucketOwnerRead
              - private
              - projectPrivate
              - publicRead
            type: string
        - description: Makes the operation conditional on whether the destination object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
          in: query
          name: ifGenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the destination object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
          in: query
          name: ifGenerationNotMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the destination object's current metageneration matches the given value.
          in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the destination object's current metageneration does not match the given value.
          in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the source object's current generation matches the given value.
          in: query
          name: ifSourceGenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the source object's current generation does not match the given value.
          in: query
          name: ifSourceGenerationNotMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the source object's current metageneration matches the given value.
          in: query
          name: ifSourceMetagenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the source object's current metageneration does not match the given value.
          in: query
          name: ifSourceMetagenerationNotMatch
          schema:
            type: string
        - description: Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
          in: query
          name: projection
          schema:
            enum:
              - full
              - noAcl
            type: string
        - description: If present, selects a specific revision of the source object (as opposed to the latest version, the default).
          in: query
          name: sourceGeneration
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - objects
  /b/{sourceBucket}/o/{sourceObject}/rewriteTo/b/{destinationBucket}/o/{destinationObject}:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Rewrites a source object to a destination object. Optionally overrides metadata.
      operationId: storage.objects.rewrite
      parameters:
        - description: Name of the bucket in which to find the source object.
          in: path
          name: sourceBucket
          required: true
          schema:
            type: string
        - description: Name of the source object. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
          in: path
          name: sourceObject
          required: true
          schema:
            type: string
        - description: Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.
          in: path
          name: destinationBucket
          required: true
          schema:
            type: string
        - description: Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any. For information about how to URL encode object names to be path safe, see [Encoding URI Path Parts](https://cloud.google.com/storage/docs/request-endpoints#encoding).
          in: path
          name: destinationObject
          required: true
          schema:
            type: string
        - description: Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
          in: query
          name: destinationKmsKeyName
          schema:
            type: string
        - description: Apply a predefined set of access controls to the destination object.
          in: query
          name: destinationPredefinedAcl
          schema:
            enum:
              - authenticatedRead
              - bucketOwnerFullControl
              - bucketOwnerRead
              - private
              - projectPrivate
              - publicRead
            type: string
        - description: Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
          in: query
          name: ifGenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
          in: query
          name: ifGenerationNotMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the destination object's current metageneration matches the given value.
          in: query
          name: ifMetagenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the destination object's current metageneration does not match the given value.
          in: query
          name: ifMetagenerationNotMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the source object's current generation matches the given value.
          in: query
          name: ifSourceGenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the source object's current generation does not match the given value.
          in: query
          name: ifSourceGenerationNotMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the source object's current metageneration matches the given value.
          in: query
          name: ifSourceMetagenerationMatch
          schema:
            type: string
        - description: Makes the operation conditional on whether the source object's current metageneration does not match the given value.
          in: query
          name: ifSourceMetagenerationNotMatch
          schema:
            type: string
        - description: The maximum number of bytes that will be rewritten per rewrite request. Most callers shouldn't need to specify this parameter - it is primarily in place to support testing. If specified the value must be an integral multiple of 1 MiB (1048576). Also, this only applies to requests where the source and destination span locations and/or storage classes. Finally, this value must not change across rewrite calls else you'll get an error that the rewriteToken is invalid.
          in: query
          name: maxBytesRewrittenPerCall
          schema:
            type: string
        - description: Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
          in: query
          name: projection
          schema:
            enum:
              - full
              - noAcl
            type: string
        - description: Include this field (from the previous rewrite response) on each rewrite request after the first one, until the rewrite response 'done' flag is true. Calls that provide a rewriteToken can omit all other request fields, but if included those fields must match the values provided in the first rewrite request.
          in: query
          name: rewriteToken
          schema:
            type: string
        - description: If present, selects a specific revision of the source object (as opposed to the latest version, the default).
          in: query
          name: sourceGeneration
          schema:
            type: string
        - description: The project to be billed for this request. Required for Requester Pays buckets.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RewriteResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - objects
  /channels/stop:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Stop watching resources through this channel
      operationId: storage.channels.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Channel"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - channels
  /projects/{projectId}/hmacKeys:
    get:
      description: Retrieves a list of HMAC keys matching the criteria.
      operationId: storage.projects.hmacKeys.list
      parameters:
        - description: Name of the project in which to look for HMAC keys.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Maximum number of items to return in a single page of responses. The service uses this parameter or 250 items, whichever is smaller. The max number of items per page will also be limited by the number of distinct service accounts in the response. If the number of service accounts in a single response is too high, the page will truncated and a next page token will be returned.
          in: query
          name: maxResults
          schema:
            minimum: 0
            type: integer
        - description: A previously-returned page token representing part of the larger set of results to view.
          in: query
          name: pageToken
          schema:
            type: string
        - description: If present, only keys for the given service account are returned.
          in: query
          name: serviceAccountEmail
          schema:
            type: string
        - description: Whether or not to show keys in the DELETED state.
          in: query
          name: showDeletedKeys
          schema:
            type: boolean
        - description: The project to be billed for this request.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HmacKeysMetadata"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a new HMAC key for the specified service account.
      operationId: storage.projects.hmacKeys.create
      parameters:
        - description: Project ID owning the service account.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Email address of the service account.
          in: query
          name: serviceAccountEmail
          required: true
          schema:
            type: string
        - description: The project to be billed for this request.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HmacKey"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - projects
  /projects/{projectId}/hmacKeys/{accessId}:
    delete:
      description: Deletes an HMAC key.
      operationId: storage.projects.hmacKeys.delete
      parameters:
        - description: Project ID owning the requested key
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Name of the HMAC key to be deleted.
          in: path
          name: accessId
          required: true
          schema:
            type: string
        - description: The project to be billed for this request.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - projects
    get:
      description: Retrieves an HMAC key's metadata
      operationId: storage.projects.hmacKeys.get
      parameters:
        - description: Project ID owning the service account of the requested key.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Name of the HMAC key.
          in: path
          name: accessId
          required: true
          schema:
            type: string
        - description: The project to be billed for this request.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HmacKeyMetadata"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
    put:
      description: Updates the state of an HMAC key. See the HMAC Key resource descriptor for valid states.
      operationId: storage.projects.hmacKeys.update
      parameters:
        - description: Project ID owning the service account of the updated key.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Name of the HMAC key being updated.
          in: path
          name: accessId
          required: true
          schema:
            type: string
        - description: The project to be billed for this request.
          in: query
          name: userProject
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HmacKeyMetadata"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HmacKeyMetadata"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
      tags:
        - projects
  /projects/{projectId}/serviceAccount:
    get:
      description: Get the email address of this project's Google Cloud Storage service account.
      operationId: storage.projects.serviceAccount.get
      parameters:
        - description: Project ID
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: The project to be billed for this request.
          in: query
          name: userProject
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceAccount"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/userIp"
components:
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        enum:
          - json
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Upload protocol for media (e.g. "media", "multipart", "resumable").
      in: query
      name: uploadType
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
  schemas:
    AnywhereCache:
      description: An Anywhere Cache instance.
      properties:
        admissionPolicy:
          description: The cache-level entry admission policy.
          type: string
        anywhereCacheId:
          description: The ID of the Anywhere cache instance.
          type: string
        bucket:
          description: The name of the bucket containing this cache instance.
          type: string
        createTime:
          description: The creation time of the cache instance in RFC 3339 format.
          format: date-time
          type: string
        id:
          description: The ID of the resource, including the project number, bucket name and anywhere cache ID.
          type: string
        kind:
          default: storage#anywhereCache
          description: The kind of item this is. For Anywhere Cache, this is always storage#anywhereCache.
          type: string
        pendingUpdate:
          description: True if the cache instance has an active Update long-running operation.
          type: boolean
        selfLink:
          description: The link to this cache instance.
          type: string
        state:
          description: The current state of the cache instance.
          type: string
        ttl:
          description: 'The TTL of all cache entries in whole seconds. e.g., "7200s". '
          format: google-duration
          type: string
        updateTime:
          description: The modification time of the cache instance metadata in RFC 3339 format.
          format: date-time
          type: string
        zone:
          description: The zone in which the cache instance is running. For example, us-central1-a.
          type: string
      type: object
    AnywhereCaches:
      description: A list of Anywhere Caches.
      properties:
        items:
          description: The list of items.
          items:
            $ref: "#/components/schemas/AnywhereCache"
          type: array
        kind:
          default: storage#anywhereCaches
          description: The kind of item this is. For lists of Anywhere Caches, this is always storage#anywhereCaches.
          type: string
        nextPageToken:
          description: The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
          type: string
      type: object
    Bucket:
      description: A bucket.
      properties:
        acl:
          description: Access controls on the bucket.
          items:
            $ref: "#/components/schemas/BucketAccessControl"
          type: array
        autoclass:
          description: The bucket's Autoclass configuration.
          properties:
            enabled:
              description: Whether or not Autoclass is enabled on this bucket
              type: boolean
            terminalStorageClass:
              description: The storage class that objects in the bucket eventually transition to if they are not read for a certain length of time. Valid values are NEARLINE and ARCHIVE.
              type: string
            terminalStorageClassUpdateTime:
              description: A date and time in RFC 3339 format representing the time of the most recent update to "terminalStorageClass".
              format: date-time
              type: string
            toggleTime:
              description: A date and time in RFC 3339 format representing the instant at which "enabled" was last toggled.
              format: date-time
              type: string
          type: object
        billing:
          description: The bucket's billing configuration.
          properties:
            requesterPays:
              description: When set to true, Requester Pays is enabled for this bucket.
              type: boolean
          type: object
        cors:
          description: The bucket's Cross-Origin Resource Sharing (CORS) configuration.
          items:
            properties:
              maxAgeSeconds:
                description: The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.
                format: int32
                type: integer
              method:
                description: 'The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".'
                items:
                  type: string
                type: array
              origin:
                description: 'The list of Origins eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".'
                items:
                  type: string
                type: array
              responseHeader:
                description: The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
                items:
                  type: string
                type: array
            type: object
          type: array
        customPlacementConfig:
          description: The bucket's custom placement configuration for Custom Dual Regions.
          properties:
            dataLocations:
              description: The list of regional locations in which data is placed.
              items:
                type: string
              type: array
          type: object
        defaultEventBasedHold:
          description: The default value for event-based hold on newly created objects in this bucket. Event-based hold is a way to retain objects indefinitely until an event occurs, signified by the hold's release. After being released, such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false. Objects under event-based hold cannot be deleted, overwritten or archived until the hold is removed.
          type: boolean
        defaultObjectAcl:
          description: Default access controls to apply to new objects when no ACL is provided.
          items:
            $ref: "#/components/schemas/ObjectAccessControl"
          type: array
        encryption:
          description: Encryption configuration for a bucket.
          properties:
            defaultKmsKeyName:
              description: A Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.
              type: string
          type: object
        etag:
          description: HTTP 1.1 Entity tag for the bucket.
          type: string
        hierarchicalNamespace:
          description: The bucket's hierarchical namespace configuration.
          properties:
            enabled:
              description: When set to true, hierarchical namespace is enabled for this bucket.
              type: boolean
          type: object
        iamConfiguration:
          description: The bucket's IAM configuration.
          properties:
            bucketPolicyOnly:
              description: The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
              properties:
                enabled:
                  description: If set, access is controlled only by bucket-level or above IAM policies.
                  type: boolean
                lockedTime:
                  description: The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until the locked time, after which the field is immutable.
                  format: date-time
                  type: string
              type: object
            publicAccessPrevention:
              description: The bucket's Public Access Prevention configuration. Currently, 'inherited' and 'enforced' are supported.
              type: string
            uniformBucketLevelAccess:
              description: The bucket's uniform bucket-level access configuration.
              properties:
                enabled:
                  description: If set, access is controlled only by bucket-level or above IAM policies.
                  type: boolean
                lockedTime:
                  description: The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable.
                  format: date-time
                  type: string
              type: object
          type: object
        id:
          description: The ID of the bucket. For buckets, the id and name properties are the same.
          type: string
        kind:
          default: storage#bucket
          description: The kind of item this is. For buckets, this is always storage#bucket.
          type: string
        labels:
          additionalProperties:
            description: An individual label entry.
            type: string
          description: User-provided labels, in key/value pairs.
          type: object
        lifecycle:
          description: The bucket's lifecycle configuration. See lifecycle management for more information.
          properties:
            rule:
              description: A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.
              items:
                properties:
                  action:
                    description: The action to take.
                    properties:
                      storageClass:
                        description: Target storage class. Required iff the type of the action is SetStorageClass.
                        type: string
                      type:
                        description: Type of the action. Currently, only Delete, SetStorageClass, and AbortIncompleteMultipartUpload are supported.
                        type: string
                    type: object
                  condition:
                    description: The condition(s) under which the action will be taken.
                    properties:
                      age:
                        description: Age of an object (in days). This condition is satisfied when an object reaches the specified age.
                        format: int32
                        type: integer
                      createdBefore:
                        description: A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when an object is created before midnight of the specified date in UTC.
                        format: date
                        type: string
                      customTimeBefore:
                        description: A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when the custom time on an object is before this date in UTC.
                        format: date
                        type: string
                      daysSinceCustomTime:
                        description: Number of days elapsed since the user-specified timestamp set on an object. The condition is satisfied if the days elapsed is at least this number. If no custom timestamp is specified on an object, the condition does not apply.
                        format: int32
                        type: integer
                      daysSinceNoncurrentTime:
                        description: Number of days elapsed since the noncurrent timestamp of an object. The condition is satisfied if the days elapsed is at least this number. This condition is relevant only for versioned objects. The value of the field must be a nonnegative integer. If it's zero, the object version will become eligible for Lifecycle action as soon as it becomes noncurrent.
                        format: int32
                        type: integer
                      isLive:
                        description: Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects.
                        type: boolean
                      matchesPattern:
                        description: 'A regular expression that satisfies the RE2 syntax. This condition is satisfied when the name of the object matches the RE2 pattern. Note: This feature is currently in the "Early Access" launch stage and is only available to a whitelisted set of users; that means that this feature may be changed in backward-incompatible ways and that it is not guaranteed to be released.'
                        type: string
                      matchesPrefix:
                        description: List of object name prefixes. This condition will be satisfied when at least one of the prefixes exactly matches the beginning of the object name.
                        items:
                          type: string
                        type: array
                      matchesStorageClass:
                        description: Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, and DURABLE_REDUCED_AVAILABILITY.
                        items:
                          type: string
                        type: array
                      matchesSuffix:
                        description: List of object name suffixes. This condition will be satisfied when at least one of the suffixes exactly matches the end of the object name.
                        items:
                          type: string
                        type: array
                      noncurrentTimeBefore:
                        description: A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when the noncurrent time on an object is before this date in UTC. This condition is relevant only for versioned objects.
                        format: date
                        type: string
                      numNewerVersions:
                        description: Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object.
                        format: int32
                        type: integer
                    type: object
                type: object
              type: array
          type: object
        location:
          description: The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Defaults to US. See the developer's guide for the authoritative list.
          type: string
        locationType:
          description: The type of the bucket location.
          type: string
        logging:
          description: The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.
          properties:
            logBucket:
              description: The destination bucket where the current bucket's logs should be placed.
              type: string
            logObjectPrefix:
              description: A prefix for log object names.
              type: string
          type: object
        metageneration:
          description: The metadata generation of this bucket.
          format: int64
          type: string
        name:
          description: The name of the bucket.
          type: string
        objectRetention:
          description: The bucket's object retention config.
          properties:
            mode:
              description: The bucket's object retention mode. Can be Enabled.
              type: string
          type: object
        owner:
          description: The owner of the bucket. This is always the project team's owner group.
          properties:
            entity:
              description: The entity, in the form project-owner-projectId.
              type: string
            entityId:
              description: The ID for the entity.
              type: string
          type: object
        projectNumber:
          description: The project number of the project the bucket belongs to.
          format: uint64
          type: string
        retentionPolicy:
          description: The bucket's retention policy. The retention policy enforces a minimum retention time for all objects contained in the bucket, based on their creation time. Any attempt to overwrite or delete objects younger than the retention period will result in a PERMISSION_DENIED error. An unlocked retention policy can be modified or removed from the bucket via a storage.buckets.update operation. A locked retention policy cannot be removed or shortened in duration for the lifetime of the bucket. Attempting to remove or decrease period of a locked retention policy will result in a PERMISSION_DENIED error.
          properties:
            effectiveTime:
              description: Server-determined value that indicates the time from which policy was enforced and effective. This value is in RFC 3339 format.
              format: date-time
              type: string
            isLocked:
              description: Once locked, an object retention policy cannot be modified.
              type: boolean
            retentionPeriod:
              description: The duration in seconds that objects need to be retained. Retention duration must be greater than zero and less than 100 years. Note that enforcement of retention periods less than a day is not guaranteed. Such periods should only be used for testing purposes.
              format: int64
              type: string
          type: object
        rpo:
          description: The Recovery Point Objective (RPO) of this bucket. Set to ASYNC_TURBO to turn on Turbo Replication on a bucket.
          type: string
        satisfiesPZS:
          description: Reserved for future use.
          type: boolean
        selfLink:
          description: The URI of this bucket.
          type: string
        softDeletePolicy:
          description: The bucket's soft delete policy, which defines the period of time that soft-deleted objects will be retained, and cannot be permanently deleted.
          properties:
            effectiveTime:
              description: Server-determined value that indicates the time from which the policy, or one with a greater retention, was effective. This value is in RFC 3339 format.
              format: date-time
              type: string
            retentionDurationSeconds:
              description: The duration in seconds that soft-deleted objects in the bucket will be retained and cannot be permanently deleted.
              format: int64
              type: string
          type: object
        storageClass:
          description: The bucket's default storage class, used whenever no storageClass is specified for a newly-created object. This defines how objects in the bucket are stored and determines the SLA and the cost of storage. Values include MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE, COLDLINE, ARCHIVE, and DURABLE_REDUCED_AVAILABILITY. If this value is not specified when the bucket is created, it will default to STANDARD. For more information, see storage classes.
          type: string
        timeCreated:
          description: The creation time of the bucket in RFC 3339 format.
          format: date-time
          type: string
        updated:
          description: The modification time of the bucket in RFC 3339 format.
          format: date-time
          type: string
        versioning:
          description: The bucket's versioning configuration.
          properties:
            enabled:
              description: While set to true, versioning is fully enabled for this bucket.
              type: boolean
          type: object
        website:
          description: The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information.
          properties:
            mainPageSuffix:
              description: If the requested object path is missing, the service will ensure the path has a trailing '/', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages.
              type: string
            notFoundPage:
              description: If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result.
              type: string
          type: object
      type: object
    BucketAccessControl:
      description: An access-control entry.
      properties:
        bucket:
          description: The name of the bucket.
          type: string
        domain:
          description: The domain associated with the entity, if any.
          type: string
        email:
          description: The email address associated with the entity, if any.
          type: string
        entity:
          description: |-
            The entity holding the permission, in one of the following forms: 
            - user-userId 
            - user-email 
            - group-groupId 
            - group-email 
            - domain-domain 
            - project-team-projectId 
            - allUsers 
            - allAuthenticatedUsers Examples: 
            - The user liz@example.com would be user-liz@example.com. 
            - The group example@googlegroups.com would be group-example@googlegroups.com. 
            - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
          type: string
        entityId:
          description: The ID for the entity, if any.
          type: string
        etag:
          description: HTTP 1.1 Entity tag for the access-control entry.
          type: string
        id:
          description: The ID of the access-control entry.
          type: string
        kind:
          default: storage#bucketAccessControl
          description: The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.
          type: string
        projectTeam:
          description: The project team associated with the entity, if any.
          properties:
            projectNumber:
              description: The project number.
              type: string
            team:
              description: The team.
              type: string
          type: object
        role:
          description: The access permission for the entity.
          type: string
        selfLink:
          description: The link to this access-control entry.
          type: string
      type: object
    BucketAccessControls:
      description: An access-control list.
      properties:
        items:
          description: The list of items.
          items:
            $ref: "#/components/schemas/BucketAccessControl"
          type: array
        kind:
          default: storage#bucketAccessControls
          description: The kind of item this is. For lists of bucket access control entries, this is always storage#bucketAccessControls.
          type: string
      type: object
    Buckets:
      description: A list of buckets.
      properties:
        items:
          description: The list of items.
          items:
            $ref: "#/components/schemas/Bucket"
          type: array
        kind:
          default: storage#buckets
          description: The kind of item this is. For lists of buckets, this is always storage#buckets.
          type: string
        nextPageToken:
          description: The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
          type: string
      type: object
    BulkRestoreObjectsRequest:
      description: A bulk restore objects request.
      properties:
        allowOverwrite:
          description: If false (default), the restore will not overwrite live objects with the same name at the destination. This means some deleted objects may be skipped. If true, live objects will be overwritten resulting in a noncurrent object (if versioning is enabled). If versioning is not enabled, overwriting the object will result in a soft-deleted object. In either case, if a noncurrent object already exists with the same name, a live version can be written without issue.
          type: boolean
        copySourceAcl:
          description: If true, copies the source object's ACL; otherwise, uses the bucket's default object ACL. The default is false.
          type: boolean
        matchGlobs:
          description: Restores only the objects matching any of the specified glob(s). If this parameter is not specified, all objects will be restored within the specified time range.
          items:
            type: string
          type: array
        softDeletedAfterTime:
          description: Restores only the objects that were soft-deleted after this time.
          format: date-time
          type: string
        softDeletedBeforeTime:
          description: Restores only the objects that were soft-deleted before this time.
          format: date-time
          type: string
      type: object
    Channel:
      description: An notification channel used to watch for resource changes.
      properties:
        address:
          description: The address where notifications are delivered for this channel.
          type: string
        expiration:
          description: Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.
          format: int64
          type: string
        id:
          description: A UUID or similar unique string that identifies this channel.
          type: string
        kind:
          default: api#channel
          description: Identifies this as a notification channel used to watch for changes to a resource, which is "api#channel".
          type: string
        params:
          additionalProperties:
            description: Declares a new parameter by name.
            type: string
          description: Additional parameters controlling delivery channel behavior. Optional.
          type: object
        payload:
          description: A Boolean value to indicate whether payload is wanted. Optional.
          type: boolean
        resourceId:
          description: An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.
          type: string
        resourceUri:
          description: A version-specific identifier for the watched resource.
          type: string
        token:
          description: An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.
          type: string
        type:
          description: The type of delivery mechanism used for this channel.
          type: string
      type: object
    ComposeRequest:
      description: A Compose request.
      properties:
        destination:
          $ref: "#/components/schemas/Object"
          description: Properties of the resulting object.
        kind:
          default: storage#composeRequest
          description: The kind of item this is.
          type: string
        sourceObjects:
          description: The list of source objects that will be concatenated into a single object.
          items:
            properties:
              generation:
                description: The generation of this object to use as the source.
                format: int64
                type: string
              name:
                description: The source object's name. All source objects must reside in the same bucket.
                type: string
              objectPreconditions:
                description: Conditions that must be met for this operation to execute.
                properties:
                  ifGenerationMatch:
                    description: Only perform the composition if the generation of the source object that would be used matches this value. If this value and a generation are both specified, they must be the same value or the call will fail.
                    format: int64
                    type: string
                type: object
            type: object
          type: array
      type: object
    Expr:
      description: 'Represents an expression text. Example: title: "User account presence" description: "Determines whether the request has a user account" expression: "size(request.user) > 0"'
      properties:
        description:
          description: An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported.
          type: string
        location:
          description: An optional string indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: An optional title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
          type: string
      type: object
    Folder:
      description: A folder. Only available in buckets with hierarchical namespace enabled.
      properties:
        bucket:
          description: The name of the bucket containing this folder.
          type: string
        createTime:
          description: The creation time of the folder in RFC 3339 format.
          format: date-time
          type: string
        id:
          description: The ID of the folder, including the bucket name, folder name.
          type: string
        kind:
          default: storage#folder
          description: The kind of item this is. For folders, this is always storage#folder.
          type: string
        metageneration:
          description: The version of the metadata for this folder. Used for preconditions and for detecting changes in metadata.
          format: int64
          type: string
        name:
          description: The name of the folder. Required if not specified by URL parameter.
          type: string
        pendingRenameInfo:
          description: Only present if the folder is part of an ongoing rename folder operation. Contains information which can be used to query the operation status.
          properties:
            operationId:
              description: The ID of the rename folder operation.
              type: string
          type: object
        selfLink:
          description: The link to this folder.
          type: string
        updateTime:
          description: The modification time of the folder metadata in RFC 3339 format.
          format: date-time
          type: string
      type: object
    Folders:
      description: A list of folders.
      properties:
        items:
          description: The list of items.
          items:
            $ref: "#/components/schemas/Folder"
          type: array
        kind:
          default: storage#folders
          description: The kind of item this is. For lists of folders, this is always storage#folders.
          type: string
        nextPageToken:
          description: The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
          type: string
      type: object
    GoogleLongrunningListOperationsResponse:
      description: The response message for storage.buckets.operations.list.
      properties:
        nextPageToken:
          description: The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleLongrunningOperation"
          type: array
      type: object
    GoogleLongrunningOperation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is "false", it means the operation is still in progress. If "true", the operation is completed, and either "error" or "response" is available.
          type: boolean
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the "name" should be a resource name ending with "operations/{operationId}".
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as "Delete", the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type "XxxResponse", where "Xxx" is the original method name. For example, if the original method name is "TakeSnapshot()", the inferred response type is "TakeSnapshotResponse".
          type: object
      type: object
    GoogleRpcStatus:
      description: 'The "Status" type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each "Status" message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English.
          type: string
      type: object
    HmacKey:
      description: JSON template to produce a JSON-style HMAC Key resource for Create responses.
      properties:
        kind:
          default: storage#hmacKey
          description: The kind of item this is. For HMAC keys, this is always storage#hmacKey.
          type: string
        metadata:
          $ref: "#/components/schemas/HmacKeyMetadata"
          description: Key metadata.
        secret:
          description: HMAC secret key material.
          type: string
      type: object
    HmacKeyMetadata:
      description: JSON template to produce a JSON-style HMAC Key metadata resource.
      properties:
        accessId:
          description: The ID of the HMAC Key.
          type: string
        etag:
          description: HTTP 1.1 Entity tag for the HMAC key.
          type: string
        id:
          description: The ID of the HMAC key, including the Project ID and the Access ID.
          type: string
        kind:
          default: storage#hmacKeyMetadata
          description: The kind of item this is. For HMAC Key metadata, this is always storage#hmacKeyMetadata.
          type: string
        projectId:
          description: Project ID owning the service account to which the key authenticates.
          type: string
        selfLink:
          description: The link to this resource.
          type: string
        serviceAccountEmail:
          description: The email address of the key's associated service account.
          type: string
        state:
          description: The state of the key. Can be one of ACTIVE, INACTIVE, or DELETED.
          type: string
        timeCreated:
          description: The creation time of the HMAC key in RFC 3339 format.
          format: date-time
          type: string
        updated:
          description: The last modification time of the HMAC key metadata in RFC 3339 format.
          format: date-time
          type: string
      type: object
    HmacKeysMetadata:
      description: A list of hmacKeys.
      properties:
        items:
          description: The list of items.
          items:
            $ref: "#/components/schemas/HmacKeyMetadata"
          type: array
        kind:
          default: storage#hmacKeysMetadata
          description: The kind of item this is. For lists of hmacKeys, this is always storage#hmacKeysMetadata.
          type: string
        nextPageToken:
          description: The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
          type: string
      type: object
    ManagedFolder:
      description: A managed folder.
      properties:
        bucket:
          description: The name of the bucket containing this managed folder.
          type: string
        createTime:
          description: The creation time of the managed folder in RFC 3339 format.
          format: date-time
          type: string
        id:
          description: The ID of the managed folder, including the bucket name and managed folder name.
          type: string
        kind:
          default: storage#managedFolder
          description: The kind of item this is. For managed folders, this is always storage#managedFolder.
          type: string
        metageneration:
          description: The version of the metadata for this managed folder. Used for preconditions and for detecting changes in metadata.
          format: int64
          type: string
        name:
          description: The name of the managed folder. Required if not specified by URL parameter.
          type: string
        selfLink:
          description: The link to this managed folder.
          type: string
        updateTime:
          description: The last update time of the managed folder metadata in RFC 3339 format.
          format: date-time
          type: string
      type: object
    ManagedFolders:
      description: A list of managed folders.
      properties:
        items:
          description: The list of items.
          items:
            $ref: "#/components/schemas/ManagedFolder"
          type: array
        kind:
          default: storage#managedFolders
          description: The kind of item this is. For lists of managed folders, this is always storage#managedFolders.
          type: string
        nextPageToken:
          description: The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
          type: string
      type: object
    Notification:
      description: A subscription to receive Google PubSub notifications.
      properties:
        custom_attributes:
          additionalProperties:
            type: string
          description: An optional list of additional attributes to attach to each Cloud PubSub message published for this notification subscription.
          type: object
        etag:
          description: HTTP 1.1 Entity tag for this subscription notification.
          type: string
        event_types:
          description: If present, only send notifications about listed event types. If empty, sent notifications for all event types.
          items:
            type: string
          type: array
        id:
          description: The ID of the notification.
          type: string
        kind:
          default: storage#notification
          description: The kind of item this is. For notifications, this is always storage#notification.
          type: string
        object_name_prefix:
          description: If present, only apply this notification configuration to object names that begin with this prefix.
          type: string
        payload_format:
          default: JSON_API_V1
          description: The desired content of the Payload.
          type: string
        selfLink:
          description: The canonical URL of this notification.
          type: string
        topic:
          description: "The Cloud PubSub topic to which this subscription publishes. Formatted as: '//pubsub.googleapis.com/projects/{project-identifier}/topics/{my-topic}'"
          type: string
      type: object
    Notifications:
      description: A list of notification subscriptions.
      properties:
        items:
          description: The list of items.
          items:
            $ref: "#/components/schemas/Notification"
          type: array
        kind:
          default: storage#notifications
          description: The kind of item this is. For lists of notifications, this is always storage#notifications.
          type: string
      type: object
    Object:
      description: An object.
      properties:
        acl:
          description: Access controls on the object.
          items:
            $ref: "#/components/schemas/ObjectAccessControl"
          type: array
        bucket:
          description: The name of the bucket containing this object.
          type: string
        cacheControl:
          description: Cache-Control directive for the object data. If omitted, and the object is accessible to all anonymous users, the default will be public, max-age=3600.
          type: string
        componentCount:
          description: Number of underlying components that make up this object. Components are accumulated by compose operations.
          format: int32
          type: integer
        contentDisposition:
          description: Content-Disposition of the object data.
          type: string
        contentEncoding:
          description: Content-Encoding of the object data.
          type: string
        contentLanguage:
          description: Content-Language of the object data.
          type: string
        contentType:
          description: Content-Type of the object data. If an object is stored without a Content-Type, it is served as application/octet-stream.
          type: string
        crc32c:
          description: "CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order. For more information about using the CRC32c checksum, see Hashes and ETags: Best Practices."
          type: string
        customTime:
          description: A timestamp in RFC 3339 format specified by the user for an object.
          format: date-time
          type: string
        customerEncryption:
          description: Metadata of customer-supplied encryption key, if the object is encrypted by such a key.
          properties:
            encryptionAlgorithm:
              description: The encryption algorithm.
              type: string
            keySha256:
              description: SHA256 hash value of the encryption key.
              type: string
          type: object
        etag:
          description: HTTP 1.1 Entity tag for the object.
          type: string
        eventBasedHold:
          description: Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold's release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is the loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false.
          type: boolean
        generation:
          description: The content generation of this object. Used for object versioning.
          format: int64
          type: string
        hardDeleteTime:
          description: This is the time (in the future) when the soft-deleted object will no longer be restorable. It is equal to the soft delete time plus the current soft delete retention duration of the bucket.
          format: date-time
          type: string
        id:
          description: The ID of the object, including the bucket name, object name, and generation number.
          type: string
        kind:
          default: storage#object
          description: The kind of item this is. For objects, this is always storage#object.
          type: string
        kmsKeyName:
          description: Not currently supported. Specifying the parameter causes the request to fail with status code 400 - Bad Request.
          type: string
        md5Hash:
          description: "MD5 hash of the data; encoded using base64. For more information about using the MD5 hash, see Hashes and ETags: Best Practices."
          type: string
        mediaLink:
          description: Media download link.
          type: string
        metadata:
          additionalProperties:
            description: An individual metadata entry.
            type: string
          description: User-provided metadata, in key/value pairs.
          type: object
        metageneration:
          description: The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object.
          format: int64
          type: string
        name:
          description: The name of the object. Required if not specified by URL parameter.
          type: string
        owner:
          description: The owner of the object. This will always be the uploader of the object.
          properties:
            entity:
              description: The entity, in the form user-userId.
              type: string
            entityId:
              description: The ID for the entity.
              type: string
          type: object
        retention:
          description: A collection of object level retention parameters.
          properties:
            mode:
              description: The bucket's object retention mode, can only be Unlocked or Locked.
              type: string
            retainUntilTime:
              description: A time in RFC 3339 format until which object retention protects this object.
              format: date-time
              type: string
          type: object
        retentionExpirationTime:
          description: "A server-determined value that specifies the earliest time that the object's retention period expires. This value is in RFC 3339 format. Note 1: This field is not provided for objects with an active event-based hold, since retention expiration is unknown until the hold is removed. Note 2: This value can be provided even when temporary hold is set (so that the user can reason about policy without having to first unset the temporary hold)."
          format: date-time
          type: string
        selfLink:
          description: The link to this object.
          type: string
        size:
          description: Content-Length of the data in bytes.
          format: uint64
          type: string
        softDeleteTime:
          description: The time at which the object became soft-deleted in RFC 3339 format.
          format: date-time
          type: string
        storageClass:
          description: Storage class of the object.
          type: string
        temporaryHold:
          description: Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites. A common use case of this flag is regulatory investigations where objects need to be retained while the investigation is ongoing. Note that unlike event-based hold, temporary hold does not impact retention expiration time of an object.
          type: boolean
        timeCreated:
          description: The creation time of the object in RFC 3339 format.
          format: date-time
          type: string
        timeDeleted:
          description: The time at which the object became noncurrent in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.
          format: date-time
          type: string
        timeStorageClassUpdated:
          description: The time at which the object's storage class was last changed. When the object is initially created, it will be set to timeCreated.
          format: date-time
          type: string
        updated:
          description: The modification time of the object metadata in RFC 3339 format. Set initially to object creation time and then updated whenever any metadata of the object changes. This includes changes made by a requester, such as modifying custom metadata, as well as changes made by Cloud Storage on behalf of a requester, such as changing the storage class based on an Object Lifecycle Configuration.
          format: date-time
          type: string
      type: object
    ObjectAccessControl:
      description: An access-control entry.
      properties:
        bucket:
          description: The name of the bucket.
          type: string
        domain:
          description: The domain associated with the entity, if any.
          type: string
        email:
          description: The email address associated with the entity, if any.
          type: string
        entity:
          description: |-
            The entity holding the permission, in one of the following forms: 
            - user-userId 
            - user-email 
            - group-groupId 
            - group-email 
            - domain-domain 
            - project-team-projectId 
            - allUsers 
            - allAuthenticatedUsers Examples: 
            - The user liz@example.com would be user-liz@example.com. 
            - The group example@googlegroups.com would be group-example@googlegroups.com. 
            - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
          type: string
        entityId:
          description: The ID for the entity, if any.
          type: string
        etag:
          description: HTTP 1.1 Entity tag for the access-control entry.
          type: string
        generation:
          description: The content generation of the object, if applied to an object.
          format: int64
          type: string
        id:
          description: The ID of the access-control entry.
          type: string
        kind:
          default: storage#objectAccessControl
          description: The kind of item this is. For object access control entries, this is always storage#objectAccessControl.
          type: string
        object:
          description: The name of the object, if applied to an object.
          type: string
        projectTeam:
          description: The project team associated with the entity, if any.
          properties:
            projectNumber:
              description: The project number.
              type: string
            team:
              description: The team.
              type: string
          type: object
        role:
          description: The access permission for the entity.
          type: string
        selfLink:
          description: The link to this access-control entry.
          type: string
      type: object
    ObjectAccessControls:
      description: An access-control list.
      properties:
        items:
          description: The list of items.
          items:
            $ref: "#/components/schemas/ObjectAccessControl"
          type: array
        kind:
          default: storage#objectAccessControls
          description: The kind of item this is. For lists of object access control entries, this is always storage#objectAccessControls.
          type: string
      type: object
    Objects:
      description: A list of objects.
      properties:
        items:
          description: The list of items.
          items:
            $ref: "#/components/schemas/Object"
          type: array
        kind:
          default: storage#objects
          description: The kind of item this is. For lists of objects, this is always storage#objects.
          type: string
        nextPageToken:
          description: The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
          type: string
        prefixes:
          description: The list of prefixes of objects matching-but-not-listed up to and including the requested delimiter.
          items:
            type: string
          type: array
      type: object
    Policy:
      description: A bucket/object/managedFolder IAM policy.
      properties:
        bindings:
          description: An association between a role, which comes with a set of permissions, and members who may assume that role.
          items:
            properties:
              condition:
                $ref: "#/components/schemas/Expr"
                description: "The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently."
              members:
                description: |-
                  A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:  
                  - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.  
                  - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.  
                  - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.  
                  - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .  
                  - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.  
                  - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.  
                  - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project  
                  - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project  
                  - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project
                items:
                  type: string
                type: array
              role:
                description: |-
                  The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.
                  The new IAM roles are:  
                  - roles/storage.admin — Full control of Google Cloud Storage resources.  
                  - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.  
                  - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.  
                  - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:  
                  - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.  
                  - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.  
                  - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.  
                  - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.  
                  - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role.
                type: string
            type: object
          type: array
        etag:
          description: HTTP 1.1  Entity tag for the policy.
          format: byte
          type: string
        kind:
          default: storage#policy
          description: The kind of item this is. For policies, this is always storage#policy. This field is ignored on input.
          type: string
        resourceId:
          description: "The ID of the resource to which this policy belongs. Will be of the form projects/_/buckets/bucket for buckets, projects/_/buckets/bucket/objects/object for objects, and projects/_/buckets/bucket/managedFolders/managedFolder. A specific generation may be specified by appending #generationNumber to the end of the object name, e.g. projects/_/buckets/my-bucket/objects/data.txt#17. The current generation can be denoted with #0. This field is ignored on input."
          type: string
        version:
          description: The IAM policy format version.
          format: int32
          type: integer
      type: object
    RewriteResponse:
      description: A rewrite response.
      properties:
        done:
          description: true if the copy is finished; otherwise, false if the copy is in progress. This property is always present in the response.
          type: boolean
        kind:
          default: storage#rewriteResponse
          description: The kind of item this is.
          type: string
        objectSize:
          description: The total size of the object being copied in bytes. This property is always present in the response.
          format: int64
          type: string
        resource:
          $ref: "#/components/schemas/Object"
          description: A resource containing the metadata for the copied-to object. This property is present in the response only when copying completes.
        rewriteToken:
          description: A token to use in subsequent requests to continue copying data. This token is present in the response only when there is more data to copy.
          type: string
        totalBytesRewritten:
          description: The total bytes written so far, which can be used to provide a waiting user with a progress indicator. This property is always present in the response.
          format: int64
          type: string
      type: object
    ServiceAccount:
      description: A subscription to receive Google PubSub notifications.
      properties:
        email_address:
          description: The ID of the notification.
          type: string
        kind:
          default: storage#serviceAccount
          description: The kind of item this is. For notifications, this is always storage#notification.
          type: string
      type: object
    TestIamPermissionsResponse:
      description: A storage.(buckets|objects|managedFolders).testIamPermissions response.
      properties:
        kind:
          default: storage#testIamPermissionsResponse
          description: The kind of item this is.
          type: string
        permissions:
          description: |-
            The permissions held by the caller. Permissions are always of the format storage.resource.capability, where resource is one of buckets, objects, or managedFolders. The supported permissions are as follows:  
            - storage.buckets.delete — Delete bucket.  
            - storage.buckets.get — Read bucket metadata.  
            - storage.buckets.getIamPolicy — Read bucket IAM policy.  
            - storage.buckets.create — Create bucket.  
            - storage.buckets.list — List buckets.  
            - storage.buckets.setIamPolicy — Update bucket IAM policy.  
            - storage.buckets.update — Update bucket metadata.  
            - storage.objects.delete — Delete object.  
            - storage.objects.get — Read object data and metadata.  
            - storage.objects.getIamPolicy — Read object IAM policy.  
            - storage.objects.create — Create object.  
            - storage.objects.list — List objects.  
            - storage.objects.setIamPolicy — Update object IAM policy.  
            - storage.objects.update — Update object metadata. 
            - storage.managedFolders.delete — Delete managed folder.  
            - storage.managedFolders.get — Read managed folder metadata.  
            - storage.managedFolders.getIamPolicy — Read managed folder IAM policy.  
            - storage.managedFolders.create — Create managed folder.  
            - storage.managedFolders.list — List managed folders.  
            - storage.managedFolders.setIamPolicy — Update managed folder IAM policy.
          items:
            type: string
          type: array
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud Platform services
            https://www.googleapis.com/auth/devstorage.full_control: Manage your data and permissions in Google Cloud Storage
            https://www.googleapis.com/auth/devstorage.read_only: View your data in Google Cloud Storage
            https://www.googleapis.com/auth/devstorage.read_write: Manage your data in Google Cloud Storage
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud Platform services
            https://www.googleapis.com/auth/devstorage.full_control: Manage your data and permissions in Google Cloud Storage
            https://www.googleapis.com/auth/devstorage.read_only: View your data in Google Cloud Storage
            https://www.googleapis.com/auth/devstorage.read_write: Manage your data in Google Cloud Storage
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
