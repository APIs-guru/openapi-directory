# coding: utf-8

"""
    Cloud Storage JSON API

    Stores and retrieves potentially large, immutable data objects.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.hmac_keys_metadata import HmacKeysMetadata

class TestHmacKeysMetadata(unittest.TestCase):
    """HmacKeysMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HmacKeysMetadata:
        """Test HmacKeysMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HmacKeysMetadata`
        """
        model = HmacKeysMetadata()
        if include_optional:
            return HmacKeysMetadata(
                items = [
                    openapi_client.models.hmac_key_metadata.HmacKeyMetadata(
                        access_id = '', 
                        etag = '', 
                        id = '', 
                        kind = 'storage#hmacKeyMetadata', 
                        project_id = '', 
                        self_link = '', 
                        service_account_email = '', 
                        state = '', 
                        time_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                kind = 'storage#hmacKeysMetadata',
                next_page_token = ''
            )
        else:
            return HmacKeysMetadata(
        )
        """

    def testHmacKeysMetadata(self):
        """Test HmacKeysMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
