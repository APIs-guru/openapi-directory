# coding: utf-8

"""
    Cloud Storage JSON API

    Stores and retrieves potentially large, immutable data objects.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.bucket_lifecycle_rule_inner_condition import BucketLifecycleRuleInnerCondition

class TestBucketLifecycleRuleInnerCondition(unittest.TestCase):
    """BucketLifecycleRuleInnerCondition unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BucketLifecycleRuleInnerCondition:
        """Test BucketLifecycleRuleInnerCondition
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BucketLifecycleRuleInnerCondition`
        """
        model = BucketLifecycleRuleInnerCondition()
        if include_optional:
            return BucketLifecycleRuleInnerCondition(
                age = 56,
                created_before = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                custom_time_before = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                days_since_custom_time = 56,
                days_since_noncurrent_time = 56,
                is_live = True,
                matches_pattern = '',
                matches_prefix = [
                    ''
                    ],
                matches_storage_class = [
                    ''
                    ],
                matches_suffix = [
                    ''
                    ],
                noncurrent_time_before = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                num_newer_versions = 56
            )
        else:
            return BucketLifecycleRuleInnerCondition(
        )
        """

    def testBucketLifecycleRuleInnerCondition(self):
        """Test BucketLifecycleRuleInnerCondition"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
