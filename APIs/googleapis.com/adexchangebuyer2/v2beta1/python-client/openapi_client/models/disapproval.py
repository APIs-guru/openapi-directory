# coding: utf-8

"""
    Ad Exchange Buyer API II

    Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.

    The version of the OpenAPI document: v2beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictStr, field_validator
from typing import Any, ClassVar, Dict, List, Optional
from typing import Optional, Set
from typing_extensions import Self

class Disapproval(BaseModel):
    """
    Output only. The reason and details for a disapproval.
    """ # noqa: E501
    details: Optional[List[StrictStr]] = Field(default=None, description="Additional details about the reason for disapproval.")
    reason: Optional[StrictStr] = Field(default=None, description="The categorized reason for disapproval.")
    __properties: ClassVar[List[str]] = ["details", "reason"]

    @field_validator('reason')
    def reason_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in set(['LENGTH_OF_IMAGE_ANIMATION', 'BROKEN_URL', 'MEDIA_NOT_FUNCTIONAL', 'INVALID_FOURTH_PARTY_CALL', 'INCORRECT_REMARKETING_DECLARATION', 'LANDING_PAGE_ERROR', 'AD_SIZE_DOES_NOT_MATCH_AD_SLOT', 'NO_BORDER', 'FOURTH_PARTY_BROWSER_COOKIES', 'LSO_OBJECTS', 'BLANK_CREATIVE', 'DESTINATION_URLS_UNDECLARED', 'PROBLEM_WITH_CLICK_MACRO', 'INCORRECT_AD_TECHNOLOGY_DECLARATION', 'INCORRECT_DESTINATION_URL_DECLARATION', 'EXPANDABLE_INCORRECT_DIRECTION', 'EXPANDABLE_DIRECTION_NOT_SUPPORTED', 'EXPANDABLE_INVALID_VENDOR', 'EXPANDABLE_FUNCTIONALITY', 'VIDEO_INVALID_VENDOR', 'VIDEO_UNSUPPORTED_LENGTH', 'VIDEO_UNSUPPORTED_FORMAT', 'VIDEO_FUNCTIONALITY', 'LANDING_PAGE_DISABLED', 'MALWARE_SUSPECTED', 'ADULT_IMAGE_OR_VIDEO', 'INACCURATE_AD_TEXT', 'COUNTERFEIT_DESIGNER_GOODS', 'POP_UP', 'INVALID_RTB_PROTOCOL_USAGE', 'RAW_IP_ADDRESS_IN_SNIPPET', 'UNACCEPTABLE_CONTENT_SOFTWARE', 'UNAUTHORIZED_COOKIE_ON_GOOGLE_DOMAIN', 'UNDECLARED_FLASH_OBJECTS', 'INVALID_SSL_DECLARATION', 'DIRECT_DOWNLOAD_IN_AD', 'MAXIMUM_DOWNLOAD_SIZE_EXCEEDED', 'DESTINATION_URL_SITE_NOT_CRAWLABLE', 'BAD_URL_LEGAL_DISAPPROVAL', 'PHARMA_GAMBLING_ALCOHOL_NOT_ALLOWED', 'DYNAMIC_DNS_AT_DESTINATION_URL', 'POOR_IMAGE_OR_VIDEO_QUALITY', 'UNACCEPTABLE_IMAGE_CONTENT', 'INCORRECT_IMAGE_LAYOUT', 'IRRELEVANT_IMAGE_OR_VIDEO', 'DESTINATION_SITE_DOES_NOT_ALLOW_GOING_BACK', 'MISLEADING_CLAIMS_IN_AD', 'RESTRICTED_PRODUCTS', 'UNACCEPTABLE_CONTENT', 'AUTOMATED_AD_CLICKING', 'INVALID_URL_PROTOCOL', 'UNDECLARED_RESTRICTED_CONTENT', 'INVALID_REMARKETING_LIST_USAGE', 'DESTINATION_SITE_NOT_CRAWLABLE_ROBOTS_TXT', 'CLICK_TO_DOWNLOAD_NOT_AN_APP', 'INACCURATE_REVIEW_EXTENSION', 'SEXUALLY_EXPLICIT_CONTENT', 'GAINING_AN_UNFAIR_ADVANTAGE', 'GAMING_THE_GOOGLE_NETWORK', 'DANGEROUS_PRODUCTS_KNIVES', 'DANGEROUS_PRODUCTS_EXPLOSIVES', 'DANGEROUS_PRODUCTS_GUNS', 'DANGEROUS_PRODUCTS_DRUGS', 'DANGEROUS_PRODUCTS_TOBACCO', 'DANGEROUS_PRODUCTS_WEAPONS', 'UNCLEAR_OR_IRRELEVANT_AD', 'PROFESSIONAL_STANDARDS', 'DYSFUNCTIONAL_PROMOTION', 'INVALID_INTEREST_BASED_AD', 'MISUSE_OF_PERSONAL_INFORMATION', 'OMISSION_OF_RELEVANT_INFORMATION', 'UNAVAILABLE_PROMOTIONS', 'MISLEADING_PROMOTIONS', 'INAPPROPRIATE_CONTENT', 'SENSITIVE_EVENTS', 'SHOCKING_CONTENT', 'ENABLING_DISHONEST_BEHAVIOR', 'TECHNICAL_REQUIREMENTS', 'RESTRICTED_POLITICAL_CONTENT', 'UNSUPPORTED_CONTENT', 'INVALID_BIDDING_METHOD', 'VIDEO_TOO_LONG', 'VIOLATES_JAPANESE_PHARMACY_LAW', 'UNACCREDITED_PET_PHARMACY', 'ABORTION', 'CONTRACEPTIVES', 'NEED_CERTIFICATES_TO_ADVERTISE_IN_CHINA', 'KCDSP_REGISTRATION', 'NOT_FAMILY_SAFE', 'CLINICAL_TRIAL_RECRUITMENT', 'MAXIMUM_NUMBER_OF_HTTP_CALLS_EXCEEDED', 'MAXIMUM_NUMBER_OF_COOKIES_EXCEEDED', 'PERSONAL_LOANS', 'UNSUPPORTED_FLASH_CONTENT', 'MISUSE_BY_OMID_SCRIPT', 'NON_WHITELISTED_OMID_VENDOR', 'DESTINATION_EXPERIENCE', 'UNSUPPORTED_LANGUAGE', 'NON_SSL_COMPLIANT', 'TEMPORARY_PAUSE', 'BAIL_BONDS', 'EXPERIMENTAL_MEDICAL_TREATMENT']):
            raise ValueError("must be one of enum values ('LENGTH_OF_IMAGE_ANIMATION', 'BROKEN_URL', 'MEDIA_NOT_FUNCTIONAL', 'INVALID_FOURTH_PARTY_CALL', 'INCORRECT_REMARKETING_DECLARATION', 'LANDING_PAGE_ERROR', 'AD_SIZE_DOES_NOT_MATCH_AD_SLOT', 'NO_BORDER', 'FOURTH_PARTY_BROWSER_COOKIES', 'LSO_OBJECTS', 'BLANK_CREATIVE', 'DESTINATION_URLS_UNDECLARED', 'PROBLEM_WITH_CLICK_MACRO', 'INCORRECT_AD_TECHNOLOGY_DECLARATION', 'INCORRECT_DESTINATION_URL_DECLARATION', 'EXPANDABLE_INCORRECT_DIRECTION', 'EXPANDABLE_DIRECTION_NOT_SUPPORTED', 'EXPANDABLE_INVALID_VENDOR', 'EXPANDABLE_FUNCTIONALITY', 'VIDEO_INVALID_VENDOR', 'VIDEO_UNSUPPORTED_LENGTH', 'VIDEO_UNSUPPORTED_FORMAT', 'VIDEO_FUNCTIONALITY', 'LANDING_PAGE_DISABLED', 'MALWARE_SUSPECTED', 'ADULT_IMAGE_OR_VIDEO', 'INACCURATE_AD_TEXT', 'COUNTERFEIT_DESIGNER_GOODS', 'POP_UP', 'INVALID_RTB_PROTOCOL_USAGE', 'RAW_IP_ADDRESS_IN_SNIPPET', 'UNACCEPTABLE_CONTENT_SOFTWARE', 'UNAUTHORIZED_COOKIE_ON_GOOGLE_DOMAIN', 'UNDECLARED_FLASH_OBJECTS', 'INVALID_SSL_DECLARATION', 'DIRECT_DOWNLOAD_IN_AD', 'MAXIMUM_DOWNLOAD_SIZE_EXCEEDED', 'DESTINATION_URL_SITE_NOT_CRAWLABLE', 'BAD_URL_LEGAL_DISAPPROVAL', 'PHARMA_GAMBLING_ALCOHOL_NOT_ALLOWED', 'DYNAMIC_DNS_AT_DESTINATION_URL', 'POOR_IMAGE_OR_VIDEO_QUALITY', 'UNACCEPTABLE_IMAGE_CONTENT', 'INCORRECT_IMAGE_LAYOUT', 'IRRELEVANT_IMAGE_OR_VIDEO', 'DESTINATION_SITE_DOES_NOT_ALLOW_GOING_BACK', 'MISLEADING_CLAIMS_IN_AD', 'RESTRICTED_PRODUCTS', 'UNACCEPTABLE_CONTENT', 'AUTOMATED_AD_CLICKING', 'INVALID_URL_PROTOCOL', 'UNDECLARED_RESTRICTED_CONTENT', 'INVALID_REMARKETING_LIST_USAGE', 'DESTINATION_SITE_NOT_CRAWLABLE_ROBOTS_TXT', 'CLICK_TO_DOWNLOAD_NOT_AN_APP', 'INACCURATE_REVIEW_EXTENSION', 'SEXUALLY_EXPLICIT_CONTENT', 'GAINING_AN_UNFAIR_ADVANTAGE', 'GAMING_THE_GOOGLE_NETWORK', 'DANGEROUS_PRODUCTS_KNIVES', 'DANGEROUS_PRODUCTS_EXPLOSIVES', 'DANGEROUS_PRODUCTS_GUNS', 'DANGEROUS_PRODUCTS_DRUGS', 'DANGEROUS_PRODUCTS_TOBACCO', 'DANGEROUS_PRODUCTS_WEAPONS', 'UNCLEAR_OR_IRRELEVANT_AD', 'PROFESSIONAL_STANDARDS', 'DYSFUNCTIONAL_PROMOTION', 'INVALID_INTEREST_BASED_AD', 'MISUSE_OF_PERSONAL_INFORMATION', 'OMISSION_OF_RELEVANT_INFORMATION', 'UNAVAILABLE_PROMOTIONS', 'MISLEADING_PROMOTIONS', 'INAPPROPRIATE_CONTENT', 'SENSITIVE_EVENTS', 'SHOCKING_CONTENT', 'ENABLING_DISHONEST_BEHAVIOR', 'TECHNICAL_REQUIREMENTS', 'RESTRICTED_POLITICAL_CONTENT', 'UNSUPPORTED_CONTENT', 'INVALID_BIDDING_METHOD', 'VIDEO_TOO_LONG', 'VIOLATES_JAPANESE_PHARMACY_LAW', 'UNACCREDITED_PET_PHARMACY', 'ABORTION', 'CONTRACEPTIVES', 'NEED_CERTIFICATES_TO_ADVERTISE_IN_CHINA', 'KCDSP_REGISTRATION', 'NOT_FAMILY_SAFE', 'CLINICAL_TRIAL_RECRUITMENT', 'MAXIMUM_NUMBER_OF_HTTP_CALLS_EXCEEDED', 'MAXIMUM_NUMBER_OF_COOKIES_EXCEEDED', 'PERSONAL_LOANS', 'UNSUPPORTED_FLASH_CONTENT', 'MISUSE_BY_OMID_SCRIPT', 'NON_WHITELISTED_OMID_VENDOR', 'DESTINATION_EXPERIENCE', 'UNSUPPORTED_LANGUAGE', 'NON_SSL_COMPLIANT', 'TEMPORARY_PAUSE', 'BAIL_BONDS', 'EXPERIMENTAL_MEDICAL_TREATMENT')")
        return value

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of Disapproval from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of Disapproval from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "details": obj.get("details"),
            "reason": obj.get("reason")
        })
        return _obj


