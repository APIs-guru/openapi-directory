# coding: utf-8

"""
    Ad Exchange Buyer API II

    Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.

    The version of the OpenAPI document: v2beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.day_part_targeting import DayPartTargeting

class TestDayPartTargeting(unittest.TestCase):
    """DayPartTargeting unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DayPartTargeting:
        """Test DayPartTargeting
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DayPartTargeting`
        """
        model = DayPartTargeting()
        if include_optional:
            return DayPartTargeting(
                day_parts = [
                    openapi_client.models.day_part.DayPart(
                        day_of_week = 'DAY_OF_WEEK_UNSPECIFIED', 
                        end_time = openapi_client.models.time_of_day.TimeOfDay(
                            hours = 56, 
                            minutes = 56, 
                            nanos = 56, 
                            seconds = 56, ), 
                        start_time = openapi_client.models.time_of_day.TimeOfDay(
                            hours = 56, 
                            minutes = 56, 
                            nanos = 56, 
                            seconds = 56, ), )
                    ],
                time_zone_type = 'TIME_ZONE_SOURCE_UNSPECIFIED'
            )
        else:
            return DayPartTargeting(
        )
        """

    def testDayPartTargeting(self):
        """Test DayPartTargeting"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
