# coding: utf-8

"""
    Ad Exchange Buyer API II

    Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.

    The version of the OpenAPI document: v2beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.native_content import NativeContent

class TestNativeContent(unittest.TestCase):
    """NativeContent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NativeContent:
        """Test NativeContent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NativeContent`
        """
        model = NativeContent()
        if include_optional:
            return NativeContent(
                advertiser_name = '',
                app_icon = openapi_client.models.image.Image(
                    height = 56, 
                    url = '', 
                    width = 56, ),
                body = '',
                call_to_action = '',
                click_link_url = '',
                click_tracking_url = '',
                headline = '',
                image = openapi_client.models.image.Image(
                    height = 56, 
                    url = '', 
                    width = 56, ),
                logo = openapi_client.models.image.Image(
                    height = 56, 
                    url = '', 
                    width = 56, ),
                price_display_text = '',
                star_rating = 1.337,
                store_url = '',
                video_url = ''
            )
        else:
            return NativeContent(
        )
        """

    def testNativeContent(self):
        """Test NativeContent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
