# coding: utf-8

"""
    Ad Exchange Buyer API II

    Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.

    The version of the OpenAPI document: v2beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_bid_metrics_response import ListBidMetricsResponse

class TestListBidMetricsResponse(unittest.TestCase):
    """ListBidMetricsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListBidMetricsResponse:
        """Test ListBidMetricsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListBidMetricsResponse`
        """
        model = ListBidMetricsResponse()
        if include_optional:
            return ListBidMetricsResponse(
                bid_metrics_rows = [
                    openapi_client.models.bid_metrics_row.BidMetricsRow(
                        bids = openapi_client.models.metric_value.MetricValue(
                            value = '', 
                            variance = '', ), 
                        bids_in_auction = openapi_client.models.metric_value.MetricValue(
                            value = '', 
                            variance = '', ), 
                        billed_impressions = , 
                        impressions_won = , 
                        measurable_impressions = , 
                        reached_queries = , 
                        row_dimensions = openapi_client.models.row_dimensions.RowDimensions(
                            publisher_identifier = '', 
                            time_interval = openapi_client.models.time_interval.TimeInterval(
                                end_time = '', 
                                start_time = '', ), ), 
                        viewable_impressions = , )
                    ],
                next_page_token = ''
            )
        else:
            return ListBidMetricsResponse(
        )
        """

    def testListBidMetricsResponse(self):
        """Test ListBidMetricsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
