openapi: 3.0.0
servers:
  - url: https://admin.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Admin SDK lets administrators of enterprise domains to view and manage resources like user, groups etc. It also provides audit and usage reports of domain.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Admin SDK API
  version: directory_v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - format: google
      url: https://admin.googleapis.com/$discovery/rest?version=directory_v1
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: admin
externalDocs:
  url: https://developers.google.com/admin-sdk/
tags:
  - name: asps
  - name: channels
  - name: chromeosdevices
  - name: customer
  - name: customers
  - name: domainAliases
  - name: domains
  - name: groups
  - name: members
  - name: mobiledevices
  - name: orgunits
  - name: privileges
  - name: resources
  - name: roleAssignments
  - name: roles
  - name: schemas
  - name: tokens
  - name: twoStepVerification
  - name: users
  - name: verificationCodes
paths:
  "/admin/directory/v1/customer/{customerId}/devices/chromeos":
    get:
      description: Retrieves a paginated list of Chrome OS devices within an account.
      operationId: directory.chromeosdevices.list
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's `customerId`. The `customerId` is also returned as part of the [Users resource](/admin-sdk/directory/v1/reference/users).
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: Return devices from all child orgunits, as well as the specified org unit. If this is set to true, 'orgUnitPath' must be provided.
          in: query
          name: includeChildOrgunits
          schema:
            type: boolean
        - description: Maximum number of results to return.
          in: query
          name: maxResults
          schema:
            minimum: 1
            type: integer
        - description: Device property to use for sorting results.
          in: query
          name: orderBy
          schema:
            enum:
              - annotatedLocation
              - annotatedUser
              - lastSync
              - notes
              - serialNumber
              - status
            type: string
        - description: The full path of the organizational unit (minus the leading `/`) or its unique ID.
          in: query
          name: orgUnitPath
          schema:
            type: string
        - description: The `pageToken` query parameter is used to request the next page of query results. The follow-on request's `pageToken` query parameter is the `nextPageToken` from your previous response.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Restrict information returned to a set of selected fields.
          in: query
          name: projection
          schema:
            enum:
              - BASIC
              - FULL
            type: string
        - description: Search string in the format given at https://developers.google.com/admin-sdk/directory/v1/list-query-operators
          in: query
          name: query
          schema:
            type: string
        - description: Whether to return results in ascending or descending order. Must be used with the `orderBy` parameter.
          in: query
          name: sortOrder
          schema:
            enum:
              - ASCENDING
              - DESCENDING
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChromeOsDevices"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos.readonly
      tags:
        - chromeosdevices
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/admin/directory/v1/customer/{customerId}/devices/chromeos/moveDevicesToOu":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Moves or inserts multiple Chrome OS devices to an organizational unit. You can move up to 50 devices at once.
      operationId: directory.chromeosdevices.moveDevicesToOu
      parameters:
        - description: Immutable. ID of the Google Workspace account
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: Full path of the target organizational unit or its ID
          in: query
          name: orgUnitPath
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChromeOsMoveDevicesToOu"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos
      tags:
        - chromeosdevices
  "/admin/directory/v1/customer/{customerId}/devices/chromeos/{deviceId}":
    get:
      description: Retrieves a Chrome OS device's properties.
      operationId: directory.chromeosdevices.get
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's `customerId`. The `customerId` is also returned as part of the [Users resource](/admin-sdk/directory/v1/reference/users).
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: The unique ID of the device. The `deviceId`s are returned in the response from the [chromeosdevices.list](/admin-sdk/directory/v1/reference/chromeosdevices/list) method.
          in: path
          name: deviceId
          required: true
          schema:
            type: string
        - description: Determines whether the response contains the full list of properties or only a subset.
          in: query
          name: projection
          schema:
            enum:
              - BASIC
              - FULL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChromeOsDevice"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos.readonly
      tags:
        - chromeosdevices
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a device's updatable properties, such as `annotatedUser`, `annotatedLocation`, `notes`, `orgUnitPath`, or `annotatedAssetId`. This method supports [patch semantics](/admin-sdk/directory/v1/guides/performance#patch).
      operationId: directory.chromeosdevices.patch
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's `customerId`. The `customerId` is also returned as part of the [Users resource](/admin-sdk/directory/v1/reference/users).
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: The unique ID of the device. The `deviceId`s are returned in the response from the [chromeosdevices.list](/admin-sdk/v1/reference/chromeosdevices/list) method.
          in: path
          name: deviceId
          required: true
          schema:
            type: string
        - description: Restrict information returned to a set of selected fields.
          in: query
          name: projection
          schema:
            enum:
              - BASIC
              - FULL
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChromeOsDevice"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChromeOsDevice"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos
      tags:
        - chromeosdevices
    put:
      description: Updates a device's updatable properties, such as `annotatedUser`, `annotatedLocation`, `notes`, `orgUnitPath`, or `annotatedAssetId`.
      operationId: directory.chromeosdevices.update
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's `customerId`. The `customerId` is also returned as part of the [Users resource](/admin-sdk/directory/v1/reference/users).
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: The unique ID of the device. The `deviceId`s are returned in the response from the [chromeosdevices.list](/admin-sdk/v1/reference/chromeosdevices/list) method.
          in: path
          name: deviceId
          required: true
          schema:
            type: string
        - description: Restrict information returned to a set of selected fields.
          in: query
          name: projection
          schema:
            enum:
              - BASIC
              - FULL
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChromeOsDevice"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChromeOsDevice"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos
      tags:
        - chromeosdevices
  "/admin/directory/v1/customer/{customerId}/devices/chromeos/{deviceId}/commands/{commandId}":
    get:
      description: Gets command data a specific command issued to the device.
      operationId: admin.customer.devices.chromeos.commands.get
      parameters:
        - description: Immutable. ID of the Google Workspace account.
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: Immutable. ID of Chrome OS Device.
          in: path
          name: deviceId
          required: true
          schema:
            type: string
        - description: Immutable. ID of Chrome OS Device Command.
          in: path
          name: commandId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryChromeosdevicesCommand"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos.readonly
      tags:
        - customer
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/admin/directory/v1/customer/{customerId}/devices/chromeos/{deviceId}:issueCommand":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Issues a command for the device to execute.
      operationId: admin.customer.devices.chromeos.issueCommand
      parameters:
        - description: Immutable. ID of the Google Workspace account.
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: Immutable. ID of Chrome OS Device.
          in: path
          name: deviceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DirectoryChromeosdevicesIssueCommandRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryChromeosdevicesIssueCommandResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos
      tags:
        - customer
  "/admin/directory/v1/customer/{customerId}/devices/chromeos/{resourceId}/action":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Takes an action that affects a Chrome OS Device. This includes deprovisioning, disabling, and re-enabling devices. *Warning:* * Deprovisioning a device will stop device policy syncing and remove device-level printers. After a device is deprovisioned, it must be wiped before it can be re-enrolled. * Lost or stolen devices should use the disable action. * Re-enabling a disabled device will consume a device license. If you do not have sufficient licenses available when completing the re-enable action, you will receive an error. For more information about deprovisioning and disabling devices, visit the [help center](https://support.google.com/chrome/a/answer/3523633).
      operationId: directory.chromeosdevices.action
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's `customerId`. The `customerId` is also returned as part of the [Users resource](/admin-sdk/directory/v1/reference/users).
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: The unique ID of the device. The `resourceId`s are returned in the response from the [chromeosdevices.list](/admin-sdk/directory/v1/reference/chromeosdevices/list) method.
          in: path
          name: resourceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChromeOsDeviceAction"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.device.chromeos
      tags:
        - chromeosdevices
  "/admin/directory/v1/customer/{customerId}/devices/mobile":
    get:
      description: Retrieves a paginated list of all user-owned mobile devices for an account. To retrieve a list that includes company-owned devices, use the Cloud Identity [Devices API](https://cloud.google.com/identity/docs/concepts/overview-devices) instead.
      operationId: directory.mobiledevices.list
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's `customerId`. The `customerId` is also returned as part of the [Users resource](/admin-sdk/directory/v1/reference/users).
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: Maximum number of results to return. Max allowed value is 100.
          in: query
          name: maxResults
          schema:
            maximum: 100
            minimum: 1
            type: integer
        - description: Device property to use for sorting results.
          in: query
          name: orderBy
          schema:
            enum:
              - deviceId
              - email
              - lastSync
              - model
              - name
              - os
              - status
              - type
            type: string
        - description: Token to specify next page in the list
          in: query
          name: pageToken
          schema:
            type: string
        - description: Restrict information returned to a set of selected fields.
          in: query
          name: projection
          schema:
            enum:
              - BASIC
              - FULL
            type: string
        - description: Search string in the format given at https://developers.google.com/admin-sdk/directory/v1/search-operators
          in: query
          name: query
          schema:
            type: string
        - description: Whether to return results in ascending or descending order. Must be used with the `orderBy` parameter.
          in: query
          name: sortOrder
          schema:
            enum:
              - ASCENDING
              - DESCENDING
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MobileDevices"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.device.mobile
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.device.mobile
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.device.mobile.action
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.device.mobile.action
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.device.mobile.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.device.mobile.readonly
      tags:
        - mobiledevices
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/admin/directory/v1/customer/{customerId}/devices/mobile/{resourceId}":
    delete:
      description: Removes a mobile device.
      operationId: directory.mobiledevices.delete
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's `customerId`. The `customerId` is also returned as part of the [Users resource](/admin-sdk/directory/v1/reference/users).
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: The unique ID the API service uses to identify the mobile device.
          in: path
          name: resourceId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.device.mobile
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.device.mobile
      tags:
        - mobiledevices
    get:
      description: Retrieves a mobile device's properties.
      operationId: directory.mobiledevices.get
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's `customerId`. The `customerId` is also returned as part of the [Users resource](/admin-sdk/directory/v1/reference/users).
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: The unique ID the API service uses to identify the mobile device.
          in: path
          name: resourceId
          required: true
          schema:
            type: string
        - description: Restrict information returned to a set of selected fields.
          in: query
          name: projection
          schema:
            enum:
              - BASIC
              - FULL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MobileDevice"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.device.mobile
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.device.mobile
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.device.mobile.action
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.device.mobile.action
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.device.mobile.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.device.mobile.readonly
      tags:
        - mobiledevices
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/admin/directory/v1/customer/{customerId}/devices/mobile/{resourceId}/action":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Takes an action that affects a mobile device. For example, remotely wiping a device.
      operationId: directory.mobiledevices.action
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's `customerId`. The `customerId` is also returned as part of the [Users resource](/admin-sdk/directory/v1/reference/users).
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: The unique ID the API service uses to identify the mobile device.
          in: path
          name: resourceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MobileDeviceAction"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.device.mobile
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.device.mobile
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.device.mobile.action
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.device.mobile.action
      tags:
        - mobiledevices
  "/admin/directory/v1/customer/{customerId}/orgunits":
    get:
      description: Retrieves a list of all organizational units for an account.
      operationId: directory.orgunits.list
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's `customerId`. The `customerId` is also returned as part of the [Users resource](/admin-sdk/directory/v1/reference/users).
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: The full path to the organizational unit or its unique ID. Returns the children of the specified organizational unit.
          in: query
          name: orgUnitPath
          schema:
            type: string
        - description: Whether to return all sub-organizations or just immediate children.
          in: query
          name: type
          schema:
            enum:
              - all
              - children
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgUnits"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.orgunit
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.orgunit
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.orgunit.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.orgunit.readonly
      tags:
        - orgunits
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Adds an organizational unit.
      operationId: directory.orgunits.insert
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's `customerId`. The `customerId` is also returned as part of the [Users resource](/admin-sdk/directory/v1/reference/users).
          in: path
          name: customerId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrgUnit"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgUnit"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.orgunit
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.orgunit
      tags:
        - orgunits
  "/admin/directory/v1/customer/{customerId}/orgunits/{orgUnitPath}":
    delete:
      description: Removes an organizational unit.
      operationId: directory.orgunits.delete
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's `customerId`. The `customerId` is also returned as part of the [Users resource](/admin-sdk/directory/v1/reference/users).
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: The full path of the organizational unit (minus the leading `/`) or its unique ID.
          in: path
          name: orgUnitPath
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.orgunit
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.orgunit
      tags:
        - orgunits
    get:
      description: Retrieves an organizational unit.
      operationId: directory.orgunits.get
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's `customerId`. The `customerId` is also returned as part of the [Users resource](/admin-sdk/directory/v1/reference/users).
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: The full path of the organizational unit (minus the leading `/`) or its unique ID.
          in: path
          name: orgUnitPath
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgUnit"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.orgunit
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.orgunit
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.orgunit.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.orgunit.readonly
      tags:
        - orgunits
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates an organizational unit. This method supports [patch semantics](/admin-sdk/directory/v1/guides/performance#patch)
      operationId: directory.orgunits.patch
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's `customerId`. The `customerId` is also returned as part of the [Users resource](/admin-sdk/directory/v1/reference/users).
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: The full path of the organizational unit (minus the leading `/`) or its unique ID.
          in: path
          name: orgUnitPath
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrgUnit"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgUnit"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.orgunit
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.orgunit
      tags:
        - orgunits
    put:
      description: Updates an organizational unit.
      operationId: directory.orgunits.update
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's `customerId`. The `customerId` is also returned as part of the [Users resource](/admin-sdk/directory/v1/reference/users).
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: The full path of the organizational unit (minus the leading `/`) or its unique ID.
          in: path
          name: orgUnitPath
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrgUnit"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrgUnit"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.orgunit
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.orgunit
      tags:
        - orgunits
  "/admin/directory/v1/customer/{customerId}/schemas":
    get:
      description: Retrieves all schemas for a customer.
      operationId: directory.schemas.list
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customerId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schemas"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.userschema
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.userschema
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.userschema.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.userschema.readonly
      tags:
        - schemas
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a schema.
      operationId: directory.schemas.insert
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customerId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Schema"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schema"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.userschema
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.userschema
      tags:
        - schemas
  "/admin/directory/v1/customer/{customerId}/schemas/{schemaKey}":
    delete:
      description: Deletes a schema.
      operationId: directory.schemas.delete
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: Name or immutable ID of the schema.
          in: path
          name: schemaKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.userschema
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.userschema
      tags:
        - schemas
    get:
      description: Retrieves a schema.
      operationId: directory.schemas.get
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: Name or immutable ID of the schema.
          in: path
          name: schemaKey
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schema"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.userschema
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.userschema
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.userschema.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.userschema.readonly
      tags:
        - schemas
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Patches a schema.
      operationId: directory.schemas.patch
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: Name or immutable ID of the schema.
          in: path
          name: schemaKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Schema"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schema"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.userschema
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.userschema
      tags:
        - schemas
    put:
      description: Updates a schema.
      operationId: directory.schemas.update
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: Name or immutable ID of the schema.
          in: path
          name: schemaKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Schema"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schema"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.userschema
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.userschema
      tags:
        - schemas
  "/admin/directory/v1/customer/{customer}/domainaliases":
    get:
      description: Lists the domain aliases of the customer.
      operationId: directory.domainAliases.list
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: Name of the parent domain for which domain aliases are to be fetched.
          in: query
          name: parentDomainName
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainAliases"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.domain
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.domain
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.domain.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.domain.readonly
      tags:
        - domainAliases
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Inserts a domain alias of the customer.
      operationId: directory.domainAliases.insert
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DomainAlias"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainAlias"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.domain
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.domain
      tags:
        - domainAliases
  "/admin/directory/v1/customer/{customer}/domainaliases/{domainAliasName}":
    delete:
      description: Deletes a domain Alias of the customer.
      operationId: directory.domainAliases.delete
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: Name of domain alias to be retrieved.
          in: path
          name: domainAliasName
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.domain
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.domain
      tags:
        - domainAliases
    get:
      description: Retrieves a domain alias of the customer.
      operationId: directory.domainAliases.get
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: Name of domain alias to be retrieved.
          in: path
          name: domainAliasName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainAlias"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.domain
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.domain
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.domain.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.domain.readonly
      tags:
        - domainAliases
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/admin/directory/v1/customer/{customer}/domains":
    get:
      description: Lists the domains of the customer.
      operationId: directory.domains.list
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customer
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Domains2"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.domain
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.domain
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.domain.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.domain.readonly
      tags:
        - domains
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Inserts a domain of the customer.
      operationId: directory.domains.insert
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Domains"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Domains"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.domain
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.domain
      tags:
        - domains
  "/admin/directory/v1/customer/{customer}/domains/{domainName}":
    delete:
      description: Deletes a domain of the customer.
      operationId: directory.domains.delete
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: Name of domain to be deleted
          in: path
          name: domainName
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.domain
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.domain
      tags:
        - domains
    get:
      description: Retrieves a domain of the customer.
      operationId: directory.domains.get
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: Name of domain to be retrieved
          in: path
          name: domainName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Domains"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.domain
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.domain
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.domain.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.domain.readonly
      tags:
        - domains
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/admin/directory/v1/customer/{customer}/resources/buildings":
    get:
      description: Retrieves a list of buildings for an account.
      operationId: directory.resources.buildings.list
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's customer ID.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: Maximum number of results to return.
          in: query
          name: maxResults
          schema:
            maximum: 500
            minimum: 1
            type: integer
        - description: Token to specify the next page in the list.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Buildings"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly
      tags:
        - resources
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Inserts a building.
      operationId: directory.resources.buildings.insert
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's customer ID.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: Source from which Building.coordinates are derived.
          in: query
          name: coordinatesSource
          schema:
            enum:
              - CLIENT_SPECIFIED
              - RESOLVED_FROM_ADDRESS
              - SOURCE_UNSPECIFIED
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Building"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Building"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
      tags:
        - resources
  "/admin/directory/v1/customer/{customer}/resources/buildings/{buildingId}":
    delete:
      description: Deletes a building.
      operationId: directory.resources.buildings.delete
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's customer ID.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The id of the building to delete.
          in: path
          name: buildingId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
      tags:
        - resources
    get:
      description: Retrieves a building.
      operationId: directory.resources.buildings.get
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's customer ID.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The unique ID of the building to retrieve.
          in: path
          name: buildingId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Building"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly
      tags:
        - resources
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Patches a building.
      operationId: directory.resources.buildings.patch
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's customer ID.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The id of the building to update.
          in: path
          name: buildingId
          required: true
          schema:
            type: string
        - description: Source from which Building.coordinates are derived.
          in: query
          name: coordinatesSource
          schema:
            enum:
              - CLIENT_SPECIFIED
              - RESOLVED_FROM_ADDRESS
              - SOURCE_UNSPECIFIED
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Building"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Building"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
      tags:
        - resources
    put:
      description: Updates a building.
      operationId: directory.resources.buildings.update
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's customer ID.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The id of the building to update.
          in: path
          name: buildingId
          required: true
          schema:
            type: string
        - description: Source from which Building.coordinates are derived.
          in: query
          name: coordinatesSource
          schema:
            enum:
              - CLIENT_SPECIFIED
              - RESOLVED_FROM_ADDRESS
              - SOURCE_UNSPECIFIED
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Building"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Building"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
      tags:
        - resources
  "/admin/directory/v1/customer/{customer}/resources/calendars":
    get:
      description: Retrieves a list of calendar resources for an account.
      operationId: directory.resources.calendars.list
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's customer ID.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: Maximum number of results to return.
          in: query
          name: maxResults
          schema:
            maximum: 500
            minimum: 1
            type: integer
        - description: Field(s) to sort results by in either ascending or descending order. Supported fields include `resourceId`, `resourceName`, `capacity`, `buildingId`, and `floorName`. If no order is specified, defaults to ascending. Should be of the form "field [asc|desc], field [asc|desc], ...". For example `buildingId, capacity desc` would return results sorted first by `buildingId` in ascending order then by `capacity` in descending order.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Token to specify the next page in the list.
          in: query
          name: pageToken
          schema:
            type: string
        - description: String query used to filter results. Should be of the form "field operator value" where field can be any of supported fields and operators can be any of supported operations. Operators include '=' for exact match, '!=' for mismatch and ':' for prefix match or HAS match where applicable. For prefix match, the value should always be followed by a *. Logical operators NOT and AND are supported (in this order of precedence). Supported fields include `generatedResourceName`, `name`, `buildingId`, `floor_name`, `capacity`, `featureInstances.feature.name`, `resourceEmail`, `resourceCategory`. For example `buildingId=US-NYC-9TH AND featureInstances.feature.name:Phone`.
          in: query
          name: query
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarResources"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly
      tags:
        - resources
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Inserts a calendar resource.
      operationId: directory.resources.calendars.insert
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's customer ID.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CalendarResource"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarResource"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
      tags:
        - resources
  "/admin/directory/v1/customer/{customer}/resources/calendars/{calendarResourceId}":
    delete:
      description: Deletes a calendar resource.
      operationId: directory.resources.calendars.delete
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's customer ID.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The unique ID of the calendar resource to delete.
          in: path
          name: calendarResourceId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
      tags:
        - resources
    get:
      description: Retrieves a calendar resource.
      operationId: directory.resources.calendars.get
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's customer ID.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The unique ID of the calendar resource to retrieve.
          in: path
          name: calendarResourceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarResource"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly
      tags:
        - resources
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Patches a calendar resource.
      operationId: directory.resources.calendars.patch
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's customer ID.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The unique ID of the calendar resource to update.
          in: path
          name: calendarResourceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CalendarResource"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarResource"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
      tags:
        - resources
    put:
      description: Updates a calendar resource. This method supports patch semantics, meaning you only need to include the fields you wish to update. Fields that are not present in the request will be preserved.
      operationId: directory.resources.calendars.update
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's customer ID.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The unique ID of the calendar resource to update.
          in: path
          name: calendarResourceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CalendarResource"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarResource"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
      tags:
        - resources
  "/admin/directory/v1/customer/{customer}/resources/features":
    get:
      description: Retrieves a list of features for an account.
      operationId: directory.resources.features.list
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's customer ID.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: Maximum number of results to return.
          in: query
          name: maxResults
          schema:
            maximum: 500
            minimum: 1
            type: integer
        - description: Token to specify the next page in the list.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Features"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly
      tags:
        - resources
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Inserts a feature.
      operationId: directory.resources.features.insert
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's customer ID.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Feature"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feature"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
      tags:
        - resources
  "/admin/directory/v1/customer/{customer}/resources/features/{featureKey}":
    delete:
      description: Deletes a feature.
      operationId: directory.resources.features.delete
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's customer ID.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The unique ID of the feature to delete.
          in: path
          name: featureKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
      tags:
        - resources
    get:
      description: Retrieves a feature.
      operationId: directory.resources.features.get
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's customer ID.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The unique ID of the feature to retrieve.
          in: path
          name: featureKey
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feature"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly
      tags:
        - resources
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Patches a feature.
      operationId: directory.resources.features.patch
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's customer ID.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The unique ID of the feature to update.
          in: path
          name: featureKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Feature"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feature"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
      tags:
        - resources
    put:
      description: Updates a feature.
      operationId: directory.resources.features.update
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's customer ID.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The unique ID of the feature to update.
          in: path
          name: featureKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Feature"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feature"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
      tags:
        - resources
  "/admin/directory/v1/customer/{customer}/resources/features/{oldName}/rename":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Renames a feature.
      operationId: directory.resources.features.rename
      parameters:
        - description: The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's customer ID.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: The unique ID of the feature to rename.
          in: path
          name: oldName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeatureRename"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.resource.calendar
      tags:
        - resources
  "/admin/directory/v1/customer/{customer}/roleassignments":
    get:
      description: Retrieves a paginated list of all roleAssignments.
      operationId: directory.roleAssignments.list
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: Maximum number of results to return.
          in: query
          name: maxResults
          schema:
            maximum: 200
            minimum: 1
            type: integer
        - description: Token to specify the next page in the list.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Immutable ID of a role. If included in the request, returns only role assignments containing this role ID.
          in: query
          name: roleId
          schema:
            type: string
        - description: The user's primary email address, alias email address, or unique user ID. If included in the request, returns role assignments only for this user.
          in: query
          name: userKey
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleAssignments"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly
      tags:
        - roleAssignments
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a role assignment.
      operationId: directory.roleAssignments.insert
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoleAssignment"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleAssignment"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
      tags:
        - roleAssignments
  "/admin/directory/v1/customer/{customer}/roleassignments/{roleAssignmentId}":
    delete:
      description: Deletes a role assignment.
      operationId: directory.roleAssignments.delete
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: Immutable ID of the role assignment.
          in: path
          name: roleAssignmentId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
      tags:
        - roleAssignments
    get:
      description: Retrieves a role assignment.
      operationId: directory.roleAssignments.get
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: Immutable ID of the role assignment.
          in: path
          name: roleAssignmentId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleAssignment"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly
      tags:
        - roleAssignments
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/admin/directory/v1/customer/{customer}/roles":
    get:
      description: Retrieves a paginated list of all the roles in a domain.
      operationId: directory.roles.list
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: Maximum number of results to return.
          in: query
          name: maxResults
          schema:
            maximum: 100
            minimum: 1
            type: integer
        - description: Token to specify the next page in the list.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Roles"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly
      tags:
        - roles
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a role.
      operationId: directory.roles.insert
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
      tags:
        - roles
  "/admin/directory/v1/customer/{customer}/roles/ALL/privileges":
    get:
      description: Retrieves a paginated list of all privileges for a customer.
      operationId: directory.privileges.list
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customer
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Privileges"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly
      tags:
        - privileges
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/admin/directory/v1/customer/{customer}/roles/{roleId}":
    delete:
      description: Deletes a role.
      operationId: directory.roles.delete
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: Immutable ID of the role.
          in: path
          name: roleId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
      tags:
        - roles
    get:
      description: Retrieves a role.
      operationId: directory.roles.get
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: Immutable ID of the role.
          in: path
          name: roleId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly
      tags:
        - roles
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Patches a role.
      operationId: directory.roles.patch
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: Immutable ID of the role.
          in: path
          name: roleId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
      tags:
        - roles
    put:
      description: Updates a role.
      operationId: directory.roles.update
      parameters:
        - description: Immutable ID of the Google Workspace account.
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: Immutable ID of the role.
          in: path
          name: roleId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.rolemanagement
      tags:
        - roles
  "/admin/directory/v1/customers/{customerKey}":
    get:
      description: Retrieves a customer.
      operationId: directory.customers.get
      parameters:
        - description: Id of the customer to be retrieved
          in: path
          name: customerKey
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.customer
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.customer
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.customer.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.customer.readonly
      tags:
        - customers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Patches a customer.
      operationId: directory.customers.patch
      parameters:
        - description: Id of the customer to be updated
          in: path
          name: customerKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.customer
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.customer
      tags:
        - customers
    put:
      description: Updates a customer.
      operationId: directory.customers.update
      parameters:
        - description: Id of the customer to be updated
          in: path
          name: customerKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.customer
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.customer
      tags:
        - customers
  /admin/directory/v1/groups:
    get:
      description: Retrieves all groups of a domain or of a user given a userKey (paginated).
      operationId: directory.groups.list
      parameters:
        - description: The unique ID for the customer's Google Workspace account. In case of a multi-domain account, to fetch all groups for a customer, fill in this field instead of `domain`. You can also use the `my_customer` alias to represent your account's `customerId`. The `customerId` is also returned as part of the [Users](/admin-sdk/directory/v1/reference/users) resource. Either the `customer` or the `domain` parameter must be provided.
          in: query
          name: customer
          schema:
            type: string
        - description: The domain name. Use this field to get groups from only one domain. To return all domains for a customer account, use the `customer` query parameter instead.
          in: query
          name: domain
          schema:
            type: string
        - description: Maximum number of results to return. Max allowed value is 200.
          in: query
          name: maxResults
          schema:
            minimum: 1
            type: integer
        - description: Column to use for sorting results
          in: query
          name: orderBy
          schema:
            enum:
              - email
            type: string
        - description: Token to specify next page in the list
          in: query
          name: pageToken
          schema:
            type: string
        - description: 'Query string search. Should be of the form "". Complete documentation is at https: //developers.google.com/admin-sdk/directory/v1/guides/search-groups'
          in: query
          name: query
          schema:
            type: string
        - description: Whether to return results in ascending or descending order. Only of use when orderBy is also used
          in: query
          name: sortOrder
          schema:
            enum:
              - ASCENDING
              - DESCENDING
            type: string
        - description: Email or immutable ID of the user if only those groups are to be listed, the given user is a member of. If it's an ID, it should match with the ID of the user object.
          in: query
          name: userKey
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Groups"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group.readonly
      tags:
        - groups
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a group.
      operationId: directory.groups.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Group"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group
      tags:
        - groups
  "/admin/directory/v1/groups/{groupKey}":
    delete:
      description: Deletes a group.
      operationId: directory.groups.delete
      parameters:
        - description: Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
          in: path
          name: groupKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group
      tags:
        - groups
    get:
      description: Retrieves a group's properties.
      operationId: directory.groups.get
      parameters:
        - description: Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
          in: path
          name: groupKey
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group.readonly
      tags:
        - groups
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a group's properties. This method supports [patch semantics](/admin-sdk/directory/v1/guides/performance#patch).
      operationId: directory.groups.patch
      parameters:
        - description: Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
          in: path
          name: groupKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Group"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group
      tags:
        - groups
    put:
      description: Updates a group's properties.
      operationId: directory.groups.update
      parameters:
        - description: Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
          in: path
          name: groupKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Group"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group
      tags:
        - groups
  "/admin/directory/v1/groups/{groupKey}/aliases":
    get:
      description: Lists all aliases for a group.
      operationId: directory.groups.aliases.list
      parameters:
        - description: Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
          in: path
          name: groupKey
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Aliases"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group.readonly
      tags:
        - groups
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Adds an alias for the group.
      operationId: directory.groups.aliases.insert
      parameters:
        - description: Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
          in: path
          name: groupKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Alias"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alias"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group
      tags:
        - groups
  "/admin/directory/v1/groups/{groupKey}/aliases/{alias}":
    delete:
      description: Removes an alias.
      operationId: directory.groups.aliases.delete
      parameters:
        - description: Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
          in: path
          name: groupKey
          required: true
          schema:
            type: string
        - description: The alias to be removed
          in: path
          name: alias
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group
      tags:
        - groups
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/admin/directory/v1/groups/{groupKey}/hasMember/{memberKey}":
    get:
      description: Checks whether the given user is a member of the group. Membership can be direct or nested, but if nested, the `memberKey` and `groupKey` must be entities in the same domain or an `Invalid input` error is returned. To check for nested memberships that include entities outside of the group's domain, use the [`checkTransitiveMembership()`](https://cloud.google.com/identity/docs/reference/rest/v1/groups.memberships/checkTransitiveMembership) method in the Cloud Identity Groups API.
      operationId: directory.members.hasMember
      parameters:
        - description: Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
          in: path
          name: groupKey
          required: true
          schema:
            type: string
        - description: Identifies the user member in the API request. The value can be the user's primary email address, alias, or unique ID.
          in: path
          name: memberKey
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MembersHasMember"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group.member
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group.member
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group.member.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group.member.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group.readonly
      tags:
        - members
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/admin/directory/v1/groups/{groupKey}/members":
    get:
      description: Retrieves a paginated list of all members in a group.
      operationId: directory.members.list
      parameters:
        - description: Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
          in: path
          name: groupKey
          required: true
          schema:
            type: string
        - description: "Whether to list indirect memberships. Default: false."
          in: query
          name: includeDerivedMembership
          schema:
            type: boolean
        - description: Maximum number of results to return. Max allowed value is 200.
          in: query
          name: maxResults
          schema:
            minimum: 1
            type: integer
        - description: Token to specify next page in the list.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The `roles` query parameter allows you to retrieve group members by role. Allowed values are `OWNER`, `MANAGER`, and `MEMBER`.
          in: query
          name: roles
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Members"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group.member
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group.member
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group.member.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group.member.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group.readonly
      tags:
        - members
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Adds a user to the specified group.
      operationId: directory.members.insert
      parameters:
        - description: Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
          in: path
          name: groupKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Member"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Member"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group.member
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group.member
      tags:
        - members
  "/admin/directory/v1/groups/{groupKey}/members/{memberKey}":
    delete:
      description: Removes a member from a group.
      operationId: directory.members.delete
      parameters:
        - description: Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
          in: path
          name: groupKey
          required: true
          schema:
            type: string
        - description: Identifies the group member in the API request. A group member can be a user or another group. The value can be the member's (group or user) primary email address, alias, or unique ID.
          in: path
          name: memberKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group.member
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group.member
      tags:
        - members
    get:
      description: Retrieves a group member's properties.
      operationId: directory.members.get
      parameters:
        - description: Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
          in: path
          name: groupKey
          required: true
          schema:
            type: string
        - description: Identifies the group member in the API request. A group member can be a user or another group. The value can be the member's (group or user) primary email address, alias, or unique ID.
          in: path
          name: memberKey
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Member"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group.member
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group.member
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group.member.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group.member.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group.readonly
      tags:
        - members
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates the membership properties of a user in the specified group. This method supports [patch semantics](/admin-sdk/directory/v1/guides/performance#patch).
      operationId: directory.members.patch
      parameters:
        - description: Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
          in: path
          name: groupKey
          required: true
          schema:
            type: string
        - description: Identifies the group member in the API request. A group member can be a user or another group. The value can be the member's (group or user) primary email address, alias, or unique ID.
          in: path
          name: memberKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Member"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Member"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group.member
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group.member
      tags:
        - members
    put:
      description: Updates the membership of a user in the specified group.
      operationId: directory.members.update
      parameters:
        - description: Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
          in: path
          name: groupKey
          required: true
          schema:
            type: string
        - description: Identifies the group member in the API request. A group member can be a user or another group. The value can be the member's (group or user) primary email address, alias, or unique ID.
          in: path
          name: memberKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Member"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Member"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.group.member
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.group.member
      tags:
        - members
  /admin/directory/v1/users:
    get:
      description: Retrieves a paginated list of either deleted users or all users in a domain.
      operationId: directory.users.list
      parameters:
        - description: A comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when `projection=custom`.
          in: query
          name: customFieldMask
          schema:
            type: string
        - description: The unique ID for the customer's Google Workspace account. In case of a multi-domain account, to fetch all groups for a customer, fill this field instead of domain. You can also use the `my_customer` alias to represent your account's `customerId`. The `customerId` is also returned as part of the [Users resource](/admin-sdk/directory/v1/reference/users). Either the `customer` or the `domain` parameter must be provided.
          in: query
          name: customer
          schema:
            type: string
        - description: The domain name. Use this field to get groups from only one domain. To return all domains for a customer account, use the `customer` query parameter instead. Either the `customer` or the `domain` parameter must be provided.
          in: query
          name: domain
          schema:
            type: string
        - description: Event on which subscription is intended (if subscribing)
          in: query
          name: event
          schema:
            enum:
              - add
              - delete
              - makeAdmin
              - undelete
              - update
            type: string
        - description: Maximum number of results to return.
          in: query
          name: maxResults
          schema:
            maximum: 500
            minimum: 1
            type: integer
        - description: Property to use for sorting results.
          in: query
          name: orderBy
          schema:
            enum:
              - email
              - familyName
              - givenName
            type: string
        - description: Token to specify next page in the list
          in: query
          name: pageToken
          schema:
            type: string
        - description: What subset of fields to fetch for this user.
          in: query
          name: projection
          schema:
            enum:
              - basic
              - custom
              - full
            type: string
        - description: Query string for searching user fields. For more information on constructing user queries, see [Search for Users](/admin-sdk/directory/v1/guides/search-users).
          in: query
          name: query
          schema:
            type: string
        - description: "If set to `true`, retrieves the list of deleted users. (Default: `false`)"
          in: query
          name: showDeleted
          schema:
            type: string
        - description: Whether to return results in ascending or descending order, ignoring case.
          in: query
          name: sortOrder
          schema:
            enum:
              - ASCENDING
              - DESCENDING
            type: string
        - description: Whether to fetch the administrator-only or domain-wide public view of the user. For more information, see [Retrieve a user as a non-administrator](/admin-sdk/directory/v1/guides/manage-users#retrieve_users_non_admin).
          in: query
          name: viewType
          schema:
            enum:
              - admin_view
              - domain_public
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - users
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a user.
      operationId: directory.users.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user
      tags:
        - users
  /admin/directory/v1/users/watch:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Watches for changes in users list.
      operationId: directory.users.watch
      parameters:
        - description: Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.
          in: query
          name: customFieldMask
          schema:
            type: string
        - description: Immutable ID of the Google Workspace account. In case of multi-domain, to fetch all users for a customer, fill this field instead of domain.
          in: query
          name: customer
          schema:
            type: string
        - description: Name of the domain. Fill this field to get users from only this domain. To return all users in a multi-domain fill customer field instead."
          in: query
          name: domain
          schema:
            type: string
        - description: Events to watch for.
          in: query
          name: event
          schema:
            enum:
              - add
              - delete
              - makeAdmin
              - undelete
              - update
            type: string
        - description: Maximum number of results to return.
          in: query
          name: maxResults
          schema:
            maximum: 500
            minimum: 1
            type: integer
        - description: Column to use for sorting results
          in: query
          name: orderBy
          schema:
            enum:
              - email
              - familyName
              - givenName
            type: string
        - description: Token to specify next page in the list
          in: query
          name: pageToken
          schema:
            type: string
        - description: What subset of fields to fetch for this user.
          in: query
          name: projection
          schema:
            enum:
              - basic
              - custom
              - full
            type: string
        - description: 'Query string search. Should be of the form "". Complete documentation is at https: //developers.google.com/admin-sdk/directory/v1/guides/search-users'
          in: query
          name: query
          schema:
            type: string
        - description: "If set to true, retrieves the list of deleted users. (Default: false)"
          in: query
          name: showDeleted
          schema:
            type: string
        - description: Whether to return results in ascending or descending order.
          in: query
          name: sortOrder
          schema:
            enum:
              - ASCENDING
              - DESCENDING
            type: string
        - description: Whether to fetch the administrator-only or domain-wide public view of the user. For more information, see [Retrieve a user as a non-administrator](/admin-sdk/directory/v1/guides/manage-users#retrieve_users_non_admin).
          in: query
          name: viewType
          schema:
            enum:
              - admin_view
              - domain_public
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Channel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channel"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - users
  "/admin/directory/v1/users/{userKey}":
    delete:
      description: Deletes a user.
      operationId: directory.users.delete
      parameters:
        - description: Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user
      tags:
        - users
    get:
      description: Retrieves a user.
      operationId: directory.users.get
      parameters:
        - description: Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
        - description: A comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when `projection=custom`.
          in: query
          name: customFieldMask
          schema:
            type: string
        - description: What subset of fields to fetch for this user.
          in: query
          name: projection
          schema:
            enum:
              - basic
              - custom
              - full
            type: string
        - description: Whether to fetch the administrator-only or domain-wide public view of the user. For more information, see [Retrieve a user as a non-administrator](/admin-sdk/directory/v1/guides/manage-users#retrieve_users_non_admin).
          in: query
          name: viewType
          schema:
            enum:
              - admin_view
              - domain_public
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.readonly
      tags:
        - users
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a user using patch semantics. The update method should be used instead, since it also supports patch semantics and has better performance. This method is unable to clear fields that contain repeated objects (`addresses`, `phones`, etc). Use the update method instead.
      operationId: directory.users.patch
      parameters:
        - description: Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user
      tags:
        - users
    put:
      description: Updates a user. This method supports patch semantics, meaning you only need to include the fields you wish to update. Fields that are not present in the request will be preserved, and fields set to `null` will be cleared.
      operationId: directory.users.update
      parameters:
        - description: Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user
      tags:
        - users
  "/admin/directory/v1/users/{userKey}/aliases":
    get:
      description: Lists all aliases for a user.
      operationId: directory.users.aliases.list
      parameters:
        - description: Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
        - description: Events to watch for.
          in: query
          name: event
          schema:
            enum:
              - add
              - delete
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Aliases"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.alias
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.alias
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.alias.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.alias.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.readonly
      tags:
        - users
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Adds an alias.
      operationId: directory.users.aliases.insert
      parameters:
        - description: Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Alias"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alias"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.alias
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.alias
      tags:
        - users
  "/admin/directory/v1/users/{userKey}/aliases/watch":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Watches for changes in users list.
      operationId: directory.users.aliases.watch
      parameters:
        - description: Email or immutable ID of the user
          in: path
          name: userKey
          required: true
          schema:
            type: string
        - description: Events to watch for.
          in: query
          name: event
          schema:
            enum:
              - add
              - delete
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Channel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channel"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.alias
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.alias
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.alias.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.alias.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.readonly
      tags:
        - users
  "/admin/directory/v1/users/{userKey}/aliases/{alias}":
    delete:
      description: Removes an alias.
      operationId: directory.users.aliases.delete
      parameters:
        - description: Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
        - description: The alias to be removed.
          in: path
          name: alias
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.alias
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.alias
      tags:
        - users
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/admin/directory/v1/users/{userKey}/asps":
    get:
      description: Lists the ASPs issued by a user.
      operationId: directory.asps.list
      parameters:
        - description: Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Asps"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.security
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.security
      tags:
        - asps
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/admin/directory/v1/users/{userKey}/asps/{codeId}":
    delete:
      description: Deletes an ASP issued by a user.
      operationId: directory.asps.delete
      parameters:
        - description: Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
        - description: The unique ID of the ASP to be deleted.
          in: path
          name: codeId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.security
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.security
      tags:
        - asps
    get:
      description: Gets information about an ASP issued by a user.
      operationId: directory.asps.get
      parameters:
        - description: Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
        - description: The unique ID of the ASP.
          in: path
          name: codeId
          required: true
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Asp"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.security
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.security
      tags:
        - asps
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/admin/directory/v1/users/{userKey}/makeAdmin":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Makes a user a super administrator.
      operationId: directory.users.makeAdmin
      parameters:
        - description: Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserMakeAdmin"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user
      tags:
        - users
  "/admin/directory/v1/users/{userKey}/photos/thumbnail":
    delete:
      description: Removes the user's photo.
      operationId: directory.users.photos.delete
      parameters:
        - description: Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user
      tags:
        - users
    get:
      description: Retrieves the user's photo.
      operationId: directory.users.photos.get
      parameters:
        - description: Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPhoto"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.readonly
      tags:
        - users
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Adds a photo for the user. This method supports [patch semantics](/admin-sdk/directory/v1/guides/performance#patch).
      operationId: directory.users.photos.patch
      parameters:
        - description: Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPhoto"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPhoto"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user
      tags:
        - users
    put:
      description: Adds a photo for the user.
      operationId: directory.users.photos.update
      parameters:
        - description: Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPhoto"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPhoto"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user
      tags:
        - users
  "/admin/directory/v1/users/{userKey}/signOut":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Signs a user out of all web and device sessions and reset their sign-in cookies. User will have to sign in by authenticating again.
      operationId: directory.users.signOut
      parameters:
        - description: Identifies the target user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.security
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.security
      tags:
        - users
  "/admin/directory/v1/users/{userKey}/tokens":
    get:
      description: Returns the set of tokens specified user has issued to 3rd party applications.
      operationId: directory.tokens.list
      parameters:
        - description: Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tokens"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.security
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.security
      tags:
        - tokens
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/admin/directory/v1/users/{userKey}/tokens/{clientId}":
    delete:
      description: Deletes all access tokens issued by a user for an application.
      operationId: directory.tokens.delete
      parameters:
        - description: Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
        - description: The Client ID of the application the token is issued to.
          in: path
          name: clientId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.security
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.security
      tags:
        - tokens
    get:
      description: Gets information about an access token issued by a user.
      operationId: directory.tokens.get
      parameters:
        - description: Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
        - description: The Client ID of the application the token is issued to.
          in: path
          name: clientId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.security
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.security
      tags:
        - tokens
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/admin/directory/v1/users/{userKey}/twoStepVerification/turnOff":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Turns off 2-Step Verification for user.
      operationId: directory.twoStepVerification.turnOff
      parameters:
        - description: Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.security
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.security
      tags:
        - twoStepVerification
  "/admin/directory/v1/users/{userKey}/undelete":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Undeletes a deleted user.
      operationId: directory.users.undelete
      parameters:
        - description: The immutable id of the user
          in: path
          name: userKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUndelete"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user
      tags:
        - users
  "/admin/directory/v1/users/{userKey}/verificationCodes":
    get:
      description: Returns the current set of valid backup verification codes for the specified user.
      operationId: directory.verificationCodes.list
      parameters:
        - description: Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.
          in: path
          name: userKey
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationCodes"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.security
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.security
      tags:
        - verificationCodes
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/admin/directory/v1/users/{userKey}/verificationCodes/generate":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Generates new backup verification codes for the user.
      operationId: directory.verificationCodes.generate
      parameters:
        - description: Email or immutable ID of the user
          in: path
          name: userKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.security
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.security
      tags:
        - verificationCodes
  "/admin/directory/v1/users/{userKey}/verificationCodes/invalidate":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Invalidates the current backup verification codes for the user.
      operationId: directory.verificationCodes.invalidate
      parameters:
        - description: Email or immutable ID of the user
          in: path
          name: userKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.security
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.security
      tags:
        - verificationCodes
  "/admin/directory/v1/{name}":
    delete:
      description: Deletes a print server.
      operationId: admin.customers.chrome.printServers.delete
      parameters:
        - description: "Required. The name of the print server to be deleted. Format: `customers/{customer.id}/chrome/printServers/{print_server.id}`"
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.chrome.printers
          Oauth2c:
            - https://www.googleapis.com/auth/admin.chrome.printers
      tags:
        - customers
    get:
      description: Returns a print server's configuration.
      operationId: admin.customers.chrome.printServers.get
      parameters:
        - description: "Required. The [unique ID](https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers) of the customer's Google Workspace account. Format: `customers/{id}`"
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrintServer"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.chrome.printers
          Oauth2c:
            - https://www.googleapis.com/auth/admin.chrome.printers
        - Oauth2:
            - https://www.googleapis.com/auth/admin.chrome.printers.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.chrome.printers.readonly
      tags:
        - customers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a print server's configuration.
      operationId: admin.customers.chrome.printServers.patch
      parameters:
        - description: "Immutable. Resource name of the print server. Leave empty when creating. Format: `customers/{customer.id}/printServers/{print_server.id}`"
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The list of fields to update. Some fields are read-only and cannot be updated. Values for unspecified fields are patched.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrintServer"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrintServer"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.chrome.printers
          Oauth2c:
            - https://www.googleapis.com/auth/admin.chrome.printers
      tags:
        - customers
  "/admin/directory/v1/{parent}/chrome/printServers":
    get:
      description: Lists print server configurations.
      operationId: admin.customers.chrome.printServers.list
      parameters:
        - description: "Required. The [unique ID](https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers) of the customer's Google Workspace account. Format: `customers/{id}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Search query in [Common Expression Language syntax](https://github.com/google/cel-spec). Supported filters are `display_name`, `description`, and `uri`. Example: `printServer.displayName=='marketing-queue'`."
          in: query
          name: filter
          schema:
            type: string
        - description: Sort order for results. Supported values are `display_name`, `description`, or `create_time`. Default order is ascending, but descending order can be returned by appending "desc" to the `order_by` field. For instance, `orderBy=='description desc'` returns the print servers sorted by description in descending order.
          in: query
          name: orderBy
          schema:
            type: string
        - description: If `org_unit_id` is present in the request, only print servers owned or inherited by the organizational unit (OU) are returned. If the `PrintServer` resource's `org_unit_id` matches the one in the request, the OU owns the server. If `org_unit_id` is not specified in the request, all print servers are returned or filtered against.
          in: query
          name: orgUnitId
          schema:
            type: string
        - description: The maximum number of objects to return (default `100`, max `100`). The service might return fewer than this value.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A generated token to paginate results (the `next_page_token` from a previous call).
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPrintServersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.chrome.printers
          Oauth2c:
            - https://www.googleapis.com/auth/admin.chrome.printers
        - Oauth2:
            - https://www.googleapis.com/auth/admin.chrome.printers.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.chrome.printers.readonly
      tags:
        - customers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a print server.
      operationId: admin.customers.chrome.printServers.create
      parameters:
        - description: "Required. The [unique ID](https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers) of the customer's Google Workspace account. Format: `customers/{id}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrintServer"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrintServer"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.chrome.printers
          Oauth2c:
            - https://www.googleapis.com/auth/admin.chrome.printers
      tags:
        - customers
  "/admin/directory/v1/{parent}/chrome/printServers:batchCreatePrintServers":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates multiple print servers.
      operationId: admin.customers.chrome.printServers.batchCreatePrintServers
      parameters:
        - description: "Required. The [unique ID](https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers) of the customer's Google Workspace account. Format: `customers/{id}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchCreatePrintServersRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchCreatePrintServersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.chrome.printers
          Oauth2c:
            - https://www.googleapis.com/auth/admin.chrome.printers
      tags:
        - customers
  "/admin/directory/v1/{parent}/chrome/printServers:batchDeletePrintServers":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Deletes multiple print servers.
      operationId: admin.customers.chrome.printServers.batchDeletePrintServers
      parameters:
        - description: "Required. The [unique ID](https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers) of the customer's Google Workspace account. Format: `customers/{customer.id}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDeletePrintServersRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchDeletePrintServersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.chrome.printers
          Oauth2c:
            - https://www.googleapis.com/auth/admin.chrome.printers
      tags:
        - customers
  "/admin/directory/v1/{parent}/chrome/printers":
    get:
      description: List printers configs.
      operationId: admin.customers.chrome.printers.list
      parameters:
        - description: "Required. The name of the customer who owns this collection of printers. Format: customers/{customer_id}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Search query. Search syntax is shared between this api and Admin Console printers pages.
          in: query
          name: filter
          schema:
            type: string
        - description: The order to sort results by. Must be one of display_name, description, make_and_model, or create_time. Default order is ascending, but descending order can be returned by appending "desc" to the order_by field. For instance, "description desc" will return the printers sorted by description in descending order.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Organization Unit that we want to list the printers for. When org_unit is not present in the request then all printers of the customer are returned (or filtered). When org_unit is present in the request then only printers available to this OU will be returned (owned or inherited). You may see if printer is owned or inherited for this OU by looking at Printer.org_unit_id.
          in: query
          name: orgUnitId
          schema:
            type: string
        - description: The maximum number of objects to return. The service may return fewer than this value.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous call.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPrintersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.chrome.printers
          Oauth2c:
            - https://www.googleapis.com/auth/admin.chrome.printers
        - Oauth2:
            - https://www.googleapis.com/auth/admin.chrome.printers.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.chrome.printers.readonly
      tags:
        - customers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a printer under given Organization Unit.
      operationId: admin.customers.chrome.printers.create
      parameters:
        - description: "Required. The name of the customer. Format: customers/{customer_id}"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Printer"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Printer"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.chrome.printers
          Oauth2c:
            - https://www.googleapis.com/auth/admin.chrome.printers
      tags:
        - customers
  "/admin/directory/v1/{parent}/chrome/printers:batchCreatePrinters":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates printers under given Organization Unit.
      operationId: admin.customers.chrome.printers.batchCreatePrinters
      parameters:
        - description: "Required. The name of the customer. Format: customers/{customer_id}"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchCreatePrintersRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchCreatePrintersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.chrome.printers
          Oauth2c:
            - https://www.googleapis.com/auth/admin.chrome.printers
      tags:
        - customers
  "/admin/directory/v1/{parent}/chrome/printers:batchDeletePrinters":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Deletes printers in batch.
      operationId: admin.customers.chrome.printers.batchDeletePrinters
      parameters:
        - description: "Required. The name of the customer. Format: customers/{customer_id}"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDeletePrintersRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchDeletePrintersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.chrome.printers
          Oauth2c:
            - https://www.googleapis.com/auth/admin.chrome.printers
      tags:
        - customers
  "/admin/directory/v1/{parent}/chrome/printers:listPrinterModels":
    get:
      description: Lists the supported printer models.
      operationId: admin.customers.chrome.printers.listPrinterModels
      parameters:
        - description: "Required. The name of the customer who owns this collection of printers. Format: customers/{customer_id}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'Filer to list only models by a given manufacturer in format: "manufacturer:Brother". Search syntax is shared between this api and Admin Console printers pages.'
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of objects to return. The service may return fewer than this value.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous call.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPrinterModelsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.chrome.printers
          Oauth2c:
            - https://www.googleapis.com/auth/admin.chrome.printers
        - Oauth2:
            - https://www.googleapis.com/auth/admin.chrome.printers.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.chrome.printers.readonly
      tags:
        - customers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /admin/directory_v1/channels/stop:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Stops watching resources through this channel.
      operationId: admin.channels.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Channel"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.alias
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.alias
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.alias.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.alias.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/admin.directory.user.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.directory.user.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - channels
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    Alias:
      description: JSON template for Alias object in Directory API.
      properties:
        alias:
          type: string
        etag:
          type: string
        id:
          type: string
        kind:
          default: admin#directory#alias
          type: string
        primaryEmail:
          type: string
      type: object
    Aliases:
      description: JSON response template to list aliases in Directory API.
      properties:
        aliases:
          items: {}
          type: array
        etag:
          type: string
        kind:
          default: admin#directory#aliases
          type: string
      type: object
    Asp:
      description: An application-specific password (ASP) is used with applications that do not accept a verification code when logging into the application on certain devices. The ASP access code is used instead of the login and password you commonly use when accessing an application through a browser. For more information about ASPs and how to create one, see the [help center](https://support.google.com/a/answer/2537800#asp).
      properties:
        codeId:
          description: The unique ID of the ASP.
          format: int32
          type: integer
        creationTime:
          description: The time when the ASP was created. Expressed in [Unix time](https://en.wikipedia.org/wiki/Epoch_time) format.
          format: int64
          type: string
        etag:
          description: ETag of the ASP.
          type: string
        kind:
          default: admin#directory#asp
          description: The type of the API resource. This is always `admin#directory#asp`.
          type: string
        lastTimeUsed:
          description: The time when the ASP was last used. Expressed in [Unix time](https://en.wikipedia.org/wiki/Epoch_time) format.
          format: int64
          type: string
        name:
          description: The name of the application that the user, represented by their `userId`, entered when the ASP was created.
          type: string
        userKey:
          description: The unique ID of the user who issued the ASP.
          type: string
      type: object
    Asps:
      properties:
        etag:
          description: ETag of the resource.
          type: string
        items:
          description: A list of ASP resources.
          items:
            $ref: "#/components/schemas/Asp"
          type: array
        kind:
          default: admin#directory#aspList
          description: The type of the API resource. This is always `admin#directory#aspList`.
          type: string
      type: object
    AuxiliaryMessage:
      description: 'Auxiliary message about issues with printers or settings. Example: {message_type:AUXILIARY_MESSAGE_WARNING, field_mask:make_and_model, message:"Given printer is invalid or no longer supported."}'
      properties:
        auxiliaryMessage:
          description: 'Human readable message in English. Example: "Given printer is invalid or no longer supported."'
          type: string
        fieldMask:
          description: Field that this message concerns.
          format: google-fieldmask
          type: string
        severity:
          description: Message severity
          enum:
            - SEVERITY_UNSPECIFIED
            - SEVERITY_INFO
            - SEVERITY_WARNING
            - SEVERITY_ERROR
          type: string
      type: object
    BatchCreatePrintServersRequest:
      description: Request to add multiple new print servers in a batch.
      properties:
        requests:
          description: Required. A list of `PrintServer` resources to be created (max `50` per batch).
          items:
            $ref: "#/components/schemas/CreatePrintServerRequest"
          type: array
      type: object
    BatchCreatePrintServersResponse:
      properties:
        failures:
          description: A list of create failures. `PrintServer` IDs are not populated, as print servers were not created.
          items:
            $ref: "#/components/schemas/PrintServerFailureInfo"
          type: array
        printServers:
          description: A list of successfully created print servers with their IDs populated.
          items:
            $ref: "#/components/schemas/PrintServer"
          type: array
      type: object
    BatchCreatePrintersRequest:
      description: Request for adding new printers in batch.
      properties:
        requests:
          description: A list of Printers to be created. Max 50 at a time.
          items:
            $ref: "#/components/schemas/CreatePrinterRequest"
          type: array
      type: object
    BatchCreatePrintersResponse:
      description: Response for adding new printers in batch.
      properties:
        failures:
          description: A list of create failures. Printer IDs are not populated, as printer were not created.
          items:
            $ref: "#/components/schemas/FailureInfo"
          type: array
        printers:
          description: A list of successfully created printers with their IDs populated.
          items:
            $ref: "#/components/schemas/Printer"
          type: array
      type: object
    BatchDeletePrintServersRequest:
      description: Request to delete multiple existing print servers in a batch.
      properties:
        printServerIds:
          description: A list of print server IDs that should be deleted (max `100` per batch).
          items:
            type: string
          type: array
      type: object
    BatchDeletePrintServersResponse:
      properties:
        failedPrintServers:
          description: A list of update failures.
          items:
            $ref: "#/components/schemas/PrintServerFailureInfo"
          type: array
        printServerIds:
          description: A list of print server IDs that were successfully deleted.
          items:
            type: string
          type: array
      type: object
    BatchDeletePrintersRequest:
      description: Request for deleting existing printers in batch.
      properties:
        printerIds:
          description: A list of Printer.id that should be deleted. Max 100 at a time.
          items:
            type: string
          type: array
      type: object
    BatchDeletePrintersResponse:
      description: Response for deleting existing printers in batch.
      properties:
        failedPrinters:
          description: A list of update failures.
          items:
            $ref: "#/components/schemas/FailureInfo"
          type: array
        printerIds:
          description: A list of Printer.id that were successfully deleted.
          items:
            type: string
          type: array
      type: object
    Building:
      description: "Public API: Resources.buildings"
      properties:
        address:
          $ref: "#/components/schemas/BuildingAddress"
          description: The postal address of the building. See [`PostalAddress`](/my-business/reference/rest/v4/PostalAddress) for details. Note that only a single address line and region code are required.
        buildingId:
          description: Unique identifier for the building. The maximum length is 100 characters.
          type: string
        buildingName:
          description: The building name as seen by users in Calendar. Must be unique for the customer. For example, "NYC-CHEL". The maximum length is 100 characters.
          type: string
        coordinates:
          $ref: "#/components/schemas/BuildingCoordinates"
          description: The geographic coordinates of the center of the building, expressed as latitude and longitude in decimal degrees.
        description:
          description: A brief description of the building. For example, "Chelsea Market".
          type: string
        etags:
          description: ETag of the resource.
          type: string
        floorNames:
          description: The display names for all floors in this building. The floors are expected to be sorted in ascending order, from lowest floor to highest floor. For example, ["B2", "B1", "L", "1", "2", "2M", "3", "PH"] Must contain at least one entry.
          items:
            type: string
          type: array
        kind:
          default: admin#directory#resources#buildings#Building
          description: Kind of resource this is.
          type: string
      type: object
    BuildingAddress:
      description: "Public API: Resources.buildings"
      properties:
        addressLines:
          description: Unstructured address lines describing the lower levels of an address.
          items:
            type: string
          type: array
        administrativeArea:
          description: Optional. Highest administrative subdivision which is used for postal addresses of a country or region.
          type: string
        languageCode:
          description: Optional. BCP-47 language code of the contents of this address (if known).
          type: string
        locality:
          description: "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use addressLines."
          type: string
        postalCode:
          description: Optional. Postal code of the address.
          type: string
        regionCode:
          description: Required. CLDR region code of the country/region of the address.
          type: string
        sublocality:
          description: Optional. Sublocality of the address.
          type: string
      type: object
    BuildingCoordinates:
      description: "Public API: Resources.buildings"
      properties:
        latitude:
          description: Latitude in decimal degrees.
          format: double
          type: number
        longitude:
          description: Longitude in decimal degrees.
          format: double
          type: number
      type: object
    Buildings:
      description: "Public API: Resources.buildings"
      properties:
        buildings:
          description: The Buildings in this page of results.
          items:
            $ref: "#/components/schemas/Building"
          type: array
        etag:
          description: ETag of the resource.
          type: string
        kind:
          default: admin#directory#resources#buildings#buildingsList
          description: Kind of resource this is.
          type: string
        nextPageToken:
          description: The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
          type: string
      type: object
    CalendarResource:
      description: "Public API: Resources.calendars"
      properties:
        buildingId:
          description: Unique ID for the building a resource is located in.
          type: string
        capacity:
          description: Capacity of a resource, number of seats in a room.
          format: int32
          type: integer
        etags:
          description: ETag of the resource.
          type: string
        featureInstances:
          description: Instances of features for the calendar resource.
        floorName:
          description: Name of the floor a resource is located on.
          type: string
        floorSection:
          description: Name of the section within a floor a resource is located in.
          type: string
        generatedResourceName:
          description: The read-only auto-generated name of the calendar resource which includes metadata about the resource such as building name, floor, capacity, etc. For example, "NYC-2-Training Room 1A (16)".
          type: string
        kind:
          default: admin#directory#resources#calendars#CalendarResource
          description: The type of the resource. For calendar resources, the value is `admin#directory#resources#calendars#CalendarResource`.
          type: string
        resourceCategory:
          description: The category of the calendar resource. Either CONFERENCE_ROOM or OTHER. Legacy data is set to CATEGORY_UNKNOWN.
          type: string
        resourceDescription:
          description: Description of the resource, visible only to admins.
          type: string
        resourceEmail:
          description: The read-only email for the calendar resource. Generated as part of creating a new calendar resource.
          type: string
        resourceId:
          description: The unique ID for the calendar resource.
          type: string
        resourceName:
          description: The name of the calendar resource. For example, "Training Room 1A".
          type: string
        resourceType:
          description: The type of the calendar resource, intended for non-room resources.
          type: string
        userVisibleDescription:
          description: Description of the resource, visible to users and admins.
          type: string
      type: object
    CalendarResources:
      description: "Public API: Resources.calendars"
      properties:
        etag:
          description: ETag of the resource.
          type: string
        items:
          description: The CalendarResources in this page of results.
          items:
            $ref: "#/components/schemas/CalendarResource"
          type: array
        kind:
          default: admin#directory#resources#calendars#calendarResourcesList
          description: Identifies this as a collection of CalendarResources. This is always `admin#directory#resources#calendars#calendarResourcesList`.
          type: string
        nextPageToken:
          description: The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
          type: string
      type: object
    Channel:
      description: An notification channel used to watch for resource changes.
      properties:
        address:
          description: The address where notifications are delivered for this channel.
          type: string
        expiration:
          description: Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.
          format: int64
          type: string
        id:
          description: A UUID or similar unique string that identifies this channel.
          type: string
        kind:
          default: api#channel
          description: Identifies this as a notification channel used to watch for changes to a resource, which is `api#channel`.
          type: string
        params:
          additionalProperties:
            type: string
          description: Additional parameters controlling delivery channel behavior. Optional. For example, `params.ttl` specifies the time-to-live in seconds for the notification channel, where the default is 2 hours and the maximum TTL is 2 days.
          type: object
        payload:
          description: A Boolean value to indicate whether payload is wanted. Optional.
          type: boolean
        resourceId:
          description: An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.
          type: string
        resourceUri:
          description: A version-specific identifier for the watched resource.
          type: string
        token:
          description: An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.
          type: string
        type:
          description: The type of delivery mechanism used for this channel.
          type: string
      type: object
    ChromeOsDevice:
      description: Google Chrome devices run on the [Chrome OS](https://support.google.com/chromeos). For more information about common API tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-chrome-devices).
      properties:
        activeTimeRanges:
          description: A list of active time ranges (Read-only).
          items:
            properties:
              activeTime:
                description: Duration of usage in milliseconds.
                format: int32
                type: integer
              date:
                description: Date of usage
                format: date
                type: string
            type: object
          type: array
        annotatedAssetId:
          description: The asset identifier as noted by an administrator or specified during enrollment.
          type: string
        annotatedLocation:
          description: The address or location of the device as noted by the administrator. Maximum length is `200` characters. Empty values are allowed.
          type: string
        annotatedUser:
          description: The user of the device as noted by the administrator. Maximum length is 100 characters. Empty values are allowed.
          type: string
        autoUpdateExpiration:
          description: (Read-only) The timestamp after which the device will stop receiving Chrome updates or support
          format: int64
          type: string
        bootMode:
          description: "The boot mode for the device. The possible values are: * `Verified`: The device is running a valid version of the Chrome OS. * `Dev`: The devices's developer hardware switch is enabled. When booted, the device has a command line shell. For an example of a developer switch, see the [Chromebook developer information](https://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices/samsung-series-5-chromebook#TOC-Developer-switch)."
          type: string
        cpuInfo:
          description: Information regarding CPU specs in the device.
          items:
            description: CPU specs for a CPU.
            properties:
              architecture:
                description: The CPU architecture.
                type: string
              logicalCpus:
                description: Information for the Logical CPUs
                items:
                  description: Status of a single logical CPU.
                  properties:
                    cStates:
                      description: C-States indicate the power consumption state of the CPU. For more information look at documentation published by the CPU maker.
                      items:
                        description: Status of a single C-state. C-states are various modes the CPU can transition to in order to use more or less power.
                        properties:
                          displayName:
                            description: Name of the state.
                            type: string
                          sessionDuration:
                            description: Time spent in the state since the last reboot.
                            format: google-duration
                            type: string
                        type: object
                      type: array
                    currentScalingFrequencyKhz:
                      description: Current frequency the CPU is running at.
                      format: int32
                      type: integer
                    idleDuration:
                      description: Idle time since last boot.
                      format: google-duration
                      type: string
                    maxScalingFrequencyKhz:
                      description: Maximum frequency the CPU is allowed to run at, by policy.
                      format: int32
                      type: integer
                  type: object
                type: array
              maxClockSpeedKhz:
                description: The max CPU clock speed in kHz.
                format: int32
                type: integer
              model:
                description: The CPU model name.
                type: string
            type: object
          type: array
        cpuStatusReports:
          description: Reports of CPU utilization and temperature (Read-only)
          items:
            properties:
              cpuTemperatureInfo:
                description: A list of CPU temperature samples.
                items:
                  properties:
                    label:
                      description: CPU label
                      type: string
                    temperature:
                      description: Temperature in Celsius degrees.
                      format: int32
                      type: integer
                  type: object
                type: array
              cpuUtilizationPercentageInfo:
                items:
                  format: int32
                  type: integer
                type: array
              reportTime:
                description: Date and time the report was received.
                format: date-time
                type: string
            type: object
          type: array
        deviceFiles:
          description: A list of device files to download (Read-only)
          items:
            properties:
              createTime:
                description: Date and time the file was created
                format: date-time
                type: string
              downloadUrl:
                description: File download URL
                type: string
              name:
                description: File name
                type: string
              type:
                description: File type
                type: string
            type: object
          type: array
        deviceId:
          description: The unique ID of the Chrome device.
          type: string
        diskVolumeReports:
          description: Reports of disk space and other info about mounted/connected volumes.
          items:
            properties:
              volumeInfo:
                description: Disk volumes
                items:
                  properties:
                    storageFree:
                      description: Free disk space [in bytes]
                      format: int64
                      type: string
                    storageTotal:
                      description: Total disk space [in bytes]
                      format: int64
                      type: string
                    volumeId:
                      description: Volume id
                      type: string
                  type: object
                type: array
            type: object
          type: array
        dockMacAddress:
          description: (Read-only) Built-in MAC address for the docking station that the device connected to. Factory sets Media access control address (MAC address) assigned for use by a dock. It is reserved specifically for MAC pass through device policy. The format is twelve (12) hexadecimal digits without any delimiter (uppercase letters). This is only relevant for some devices.
          type: string
        etag:
          description: ETag of the resource.
          type: string
        ethernetMacAddress:
          description: The device's MAC address on the ethernet network interface.
          type: string
        ethernetMacAddress0:
          description: (Read-only) MAC address used by the Chromebook’s internal ethernet port, and for onboard network (ethernet) interface. The format is twelve (12) hexadecimal digits without any delimiter (uppercase letters). This is only relevant for some devices.
          type: string
        firmwareVersion:
          description: The Chrome device's firmware version.
          type: string
        firstEnrollmentTime:
          description: Date and time for the first time the device was enrolled.
          type: string
        kind:
          default: admin#directory#chromeosdevice
          description: The type of resource. For the Chromeosdevices resource, the value is `admin#directory#chromeosdevice`.
          type: string
        lastEnrollmentTime:
          description: Date and time the device was last enrolled (Read-only)
          format: date-time
          type: string
        lastKnownNetwork:
          description: Contains last known network (Read-only)
          items:
            description: Information for an ip address.
            properties:
              ipAddress:
                description: The IP address.
                type: string
              wanIpAddress:
                description: The WAN IP address.
                type: string
            type: object
          type: array
        lastSync:
          description: Date and time the device was last synchronized with the policy settings in the G Suite administrator control panel (Read-only)
          format: date-time
          type: string
        macAddress:
          description: The device's wireless MAC address. If the device does not have this information, it is not included in the response.
          type: string
        manufactureDate:
          description: (Read-only) The date the device was manufactured in yyyy-mm-dd format.
          type: string
        meid:
          description: The Mobile Equipment Identifier (MEID) or the International Mobile Equipment Identity (IMEI) for the 3G mobile card in a mobile device. A MEID/IMEI is typically used when adding a device to a wireless carrier's post-pay service plan. If the device does not have this information, this property is not included in the response. For more information on how to export a MEID/IMEI list, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-chrome-devices.html#export_meid).
          type: string
        model:
          description: The device's model information. If the device does not have this information, this property is not included in the response.
          type: string
        notes:
          description: Notes about this device added by the administrator. This property can be [searched](https://support.google.com/chrome/a/answer/1698333) with the [list](/admin-sdk/directory/v1/reference/chromeosdevices/list) method's `query` parameter. Maximum length is 500 characters. Empty values are allowed.
          type: string
        orderNumber:
          description: The device's order number. Only devices directly purchased from Google have an order number.
          type: string
        orgUnitId:
          description: The unique ID of the organizational unit. orgUnitPath is the human readable version of orgUnitId. While orgUnitPath may change by renaming an organizational unit within the path, orgUnitId is unchangeable for one organizational unit. This property can be [updated](/admin-sdk/directory/v1/guides/manage-chrome-devices#move_chrome_devices_to_ou) using the API. For more information about how to create an organizational structure for your device, see the [administration help center](https://support.google.com/a/answer/182433).
          type: string
        orgUnitPath:
          description: The full parent path with the organizational unit's name associated with the device. Path names are case insensitive. If the parent organizational unit is the top-level organization, it is represented as a forward slash, `/`. This property can be [updated](/admin-sdk/directory/v1/guides/manage-chrome-devices#move_chrome_devices_to_ou) using the API. For more information about how to create an organizational structure for your device, see the [administration help center](https://support.google.com/a/answer/182433).
          type: string
        osUpdateStatus:
          $ref: "#/components/schemas/OsUpdateStatus"
          description: The status of the OS updates for the device.
        osVersion:
          description: The Chrome device's operating system version.
          type: string
        platformVersion:
          description: The Chrome device's platform version.
          type: string
        recentUsers:
          description: A list of recent device users, in descending order, by last login time.
          items:
            description: A list of recent device users, in descending order, by last login time.
            properties:
              email:
                description: The user's email address. This is only present if the user type is `USER_TYPE_MANAGED`.
                type: string
              type:
                description: The type of the user.
                type: string
            type: object
          type: array
        screenshotFiles:
          description: A list of screenshot files to download. Type is always "SCREENSHOT_FILE". (Read-only)
          items:
            properties:
              createTime:
                description: Date and time the file was created
                format: date-time
                type: string
              downloadUrl:
                description: File download URL
                type: string
              name:
                description: File name
                type: string
              type:
                description: File type
                type: string
            type: object
          type: array
        serialNumber:
          description: The Chrome device serial number entered when the device was enabled. This value is the same as the Admin console's *Serial Number* in the *Chrome OS Devices* tab.
          type: string
        status:
          description: The status of the device.
          type: string
        supportEndDate:
          description: Final date the device will be supported (Read-only)
          format: date-time
          type: string
        systemRamFreeReports:
          description: Reports of amounts of available RAM memory (Read-only)
          items:
            properties:
              reportTime:
                description: Date and time the report was received.
                format: date-time
                type: string
              systemRamFreeInfo:
                items:
                  format: int64
                  type: string
                type: array
            type: object
          type: array
        systemRamTotal:
          description: Total RAM on the device [in bytes] (Read-only)
          format: int64
          type: string
        tpmVersionInfo:
          description: Trusted Platform Module (TPM) (Read-only)
          properties:
            family:
              description: 'TPM family. We use the TPM 2.0 style encoding, e.g.: TPM 1.2: "1.2" -> 312e3200 TPM 2.0: "2.0" -> 322e3000'
              type: string
            firmwareVersion:
              description: TPM firmware version.
              type: string
            manufacturer:
              description: TPM manufacturer code.
              type: string
            specLevel:
              description: TPM specification level. See Library Specification for TPM 2.0 and Main Specification for TPM 1.2.
              type: string
            tpmModel:
              description: TPM model number.
              type: string
            vendorSpecific:
              description: Vendor-specific information such as Vendor ID.
              type: string
          type: object
        willAutoRenew:
          description: Determines if the device will auto renew its support after the support end date. This is a read-only property.
          type: boolean
      type: object
    ChromeOsDeviceAction:
      description: Data about an update to the status of a Chrome OS device.
      properties:
        action:
          description: Action to be taken on the Chrome OS device.
          type: string
        deprovisionReason:
          description: "Only used when the action is `deprovision`. With the `deprovision` action, this field is required. *Note*: The deprovision reason is audited because it might have implications on licenses for perpetual subscription customers."
          type: string
      type: object
    ChromeOsDevices:
      properties:
        chromeosdevices:
          description: A list of Chrome OS Device objects.
          items:
            $ref: "#/components/schemas/ChromeOsDevice"
          type: array
        etag:
          description: ETag of the resource.
          type: string
        kind:
          default: admin#directory#chromeosdevices
          description: Kind of resource this is.
          type: string
        nextPageToken:
          description: Token used to access the next page of this result. To access the next page, use this token's value in the `pageToken` query string of this request.
          type: string
      type: object
    ChromeOsMoveDevicesToOu:
      properties:
        deviceIds:
          description: Chrome OS devices to be moved to OU
          items:
            type: string
          type: array
      type: object
    CreatePrintServerRequest:
      description: Request for adding a new print server.
      properties:
        parent:
          description: "Required. The [unique ID](https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers) of the customer's Google Workspace account. Format: `customers/{id}`"
          type: string
        printServer:
          $ref: "#/components/schemas/PrintServer"
          description: Required. A print server to create. If you want to place the print server under a specific organizational unit (OU), then populate the `org_unit_id`. Otherwise the print server is created under the root OU. The `org_unit_id` can be retrieved using the [Directory API](https://developers.google.com/admin-sdk/directory/v1/guides/manage-org-units).
      type: object
    CreatePrinterRequest:
      description: Request for adding a new printer.
      properties:
        parent:
          description: "Required. The name of the customer. Format: customers/{customer_id}"
          type: string
        printer:
          $ref: "#/components/schemas/Printer"
          description: Required. A printer to create. If you want to place the printer under particular OU then populate printer.org_unit_id filed. Otherwise the printer will be placed under root OU.
      type: object
    Customer:
      properties:
        alternateEmail:
          description: The customer's secondary contact email address. This email address cannot be on the same domain as the `customerDomain`
          type: string
        customerCreationTime:
          description: The customer's creation time (Readonly)
          format: date-time
          type: string
        customerDomain:
          description: The customer's primary domain name string. Do not include the `www` prefix when creating a new customer.
          type: string
        etag:
          description: ETag of the resource.
          type: string
        id:
          description: The unique ID for the customer's Google Workspace account. (Readonly)
          type: string
        kind:
          default: admin#directory#customer
          description: "Identifies the resource as a customer. Value: `admin#directory#customer`"
          type: string
        language:
          description: The customer's ISO 639-2 language code. See the [Language Codes](/admin-sdk/directory/v1/languages) page for the list of supported codes. Valid language codes outside the supported set will be accepted by the API but may lead to unexpected behavior. The default value is `en`.
          type: string
        phoneNumber:
          description: The customer's contact phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format.
          type: string
        postalAddress:
          $ref: "#/components/schemas/CustomerPostalAddress"
          description: The customer's postal address information.
      type: object
    CustomerPostalAddress:
      properties:
        addressLine1:
          description: A customer's physical address. The address can be composed of one to three lines.
          type: string
        addressLine2:
          description: Address line 2 of the address.
          type: string
        addressLine3:
          description: Address line 3 of the address.
          type: string
        contactName:
          description: The customer contact's name.
          type: string
        countryCode:
          description: This is a required property. For `countryCode` information see the [ISO 3166 country code elements](https://www.iso.org/iso/country_codes.htm).
          type: string
        locality:
          description: Name of the locality. An example of a locality value is the city of `San Francisco`.
          type: string
        organizationName:
          description: The company or company division name.
          type: string
        postalCode:
          description: "The postal code. A postalCode example is a postal zip code such as `10009`. This is in accordance with - http: //portablecontacts.net/draft-spec.html#address_element."
          type: string
        region:
          description: Name of the region. An example of a region value is `NY` for the state of New York.
          type: string
      type: object
    DirectoryChromeosdevicesCommand:
      description: Information regarding a command that was issued to a device.
      properties:
        commandExpireTime:
          description: The time at which the command will expire. If the device doesn't execute the command within this time the command will become expired.
          format: google-datetime
          type: string
        commandId:
          description: Unique ID of a device command.
          format: int64
          type: string
        commandResult:
          $ref: "#/components/schemas/DirectoryChromeosdevicesCommandResult"
          description: The result of the command execution.
        issueTime:
          description: The timestamp when the command was issued by the admin.
          format: google-datetime
          type: string
        payload:
          description: The payload that the command specified, if any.
          type: string
        state:
          description: Indicates the command state.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - EXPIRED
            - CANCELLED
            - SENT_TO_CLIENT
            - ACKED_BY_CLIENT
            - EXECUTED_BY_CLIENT
          type: string
        type:
          description: The type of the command.
          enum:
            - COMMAND_TYPE_UNSPECIFIED
            - REBOOT
            - TAKE_A_SCREENSHOT
            - SET_VOLUME
            - WIPE_USERS
            - REMOTE_POWERWASH
          type: string
      type: object
    DirectoryChromeosdevicesCommandResult:
      description: The result of executing a command.
      properties:
        errorMessage:
          description: The error message with a short explanation as to why the command failed. Only present if the command failed.
          type: string
        executeTime:
          description: The time at which the command was executed or failed to execute.
          format: google-datetime
          type: string
        result:
          description: The result of the command.
          enum:
            - COMMAND_RESULT_TYPE_UNSPECIFIED
            - IGNORED
            - FAILURE
            - SUCCESS
          type: string
      type: object
    DirectoryChromeosdevicesIssueCommandRequest:
      description: A request for issuing a command.
      properties:
        commandType:
          description: The type of command.
          enum:
            - COMMAND_TYPE_UNSPECIFIED
            - REBOOT
            - TAKE_A_SCREENSHOT
            - SET_VOLUME
            - WIPE_USERS
            - REMOTE_POWERWASH
          type: string
        payload:
          description: 'The payload for the command, provide it only if command supports it. The following commands support adding payload: - SET_VOLUME: Payload is a stringified JSON object in the form: { "volume": 50 }. The volume has to be an integer in the range [0,100].'
          type: string
      type: object
    DirectoryChromeosdevicesIssueCommandResponse:
      description: A response for issuing a command.
      properties:
        commandId:
          description: The unique ID of the issued command, used to retrieve the command status.
          format: int64
          type: string
      type: object
    DomainAlias:
      properties:
        creationTime:
          description: The creation time of the domain alias. (Read-only).
          format: int64
          type: string
        domainAliasName:
          description: The domain alias name.
          type: string
        etag:
          description: ETag of the resource.
          type: string
        kind:
          default: admin#directory#domainAlias
          description: Kind of resource this is.
          type: string
        parentDomainName:
          description: The parent domain name that the domain alias is associated with. This can either be a primary or secondary domain name within a customer.
          type: string
        verified:
          description: Indicates the verification state of a domain alias. (Read-only)
          type: boolean
      type: object
    DomainAliases:
      properties:
        domainAliases:
          description: A list of domain alias objects.
          items:
            $ref: "#/components/schemas/DomainAlias"
          type: array
        etag:
          description: ETag of the resource.
          type: string
        kind:
          default: admin#directory#domainAliases
          description: Kind of resource this is.
          type: string
      type: object
    Domains:
      properties:
        creationTime:
          description: Creation time of the domain. Expressed in [Unix time](https://en.wikipedia.org/wiki/Epoch_time) format. (Read-only).
          format: int64
          type: string
        domainAliases:
          description: A list of domain alias objects. (Read-only)
          items:
            $ref: "#/components/schemas/DomainAlias"
          type: array
        domainName:
          description: The domain name of the customer.
          type: string
        etag:
          description: ETag of the resource.
          type: string
        isPrimary:
          description: Indicates if the domain is a primary domain (Read-only).
          type: boolean
        kind:
          default: admin#directory#domain
          description: Kind of resource this is.
          type: string
        verified:
          description: Indicates the verification state of a domain. (Read-only).
          type: boolean
      type: object
    Domains2:
      properties:
        domains:
          description: A list of domain objects.
          items:
            $ref: "#/components/schemas/Domains"
          type: array
        etag:
          description: ETag of the resource.
          type: string
        kind:
          default: admin#directory#domains
          description: Kind of resource this is.
          type: string
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    FailureInfo:
      description: Info about failures
      properties:
        errorCode:
          description: Canonical code for why the update failed to apply.
          enum:
            - OK
            - CANCELLED
            - UNKNOWN
            - INVALID_ARGUMENT
            - DEADLINE_EXCEEDED
            - NOT_FOUND
            - ALREADY_EXISTS
            - PERMISSION_DENIED
            - UNAUTHENTICATED
            - RESOURCE_EXHAUSTED
            - FAILED_PRECONDITION
            - ABORTED
            - OUT_OF_RANGE
            - UNIMPLEMENTED
            - INTERNAL
            - UNAVAILABLE
            - DATA_LOSS
          type: string
        errorMessage:
          description: Failure reason message.
          type: string
        printer:
          $ref: "#/components/schemas/Printer"
          description: Failed printer.
        printerId:
          description: Id of a failed printer.
          type: string
      type: object
    Feature:
      description: JSON template for Feature object in Directory API.
      properties:
        etags:
          description: ETag of the resource.
          type: string
        kind:
          default: admin#directory#resources#features#Feature
          description: Kind of resource this is.
          type: string
        name:
          description: The name of the feature.
          type: string
      type: object
    FeatureInstance:
      description: JSON template for a feature instance.
      properties:
        feature:
          $ref: "#/components/schemas/Feature"
          description: The feature that this is an instance of. A calendar resource may have multiple instances of a feature.
      type: object
    FeatureRename:
      properties:
        newName:
          description: New name of the feature.
          type: string
      type: object
    Features:
      description: "Public API: Resources.features"
      properties:
        etag:
          description: ETag of the resource.
          type: string
        features:
          description: The Features in this page of results.
          items:
            $ref: "#/components/schemas/Feature"
          type: array
        kind:
          default: admin#directory#resources#features#featuresList
          description: Kind of resource this is.
          type: string
        nextPageToken:
          description: The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
          type: string
      type: object
    Group:
      description: Google Groups provide your users the ability to send messages to groups of people using the group's email address. For more information about common tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-groups).
      properties:
        adminCreated:
          description: Read-only. Value is `true` if this group was created by an administrator rather than a user.
          type: boolean
        aliases:
          description: Read-only. The list of a group's alias email addresses. To add, update, or remove a group's aliases, use the `groups.aliases` methods. If edited in a group's POST or PUT request, the edit is ignored.
          items:
            type: string
          type: array
        description:
          description: An extended description to help users determine the purpose of a group. For example, you can include information about who should join the group, the types of messages to send to the group, links to FAQs about the group, or related groups. Maximum length is `4,096` characters.
          type: string
        directMembersCount:
          description: The number of users that are direct members of the group. If a group is a member (child) of this group (the parent), members of the child group are not counted in the `directMembersCount` property of the parent group.
          format: int64
          type: string
        email:
          description: The group's email address. If your account has multiple domains, select the appropriate domain for the email address. The `email` must be unique. This property is required when creating a group. Group email addresses are subject to the same character usage rules as usernames, see the [help center](https://support.google.com/a/answer/9193374) for details.
          type: string
        etag:
          description: ETag of the resource.
          type: string
        id:
          description: Read-only. The unique ID of a group. A group `id` can be used as a group request URI's `groupKey`.
          type: string
        kind:
          default: admin#directory#group
          description: The type of the API resource. For Groups resources, the value is `admin#directory#group`.
          type: string
        name:
          description: The group's display name.
          type: string
        nonEditableAliases:
          description: Read-only. The list of the group's non-editable alias email addresses that are outside of the account's primary domain or subdomains. These are functioning email addresses used by the group. This is a read-only property returned in the API's response for a group. If edited in a group's POST or PUT request, the edit is ignored.
          items:
            type: string
          type: array
      type: object
    GroupAlias:
      description: The Directory API manages aliases, which are alternative email addresses.
      properties:
        alias:
          description: The alias email address.
          type: string
        etag:
          description: ETag of the resource.
          type: string
        id:
          description: The unique ID of the group.
          type: string
        kind:
          description: The type of the API resource. For Alias resources, the value is `admin#directory#alias`.
          type: string
        primaryEmail:
          description: The primary email address of the group.
          type: string
      type: object
    Groups:
      properties:
        etag:
          description: ETag of the resource.
          type: string
        groups:
          description: A list of group objects.
          items:
            $ref: "#/components/schemas/Group"
          type: array
        kind:
          default: admin#directory#groups
          description: Kind of resource this is.
          type: string
        nextPageToken:
          description: Token used to access next page of this result.
          type: string
      type: object
    ListPrintServersResponse:
      properties:
        nextPageToken:
          description: A token that can be sent as `page_token` in a request to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        printServers:
          description: List of print servers.
          items:
            $ref: "#/components/schemas/PrintServer"
          type: array
      type: object
    ListPrinterModelsResponse:
      description: Response for listing allowed printer models.
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        printerModels:
          description: Printer models that are currently allowed to be configured for ChromeOs. Some printers may be added or removed over time.
          items:
            $ref: "#/components/schemas/PrinterModel"
          type: array
      type: object
    ListPrintersResponse:
      description: Response for listing printers.
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        printers:
          description: List of printers. If `org_unit_id` was given in the request, then only printers visible for this OU will be returned. If `org_unit_id` was not given in the request, then all printers will be returned.
          items:
            $ref: "#/components/schemas/Printer"
          type: array
      type: object
    Member:
      description: A Google Groups member can be a user or another group. This member can be inside or outside of your account's domains. For more information about common group member tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-group-members).
      properties:
        delivery_settings:
          description: Defines mail delivery preferences of member. This is only supported by create/update/get.
          type: string
        email:
          description: The member's email address. A member can be a user or another group. This property is required when adding a member to a group. The `email` must be unique and cannot be an alias of another group. If the email address is changed, the API automatically reflects the email address changes.
          type: string
        etag:
          description: ETag of the resource.
          type: string
        id:
          description: The unique ID of the group member. A member `id` can be used as a member request URI's `memberKey`.
          type: string
        kind:
          default: admin#directory#member
          description: The type of the API resource. For Members resources, the value is `admin#directory#member`.
          type: string
        role:
          description: The member's role in a group. The API returns an error for cycles in group memberships. For example, if `group1` is a member of `group2`, `group2` cannot be a member of `group1`. For more information about a member's role, see the [administration help center](https://support.google.com/a/answer/167094).
          type: string
        status:
          description: Status of member (Immutable)
          type: string
        type:
          description: The type of group member.
          type: string
      type: object
    Members:
      properties:
        etag:
          description: ETag of the resource.
          type: string
        kind:
          default: admin#directory#members
          description: Kind of resource this is.
          type: string
        members:
          description: A list of member objects.
          items:
            $ref: "#/components/schemas/Member"
          type: array
        nextPageToken:
          description: Token used to access next page of this result.
          type: string
      type: object
    MembersHasMember:
      description: JSON template for Has Member response in Directory API.
      properties:
        isMember:
          description: Output only. Identifies whether the given user is a member of the group. Membership can be direct or nested.
          readOnly: true
          type: boolean
      type: object
    MobileDevice:
      description: Google Workspace Mobile Management includes Android, [Google Sync](https://support.google.com/a/answer/135937), and iOS devices. For more information about common group mobile device API tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile-devices.html).
      properties:
        adbStatus:
          description: Adb (USB debugging) enabled or disabled on device (Read-only)
          type: boolean
        applications:
          description: The list of applications installed on an Android mobile device. It is not applicable to Google Sync and iOS devices. The list includes any Android applications that access Google Workspace data. When updating an applications list, it is important to note that updates replace the existing list. If the Android device has two existing applications and the API updates the list with five applications, the is now the updated list of five applications.
          items:
            properties:
              displayName:
                description: The application's display name. An example is `Browser`.
                type: string
              packageName:
                description: The application's package name. An example is `com.android.browser`.
                type: string
              permission:
                description: The list of permissions of this application. These can be either a standard Android permission or one defined by the application, and are found in an application's [Android manifest](https://developer.android.com/guide/topics/manifest/uses-permission-element.html). Examples of a Calendar application's permissions are `READ_CALENDAR`, or `MANAGE_ACCOUNTS`.
                items:
                  type: string
                type: array
              versionCode:
                description: The application's version code. An example is `13`.
                format: int32
                type: integer
              versionName:
                description: The application's version name. An example is `3.2-140714`.
                type: string
            type: object
          type: array
        basebandVersion:
          description: The device's baseband version.
          type: string
        bootloaderVersion:
          description: Mobile Device Bootloader version (Read-only)
          type: string
        brand:
          description: Mobile Device Brand (Read-only)
          type: string
        buildNumber:
          description: The device's operating system build number.
          type: string
        defaultLanguage:
          description: The default locale used on the device.
          type: string
        developerOptionsStatus:
          description: Developer options enabled or disabled on device (Read-only)
          type: boolean
        deviceCompromisedStatus:
          description: The compromised device status.
          type: string
        deviceId:
          description: The serial number for a Google Sync mobile device. For Android and iOS devices, this is a software generated unique identifier.
          type: string
        devicePasswordStatus:
          description: DevicePasswordStatus (Read-only)
          type: string
        email:
          description: The list of the owner's email addresses. If your application needs the current list of user emails, use the [get](/admin-sdk/directory/v1/reference/mobiledevices/get.html) method. For additional information, see the [retrieve a user](/admin-sdk/directory/v1/guides/manage-users#get_user) method.
          items:
            type: string
          type: array
        encryptionStatus:
          description: Mobile Device Encryption Status (Read-only)
          type: string
        etag:
          description: ETag of the resource.
          type: string
        firstSync:
          description: Date and time the device was first synchronized with the policy settings in the G Suite administrator control panel (Read-only)
          format: date-time
          type: string
        hardware:
          description: Mobile Device Hardware (Read-only)
          type: string
        hardwareId:
          description: The IMEI/MEID unique identifier for Android hardware. It is not applicable to Google Sync devices. When adding an Android mobile device, this is an optional property. When updating one of these devices, this is a read-only property.
          type: string
        imei:
          description: The device's IMEI number.
          type: string
        kernelVersion:
          description: The device's kernel version.
          type: string
        kind:
          default: admin#directory#mobiledevice
          description: The type of the API resource. For Mobiledevices resources, the value is `admin#directory#mobiledevice`.
          type: string
        lastSync:
          description: Date and time the device was last synchronized with the policy settings in the G Suite administrator control panel (Read-only)
          format: date-time
          type: string
        managedAccountIsOnOwnerProfile:
          description: Boolean indicating if this account is on owner/primary profile or not.
          type: boolean
        manufacturer:
          description: Mobile Device manufacturer (Read-only)
          type: string
        meid:
          description: The device's MEID number.
          type: string
        model:
          description: The mobile device's model name, for example Nexus S. This property can be [updated](/admin-sdk/directory/v1/reference/mobiledevices/update.html). For more information, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile=devices#update_mobile_device).
          type: string
        name:
          description: The list of the owner's user names. If your application needs the current list of device owner names, use the [get](/admin-sdk/directory/v1/reference/mobiledevices/get.html) method. For more information about retrieving mobile device user information, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-users#get_user).
          items:
            type: string
          type: array
        networkOperator:
          description: Mobile Device mobile or network operator (if available) (Read-only)
          type: string
        os:
          description: The mobile device's operating system, for example IOS 4.3 or Android 2.3.5. This property can be [updated](/admin-sdk/directory/v1/reference/mobiledevices/update.html). For more information, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile-devices#update_mobile_device).
          type: string
        otherAccountsInfo:
          description: The list of accounts added on device (Read-only)
          items:
            type: string
          type: array
        privilege:
          description: DMAgentPermission (Read-only)
          type: string
        releaseVersion:
          description: Mobile Device release version version (Read-only)
          type: string
        resourceId:
          description: The unique ID the API service uses to identify the mobile device.
          type: string
        securityPatchLevel:
          description: Mobile Device Security patch level (Read-only)
          format: int64
          type: string
        serialNumber:
          description: The device's serial number.
          type: string
        status:
          description: The device's status.
          type: string
        supportsWorkProfile:
          description: Work profile supported on device (Read-only)
          type: boolean
        type:
          description: The type of mobile device.
          type: string
        unknownSourcesStatus:
          description: Unknown sources enabled or disabled on device (Read-only)
          type: boolean
        userAgent:
          description: Gives information about the device such as `os` version. This property can be [updated](/admin-sdk/directory/v1/reference/mobiledevices/update.html). For more information, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile-devices#update_mobile_device).
          type: string
        wifiMacAddress:
          description: The device's MAC address on Wi-Fi networks.
          type: string
      type: object
    MobileDeviceAction:
      properties:
        action:
          description: The action to be performed on the device.
          type: string
      type: object
    MobileDevices:
      properties:
        etag:
          description: ETag of the resource.
          type: string
        kind:
          default: admin#directory#mobiledevices
          description: Kind of resource this is.
          type: string
        mobiledevices:
          description: A list of Mobile Device objects.
          items:
            $ref: "#/components/schemas/MobileDevice"
          type: array
        nextPageToken:
          description: Token used to access next page of this result.
          type: string
      type: object
    OrgUnit:
      description: Managing your account's organizational units allows you to configure your users' access to services and custom settings. For more information about common organizational unit tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-org-units.html). The customer's organizational unit hierarchy is limited to 35 levels of depth.
      properties:
        blockInheritance:
          description: Determines if a sub-organizational unit can inherit the settings of the parent organization. The default value is `false`, meaning a sub-organizational unit inherits the settings of the nearest parent organizational unit. For more information on inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075).
          type: boolean
        description:
          description: Description of the organizational unit.
          type: string
        etag:
          description: ETag of the resource.
          type: string
        kind:
          default: admin#directory#orgUnit
          description: The type of the API resource. For Orgunits resources, the value is `admin#directory#orgUnit`.
          type: string
        name:
          description: The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales_support parent path is sales_support. Required.
          type: string
        orgUnitId:
          description: The unique ID of the organizational unit.
          type: string
        orgUnitPath:
          description: The full path to the organizational unit. The `orgUnitPath` is a derived property. When listed, it is derived from `parentOrgunitPath` and organizational unit's `name`. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an `orgUnitPath`, either update the name of the organization or the `parentOrgunitPath`. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [Update a user](/admin-sdk/directory/v1/guides/manage-users.html#update_user).
          type: string
        parentOrgUnitId:
          description: The unique ID of the parent organizational unit. Required, unless `parentOrgUnitPath` is set.
          type: string
        parentOrgUnitPath:
          description: The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit. Required, unless `parentOrgUnitId` is set.
          type: string
      type: object
    OrgUnits:
      properties:
        etag:
          description: ETag of the resource.
          type: string
        kind:
          default: admin#directory#orgUnits
          description: The type of the API resource. For Org Unit resources, the type is `admin#directory#orgUnits`.
          type: string
        organizationUnits:
          description: A list of organizational unit objects.
          items:
            $ref: "#/components/schemas/OrgUnit"
          type: array
      type: object
    OsUpdateStatus:
      description: Contains information regarding the current OS update status.
      properties:
        rebootTime:
          description: Date and time of the last reboot.
          type: string
        state:
          description: The update state of an OS update.
          enum:
            - updateStateUnspecified
            - updateStateNotStarted
            - updateStateDownloadInProgress
            - updateStateNeedReboot
          type: string
        targetKioskAppVersion:
          description: New required platform version from the pending updated kiosk app.
          type: string
        targetOsVersion:
          description: New platform version of the OS image being downloaded and applied. It is only set when update status is UPDATE_STATUS_DOWNLOAD_IN_PROGRESS or UPDATE_STATUS_NEED_REBOOT. Note this could be a dummy "0.0.0.0" for UPDATE_STATUS_NEED_REBOOT for some edge cases, e.g. update engine is restarted without a reboot.
          type: string
        updateCheckTime:
          description: Date and time of the last update check.
          type: string
        updateTime:
          description: Date and time of the last successful OS update.
          type: string
      type: object
    PrintServer:
      description: Configuration for a print server.
      properties:
        createTime:
          description: Output only. Time when the print server was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Editable. Description of the print server (as shown in the Admin console).
          type: string
        displayName:
          description: Editable. Display name of the print server (as shown in the Admin console).
          type: string
        id:
          description: Immutable. ID of the print server. Leave empty when creating.
          type: string
        name:
          description: "Immutable. Resource name of the print server. Leave empty when creating. Format: `customers/{customer.id}/printServers/{print_server.id}`"
          type: string
        orgUnitId:
          description: ID of the organization unit (OU) that owns this print server. This value can only be set when the print server is initially created. If it's not populated, the print server is placed under the root OU. The `org_unit_id` can be retrieved using the [Directory API](/admin-sdk/directory/reference/rest/v1/orgunits).
          type: string
        uri:
          description: Editable. Print server URI.
          type: string
      type: object
    PrintServerFailureInfo:
      description: Info about failures
      properties:
        errorCode:
          description: Canonical code for why the update failed to apply.
          enum:
            - OK
            - CANCELLED
            - UNKNOWN
            - INVALID_ARGUMENT
            - DEADLINE_EXCEEDED
            - NOT_FOUND
            - ALREADY_EXISTS
            - PERMISSION_DENIED
            - UNAUTHENTICATED
            - RESOURCE_EXHAUSTED
            - FAILED_PRECONDITION
            - ABORTED
            - OUT_OF_RANGE
            - UNIMPLEMENTED
            - INTERNAL
            - UNAVAILABLE
            - DATA_LOSS
          type: string
        errorMessage:
          description: Failure reason message.
          type: string
        printServer:
          $ref: "#/components/schemas/PrintServer"
          description: Failed print server.
        printServerId:
          description: ID of a failed print server.
          type: string
      type: object
    Printer:
      description: Printer configuration.
      properties:
        auxiliaryMessages:
          description: Output only. Auxiliary messages about issues with the printer configuration if any.
          items:
            $ref: "#/components/schemas/AuxiliaryMessage"
          readOnly: true
          type: array
        createTime:
          description: Output only. Time when printer was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Editable. Description of printer.
          type: string
        displayName:
          description: Editable. Name of printer.
          type: string
        id:
          description: Id of the printer. (During printer creation leave empty)
          type: string
        makeAndModel:
          description: Editable. Make and model of printer. e.g. Lexmark MS610de Value must be in format as seen in ListPrinterModels response.
          type: string
        name:
          description: The resource name of the Printer object, in the format customers/{customer-id}/printers/{printer-id} (During printer creation leave empty)
          type: string
        orgUnitId:
          description: Organization Unit that owns this printer (Only can be set during Printer creation)
          type: string
        uri:
          description: Editable. Printer URI.
          type: string
        useDriverlessConfig:
          description: Editable. flag to use driverless configuration or not. If it's set to be true, make_and_model can be ignored
          type: boolean
      type: object
    PrinterModel:
      description: Printer manufacturer and model
      properties:
        displayName:
          description: Display name. eq. "Brother MFC-8840D"
          type: string
        makeAndModel:
          description: Make and model as represented in "make_and_model" field in Printer object. eq. "brother mfc-8840d"
          type: string
        manufacturer:
          description: Manufacturer. eq. "Brother"
          type: string
      type: object
    Privilege:
      properties:
        childPrivileges:
          description: A list of child privileges. Privileges for a service form a tree. Each privilege can have a list of child privileges; this list is empty for a leaf privilege.
          items:
            $ref: "#/components/schemas/Privilege"
          type: array
        etag:
          description: ETag of the resource.
          type: string
        isOuScopable:
          description: If the privilege can be restricted to an organization unit.
          type: boolean
        kind:
          default: admin#directory#privilege
          description: The type of the API resource. This is always `admin#directory#privilege`.
          type: string
        privilegeName:
          description: The name of the privilege.
          type: string
        serviceId:
          description: The obfuscated ID of the service this privilege is for. This value is returned with [`Privileges.list()`](/admin-sdk/directory/v1/reference/privileges/list).
          type: string
        serviceName:
          description: The name of the service this privilege is for.
          type: string
      type: object
    Privileges:
      properties:
        etag:
          description: ETag of the resource.
          type: string
        items:
          description: A list of Privilege resources.
          items:
            $ref: "#/components/schemas/Privilege"
          type: array
        kind:
          default: admin#directory#privileges
          description: The type of the API resource. This is always `admin#directory#privileges`.
          type: string
      type: object
    Role:
      properties:
        etag:
          description: ETag of the resource.
          type: string
        isSuperAdminRole:
          description: Returns `true` if the role is a super admin role.
          type: boolean
        isSystemRole:
          description: Returns `true` if this is a pre-defined system role.
          type: boolean
        kind:
          default: admin#directory#role
          description: The type of the API resource. This is always `admin#directory#role`.
          type: string
        roleDescription:
          description: A short description of the role.
          type: string
        roleId:
          description: ID of the role.
          format: int64
          type: string
        roleName:
          description: Name of the role.
          type: string
        rolePrivileges:
          description: The set of privileges that are granted to this role.
          items:
            properties:
              privilegeName:
                description: The name of the privilege.
                type: string
              serviceId:
                description: The obfuscated ID of the service this privilege is for. This value is returned with [`Privileges.list()`](/admin-sdk/directory/v1/reference/privileges/list).
                type: string
            type: object
          type: array
      type: object
    RoleAssignment:
      description: Defines an assignment of a role.
      properties:
        assignedTo:
          description: The unique ID of the entity this role is assigned to—either the `user_id` of a user or the `uniqueId` of a service account, as defined in [Identity and Access Management (IAM)](https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts).
          type: string
        etag:
          description: ETag of the resource.
          type: string
        kind:
          default: admin#directory#roleAssignment
          description: The type of the API resource. This is always `admin#directory#roleAssignment`.
          type: string
        orgUnitId:
          description: If the role is restricted to an organization unit, this contains the ID for the organization unit the exercise of this role is restricted to.
          type: string
        roleAssignmentId:
          description: ID of this roleAssignment.
          format: int64
          type: string
        roleId:
          description: The ID of the role that is assigned.
          format: int64
          type: string
        scopeType:
          description: The scope in which this role is assigned.
          type: string
      type: object
    RoleAssignments:
      properties:
        etag:
          description: ETag of the resource.
          type: string
        items:
          description: A list of RoleAssignment resources.
          items:
            $ref: "#/components/schemas/RoleAssignment"
          type: array
        kind:
          default: admin#directory#roleAssignments
          description: The type of the API resource. This is always `admin#directory#roleAssignments`.
          type: string
        nextPageToken:
          type: string
      type: object
    Roles:
      properties:
        etag:
          description: ETag of the resource.
          type: string
        items:
          description: A list of Role resources.
          items:
            $ref: "#/components/schemas/Role"
          type: array
        kind:
          default: admin#directory#roles
          description: The type of the API resource. This is always `admin#directory#roles`.
          type: string
        nextPageToken:
          type: string
      type: object
    Schema:
      description: The type of API resource. For Schema resources, this is always `admin#directory#schema`.
      properties:
        displayName:
          description: Display name for the schema.
          type: string
        etag:
          description: The ETag of the resource.
          type: string
        fields:
          description: A list of fields in the schema.
          items:
            $ref: "#/components/schemas/SchemaFieldSpec"
          type: array
        kind:
          default: admin#directory#schema
          description: Kind of resource this is.
          type: string
        schemaId:
          description: The unique identifier of the schema (Read-only)
          type: string
        schemaName:
          description: "The schema's name. Each `schema_name` must be unique within a customer. Reusing a name results in a `409: Entity already exists` error."
          type: string
      type: object
    SchemaFieldSpec:
      description: You can use schemas to add custom fields to user profiles. You can use these fields to store information such as the projects your users work on, their physical locations, their hire dates, or whatever else fits your business needs. For more information, see [Custom User Fields](/admin-sdk/directory/v1/guides/manage-schemas).
      properties:
        displayName:
          description: Display Name of the field.
          type: string
        etag:
          description: The ETag of the field.
          type: string
        fieldId:
          description: The unique identifier of the field (Read-only)
          type: string
        fieldName:
          description: The name of the field.
          type: string
        fieldType:
          description: The type of the field.
          type: string
        indexed:
          default: true
          description: "Boolean specifying whether the field is indexed or not. Default: `true`."
          type: boolean
        kind:
          default: admin#directory#schema#fieldspec
          description: The kind of resource this is. For schema fields this is always `admin#directory#schema#fieldspec`.
          type: string
        multiValued:
          description: "A boolean specifying whether this is a multi-valued field or not. Default: `false`."
          type: boolean
        numericIndexingSpec:
          description: Indexing spec for a numeric field. By default, only exact match queries will be supported for numeric fields. Setting the `numericIndexingSpec` allows range queries to be supported.
          properties:
            maxValue:
              description: Maximum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant.
              format: double
              type: number
            minValue:
              description: Minimum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant.
              format: double
              type: number
          type: object
        readAccessType:
          default: ALL_DOMAIN_USERS
          description: "Specifies who can view values of this field. See [Retrieve users as a non-administrator](/admin-sdk/directory/v1/guides/manage-users#retrieve_users_non_admin) for more information. Note: It may take up to 24 hours for changes to this field to be reflected."
          type: string
      type: object
    Schemas:
      description: JSON response template for List Schema operation in Directory API.
      properties:
        etag:
          description: ETag of the resource.
          type: string
        kind:
          default: admin#directory#schemas
          description: Kind of resource this is.
          type: string
        schemas:
          description: A list of UserSchema objects.
          items:
            $ref: "#/components/schemas/Schema"
          type: array
      type: object
    Token:
      description: JSON template for token resource in Directory API.
      properties:
        anonymous:
          description: Whether the application is registered with Google. The value is `true` if the application has an anonymous Client ID.
          type: boolean
        clientId:
          description: The Client ID of the application the token is issued to.
          type: string
        displayText:
          description: The displayable name of the application the token is issued to.
          type: string
        etag:
          description: ETag of the resource.
          type: string
        kind:
          default: admin#directory#token
          description: The type of the API resource. This is always `admin#directory#token`.
          type: string
        nativeApp:
          description: Whether the token is issued to an installed application. The value is `true` if the application is installed to a desktop or mobile device.
          type: boolean
        scopes:
          description: A list of authorization scopes the application is granted.
          items:
            type: string
          type: array
        userKey:
          description: The unique ID of the user that issued the token.
          type: string
      type: object
    Tokens:
      description: JSON response template for List tokens operation in Directory API.
      properties:
        etag:
          description: ETag of the resource.
          type: string
        items:
          description: A list of Token resources.
          items:
            $ref: "#/components/schemas/Token"
          type: array
        kind:
          default: admin#directory#tokenList
          description: The type of the API resource. This is always `admin#directory#tokenList`.
          type: string
      type: object
    User:
      description: The Directory API allows you to create and manage your account's users, user aliases, and user Gmail chat profile photos. For more information about common tasks, see the [User Accounts Developer's Guide](/admin-sdk/directory/v1/guides/manage-users.html) and the [User Aliases Developer's Guide](/admin-sdk/directory/v1/guides/manage-user-aliases.html).
      properties:
        addresses:
          description: The list of the user's addresses. The maximum allowed data size for this field is 10KB.
        agreedToTerms:
          description: Output only. This property is `true` if the user has completed an initial login and accepted the Terms of Service agreement.
          readOnly: true
          type: boolean
        aliases:
          description: Output only. The list of the user's alias email addresses.
          items:
            type: string
          readOnly: true
          type: array
        archived:
          description: Indicates if user is archived.
          type: boolean
        changePasswordAtNextLogin:
          description: Indicates if the user is forced to change their password at next login. This setting doesn't apply when [the user signs in via a third-party identity provider](https://support.google.com/a/answer/60224).
          type: boolean
        creationTime:
          description: User's G Suite account creation time. (Read-only)
          format: date-time
          readOnly: true
          type: string
        customSchemas:
          additionalProperties:
            $ref: "#/components/schemas/UserCustomProperties"
          description: "Custom fields of the user. The key is a `schema_name` and its values are `'field_name': 'field_value'`."
          type: object
        customerId:
          description: Output only. The customer ID to [retrieve all account users](/admin-sdk/directory/v1/guides/manage-users.html#get_all_users). You can use the alias `my_customer` to represent your account's `customerId`. As a reseller administrator, you can use the resold customer account's `customerId`. To get a `customerId`, use the account's primary domain in the `domain` parameter of a [users.list](/admin-sdk/directory/v1/reference/users/list) request.
          readOnly: true
          type: string
        deletionTime:
          format: date-time
          readOnly: true
          type: string
        emails:
          description: The list of the user's email addresses. The maximum allowed data size for this field is 10KB.
        etag:
          description: Output only. ETag of the resource.
          readOnly: true
          type: string
        externalIds:
          description: The list of external IDs for the user, such as an employee or network ID. The maximum allowed data size for this field is 2KB.
        gender:
          description: The user's gender. The maximum allowed data size for this field is 1KB.
        hashFunction:
          description: "Stores the hash format of the `password` property. The following `hashFunction` values are allowed: * `MD5` - Accepts simple hex-encoded values. * `SHA-1` - Accepts simple hex-encoded values. * `crypt` - Compliant with the [C crypt library](https://en.wikipedia.org/wiki/Crypt_%28C%29). Supports the DES, MD5 (hash prefix `$1$`), SHA-256 (hash prefix `$5$`), and SHA-512 (hash prefix `$6$`) hash algorithms. If rounds are specified as part of the prefix, they must be 10,000 or fewer."
          type: string
        id:
          description: The unique ID for the user. A user `id` can be used as a user request URI's `userKey`.
          type: string
        ims:
          description: The list of the user's Instant Messenger (IM) accounts. A user account can have multiple ims properties. But, only one of these ims properties can be the primary IM contact. The maximum allowed data size for this field is 2KB.
        includeInGlobalAddressList:
          description: Indicates if the user's profile is visible in the Google Workspace global address list when the contact sharing feature is enabled for the domain. For more information about excluding user profiles, see the [administration help center](https://support.google.com/a/answer/1285988).
          type: boolean
        ipWhitelisted:
          description: If `true`, the user's IP address is [whitelisted](https://support.google.com/a/answer/60752).
          type: boolean
        isAdmin:
          description: Output only. Indicates a user with super admininistrator privileges. The `isAdmin` property can only be edited in the [Make a user an administrator](/admin-sdk/directory/v1/guides/manage-users.html#make_admin) operation ( [makeAdmin](/admin-sdk/directory/v1/reference/users/makeAdmin.html) method). If edited in the user [insert](/admin-sdk/directory/v1/reference/users/insert.html) or [update](/admin-sdk/directory/v1/reference/users/update.html) methods, the edit is ignored by the API service.
          readOnly: true
          type: boolean
        isDelegatedAdmin:
          description: Output only. Indicates if the user is a delegated administrator. Delegated administrators are supported by the API but cannot create or undelete users, or make users administrators. These requests are ignored by the API service. Roles and privileges for administrators are assigned using the [Admin console](https://support.google.com/a/answer/33325).
          readOnly: true
          type: boolean
        isEnforcedIn2Sv:
          description: Output only. Is 2-step verification enforced (Read-only)
          readOnly: true
          type: boolean
        isEnrolledIn2Sv:
          description: Output only. Is enrolled in 2-step verification (Read-only)
          readOnly: true
          type: boolean
        isMailboxSetup:
          description: Output only. Indicates if the user's Google mailbox is created. This property is only applicable if the user has been assigned a Gmail license.
          readOnly: true
          type: boolean
        keywords:
          description: The list of the user's keywords. The maximum allowed data size for this field is 1KB.
        kind:
          default: admin#directory#user
          description: Output only. The type of the API resource. For Users resources, the value is `admin#directory#user`.
          readOnly: true
          type: string
        languages:
          description: The user's languages. The maximum allowed data size for this field is 1KB.
        lastLoginTime:
          description: User's last login time. (Read-only)
          format: date-time
          readOnly: true
          type: string
        locations:
          description: The user's locations. The maximum allowed data size for this field is 10KB.
        name:
          $ref: "#/components/schemas/UserName"
          description: Holds the given and family names of the user, and the read-only `fullName` value. The maximum number of characters in the `givenName` and in the `familyName` values is 60. In addition, name values support unicode/UTF-8 characters, and can contain spaces, letters (a-z), numbers (0-9), dashes (-), forward slashes (/), and periods (.). For more information about character usage rules, see the [administration help center](https://support.google.com/a/answer/9193374). Maximum allowed data size for this field is 1KB.
        nonEditableAliases:
          description: Output only. The list of the user's non-editable alias email addresses. These are typically outside the account's primary domain or sub-domain.
          items:
            type: string
          readOnly: true
          type: array
        notes:
          description: Notes for the user.
        orgUnitPath:
          description: The full path of the parent organization associated with the user. If the parent organization is the top-level, it is represented as a forward slash (`/`).
          type: string
        organizations:
          description: The list of organizations the user belongs to. The maximum allowed data size for this field is 10KB.
        password:
          description: User's password
          type: string
        phones:
          description: The list of the user's phone numbers. The maximum allowed data size for this field is 1KB.
        posixAccounts:
          description: The list of [POSIX](https://www.opengroup.org/austin/papers/posix_faq.html) account information for the user.
        primaryEmail:
          description: The user's primary email address. This property is required in a request to create a user account. The `primaryEmail` must be unique and cannot be an alias of another user.
          type: string
        recoveryEmail:
          description: Recovery email of the user.
          type: string
        recoveryPhone:
          description: "Recovery phone of the user. The phone number must be in the E.164 format, starting with the plus sign (+). Example: *+16506661212*."
          type: string
        relations:
          description: The list of the user's relationships to other users. The maximum allowed data size for this field is 2KB.
        sshPublicKeys:
          description: A list of SSH public keys.
        suspended:
          description: Indicates if user is suspended.
          type: boolean
        suspensionReason:
          description: Output only. Has the reason a user account is suspended either by the administrator or by Google at the time of suspension. The property is returned only if the `suspended` property is `true`.
          readOnly: true
          type: string
        thumbnailPhotoEtag:
          description: Output only. ETag of the user's photo (Read-only)
          readOnly: true
          type: string
        thumbnailPhotoUrl:
          description: Output only. Photo Url of the user (Read-only)
          readOnly: true
          type: string
        websites:
          description: The user's websites. The maximum allowed data size for this field is 2KB.
      type: object
    UserAbout:
      description: JSON template for About (notes) of a user in Directory API.
      properties:
        contentType:
          description: About entry can have a type which indicates the content type. It can either be plain or html. By default, notes contents are assumed to contain plain text.
          type: string
        value:
          description: Actual value of notes.
          type: string
      type: object
    UserAddress:
      description: JSON template for address.
      properties:
        country:
          description: Country.
          type: string
        countryCode:
          description: Country code.
          type: string
        customType:
          description: Custom type.
          type: string
        extendedAddress:
          description: Extended Address.
          type: string
        formatted:
          description: Formatted address.
          type: string
        locality:
          description: Locality.
          type: string
        poBox:
          description: Other parts of address.
          type: string
        postalCode:
          description: Postal code.
          type: string
        primary:
          description: If this is user's primary address. Only one entry could be marked as primary.
          type: boolean
        region:
          description: Region.
          type: string
        sourceIsStructured:
          description: User supplied address was structured. Structured addresses are NOT supported at this time. You might be able to write structured addresses but any values will eventually be clobbered.
          type: boolean
        streetAddress:
          description: Street.
          type: string
        type:
          description: Each entry can have a type which indicates standard values of that entry. For example address could be of home work etc. In addition to the standard type an entry can have a custom type and can take any value. Such type should have the CUSTOM value as type and also have a customType value.
          type: string
      type: object
    UserAlias:
      description: The Directory API manages aliases, which are alternative email addresses.
      properties:
        alias:
          description: The alias email address.
          type: string
        etag:
          description: ETag of the resource.
          type: string
        id:
          description: The unique ID for the user.
          type: string
        kind:
          description: The type of the API resource. For Alias resources, the value is `admin#directory#alias`.
          type: string
        primaryEmail:
          description: The user's primary email address.
          type: string
      type: object
    UserCustomProperties:
      additionalProperties: {}
      description: JSON template for a set of custom properties (i.e. all fields in a particular schema)
      type: object
    UserEmail:
      description: JSON template for an email.
      properties:
        address:
          description: Email id of the user.
          type: string
        customType:
          description: Custom Type.
          type: string
        primary:
          description: If this is user's primary email. Only one entry could be marked as primary.
          type: boolean
        type:
          description: Each entry can have a type which indicates standard types of that entry. For example email could be of home, work etc. In addition to the standard type, an entry can have a custom type and can take any value Such types should have the CUSTOM value as type and also have a customType value.
          type: string
      type: object
    UserExternalId:
      description: JSON template for an externalId entry.
      properties:
        customType:
          description: Custom type.
          type: string
        type:
          description: The type of the Id.
          type: string
        value:
          description: The value of the id.
          type: string
      type: object
    UserGender:
      properties:
        addressMeAs:
          description: AddressMeAs. A human-readable string containing the proper way to refer to the profile owner by humans for example he/him/his or they/them/their.
          type: string
        customGender:
          description: Custom gender.
          type: string
        type:
          description: Gender.
          type: string
      type: object
    UserIm:
      description: JSON template for instant messenger of an user.
      properties:
        customProtocol:
          description: Custom protocol.
          type: string
        customType:
          description: Custom type.
          type: string
        im:
          description: Instant messenger id.
          type: string
        primary:
          description: If this is user's primary im. Only one entry could be marked as primary.
          type: boolean
        protocol:
          description: Protocol used in the instant messenger. It should be one of the values from ImProtocolTypes map. Similar to type it can take a CUSTOM value and specify the custom name in customProtocol field.
          type: string
        type:
          description: Each entry can have a type which indicates standard types of that entry. For example instant messengers could be of home work etc. In addition to the standard type an entry can have a custom type and can take any value. Such types should have the CUSTOM value as type and also have a customType value.
          type: string
      type: object
    UserKeyword:
      description: JSON template for a keyword entry.
      properties:
        customType:
          description: Custom Type.
          type: string
        type:
          description: Each entry can have a type which indicates standard type of that entry. For example keyword could be of type occupation or outlook. In addition to the standard type an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a customType value.
          type: string
        value:
          description: Keyword.
          type: string
      type: object
    UserLanguage:
      description: JSON template for a language entry.
      properties:
        customLanguage:
          description: Other language. User can provide their own language name if there is no corresponding ISO 639 language code. If this is set, `languageCode` can't be set.
          type: string
        languageCode:
          description: ISO 639 string representation of a language. See [Language Codes](/admin-sdk/directory/v1/languages) for the list of supported codes. Valid language codes outside the supported set will be accepted by the API but may lead to unexpected behavior. Illegal values cause `SchemaException`. If this is set, `customLanguage` can't be set.
          type: string
        preference:
          description: Optional. If present, controls whether the specified `languageCode` is the user's preferred language. If `customLanguage` is set, this can't be set. Allowed values are `preferred` and `not_preferred`.
          type: string
      type: object
    UserLocation:
      description: JSON template for a location entry.
      properties:
        area:
          description: Textual location. This is most useful for display purposes to concisely describe the location. For example 'Mountain View, CA', 'Near Seattle', 'US-NYC-9TH 9A209A.''
          type: string
        buildingId:
          description: Building Identifier.
          type: string
        customType:
          description: Custom Type.
          type: string
        deskCode:
          description: Most specific textual code of individual desk location.
          type: string
        floorName:
          description: Floor name/number.
          type: string
        floorSection:
          description: Floor section. More specific location within the floor. For example if a floor is divided into sections 'A', 'B' and 'C' this field would identify one of those values.
          type: string
        type:
          description: Each entry can have a type which indicates standard types of that entry. For example location could be of types default and desk. In addition to standard type an entry can have a custom type and can give it any name. Such types should have 'custom' as type and also have a customType value.
          type: string
      type: object
    UserMakeAdmin:
      properties:
        status:
          description: Indicates the administrator status of the user.
          type: boolean
      type: object
    UserName:
      properties:
        displayName:
          description: "The user's display name. Limit: 256 characters."
          type: string
        familyName:
          description: The user's last name. Required when creating a user account.
          type: string
        fullName:
          description: The user's full name formed by concatenating the first and last name values.
          type: string
        givenName:
          description: The user's first name. Required when creating a user account.
          type: string
      type: object
    UserOrganization:
      description: JSON template for an organization entry.
      properties:
        costCenter:
          description: The cost center of the users department.
          type: string
        customType:
          description: Custom type.
          type: string
        department:
          description: Department within the organization.
          type: string
        description:
          description: Description of the organization.
          type: string
        domain:
          description: The domain to which the organization belongs to.
          type: string
        fullTimeEquivalent:
          description: The full-time equivalent millipercent within the organization (100000 = 100%).
          format: int32
          type: integer
        location:
          description: Location of the organization. This need not be fully qualified address.
          type: string
        name:
          description: Name of the organization
          type: string
        primary:
          description: If it user's primary organization.
          type: boolean
        symbol:
          description: Symbol of the organization.
          type: string
        title:
          description: Title (designation) of the user in the organization.
          type: string
        type:
          description: Each entry can have a type which indicates standard types of that entry. For example organization could be of school work etc. In addition to the standard type an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a CustomType value.
          type: string
      type: object
    UserPhone:
      description: JSON template for a phone entry.
      properties:
        customType:
          description: Custom Type.
          type: string
        primary:
          description: If this is user's primary phone or not.
          type: boolean
        type:
          description: Each entry can have a type which indicates standard types of that entry. For example phone could be of home_fax work mobile etc. In addition to the standard type an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a customType value.
          type: string
        value:
          description: Phone number.
          type: string
      type: object
    UserPhoto:
      properties:
        etag:
          description: ETag of the resource.
          type: string
        height:
          description: Height of the photo in pixels.
          format: int32
          type: integer
        id:
          description: The ID the API uses to uniquely identify the user.
          type: string
        kind:
          default: admin#directory#user#photo
          description: The type of the API resource. For Photo resources, this is `admin#directory#user#photo`.
          type: string
        mimeType:
          description: The MIME type of the photo. Allowed values are `JPEG`, `PNG`, `GIF`, `BMP`, `TIFF`, and web-safe base64 encoding.
          type: string
        photoData:
          description: "The user photo's upload data in [web-safe Base64](https://en.wikipedia.org/wiki/Base64#URL_applications) format in bytes. This means: * The slash (/) character is replaced with the underscore (_) character. * The plus sign (+) character is replaced with the hyphen (-) character. * The equals sign (=) character is replaced with the asterisk (*). * For padding, the period (.) character is used instead of the RFC-4648 baseURL definition which uses the equals sign (=) for padding. This is done to simplify URL-parsing. * Whatever the size of the photo being uploaded, the API downsizes it to 96x96 pixels."
          format: byte
          type: string
        primaryEmail:
          description: The user's primary email address.
          type: string
        width:
          description: Width of the photo in pixels.
          format: int32
          type: integer
      type: object
    UserPosixAccount:
      description: JSON template for a POSIX account entry.
      properties:
        accountId:
          description: A POSIX account field identifier.
          type: string
        gecos:
          description: The GECOS (user information) for this account.
          type: string
        gid:
          description: The default group ID.
          format: uint64
          type: string
        homeDirectory:
          description: The path to the home directory for this account.
          type: string
        operatingSystemType:
          description: The operating system type for this account.
          type: string
        primary:
          description: If this is user's primary account within the SystemId.
          type: boolean
        shell:
          description: The path to the login shell for this account.
          type: string
        systemId:
          description: System identifier for which account Username or Uid apply to.
          type: string
        uid:
          description: The POSIX compliant user ID.
          format: uint64
          type: string
        username:
          description: The username of the account.
          type: string
      type: object
    UserRelation:
      description: JSON template for a relation entry.
      properties:
        customType:
          description: Custom Type.
          type: string
        type:
          description: The relation of the user. Some of the possible values are mother father sister brother manager assistant partner.
          type: string
        value:
          description: The name of the relation.
          type: string
      type: object
    UserSshPublicKey:
      description: JSON template for a POSIX account entry.
      properties:
        expirationTimeUsec:
          description: An expiration time in microseconds since epoch.
          format: int64
          type: string
        fingerprint:
          description: A SHA-256 fingerprint of the SSH public key. (Read-only)
          readOnly: true
          type: string
        key:
          description: An SSH public key.
          type: string
      type: object
    UserUndelete:
      properties:
        orgUnitPath:
          description: OrgUnit of User
          type: string
      type: object
    UserWebsite:
      description: JSON template for a website entry.
      properties:
        customType:
          description: Custom Type.
          type: string
        primary:
          description: If this is user's primary website or not.
          type: boolean
        type:
          description: Each entry can have a type which indicates standard types of that entry. For example website could be of home work blog etc. In addition to the standard type an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a customType value.
          type: string
        value:
          description: Website.
          type: string
      type: object
    Users:
      properties:
        etag:
          description: ETag of the resource.
          type: string
        kind:
          default: admin#directory#users
          description: Kind of resource this is.
          type: string
        nextPageToken:
          description: Token used to access next page of this result.
          type: string
        trigger_event:
          description: Event that triggered this response (only used in case of Push Response)
          type: string
        users:
          description: A list of user objects.
          items:
            $ref: "#/components/schemas/User"
          type: array
      type: object
    VerificationCode:
      description: The Directory API allows you to view, generate, and invalidate backup verification codes for a user.
      properties:
        etag:
          description: ETag of the resource.
          type: string
        kind:
          default: admin#directory#verificationCode
          description: The type of the resource. This is always `admin#directory#verificationCode`.
          type: string
        userId:
          description: The obfuscated unique ID of the user.
          type: string
        verificationCode:
          description: A current verification code for the user. Invalidated or used verification codes are not returned as part of the result.
          type: string
      type: object
    VerificationCodes:
      description: JSON response template for list verification codes operation in Directory API.
      properties:
        etag:
          description: ETag of the resource.
          type: string
        items:
          description: A list of verification code resources.
          items:
            $ref: "#/components/schemas/VerificationCode"
          type: array
        kind:
          default: admin#directory#verificationCodesList
          description: The type of the resource. This is always `admin#directory#verificationCodesList`.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/admin.chrome.printers: See, add, edit, and permanently delete the printers that your organization can use with Chrome
            https://www.googleapis.com/auth/admin.chrome.printers.readonly: See the printers that your organization can use with Chrome
            https://www.googleapis.com/auth/admin.directory.customer: View and manage customer related information
            https://www.googleapis.com/auth/admin.directory.customer.readonly: View customer related information
            https://www.googleapis.com/auth/admin.directory.device.chromeos: View and manage your Chrome OS devices' metadata
            https://www.googleapis.com/auth/admin.directory.device.chromeos.readonly: View your Chrome OS devices' metadata
            https://www.googleapis.com/auth/admin.directory.device.mobile: View and manage your mobile devices' metadata
            https://www.googleapis.com/auth/admin.directory.device.mobile.action: Manage your mobile devices by performing administrative tasks
            https://www.googleapis.com/auth/admin.directory.device.mobile.readonly: View your mobile devices' metadata
            https://www.googleapis.com/auth/admin.directory.domain: View and manage the provisioning of domains for your customers
            https://www.googleapis.com/auth/admin.directory.domain.readonly: View domains related to your customers
            https://www.googleapis.com/auth/admin.directory.group: View and manage the provisioning of groups on your domain
            https://www.googleapis.com/auth/admin.directory.group.member: View and manage group subscriptions on your domain
            https://www.googleapis.com/auth/admin.directory.group.member.readonly: View group subscriptions on your domain
            https://www.googleapis.com/auth/admin.directory.group.readonly: View groups on your domain
            https://www.googleapis.com/auth/admin.directory.orgunit: View and manage organization units on your domain
            https://www.googleapis.com/auth/admin.directory.orgunit.readonly: View organization units on your domain
            https://www.googleapis.com/auth/admin.directory.resource.calendar: View and manage the provisioning of calendar resources on your domain
            https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly: View calendar resources on your domain
            https://www.googleapis.com/auth/admin.directory.rolemanagement: Manage delegated admin roles for your domain
            https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly: View delegated admin roles for your domain
            https://www.googleapis.com/auth/admin.directory.user: View and manage the provisioning of users on your domain
            https://www.googleapis.com/auth/admin.directory.user.alias: View and manage user aliases on your domain
            https://www.googleapis.com/auth/admin.directory.user.alias.readonly: View user aliases on your domain
            https://www.googleapis.com/auth/admin.directory.user.readonly: See info about users on your domain
            https://www.googleapis.com/auth/admin.directory.user.security: Manage data access permissions for users on your domain
            https://www.googleapis.com/auth/admin.directory.userschema: View and manage the provisioning of user schemas on your domain
            https://www.googleapis.com/auth/admin.directory.userschema.readonly: View user schemas on your domain
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/admin.chrome.printers: See, add, edit, and permanently delete the printers that your organization can use with Chrome
            https://www.googleapis.com/auth/admin.chrome.printers.readonly: See the printers that your organization can use with Chrome
            https://www.googleapis.com/auth/admin.directory.customer: View and manage customer related information
            https://www.googleapis.com/auth/admin.directory.customer.readonly: View customer related information
            https://www.googleapis.com/auth/admin.directory.device.chromeos: View and manage your Chrome OS devices' metadata
            https://www.googleapis.com/auth/admin.directory.device.chromeos.readonly: View your Chrome OS devices' metadata
            https://www.googleapis.com/auth/admin.directory.device.mobile: View and manage your mobile devices' metadata
            https://www.googleapis.com/auth/admin.directory.device.mobile.action: Manage your mobile devices by performing administrative tasks
            https://www.googleapis.com/auth/admin.directory.device.mobile.readonly: View your mobile devices' metadata
            https://www.googleapis.com/auth/admin.directory.domain: View and manage the provisioning of domains for your customers
            https://www.googleapis.com/auth/admin.directory.domain.readonly: View domains related to your customers
            https://www.googleapis.com/auth/admin.directory.group: View and manage the provisioning of groups on your domain
            https://www.googleapis.com/auth/admin.directory.group.member: View and manage group subscriptions on your domain
            https://www.googleapis.com/auth/admin.directory.group.member.readonly: View group subscriptions on your domain
            https://www.googleapis.com/auth/admin.directory.group.readonly: View groups on your domain
            https://www.googleapis.com/auth/admin.directory.orgunit: View and manage organization units on your domain
            https://www.googleapis.com/auth/admin.directory.orgunit.readonly: View organization units on your domain
            https://www.googleapis.com/auth/admin.directory.resource.calendar: View and manage the provisioning of calendar resources on your domain
            https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly: View calendar resources on your domain
            https://www.googleapis.com/auth/admin.directory.rolemanagement: Manage delegated admin roles for your domain
            https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly: View delegated admin roles for your domain
            https://www.googleapis.com/auth/admin.directory.user: View and manage the provisioning of users on your domain
            https://www.googleapis.com/auth/admin.directory.user.alias: View and manage user aliases on your domain
            https://www.googleapis.com/auth/admin.directory.user.alias.readonly: View user aliases on your domain
            https://www.googleapis.com/auth/admin.directory.user.readonly: See info about users on your domain
            https://www.googleapis.com/auth/admin.directory.user.security: Manage data access permissions for users on your domain
            https://www.googleapis.com/auth/admin.directory.userschema: View and manage the provisioning of user schemas on your domain
            https://www.googleapis.com/auth/admin.directory.userschema.readonly: View user schemas on your domain
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
source:
  url: {}
