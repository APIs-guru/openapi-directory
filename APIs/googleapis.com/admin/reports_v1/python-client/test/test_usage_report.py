# coding: utf-8

"""
    Admin SDK API

    Admin SDK lets administrators of enterprise domains to view and manage resources like user, groups etc. It also provides audit and usage reports of domain.

    The version of the OpenAPI document: reports_v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.usage_report import UsageReport

class TestUsageReport(unittest.TestCase):
    """UsageReport unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UsageReport:
        """Test UsageReport
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UsageReport`
        """
        model = UsageReport()
        if include_optional:
            return UsageReport(
                var_date = '',
                entity = openapi_client.models.usage_report_entity.UsageReport_entity(
                    customer_id = '', 
                    entity_id = '', 
                    profile_id = '', 
                    type = '', 
                    user_email = '', ),
                etag = '',
                kind = 'admin#reports#usageReport',
                parameters = [
                    openapi_client.models.usage_report_parameters_inner.UsageReport_parameters_inner(
                        bool_value = True, 
                        datetime_value = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        int_value = '', 
                        msg_value = [
                            {
                                'key' : null
                                }
                            ], 
                        name = '', 
                        string_value = '', )
                    ]
            )
        else:
            return UsageReport(
        )
        """

    def testUsageReport(self):
        """Test UsageReport"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
