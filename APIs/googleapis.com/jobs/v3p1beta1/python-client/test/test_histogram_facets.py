# coding: utf-8

"""
    Cloud Talent Solution API

    Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters. 

    The version of the OpenAPI document: v3p1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.histogram_facets import HistogramFacets

class TestHistogramFacets(unittest.TestCase):
    """HistogramFacets unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HistogramFacets:
        """Test HistogramFacets
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HistogramFacets`
        """
        model = HistogramFacets()
        if include_optional:
            return HistogramFacets(
                compensation_histogram_facets = [
                    openapi_client.models.compensation_histogram_request.CompensationHistogramRequest(
                        bucketing_option = openapi_client.models.numeric_bucketing_option.NumericBucketingOption(
                            bucket_bounds = [
                                1.337
                                ], 
                            requires_min_max = True, ), 
                        type = 'COMPENSATION_HISTOGRAM_REQUEST_TYPE_UNSPECIFIED', )
                    ],
                custom_attribute_histogram_facets = [
                    openapi_client.models.custom_attribute_histogram_request.CustomAttributeHistogramRequest(
                        key = '', 
                        long_value_histogram_bucketing_option = openapi_client.models.numeric_bucketing_option.NumericBucketingOption(
                            bucket_bounds = [
                                1.337
                                ], 
                            requires_min_max = True, ), 
                        string_value_histogram = True, )
                    ],
                simple_histogram_facets = [
                    'SEARCH_TYPE_UNSPECIFIED'
                    ]
            )
        else:
            return HistogramFacets(
        )
        """

    def testHistogramFacets(self):
        """Test HistogramFacets"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
