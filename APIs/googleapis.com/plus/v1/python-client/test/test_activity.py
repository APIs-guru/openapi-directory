# coding: utf-8

"""
    Google+ API

    Builds on top of the Google+ platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.activity import Activity

class TestActivity(unittest.TestCase):
    """Activity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Activity:
        """Test Activity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Activity`
        """
        model = Activity()
        if include_optional:
            return Activity(
                access = openapi_client.models.acl.Acl(
                    description = '', 
                    items = [
                        openapi_client.models.plus_aclentry_resource.PlusAclentryResource(
                            display_name = '', 
                            id = '', 
                            type = '', )
                        ], 
                    kind = 'plus#acl', ),
                actor = openapi_client.models.activity_actor.Activity_actor(
                    client_specific_actor_info = openapi_client.models.activity_actor_client_specific_actor_info.Activity_actor_clientSpecificActorInfo(
                        youtube_actor_info = openapi_client.models.activity_actor_client_specific_actor_info_youtube_actor_info.Activity_actor_clientSpecificActorInfo_youtubeActorInfo(
                            channel_id = '', ), ), 
                    display_name = '', 
                    id = '', 
                    image = openapi_client.models.activity_actor_image.Activity_actor_image(
                        url = '', ), 
                    name = openapi_client.models.activity_actor_name.Activity_actor_name(
                        family_name = '', 
                        given_name = '', ), 
                    url = '', 
                    verification = openapi_client.models.activity_actor_verification.Activity_actor_verification(
                        ad_hoc_verified = '', ), ),
                address = '',
                annotation = '',
                crosspost_source = '',
                etag = '',
                geocode = '',
                id = '',
                kind = 'plus#activity',
                location = openapi_client.models.place.Place(
                    address = openapi_client.models.place_address.Place_address(
                        formatted = '', ), 
                    display_name = '', 
                    id = '', 
                    kind = 'plus#place', 
                    position = openapi_client.models.place_position.Place_position(
                        latitude = 1.337, 
                        longitude = 1.337, ), ),
                object = openapi_client.models.activity_object.Activity_object(
                    actor = openapi_client.models.activity_object_actor.Activity_object_actor(
                        client_specific_actor_info = openapi_client.models.activity_actor_client_specific_actor_info.Activity_actor_clientSpecificActorInfo(
                            youtube_actor_info = openapi_client.models.activity_actor_client_specific_actor_info_youtube_actor_info.Activity_actor_clientSpecificActorInfo_youtubeActorInfo(
                                channel_id = '', ), ), 
                        display_name = '', 
                        id = '', 
                        image = openapi_client.models.activity_object_actor_image.Activity_object_actor_image(
                            url = '', ), 
                        url = '', 
                        verification = openapi_client.models.activity_actor_verification.Activity_actor_verification(
                            ad_hoc_verified = '', ), ), 
                    attachments = [
                        openapi_client.models.activity_object_attachments_inner.Activity_object_attachments_inner(
                            content = '', 
                            display_name = '', 
                            embed = openapi_client.models.activity_object_attachments_inner_embed.Activity_object_attachments_inner_embed(
                                type = '', 
                                url = '', ), 
                            full_image = openapi_client.models.activity_object_attachments_inner_full_image.Activity_object_attachments_inner_fullImage(
                                height = 56, 
                                type = '', 
                                url = '', 
                                width = 56, ), 
                            id = '', 
                            object_type = '', 
                            thumbnails = [
                                openapi_client.models.activity_object_attachments_inner_thumbnails_inner.Activity_object_attachments_inner_thumbnails_inner(
                                    description = '', 
                                    url = '', )
                                ], 
                            url = '', )
                        ], 
                    content = '', 
                    id = '', 
                    object_type = '', 
                    original_content = '', 
                    plusoners = openapi_client.models.activity_object_plusoners.Activity_object_plusoners(
                        self_link = '', 
                        total_items = 56, ), 
                    replies = openapi_client.models.activity_object_replies.Activity_object_replies(
                        self_link = '', 
                        total_items = 56, ), 
                    resharers = openapi_client.models.activity_object_resharers.Activity_object_resharers(
                        self_link = '', 
                        total_items = 56, ), 
                    url = '', ),
                place_id = '',
                place_name = '',
                provider = openapi_client.models.activity_provider.Activity_provider(
                    title = '', ),
                published = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                radius = '',
                title = '',
                updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                url = '',
                verb = ''
            )
        else:
            return Activity(
        )
        """

    def testActivity(self):
        """Test Activity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
