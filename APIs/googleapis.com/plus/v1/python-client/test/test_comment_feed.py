# coding: utf-8

"""
    Google+ API

    Builds on top of the Google+ platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.comment_feed import CommentFeed

class TestCommentFeed(unittest.TestCase):
    """CommentFeed unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CommentFeed:
        """Test CommentFeed
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CommentFeed`
        """
        model = CommentFeed()
        if include_optional:
            return CommentFeed(
                etag = '',
                id = '',
                items = [
                    openapi_client.models.comment.Comment(
                        actor = openapi_client.models.comment_actor.Comment_actor(
                            client_specific_actor_info = openapi_client.models.activity_actor_client_specific_actor_info.Activity_actor_clientSpecificActorInfo(
                                youtube_actor_info = openapi_client.models.activity_actor_client_specific_actor_info_youtube_actor_info.Activity_actor_clientSpecificActorInfo_youtubeActorInfo(
                                    channel_id = '', ), ), 
                            display_name = '', 
                            id = '', 
                            image = openapi_client.models.comment_actor_image.Comment_actor_image(
                                url = '', ), 
                            url = '', 
                            verification = openapi_client.models.activity_actor_verification.Activity_actor_verification(
                                ad_hoc_verified = '', ), ), 
                        etag = '', 
                        id = '', 
                        in_reply_to = [
                            openapi_client.models.comment_in_reply_to_inner.Comment_inReplyTo_inner(
                                id = '', 
                                url = '', )
                            ], 
                        kind = 'plus#comment', 
                        object = openapi_client.models.comment_object.Comment_object(
                            content = '', 
                            object_type = 'comment', 
                            original_content = '', ), 
                        plusoners = openapi_client.models.comment_plusoners.Comment_plusoners(
                            total_items = 56, ), 
                        published = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        self_link = '', 
                        updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        verb = 'post', )
                    ],
                kind = 'plus#commentFeed',
                next_link = '',
                next_page_token = '',
                title = '',
                updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return CommentFeed(
        )
        """

    def testCommentFeed(self):
        """Test CommentFeed"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
