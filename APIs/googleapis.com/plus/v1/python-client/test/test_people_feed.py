# coding: utf-8

"""
    Google+ API

    Builds on top of the Google+ platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.people_feed import PeopleFeed

class TestPeopleFeed(unittest.TestCase):
    """PeopleFeed unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PeopleFeed:
        """Test PeopleFeed
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PeopleFeed`
        """
        model = PeopleFeed()
        if include_optional:
            return PeopleFeed(
                etag = '',
                items = [
                    openapi_client.models.person.Person(
                        about_me = '', 
                        age_range = openapi_client.models.person_age_range.Person_ageRange(
                            max = 56, 
                            min = 56, ), 
                        birthday = '', 
                        bragging_rights = '', 
                        circled_by_count = 56, 
                        cover = openapi_client.models.person_cover.Person_cover(
                            cover_info = openapi_client.models.person_cover_cover_info.Person_cover_coverInfo(
                                left_image_offset = 56, 
                                top_image_offset = 56, ), 
                            cover_photo = openapi_client.models.person_cover_cover_photo.Person_cover_coverPhoto(
                                height = 56, 
                                url = '', 
                                width = 56, ), 
                            layout = '', ), 
                        current_location = '', 
                        display_name = '', 
                        domain = '', 
                        emails = [
                            openapi_client.models.person_emails_inner.Person_emails_inner(
                                type = '', 
                                value = '', )
                            ], 
                        etag = '', 
                        gender = '', 
                        id = '', 
                        image = openapi_client.models.person_image.Person_image(
                            is_default = True, 
                            url = '', ), 
                        is_plus_user = True, 
                        kind = 'plus#person', 
                        language = '', 
                        name = openapi_client.models.person_name.Person_name(
                            family_name = '', 
                            formatted = '', 
                            given_name = '', 
                            honorific_prefix = '', 
                            honorific_suffix = '', 
                            middle_name = '', ), 
                        nickname = '', 
                        object_type = '', 
                        occupation = '', 
                        organizations = [
                            openapi_client.models.person_organizations_inner.Person_organizations_inner(
                                department = '', 
                                description = '', 
                                end_date = '', 
                                location = '', 
                                primary = True, 
                                start_date = '', 
                                title = '', 
                                type = '', )
                            ], 
                        places_lived = [
                            openapi_client.models.person_places_lived_inner.Person_placesLived_inner(
                                primary = True, 
                                value = '', )
                            ], 
                        plus_one_count = 56, 
                        relationship_status = '', 
                        skills = '', 
                        tagline = '', 
                        url = '', 
                        urls = [
                            openapi_client.models.person_urls_inner.Person_urls_inner(
                                label = '', 
                                type = '', 
                                value = '', )
                            ], 
                        verified = True, )
                    ],
                kind = 'plus#peopleFeed',
                next_page_token = '',
                self_link = '',
                title = '',
                total_items = 56
            )
        else:
            return PeopleFeed(
        )
        """

    def testPeopleFeed(self):
        """Test PeopleFeed"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
