# coding: utf-8

"""
    Analytics Reporting API

    Accesses Analytics report data.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.column_header import ColumnHeader

class TestColumnHeader(unittest.TestCase):
    """ColumnHeader unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ColumnHeader:
        """Test ColumnHeader
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ColumnHeader`
        """
        model = ColumnHeader()
        if include_optional:
            return ColumnHeader(
                dimensions = [
                    ''
                    ],
                metric_header = openapi_client.models.metric_header.MetricHeader(
                    metric_header_entries = [
                        openapi_client.models.metric_header_entry.MetricHeaderEntry(
                            name = '', 
                            type = 'METRIC_TYPE_UNSPECIFIED', )
                        ], 
                    pivot_headers = [
                        openapi_client.models.pivot_header.PivotHeader(
                            pivot_header_entries = [
                                openapi_client.models.pivot_header_entry.PivotHeaderEntry(
                                    dimension_names = [
                                        ''
                                        ], 
                                    dimension_values = [
                                        ''
                                        ], 
                                    metric = openapi_client.models.metric_header_entry.MetricHeaderEntry(
                                        name = '', 
                                        type = 'METRIC_TYPE_UNSPECIFIED', ), )
                                ], 
                            total_pivot_groups_count = 56, )
                        ], )
            )
        else:
            return ColumnHeader(
        )
        """

    def testColumnHeader(self):
        """Test ColumnHeader"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
