# coding: utf-8

"""
    Analytics Reporting API

    Accesses Analytics report data.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pivot import Pivot

class TestPivot(unittest.TestCase):
    """Pivot unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Pivot:
        """Test Pivot
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Pivot`
        """
        model = Pivot()
        if include_optional:
            return Pivot(
                dimension_filter_clauses = [
                    openapi_client.models.dimension_filter_clause.DimensionFilterClause(
                        filters = [
                            openapi_client.models.dimension_filter.DimensionFilter(
                                case_sensitive = True, 
                                dimension_name = '', 
                                expressions = [
                                    ''
                                    ], 
                                not = True, 
                                operator = 'OPERATOR_UNSPECIFIED', )
                            ], 
                        operator = 'OPERATOR_UNSPECIFIED', )
                    ],
                dimensions = [
                    openapi_client.models.dimension.Dimension(
                        histogram_buckets = [
                            ''
                            ], 
                        name = '', )
                    ],
                max_group_count = 56,
                metrics = [
                    openapi_client.models.metric.Metric(
                        alias = '', 
                        expression = '', 
                        formatting_type = 'METRIC_TYPE_UNSPECIFIED', )
                    ],
                start_group = 56
            )
        else:
            return Pivot(
        )
        """

    def testPivot(self):
        """Test Pivot"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
