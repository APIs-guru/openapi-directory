# coding: utf-8

"""
    Analytics Reporting API

    Accesses Analytics report data.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.report_data import ReportData

class TestReportData(unittest.TestCase):
    """ReportData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReportData:
        """Test ReportData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReportData`
        """
        model = ReportData()
        if include_optional:
            return ReportData(
                data_last_refreshed = '',
                empty_reason = '',
                is_data_golden = True,
                maximums = [
                    openapi_client.models.date_range_values.DateRangeValues(
                        pivot_value_regions = [
                            openapi_client.models.pivot_value_region.PivotValueRegion(
                                values = [
                                    ''
                                    ], )
                            ], 
                        values = [
                            ''
                            ], )
                    ],
                minimums = [
                    openapi_client.models.date_range_values.DateRangeValues(
                        pivot_value_regions = [
                            openapi_client.models.pivot_value_region.PivotValueRegion(
                                values = [
                                    ''
                                    ], )
                            ], 
                        values = [
                            ''
                            ], )
                    ],
                row_count = 56,
                rows = [
                    openapi_client.models.report_row.ReportRow(
                        dimensions = [
                            ''
                            ], 
                        metrics = [
                            openapi_client.models.date_range_values.DateRangeValues(
                                pivot_value_regions = [
                                    openapi_client.models.pivot_value_region.PivotValueRegion(
                                        values = [
                                            ''
                                            ], )
                                    ], 
                                values = [
                                    ''
                                    ], )
                            ], )
                    ],
                samples_read_counts = [
                    ''
                    ],
                sampling_space_sizes = [
                    ''
                    ],
                totals = [
                    openapi_client.models.date_range_values.DateRangeValues(
                        pivot_value_regions = [
                            openapi_client.models.pivot_value_region.PivotValueRegion(
                                values = [
                                    ''
                                    ], )
                            ], 
                        values = [
                            ''
                            ], )
                    ]
            )
        else:
            return ReportData(
        )
        """

    def testReportData(self):
        """Test ReportData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
