# coding: utf-8

"""
    Analytics Reporting API

    Accesses Analytics report data.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.user_activity_session import UserActivitySession

class TestUserActivitySession(unittest.TestCase):
    """UserActivitySession unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserActivitySession:
        """Test UserActivitySession
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserActivitySession`
        """
        model = UserActivitySession()
        if include_optional:
            return UserActivitySession(
                activities = [
                    openapi_client.models.activity.Activity(
                        activity_time = '', 
                        activity_type = 'ACTIVITY_TYPE_UNSPECIFIED', 
                        appview = openapi_client.models.screenview_data.ScreenviewData(
                            app_name = '', 
                            mobile_device_branding = '', 
                            mobile_device_model = '', 
                            screen_name = '', ), 
                        campaign = '', 
                        channel_grouping = '', 
                        custom_dimension = [
                            openapi_client.models.custom_dimension.CustomDimension(
                                index = 56, 
                                value = '', )
                            ], 
                        ecommerce = openapi_client.models.ecommerce_data.EcommerceData(
                            action_type = 'UNKNOWN', 
                            ecommerce_type = 'ECOMMERCE_TYPE_UNSPECIFIED', 
                            products = [
                                openapi_client.models.product_data.ProductData(
                                    item_revenue = 1.337, 
                                    product_name = '', 
                                    product_quantity = '', 
                                    product_sku = '', )
                                ], 
                            transaction = openapi_client.models.transaction_data.TransactionData(
                                transaction_id = '', 
                                transaction_revenue = 1.337, 
                                transaction_shipping = 1.337, 
                                transaction_tax = 1.337, ), ), 
                        event = openapi_client.models.event_data.EventData(
                            event_action = '', 
                            event_category = '', 
                            event_count = '', 
                            event_label = '', 
                            event_value = '', ), 
                        goals = openapi_client.models.goal_set_data.GoalSetData(), 
                        hostname = '', 
                        keyword = '', 
                        landing_page_path = '', 
                        medium = '', 
                        pageview = openapi_client.models.pageview_data.PageviewData(
                            page_path = '', 
                            page_title = '', ), 
                        source = '', )
                    ],
                data_source = '',
                device_category = '',
                platform = '',
                session_date = '',
                session_id = ''
            )
        else:
            return UserActivitySession(
        )
        """

    def testUserActivitySession(self):
        """Test UserActivitySession"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
