# coding: utf-8

"""
    Cloud Logging API

    Writes log entries and manages your Cloud Logging configuration.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_sinks_response import ListSinksResponse

class TestListSinksResponse(unittest.TestCase):
    """ListSinksResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListSinksResponse:
        """Test ListSinksResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListSinksResponse`
        """
        model = ListSinksResponse()
        if include_optional:
            return ListSinksResponse(
                next_page_token = '',
                sinks = [
                    openapi_client.models.log_sink.LogSink(
                        bigquery_options = openapi_client.models.big_query_options.BigQueryOptions(
                            use_partitioned_tables = True, 
                            uses_timestamp_column_partitioning = True, ), 
                        create_time = '', 
                        description = '', 
                        destination = '', 
                        disabled = True, 
                        exclusions = [
                            openapi_client.models.log_exclusion.LogExclusion(
                                create_time = '', 
                                description = '', 
                                disabled = True, 
                                filter = '', 
                                name = '', 
                                update_time = '', )
                            ], 
                        filter = '', 
                        include_children = True, 
                        name = '', 
                        output_version_format = 'VERSION_FORMAT_UNSPECIFIED', 
                        update_time = '', 
                        writer_identity = '', )
                    ]
            )
        else:
            return ListSinksResponse(
        )
        """

    def testListSinksResponse(self):
        """Test ListSinksResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
