# coding: utf-8

"""
    Cloud Logging API

    Writes log entries and manages your Cloud Logging configuration.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_buckets_response import ListBucketsResponse

class TestListBucketsResponse(unittest.TestCase):
    """ListBucketsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListBucketsResponse:
        """Test ListBucketsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListBucketsResponse`
        """
        model = ListBucketsResponse()
        if include_optional:
            return ListBucketsResponse(
                buckets = [
                    openapi_client.models.log_bucket.LogBucket(
                        analytics_enabled = True, 
                        cmek_settings = openapi_client.models.cmek_settings.CmekSettings(
                            kms_key_name = '', 
                            kms_key_version_name = '', 
                            name = '', 
                            service_account_id = '', ), 
                        create_time = '', 
                        description = '', 
                        index_configs = [
                            openapi_client.models.index_config.IndexConfig(
                                create_time = '', 
                                field_path = '', 
                                type = 'INDEX_TYPE_UNSPECIFIED', )
                            ], 
                        lifecycle_state = 'LIFECYCLE_STATE_UNSPECIFIED', 
                        locked = True, 
                        name = '', 
                        restricted_fields = [
                            ''
                            ], 
                        retention_days = 56, 
                        update_time = '', )
                    ],
                next_page_token = ''
            )
        else:
            return ListBucketsResponse(
        )
        """

    def testListBucketsResponse(self):
        """Test ListBucketsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
