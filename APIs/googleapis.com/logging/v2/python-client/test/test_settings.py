# coding: utf-8

"""
    Cloud Logging API

    Writes log entries and manages your Cloud Logging configuration.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.settings import Settings

class TestSettings(unittest.TestCase):
    """Settings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Settings:
        """Test Settings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Settings`
        """
        model = Settings()
        if include_optional:
            return Settings(
                default_sink_config = openapi_client.models.default_sink_config.DefaultSinkConfig(
                    exclusions = [
                        openapi_client.models.log_exclusion.LogExclusion(
                            create_time = '', 
                            description = '', 
                            disabled = True, 
                            filter = '', 
                            name = '', 
                            update_time = '', )
                        ], 
                    filter = '', 
                    mode = 'FILTER_WRITE_MODE_UNSPECIFIED', ),
                disable_default_sink = True,
                kms_key_name = '',
                kms_service_account_id = '',
                logging_service_account_id = '',
                name = '',
                storage_location = ''
            )
        else:
            return Settings(
        )
        """

    def testSettings(self):
        """Test Settings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
