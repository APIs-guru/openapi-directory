# coding: utf-8

"""
    Cloud Logging API

    Writes log entries and manages your Cloud Logging configuration.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.log_metric import LogMetric

class TestLogMetric(unittest.TestCase):
    """LogMetric unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LogMetric:
        """Test LogMetric
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LogMetric`
        """
        model = LogMetric()
        if include_optional:
            return LogMetric(
                bucket_name = '',
                bucket_options = openapi_client.models.bucket_options.BucketOptions(
                    explicit_buckets = openapi_client.models.explicit.Explicit(
                        bounds = [
                            1.337
                            ], ), 
                    exponential_buckets = openapi_client.models.exponential.Exponential(
                        growth_factor = 1.337, 
                        num_finite_buckets = 56, 
                        scale = 1.337, ), 
                    linear_buckets = openapi_client.models.linear.Linear(
                        num_finite_buckets = 56, 
                        offset = 1.337, 
                        width = 1.337, ), ),
                create_time = '',
                description = '',
                disabled = True,
                filter = '',
                label_extractors = {
                    'key' : ''
                    },
                metric_descriptor = openapi_client.models.metric_descriptor.MetricDescriptor(
                    description = '', 
                    display_name = '', 
                    labels = [
                        openapi_client.models.label_descriptor.LabelDescriptor(
                            description = '', 
                            key = '', 
                            value_type = 'STRING', )
                        ], 
                    launch_stage = 'LAUNCH_STAGE_UNSPECIFIED', 
                    metadata = openapi_client.models.metric_descriptor_metadata.MetricDescriptorMetadata(
                        ingest_delay = '', 
                        launch_stage = 'LAUNCH_STAGE_UNSPECIFIED', 
                        sample_period = '', ), 
                    metric_kind = 'METRIC_KIND_UNSPECIFIED', 
                    monitored_resource_types = [
                        ''
                        ], 
                    name = '', 
                    type = '', 
                    unit = '', 
                    value_type = 'VALUE_TYPE_UNSPECIFIED', ),
                name = '',
                update_time = '',
                value_extractor = '',
                version = 'V2'
            )
        else:
            return LogMetric(
        )
        """

    def testLogMetric(self):
        """Test LogMetric"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
