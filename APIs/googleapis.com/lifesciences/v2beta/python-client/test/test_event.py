# coding: utf-8

"""
    Cloud Life Sciences API

    Cloud Life Sciences is a suite of services and tools for managing, processing, and transforming life sciences data.

    The version of the OpenAPI document: v2beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.event import Event

class TestEvent(unittest.TestCase):
    """Event unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Event:
        """Test Event
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Event`
        """
        model = Event()
        if include_optional:
            return Event(
                container_killed = openapi_client.models.container_killed_event.ContainerKilledEvent(
                    action_id = 56, ),
                container_started = openapi_client.models.container_started_event.ContainerStartedEvent(
                    action_id = 56, 
                    ip_address = '', 
                    port_mappings = {
                        'key' : 56
                        }, ),
                container_stopped = openapi_client.models.container_stopped_event.ContainerStoppedEvent(
                    action_id = 56, 
                    exit_status = 56, 
                    stderr = '', ),
                delayed = openapi_client.models.delayed_event.DelayedEvent(
                    cause = '', 
                    metrics = [
                        ''
                        ], ),
                description = '',
                failed = openapi_client.models.failed_event.FailedEvent(
                    cause = '', 
                    code = 'OK', ),
                pull_started = openapi_client.models.pull_started_event.PullStartedEvent(
                    image_uri = '', ),
                pull_stopped = openapi_client.models.pull_stopped_event.PullStoppedEvent(
                    image_uri = '', ),
                timestamp = '',
                unexpected_exit_status = openapi_client.models.unexpected_exit_status_event.UnexpectedExitStatusEvent(
                    action_id = 56, 
                    exit_status = 56, ),
                worker_assigned = openapi_client.models.worker_assigned_event.WorkerAssignedEvent(
                    instance = '', 
                    machine_type = '', 
                    zone = '', ),
                worker_released = openapi_client.models.worker_released_event.WorkerReleasedEvent(
                    instance = '', 
                    zone = '', )
            )
        else:
            return Event(
        )
        """

    def testEvent(self):
        """Test Event"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
