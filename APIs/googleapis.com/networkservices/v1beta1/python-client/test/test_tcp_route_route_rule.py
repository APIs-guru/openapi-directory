# coding: utf-8

"""
    Network Services API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tcp_route_route_rule import TcpRouteRouteRule

class TestTcpRouteRouteRule(unittest.TestCase):
    """TcpRouteRouteRule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TcpRouteRouteRule:
        """Test TcpRouteRouteRule
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TcpRouteRouteRule`
        """
        model = TcpRouteRouteRule()
        if include_optional:
            return TcpRouteRouteRule(
                action = openapi_client.models.tcp_route_route_action.TcpRouteRouteAction(
                    destinations = [
                        openapi_client.models.tcp_route_route_destination.TcpRouteRouteDestination(
                            service_name = '', 
                            weight = 56, )
                        ], 
                    idle_timeout = '', 
                    original_destination = True, ),
                matches = [
                    openapi_client.models.tcp_route_route_match.TcpRouteRouteMatch(
                        address = '', 
                        port = '', )
                    ]
            )
        else:
            return TcpRouteRouteRule(
        )
        """

    def testTcpRouteRouteRule(self):
        """Test TcpRouteRouteRule"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
