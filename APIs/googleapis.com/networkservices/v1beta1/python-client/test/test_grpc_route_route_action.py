# coding: utf-8

"""
    Network Services API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.grpc_route_route_action import GrpcRouteRouteAction

class TestGrpcRouteRouteAction(unittest.TestCase):
    """GrpcRouteRouteAction unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GrpcRouteRouteAction:
        """Test GrpcRouteRouteAction
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GrpcRouteRouteAction`
        """
        model = GrpcRouteRouteAction()
        if include_optional:
            return GrpcRouteRouteAction(
                destinations = [
                    openapi_client.models.grpc_route_destination.GrpcRouteDestination(
                        service_name = '', 
                        weight = 56, )
                    ],
                fault_injection_policy = openapi_client.models.grpc_route_fault_injection_policy.GrpcRouteFaultInjectionPolicy(
                    abort = openapi_client.models.grpc_route_fault_injection_policy_abort.GrpcRouteFaultInjectionPolicyAbort(
                        http_status = 56, 
                        percentage = 56, ), 
                    delay = openapi_client.models.grpc_route_fault_injection_policy_delay.GrpcRouteFaultInjectionPolicyDelay(
                        fixed_delay = '', 
                        percentage = 56, ), ),
                idle_timeout = '',
                retry_policy = openapi_client.models.grpc_route_retry_policy.GrpcRouteRetryPolicy(
                    num_retries = 56, 
                    retry_conditions = [
                        ''
                        ], ),
                stateful_session_affinity = openapi_client.models.grpc_route_stateful_session_affinity_policy.GrpcRouteStatefulSessionAffinityPolicy(
                    cookie_ttl = '', ),
                timeout = ''
            )
        else:
            return GrpcRouteRouteAction(
        )
        """

    def testGrpcRouteRouteAction(self):
        """Test GrpcRouteRouteAction"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
