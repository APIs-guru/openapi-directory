# coding: utf-8

"""
    Network Services API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.extension_chain import ExtensionChain

class TestExtensionChain(unittest.TestCase):
    """ExtensionChain unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExtensionChain:
        """Test ExtensionChain
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExtensionChain`
        """
        model = ExtensionChain()
        if include_optional:
            return ExtensionChain(
                extensions = [
                    openapi_client.models.extension_chain_extension.ExtensionChainExtension(
                        authority = '', 
                        fail_open = True, 
                        forward_headers = [
                            ''
                            ], 
                        name = '', 
                        service = '', 
                        supported_events = [
                            'EVENT_TYPE_UNSPECIFIED'
                            ], 
                        timeout = '', )
                    ],
                match_condition = openapi_client.models.extension_chain_match_condition.ExtensionChainMatchCondition(
                    cel_expression = '', ),
                name = ''
            )
        else:
            return ExtensionChain(
        )
        """

    def testExtensionChain(self):
        """Test ExtensionChain"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
