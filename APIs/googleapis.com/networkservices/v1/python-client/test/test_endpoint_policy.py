# coding: utf-8

"""
    Network Services API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.endpoint_policy import EndpointPolicy

class TestEndpointPolicy(unittest.TestCase):
    """EndpointPolicy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EndpointPolicy:
        """Test EndpointPolicy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EndpointPolicy`
        """
        model = EndpointPolicy()
        if include_optional:
            return EndpointPolicy(
                authorization_policy = '',
                client_tls_policy = '',
                create_time = '',
                description = '',
                endpoint_matcher = openapi_client.models.endpoint_matcher.EndpointMatcher(
                    metadata_label_matcher = openapi_client.models.endpoint_matcher_metadata_label_matcher.EndpointMatcherMetadataLabelMatcher(
                        metadata_label_match_criteria = 'METADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED', 
                        metadata_labels = [
                            openapi_client.models.endpoint_matcher_metadata_label_matcher_metadata_labels.EndpointMatcherMetadataLabelMatcherMetadataLabels(
                                label_name = '', 
                                label_value = '', )
                            ], ), ),
                labels = {
                    'key' : ''
                    },
                name = '',
                server_tls_policy = '',
                traffic_port_selector = openapi_client.models.traffic_port_selector.TrafficPortSelector(
                    ports = [
                        ''
                        ], ),
                type = 'ENDPOINT_POLICY_TYPE_UNSPECIFIED',
                update_time = ''
            )
        else:
            return EndpointPolicy(
        )
        """

    def testEndpointPolicy(self):
        """Test EndpointPolicy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
