# coding: utf-8

"""
    Remote Build Execution API

    Supplies a Remote Execution API service for tools such as bazel.

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictStr, field_validator
from typing import Any, ClassVar, Dict, List, Optional
from typing import Optional, Set
from typing_extensions import Self

class GoogleDevtoolsRemotebuildbotCommandStatus(BaseModel):
    """
    The internal status of the command result.
    """ # noqa: E501
    code: Optional[StrictStr] = Field(default=None, description="The status code.")
    message: Optional[StrictStr] = Field(default=None, description="The error message.")
    __properties: ClassVar[List[str]] = ["code", "message"]

    @field_validator('code')
    def code_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in set(['OK', 'INVALID_ARGUMENT', 'DEADLINE_EXCEEDED', 'NOT_FOUND', 'PERMISSION_DENIED', 'INTERNAL', 'ABORTED', 'FAILED_PRECONDITION', 'CLEANUP_ERROR', 'DOWNLOAD_INPUTS_ERROR', 'UNKNOWN', 'UPLOAD_OUTPUTS_ERROR', 'UPLOAD_OUTPUTS_BYTES_LIMIT_EXCEEDED', 'DOCKER_LOGIN_ERROR', 'DOCKER_IMAGE_PULL_ERROR', 'DOCKER_IMAGE_EXIST_ERROR', 'DUPLICATE_INPUTS', 'DOCKER_IMAGE_PERMISSION_DENIED', 'DOCKER_IMAGE_NOT_FOUND', 'WORKING_DIR_NOT_FOUND', 'WORKING_DIR_NOT_IN_BASE_DIR', 'DOCKER_UNAVAILABLE', 'NO_CUDA_CAPABLE_DEVICE', 'REMOTE_CAS_DOWNLOAD_ERROR', 'REMOTE_CAS_UPLOAD_ERROR', 'LOCAL_CASPROXY_NOT_RUNNING', 'DOCKER_CREATE_CONTAINER_ERROR', 'DOCKER_INVALID_ULIMIT', 'DOCKER_UNKNOWN_RUNTIME', 'DOCKER_UNKNOWN_CAPABILITY', 'DOCKER_UNKNOWN_ERROR', 'DOCKER_CREATE_COMPUTE_SYSTEM_ERROR', 'DOCKER_PREPARELAYER_ERROR', 'DOCKER_INCOMPATIBLE_OS_ERROR', 'DOCKER_CREATE_RUNTIME_FILE_NOT_FOUND', 'DOCKER_CREATE_RUNTIME_PERMISSION_DENIED', 'DOCKER_CREATE_PROCESS_FILE_NOT_FOUND', 'DOCKER_CREATE_COMPUTE_SYSTEM_INCORRECT_PARAMETER_ERROR', 'DOCKER_TOO_MANY_SYMBOLIC_LINK_LEVELS', 'LOCAL_CONTAINER_MANAGER_NOT_RUNNING', 'DOCKER_IMAGE_VPCSC_PERMISSION_DENIED', 'WORKING_DIR_NOT_RELATIVE', 'DOCKER_MISSING_CONTAINER', 'DOCKER_MISSING_BLOB_IN_IMAGE', 'DOCKER_INVALID_VOLUME', 'DOCKER_CREATE_RUNTIME_CANNOT_MOUNT_TO_PROC', 'DOCKER_START_RUNTIME_FILE_NOT_FOUND', 'DOCKER_CREATE_INVALID_LAYERCHAIN_JSON', 'INCOMPATIBLE_CUDA_VERSION', 'LOCAL_WORKER_MANAGER_NOT_RUNNING', 'DOCKER_START_RUNTIME_FILE_FORMAT_ERROR', 'DOCKER_START_RUNTIME_PERMISSION_DENIED', 'DOCKER_PERMISSION_DENIED']):
            raise ValueError("must be one of enum values ('OK', 'INVALID_ARGUMENT', 'DEADLINE_EXCEEDED', 'NOT_FOUND', 'PERMISSION_DENIED', 'INTERNAL', 'ABORTED', 'FAILED_PRECONDITION', 'CLEANUP_ERROR', 'DOWNLOAD_INPUTS_ERROR', 'UNKNOWN', 'UPLOAD_OUTPUTS_ERROR', 'UPLOAD_OUTPUTS_BYTES_LIMIT_EXCEEDED', 'DOCKER_LOGIN_ERROR', 'DOCKER_IMAGE_PULL_ERROR', 'DOCKER_IMAGE_EXIST_ERROR', 'DUPLICATE_INPUTS', 'DOCKER_IMAGE_PERMISSION_DENIED', 'DOCKER_IMAGE_NOT_FOUND', 'WORKING_DIR_NOT_FOUND', 'WORKING_DIR_NOT_IN_BASE_DIR', 'DOCKER_UNAVAILABLE', 'NO_CUDA_CAPABLE_DEVICE', 'REMOTE_CAS_DOWNLOAD_ERROR', 'REMOTE_CAS_UPLOAD_ERROR', 'LOCAL_CASPROXY_NOT_RUNNING', 'DOCKER_CREATE_CONTAINER_ERROR', 'DOCKER_INVALID_ULIMIT', 'DOCKER_UNKNOWN_RUNTIME', 'DOCKER_UNKNOWN_CAPABILITY', 'DOCKER_UNKNOWN_ERROR', 'DOCKER_CREATE_COMPUTE_SYSTEM_ERROR', 'DOCKER_PREPARELAYER_ERROR', 'DOCKER_INCOMPATIBLE_OS_ERROR', 'DOCKER_CREATE_RUNTIME_FILE_NOT_FOUND', 'DOCKER_CREATE_RUNTIME_PERMISSION_DENIED', 'DOCKER_CREATE_PROCESS_FILE_NOT_FOUND', 'DOCKER_CREATE_COMPUTE_SYSTEM_INCORRECT_PARAMETER_ERROR', 'DOCKER_TOO_MANY_SYMBOLIC_LINK_LEVELS', 'LOCAL_CONTAINER_MANAGER_NOT_RUNNING', 'DOCKER_IMAGE_VPCSC_PERMISSION_DENIED', 'WORKING_DIR_NOT_RELATIVE', 'DOCKER_MISSING_CONTAINER', 'DOCKER_MISSING_BLOB_IN_IMAGE', 'DOCKER_INVALID_VOLUME', 'DOCKER_CREATE_RUNTIME_CANNOT_MOUNT_TO_PROC', 'DOCKER_START_RUNTIME_FILE_NOT_FOUND', 'DOCKER_CREATE_INVALID_LAYERCHAIN_JSON', 'INCOMPATIBLE_CUDA_VERSION', 'LOCAL_WORKER_MANAGER_NOT_RUNNING', 'DOCKER_START_RUNTIME_FILE_FORMAT_ERROR', 'DOCKER_START_RUNTIME_PERMISSION_DENIED', 'DOCKER_PERMISSION_DENIED')")
        return value

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of GoogleDevtoolsRemotebuildbotCommandStatus from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of GoogleDevtoolsRemotebuildbotCommandStatus from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "code": obj.get("code"),
            "message": obj.get("message")
        })
        return _obj


