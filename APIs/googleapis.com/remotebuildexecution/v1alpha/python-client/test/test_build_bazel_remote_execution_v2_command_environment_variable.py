# coding: utf-8

"""
    Remote Build Execution API

    Supplies a Remote Execution API service for tools such as bazel.

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.build_bazel_remote_execution_v2_command_environment_variable import BuildBazelRemoteExecutionV2CommandEnvironmentVariable

class TestBuildBazelRemoteExecutionV2CommandEnvironmentVariable(unittest.TestCase):
    """BuildBazelRemoteExecutionV2CommandEnvironmentVariable unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BuildBazelRemoteExecutionV2CommandEnvironmentVariable:
        """Test BuildBazelRemoteExecutionV2CommandEnvironmentVariable
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BuildBazelRemoteExecutionV2CommandEnvironmentVariable`
        """
        model = BuildBazelRemoteExecutionV2CommandEnvironmentVariable()
        if include_optional:
            return BuildBazelRemoteExecutionV2CommandEnvironmentVariable(
                name = '',
                value = ''
            )
        else:
            return BuildBazelRemoteExecutionV2CommandEnvironmentVariable(
        )
        """

    def testBuildBazelRemoteExecutionV2CommandEnvironmentVariable(self):
        """Test BuildBazelRemoteExecutionV2CommandEnvironmentVariable"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
