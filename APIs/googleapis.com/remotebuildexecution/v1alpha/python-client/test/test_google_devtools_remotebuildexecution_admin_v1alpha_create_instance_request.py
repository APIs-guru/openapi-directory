# coding: utf-8

"""
    Remote Build Execution API

    Supplies a Remote Execution API service for tools such as bazel.

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_devtools_remotebuildexecution_admin_v1alpha_create_instance_request import GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest

class TestGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest(unittest.TestCase):
    """GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest:
        """Test GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest`
        """
        model = GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest()
        if include_optional:
            return GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest(
                instance = openapi_client.models.google_devtools_remotebuildexecution_admin_v1alpha_instance.GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance(
                    feature_policy = openapi_client.models.google_devtools_remotebuildexecution_admin_v1alpha_feature_policy.GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy(
                        action_hermeticity = 'ACTION_HERMETICITY_UNSPECIFIED', 
                        action_isolation = 'ACTION_ISOLATION_UNSPECIFIED', 
                        container_image_sources = openapi_client.models.google_devtools_remotebuildexecution_admin_v1alpha_feature_policy_feature.GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature(
                            allowed_values = [
                                ''
                                ], 
                            policy = 'POLICY_UNSPECIFIED', ), 
                        docker_add_capabilities = openapi_client.models.google_devtools_remotebuildexecution_admin_v1alpha_feature_policy_feature.GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature(
                            policy = 'POLICY_UNSPECIFIED', ), 
                        docker_chroot_path = , 
                        docker_network = , 
                        docker_privileged = , 
                        docker_run_as_container_provided_user = , 
                        docker_run_as_root = , 
                        docker_runtime = , 
                        docker_sibling_containers = , 
                        docker_ulimits = , 
                        linux_execution = 'LINUX_EXECUTION_UNSPECIFIED', 
                        linux_isolation = 'LINUX_ISOLATION_UNSPECIFIED', 
                        mac_execution = 'MAC_EXECUTION_UNSPECIFIED', 
                        vm_verification = 'VM_VERIFICATION_UNSPECIFIED', 
                        windows_execution = 'WINDOWS_EXECUTION_UNSPECIFIED', ), 
                    location = '', 
                    logging_enabled = True, 
                    name = '', 
                    scheduler_notification_config = openapi_client.models.google_devtools_remotebuildexecution_admin_v1alpha_scheduler_notification_config.GoogleDevtoolsRemotebuildexecutionAdminV1alphaSchedulerNotificationConfig(
                        topic = '', ), 
                    state = 'STATE_UNSPECIFIED', ),
                instance_id = '',
                parent = ''
            )
        else:
            return GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest(
        )
        """

    def testGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest(self):
        """Test GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
