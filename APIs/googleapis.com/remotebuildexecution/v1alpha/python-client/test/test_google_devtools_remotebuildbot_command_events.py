# coding: utf-8

"""
    Remote Build Execution API

    Supplies a Remote Execution API service for tools such as bazel.

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_devtools_remotebuildbot_command_events import GoogleDevtoolsRemotebuildbotCommandEvents

class TestGoogleDevtoolsRemotebuildbotCommandEvents(unittest.TestCase):
    """GoogleDevtoolsRemotebuildbotCommandEvents unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleDevtoolsRemotebuildbotCommandEvents:
        """Test GoogleDevtoolsRemotebuildbotCommandEvents
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleDevtoolsRemotebuildbotCommandEvents`
        """
        model = GoogleDevtoolsRemotebuildbotCommandEvents()
        if include_optional:
            return GoogleDevtoolsRemotebuildbotCommandEvents(
                cm_usage = 'CONFIG_NONE',
                docker_cache_hit = True,
                docker_image_name = '',
                input_cache_miss_bytes = 1.337,
                input_cache_miss_files = 1.337,
                num_errors = '',
                num_warnings = '',
                output_location = 'LOCATION_UNDEFINED',
                used_async_container = True
            )
        else:
            return GoogleDevtoolsRemotebuildbotCommandEvents(
        )
        """

    def testGoogleDevtoolsRemotebuildbotCommandEvents(self):
        """Test GoogleDevtoolsRemotebuildbotCommandEvents"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
