# coding: utf-8

"""
    Remote Build Execution API

    Supplies a Remote Execution API service for tools such as bazel.

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.build_bazel_remote_execution_v2_tree import BuildBazelRemoteExecutionV2Tree

class TestBuildBazelRemoteExecutionV2Tree(unittest.TestCase):
    """BuildBazelRemoteExecutionV2Tree unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BuildBazelRemoteExecutionV2Tree:
        """Test BuildBazelRemoteExecutionV2Tree
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BuildBazelRemoteExecutionV2Tree`
        """
        model = BuildBazelRemoteExecutionV2Tree()
        if include_optional:
            return BuildBazelRemoteExecutionV2Tree(
                children = [
                    openapi_client.models.build_bazel_remote_execution_v2_directory.BuildBazelRemoteExecutionV2Directory(
                        directories = [
                            openapi_client.models.build_bazel_remote_execution_v2_directory_node.BuildBazelRemoteExecutionV2DirectoryNode(
                                digest = openapi_client.models.build_bazel_remote_execution_v2_digest.BuildBazelRemoteExecutionV2Digest(
                                    hash = '', 
                                    size_bytes = '', ), 
                                name = '', )
                            ], 
                        files = [
                            openapi_client.models.build_bazel_remote_execution_v2_file_node.BuildBazelRemoteExecutionV2FileNode(
                                is_executable = True, 
                                name = '', 
                                node_properties = openapi_client.models.build_bazel_remote_execution_v2_node_properties.BuildBazelRemoteExecutionV2NodeProperties(
                                    mtime = '', 
                                    properties = [
                                        openapi_client.models.build_bazel_remote_execution_v2_node_property.BuildBazelRemoteExecutionV2NodeProperty(
                                            name = '', 
                                            value = '', )
                                        ], 
                                    unix_mode = 56, ), )
                            ], 
                        node_properties = openapi_client.models.build_bazel_remote_execution_v2_node_properties.BuildBazelRemoteExecutionV2NodeProperties(
                            mtime = '', 
                            unix_mode = 56, ), 
                        symlinks = [
                            openapi_client.models.build_bazel_remote_execution_v2_symlink_node.BuildBazelRemoteExecutionV2SymlinkNode(
                                name = '', 
                                target = '', )
                            ], )
                    ],
                root = openapi_client.models.build_bazel_remote_execution_v2_directory.BuildBazelRemoteExecutionV2Directory(
                    directories = [
                        openapi_client.models.build_bazel_remote_execution_v2_directory_node.BuildBazelRemoteExecutionV2DirectoryNode(
                            digest = openapi_client.models.build_bazel_remote_execution_v2_digest.BuildBazelRemoteExecutionV2Digest(
                                hash = '', 
                                size_bytes = '', ), 
                            name = '', )
                        ], 
                    files = [
                        openapi_client.models.build_bazel_remote_execution_v2_file_node.BuildBazelRemoteExecutionV2FileNode(
                            is_executable = True, 
                            name = '', 
                            node_properties = openapi_client.models.build_bazel_remote_execution_v2_node_properties.BuildBazelRemoteExecutionV2NodeProperties(
                                mtime = '', 
                                properties = [
                                    openapi_client.models.build_bazel_remote_execution_v2_node_property.BuildBazelRemoteExecutionV2NodeProperty(
                                        name = '', 
                                        value = '', )
                                    ], 
                                unix_mode = 56, ), )
                        ], 
                    node_properties = openapi_client.models.build_bazel_remote_execution_v2_node_properties.BuildBazelRemoteExecutionV2NodeProperties(
                        mtime = '', 
                        unix_mode = 56, ), 
                    symlinks = [
                        openapi_client.models.build_bazel_remote_execution_v2_symlink_node.BuildBazelRemoteExecutionV2SymlinkNode(
                            name = '', 
                            target = '', )
                        ], )
            )
        else:
            return BuildBazelRemoteExecutionV2Tree(
        )
        """

    def testBuildBazelRemoteExecutionV2Tree(self):
        """Test BuildBazelRemoteExecutionV2Tree"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
