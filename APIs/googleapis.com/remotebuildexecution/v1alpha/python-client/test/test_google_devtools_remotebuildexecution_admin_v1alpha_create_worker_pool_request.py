# coding: utf-8

"""
    Remote Build Execution API

    Supplies a Remote Execution API service for tools such as bazel.

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_devtools_remotebuildexecution_admin_v1alpha_create_worker_pool_request import GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest

class TestGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest(unittest.TestCase):
    """GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest:
        """Test GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest`
        """
        model = GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest()
        if include_optional:
            return GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest(
                parent = '',
                pool_id = '',
                worker_pool = openapi_client.models.google_devtools_remotebuildexecution_admin_v1alpha_worker_pool.GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool(
                    autoscale = openapi_client.models.google_devtools_remotebuildexecution_admin_v1alpha_autoscale.GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale(
                        max_size = '', 
                        min_idle_workers = '', 
                        min_size = '', ), 
                    channel = '', 
                    host_os = '', 
                    name = '', 
                    state = 'STATE_UNSPECIFIED', 
                    worker_config = openapi_client.models.google_devtools_remotebuildexecution_admin_v1alpha_worker_config.GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig(
                        accelerator = openapi_client.models.google_devtools_remotebuildexecution_admin_v1alpha_accelerator_config.GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig(
                            accelerator_count = '', 
                            accelerator_type = '', ), 
                        attached_disks = openapi_client.models.google_devtools_remotebuildexecution_admin_v1alpha_disks.GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks(
                            docker_root_disk = openapi_client.models.google_devtools_remotebuildexecution_admin_v1alpha_disks_persistent_disk.GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksPersistentDisk(
                                disk_size_gb = '', 
                                disk_type = '', 
                                source_image = '', ), 
                            local_ssd = openapi_client.models.google_devtools_remotebuildexecution_admin_v1alpha_disks_local_ssd.GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD(
                                count = '', 
                                size_gb = '', ), ), 
                        disk_size_gb = '', 
                        disk_type = '', 
                        labels = {
                            'key' : ''
                            }, 
                        machine_type = '', 
                        max_concurrent_actions = '', 
                        min_cpu_platform = '', 
                        network_access = '', 
                        reserved = True, 
                        sole_tenant_node_type = '', 
                        user_service_accounts = [
                            ''
                            ], 
                        vm_image = '', 
                        zones = [
                            ''
                            ], ), 
                    worker_count = '', )
            )
        else:
            return GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest(
        )
        """

    def testGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest(self):
        """Test GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
