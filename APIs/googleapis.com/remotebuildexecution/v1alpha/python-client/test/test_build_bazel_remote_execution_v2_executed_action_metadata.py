# coding: utf-8

"""
    Remote Build Execution API

    Supplies a Remote Execution API service for tools such as bazel.

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.build_bazel_remote_execution_v2_executed_action_metadata import BuildBazelRemoteExecutionV2ExecutedActionMetadata

class TestBuildBazelRemoteExecutionV2ExecutedActionMetadata(unittest.TestCase):
    """BuildBazelRemoteExecutionV2ExecutedActionMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BuildBazelRemoteExecutionV2ExecutedActionMetadata:
        """Test BuildBazelRemoteExecutionV2ExecutedActionMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BuildBazelRemoteExecutionV2ExecutedActionMetadata`
        """
        model = BuildBazelRemoteExecutionV2ExecutedActionMetadata()
        if include_optional:
            return BuildBazelRemoteExecutionV2ExecutedActionMetadata(
                auxiliary_metadata = [
                    {
                        'key' : null
                        }
                    ],
                execution_completed_timestamp = '',
                execution_start_timestamp = '',
                input_fetch_completed_timestamp = '',
                input_fetch_start_timestamp = '',
                output_upload_completed_timestamp = '',
                output_upload_start_timestamp = '',
                queued_timestamp = '',
                virtual_execution_duration = '',
                worker = '',
                worker_completed_timestamp = '',
                worker_start_timestamp = ''
            )
        else:
            return BuildBazelRemoteExecutionV2ExecutedActionMetadata(
        )
        """

    def testBuildBazelRemoteExecutionV2ExecutedActionMetadata(self):
        """Test BuildBazelRemoteExecutionV2ExecutedActionMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
