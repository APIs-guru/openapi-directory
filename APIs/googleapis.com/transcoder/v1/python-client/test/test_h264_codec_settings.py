# coding: utf-8

"""
    Transcoder API

    This API converts video files into formats suitable for consumer distribution. For more information, see the Transcoder API overview. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.h264_codec_settings import H264CodecSettings

class TestH264CodecSettings(unittest.TestCase):
    """H264CodecSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> H264CodecSettings:
        """Test H264CodecSettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `H264CodecSettings`
        """
        model = H264CodecSettings()
        if include_optional:
            return H264CodecSettings(
                allow_open_gop = True,
                aq_strength = 1.337,
                b_frame_count = 56,
                b_pyramid = True,
                bitrate_bps = 56,
                crf_level = 56,
                enable_two_pass = True,
                entropy_coder = '',
                frame_rate = 1.337,
                frame_rate_conversion_strategy = 'FRAME_RATE_CONVERSION_STRATEGY_UNSPECIFIED',
                gop_duration = '',
                gop_frame_count = 56,
                height_pixels = 56,
                hlg = openapi_client.models.h264_color_format_hlg.H264ColorFormatHLG(),
                pixel_format = '',
                preset = '',
                profile = '',
                rate_control_mode = '',
                sdr = openapi_client.models.h264_color_format_sdr.H264ColorFormatSDR(),
                tune = '',
                vbv_fullness_bits = 56,
                vbv_size_bits = 56,
                width_pixels = 56
            )
        else:
            return H264CodecSettings(
        )
        """

    def testH264CodecSettings(self):
        """Test H264CodecSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
