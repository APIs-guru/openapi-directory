# coding: utf-8

"""
    Transcoder API

    This API converts video files into formats suitable for consumer distribution. For more information, see the Transcoder API overview. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.audio_stream import AudioStream

class TestAudioStream(unittest.TestCase):
    """AudioStream unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AudioStream:
        """Test AudioStream
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AudioStream`
        """
        model = AudioStream()
        if include_optional:
            return AudioStream(
                bitrate_bps = 56,
                channel_count = 56,
                channel_layout = [
                    ''
                    ],
                codec = '',
                display_name = '',
                language_code = '',
                mapping = [
                    openapi_client.models.audio_mapping.AudioMapping(
                        atom_key = '', 
                        gain_db = 1.337, 
                        input_channel = 56, 
                        input_key = '', 
                        input_track = 56, 
                        output_channel = 56, )
                    ],
                sample_rate_hertz = 56
            )
        else:
            return AudioStream(
        )
        """

    def testAudioStream(self):
        """Test AudioStream"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
