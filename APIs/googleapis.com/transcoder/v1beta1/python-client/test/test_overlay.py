# coding: utf-8

"""
    Transcoder API

    This API converts video files into formats suitable for consumer distribution. 

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.overlay import Overlay

class TestOverlay(unittest.TestCase):
    """Overlay unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Overlay:
        """Test Overlay
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Overlay`
        """
        model = Overlay()
        if include_optional:
            return Overlay(
                animations = [
                    openapi_client.models.animation.Animation(
                        animation_end = openapi_client.models.animation_end.AnimationEnd(
                            start_time_offset = '', ), 
                        animation_fade = openapi_client.models.animation_fade.AnimationFade(
                            end_time_offset = '', 
                            fade_type = 'FADE_TYPE_UNSPECIFIED', 
                            start_time_offset = '', 
                            xy = openapi_client.models.normalized_coordinate.NormalizedCoordinate(
                                x = 1.337, 
                                y = 1.337, ), ), 
                        animation_static = openapi_client.models.animation_static.AnimationStatic(
                            start_time_offset = '', ), )
                    ],
                image = openapi_client.models.image.Image(
                    alpha = 1.337, 
                    resolution = openapi_client.models.normalized_coordinate.NormalizedCoordinate(
                        x = 1.337, 
                        y = 1.337, ), 
                    uri = '', )
            )
        else:
            return Overlay(
        )
        """

    def testOverlay(self):
        """Test Overlay"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
