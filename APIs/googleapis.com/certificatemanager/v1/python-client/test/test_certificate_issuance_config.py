# coding: utf-8

"""
    Certificate Manager API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.certificate_issuance_config import CertificateIssuanceConfig

class TestCertificateIssuanceConfig(unittest.TestCase):
    """CertificateIssuanceConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CertificateIssuanceConfig:
        """Test CertificateIssuanceConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CertificateIssuanceConfig`
        """
        model = CertificateIssuanceConfig()
        if include_optional:
            return CertificateIssuanceConfig(
                certificate_authority_config = openapi_client.models.certificate_authority_config.CertificateAuthorityConfig(
                    certificate_authority_service_config = openapi_client.models.certificate_authority_service_config.CertificateAuthorityServiceConfig(
                        ca_pool = '', ), ),
                create_time = '',
                description = '',
                key_algorithm = 'KEY_ALGORITHM_UNSPECIFIED',
                labels = {
                    'key' : ''
                    },
                lifetime = '',
                name = '',
                rotation_window_percentage = 56,
                update_time = ''
            )
        else:
            return CertificateIssuanceConfig(
        )
        """

    def testCertificateIssuanceConfig(self):
        """Test CertificateIssuanceConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
