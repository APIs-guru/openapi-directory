# coding: utf-8

"""
    Certificate Manager API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.managed_certificate import ManagedCertificate

class TestManagedCertificate(unittest.TestCase):
    """ManagedCertificate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ManagedCertificate:
        """Test ManagedCertificate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ManagedCertificate`
        """
        model = ManagedCertificate()
        if include_optional:
            return ManagedCertificate(
                authorization_attempt_info = [
                    openapi_client.models.authorization_attempt_info.AuthorizationAttemptInfo(
                        details = '', 
                        domain = '', 
                        failure_reason = 'FAILURE_REASON_UNSPECIFIED', 
                        state = 'STATE_UNSPECIFIED', )
                    ],
                dns_authorizations = [
                    ''
                    ],
                domains = [
                    ''
                    ],
                issuance_config = '',
                provisioning_issue = openapi_client.models.provisioning_issue.ProvisioningIssue(
                    details = '', 
                    reason = 'REASON_UNSPECIFIED', ),
                state = 'STATE_UNSPECIFIED'
            )
        else:
            return ManagedCertificate(
        )
        """

    def testManagedCertificate(self):
        """Test ManagedCertificate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
