openapi: 3.0.0
servers:
  - url: https://certificatemanager.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: ""
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Certificate Manager API
  version: v1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://certificatemanager.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-providerName: googleapis.com
  x-serviceName: certificatemanager
externalDocs:
  url: https://cloud.google.com/certificate-manager
tags:
  - name: projects
paths:
  /v1/{name}:
    delete:
      description: Deletes a single TrustConfig.
      operationId: certificatemanager.projects.locations.trustConfigs.delete
      parameters:
        - description: Required. A name of the TrustConfig to delete. Must be in the format `projects/*/locations/*/trustConfigs/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The current etag of the TrustConfig. If an etag is provided and does not match the current etag of the resource, deletion will be blocked and an ABORTED error will be returned.
          in: query
          name: etag
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets details of a single TrustConfig.
      operationId: certificatemanager.projects.locations.trustConfigs.get
      parameters:
        - description: Required. A name of the TrustConfig to describe. Must be in the format `projects/*/locations/*/trustConfigs/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrustConfig"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a TrustConfig.
      operationId: certificatemanager.projects.locations.trustConfigs.patch
      parameters:
        - description: A user-defined name of the trust config. TrustConfig names must be unique globally and match pattern `projects/*/locations/*/trustConfigs/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrustConfig"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: certificatemanager.projects.locations.list
      parameters:
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results to return. If not set, the service selects a default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}/operations:
    get:
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: certificatemanager.projects.locations.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: certificatemanager.projects.locations.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOperationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/certificateIssuanceConfigs:
    get:
      description: Lists CertificateIssuanceConfigs in a given project and location.
      operationId: certificatemanager.projects.locations.certificateIssuanceConfigs.list
      parameters:
        - description: Required. The project and location from which the certificate should be listed, specified in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filter expression to restrict the Certificates Configs returned.
          in: query
          name: filter
          schema:
            type: string
        - description: A list of Certificate Config field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix " desc".
          in: query
          name: orderBy
          schema:
            type: string
        - description: Maximum number of certificate configs to return per call.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The value returned by the last `ListCertificateIssuanceConfigsResponse`. Indicates that this is a continuation of a prior `ListCertificateIssuanceConfigs` call, and that the system should return the next page of data.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCertificateIssuanceConfigsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new CertificateIssuanceConfig in a given project and location.
      operationId: certificatemanager.projects.locations.certificateIssuanceConfigs.create
      parameters:
        - description: Required. The parent resource of the certificate issuance config. Must be in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. A user-provided name of the certificate config.
          in: query
          name: certificateIssuanceConfigId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CertificateIssuanceConfig"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/certificateMapEntries:
    get:
      description: Lists CertificateMapEntries in a given project and location.
      operationId: certificatemanager.projects.locations.certificateMaps.certificateMapEntries.list
      parameters:
        - description: Required. The project, location and certificate map from which the certificate map entries should be listed, specified in the format `projects/*/locations/*/certificateMaps/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filter expression to restrict the returned Certificate Map Entries.
          in: query
          name: filter
          schema:
            type: string
        - description: A list of Certificate Map Entry field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix " desc".
          in: query
          name: orderBy
          schema:
            type: string
        - description: Maximum number of certificate map entries to return. The service may return fewer than this value. If unspecified, at most 50 certificate map entries will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The value returned by the last `ListCertificateMapEntriesResponse`. Indicates that this is a continuation of a prior `ListCertificateMapEntries` call, and that the system should return the next page of data.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCertificateMapEntriesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new CertificateMapEntry in a given project and location.
      operationId: certificatemanager.projects.locations.certificateMaps.certificateMapEntries.create
      parameters:
        - description: Required. The parent resource of the certificate map entry. Must be in the format `projects/*/locations/*/certificateMaps/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. A user-provided name of the certificate map entry.
          in: query
          name: certificateMapEntryId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CertificateMapEntry"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/certificateMaps:
    get:
      description: Lists CertificateMaps in a given project and location.
      operationId: certificatemanager.projects.locations.certificateMaps.list
      parameters:
        - description: Required. The project and location from which the certificate maps should be listed, specified in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filter expression to restrict the Certificates Maps returned.
          in: query
          name: filter
          schema:
            type: string
        - description: A list of Certificate Map field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix " desc".
          in: query
          name: orderBy
          schema:
            type: string
        - description: Maximum number of certificate maps to return per call.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The value returned by the last `ListCertificateMapsResponse`. Indicates that this is a continuation of a prior `ListCertificateMaps` call, and that the system should return the next page of data.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCertificateMapsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new CertificateMap in a given project and location.
      operationId: certificatemanager.projects.locations.certificateMaps.create
      parameters:
        - description: Required. The parent resource of the certificate map. Must be in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. A user-provided name of the certificate map.
          in: query
          name: certificateMapId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CertificateMap"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/certificates:
    get:
      description: Lists Certificates in a given project and location.
      operationId: certificatemanager.projects.locations.certificates.list
      parameters:
        - description: Required. The project and location from which the certificate should be listed, specified in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filter expression to restrict the Certificates returned.
          in: query
          name: filter
          schema:
            type: string
        - description: A list of Certificate field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix " desc".
          in: query
          name: orderBy
          schema:
            type: string
        - description: Maximum number of certificates to return per call.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The value returned by the last `ListCertificatesResponse`. Indicates that this is a continuation of a prior `ListCertificates` call, and that the system should return the next page of data.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCertificatesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new Certificate in a given project and location.
      operationId: certificatemanager.projects.locations.certificates.create
      parameters:
        - description: Required. The parent resource of the certificate. Must be in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. A user-provided name of the certificate.
          in: query
          name: certificateId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Certificate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/dnsAuthorizations:
    get:
      description: Lists DnsAuthorizations in a given project and location.
      operationId: certificatemanager.projects.locations.dnsAuthorizations.list
      parameters:
        - description: Required. The project and location from which the dns authorizations should be listed, specified in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filter expression to restrict the Dns Authorizations returned.
          in: query
          name: filter
          schema:
            type: string
        - description: A list of Dns Authorization field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix " desc".
          in: query
          name: orderBy
          schema:
            type: string
        - description: Maximum number of dns authorizations to return per call.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The value returned by the last `ListDnsAuthorizationsResponse`. Indicates that this is a continuation of a prior `ListDnsAuthorizations` call, and that the system should return the next page of data.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDnsAuthorizationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new DnsAuthorization in a given project and location.
      operationId: certificatemanager.projects.locations.dnsAuthorizations.create
      parameters:
        - description: Required. The parent resource of the dns authorization. Must be in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. A user-provided name of the dns authorization.
          in: query
          name: dnsAuthorizationId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DnsAuthorization"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/trustConfigs:
    get:
      description: Lists TrustConfigs in a given project and location.
      operationId: certificatemanager.projects.locations.trustConfigs.list
      parameters:
        - description: Required. The project and location from which the TrustConfigs should be listed, specified in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filter expression to restrict the TrustConfigs returned.
          in: query
          name: filter
          schema:
            type: string
        - description: A list of TrustConfig field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix " desc".
          in: query
          name: orderBy
          schema:
            type: string
        - description: Maximum number of TrustConfigs to return per call.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The value returned by the last `ListTrustConfigsResponse`. Indicates that this is a continuation of a prior `ListTrustConfigs` call, and that the system should return the next page of data.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTrustConfigsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new TrustConfig in a given project and location.
      operationId: certificatemanager.projects.locations.trustConfigs.create
      parameters:
        - description: Required. The parent resource of the TrustConfig. Must be in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. A user-provided name of the TrustConfig. Must match the regexp `[a-z0-9-]{1,63}`.
          in: query
          name: trustConfigId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrustConfig"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AuthorizationAttemptInfo:
      description: State of the latest attempt to authorize a domain for certificate issuance.
      properties:
        details:
          description: Output only. Human readable explanation for reaching the state. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use FailureReason enum.
          readOnly: true
          type: string
        domain:
          description: Domain name of the authorization attempt.
          type: string
        failureReason:
          description: Output only. Reason for failure of the authorization attempt for the domain.
          enum:
            - FAILURE_REASON_UNSPECIFIED
            - CONFIG
            - CAA
            - RATE_LIMITED
          readOnly: true
          type: string
        state:
          description: Output only. State of the domain for managed certificate issuance.
          enum:
            - STATE_UNSPECIFIED
            - AUTHORIZING
            - AUTHORIZED
            - FAILED
          readOnly: true
          type: string
      type: object
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    Certificate:
      description: Defines TLS certificate.
      properties:
        createTime:
          description: Output only. The creation timestamp of a Certificate.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: One or more paragraphs of text description of a certificate.
          type: string
        expireTime:
          description: Output only. The expiry timestamp of a Certificate.
          format: google-datetime
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Set of labels associated with a Certificate.
          type: object
        managed:
          $ref: "#/components/schemas/ManagedCertificate"
          description: If set, contains configuration and state of a managed certificate.
        name:
          description: A user-defined name of the certificate. Certificate names must be unique globally and match pattern `projects/*/locations/*/certificates/*`.
          type: string
        pemCertificate:
          description: Output only. The PEM-encoded certificate chain.
          readOnly: true
          type: string
        sanDnsnames:
          description: Output only. The list of Subject Alternative Names of dnsName type defined in the certificate (see RFC 5280 4.2.1.6). Managed certificates that haven't been provisioned yet have this field populated with a value of the managed.domains field.
          items:
            type: string
          readOnly: true
          type: array
        scope:
          description: Immutable. The scope of the certificate.
          enum:
            - DEFAULT
            - EDGE_CACHE
            - ALL_REGIONS
          type: string
        selfManaged:
          $ref: "#/components/schemas/SelfManagedCertificate"
          description: If set, defines data of a self-managed certificate.
        updateTime:
          description: Output only. The last update timestamp of a Certificate.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    CertificateAuthorityConfig:
      description: The CA that issues the workload certificate. It includes CA address, type, authentication to CA service, etc.
      properties:
        certificateAuthorityServiceConfig:
          $ref: "#/components/schemas/CertificateAuthorityServiceConfig"
          description: Defines a CertificateAuthorityServiceConfig.
      type: object
    CertificateAuthorityServiceConfig:
      description: Contains information required to contact CA service.
      properties:
        caPool:
          description: Required. A CA pool resource used to issue a certificate. The CA pool string has a relative resource path following the form "projects/{project}/locations/{location}/caPools/{ca_pool}".
          type: string
      type: object
    CertificateIssuanceConfig:
      description: CertificateIssuanceConfig specifies how to issue and manage a certificate.
      properties:
        certificateAuthorityConfig:
          $ref: "#/components/schemas/CertificateAuthorityConfig"
          description: Required. The CA that issues the workload certificate. It includes the CA address, type, authentication to CA service, etc.
        createTime:
          description: Output only. The creation timestamp of a CertificateIssuanceConfig.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: One or more paragraphs of text description of a CertificateIssuanceConfig.
          type: string
        keyAlgorithm:
          description: Required. The key algorithm to use when generating the private key.
          enum:
            - KEY_ALGORITHM_UNSPECIFIED
            - RSA_2048
            - ECDSA_P256
          type: string
        labels:
          additionalProperties:
            type: string
          description: Set of labels associated with a CertificateIssuanceConfig.
          type: object
        lifetime:
          description: Required. Workload certificate lifetime requested.
          format: google-duration
          type: string
        name:
          description: A user-defined name of the certificate issuance config. CertificateIssuanceConfig names must be unique globally and match pattern `projects/*/locations/*/certificateIssuanceConfigs/*`.
          type: string
        rotationWindowPercentage:
          description: Required. Specifies the percentage of elapsed time of the certificate lifetime to wait before renewing the certificate. Must be a number between 1-99, inclusive.
          format: int32
          type: integer
        updateTime:
          description: Output only. The last update timestamp of a CertificateIssuanceConfig.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    CertificateMap:
      description: Defines a collection of certificate configurations.
      properties:
        createTime:
          description: Output only. The creation timestamp of a Certificate Map.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: One or more paragraphs of text description of a certificate map.
          type: string
        gclbTargets:
          description: Output only. A list of GCLB targets that use this Certificate Map. A Target Proxy is only present on this list if it's attached to a Forwarding Rule.
          items:
            $ref: "#/components/schemas/GclbTarget"
          readOnly: true
          type: array
        labels:
          additionalProperties:
            type: string
          description: Set of labels associated with a Certificate Map.
          type: object
        name:
          description: A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*`.
          type: string
        updateTime:
          description: Output only. The update timestamp of a Certificate Map.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    CertificateMapEntry:
      description: Defines a certificate map entry.
      properties:
        certificates:
          description: A set of Certificates defines for the given `hostname`. There can be defined up to four certificates in each Certificate Map Entry. Each certificate must match pattern `projects/*/locations/*/certificates/*`.
          items:
            type: string
          type: array
        createTime:
          description: Output only. The creation timestamp of a Certificate Map Entry.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: One or more paragraphs of text description of a certificate map entry.
          type: string
        hostname:
          description: A Hostname (FQDN, e.g. `example.com`) or a wildcard hostname expression (`*.example.com`) for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for selecting a proper certificate.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Set of labels associated with a Certificate Map Entry.
          type: object
        matcher:
          description: A predefined matcher for particular cases, other than SNI selection.
          enum:
            - MATCHER_UNSPECIFIED
            - PRIMARY
          type: string
        name:
          description: A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.
          type: string
        state:
          description: Output only. A serving state of this Certificate Map Entry.
          enum:
            - SERVING_STATE_UNSPECIFIED
            - ACTIVE
            - PENDING
          readOnly: true
          type: string
        updateTime:
          description: Output only. The update timestamp of a Certificate Map Entry.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    DnsAuthorization:
      description: A DnsAuthorization resource describes a way to perform domain authorization for certificate issuance.
      properties:
        createTime:
          description: Output only. The creation timestamp of a DnsAuthorization.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: One or more paragraphs of text description of a DnsAuthorization.
          type: string
        dnsResourceRecord:
          $ref: "#/components/schemas/DnsResourceRecord"
          description: Output only. DNS Resource Record that needs to be added to DNS configuration.
          readOnly: true
        domain:
          description: Required. Immutable. A domain that is being authorized. A DnsAuthorization resource covers a single domain and its wildcard, e.g. authorization for `example.com` can be used to issue certificates for `example.com` and `*.example.com`.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Set of labels associated with a DnsAuthorization.
          type: object
        name:
          description: A user-defined name of the dns authorization. DnsAuthorization names must be unique globally and match pattern `projects/*/locations/*/dnsAuthorizations/*`.
          type: string
        type:
          description: "Immutable. Type of DnsAuthorization. If unset during resource creation the following default will be used: - in location global: FIXED_RECORD."
          enum:
            - TYPE_UNSPECIFIED
            - FIXED_RECORD
            - PER_PROJECT_RECORD
          type: string
        updateTime:
          description: Output only. The last update timestamp of a DnsAuthorization.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    DnsResourceRecord:
      description: The structure describing the DNS Resource Record that needs to be added to DNS configuration for the authorization to be usable by certificate.
      properties:
        data:
          description: Output only. Data of the DNS Resource Record.
          readOnly: true
          type: string
        name:
          description: Output only. Fully qualified name of the DNS Resource Record. e.g. `_acme-challenge.example.com`
          readOnly: true
          type: string
        type:
          description: Output only. Type of the DNS Resource Record. Currently always set to "CNAME".
          readOnly: true
          type: string
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    GclbTarget:
      description: Describes a Target Proxy that uses this Certificate Map.
      properties:
        ipConfigs:
          description: Output only. IP configurations for this Target Proxy where the Certificate Map is serving.
          items:
            $ref: "#/components/schemas/IpConfig"
          readOnly: true
          type: array
        targetHttpsProxy:
          description: "Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/*/global/targetHttpsProxies/*`."
          readOnly: true
          type: string
        targetSslProxy:
          description: "Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/*/global/targetSslProxies/*`."
          readOnly: true
          type: string
      type: object
    IntermediateCA:
      description: Defines an intermediate CA.
      properties:
        pemCertificate:
          description: PEM intermediate certificate used for building up paths for validation. Each certificate provided in PEM format may occupy up to 5kB.
          type: string
      type: object
    IpConfig:
      description: Defines IP configuration where this Certificate Map is serving.
      properties:
        ipAddress:
          description: Output only. An external IP address.
          readOnly: true
          type: string
        ports:
          description: Output only. Ports.
          items:
            format: uint32
            type: integer
          readOnly: true
          type: array
      type: object
    ListCertificateIssuanceConfigsResponse:
      description: Response for the `ListCertificateIssuanceConfigs` method.
      properties:
        certificateIssuanceConfigs:
          description: A list of certificate configs for the parent resource.
          items:
            $ref: "#/components/schemas/CertificateIssuanceConfig"
          type: array
        nextPageToken:
          description: If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListCertificateMapEntriesResponse:
      description: Response for the `ListCertificateMapEntries` method.
      properties:
        certificateMapEntries:
          description: A list of certificate map entries for the parent resource.
          items:
            $ref: "#/components/schemas/CertificateMapEntry"
          type: array
        nextPageToken:
          description: If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListCertificateMapsResponse:
      description: Response for the `ListCertificateMaps` method.
      properties:
        certificateMaps:
          description: A list of certificate maps for the parent resource.
          items:
            $ref: "#/components/schemas/CertificateMap"
          type: array
        nextPageToken:
          description: If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListCertificatesResponse:
      description: Response for the `ListCertificates` method.
      properties:
        certificates:
          description: A list of certificates for the parent resource.
          items:
            $ref: "#/components/schemas/Certificate"
          type: array
        nextPageToken:
          description: If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.
          type: string
        unreachable:
          description: A list of locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListDnsAuthorizationsResponse:
      description: Response for the `ListDnsAuthorizations` method.
      properties:
        dnsAuthorizations:
          description: A list of dns authorizations for the parent resource.
          items:
            $ref: "#/components/schemas/DnsAuthorization"
          type: array
        nextPageToken:
          description: If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    ListTrustConfigsResponse:
      description: Response for the `ListTrustConfigs` method.
      properties:
        nextPageToken:
          description: If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.
          type: string
        trustConfigs:
          description: A list of TrustConfigs for the parent resource.
          items:
            $ref: "#/components/schemas/TrustConfig"
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    Location:
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      type: object
    ManagedCertificate:
      description: Configuration and state of a Managed Certificate. Certificate Manager provisions and renews Managed Certificates automatically, for as long as it's authorized to do so.
      properties:
        authorizationAttemptInfo:
          description: Output only. Detailed state of the latest authorization attempt for each domain specified for managed certificate resource.
          items:
            $ref: "#/components/schemas/AuthorizationAttemptInfo"
          readOnly: true
          type: array
        dnsAuthorizations:
          description: Immutable. Authorizations that will be used for performing domain authorization.
          items:
            type: string
          type: array
        domains:
          description: Immutable. The domains for which a managed SSL certificate will be generated. Wildcard domains are only supported with DNS challenge resolution.
          items:
            type: string
          type: array
        issuanceConfig:
          description: Immutable. The resource name for a CertificateIssuanceConfig used to configure private PKI certificates in the format `projects/*/locations/*/certificateIssuanceConfigs/*`. If this field is not set, the certificates will instead be publicly signed as documented at https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs#caa.
          type: string
        provisioningIssue:
          $ref: "#/components/schemas/ProvisioningIssue"
          description: Output only. Information about issues with provisioning a Managed Certificate.
          readOnly: true
        state:
          description: Output only. State of the managed certificate resource.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - FAILED
            - ACTIVE
          readOnly: true
          type: string
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    OperationMetadata:
      description: Represents the metadata of the long-running operation. Output only.
      properties:
        apiVersion:
          description: API version used to start the operation.
          type: string
        createTime:
          description: The time the operation was created.
          format: google-datetime
          type: string
        endTime:
          description: The time the operation finished running.
          format: google-datetime
          type: string
        requestedCancellation:
          description: Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          type: boolean
        statusMessage:
          description: Human-readable status of the operation, if any.
          type: string
        target:
          description: Server-defined resource path for the target of the operation.
          type: string
        verb:
          description: Name of the verb executed by the operation.
          type: string
      type: object
    ProvisioningIssue:
      description: Information about issues with provisioning a Managed Certificate.
      properties:
        details:
          description: Output only. Human readable explanation about the issue. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use Reason enum.
          readOnly: true
          type: string
        reason:
          description: Output only. Reason for provisioning failures.
          enum:
            - REASON_UNSPECIFIED
            - AUTHORIZATION_ISSUE
            - RATE_LIMITED
          readOnly: true
          type: string
      type: object
    SelfManagedCertificate:
      description: Certificate data for a SelfManaged Certificate. SelfManaged Certificates are uploaded by the user. Updating such certificates before they expire remains the user's responsibility.
      properties:
        pemCertificate:
          description: Input only. The PEM-encoded certificate chain. Leaf certificate comes first, followed by intermediate ones if any.
          type: string
        pemPrivateKey:
          description: Input only. The PEM-encoded private key of the leaf certificate.
          type: string
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    TrustAnchor:
      description: Defines a trust anchor.
      properties:
        pemCertificate:
          description: PEM root certificate of the PKI used for validation. Each certificate provided in PEM format may occupy up to 5kB.
          type: string
      type: object
    TrustConfig:
      description: Defines a trust config.
      properties:
        createTime:
          description: Output only. The creation timestamp of a TrustConfig.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: One or more paragraphs of text description of a TrustConfig.
          type: string
        etag:
          description: This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Set of labels associated with a TrustConfig.
          type: object
        name:
          description: A user-defined name of the trust config. TrustConfig names must be unique globally and match pattern `projects/*/locations/*/trustConfigs/*`.
          type: string
        trustStores:
          description: Set of trust stores to perform validation against. This field is supported when TrustConfig is configured with Load Balancers, currently not supported for SPIFFE certificate validation. Only one TrustStore specified is currently allowed.
          items:
            $ref: "#/components/schemas/TrustStore"
          type: array
        updateTime:
          description: Output only. The last update timestamp of a TrustConfig.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    TrustStore:
      description: Defines a trust store.
      properties:
        intermediateCas:
          description: Set of intermediate CA certificates used for the path building phase of chain validation. The field is currently not supported if TrustConfig is used for the workload certificate feature.
          items:
            $ref: "#/components/schemas/IntermediateCA"
          type: array
        trustAnchors:
          description: List of Trust Anchors to be used while performing validation against a given TrustStore.
          items:
            $ref: "#/components/schemas/TrustAnchor"
          type: array
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
