# coding: utf-8

"""
    Container Analysis API

    This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.projects_api import ProjectsApi


class TestProjectsApi(unittest.TestCase):
    """ProjectsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ProjectsApi()

    def tearDown(self) -> None:
        pass

    def test_containeranalysis_projects_notes_create(self) -> None:
        """Test case for containeranalysis_projects_notes_create

        """
        pass

    def test_containeranalysis_projects_notes_list(self) -> None:
        """Test case for containeranalysis_projects_notes_list

        """
        pass

    def test_containeranalysis_projects_occurrences_create(self) -> None:
        """Test case for containeranalysis_projects_occurrences_create

        """
        pass

    def test_containeranalysis_projects_occurrences_get_vulnerability_summary(self) -> None:
        """Test case for containeranalysis_projects_occurrences_get_vulnerability_summary

        """
        pass

    def test_containeranalysis_projects_occurrences_list(self) -> None:
        """Test case for containeranalysis_projects_occurrences_list

        """
        pass

    def test_containeranalysis_projects_operations_create(self) -> None:
        """Test case for containeranalysis_projects_operations_create

        """
        pass

    def test_containeranalysis_projects_scan_configs_list(self) -> None:
        """Test case for containeranalysis_projects_scan_configs_list

        """
        pass


if __name__ == '__main__':
    unittest.main()
