# coding: utf-8

"""
    Container Analysis API

    This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.providers_api import ProvidersApi


class TestProvidersApi(unittest.TestCase):
    """ProvidersApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ProvidersApi()

    def tearDown(self) -> None:
        pass

    def test_containeranalysis_providers_notes_create(self) -> None:
        """Test case for containeranalysis_providers_notes_create

        """
        pass

    def test_containeranalysis_providers_notes_delete(self) -> None:
        """Test case for containeranalysis_providers_notes_delete

        """
        pass

    def test_containeranalysis_providers_notes_get(self) -> None:
        """Test case for containeranalysis_providers_notes_get

        """
        pass

    def test_containeranalysis_providers_notes_get_iam_policy(self) -> None:
        """Test case for containeranalysis_providers_notes_get_iam_policy

        """
        pass

    def test_containeranalysis_providers_notes_list(self) -> None:
        """Test case for containeranalysis_providers_notes_list

        """
        pass

    def test_containeranalysis_providers_notes_occurrences_list(self) -> None:
        """Test case for containeranalysis_providers_notes_occurrences_list

        """
        pass

    def test_containeranalysis_providers_notes_patch(self) -> None:
        """Test case for containeranalysis_providers_notes_patch

        """
        pass

    def test_containeranalysis_providers_notes_set_iam_policy(self) -> None:
        """Test case for containeranalysis_providers_notes_set_iam_policy

        """
        pass

    def test_containeranalysis_providers_notes_test_iam_permissions(self) -> None:
        """Test case for containeranalysis_providers_notes_test_iam_permissions

        """
        pass


if __name__ == '__main__':
    unittest.main()
