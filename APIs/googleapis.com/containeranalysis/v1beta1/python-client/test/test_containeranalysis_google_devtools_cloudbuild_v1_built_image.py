# coding: utf-8

"""
    Container Analysis API

    This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.containeranalysis_google_devtools_cloudbuild_v1_built_image import ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage

class TestContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage(unittest.TestCase):
    """ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage:
        """Test ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage`
        """
        model = ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage()
        if include_optional:
            return ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage(
                digest = '',
                name = '',
                push_timing = openapi_client.models.containeranalysis_google_devtools_cloudbuild_v1_time_span.ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan(
                    end_time = '', 
                    start_time = '', )
            )
        else:
            return ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage(
        )
        """

    def testContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage(self):
        """Test ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
