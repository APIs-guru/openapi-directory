# coding: utf-8

"""
    Container Analysis API

    This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.projects_api import ProjectsApi


class TestProjectsApi(unittest.TestCase):
    """ProjectsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ProjectsApi()

    def tearDown(self) -> None:
        pass

    def test_containeranalysis_projects_notes_batch_create(self) -> None:
        """Test case for containeranalysis_projects_notes_batch_create

        """
        pass

    def test_containeranalysis_projects_notes_create(self) -> None:
        """Test case for containeranalysis_projects_notes_create

        """
        pass

    def test_containeranalysis_projects_notes_list(self) -> None:
        """Test case for containeranalysis_projects_notes_list

        """
        pass

    def test_containeranalysis_projects_notes_occurrences_list(self) -> None:
        """Test case for containeranalysis_projects_notes_occurrences_list

        """
        pass

    def test_containeranalysis_projects_occurrences_batch_create(self) -> None:
        """Test case for containeranalysis_projects_occurrences_batch_create

        """
        pass

    def test_containeranalysis_projects_occurrences_create(self) -> None:
        """Test case for containeranalysis_projects_occurrences_create

        """
        pass

    def test_containeranalysis_projects_occurrences_delete(self) -> None:
        """Test case for containeranalysis_projects_occurrences_delete

        """
        pass

    def test_containeranalysis_projects_occurrences_get(self) -> None:
        """Test case for containeranalysis_projects_occurrences_get

        """
        pass

    def test_containeranalysis_projects_occurrences_get_iam_policy(self) -> None:
        """Test case for containeranalysis_projects_occurrences_get_iam_policy

        """
        pass

    def test_containeranalysis_projects_occurrences_get_notes(self) -> None:
        """Test case for containeranalysis_projects_occurrences_get_notes

        """
        pass

    def test_containeranalysis_projects_occurrences_get_vulnerability_summary(self) -> None:
        """Test case for containeranalysis_projects_occurrences_get_vulnerability_summary

        """
        pass

    def test_containeranalysis_projects_occurrences_list(self) -> None:
        """Test case for containeranalysis_projects_occurrences_list

        """
        pass

    def test_containeranalysis_projects_occurrences_patch(self) -> None:
        """Test case for containeranalysis_projects_occurrences_patch

        """
        pass

    def test_containeranalysis_projects_occurrences_set_iam_policy(self) -> None:
        """Test case for containeranalysis_projects_occurrences_set_iam_policy

        """
        pass

    def test_containeranalysis_projects_occurrences_test_iam_permissions(self) -> None:
        """Test case for containeranalysis_projects_occurrences_test_iam_permissions

        """
        pass

    def test_containeranalysis_projects_resources_export_sbom(self) -> None:
        """Test case for containeranalysis_projects_resources_export_sbom

        """
        pass


if __name__ == '__main__':
    unittest.main()
