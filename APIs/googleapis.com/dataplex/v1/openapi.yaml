openapi: 3.0.0
servers:
  - url: https://dataplex.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Dataplex API is used to manage the lifecycle of data lakes.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Dataplex API
  version: v1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://dataplex.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-providerName: googleapis.com
  x-serviceName: dataplex
externalDocs:
  url: https://cloud.google.com/dataplex/docs
tags:
  - name: projects
paths:
  /v1/{name}:
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED.
      operationId: dataplex.projects.locations.operations.delete
      parameters:
        - description: The name of the operation resource to be deleted.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. The etag associated with the partition.
          in: query
          name: etag
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: dataplex.projects.locations.operations.get
      parameters:
        - description: The name of the operation resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. Used to select the subset of entity information to return. Defaults to BASIC.
          in: query
          name: view
          schema:
            enum:
              - ENTITY_VIEW_UNSPECIFIED
              - BASIC
              - SCHEMA
              - FULL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates an asset resource.
      operationId: dataplex.projects.locations.lakes.zones.assets.patch
      parameters:
        - description: "Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}."
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Required. Mask of fields to update.
          in: query
          name: updateMask
          schema:
            type: string
        - description: Optional. Only validate the request, but do not perform mutations. The default is false.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDataplexV1Asset"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    put:
      description: Update a metadata entity. Only supports full resource update.
      operationId: dataplex.projects.locations.lakes.zones.entities.update
      parameters:
        - description: "Output only. The resource name of the entity, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}."
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. Only validate the request, but do not perform mutations. The default is false.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDataplexV1Entity"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1Entity"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: dataplex.projects.locations.list
      parameters:
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: A filter to narrow down results to a preferred subset. The filtering language accepts strings like "displayName=tokyo", and is documented in more detail in AIP-160 (https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results to return. If not set, the service selects a default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token received from the next_page_token field in the response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudLocationListLocationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}/operations:
    get:
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED.
      operationId: dataplex.projects.locations.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.
      operationId: dataplex.projects.locations.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleLongrunningCancelOperationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:run:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Run an on demand execution of a Task.
      operationId: dataplex.projects.locations.lakes.tasks.run
      parameters:
        - description: "Required. The resource name of the task: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/tasks/{task_id}."
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDataplexV1RunTaskRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1RunTaskResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/actions:
    get:
      description: Lists action resources in an asset.
      operationId: dataplex.projects.locations.lakes.zones.assets.actions.list
      parameters:
        - description: "Required. The resource name of the parent asset: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Maximum number of actions to return. The service may return fewer than this value. If unspecified, at most 10 actions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Page token received from a previous ListAssetActions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListAssetActions must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1ListActionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/assets:
    get:
      description: Lists asset resources in a zone.
      operationId: dataplex.projects.locations.lakes.zones.assets.list
      parameters:
        - description: "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filter request.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Order by fields for the result.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. Maximum number of asset to return. The service may return fewer than this value. If unspecified, at most 10 assets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Page token received from a previous ListAssets call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListAssets must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1ListAssetsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an asset resource.
      operationId: dataplex.projects.locations.lakes.zones.assets.create
      parameters:
        - description: "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. Asset identifier. This ID will be used to generate names such as table names when publishing metadata to Hive Metastore and BigQuery. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must end with a number or a letter. * Must be between 1-63 characters. * Must be unique within the zone.
          in: query
          name: assetId
          schema:
            type: string
        - description: Optional. Only validate the request, but do not perform mutations. The default is false.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDataplexV1Asset"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/attributes:
    get:
      description: Lists Data Attribute resources in a DataTaxonomy.
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.list
      parameters:
        - description: "Required. The resource name of the DataTaxonomy: projects/{project_number}/locations/{location_id}/dataTaxonomies/{data_taxonomy_id}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filter request.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Order by fields for the result.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. Maximum number of DataAttributes to return. The service may return fewer than this value. If unspecified, at most 10 dataAttributes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Page token received from a previous ListDataAttributes call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListDataAttributes must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1ListDataAttributesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Create a DataAttribute resource.
      operationId: dataplex.projects.locations.dataTaxonomies.attributes.create
      parameters:
        - description: Required. The resource name of the parent data taxonomy projects/{project_number}/locations/{location_id}/dataTaxonomies/{data_taxonomy_id}
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. DataAttribute identifier. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the DataTaxonomy.
          in: query
          name: dataAttributeId
          schema:
            type: string
        - description: Optional. Only validate the request, but do not perform mutations. The default is false.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDataplexV1DataAttribute"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/content:
    get:
      description: List content.
      operationId: dataplex.projects.locations.lakes.content.list
      parameters:
        - description: "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filter request. Filters are case-sensitive. The following formats are supported:labels.key1 = "value1" labels:key1 type = "NOTEBOOK" type = "SQL_SCRIPT"These restrictions can be coinjoined with AND, OR and NOT conjunctions.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Maximum number of content to return. The service may return fewer than this value. If unspecified, at most 10 content will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Page token received from a previous ListContent call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListContent must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1ListContentResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Create a content.
      operationId: dataplex.projects.locations.lakes.content.create
      parameters:
        - description: "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Only validate the request, but do not perform mutations. The default is false.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDataplexV1Content"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1Content"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/contentitems:
    get:
      description: List content.
      operationId: dataplex.projects.locations.lakes.contentitems.list
      parameters:
        - description: "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filter request. Filters are case-sensitive. The following formats are supported:labels.key1 = "value1" labels:key1 type = "NOTEBOOK" type = "SQL_SCRIPT"These restrictions can be coinjoined with AND, OR and NOT conjunctions.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Maximum number of content to return. The service may return fewer than this value. If unspecified, at most 10 content will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Page token received from a previous ListContent call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListContent must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1ListContentResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Create a content.
      operationId: dataplex.projects.locations.lakes.contentitems.create
      parameters:
        - description: "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Only validate the request, but do not perform mutations. The default is false.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDataplexV1Content"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1Content"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/dataAttributeBindings:
    get:
      description: Lists DataAttributeBinding resources in a project and location.
      operationId: dataplex.projects.locations.dataAttributeBindings.list
      parameters:
        - description: "Required. The resource name of the Location: projects/{project_number}/locations/{location_id}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'Optional. Filter request. Filter using resource: filter=resource:"resource-name" Filter using attribute: filter=attributes:"attribute-name" Filter using attribute in paths list: filter=paths.attributes:"attribute-name"'
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Order by fields for the result.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. Maximum number of DataAttributeBindings to return. The service may return fewer than this value. If unspecified, at most 10 DataAttributeBindings will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Page token received from a previous ListDataAttributeBindings call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListDataAttributeBindings must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1ListDataAttributeBindingsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Create a DataAttributeBinding resource.
      operationId: dataplex.projects.locations.dataAttributeBindings.create
      parameters:
        - description: Required. The resource name of the parent data taxonomy projects/{project_number}/locations/{location_id}
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. DataAttributeBinding identifier. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the Location.
          in: query
          name: dataAttributeBindingId
          schema:
            type: string
        - description: Optional. Only validate the request, but do not perform mutations. The default is false.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDataplexV1DataAttributeBinding"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/dataScans:
    get:
      description: Lists DataScans.
      operationId: dataplex.projects.locations.dataScans.list
      parameters:
        - description: "Required. The resource name of the parent location: projects/{project}/locations/{location_id} where project refers to a project_id or project_number and location_id refers to a GCP region."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filter request.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Order by fields (name or create_time) for the result. If not specified, the ordering is undefined.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. Maximum number of dataScans to return. The service may return fewer than this value. If unspecified, at most 500 scans will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Page token received from a previous ListDataScans call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListDataScans must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1ListDataScansResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a DataScan resource.
      operationId: dataplex.projects.locations.dataScans.create
      parameters:
        - description: "Required. The resource name of the parent location: projects/{project}/locations/{location_id} where project refers to a project_id or project_number and location_id refers to a GCP region."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. DataScan identifier. Must contain only lowercase letters, numbers and hyphens. Must start with a letter. Must end with a number or a letter. Must be between 1-63 characters. Must be unique within the customer project / location.
          in: query
          name: dataScanId
          schema:
            type: string
        - description: Optional. Only validate the request, but do not perform mutations. The default is false.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDataplexV1DataScan"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/dataTaxonomies:
    get:
      description: Lists DataTaxonomy resources in a project and location.
      operationId: dataplex.projects.locations.dataTaxonomies.list
      parameters:
        - description: "Required. The resource name of the DataTaxonomy location, of the form: projects/{project_number}/locations/{location_id} where location_id refers to a GCP region."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filter request.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Order by fields for the result.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. Maximum number of DataTaxonomies to return. The service may return fewer than this value. If unspecified, at most 10 DataTaxonomies will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Page token received from a previous ListDataTaxonomies call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListDataTaxonomies must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1ListDataTaxonomiesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Create a DataTaxonomy resource.
      operationId: dataplex.projects.locations.dataTaxonomies.create
      parameters:
        - description: "Required. The resource name of the data taxonomy location, of the form: projects/{project_number}/locations/{location_id} where location_id refers to a GCP region."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. DataTaxonomy identifier. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the Project.
          in: query
          name: dataTaxonomyId
          schema:
            type: string
        - description: Optional. Only validate the request, but do not perform mutations. The default is false.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDataplexV1DataTaxonomy"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/entities:
    get:
      description: List metadata entities in a zone.
      operationId: dataplex.projects.locations.lakes.zones.entities.list
      parameters:
        - description: "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'Optional. The following filter parameters can be added to the URL to limit the entities returned by the API: Entity ID: ?filter="id=entityID" Asset ID: ?filter="asset=assetID" Data path ?filter="data_path=gs://my-bucket" Is HIVE compatible: ?filter="hive_compatible=true" Is BigQuery compatible: ?filter="bigquery_compatible=true"'
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Maximum number of entities to return. The service may return fewer than this value. If unspecified, 100 entities will be returned by default. The maximum value is 500; larger values will will be truncated to 500.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Page token received from a previous ListEntities call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListEntities must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Required. Specify the entity view to make a partial list request.
          in: query
          name: view
          schema:
            enum:
              - ENTITY_VIEW_UNSPECIFIED
              - TABLES
              - FILESETS
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1ListEntitiesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Create a metadata entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.create
      parameters:
        - description: "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Only validate the request, but do not perform mutations. The default is false.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDataplexV1Entity"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1Entity"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/environments:
    get:
      description: Lists environments under the given lake.
      operationId: dataplex.projects.locations.lakes.environments.list
      parameters:
        - description: "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filter request.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Order by fields for the result.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. Maximum number of environments to return. The service may return fewer than this value. If unspecified, at most 10 environments will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Page token received from a previous ListEnvironments call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListEnvironments must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1ListEnvironmentsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Create an environment resource.
      operationId: dataplex.projects.locations.lakes.environments.create
      parameters:
        - description: "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. Environment identifier. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the lake.
          in: query
          name: environmentId
          schema:
            type: string
        - description: Optional. Only validate the request, but do not perform mutations. The default is false.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDataplexV1Environment"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/jobs:
    get:
      description: Lists Jobs under the given task.
      operationId: dataplex.projects.locations.lakes.tasks.jobs.list
      parameters:
        - description: "Required. The resource name of the parent environment: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/tasks/{task_id}."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Maximum number of jobs to return. The service may return fewer than this value. If unspecified, at most 10 jobs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Page token received from a previous ListJobs call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListJobs must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1ListJobsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/lakes:
    get:
      description: Lists lake resources in a project and location.
      operationId: dataplex.projects.locations.lakes.list
      parameters:
        - description: "Required. The resource name of the lake location, of the form: projects/{project_number}/locations/{location_id} where location_id refers to a GCP region."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filter request.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Order by fields for the result.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. Maximum number of Lakes to return. The service may return fewer than this value. If unspecified, at most 10 lakes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Page token received from a previous ListLakes call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListLakes must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1ListLakesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a lake resource.
      operationId: dataplex.projects.locations.lakes.create
      parameters:
        - description: "Required. The resource name of the lake location, of the form: projects/{project_number}/locations/{location_id} where location_id refers to a GCP region."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. Lake identifier. This ID will be used to generate names such as database and dataset names when publishing metadata to Hive Metastore and BigQuery. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must end with a number or a letter. * Must be between 1-63 characters. * Must be unique within the customer project / location.
          in: query
          name: lakeId
          schema:
            type: string
        - description: Optional. Only validate the request, but do not perform mutations. The default is false.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDataplexV1Lake"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/partitions:
    get:
      description: List metadata partitions of an entity.
      operationId: dataplex.projects.locations.lakes.zones.entities.partitions.list
      parameters:
        - description: "Required. The resource name of the parent entity: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'Optional. Filter the partitions returned to the caller using a key value pair expression. Supported operators and syntax: logic operators: AND, OR comparison operators: <, >, >=, <= ,=, != LIKE operators: The right hand of a LIKE operator supports "." and "*" for wildcard searches, for example "value1 LIKE ".*oo.*" parenthetical grouping: ( )Sample filter expression: `?filter="key1 < value1 OR key2 > value2"Notes: Keys to the left of operators are case insensitive. Partition results are sorted first by creation time, then by lexicographic order. Up to 20 key value filter pairs are allowed, but due to performance considerations, only the first 10 will be used as a filter.'
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Maximum number of partitions to return. The service may return fewer than this value. If unspecified, 100 partitions will be returned by default. The maximum page size is 500; larger values will will be truncated to 500.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Page token received from a previous ListPartitions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListPartitions must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1ListPartitionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Create a metadata partition.
      operationId: dataplex.projects.locations.lakes.zones.entities.partitions.create
      parameters:
        - description: "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Only validate the request, but do not perform mutations. The default is false.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDataplexV1Partition"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1Partition"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/sessions:
    get:
      description: Lists session resources in an environment.
      operationId: dataplex.projects.locations.lakes.environments.sessions.list
      parameters:
        - description: "Required. The resource name of the parent environment: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Optional. Filter request. The following mode filter is supported to return only the sessions belonging to the requester when the mode is USER and return sessions of all the users when the mode is ADMIN. When no filter is sent default to USER mode. NOTE: When the mode is ADMIN, the requester should have dataplex.environments.listAllSessions permission to list all sessions, in absence of the permission, the request fails.mode = ADMIN | USER"
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Maximum number of sessions to return. The service may return fewer than this value. If unspecified, at most 10 sessions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Page token received from a previous ListSessions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListSessions must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1ListSessionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/tasks:
    get:
      description: Lists tasks under the given lake.
      operationId: dataplex.projects.locations.lakes.tasks.list
      parameters:
        - description: "Required. The resource name of the parent lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filter request.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Order by fields for the result.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. Maximum number of tasks to return. The service may return fewer than this value. If unspecified, at most 10 tasks will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Page token received from a previous ListZones call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListZones must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1ListTasksResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a task resource within a lake.
      operationId: dataplex.projects.locations.lakes.tasks.create
      parameters:
        - description: "Required. The resource name of the parent lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. Task identifier.
          in: query
          name: taskId
          schema:
            type: string
        - description: Optional. Only validate the request, but do not perform mutations. The default is false.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDataplexV1Task"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/zones:
    get:
      description: Lists zone resources in a lake.
      operationId: dataplex.projects.locations.lakes.zones.list
      parameters:
        - description: "Required. The resource name of the parent lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filter request.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Order by fields for the result.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. Maximum number of zones to return. The service may return fewer than this value. If unspecified, at most 10 zones will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Page token received from a previous ListZones call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListZones must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDataplexV1ListZonesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a zone resource within a lake.
      operationId: dataplex.projects.locations.lakes.zones.create
      parameters:
        - description: "Required. The resource name of the parent lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Only validate the request, but do not perform mutations. The default is false.
          in: query
          name: validateOnly
          schema:
            type: boolean
        - description: Required. Zone identifier. This ID will be used to generate names such as database and dataset names when publishing metadata to Hive Metastore and BigQuery. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must end with a number or a letter. * Must be between 1-63 characters. * Must be unique across all lakes from all locations in a project. * Must not be one of the reserved IDs (i.e. "default", "global-temp")
          in: query
          name: zoneId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDataplexV1Zone"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{resource}:getIamPolicy:
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataplex.projects.locations.lakes.zones.assets.getIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
          in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleIamV1Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{resource}:setIamPolicy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
      operationId: dataplex.projects.locations.lakes.zones.assets.setIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleIamV1SetIamPolicyRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleIamV1Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{resource}:testIamPermissions:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataplex.projects.locations.lakes.zones.assets.testIamPermissions
      parameters:
        - description: "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleIamV1TestIamPermissionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleIamV1TestIamPermissionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } "
      properties: {}
      type: object
    GoogleCloudDataplexV1Action:
      description: Action represents an issue requiring administrator action for resolution.
      properties:
        asset:
          description: "Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}."
          readOnly: true
          type: string
        category:
          description: The category of issue associated with the action.
          enum:
            - CATEGORY_UNSPECIFIED
            - RESOURCE_MANAGEMENT
            - SECURITY_POLICY
            - DATA_DISCOVERY
          type: string
        dataLocations:
          description: The list of data locations associated with this action. Cloud Storage locations are represented as URI paths(E.g. gs://bucket/table1/year=2020/month=Jan/). BigQuery locations refer to resource names(E.g. bigquery.googleapis.com/projects/project-id/datasets/dataset-id).
          items:
            type: string
          type: array
        detectTime:
          description: The time that the issue was detected.
          format: google-datetime
          type: string
        failedSecurityPolicyApply:
          $ref: "#/components/schemas/GoogleCloudDataplexV1ActionFailedSecurityPolicyApply"
          description: Details for issues related to applying security policy.
        incompatibleDataSchema:
          $ref: "#/components/schemas/GoogleCloudDataplexV1ActionIncompatibleDataSchema"
          description: Details for issues related to incompatible schemas detected within data.
        invalidDataFormat:
          $ref: "#/components/schemas/GoogleCloudDataplexV1ActionInvalidDataFormat"
          description: Details for issues related to invalid or unsupported data formats.
        invalidDataOrganization:
          $ref: "#/components/schemas/GoogleCloudDataplexV1ActionInvalidDataOrganization"
          description: Details for issues related to invalid data arrangement.
        invalidDataPartition:
          $ref: "#/components/schemas/GoogleCloudDataplexV1ActionInvalidDataPartition"
          description: Details for issues related to invalid or unsupported data partition structure.
        issue:
          description: Detailed description of the issue requiring action.
          type: string
        lake:
          description: "Output only. The relative resource name of the lake, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}."
          readOnly: true
          type: string
        missingData:
          $ref: "#/components/schemas/GoogleCloudDataplexV1ActionMissingData"
          description: Details for issues related to absence of data within managed resources.
        missingResource:
          $ref: "#/components/schemas/GoogleCloudDataplexV1ActionMissingResource"
          description: Details for issues related to absence of a managed resource.
        name:
          description: "Output only. The relative resource name of the action, of the form: projects/{project}/locations/{location}/lakes/{lake}/actions/{action} projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/actions/{action} projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/assets/{asset}/actions/{action}."
          readOnly: true
          type: string
        unauthorizedResource:
          $ref: "#/components/schemas/GoogleCloudDataplexV1ActionUnauthorizedResource"
          description: Details for issues related to lack of permissions to access data resources.
        zone:
          description: "Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}."
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1ActionFailedSecurityPolicyApply:
      description: Failed to apply security policy to the managed resource(s) under a lake, zone or an asset. For a lake or zone resource, one or more underlying assets has a failure applying security policy to the associated managed resource.
      properties:
        asset:
          description: Resource name of one of the assets with failing security policy application. Populated for a lake or zone resource only.
          type: string
      type: object
    GoogleCloudDataplexV1ActionIncompatibleDataSchema:
      description: Action details for incompatible schemas detected by discovery.
      properties:
        existingSchema:
          description: The existing and expected schema of the table. The schema is provided as a JSON formatted structure listing columns and data types.
          type: string
        newSchema:
          description: The new and incompatible schema within the table. The schema is provided as a JSON formatted structured listing columns and data types.
          type: string
        sampledDataLocations:
          description: The list of data locations sampled and used for format/schema inference.
          items:
            type: string
          type: array
        schemaChange:
          description: Whether the action relates to a schema that is incompatible or modified.
          enum:
            - SCHEMA_CHANGE_UNSPECIFIED
            - INCOMPATIBLE
            - MODIFIED
          type: string
        table:
          description: The name of the table containing invalid data.
          type: string
      type: object
    GoogleCloudDataplexV1ActionInvalidDataFormat:
      description: Action details for invalid or unsupported data files detected by discovery.
      properties:
        expectedFormat:
          description: The expected data format of the entity.
          type: string
        newFormat:
          description: The new unexpected data format within the entity.
          type: string
        sampledDataLocations:
          description: The list of data locations sampled and used for format/schema inference.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDataplexV1ActionInvalidDataOrganization:
      description: Action details for invalid data arrangement.
      properties: {}
      type: object
    GoogleCloudDataplexV1ActionInvalidDataPartition:
      description: Action details for invalid or unsupported partitions detected by discovery.
      properties:
        expectedStructure:
          description: The issue type of InvalidDataPartition.
          enum:
            - PARTITION_STRUCTURE_UNSPECIFIED
            - CONSISTENT_KEYS
            - HIVE_STYLE_KEYS
          type: string
      type: object
    GoogleCloudDataplexV1ActionMissingData:
      description: Action details for absence of data detected by discovery.
      properties: {}
      type: object
    GoogleCloudDataplexV1ActionMissingResource:
      description: Action details for resource references in assets that cannot be located.
      properties: {}
      type: object
    GoogleCloudDataplexV1ActionUnauthorizedResource:
      description: Action details for unauthorized resource issues raised to indicate that the service account associated with the lake instance is not authorized to access or manage the resource associated with an asset.
      properties: {}
      type: object
    GoogleCloudDataplexV1Asset:
      description: An asset represents a cloud resource that is being managed within a lake as a member of a zone.
      properties:
        createTime:
          description: Output only. The time when the asset was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. Description of the asset.
          type: string
        discoverySpec:
          $ref: "#/components/schemas/GoogleCloudDataplexV1AssetDiscoverySpec"
          description: Optional. Specification of the discovery feature applied to data referenced by this asset. When this spec is left unset, the asset will use the spec set on the parent zone.
        discoveryStatus:
          $ref: "#/components/schemas/GoogleCloudDataplexV1AssetDiscoveryStatus"
          description: Output only. Status of the discovery feature applied to data referenced by this asset.
          readOnly: true
        displayName:
          description: Optional. User friendly display name.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. User defined labels for the asset.
          type: object
        name:
          description: "Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}."
          readOnly: true
          type: string
        resourceSpec:
          $ref: "#/components/schemas/GoogleCloudDataplexV1AssetResourceSpec"
          description: Required. Specification of the resource that is referenced by this asset.
        resourceStatus:
          $ref: "#/components/schemas/GoogleCloudDataplexV1AssetResourceStatus"
          description: Output only. Status of the resource referenced by this asset.
          readOnly: true
        securityStatus:
          $ref: "#/components/schemas/GoogleCloudDataplexV1AssetSecurityStatus"
          description: Output only. Status of the security policy applied to resource referenced by this asset.
          readOnly: true
        state:
          description: Output only. Current state of the asset.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          readOnly: true
          type: string
        uid:
          description: Output only. System generated globally unique ID for the asset. This ID will be different if the asset is deleted and re-created with the same name.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time when the asset was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1AssetDiscoverySpec:
      description: Settings to manage the metadata discovery and publishing for an asset.
      properties:
        csvOptions:
          $ref: "#/components/schemas/GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions"
          description: Optional. Configuration for CSV data.
        enabled:
          description: Optional. Whether discovery is enabled.
          type: boolean
        excludePatterns:
          description: Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
          items:
            type: string
          type: array
        includePatterns:
          description: Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
          items:
            type: string
          type: array
        jsonOptions:
          $ref: "#/components/schemas/GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions"
          description: Optional. Configuration for Json data.
        schedule:
          description: 'Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.'
          type: string
      type: object
    GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions:
      description: Describe CSV and similar semi-structured data formats.
      properties:
        delimiter:
          description: Optional. The delimiter being used to separate values. This defaults to ','.
          type: string
        disableTypeInference:
          description: Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.
          type: boolean
        encoding:
          description: Optional. The character encoding of the data. The default is UTF-8.
          type: string
        headerRows:
          description: Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.
          format: int32
          type: integer
      type: object
    GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions:
      description: Describe JSON data format.
      properties:
        disableTypeInference:
          description: Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).
          type: boolean
        encoding:
          description: Optional. The character encoding of the data. The default is UTF-8.
          type: string
      type: object
    GoogleCloudDataplexV1AssetDiscoveryStatus:
      description: Status of discovery for an asset.
      properties:
        lastRunDuration:
          description: The duration of the last discovery run.
          format: google-duration
          type: string
        lastRunTime:
          description: The start time of the last discovery run.
          format: google-datetime
          type: string
        message:
          description: Additional information about the current state.
          type: string
        state:
          description: The current status of the discovery feature.
          enum:
            - STATE_UNSPECIFIED
            - SCHEDULED
            - IN_PROGRESS
            - PAUSED
            - DISABLED
          type: string
        stats:
          $ref: "#/components/schemas/GoogleCloudDataplexV1AssetDiscoveryStatusStats"
          description: Data Stats of the asset reported by discovery.
        updateTime:
          description: Last update time of the status.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDataplexV1AssetDiscoveryStatusStats:
      description: The aggregated data statistics for the asset reported by discovery.
      properties:
        dataItems:
          description: The count of data items within the referenced resource.
          format: int64
          type: string
        dataSize:
          description: The number of stored data bytes within the referenced resource.
          format: int64
          type: string
        filesets:
          description: The count of fileset entities within the referenced resource.
          format: int64
          type: string
        tables:
          description: The count of table entities within the referenced resource.
          format: int64
          type: string
      type: object
    GoogleCloudDataplexV1AssetResourceSpec:
      description: Identifies the cloud resource that is referenced by this asset.
      properties:
        name:
          description: "Immutable. Relative name of the cloud resource that contains the data that is being managed within a lake. For example: projects/{project_number}/buckets/{bucket_id} projects/{project_number}/datasets/{dataset_id}"
          type: string
        readAccessMode:
          description: Optional. Determines how read permissions are handled for each asset and their associated tables. Only available to storage buckets assets.
          enum:
            - ACCESS_MODE_UNSPECIFIED
            - DIRECT
            - MANAGED
          type: string
        type:
          description: Required. Immutable. Type of resource.
          enum:
            - TYPE_UNSPECIFIED
            - STORAGE_BUCKET
            - BIGQUERY_DATASET
          type: string
      type: object
    GoogleCloudDataplexV1AssetResourceStatus:
      description: Status of the resource referenced by an asset.
      properties:
        managedAccessIdentity:
          description: Output only. Service account associated with the BigQuery Connection.
          readOnly: true
          type: string
        message:
          description: Additional information about the current state.
          type: string
        state:
          description: The current state of the managed resource.
          enum:
            - STATE_UNSPECIFIED
            - READY
            - ERROR
          type: string
        updateTime:
          description: Last update time of the status.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDataplexV1AssetSecurityStatus:
      description: Security policy status of the asset. Data security policy, i.e., readers, writers & owners, should be specified in the lake/zone/asset IAM policy.
      properties:
        message:
          description: Additional information about the current state.
          type: string
        state:
          description: The current state of the security policy applied to the attached resource.
          enum:
            - STATE_UNSPECIFIED
            - READY
            - APPLYING
            - ERROR
          type: string
        updateTime:
          description: Last update time of the status.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDataplexV1AssetStatus:
      description: Aggregated status of the underlying assets of a lake or zone.
      properties:
        activeAssets:
          description: Number of active assets.
          format: int32
          type: integer
        securityPolicyApplyingAssets:
          description: Number of assets that are in process of updating the security policy on attached resources.
          format: int32
          type: integer
        updateTime:
          description: Last update time of the status.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDataplexV1CancelJobRequest:
      description: Cancel task jobs.
      properties: {}
      type: object
    GoogleCloudDataplexV1Content:
      description: Content represents a user-visible notebook or a sql script
      properties:
        createTime:
          description: Output only. Content creation time.
          format: google-datetime
          readOnly: true
          type: string
        dataText:
          description: Required. Content data in string format.
          type: string
        description:
          description: Optional. Description of the content.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. User defined labels for the content.
          type: object
        name:
          description: "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}"
          readOnly: true
          type: string
        notebook:
          $ref: "#/components/schemas/GoogleCloudDataplexV1ContentNotebook"
          description: Notebook related configurations.
        path:
          description: Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.
          type: string
        sqlScript:
          $ref: "#/components/schemas/GoogleCloudDataplexV1ContentSqlScript"
          description: Sql Script related configurations.
        uid:
          description: Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time when the content was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1ContentNotebook:
      description: Configuration for Notebook content.
      properties:
        kernelType:
          description: Required. Kernel Type of the notebook.
          enum:
            - KERNEL_TYPE_UNSPECIFIED
            - PYTHON3
          type: string
      type: object
    GoogleCloudDataplexV1ContentSqlScript:
      description: Configuration for the Sql Script content.
      properties:
        engine:
          description: Required. Query Engine to be used for the Sql Query.
          enum:
            - QUERY_ENGINE_UNSPECIFIED
            - SPARK
          type: string
      type: object
    GoogleCloudDataplexV1DataAccessSpec:
      description: "DataAccessSpec holds the access control configuration to be enforced on data stored within resources (eg: rows, columns in BigQuery Tables). When associated with data, the data is only accessible to principals explicitly granted access through the DataAccessSpec. Principals with access to the containing resource are not implicitly granted access."
      properties:
        readers:
          description: Optional. The format of strings follows the pattern followed by IAM in the bindings. user:{email}, serviceAccount:{email} group:{email}. The set of principals to be granted reader role on data stored within resources.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDataplexV1DataAttribute:
      description: "Denotes one dataAttribute in a dataTaxonomy, for example, PII. DataAttribute resources can be defined in a hierarchy. A single dataAttribute resource can contain specs of multiple types PII - ResourceAccessSpec : - readers :foo@bar.com - DataAccessSpec : - readers :bar@foo.com "
      properties:
        attributeCount:
          description: Output only. The number of child attributes present for this attribute.
          format: int32
          readOnly: true
          type: integer
        createTime:
          description: Output only. The time when the DataAttribute was created.
          format: google-datetime
          readOnly: true
          type: string
        dataAccessSpec:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataAccessSpec"
          description: "Optional. Specified when applied to data stored on the resource (eg: rows, columns in BigQuery Tables)."
        description:
          description: Optional. Description of the DataAttribute.
          type: string
        displayName:
          description: Optional. User friendly display name.
          type: string
        etag:
          description: This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. User-defined labels for the DataAttribute.
          type: object
        name:
          description: "Output only. The relative resource name of the dataAttribute, of the form: projects/{project_number}/locations/{location_id}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}."
          readOnly: true
          type: string
        parentId:
          description: Optional. The ID of the parent DataAttribute resource, should belong to the same data taxonomy. Circular dependency in parent chain is not valid. Maximum depth of the hierarchy allowed is 4. a -> b -> c -> d -> e, depth = 4
          type: string
        resourceAccessSpec:
          $ref: "#/components/schemas/GoogleCloudDataplexV1ResourceAccessSpec"
          description: "Optional. Specified when applied to a resource (eg: Cloud Storage bucket, BigQuery dataset, BigQuery table)."
        uid:
          description: Output only. System generated globally unique ID for the DataAttribute. This ID will be different if the DataAttribute is deleted and re-created with the same name.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time when the DataAttribute was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1DataAttributeBinding:
      description: "DataAttributeBinding represents binding of attributes to resources. Eg: Bind 'CustomerInfo' entity with 'PII' attribute."
      properties:
        attributes:
          description: "Optional. List of attributes to be associated with the resource, provided in the form: projects/{project}/locations/{location}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}"
          items:
            type: string
          type: array
        createTime:
          description: Output only. The time when the DataAttributeBinding was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. Description of the DataAttributeBinding.
          type: string
        displayName:
          description: Optional. User friendly display name.
          type: string
        etag:
          description: This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Etags must be used when calling the DeleteDataAttributeBinding and the UpdateDataAttributeBinding method.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. User-defined labels for the DataAttributeBinding.
          type: object
        name:
          description: "Output only. The relative resource name of the Data Attribute Binding, of the form: projects/{project_number}/locations/{location}/dataAttributeBindings/{data_attribute_binding_id}"
          readOnly: true
          type: string
        paths:
          description: Optional. The list of paths for items within the associated resource (eg. columns and partitions within a table) along with attribute bindings.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1DataAttributeBindingPath"
          type: array
        resource:
          description: "Optional. Immutable. The resource name of the resource that is associated to attributes. Presently, only entity resource is supported in the form: projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/entities/{entity_id} Must belong in the same project and region as the attribute binding, and there can only exist one active binding for a resource."
          type: string
        uid:
          description: Output only. System generated globally unique ID for the DataAttributeBinding. This ID will be different if the DataAttributeBinding is deleted and re-created with the same name.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time when the DataAttributeBinding was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1DataAttributeBindingPath:
      description: Represents a subresource of the given resource, and associated bindings with it. Currently supported subresources are column and partition schema fields within a table.
      properties:
        attributes:
          description: "Optional. List of attributes to be associated with the path of the resource, provided in the form: projects/{project}/locations/{location}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}"
          items:
            type: string
          type: array
        name:
          description: "Required. The name identifier of the path. Nested columns should be of the form: 'address.city'."
          type: string
      type: object
    GoogleCloudDataplexV1DataProfileResult:
      description: DataProfileResult defines the output of DataProfileScan. Each field of the table will have field type specific profile result.
      properties:
        postScanActionsResult:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataProfileResultPostScanActionsResult"
          description: Output only. The result of post scan actions.
          readOnly: true
        profile:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfile"
          description: The profile information per field.
        rowCount:
          description: The count of rows scanned.
          format: int64
          type: string
        scannedData:
          $ref: "#/components/schemas/GoogleCloudDataplexV1ScannedData"
          description: The data scanned for this result.
      type: object
    GoogleCloudDataplexV1DataProfileResultPostScanActionsResult:
      description: The result of post scan actions of DataProfileScan job.
      properties:
        bigqueryExportResult:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataProfileResultPostScanActionsResultBigQueryExportResult"
          description: Output only. The result of BigQuery export post scan action.
          readOnly: true
      type: object
    GoogleCloudDataplexV1DataProfileResultPostScanActionsResultBigQueryExportResult:
      description: The result of BigQuery export post scan action.
      properties:
        message:
          description: Output only. Additional information about the BigQuery exporting.
          readOnly: true
          type: string
        state:
          description: Output only. Execution state for the BigQuery exporting.
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - SKIPPED
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1DataProfileResultProfile:
      description: Contains name, type, mode and field type specific profile information.
      properties:
        fields:
          description: List of fields with structural and profile information for each field.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileField"
          type: array
      type: object
    GoogleCloudDataplexV1DataProfileResultProfileField:
      description: A field within a table.
      properties:
        mode:
          description: "The mode of the field. Possible values include: REQUIRED, if it is a required field. NULLABLE, if it is an optional field. REPEATED, if it is a repeated field."
          type: string
        name:
          description: The name of the field.
          type: string
        profile:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo"
          description: Profile information for the corresponding field.
        type:
          description: The data type retrieved from the schema of the data source. For instance, for a BigQuery native table, it is the BigQuery Table Schema (https://cloud.google.com/bigquery/docs/reference/rest/v2/tables#tablefieldschema). For a Dataplex Entity, it is the Entity Schema (https://cloud.google.com/dataplex/docs/reference/rpc/google.cloud.dataplex.v1#type_3).
          type: string
      type: object
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo:
      description: The profile information for each field type.
      properties:
        distinctRatio:
          description: Ratio of rows with distinct values against total scanned rows. Not available for complex non-groupable field type RECORD and fields with REPEATABLE mode.
          format: double
          type: number
        doubleProfile:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo"
          description: Double type field information.
        integerProfile:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo"
          description: Integer type field information.
        nullRatio:
          description: Ratio of rows with null value against total scanned rows.
          format: double
          type: number
        stringProfile:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo"
          description: String type field information.
        topNValues:
          description: The list of top N non-null values, frequency and ratio with which they occur in the scanned data. N is 10 or equal to the number of distinct values in the field, whichever is smaller. Not available for complex non-groupable field type RECORD and fields with REPEATABLE mode.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue"
          type: array
      type: object
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo:
      description: The profile information for a double type field.
      properties:
        average:
          description: Average of non-null values in the scanned data. NaN, if the field has a NaN.
          format: double
          type: number
        max:
          description: Maximum of non-null values in the scanned data. NaN, if the field has a NaN.
          format: double
          type: number
        min:
          description: Minimum of non-null values in the scanned data. NaN, if the field has a NaN.
          format: double
          type: number
        quartiles:
          description: "A quartile divides the number of data points into four parts, or quarters, of more-or-less equal size. Three main quartiles used are: The first quartile (Q1) splits off the lowest 25% of data from the highest 75%. It is also known as the lower or 25th empirical quartile, as 25% of the data is below this point. The second quartile (Q2) is the median of a data set. So, 50% of the data lies below this point. The third quartile (Q3) splits off the highest 25% of data from the lowest 75%. It is known as the upper or 75th empirical quartile, as 75% of the data lies below this point. Here, the quartiles is provided as an ordered list of quartile values for the scanned data, occurring in order Q1, median, Q3."
          items:
            format: double
            type: number
          type: array
        standardDeviation:
          description: Standard deviation of non-null values in the scanned data. NaN, if the field has a NaN.
          format: double
          type: number
      type: object
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo:
      description: The profile information for an integer type field.
      properties:
        average:
          description: Average of non-null values in the scanned data. NaN, if the field has a NaN.
          format: double
          type: number
        max:
          description: Maximum of non-null values in the scanned data. NaN, if the field has a NaN.
          format: int64
          type: string
        min:
          description: Minimum of non-null values in the scanned data. NaN, if the field has a NaN.
          format: int64
          type: string
        quartiles:
          description: "A quartile divides the number of data points into four parts, or quarters, of more-or-less equal size. Three main quartiles used are: The first quartile (Q1) splits off the lowest 25% of data from the highest 75%. It is also known as the lower or 25th empirical quartile, as 25% of the data is below this point. The second quartile (Q2) is the median of a data set. So, 50% of the data lies below this point. The third quartile (Q3) splits off the highest 25% of data from the lowest 75%. It is known as the upper or 75th empirical quartile, as 75% of the data lies below this point. Here, the quartiles is provided as an ordered list of approximate quartile values for the scanned data, occurring in order Q1, median, Q3."
          items:
            format: int64
            type: string
          type: array
        standardDeviation:
          description: Standard deviation of non-null values in the scanned data. NaN, if the field has a NaN.
          format: double
          type: number
      type: object
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo:
      description: The profile information for a string type field.
      properties:
        averageLength:
          description: Average length of non-null values in the scanned data.
          format: double
          type: number
        maxLength:
          description: Maximum length of non-null values in the scanned data.
          format: int64
          type: string
        minLength:
          description: Minimum length of non-null values in the scanned data.
          format: int64
          type: string
      type: object
    GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue:
      description: Top N non-null values in the scanned data.
      properties:
        count:
          description: Count of the corresponding value in the scanned data.
          format: int64
          type: string
        ratio:
          description: Ratio of the corresponding value in the field against the total number of rows in the scanned data.
          format: double
          type: number
        value:
          description: String value of a top N non-null value.
          type: string
      type: object
    GoogleCloudDataplexV1DataProfileSpec:
      description: DataProfileScan related setting.
      properties:
        excludeFields:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataProfileSpecSelectedFields"
          description: Optional. The fields to exclude from data profile.If specified, the fields will be excluded from data profile, regardless of include_fields value.
        includeFields:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataProfileSpecSelectedFields"
          description: Optional. The fields to include in data profile.If not specified, all fields at the time of profile scan job execution are included, except for ones listed in exclude_fields.
        postScanActions:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataProfileSpecPostScanActions"
          description: Optional. Actions to take upon job completion..
        rowFilter:
          description: "Optional. A filter applied to all rows in a single DataScan job. The filter needs to be a valid SQL expression for a WHERE clause in BigQuery standard SQL syntax. Example: col1 >= 0 AND col2 < 10"
          type: string
        samplingPercent:
          description: Optional. The percentage of the records to be selected from the dataset for DataScan. Value can range between 0.0 and 100.0 with up to 3 significant decimal digits. Sampling is not applied if sampling_percent is not specified, 0 or 100.
          format: float
          type: number
      type: object
    GoogleCloudDataplexV1DataProfileSpecPostScanActions:
      description: The configuration of post scan actions of DataProfileScan job.
      properties:
        bigqueryExport:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataProfileSpecPostScanActionsBigQueryExport"
          description: Optional. If set, results will be exported to the provided BigQuery table.
      type: object
    GoogleCloudDataplexV1DataProfileSpecPostScanActionsBigQueryExport:
      description: The configuration of BigQuery export post scan action.
      properties:
        resultsTable:
          description: "Optional. The BigQuery table to export DataProfileScan results to. Format: //bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID/tables/TABLE_ID"
          type: string
      type: object
    GoogleCloudDataplexV1DataProfileSpecSelectedFields:
      description: The specification for fields to include or exclude in data profile scan.
      properties:
        fieldNames:
          description: Optional. Expected input is a list of fully qualified names of fields as in the schema.Only top-level field names for nested fields are supported. For instance, if 'x' is of nested field type, listing 'x' is supported but 'x.y.z' is not supported. Here 'y' and 'y.z' are nested fields of 'x'.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDataplexV1DataQualityColumnResult:
      description: DataQualityColumnResult provides a more detailed, per-column view of the results.
      properties:
        column:
          description: Output only. The column specified in the DataQualityRule.
          readOnly: true
          type: string
        score:
          description: Output only. The column-level data quality score for this data scan job if and only if the 'column' field is set.The score ranges between between 0, 100 (up to two decimal points).
          format: float
          readOnly: true
          type: number
      type: object
    GoogleCloudDataplexV1DataQualityDimension:
      description: A dimension captures data quality intent about a defined subset of the rules specified.
      properties:
        name:
          description: The dimension name a rule belongs to. Supported dimensions are "COMPLETENESS", "ACCURACY", "CONSISTENCY", "VALIDITY", "UNIQUENESS", "INTEGRITY"
          type: string
      type: object
    GoogleCloudDataplexV1DataQualityDimensionResult:
      description: DataQualityDimensionResult provides a more detailed, per-dimension view of the results.
      properties:
        dimension:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualityDimension"
          description: Output only. The dimension config specified in the DataQualitySpec, as is.
          readOnly: true
        passed:
          description: Whether the dimension passed or failed.
          type: boolean
        score:
          description: Output only. The dimension-level data quality score for this data scan job if and only if the 'dimension' field is set.The score ranges between 0, 100 (up to two decimal points).
          format: float
          readOnly: true
          type: number
      type: object
    GoogleCloudDataplexV1DataQualityResult:
      description: The output of a DataQualityScan.
      properties:
        columns:
          description: Output only. A list of results at the column level.A column will have a corresponding DataQualityColumnResult if and only if there is at least one rule with the 'column' field set to it.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualityColumnResult"
          readOnly: true
          type: array
        dimensions:
          description: A list of results at the dimension level.A dimension will have a corresponding DataQualityDimensionResult if and only if there is at least one rule with the 'dimension' field set to it.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualityDimensionResult"
          type: array
        passed:
          description: Overall data quality result -- true if all rules passed.
          type: boolean
        postScanActionsResult:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualityResultPostScanActionsResult"
          description: Output only. The result of post scan actions.
          readOnly: true
        rowCount:
          description: The count of rows processed.
          format: int64
          type: string
        rules:
          description: A list of all the rules in a job, and their results.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualityRuleResult"
          type: array
        scannedData:
          $ref: "#/components/schemas/GoogleCloudDataplexV1ScannedData"
          description: The data scanned for this result.
        score:
          description: Output only. The overall data quality score.The score ranges between 0, 100 (up to two decimal points).
          format: float
          readOnly: true
          type: number
      type: object
    GoogleCloudDataplexV1DataQualityResultPostScanActionsResult:
      description: The result of post scan actions of DataQualityScan job.
      properties:
        bigqueryExportResult:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualityResultPostScanActionsResultBigQueryExportResult"
          description: Output only. The result of BigQuery export post scan action.
          readOnly: true
      type: object
    GoogleCloudDataplexV1DataQualityResultPostScanActionsResultBigQueryExportResult:
      description: The result of BigQuery export post scan action.
      properties:
        message:
          description: Output only. Additional information about the BigQuery exporting.
          readOnly: true
          type: string
        state:
          description: Output only. Execution state for the BigQuery exporting.
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - SKIPPED
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1DataQualityRule:
      description: A rule captures data quality intent about a data source.
      properties:
        column:
          description: Optional. The unnested column which this rule is evaluated against.
          type: string
        description:
          description: Optional. Description of the rule. The maximum length is 1,024 characters.
          type: string
        dimension:
          description: Required. The dimension a rule belongs to. Results are also aggregated at the dimension level. Supported dimensions are "COMPLETENESS", "ACCURACY", "CONSISTENCY", "VALIDITY", "UNIQUENESS", "INTEGRITY"
          type: string
        ignoreNull:
          description: "Optional. Rows with null values will automatically fail a rule, unless ignore_null is true. In that case, such null rows are trivially considered passing.This field is only valid for the following type of rules: RangeExpectation RegexExpectation SetExpectation UniquenessExpectation"
          type: boolean
        name:
          description: Optional. A mutable name for the rule. The name must contain only letters (a-z, A-Z), numbers (0-9), or hyphens (-). The maximum length is 63 characters. Must start with a letter. Must end with a number or a letter.
          type: string
        nonNullExpectation:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualityRuleNonNullExpectation"
          description: Row-level rule which evaluates whether each column value is null.
        rangeExpectation:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualityRuleRangeExpectation"
          description: Row-level rule which evaluates whether each column value lies between a specified range.
        regexExpectation:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualityRuleRegexExpectation"
          description: Row-level rule which evaluates whether each column value matches a specified regex.
        rowConditionExpectation:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation"
          description: Row-level rule which evaluates whether each row in a table passes the specified condition.
        setExpectation:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualityRuleSetExpectation"
          description: Row-level rule which evaluates whether each column value is contained by a specified set.
        statisticRangeExpectation:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation"
          description: Aggregate rule which evaluates whether the column aggregate statistic lies between a specified range.
        tableConditionExpectation:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation"
          description: Aggregate rule which evaluates whether the provided expression is true for a table.
        threshold:
          description: Optional. The minimum ratio of passing_rows / total_rows required to pass this rule, with a range of 0.0, 1.0.0 indicates default value (i.e. 1.0).This field is only valid for row-level type rules.
          format: double
          type: number
        uniquenessExpectation:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation"
          description: Row-level rule which evaluates whether each column value is unique.
      type: object
    GoogleCloudDataplexV1DataQualityRuleNonNullExpectation:
      description: Evaluates whether each column value is null.
      properties: {}
      type: object
    GoogleCloudDataplexV1DataQualityRuleRangeExpectation:
      description: Evaluates whether each column value lies between a specified range.
      properties:
        maxValue:
          description: Optional. The maximum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
          type: string
        minValue:
          description: Optional. The minimum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
          type: string
        strictMaxEnabled:
          description: Optional. Whether each value needs to be strictly lesser than ('<') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.
          type: boolean
        strictMinEnabled:
          description: Optional. Whether each value needs to be strictly greater than ('>') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.
          type: boolean
      type: object
    GoogleCloudDataplexV1DataQualityRuleRegexExpectation:
      description: Evaluates whether each column value matches a specified regex.
      properties:
        regex:
          description: Optional. A regular expression the column value is expected to match.
          type: string
      type: object
    GoogleCloudDataplexV1DataQualityRuleResult:
      description: DataQualityRuleResult provides a more detailed, per-rule view of the results.
      properties:
        evaluatedCount:
          description: The number of rows a rule was evaluated against.This field is only valid for row-level type rules.Evaluated count can be configured to either include all rows (default) - with null rows automatically failing rule evaluation, or exclude null rows from the evaluated_count, by setting ignore_nulls = true.
          format: int64
          type: string
        failingRowsQuery:
          description: The query to find rows that did not pass this rule.This field is only valid for row-level type rules.
          type: string
        nullCount:
          description: The number of rows with null values in the specified column.
          format: int64
          type: string
        passRatio:
          description: The ratio of passed_count / evaluated_count.This field is only valid for row-level type rules.
          format: double
          type: number
        passed:
          description: Whether the rule passed or failed.
          type: boolean
        passedCount:
          description: The number of rows which passed a rule evaluation.This field is only valid for row-level type rules.
          format: int64
          type: string
        rule:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualityRule"
          description: The rule specified in the DataQualitySpec, as is.
      type: object
    GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation:
      description: "Evaluates whether each row passes the specified condition.The SQL expression needs to use BigQuery standard SQL syntax and should produce a boolean value per row as the result.Example: col1 >= 0 AND col2 < 10"
      properties:
        sqlExpression:
          description: Optional. The SQL expression.
          type: string
      type: object
    GoogleCloudDataplexV1DataQualityRuleSetExpectation:
      description: Evaluates whether each column value is contained by a specified set.
      properties:
        values:
          description: Optional. Expected values for the column value.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation:
      description: Evaluates whether the column aggregate statistic lies between a specified range.
      properties:
        maxValue:
          description: Optional. The maximum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.
          type: string
        minValue:
          description: Optional. The minimum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.
          type: string
        statistic:
          description: Optional. The aggregate metric to evaluate.
          enum:
            - STATISTIC_UNDEFINED
            - MEAN
            - MIN
            - MAX
          type: string
        strictMaxEnabled:
          description: Optional. Whether column statistic needs to be strictly lesser than ('<') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.
          type: boolean
        strictMinEnabled:
          description: Optional. Whether column statistic needs to be strictly greater than ('>') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.
          type: boolean
      type: object
    GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation:
      description: "Evaluates whether the provided expression is true.The SQL expression needs to use BigQuery standard SQL syntax and should produce a scalar boolean result.Example: MIN(col1) >= 0"
      properties:
        sqlExpression:
          description: Optional. The SQL expression.
          type: string
      type: object
    GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation:
      description: Evaluates whether the column has duplicates.
      properties: {}
      type: object
    GoogleCloudDataplexV1DataQualityScanRuleResult:
      description: Information about the result of a data quality rule for data quality scan. The monitored resource is 'DataScan'.
      properties:
        column:
          description: The column which this rule is evaluated against.
          type: string
        dataSource:
          description: The data source of the data scan (e.g. BigQuery table name).
          type: string
        evaluatedRowCount:
          description: The number of rows evaluated against the data quality rule. This field is only valid for rules of PER_ROW evaluation type.
          format: int64
          type: string
        evalutionType:
          description: The evaluation type of the data quality rule.
          enum:
            - EVALUATION_TYPE_UNSPECIFIED
            - PER_ROW
            - AGGREGATE
          type: string
        jobId:
          description: Identifier of the specific data scan job this log entry is for.
          type: string
        nullRowCount:
          description: The number of rows with null values in the specified column.
          format: int64
          type: string
        passedRowCount:
          description: The number of rows which passed a rule evaluation. This field is only valid for rules of PER_ROW evaluation type.
          format: int64
          type: string
        result:
          description: The result of the data quality rule.
          enum:
            - RESULT_UNSPECIFIED
            - PASSED
            - FAILED
          type: string
        ruleDimension:
          description: The dimension of the data quality rule.
          type: string
        ruleName:
          description: The name of the data quality rule.
          type: string
        ruleType:
          description: The type of the data quality rule.
          enum:
            - RULE_TYPE_UNSPECIFIED
            - NON_NULL_EXPECTATION
            - RANGE_EXPECTATION
            - REGEX_EXPECTATION
            - ROW_CONDITION_EXPECTATION
            - SET_EXPECTATION
            - STATISTIC_RANGE_EXPECTATION
            - TABLE_CONDITION_EXPECTATION
            - UNIQUENESS_EXPECTATION
          type: string
        thresholdPercent:
          description: The passing threshold (0.0, 100.0) of the data quality rule.
          format: double
          type: number
      type: object
    GoogleCloudDataplexV1DataQualitySpec:
      description: DataQualityScan related setting.
      properties:
        postScanActions:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualitySpecPostScanActions"
          description: Optional. Actions to take upon job completion.
        rowFilter:
          description: "Optional. A filter applied to all rows in a single DataScan job. The filter needs to be a valid SQL expression for a WHERE clause in BigQuery standard SQL syntax. Example: col1 >= 0 AND col2 < 10"
          type: string
        rules:
          description: Required. The list of rules to evaluate against a data source. At least one rule is required.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualityRule"
          type: array
        samplingPercent:
          description: Optional. The percentage of the records to be selected from the dataset for DataScan. Value can range between 0.0 and 100.0 with up to 3 significant decimal digits. Sampling is not applied if sampling_percent is not specified, 0 or 100.
          format: float
          type: number
      type: object
    GoogleCloudDataplexV1DataQualitySpecPostScanActions:
      description: The configuration of post scan actions of DataQualityScan.
      properties:
        bigqueryExport:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualitySpecPostScanActionsBigQueryExport"
          description: Optional. If set, results will be exported to the provided BigQuery table.
      type: object
    GoogleCloudDataplexV1DataQualitySpecPostScanActionsBigQueryExport:
      description: The configuration of BigQuery export post scan action.
      properties:
        resultsTable:
          description: "Optional. The BigQuery table to export DataQualityScan results to. Format: //bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID/tables/TABLE_ID"
          type: string
      type: object
    GoogleCloudDataplexV1DataScan:
      description: "Represents a user-visible job which provides the insights for the related data source.For example: Data Quality: generates queries based on the rules and runs against the data to get data quality check results. Data Profile: analyzes the data in table(s) and generates insights about the structure, content and relationships (such as null percent, cardinality, min/max/mean, etc)."
      properties:
        createTime:
          description: Output only. The time when the scan was created.
          format: google-datetime
          readOnly: true
          type: string
        data:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataSource"
          description: Required. The data source for DataScan.
        dataProfileResult:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataProfileResult"
          description: Output only. The result of the data profile scan.
          readOnly: true
        dataProfileSpec:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataProfileSpec"
          description: DataProfileScan related setting.
        dataQualityResult:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualityResult"
          description: Output only. The result of the data quality scan.
          readOnly: true
        dataQualitySpec:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualitySpec"
          description: DataQualityScan related setting.
        description:
          description: Optional. Description of the scan. Must be between 1-1024 characters.
          type: string
        displayName:
          description: Optional. User friendly display name. Must be between 1-256 characters.
          type: string
        executionSpec:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataScanExecutionSpec"
          description: Optional. DataScan execution settings.If not specified, the fields in it will use their default values.
        executionStatus:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataScanExecutionStatus"
          description: Output only. Status of the data scan execution.
          readOnly: true
        labels:
          additionalProperties:
            type: string
          description: Optional. User-defined labels for the scan.
          type: object
        name:
          description: "Output only. The relative resource name of the scan, of the form: projects/{project}/locations/{location_id}/dataScans/{datascan_id}, where project refers to a project_id or project_number and location_id refers to a GCP region."
          readOnly: true
          type: string
        state:
          description: Output only. Current state of the DataScan.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          readOnly: true
          type: string
        type:
          description: Output only. The type of DataScan.
          enum:
            - DATA_SCAN_TYPE_UNSPECIFIED
            - DATA_QUALITY
            - DATA_PROFILE
          readOnly: true
          type: string
        uid:
          description: Output only. System generated globally unique ID for the scan. This ID will be different if the scan is deleted and re-created with the same name.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time when the scan was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1DataScanEvent:
      description: "These messages contain information about the execution of a datascan. The monitored resource is 'DataScan' Next ID: 13"
      properties:
        createTime:
          description: The time when the data scan job was created.
          format: google-datetime
          type: string
        dataProfile:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataScanEventDataProfileResult"
          description: Data profile result for data profile type data scan.
        dataProfileConfigs:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs"
          description: Applied configs for data profile type data scan.
        dataQuality:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataScanEventDataQualityResult"
          description: Data quality result for data quality type data scan.
        dataQualityConfigs:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataScanEventDataQualityAppliedConfigs"
          description: Applied configs for data quality type data scan.
        dataSource:
          description: The data source of the data scan
          type: string
        endTime:
          description: The time when the data scan job finished.
          format: google-datetime
          type: string
        jobId:
          description: The identifier of the specific data scan job this log entry is for.
          type: string
        message:
          description: The message describing the data scan job event.
          type: string
        postScanActionsResult:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataScanEventPostScanActionsResult"
          description: The result of post scan actions.
        scope:
          description: The scope of the data scan (e.g. full, incremental).
          enum:
            - SCOPE_UNSPECIFIED
            - FULL
            - INCREMENTAL
          type: string
        specVersion:
          description: A version identifier of the spec which was used to execute this job.
          type: string
        startTime:
          description: The time when the data scan job started to run.
          format: google-datetime
          type: string
        state:
          description: The status of the data scan job.
          enum:
            - STATE_UNSPECIFIED
            - STARTED
            - SUCCEEDED
            - FAILED
            - CANCELLED
            - CREATED
          type: string
        trigger:
          description: The trigger type of the data scan job.
          enum:
            - TRIGGER_UNSPECIFIED
            - ON_DEMAND
            - SCHEDULE
          type: string
        type:
          description: The type of the data scan.
          enum:
            - SCAN_TYPE_UNSPECIFIED
            - DATA_PROFILE
            - DATA_QUALITY
          type: string
      type: object
    GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs:
      description: Applied configs for data profile type data scan job.
      properties:
        columnFilterApplied:
          description: Boolean indicating whether a column filter was applied in the DataScan job.
          type: boolean
        rowFilterApplied:
          description: Boolean indicating whether a row filter was applied in the DataScan job.
          type: boolean
        samplingPercent:
          description: The percentage of the records selected from the dataset for DataScan. Value ranges between 0.0 and 100.0. Value 0.0 or 100.0 imply that sampling was not applied.
          format: float
          type: number
      type: object
    GoogleCloudDataplexV1DataScanEventDataProfileResult:
      description: Data profile result for data scan job.
      properties:
        rowCount:
          description: The count of rows processed in the data scan job.
          format: int64
          type: string
      type: object
    GoogleCloudDataplexV1DataScanEventDataQualityAppliedConfigs:
      description: Applied configs for data quality type data scan job.
      properties:
        rowFilterApplied:
          description: Boolean indicating whether a row filter was applied in the DataScan job.
          type: boolean
        samplingPercent:
          description: The percentage of the records selected from the dataset for DataScan. Value ranges between 0.0 and 100.0. Value 0.0 or 100.0 imply that sampling was not applied.
          format: float
          type: number
      type: object
    GoogleCloudDataplexV1DataScanEventDataQualityResult:
      description: Data quality result for data scan job.
      properties:
        columnScore:
          additionalProperties:
            format: float
            type: number
          description: The score of each column scanned in the data scan job. The key of the map is the name of the column. The value is the data quality score for the column.The score ranges between 0, 100 (up to two decimal points).
          type: object
        dimensionPassed:
          additionalProperties:
            type: boolean
          description: The result of each dimension for data quality result. The key of the map is the name of the dimension. The value is the bool value depicting whether the dimension result was pass or not.
          type: object
        dimensionScore:
          additionalProperties:
            format: float
            type: number
          description: The score of each dimension for data quality result. The key of the map is the name of the dimension. The value is the data quality score for the dimension.The score ranges between 0, 100 (up to two decimal points).
          type: object
        passed:
          description: Whether the data quality result was pass or not.
          type: boolean
        rowCount:
          description: The count of rows processed in the data scan job.
          format: int64
          type: string
        score:
          description: The table-level data quality score for the data scan job.The data quality score ranges between 0, 100 (up to two decimal points).
          format: float
          type: number
      type: object
    GoogleCloudDataplexV1DataScanEventPostScanActionsResult:
      description: Post scan actions result for data scan job.
      properties:
        bigqueryExportResult:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataScanEventPostScanActionsResultBigQueryExportResult"
          description: The result of BigQuery export post scan action.
      type: object
    GoogleCloudDataplexV1DataScanEventPostScanActionsResultBigQueryExportResult:
      description: The result of BigQuery export post scan action.
      properties:
        message:
          description: Additional information about the BigQuery exporting.
          type: string
        state:
          description: Execution state for the BigQuery exporting.
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - SKIPPED
          type: string
      type: object
    GoogleCloudDataplexV1DataScanExecutionSpec:
      description: DataScan execution settings.
      properties:
        field:
          description: Immutable. The unnested field (of type Date or Timestamp) that contains values which monotonically increase over time.If not specified, a data scan will run for all data in the table.
          type: string
        trigger:
          $ref: "#/components/schemas/GoogleCloudDataplexV1Trigger"
          description: Optional. Spec related to how often and when a scan should be triggered.If not specified, the default is OnDemand, which means the scan will not run until the user calls RunDataScan API.
      type: object
    GoogleCloudDataplexV1DataScanExecutionStatus:
      description: Status of the data scan execution.
      properties:
        latestJobEndTime:
          description: The time when the latest DataScanJob ended.
          format: google-datetime
          type: string
        latestJobStartTime:
          description: The time when the latest DataScanJob started.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDataplexV1DataScanJob:
      description: A DataScanJob represents an instance of DataScan execution.
      properties:
        dataProfileResult:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataProfileResult"
          description: Output only. The result of the data profile scan.
          readOnly: true
        dataProfileSpec:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataProfileSpec"
          description: Output only. DataProfileScan related setting.
          readOnly: true
        dataQualityResult:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualityResult"
          description: Output only. The result of the data quality scan.
          readOnly: true
        dataQualitySpec:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataQualitySpec"
          description: Output only. DataQualityScan related setting.
          readOnly: true
        endTime:
          description: Output only. The time when the DataScanJob ended.
          format: google-datetime
          readOnly: true
          type: string
        message:
          description: Output only. Additional information about the current state.
          readOnly: true
          type: string
        name:
          description: "Output only. The relative resource name of the DataScanJob, of the form: projects/{project}/locations/{location_id}/dataScans/{datascan_id}/jobs/{job_id}, where project refers to a project_id or project_number and location_id refers to a GCP region."
          readOnly: true
          type: string
        startTime:
          description: Output only. The time when the DataScanJob was started.
          format: google-datetime
          readOnly: true
          type: string
        state:
          description: Output only. Execution state for the DataScanJob.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - CANCELING
            - CANCELLED
            - SUCCEEDED
            - FAILED
            - PENDING
          readOnly: true
          type: string
        type:
          description: Output only. The type of the parent DataScan.
          enum:
            - DATA_SCAN_TYPE_UNSPECIFIED
            - DATA_QUALITY
            - DATA_PROFILE
          readOnly: true
          type: string
        uid:
          description: Output only. System generated globally unique ID for the DataScanJob.
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1DataSource:
      description: The data source for DataScan.
      properties:
        entity:
          description: "Immutable. The Dataplex entity that represents the data source (e.g. BigQuery table) for DataScan, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}."
          type: string
        resource:
          description: 'Immutable. The service-qualified full resource name of the cloud resource for a DataScan job to scan against. The field could be: BigQuery table of type "TABLE" for DataProfileScan/DataQualityScan Format: //bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID/tables/TABLE_ID'
          type: string
      type: object
    GoogleCloudDataplexV1DataTaxonomy:
      description: "DataTaxonomy represents a set of hierarchical DataAttributes resources, grouped with a common theme Eg: 'SensitiveDataTaxonomy' can have attributes to manage PII data. It is defined at project level."
      properties:
        attributeCount:
          description: Output only. The number of attributes in the DataTaxonomy.
          format: int32
          readOnly: true
          type: integer
        classCount:
          description: Output only. The number of classes in the DataTaxonomy.
          format: int32
          readOnly: true
          type: integer
        createTime:
          description: Output only. The time when the DataTaxonomy was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. Description of the DataTaxonomy.
          type: string
        displayName:
          description: Optional. User friendly display name.
          type: string
        etag:
          description: This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. User-defined labels for the DataTaxonomy.
          type: object
        name:
          description: "Output only. The relative resource name of the DataTaxonomy, of the form: projects/{project_number}/locations/{location_id}/dataTaxonomies/{data_taxonomy_id}."
          readOnly: true
          type: string
        uid:
          description: Output only. System generated globally unique ID for the dataTaxonomy. This ID will be different if the DataTaxonomy is deleted and re-created with the same name.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time when the DataTaxonomy was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1DiscoveryEvent:
      description: The payload associated with Discovery data processing.
      properties:
        action:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DiscoveryEventActionDetails"
          description: Details about the action associated with the event.
        assetId:
          description: The id of the associated asset.
          type: string
        config:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DiscoveryEventConfigDetails"
          description: Details about discovery configuration in effect.
        dataLocation:
          description: The data location associated with the event.
          type: string
        entity:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DiscoveryEventEntityDetails"
          description: Details about the entity associated with the event.
        lakeId:
          description: The id of the associated lake.
          type: string
        message:
          description: The log message.
          type: string
        partition:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DiscoveryEventPartitionDetails"
          description: Details about the partition associated with the event.
        type:
          description: The type of the event being logged.
          enum:
            - EVENT_TYPE_UNSPECIFIED
            - CONFIG
            - ENTITY_CREATED
            - ENTITY_UPDATED
            - ENTITY_DELETED
            - PARTITION_CREATED
            - PARTITION_UPDATED
            - PARTITION_DELETED
          type: string
        zoneId:
          description: The id of the associated zone.
          type: string
      type: object
    GoogleCloudDataplexV1DiscoveryEventActionDetails:
      description: Details about the action.
      properties:
        type:
          description: The type of action. Eg. IncompatibleDataSchema, InvalidDataFormat
          type: string
      type: object
    GoogleCloudDataplexV1DiscoveryEventConfigDetails:
      description: Details about configuration events.
      properties:
        parameters:
          additionalProperties:
            type: string
          description: A list of discovery configuration parameters in effect. The keys are the field paths within DiscoverySpec. Eg. includePatterns, excludePatterns, csvOptions.disableTypeInference, etc.
          type: object
      type: object
    GoogleCloudDataplexV1DiscoveryEventEntityDetails:
      description: Details about the entity.
      properties:
        entity:
          description: The name of the entity resource. The name is the fully-qualified resource name.
          type: string
        type:
          description: The type of the entity resource.
          enum:
            - ENTITY_TYPE_UNSPECIFIED
            - TABLE
            - FILESET
          type: string
      type: object
    GoogleCloudDataplexV1DiscoveryEventPartitionDetails:
      description: Details about the partition.
      properties:
        entity:
          description: The name to the containing entity resource. The name is the fully-qualified resource name.
          type: string
        partition:
          description: The name to the partition resource. The name is the fully-qualified resource name.
          type: string
        sampledDataLocations:
          description: The locations of the data items (e.g., a Cloud Storage objects) sampled for metadata inference.
          items:
            type: string
          type: array
        type:
          description: The type of the containing entity resource.
          enum:
            - ENTITY_TYPE_UNSPECIFIED
            - TABLE
            - FILESET
          type: string
      type: object
    GoogleCloudDataplexV1Entity:
      description: Represents tables and fileset metadata contained within a zone.
      properties:
        access:
          $ref: "#/components/schemas/GoogleCloudDataplexV1StorageAccess"
          description: Output only. Identifies the access mechanism to the entity. Not user settable.
          readOnly: true
        asset:
          description: Required. Immutable. The ID of the asset associated with the storage location containing the entity data. The entity must be with in the same zone with the asset.
          type: string
        catalogEntry:
          description: Output only. The name of the associated Data Catalog entry.
          readOnly: true
          type: string
        compatibility:
          $ref: "#/components/schemas/GoogleCloudDataplexV1EntityCompatibilityStatus"
          description: Output only. Metadata stores that the entity is compatible with.
          readOnly: true
        createTime:
          description: Output only. The time when the entity was created.
          format: google-datetime
          readOnly: true
          type: string
        dataPath:
          description: Required. Immutable. The storage path of the entity data. For Cloud Storage data, this is the fully-qualified path to the entity, such as gs://bucket/path/to/data. For BigQuery data, this is the name of the table resource, such as projects/project_id/datasets/dataset_id/tables/table_id.
          type: string
        dataPathPattern:
          description: "Optional. The set of items within the data path constituting the data in the entity, represented as a glob path. Example: gs://bucket/path/to/data/**/*.csv."
          type: string
        description:
          description: Optional. User friendly longer description text. Must be shorter than or equal to 1024 characters.
          type: string
        displayName:
          description: Optional. Display name must be shorter than or equal to 256 characters.
          type: string
        etag:
          description: Optional. The etag associated with the entity, which can be retrieved with a GetEntity request. Required for update and delete requests.
          type: string
        format:
          $ref: "#/components/schemas/GoogleCloudDataplexV1StorageFormat"
          description: Required. Identifies the storage format of the entity data. It does not apply to entities with data stored in BigQuery.
        id:
          description: Required. A user-provided entity ID. It is mutable, and will be used as the published table name. Specifying a new ID in an update entity request will override the existing value. The ID must contain only letters (a-z, A-Z), numbers (0-9), and underscores, and consist of 256 or fewer characters.
          type: string
        name:
          description: "Output only. The resource name of the entity, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}."
          readOnly: true
          type: string
        schema:
          $ref: "#/components/schemas/GoogleCloudDataplexV1Schema"
          description: Required. The description of the data structure and layout. The schema is not included in list responses. It is only included in SCHEMA and FULL entity views of a GetEntity response.
        system:
          description: Required. Immutable. Identifies the storage system of the entity data.
          enum:
            - STORAGE_SYSTEM_UNSPECIFIED
            - CLOUD_STORAGE
            - BIGQUERY
          type: string
        type:
          description: Required. Immutable. The type of entity.
          enum:
            - TYPE_UNSPECIFIED
            - TABLE
            - FILESET
          type: string
        uid:
          description: Output only. System generated unique ID for the Entity. This ID will be different if the Entity is deleted and re-created with the same name.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time when the entity was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1EntityCompatibilityStatus:
      description: Provides compatibility information for various metadata stores.
      properties:
        bigquery:
          $ref: "#/components/schemas/GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility"
          description: Output only. Whether this entity is compatible with BigQuery.
          readOnly: true
        hiveMetastore:
          $ref: "#/components/schemas/GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility"
          description: Output only. Whether this entity is compatible with Hive Metastore.
          readOnly: true
      type: object
    GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility:
      description: Provides compatibility information for a specific metadata store.
      properties:
        compatible:
          description: Output only. Whether the entity is compatible and can be represented in the metadata store.
          readOnly: true
          type: boolean
        reason:
          description: Output only. Provides additional detail if the entity is incompatible with the metadata store.
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1Environment:
      description: Environment represents a user-visible compute infrastructure for analytics within a lake.
      properties:
        createTime:
          description: Output only. Environment creation time.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. Description of the environment.
          type: string
        displayName:
          description: Optional. User friendly display name.
          type: string
        endpoints:
          $ref: "#/components/schemas/GoogleCloudDataplexV1EnvironmentEndpoints"
          description: Output only. URI Endpoints to access sessions associated with the Environment.
          readOnly: true
        infrastructureSpec:
          $ref: "#/components/schemas/GoogleCloudDataplexV1EnvironmentInfrastructureSpec"
          description: Required. Infrastructure specification for the Environment.
        labels:
          additionalProperties:
            type: string
          description: Optional. User defined labels for the environment.
          type: object
        name:
          description: "Output only. The relative resource name of the environment, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}"
          readOnly: true
          type: string
        sessionSpec:
          $ref: "#/components/schemas/GoogleCloudDataplexV1EnvironmentSessionSpec"
          description: Optional. Configuration for sessions created for this environment.
        sessionStatus:
          $ref: "#/components/schemas/GoogleCloudDataplexV1EnvironmentSessionStatus"
          description: Output only. Status of sessions created for this environment.
          readOnly: true
        state:
          description: Output only. Current state of the environment.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          readOnly: true
          type: string
        uid:
          description: Output only. System generated globally unique ID for the environment. This ID will be different if the environment is deleted and re-created with the same name.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time when the environment was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1EnvironmentEndpoints:
      description: URI Endpoints to access sessions associated with the Environment.
      properties:
        notebooks:
          description: Output only. URI to serve notebook APIs
          readOnly: true
          type: string
        sql:
          description: Output only. URI to serve SQL APIs
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1EnvironmentInfrastructureSpec:
      description: Configuration for the underlying infrastructure used to run workloads.
      properties:
        compute:
          $ref: "#/components/schemas/GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources"
          description: Optional. Compute resources needed for analyze interactive workloads.
        osImage:
          $ref: "#/components/schemas/GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime"
          description: Required. Software Runtime Configuration for analyze interactive workloads.
      type: object
    GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources:
      description: Compute resources associated with the analyze interactive workloads.
      properties:
        diskSizeGb:
          description: Optional. Size in GB of the disk. Default is 100 GB.
          format: int32
          type: integer
        maxNodeCount:
          description: Optional. Max configurable nodes. If max_node_count > node_count, then auto-scaling is enabled.
          format: int32
          type: integer
        nodeCount:
          description: Optional. Total number of nodes in the sessions created for this environment.
          format: int32
          type: integer
      type: object
    GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime:
      description: Software Runtime Configuration to run Analyze.
      properties:
        imageVersion:
          description: Required. Dataplex Image version.
          type: string
        javaLibraries:
          description: Optional. List of Java jars to be included in the runtime environment. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar
          items:
            type: string
          type: array
        properties:
          additionalProperties:
            type: string
          description: Optional. Spark properties to provide configuration for use in sessions created for this environment. The properties to set on daemon config files. Property keys are specified in prefix:property format. The prefix must be "spark".
          type: object
        pythonPackages:
          description: Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz
          items:
            type: string
          type: array
      type: object
    GoogleCloudDataplexV1EnvironmentSessionSpec:
      description: Configuration for sessions created for this environment.
      properties:
        enableFastStartup:
          description: Optional. If True, this causes sessions to be pre-created and available for faster startup to enable interactive exploration use-cases. This defaults to False to avoid additional billed charges. These can only be set to True for the environment with name set to "default", and with default configuration.
          type: boolean
        maxIdleDuration:
          description: Optional. The idle time configuration of the session. The session will be auto-terminated at the end of this period.
          format: google-duration
          type: string
      type: object
    GoogleCloudDataplexV1EnvironmentSessionStatus:
      description: Status of sessions created for this environment.
      properties:
        active:
          description: Output only. Queries over sessions to mark whether the environment is currently active or not
          readOnly: true
          type: boolean
      type: object
    GoogleCloudDataplexV1GovernanceEvent:
      description: Payload associated with Governance related log events.
      properties:
        entity:
          $ref: "#/components/schemas/GoogleCloudDataplexV1GovernanceEventEntity"
          description: Entity resource information if the log event is associated with a specific entity.
        eventType:
          description: The type of the event.
          enum:
            - EVENT_TYPE_UNSPECIFIED
            - RESOURCE_IAM_POLICY_UPDATE
            - BIGQUERY_TABLE_CREATE
            - BIGQUERY_TABLE_UPDATE
            - BIGQUERY_TABLE_DELETE
            - BIGQUERY_CONNECTION_CREATE
            - BIGQUERY_CONNECTION_UPDATE
            - BIGQUERY_CONNECTION_DELETE
            - BIGQUERY_TAXONOMY_CREATE
            - BIGQUERY_POLICY_TAG_CREATE
            - BIGQUERY_POLICY_TAG_DELETE
            - BIGQUERY_POLICY_TAG_SET_IAM_POLICY
            - ACCESS_POLICY_UPDATE
            - GOVERNANCE_RULE_MATCHED_RESOURCES
            - GOVERNANCE_RULE_SEARCH_LIMIT_EXCEEDS
            - GOVERNANCE_RULE_ERRORS
            - GOVERNANCE_RULE_PROCESSING
          type: string
        message:
          description: The log message.
          type: string
      type: object
    GoogleCloudDataplexV1GovernanceEventEntity:
      description: Information about Entity resource that the log event is associated with.
      properties:
        entity:
          description: "The Entity resource the log event is associated with. Format: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}"
          type: string
        entityType:
          description: Type of entity.
          enum:
            - ENTITY_TYPE_UNSPECIFIED
            - TABLE
            - FILESET
          type: string
      type: object
    GoogleCloudDataplexV1Job:
      description: A job represents an instance of a task.
      properties:
        endTime:
          description: Output only. The time when the job ended.
          format: google-datetime
          readOnly: true
          type: string
        executionSpec:
          $ref: "#/components/schemas/GoogleCloudDataplexV1TaskExecutionSpec"
          description: Output only. Spec related to how a task is executed.
          readOnly: true
        labels:
          additionalProperties:
            type: string
          description: Output only. User-defined labels for the task.
          readOnly: true
          type: object
        message:
          description: Output only. Additional information about the current state.
          readOnly: true
          type: string
        name:
          description: "Output only. The relative resource name of the job, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/tasks/{task_id}/jobs/{job_id}."
          readOnly: true
          type: string
        retryCount:
          description: Output only. The number of times the job has been retried (excluding the initial attempt).
          format: uint32
          readOnly: true
          type: integer
        service:
          description: Output only. The underlying service running a job.
          enum:
            - SERVICE_UNSPECIFIED
            - DATAPROC
          readOnly: true
          type: string
        serviceJob:
          description: Output only. The full resource name for the job run under a particular service.
          readOnly: true
          type: string
        startTime:
          description: Output only. The time when the job was started.
          format: google-datetime
          readOnly: true
          type: string
        state:
          description: Output only. Execution state for the job.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - CANCELLING
            - CANCELLED
            - SUCCEEDED
            - FAILED
            - ABORTED
          readOnly: true
          type: string
        trigger:
          description: Output only. Job execution trigger.
          enum:
            - TRIGGER_UNSPECIFIED
            - TASK_CONFIG
            - RUN_REQUEST
          readOnly: true
          type: string
        uid:
          description: Output only. System generated globally unique ID for the job.
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1JobEvent:
      description: The payload associated with Job logs that contains events describing jobs that have run within a Lake.
      properties:
        endTime:
          description: The time when the job ended running.
          format: google-datetime
          type: string
        executionTrigger:
          description: Job execution trigger.
          enum:
            - EXECUTION_TRIGGER_UNSPECIFIED
            - TASK_CONFIG
            - RUN_REQUEST
          type: string
        jobId:
          description: The unique id identifying the job.
          type: string
        message:
          description: The log message.
          type: string
        retries:
          description: The number of retries.
          format: int32
          type: integer
        service:
          description: The service used to execute the job.
          enum:
            - SERVICE_UNSPECIFIED
            - DATAPROC
          type: string
        serviceJob:
          description: The reference to the job within the service.
          type: string
        startTime:
          description: The time when the job started running.
          format: google-datetime
          type: string
        state:
          description: The job state on completion.
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - CANCELLED
            - ABORTED
          type: string
        type:
          description: The type of the job.
          enum:
            - TYPE_UNSPECIFIED
            - SPARK
            - NOTEBOOK
          type: string
      type: object
    GoogleCloudDataplexV1Lake:
      description: A lake is a centralized repository for managing enterprise data across the organization distributed across many cloud projects, and stored in a variety of storage services such as Google Cloud Storage and BigQuery. The resources attached to a lake are referred to as managed resources. Data within these managed resources can be structured or unstructured. A lake provides data admins with tools to organize, secure and manage their data at scale, and provides data scientists and data engineers an integrated experience to easily search, discover, analyze and transform data and associated metadata.
      properties:
        assetStatus:
          $ref: "#/components/schemas/GoogleCloudDataplexV1AssetStatus"
          description: Output only. Aggregated status of the underlying assets of the lake.
          readOnly: true
        createTime:
          description: Output only. The time when the lake was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. Description of the lake.
          type: string
        displayName:
          description: Optional. User friendly display name.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. User-defined labels for the lake.
          type: object
        metastore:
          $ref: "#/components/schemas/GoogleCloudDataplexV1LakeMetastore"
          description: Optional. Settings to manage lake and Dataproc Metastore service instance association.
        metastoreStatus:
          $ref: "#/components/schemas/GoogleCloudDataplexV1LakeMetastoreStatus"
          description: Output only. Metastore status of the lake.
          readOnly: true
        name:
          description: "Output only. The relative resource name of the lake, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}."
          readOnly: true
          type: string
        serviceAccount:
          description: Output only. Service account associated with this lake. This service account must be authorized to access or operate on resources managed by the lake.
          readOnly: true
          type: string
        state:
          description: Output only. Current state of the lake.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          readOnly: true
          type: string
        uid:
          description: Output only. System generated globally unique ID for the lake. This ID will be different if the lake is deleted and re-created with the same name.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time when the lake was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1LakeMetastore:
      description: Settings to manage association of Dataproc Metastore with a lake.
      properties:
        service:
          description: "Optional. A relative reference to the Dataproc Metastore (https://cloud.google.com/dataproc-metastore/docs) service associated with the lake: projects/{project_id}/locations/{location_id}/services/{service_id}"
          type: string
      type: object
    GoogleCloudDataplexV1LakeMetastoreStatus:
      description: Status of Lake and Dataproc Metastore service instance association.
      properties:
        endpoint:
          description: The URI of the endpoint used to access the Metastore service.
          type: string
        message:
          description: Additional information about the current status.
          type: string
        state:
          description: Current state of association.
          enum:
            - STATE_UNSPECIFIED
            - NONE
            - READY
            - UPDATING
            - ERROR
          type: string
        updateTime:
          description: Last update time of the metastore status of the lake.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDataplexV1ListActionsResponse:
      description: List actions response.
      properties:
        actions:
          description: Actions under the given parent lake/zone/asset.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1Action"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDataplexV1ListAssetsResponse:
      description: List assets response.
      properties:
        assets:
          description: Asset under the given parent zone.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1Asset"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDataplexV1ListContentResponse:
      description: List content response.
      properties:
        content:
          description: Content under the given parent lake.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1Content"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDataplexV1ListDataAttributeBindingsResponse:
      description: List DataAttributeBindings response.
      properties:
        dataAttributeBindings:
          description: DataAttributeBindings under the given parent Location.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1DataAttributeBinding"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        unreachableLocations:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDataplexV1ListDataAttributesResponse:
      description: List DataAttributes response.
      properties:
        dataAttributes:
          description: DataAttributes under the given parent DataTaxonomy.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1DataAttribute"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        unreachableLocations:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDataplexV1ListDataScanJobsResponse:
      description: List DataScanJobs response.
      properties:
        dataScanJobs:
          description: DataScanJobs (BASIC view only) under a given dataScan.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1DataScanJob"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDataplexV1ListDataScansResponse:
      description: List dataScans response.
      properties:
        dataScans:
          description: DataScans (BASIC view only) under the given parent location.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1DataScan"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDataplexV1ListDataTaxonomiesResponse:
      description: List DataTaxonomies response.
      properties:
        dataTaxonomies:
          description: DataTaxonomies under the given parent location.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1DataTaxonomy"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        unreachableLocations:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDataplexV1ListEntitiesResponse:
      description: List metadata entities response.
      properties:
        entities:
          description: Entities in the specified parent zone.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1Entity"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no remaining results in the list.
          type: string
      type: object
    GoogleCloudDataplexV1ListEnvironmentsResponse:
      description: List environments response.
      properties:
        environments:
          description: Environments under the given parent lake.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1Environment"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDataplexV1ListJobsResponse:
      description: List jobs response.
      properties:
        jobs:
          description: Jobs under a given task.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1Job"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDataplexV1ListLakesResponse:
      description: List lakes response.
      properties:
        lakes:
          description: Lakes under the given parent location.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1Lake"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        unreachableLocations:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDataplexV1ListPartitionsResponse:
      description: List metadata partitions response.
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no remaining results in the list.
          type: string
        partitions:
          description: Partitions under the specified parent entity.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1Partition"
          type: array
      type: object
    GoogleCloudDataplexV1ListSessionsResponse:
      description: List sessions response.
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        sessions:
          description: Sessions under a given environment.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1Session"
          type: array
      type: object
    GoogleCloudDataplexV1ListTasksResponse:
      description: List tasks response.
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        tasks:
          description: Tasks under the given parent lake.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1Task"
          type: array
        unreachableLocations:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDataplexV1ListZonesResponse:
      description: List zones response.
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        zones:
          description: Zones under the given parent lake.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1Zone"
          type: array
      type: object
    GoogleCloudDataplexV1OperationMetadata:
      description: Represents the metadata of a long-running operation.
      properties:
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        requestedCancellation:
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.
          readOnly: true
          type: boolean
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1Partition:
      description: Represents partition metadata contained within entity instances.
      properties:
        etag:
          deprecated: true
          description: Optional. The etag for this partition.
          type: string
        location:
          description: Required. Immutable. The location of the entity data within the partition, for example, gs://bucket/path/to/entity/key1=value1/key2=value2. Or projects//datasets//tables/
          type: string
        name:
          description: Output only. Partition values used in the HTTP URL must be double encoded. For example, url_encode(url_encode(value)) can be used to encode "US:CA/CA#Sunnyvale so that the request URL ends with "/partitions/US%253ACA/CA%2523Sunnyvale". The name field in the response retains the encoded format.
          readOnly: true
          type: string
        values:
          description: Required. Immutable. The set of values representing the partition, which correspond to the partition schema defined in the parent entity.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDataplexV1ResourceAccessSpec:
      description: ResourceAccessSpec holds the access control configuration to be enforced on the resources, for example, Cloud Storage bucket, BigQuery dataset, BigQuery table.
      properties:
        owners:
          description: Optional. The set of principals to be granted owner role on the resource.
          items:
            type: string
          type: array
        readers:
          description: Optional. The format of strings follows the pattern followed by IAM in the bindings. user:{email}, serviceAccount:{email} group:{email}. The set of principals to be granted reader role on the resource.
          items:
            type: string
          type: array
        writers:
          description: Optional. The set of principals to be granted writer role on the resource.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDataplexV1RunDataScanRequest:
      description: Run DataScan Request
      properties: {}
      type: object
    GoogleCloudDataplexV1RunDataScanResponse:
      description: Run DataScan Response.
      properties:
        job:
          $ref: "#/components/schemas/GoogleCloudDataplexV1DataScanJob"
          description: DataScanJob created by RunDataScan request.
      type: object
    GoogleCloudDataplexV1RunTaskRequest:
      properties:
        args:
          additionalProperties:
            type: string
          description: Optional. Execution spec arguments. If the map is left empty, the task will run with existing execution spec args from task definition. If the map contains an entry with a new key, the same will be added to existing set of args. If the map contains an entry with an existing arg key in task definition, the task will run with new arg value for that entry. Clearing an existing arg will require arg value to be explicitly set to a hyphen "-". The arg value cannot be empty.
          type: object
        labels:
          additionalProperties:
            type: string
          description: Optional. User-defined labels for the task. If the map is left empty, the task will run with existing labels from task definition. If the map contains an entry with a new key, the same will be added to existing set of labels. If the map contains an entry with an existing label key in task definition, the task will run with new label value for that entry. Clearing an existing label will require label value to be explicitly set to a hyphen "-". The label value cannot be empty.
          type: object
      type: object
    GoogleCloudDataplexV1RunTaskResponse:
      properties:
        job:
          $ref: "#/components/schemas/GoogleCloudDataplexV1Job"
          description: Jobs created by RunTask API.
      type: object
    GoogleCloudDataplexV1ScannedData:
      description: The data scanned during processing (e.g. in incremental DataScan)
      properties:
        incrementalField:
          $ref: "#/components/schemas/GoogleCloudDataplexV1ScannedDataIncrementalField"
          description: The range denoted by values of an incremental field
      type: object
    GoogleCloudDataplexV1ScannedDataIncrementalField:
      description: A data range denoted by a pair of start/end values of a field.
      properties:
        end:
          description: Value that marks the end of the range.
          type: string
        field:
          description: The field that contains values which monotonically increases over time (e.g. a timestamp column).
          type: string
        start:
          description: Value that marks the start of the range.
          type: string
      type: object
    GoogleCloudDataplexV1Schema:
      description: Schema information describing the structure and layout of the data.
      properties:
        fields:
          description: "Optional. The sequence of fields describing data in table entities. Note: BigQuery SchemaFields are immutable."
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1SchemaSchemaField"
          type: array
        partitionFields:
          description: Optional. The sequence of fields describing the partition structure in entities. If this field is empty, there are no partitions within the data.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1SchemaPartitionField"
          type: array
        partitionStyle:
          description: Optional. The structure of paths containing partition data within the entity.
          enum:
            - PARTITION_STYLE_UNSPECIFIED
            - HIVE_COMPATIBLE
          type: string
        userManaged:
          description: Required. Set to true if user-managed or false if managed by Dataplex. The default is false (managed by Dataplex). Set to falseto enable Dataplex discovery to update the schema. including new data discovery, schema inference, and schema evolution. Users retain the ability to input and edit the schema. Dataplex treats schema input by the user as though produced by a previous Dataplex discovery operation, and it will evolve the schema and take action based on that treatment. Set to true to fully manage the entity schema. This setting guarantees that Dataplex will not change schema fields.
          type: boolean
      type: object
    GoogleCloudDataplexV1SchemaPartitionField:
      description: "Represents a key field within the entity's partition structure. You could have up to 20 partition fields, but only the first 10 partitions have the filtering ability due to performance consideration. Note: Partition fields are immutable."
      properties:
        name:
          description: Required. Partition field name must consist of letters, numbers, and underscores only, with a maximum of length of 256 characters, and must begin with a letter or underscore..
          type: string
        type:
          description: Required. Immutable. The type of field.
          enum:
            - TYPE_UNSPECIFIED
            - BOOLEAN
            - BYTE
            - INT16
            - INT32
            - INT64
            - FLOAT
            - DOUBLE
            - DECIMAL
            - STRING
            - BINARY
            - TIMESTAMP
            - DATE
            - TIME
            - RECORD
            - "NULL"
          type: string
      type: object
    GoogleCloudDataplexV1SchemaSchemaField:
      description: Represents a column field within a table schema.
      properties:
        description:
          description: Optional. User friendly field description. Must be less than or equal to 1024 characters.
          type: string
        fields:
          description: Optional. Any nested field for complex types.
          items:
            $ref: "#/components/schemas/GoogleCloudDataplexV1SchemaSchemaField"
          type: array
        mode:
          description: Required. Additional field semantics.
          enum:
            - MODE_UNSPECIFIED
            - REQUIRED
            - NULLABLE
            - REPEATED
          type: string
        name:
          description: Required. The name of the field. Must contain only letters, numbers and underscores, with a maximum length of 767 characters, and must begin with a letter or underscore.
          type: string
        type:
          description: Required. The type of field.
          enum:
            - TYPE_UNSPECIFIED
            - BOOLEAN
            - BYTE
            - INT16
            - INT32
            - INT64
            - FLOAT
            - DOUBLE
            - DECIMAL
            - STRING
            - BINARY
            - TIMESTAMP
            - DATE
            - TIME
            - RECORD
            - "NULL"
          type: string
      type: object
    GoogleCloudDataplexV1Session:
      description: Represents an active analyze session running for a user.
      properties:
        createTime:
          description: Output only. Session start time.
          format: google-datetime
          readOnly: true
          type: string
        name:
          description: "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}/sessions/{session_id}"
          readOnly: true
          type: string
        state:
          description: Output only. State of Session
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          readOnly: true
          type: string
        userId:
          description: Output only. Email of user running the session.
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1SessionEvent:
      description: These messages contain information about sessions within an environment. The monitored resource is 'Environment'.
      properties:
        eventSucceeded:
          description: The status of the event.
          type: boolean
        fastStartupEnabled:
          description: If the session is associated with an environment with fast startup enabled, and was created before being assigned to a user.
          type: boolean
        message:
          description: The log message.
          type: string
        query:
          $ref: "#/components/schemas/GoogleCloudDataplexV1SessionEventQueryDetail"
          description: The execution details of the query.
        sessionId:
          description: Unique identifier for the session.
          type: string
        type:
          description: The type of the event.
          enum:
            - EVENT_TYPE_UNSPECIFIED
            - START
            - STOP
            - QUERY
            - CREATE
          type: string
        unassignedDuration:
          description: The idle duration of a warm pooled session before it is assigned to user.
          format: google-duration
          type: string
        userId:
          description: The information about the user that created the session. It will be the email address of the user.
          type: string
      type: object
    GoogleCloudDataplexV1SessionEventQueryDetail:
      description: Execution details of the query.
      properties:
        dataProcessedBytes:
          description: The data processed by the query.
          format: int64
          type: string
        duration:
          description: Time taken for execution of the query.
          format: google-duration
          type: string
        engine:
          description: Query Execution engine.
          enum:
            - ENGINE_UNSPECIFIED
            - SPARK_SQL
            - BIGQUERY
          type: string
        queryId:
          description: The unique Query id identifying the query.
          type: string
        queryText:
          description: The query text executed.
          type: string
        resultSizeBytes:
          description: The size of results the query produced.
          format: int64
          type: string
      type: object
    GoogleCloudDataplexV1StorageAccess:
      description: Describes the access mechanism of the data within its storage location.
      properties:
        read:
          description: Output only. Describes the read access mechanism of the data. Not user settable.
          enum:
            - ACCESS_MODE_UNSPECIFIED
            - DIRECT
            - MANAGED
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1StorageFormat:
      description: Describes the format of the data within its storage location.
      properties:
        compressionFormat:
          description: Optional. The compression type associated with the stored data. If unspecified, the data is uncompressed.
          enum:
            - COMPRESSION_FORMAT_UNSPECIFIED
            - GZIP
            - BZIP2
          type: string
        csv:
          $ref: "#/components/schemas/GoogleCloudDataplexV1StorageFormatCsvOptions"
          description: Optional. Additional information about CSV formatted data.
        format:
          description: Output only. The data format associated with the stored data, which represents content type values. The value is inferred from mime type.
          enum:
            - FORMAT_UNSPECIFIED
            - PARQUET
            - AVRO
            - ORC
            - CSV
            - JSON
            - IMAGE
            - AUDIO
            - VIDEO
            - TEXT
            - TFRECORD
            - OTHER
            - UNKNOWN
          readOnly: true
          type: string
        iceberg:
          $ref: "#/components/schemas/GoogleCloudDataplexV1StorageFormatIcebergOptions"
          description: Optional. Additional information about iceberg tables.
        json:
          $ref: "#/components/schemas/GoogleCloudDataplexV1StorageFormatJsonOptions"
          description: Optional. Additional information about CSV formatted data.
        mimeType:
          description: "Required. The mime type descriptor for the data. Must match the pattern {type}/{subtype}. Supported values: application/x-parquet application/x-avro application/x-orc application/x-tfrecord application/x-parquet+iceberg application/x-avro+iceberg application/x-orc+iceberg application/json application/{subtypes} text/csv text/ image/{image subtype} video/{video subtype} audio/{audio subtype}"
          type: string
      type: object
    GoogleCloudDataplexV1StorageFormatCsvOptions:
      description: Describes CSV and similar semi-structured data formats.
      properties:
        delimiter:
          description: Optional. The delimiter used to separate values. Defaults to ','.
          type: string
        encoding:
          description: Optional. The character encoding of the data. Accepts "US-ASCII", "UTF-8", and "ISO-8859-1". Defaults to UTF-8 if unspecified.
          type: string
        headerRows:
          description: Optional. The number of rows to interpret as header rows that should be skipped when reading data rows. Defaults to 0.
          format: int32
          type: integer
        quote:
          description: Optional. The character used to quote column values. Accepts '"' (double quotation mark) or ''' (single quotation mark). Defaults to '"' (double quotation mark) if unspecified.
          type: string
      type: object
    GoogleCloudDataplexV1StorageFormatIcebergOptions:
      description: Describes Iceberg data format.
      properties:
        metadataLocation:
          description: Optional. The location of where the iceberg metadata is present, must be within the table path
          type: string
      type: object
    GoogleCloudDataplexV1StorageFormatJsonOptions:
      description: Describes JSON data format.
      properties:
        encoding:
          description: Optional. The character encoding of the data. Accepts "US-ASCII", "UTF-8" and "ISO-8859-1". Defaults to UTF-8 if not specified.
          type: string
      type: object
    GoogleCloudDataplexV1Task:
      description: A task represents a user-visible job.
      properties:
        createTime:
          description: Output only. The time when the task was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. Description of the task.
          type: string
        displayName:
          description: Optional. User friendly display name.
          type: string
        executionSpec:
          $ref: "#/components/schemas/GoogleCloudDataplexV1TaskExecutionSpec"
          description: Required. Spec related to how a task is executed.
        executionStatus:
          $ref: "#/components/schemas/GoogleCloudDataplexV1TaskExecutionStatus"
          description: Output only. Status of the latest task executions.
          readOnly: true
        labels:
          additionalProperties:
            type: string
          description: Optional. User-defined labels for the task.
          type: object
        name:
          description: "Output only. The relative resource name of the task, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/ tasks/{task_id}."
          readOnly: true
          type: string
        notebook:
          $ref: "#/components/schemas/GoogleCloudDataplexV1TaskNotebookTaskConfig"
          description: Config related to running scheduled Notebooks.
        spark:
          $ref: "#/components/schemas/GoogleCloudDataplexV1TaskSparkTaskConfig"
          description: Config related to running custom Spark tasks.
        state:
          description: Output only. Current state of the task.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          readOnly: true
          type: string
        triggerSpec:
          $ref: "#/components/schemas/GoogleCloudDataplexV1TaskTriggerSpec"
          description: Required. Spec related to how often and when a task should be triggered.
        uid:
          description: Output only. System generated globally unique ID for the task. This ID will be different if the task is deleted and re-created with the same name.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time when the task was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1TaskExecutionSpec:
      description: Execution related settings, like retry and service_account.
      properties:
        args:
          additionalProperties:
            type: string
          description: "Optional. The arguments to pass to the task. The args can use placeholders of the format ${placeholder} as part of key/value string. These will be interpolated before passing the args to the driver. Currently supported placeholders: - ${task_id} - ${job_time} To pass positional args, set the key as TASK_ARGS. The value should be a comma-separated string of all the positional arguments. To use a delimiter other than comma, refer to https://cloud.google.com/sdk/gcloud/reference/topic/escaping. In case of other keys being present in the args, then TASK_ARGS will be passed as the last argument."
          type: object
        kmsKey:
          description: "Optional. The Cloud KMS key to use for encryption, of the form: projects/{project_number}/locations/{location_id}/keyRings/{key-ring-name}/cryptoKeys/{key-name}."
          type: string
        maxJobExecutionLifetime:
          description: Optional. The maximum duration after which the job execution is expired.
          format: google-duration
          type: string
        project:
          description: Optional. The project in which jobs are run. By default, the project containing the Lake is used. If a project is provided, the ExecutionSpec.service_account must belong to this project.
          type: string
        serviceAccount:
          description: Required. Service account to use to execute a task. If not provided, the default Compute service account for the project is used.
          type: string
      type: object
    GoogleCloudDataplexV1TaskExecutionStatus:
      description: Status of the task execution (e.g. Jobs).
      properties:
        latestJob:
          $ref: "#/components/schemas/GoogleCloudDataplexV1Job"
          description: Output only. latest job execution
          readOnly: true
        updateTime:
          description: Output only. Last update time of the status.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1TaskInfrastructureSpec:
      description: Configuration for the underlying infrastructure used to run workloads.
      properties:
        batch:
          $ref: "#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources"
          description: Compute resources needed for a Task when using Dataproc Serverless.
        containerImage:
          $ref: "#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime"
          description: Container Image Runtime Configuration.
        vpcNetwork:
          $ref: "#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork"
          description: Vpc network.
      type: object
    GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources:
      description: Batch compute resources associated with the task.
      properties:
        executorsCount:
          description: Optional. Total number of job executors. Executor Count should be between 2 and 100. Default=2
          format: int32
          type: integer
        maxExecutorsCount:
          description: Optional. Max configurable executors. If max_executors_count > executors_count, then auto-scaling is enabled. Max Executor Count should be between 2 and 1000. Default=1000
          format: int32
          type: integer
      type: object
    GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime:
      description: Container Image Runtime Configuration used with Batch execution.
      properties:
        image:
          description: Optional. Container image to use.
          type: string
        javaJars:
          description: Optional. A list of Java JARS to add to the classpath. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar
          items:
            type: string
          type: array
        properties:
          additionalProperties:
            type: string
          description: Optional. Override to common configuration of open source components installed on the Dataproc cluster. The properties to set on daemon config files. Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. For more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
          type: object
        pythonPackages:
          description: Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz
          items:
            type: string
          type: array
      type: object
    GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork:
      description: Cloud VPC Network used to run the infrastructure.
      properties:
        network:
          description: Optional. The Cloud VPC network in which the job is run. By default, the Cloud VPC network named Default within the project is used.
          type: string
        networkTags:
          description: Optional. List of network tags to apply to the job.
          items:
            type: string
          type: array
        subNetwork:
          description: Optional. The Cloud VPC sub-network in which the job is run.
          type: string
      type: object
    GoogleCloudDataplexV1TaskNotebookTaskConfig:
      description: Config for running scheduled notebooks.
      properties:
        archiveUris:
          description: "Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip."
          items:
            type: string
          type: array
        fileUris:
          description: Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
          items:
            type: string
          type: array
        infrastructureSpec:
          $ref: "#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpec"
          description: Optional. Infrastructure specification for the execution.
        notebook:
          description: Required. Path to input notebook. This can be the Cloud Storage URI of the notebook file or the path to a Notebook Content. The execution args are accessible as environment variables (TASK_key=value).
          type: string
      type: object
    GoogleCloudDataplexV1TaskSparkTaskConfig:
      description: User-specified config for running a Spark task.
      properties:
        archiveUris:
          description: "Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip."
          items:
            type: string
          type: array
        fileUris:
          description: Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
          items:
            type: string
          type: array
        infrastructureSpec:
          $ref: "#/components/schemas/GoogleCloudDataplexV1TaskInfrastructureSpec"
          description: Optional. Infrastructure specification for the execution.
        mainClass:
          description: The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris. The execution args are passed in as a sequence of named process arguments (--key=value).
          type: string
        mainJarFileUri:
          description: The Cloud Storage URI of the jar file that contains the main class. The execution args are passed in as a sequence of named process arguments (--key=value).
          type: string
        pythonScriptFile:
          description: The Gcloud Storage URI of the main Python file to use as the driver. Must be a .py file. The execution args are passed in as a sequence of named process arguments (--key=value).
          type: string
        sqlScript:
          description: The query text. The execution args are used to declare a set of script variables (set key="value";).
          type: string
        sqlScriptFile:
          description: A reference to a query file. This can be the Cloud Storage URI of the query file or it can the path to a SqlScript Content. The execution args are used to declare a set of script variables (set key="value";).
          type: string
      type: object
    GoogleCloudDataplexV1TaskTriggerSpec:
      description: Task scheduling and trigger settings.
      properties:
        disabled:
          description: Optional. Prevent the task from executing. This does not cancel already running tasks. It is intended to temporarily disable RECURRING tasks.
          type: boolean
        maxRetries:
          description: Optional. Number of retry attempts before aborting. Set to zero to never attempt to retry a failed task.
          format: int32
          type: integer
        schedule:
          description: 'Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running tasks periodically. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *. This field is required for RECURRING tasks.'
          type: string
        startTime:
          description: Optional. The first run of the task will be after this time. If not specified, the task will run shortly after being submitted if ON_DEMAND and based on the schedule if RECURRING.
          format: google-datetime
          type: string
        type:
          description: Required. Immutable. Trigger type of the user-specified Task.
          enum:
            - TYPE_UNSPECIFIED
            - ON_DEMAND
            - RECURRING
          type: string
      type: object
    GoogleCloudDataplexV1Trigger:
      description: DataScan scheduling and trigger settings.
      properties:
        onDemand:
          $ref: "#/components/schemas/GoogleCloudDataplexV1TriggerOnDemand"
          description: The scan runs once via RunDataScan API.
        schedule:
          $ref: "#/components/schemas/GoogleCloudDataplexV1TriggerSchedule"
          description: The scan is scheduled to run periodically.
      type: object
    GoogleCloudDataplexV1TriggerOnDemand:
      description: The scan runs once via RunDataScan API.
      properties: {}
      type: object
    GoogleCloudDataplexV1TriggerSchedule:
      description: The scan is scheduled to run periodically.
      properties:
        cron:
          description: 'Required. Cron (https://en.wikipedia.org/wiki/Cron) schedule for running scans periodically.To explicitly set a timezone in the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database (wikipedia (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)). For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.This field is required for Schedule scans.'
          type: string
      type: object
    GoogleCloudDataplexV1Zone:
      description: A zone represents a logical group of related assets within a lake. A zone can be used to map to organizational structure or represent stages of data readiness from raw to curated. It provides managing behavior that is shared or inherited by all contained assets.
      properties:
        assetStatus:
          $ref: "#/components/schemas/GoogleCloudDataplexV1AssetStatus"
          description: Output only. Aggregated status of the underlying assets of the zone.
          readOnly: true
        createTime:
          description: Output only. The time when the zone was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. Description of the zone.
          type: string
        discoverySpec:
          $ref: "#/components/schemas/GoogleCloudDataplexV1ZoneDiscoverySpec"
          description: Optional. Specification of the discovery feature applied to data in this zone.
        displayName:
          description: Optional. User friendly display name.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. User defined labels for the zone.
          type: object
        name:
          description: "Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}."
          readOnly: true
          type: string
        resourceSpec:
          $ref: "#/components/schemas/GoogleCloudDataplexV1ZoneResourceSpec"
          description: Required. Specification of the resources that are referenced by the assets within this zone.
        state:
          description: Output only. Current state of the zone.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - DELETING
            - ACTION_REQUIRED
          readOnly: true
          type: string
        type:
          description: Required. Immutable. The type of the zone.
          enum:
            - TYPE_UNSPECIFIED
            - RAW
            - CURATED
          type: string
        uid:
          description: Output only. System generated globally unique ID for the zone. This ID will be different if the zone is deleted and re-created with the same name.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time when the zone was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDataplexV1ZoneDiscoverySpec:
      description: Settings to manage the metadata discovery and publishing in a zone.
      properties:
        csvOptions:
          $ref: "#/components/schemas/GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions"
          description: Optional. Configuration for CSV data.
        enabled:
          description: Required. Whether discovery is enabled.
          type: boolean
        excludePatterns:
          description: Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
          items:
            type: string
          type: array
        includePatterns:
          description: Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
          items:
            type: string
          type: array
        jsonOptions:
          $ref: "#/components/schemas/GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions"
          description: Optional. Configuration for Json data.
        schedule:
          description: 'Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.'
          type: string
      type: object
    GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions:
      description: Describe CSV and similar semi-structured data formats.
      properties:
        delimiter:
          description: Optional. The delimiter being used to separate values. This defaults to ','.
          type: string
        disableTypeInference:
          description: Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.
          type: boolean
        encoding:
          description: Optional. The character encoding of the data. The default is UTF-8.
          type: string
        headerRows:
          description: Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.
          format: int32
          type: integer
      type: object
    GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions:
      description: Describe JSON data format.
      properties:
        disableTypeInference:
          description: Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).
          type: boolean
        encoding:
          description: Optional. The character encoding of the data. The default is UTF-8.
          type: string
      type: object
    GoogleCloudDataplexV1ZoneResourceSpec:
      description: Settings for resources attached as assets within a zone.
      properties:
        locationType:
          description: Required. Immutable. The location type of the resources that are allowed to be attached to the assets within this zone.
          enum:
            - LOCATION_TYPE_UNSPECIFIED
            - SINGLE_REGION
            - MULTI_REGION
          type: string
      type: object
    GoogleCloudLocationListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudLocationLocation"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    GoogleCloudLocationLocation:
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"} '
          type: object
        locationId:
          description: 'The canonical id for this location. For example: "us-east1".'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: "projects/example-project/locations/us-east1"'
          type: string
      type: object
    GoogleIamV1AuditConfig:
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.'
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: "#/components/schemas/GoogleIamV1AuditLogConfig"
          type: array
        service:
          description: Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services.
          type: string
      type: object
    GoogleIamV1AuditLogConfig:
      description: "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
      properties:
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
      type: object
    GoogleIamV1Binding:
      description: Associates members, or principals, with a role.
      properties:
        condition:
          $ref: "#/components/schemas/GoogleTypeExpr"
          description: The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
        members:
          description: "Specifies the principals requesting access for a Google Cloud resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a Google service account. For example, my-other-app@appspot.gserviceaccount.com. serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]: An identifier for a Kubernetes service account (https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, my-project.svc.id.goog[my-namespace/my-kubernetes-sa]. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com. principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}: A single identity in a workforce identity pool. principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}: All workforce identities in a group. principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}: All workforce identities with a specific attribute value. principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*: All identities in a workforce identity pool. principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}: A single identity in a workload identity pool. principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}: A workload identity pool group. principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}: All identities in a workload identity pool with a certain attribute. principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*: All identities in a workload identity pool. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}: Deleted single identity in a workforce identity pool. For example, deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value."
          items:
            type: string
          type: array
        role:
          description: Role that is assigned to the list of members, or principals. For example, roles/viewer, roles/editor, or roles/owner.For an overview of the IAM roles and permissions, see the IAM documentation (https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see here (https://cloud.google.com/iam/docs/understanding-roles).
          type: string
      type: object
    GoogleIamV1Policy:
      description: "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.A Policy is a collection of bindings. A binding binds one or more members, or principals, to a single role. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).JSON example: { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } YAML example: bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the IAM documentation (https://cloud.google.com/iam/docs/)."
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/GoogleIamV1AuditConfig"
          type: array
        bindings:
          description: Associates a list of members, or principals, with a role. Optionally, may specify a condition that determines how and when the bindings are applied. Each of the bindings must contain at least one principal.The bindings in a Policy can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the bindings grant 50 different roles to user:alice@example.com, and not to any other principal, then you can add another 1,450 principals to the bindings in the Policy.
          items:
            $ref: "#/components/schemas/GoogleIamV1Binding"
          type: array
        etag:
          description: "etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy, and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy.Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost."
          format: byte
          type: string
        version:
          description: "Specifies the format of the policy.Valid values are 0, 1, and 3. Requests that specify an invalid value are rejected.Any operation that affects conditional role bindings must specify version 3. This requirement applies to the following operations: Getting a policy that includes a conditional role binding Adding a conditional role binding to a policy Changing a conditional role binding in a policy Removing any role binding, with or without a condition, from a policy that includes conditionsImportant: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies)."
          format: int32
          type: integer
      type: object
    GoogleIamV1SetIamPolicyRequest:
      description: Request message for SetIamPolicy method.
      properties:
        policy:
          $ref: "#/components/schemas/GoogleIamV1Policy"
          description: "REQUIRED: The complete policy to be applied to the resource. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        updateMask:
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used:paths: "bindings, etag"'
          format: google-fieldmask
          type: string
      type: object
    GoogleIamV1TestIamPermissionsRequest:
      description: Request message for TestIamPermissions method.
      properties:
        permissions:
          description: The set of permissions to check for the resource. Permissions with wildcards (such as * or storage.*) are not allowed. For more information see IAM Overview (https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    GoogleIamV1TestIamPermissionsResponse:
      description: Response message for TestIamPermissions method.
      properties:
        permissions:
          description: A subset of TestPermissionsRequest.permissions that the caller is allowed.
          items:
            type: string
          type: array
      type: object
    GoogleLongrunningCancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    GoogleLongrunningListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleLongrunningOperation"
          type: array
      type: object
    GoogleLongrunningOperation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.
          type: boolean
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal, successful response of the operation. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.
          type: object
      type: object
    GoogleRpcStatus:
      description: "The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    GoogleTypeExpr:
      description: "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
      properties:
        description:
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
