# coding: utf-8

"""
    Cloud Dataplex API

    Dataplex API is used to manage the lifecycle of data lakes.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dataplex_v1_list_actions_response import GoogleCloudDataplexV1ListActionsResponse

class TestGoogleCloudDataplexV1ListActionsResponse(unittest.TestCase):
    """GoogleCloudDataplexV1ListActionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDataplexV1ListActionsResponse:
        """Test GoogleCloudDataplexV1ListActionsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDataplexV1ListActionsResponse`
        """
        model = GoogleCloudDataplexV1ListActionsResponse()
        if include_optional:
            return GoogleCloudDataplexV1ListActionsResponse(
                actions = [
                    openapi_client.models.google_cloud_dataplex_v1_action.GoogleCloudDataplexV1Action(
                        asset = '', 
                        category = 'CATEGORY_UNSPECIFIED', 
                        data_locations = [
                            ''
                            ], 
                        detect_time = '', 
                        failed_security_policy_apply = openapi_client.models.google_cloud_dataplex_v1_action_failed_security_policy_apply.GoogleCloudDataplexV1ActionFailedSecurityPolicyApply(
                            asset = '', ), 
                        incompatible_data_schema = openapi_client.models.google_cloud_dataplex_v1_action_incompatible_data_schema.GoogleCloudDataplexV1ActionIncompatibleDataSchema(
                            existing_schema = '', 
                            new_schema = '', 
                            sampled_data_locations = [
                                ''
                                ], 
                            schema_change = 'SCHEMA_CHANGE_UNSPECIFIED', 
                            table = '', ), 
                        invalid_data_format = openapi_client.models.google_cloud_dataplex_v1_action_invalid_data_format.GoogleCloudDataplexV1ActionInvalidDataFormat(
                            expected_format = '', 
                            new_format = '', ), 
                        invalid_data_organization = openapi_client.models.invalid_data_organization.invalidDataOrganization(), 
                        invalid_data_partition = openapi_client.models.google_cloud_dataplex_v1_action_invalid_data_partition.GoogleCloudDataplexV1ActionInvalidDataPartition(
                            expected_structure = 'PARTITION_STRUCTURE_UNSPECIFIED', ), 
                        issue = '', 
                        lake = '', 
                        missing_data = openapi_client.models.missing_data.missingData(), 
                        missing_resource = openapi_client.models.missing_resource.missingResource(), 
                        name = '', 
                        unauthorized_resource = openapi_client.models.unauthorized_resource.unauthorizedResource(), 
                        zone = '', )
                    ],
                next_page_token = ''
            )
        else:
            return GoogleCloudDataplexV1ListActionsResponse(
        )
        """

    def testGoogleCloudDataplexV1ListActionsResponse(self):
        """Test GoogleCloudDataplexV1ListActionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
