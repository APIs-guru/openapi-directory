# coding: utf-8

"""
    Cloud Dataplex API

    Dataplex API is used to manage the lifecycle of data lakes.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dataplex_v1_action import GoogleCloudDataplexV1Action

class TestGoogleCloudDataplexV1Action(unittest.TestCase):
    """GoogleCloudDataplexV1Action unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDataplexV1Action:
        """Test GoogleCloudDataplexV1Action
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDataplexV1Action`
        """
        model = GoogleCloudDataplexV1Action()
        if include_optional:
            return GoogleCloudDataplexV1Action(
                asset = '',
                category = 'CATEGORY_UNSPECIFIED',
                data_locations = [
                    ''
                    ],
                detect_time = '',
                failed_security_policy_apply = openapi_client.models.google_cloud_dataplex_v1_action_failed_security_policy_apply.GoogleCloudDataplexV1ActionFailedSecurityPolicyApply(
                    asset = '', ),
                incompatible_data_schema = openapi_client.models.google_cloud_dataplex_v1_action_incompatible_data_schema.GoogleCloudDataplexV1ActionIncompatibleDataSchema(
                    existing_schema = '', 
                    new_schema = '', 
                    sampled_data_locations = [
                        ''
                        ], 
                    schema_change = 'SCHEMA_CHANGE_UNSPECIFIED', 
                    table = '', ),
                invalid_data_format = openapi_client.models.google_cloud_dataplex_v1_action_invalid_data_format.GoogleCloudDataplexV1ActionInvalidDataFormat(
                    expected_format = '', 
                    new_format = '', 
                    sampled_data_locations = [
                        ''
                        ], ),
                invalid_data_organization = None,
                invalid_data_partition = openapi_client.models.google_cloud_dataplex_v1_action_invalid_data_partition.GoogleCloudDataplexV1ActionInvalidDataPartition(
                    expected_structure = 'PARTITION_STRUCTURE_UNSPECIFIED', ),
                issue = '',
                lake = '',
                missing_data = None,
                missing_resource = None,
                name = '',
                unauthorized_resource = None,
                zone = ''
            )
        else:
            return GoogleCloudDataplexV1Action(
        )
        """

    def testGoogleCloudDataplexV1Action(self):
        """Test GoogleCloudDataplexV1Action"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
