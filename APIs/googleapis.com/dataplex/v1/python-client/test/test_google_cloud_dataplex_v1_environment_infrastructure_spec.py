# coding: utf-8

"""
    Cloud Dataplex API

    Dataplex API is used to manage the lifecycle of data lakes.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dataplex_v1_environment_infrastructure_spec import GoogleCloudDataplexV1EnvironmentInfrastructureSpec

class TestGoogleCloudDataplexV1EnvironmentInfrastructureSpec(unittest.TestCase):
    """GoogleCloudDataplexV1EnvironmentInfrastructureSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDataplexV1EnvironmentInfrastructureSpec:
        """Test GoogleCloudDataplexV1EnvironmentInfrastructureSpec
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDataplexV1EnvironmentInfrastructureSpec`
        """
        model = GoogleCloudDataplexV1EnvironmentInfrastructureSpec()
        if include_optional:
            return GoogleCloudDataplexV1EnvironmentInfrastructureSpec(
                compute = openapi_client.models.google_cloud_dataplex_v1_environment_infrastructure_spec_compute_resources.GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources(
                    disk_size_gb = 56, 
                    max_node_count = 56, 
                    node_count = 56, ),
                os_image = openapi_client.models.google_cloud_dataplex_v1_environment_infrastructure_spec_os_image_runtime.GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime(
                    image_version = '', 
                    java_libraries = [
                        ''
                        ], 
                    properties = {
                        'key' : ''
                        }, 
                    python_packages = [
                        ''
                        ], )
            )
        else:
            return GoogleCloudDataplexV1EnvironmentInfrastructureSpec(
        )
        """

    def testGoogleCloudDataplexV1EnvironmentInfrastructureSpec(self):
        """Test GoogleCloudDataplexV1EnvironmentInfrastructureSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
