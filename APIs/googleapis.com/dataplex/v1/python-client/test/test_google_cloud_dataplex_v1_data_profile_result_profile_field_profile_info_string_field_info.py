# coding: utf-8

"""
    Cloud Dataplex API

    Dataplex API is used to manage the lifecycle of data lakes.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dataplex_v1_data_profile_result_profile_field_profile_info_string_field_info import GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo

class TestGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo(unittest.TestCase):
    """GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo:
        """Test GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo`
        """
        model = GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo()
        if include_optional:
            return GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo(
                average_length = 1.337,
                max_length = '',
                min_length = ''
            )
        else:
            return GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo(
        )
        """

    def testGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo(self):
        """Test GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
