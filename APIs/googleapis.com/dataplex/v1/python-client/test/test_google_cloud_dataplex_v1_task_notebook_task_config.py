# coding: utf-8

"""
    Cloud Dataplex API

    Dataplex API is used to manage the lifecycle of data lakes.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dataplex_v1_task_notebook_task_config import GoogleCloudDataplexV1TaskNotebookTaskConfig

class TestGoogleCloudDataplexV1TaskNotebookTaskConfig(unittest.TestCase):
    """GoogleCloudDataplexV1TaskNotebookTaskConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDataplexV1TaskNotebookTaskConfig:
        """Test GoogleCloudDataplexV1TaskNotebookTaskConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDataplexV1TaskNotebookTaskConfig`
        """
        model = GoogleCloudDataplexV1TaskNotebookTaskConfig()
        if include_optional:
            return GoogleCloudDataplexV1TaskNotebookTaskConfig(
                archive_uris = [
                    ''
                    ],
                file_uris = [
                    ''
                    ],
                infrastructure_spec = openapi_client.models.google_cloud_dataplex_v1_task_infrastructure_spec.GoogleCloudDataplexV1TaskInfrastructureSpec(
                    batch = openapi_client.models.google_cloud_dataplex_v1_task_infrastructure_spec_batch_compute_resources.GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources(
                        executors_count = 56, 
                        max_executors_count = 56, ), 
                    container_image = openapi_client.models.google_cloud_dataplex_v1_task_infrastructure_spec_container_image_runtime.GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime(
                        image = '', 
                        java_jars = [
                            ''
                            ], 
                        properties = {
                            'key' : ''
                            }, 
                        python_packages = [
                            ''
                            ], ), 
                    vpc_network = openapi_client.models.google_cloud_dataplex_v1_task_infrastructure_spec_vpc_network.GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork(
                        network = '', 
                        network_tags = [
                            ''
                            ], 
                        sub_network = '', ), ),
                notebook = ''
            )
        else:
            return GoogleCloudDataplexV1TaskNotebookTaskConfig(
        )
        """

    def testGoogleCloudDataplexV1TaskNotebookTaskConfig(self):
        """Test GoogleCloudDataplexV1TaskNotebookTaskConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
