# coding: utf-8

"""
    Cloud Dataplex API

    Dataplex API is used to manage the lifecycle of data lakes.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dataplex_v1_data_scan_event import GoogleCloudDataplexV1DataScanEvent

class TestGoogleCloudDataplexV1DataScanEvent(unittest.TestCase):
    """GoogleCloudDataplexV1DataScanEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDataplexV1DataScanEvent:
        """Test GoogleCloudDataplexV1DataScanEvent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDataplexV1DataScanEvent`
        """
        model = GoogleCloudDataplexV1DataScanEvent()
        if include_optional:
            return GoogleCloudDataplexV1DataScanEvent(
                create_time = '',
                data_profile = openapi_client.models.google_cloud_dataplex_v1_data_scan_event_data_profile_result.GoogleCloudDataplexV1DataScanEventDataProfileResult(
                    row_count = '', ),
                data_profile_configs = openapi_client.models.google_cloud_dataplex_v1_data_scan_event_data_profile_applied_configs.GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs(
                    column_filter_applied = True, 
                    row_filter_applied = True, 
                    sampling_percent = 1.337, ),
                data_quality = openapi_client.models.google_cloud_dataplex_v1_data_scan_event_data_quality_result.GoogleCloudDataplexV1DataScanEventDataQualityResult(
                    column_score = {
                        'key' : 1.337
                        }, 
                    dimension_passed = {
                        'key' : True
                        }, 
                    dimension_score = {
                        'key' : 1.337
                        }, 
                    passed = True, 
                    row_count = '', 
                    score = 1.337, ),
                data_quality_configs = openapi_client.models.google_cloud_dataplex_v1_data_scan_event_data_quality_applied_configs.GoogleCloudDataplexV1DataScanEventDataQualityAppliedConfigs(
                    row_filter_applied = True, 
                    sampling_percent = 1.337, ),
                data_source = '',
                end_time = '',
                job_id = '',
                message = '',
                post_scan_actions_result = openapi_client.models.google_cloud_dataplex_v1_data_scan_event_post_scan_actions_result.GoogleCloudDataplexV1DataScanEventPostScanActionsResult(
                    bigquery_export_result = openapi_client.models.google_cloud_dataplex_v1_data_scan_event_post_scan_actions_result_big_query_export_result.GoogleCloudDataplexV1DataScanEventPostScanActionsResultBigQueryExportResult(
                        message = '', 
                        state = 'STATE_UNSPECIFIED', ), ),
                scope = 'SCOPE_UNSPECIFIED',
                spec_version = '',
                start_time = '',
                state = 'STATE_UNSPECIFIED',
                trigger = 'TRIGGER_UNSPECIFIED',
                type = 'SCAN_TYPE_UNSPECIFIED'
            )
        else:
            return GoogleCloudDataplexV1DataScanEvent(
        )
        """

    def testGoogleCloudDataplexV1DataScanEvent(self):
        """Test GoogleCloudDataplexV1DataScanEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
