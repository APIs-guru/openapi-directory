# coding: utf-8

"""
    Cloud Dataplex API

    Dataplex API is used to manage the lifecycle of data lakes.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dataplex_v1_lake_metastore import GoogleCloudDataplexV1LakeMetastore

class TestGoogleCloudDataplexV1LakeMetastore(unittest.TestCase):
    """GoogleCloudDataplexV1LakeMetastore unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDataplexV1LakeMetastore:
        """Test GoogleCloudDataplexV1LakeMetastore
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDataplexV1LakeMetastore`
        """
        model = GoogleCloudDataplexV1LakeMetastore()
        if include_optional:
            return GoogleCloudDataplexV1LakeMetastore(
                service = ''
            )
        else:
            return GoogleCloudDataplexV1LakeMetastore(
        )
        """

    def testGoogleCloudDataplexV1LakeMetastore(self):
        """Test GoogleCloudDataplexV1LakeMetastore"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
