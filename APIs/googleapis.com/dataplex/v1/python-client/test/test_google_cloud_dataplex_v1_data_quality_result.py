# coding: utf-8

"""
    Cloud Dataplex API

    Dataplex API is used to manage the lifecycle of data lakes.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dataplex_v1_data_quality_result import GoogleCloudDataplexV1DataQualityResult

class TestGoogleCloudDataplexV1DataQualityResult(unittest.TestCase):
    """GoogleCloudDataplexV1DataQualityResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDataplexV1DataQualityResult:
        """Test GoogleCloudDataplexV1DataQualityResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDataplexV1DataQualityResult`
        """
        model = GoogleCloudDataplexV1DataQualityResult()
        if include_optional:
            return GoogleCloudDataplexV1DataQualityResult(
                columns = [
                    openapi_client.models.google_cloud_dataplex_v1_data_quality_column_result.GoogleCloudDataplexV1DataQualityColumnResult(
                        column = '', 
                        score = 1.337, )
                    ],
                dimensions = [
                    openapi_client.models.google_cloud_dataplex_v1_data_quality_dimension_result.GoogleCloudDataplexV1DataQualityDimensionResult(
                        dimension = openapi_client.models.google_cloud_dataplex_v1_data_quality_dimension.GoogleCloudDataplexV1DataQualityDimension(
                            name = '', ), 
                        passed = True, 
                        score = 1.337, )
                    ],
                passed = True,
                post_scan_actions_result = openapi_client.models.google_cloud_dataplex_v1_data_quality_result_post_scan_actions_result.GoogleCloudDataplexV1DataQualityResultPostScanActionsResult(
                    bigquery_export_result = openapi_client.models.google_cloud_dataplex_v1_data_quality_result_post_scan_actions_result_big_query_export_result.GoogleCloudDataplexV1DataQualityResultPostScanActionsResultBigQueryExportResult(
                        message = '', 
                        state = 'STATE_UNSPECIFIED', ), ),
                row_count = '',
                rules = [
                    openapi_client.models.google_cloud_dataplex_v1_data_quality_rule_result.GoogleCloudDataplexV1DataQualityRuleResult(
                        evaluated_count = '', 
                        failing_rows_query = '', 
                        null_count = '', 
                        pass_ratio = 1.337, 
                        passed = True, 
                        passed_count = '', 
                        rule = openapi_client.models.google_cloud_dataplex_v1_data_quality_rule.GoogleCloudDataplexV1DataQualityRule(
                            column = '', 
                            description = '', 
                            dimension = '', 
                            ignore_null = True, 
                            name = '', 
                            non_null_expectation = openapi_client.models.google_cloud_dataplex_v1_data_quality_rule_non_null_expectation.GoogleCloudDataplexV1DataQualityRuleNonNullExpectation(), 
                            range_expectation = openapi_client.models.google_cloud_dataplex_v1_data_quality_rule_range_expectation.GoogleCloudDataplexV1DataQualityRuleRangeExpectation(
                                max_value = '', 
                                min_value = '', 
                                strict_max_enabled = True, 
                                strict_min_enabled = True, ), 
                            regex_expectation = openapi_client.models.google_cloud_dataplex_v1_data_quality_rule_regex_expectation.GoogleCloudDataplexV1DataQualityRuleRegexExpectation(
                                regex = '', ), 
                            row_condition_expectation = openapi_client.models.google_cloud_dataplex_v1_data_quality_rule_row_condition_expectation.GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation(
                                sql_expression = '', ), 
                            set_expectation = openapi_client.models.google_cloud_dataplex_v1_data_quality_rule_set_expectation.GoogleCloudDataplexV1DataQualityRuleSetExpectation(
                                values = [
                                    ''
                                    ], ), 
                            statistic_range_expectation = openapi_client.models.google_cloud_dataplex_v1_data_quality_rule_statistic_range_expectation.GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation(
                                max_value = '', 
                                min_value = '', 
                                statistic = 'STATISTIC_UNDEFINED', 
                                strict_max_enabled = True, 
                                strict_min_enabled = True, ), 
                            table_condition_expectation = openapi_client.models.google_cloud_dataplex_v1_data_quality_rule_table_condition_expectation.GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation(
                                sql_expression = '', ), 
                            threshold = 1.337, 
                            uniqueness_expectation = openapi_client.models.google_cloud_dataplex_v1_data_quality_rule_uniqueness_expectation.GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation(), ), )
                    ],
                scanned_data = openapi_client.models.google_cloud_dataplex_v1_scanned_data.GoogleCloudDataplexV1ScannedData(
                    incremental_field = openapi_client.models.google_cloud_dataplex_v1_scanned_data_incremental_field.GoogleCloudDataplexV1ScannedDataIncrementalField(
                        end = '', 
                        field = '', 
                        start = '', ), ),
                score = 1.337
            )
        else:
            return GoogleCloudDataplexV1DataQualityResult(
        )
        """

    def testGoogleCloudDataplexV1DataQualityResult(self):
        """Test GoogleCloudDataplexV1DataQualityResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
