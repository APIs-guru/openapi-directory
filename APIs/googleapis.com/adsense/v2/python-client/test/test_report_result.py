# coding: utf-8

"""
    AdSense Management API

    The AdSense Management API allows publishers to access their inventory and run earnings and performance reports.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.report_result import ReportResult

class TestReportResult(unittest.TestCase):
    """ReportResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReportResult:
        """Test ReportResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReportResult`
        """
        model = ReportResult()
        if include_optional:
            return ReportResult(
                averages = openapi_client.models.row.Row(
                    cells = [
                        openapi_client.models.cell.Cell(
                            value = '', )
                        ], ),
                end_date = openapi_client.models.date.Date(
                    day = 56, 
                    month = 56, 
                    year = 56, ),
                headers = [
                    openapi_client.models.header.Header(
                        currency_code = '', 
                        name = '', 
                        type = 'HEADER_TYPE_UNSPECIFIED', )
                    ],
                rows = [
                    openapi_client.models.row.Row(
                        cells = [
                            openapi_client.models.cell.Cell(
                                value = '', )
                            ], )
                    ],
                start_date = openapi_client.models.date.Date(
                    day = 56, 
                    month = 56, 
                    year = 56, ),
                total_matched_rows = '',
                totals = openapi_client.models.row.Row(
                    cells = [
                        openapi_client.models.cell.Cell(
                            value = '', )
                        ], ),
                warnings = [
                    ''
                    ]
            )
        else:
            return ReportResult(
        )
        """

    def testReportResult(self):
        """Test ReportResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
