# coding: utf-8

"""
    Playable Locations API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_maps_playablelocations_v3_sample_filter import GoogleMapsPlayablelocationsV3SampleFilter

class TestGoogleMapsPlayablelocationsV3SampleFilter(unittest.TestCase):
    """GoogleMapsPlayablelocationsV3SampleFilter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleMapsPlayablelocationsV3SampleFilter:
        """Test GoogleMapsPlayablelocationsV3SampleFilter
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleMapsPlayablelocationsV3SampleFilter`
        """
        model = GoogleMapsPlayablelocationsV3SampleFilter()
        if include_optional:
            return GoogleMapsPlayablelocationsV3SampleFilter(
                included_types = [
                    ''
                    ],
                max_location_count = 56,
                spacing = openapi_client.models.google_maps_playablelocations_v3_sample_spacing_options.GoogleMapsPlayablelocationsV3SampleSpacingOptions(
                    min_spacing_meters = 1.337, 
                    point_type = 'POINT_TYPE_UNSPECIFIED', )
            )
        else:
            return GoogleMapsPlayablelocationsV3SampleFilter(
        )
        """

    def testGoogleMapsPlayablelocationsV3SampleFilter(self):
        """Test GoogleMapsPlayablelocationsV3SampleFilter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
