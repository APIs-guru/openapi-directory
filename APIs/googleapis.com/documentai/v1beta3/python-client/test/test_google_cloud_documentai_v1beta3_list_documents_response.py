# coding: utf-8

"""
    Cloud Document AI API

    Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.

    The version of the OpenAPI document: v1beta3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_documentai_v1beta3_list_documents_response import GoogleCloudDocumentaiV1beta3ListDocumentsResponse

class TestGoogleCloudDocumentaiV1beta3ListDocumentsResponse(unittest.TestCase):
    """GoogleCloudDocumentaiV1beta3ListDocumentsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDocumentaiV1beta3ListDocumentsResponse:
        """Test GoogleCloudDocumentaiV1beta3ListDocumentsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDocumentaiV1beta3ListDocumentsResponse`
        """
        model = GoogleCloudDocumentaiV1beta3ListDocumentsResponse()
        if include_optional:
            return GoogleCloudDocumentaiV1beta3ListDocumentsResponse(
                document_metadata = [
                    openapi_client.models.google_cloud_documentai_v1beta3_document_metadata.GoogleCloudDocumentaiV1beta3DocumentMetadata(
                        dataset_type = 'DATASET_SPLIT_TYPE_UNSPECIFIED', 
                        display_name = '', 
                        document_id = openapi_client.models.google_cloud_documentai_v1beta3_document_id.GoogleCloudDocumentaiV1beta3DocumentId(
                            gcs_managed_doc_id = openapi_client.models.google_cloud_documentai_v1beta3_document_id_gcs_managed_document_id.GoogleCloudDocumentaiV1beta3DocumentIdGCSManagedDocumentId(
                                cw_doc_id = '', 
                                gcs_uri = '', ), 
                            revision_ref = openapi_client.models.google_cloud_documentai_v1beta3_revision_ref.GoogleCloudDocumentaiV1beta3RevisionRef(
                                latest_processor_version = '', 
                                revision_case = 'REVISION_CASE_UNSPECIFIED', 
                                revision_id = '', ), 
                            unmanaged_doc_id = openapi_client.models.google_cloud_documentai_v1beta3_document_id_unmanaged_document_id.GoogleCloudDocumentaiV1beta3DocumentIdUnmanagedDocumentId(
                                doc_id = '', ), ), 
                        labeling_state = 'DOCUMENT_LABELING_STATE_UNSPECIFIED', 
                        page_count = 56, )
                    ],
                next_page_token = '',
                total_size = 56
            )
        else:
            return GoogleCloudDocumentaiV1beta3ListDocumentsResponse(
        )
        """

    def testGoogleCloudDocumentaiV1beta3ListDocumentsResponse(self):
        """Test GoogleCloudDocumentaiV1beta3ListDocumentsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
