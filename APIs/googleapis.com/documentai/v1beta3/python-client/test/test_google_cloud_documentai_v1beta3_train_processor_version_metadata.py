# coding: utf-8

"""
    Cloud Document AI API

    Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.

    The version of the OpenAPI document: v1beta3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_documentai_v1beta3_train_processor_version_metadata import GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata

class TestGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata(unittest.TestCase):
    """GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata:
        """Test GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata`
        """
        model = GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata()
        if include_optional:
            return GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata(
                common_metadata = openapi_client.models.google_cloud_documentai_v1beta3_common_operation_metadata.GoogleCloudDocumentaiV1beta3CommonOperationMetadata(
                    create_time = '', 
                    resource = '', 
                    state = 'STATE_UNSPECIFIED', 
                    state_message = '', 
                    update_time = '', ),
                test_dataset_validation = openapi_client.models.google_cloud_documentai_v1beta3_train_processor_version_metadata_dataset_validation.GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation(
                    dataset_error_count = 56, 
                    dataset_errors = [
                        openapi_client.models.google_rpc_status.GoogleRpcStatus(
                            code = 56, 
                            details = [
                                {
                                    'key' : null
                                    }
                                ], 
                            message = '', )
                        ], 
                    document_error_count = 56, 
                    document_errors = [
                        openapi_client.models.google_rpc_status.GoogleRpcStatus(
                            code = 56, 
                            message = '', )
                        ], ),
                training_dataset_validation = openapi_client.models.google_cloud_documentai_v1beta3_train_processor_version_metadata_dataset_validation.GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation(
                    dataset_error_count = 56, 
                    dataset_errors = [
                        openapi_client.models.google_rpc_status.GoogleRpcStatus(
                            code = 56, 
                            details = [
                                {
                                    'key' : null
                                    }
                                ], 
                            message = '', )
                        ], 
                    document_error_count = 56, 
                    document_errors = [
                        openapi_client.models.google_rpc_status.GoogleRpcStatus(
                            code = 56, 
                            message = '', )
                        ], )
            )
        else:
            return GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata(
        )
        """

    def testGoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata(self):
        """Test GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
