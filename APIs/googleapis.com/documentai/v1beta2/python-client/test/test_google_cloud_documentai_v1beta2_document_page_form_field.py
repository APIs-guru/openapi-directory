# coding: utf-8

"""
    Cloud Document AI API

    Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.

    The version of the OpenAPI document: v1beta2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_documentai_v1beta2_document_page_form_field import GoogleCloudDocumentaiV1beta2DocumentPageFormField

class TestGoogleCloudDocumentaiV1beta2DocumentPageFormField(unittest.TestCase):
    """GoogleCloudDocumentaiV1beta2DocumentPageFormField unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDocumentaiV1beta2DocumentPageFormField:
        """Test GoogleCloudDocumentaiV1beta2DocumentPageFormField
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDocumentaiV1beta2DocumentPageFormField`
        """
        model = GoogleCloudDocumentaiV1beta2DocumentPageFormField()
        if include_optional:
            return GoogleCloudDocumentaiV1beta2DocumentPageFormField(
                corrected_key_text = '',
                corrected_value_text = '',
                field_name = openapi_client.models.google_cloud_documentai_v1beta2_document_page_layout.GoogleCloudDocumentaiV1beta2DocumentPageLayout(
                    bounding_poly = openapi_client.models.google_cloud_documentai_v1beta2_bounding_poly.GoogleCloudDocumentaiV1beta2BoundingPoly(
                        normalized_vertices = [
                            openapi_client.models.google_cloud_documentai_v1beta2_normalized_vertex.GoogleCloudDocumentaiV1beta2NormalizedVertex(
                                x = 1.337, 
                                y = 1.337, )
                            ], 
                        vertices = [
                            openapi_client.models.google_cloud_documentai_v1beta2_vertex.GoogleCloudDocumentaiV1beta2Vertex(
                                x = 56, 
                                y = 56, )
                            ], ), 
                    confidence = 1.337, 
                    orientation = 'ORIENTATION_UNSPECIFIED', 
                    text_anchor = openapi_client.models.google_cloud_documentai_v1beta2_document_text_anchor.GoogleCloudDocumentaiV1beta2DocumentTextAnchor(
                        content = '', 
                        text_segments = [
                            openapi_client.models.google_cloud_documentai_v1beta2_document_text_anchor_text_segment.GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment(
                                end_index = '', 
                                start_index = '', )
                            ], ), ),
                field_value = openapi_client.models.google_cloud_documentai_v1beta2_document_page_layout.GoogleCloudDocumentaiV1beta2DocumentPageLayout(
                    bounding_poly = openapi_client.models.google_cloud_documentai_v1beta2_bounding_poly.GoogleCloudDocumentaiV1beta2BoundingPoly(
                        normalized_vertices = [
                            openapi_client.models.google_cloud_documentai_v1beta2_normalized_vertex.GoogleCloudDocumentaiV1beta2NormalizedVertex(
                                x = 1.337, 
                                y = 1.337, )
                            ], 
                        vertices = [
                            openapi_client.models.google_cloud_documentai_v1beta2_vertex.GoogleCloudDocumentaiV1beta2Vertex(
                                x = 56, 
                                y = 56, )
                            ], ), 
                    confidence = 1.337, 
                    orientation = 'ORIENTATION_UNSPECIFIED', 
                    text_anchor = openapi_client.models.google_cloud_documentai_v1beta2_document_text_anchor.GoogleCloudDocumentaiV1beta2DocumentTextAnchor(
                        content = '', 
                        text_segments = [
                            openapi_client.models.google_cloud_documentai_v1beta2_document_text_anchor_text_segment.GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment(
                                end_index = '', 
                                start_index = '', )
                            ], ), ),
                name_detected_languages = [
                    openapi_client.models.google_cloud_documentai_v1beta2_document_page_detected_language.GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage(
                        confidence = 1.337, 
                        language_code = '', )
                    ],
                provenance = openapi_client.models.google_cloud_documentai_v1beta2_document_provenance.GoogleCloudDocumentaiV1beta2DocumentProvenance(
                    id = 56, 
                    parents = [
                        openapi_client.models.google_cloud_documentai_v1beta2_document_provenance_parent.GoogleCloudDocumentaiV1beta2DocumentProvenanceParent(
                            id = 56, 
                            index = 56, 
                            revision = 56, )
                        ], 
                    revision = 56, 
                    type = 'OPERATION_TYPE_UNSPECIFIED', ),
                value_detected_languages = [
                    openapi_client.models.google_cloud_documentai_v1beta2_document_page_detected_language.GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage(
                        confidence = 1.337, 
                        language_code = '', )
                    ],
                value_type = ''
            )
        else:
            return GoogleCloudDocumentaiV1beta2DocumentPageFormField(
        )
        """

    def testGoogleCloudDocumentaiV1beta2DocumentPageFormField(self):
        """Test GoogleCloudDocumentaiV1beta2DocumentPageFormField"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
