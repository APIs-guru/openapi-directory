# coding: utf-8

"""
    Cloud Document AI API

    Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.

    The version of the OpenAPI document: v1beta2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_documentai_v1beta1_document_entity_normalized_value import GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue

class TestGoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue(unittest.TestCase):
    """GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue:
        """Test GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue`
        """
        model = GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue()
        if include_optional:
            return GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue(
                address_value = openapi_client.models.google_type_postal_address.GoogleTypePostalAddress(
                    address_lines = [
                        ''
                        ], 
                    administrative_area = '', 
                    language_code = '', 
                    locality = '', 
                    organization = '', 
                    postal_code = '', 
                    recipients = [
                        ''
                        ], 
                    region_code = '', 
                    revision = 56, 
                    sorting_code = '', 
                    sublocality = '', ),
                boolean_value = True,
                date_value = openapi_client.models.google_type_date.GoogleTypeDate(
                    day = 56, 
                    month = 56, 
                    year = 56, ),
                datetime_value = openapi_client.models.google_type_date_time.GoogleTypeDateTime(
                    day = 56, 
                    hours = 56, 
                    minutes = 56, 
                    month = 56, 
                    nanos = 56, 
                    seconds = 56, 
                    time_zone = openapi_client.models.google_type_time_zone.GoogleTypeTimeZone(
                        id = '', 
                        version = '', ), 
                    utc_offset = '', 
                    year = 56, ),
                float_value = 1.337,
                integer_value = 56,
                money_value = openapi_client.models.google_type_money.GoogleTypeMoney(
                    currency_code = '', 
                    nanos = 56, 
                    units = '', ),
                text = ''
            )
        else:
            return GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue(
        )
        """

    def testGoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue(self):
        """Test GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
