# coding: utf-8

"""
    Cloud Document AI API

    Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.

    The version of the OpenAPI document: v1beta2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_documentai_uiv1beta3_resync_dataset_metadata import GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata

class TestGoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata(unittest.TestCase):
    """GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata:
        """Test GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata`
        """
        model = GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata()
        if include_optional:
            return GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata(
                common_metadata = openapi_client.models.google_cloud_documentai_uiv1beta3_common_operation_metadata.GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata(
                    create_time = '', 
                    resource = '', 
                    state = 'STATE_UNSPECIFIED', 
                    state_message = '', 
                    update_time = '', ),
                dataset_resync_statuses = [
                    openapi_client.models.google_cloud_documentai_uiv1beta3_resync_dataset_metadata_dataset_resync_status.GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus(
                        dataset_inconsistency_type = 'DATASET_INCONSISTENCY_TYPE_UNSPECIFIED', 
                        status = openapi_client.models.google_rpc_status.GoogleRpcStatus(
                            code = 56, 
                            details = [
                                {
                                    'key' : null
                                    }
                                ], 
                            message = '', ), )
                    ],
                individual_document_resync_statuses = [
                    openapi_client.models.google_cloud_documentai_uiv1beta3_resync_dataset_metadata_individual_document_resync_status.GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus(
                        document_id = openapi_client.models.google_cloud_documentai_uiv1beta3_document_id.GoogleCloudDocumentaiUiv1beta3DocumentId(
                            gcs_managed_doc_id = openapi_client.models.google_cloud_documentai_uiv1beta3_document_id_gcs_managed_document_id.GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId(
                                cw_doc_id = '', 
                                gcs_uri = '', ), 
                            revision_ref = openapi_client.models.google_cloud_documentai_uiv1beta3_revision_ref.GoogleCloudDocumentaiUiv1beta3RevisionRef(
                                latest_processor_version = '', 
                                revision_case = 'REVISION_CASE_UNSPECIFIED', 
                                revision_id = '', ), 
                            unmanaged_doc_id = openapi_client.models.google_cloud_documentai_uiv1beta3_document_id_unmanaged_document_id.GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId(
                                doc_id = '', ), ), 
                        document_inconsistency_type = 'DOCUMENT_INCONSISTENCY_TYPE_UNSPECIFIED', 
                        status = openapi_client.models.google_rpc_status.GoogleRpcStatus(
                            code = 56, 
                            details = [
                                {
                                    'key' : null
                                    }
                                ], 
                            message = '', ), )
                    ]
            )
        else:
            return GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata(
        )
        """

    def testGoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata(self):
        """Test GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
