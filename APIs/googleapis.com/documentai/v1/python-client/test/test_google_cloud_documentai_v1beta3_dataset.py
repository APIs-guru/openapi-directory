# coding: utf-8

"""
    Cloud Document AI API

    Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_documentai_v1beta3_dataset import GoogleCloudDocumentaiV1beta3Dataset

class TestGoogleCloudDocumentaiV1beta3Dataset(unittest.TestCase):
    """GoogleCloudDocumentaiV1beta3Dataset unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDocumentaiV1beta3Dataset:
        """Test GoogleCloudDocumentaiV1beta3Dataset
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDocumentaiV1beta3Dataset`
        """
        model = GoogleCloudDocumentaiV1beta3Dataset()
        if include_optional:
            return GoogleCloudDocumentaiV1beta3Dataset(
                document_warehouse_config = openapi_client.models.google_cloud_documentai_v1beta3_dataset_document_warehouse_config.GoogleCloudDocumentaiV1beta3DatasetDocumentWarehouseConfig(
                    collection = '', 
                    schema = '', ),
                gcs_managed_config = openapi_client.models.google_cloud_documentai_v1beta3_dataset_gcs_managed_config.GoogleCloudDocumentaiV1beta3DatasetGCSManagedConfig(
                    gcs_prefix = openapi_client.models.google_cloud_documentai_v1beta3_gcs_prefix.GoogleCloudDocumentaiV1beta3GcsPrefix(
                        gcs_uri_prefix = '', ), ),
                name = '',
                spanner_indexing_config = None,
                state = 'STATE_UNSPECIFIED',
                unmanaged_dataset_config = None
            )
        else:
            return GoogleCloudDocumentaiV1beta3Dataset(
        )
        """

    def testGoogleCloudDocumentaiV1beta3Dataset(self):
        """Test GoogleCloudDocumentaiV1beta3Dataset"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
