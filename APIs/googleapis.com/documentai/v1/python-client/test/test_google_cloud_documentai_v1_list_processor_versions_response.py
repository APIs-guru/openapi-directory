# coding: utf-8

"""
    Cloud Document AI API

    Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_documentai_v1_list_processor_versions_response import GoogleCloudDocumentaiV1ListProcessorVersionsResponse

class TestGoogleCloudDocumentaiV1ListProcessorVersionsResponse(unittest.TestCase):
    """GoogleCloudDocumentaiV1ListProcessorVersionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDocumentaiV1ListProcessorVersionsResponse:
        """Test GoogleCloudDocumentaiV1ListProcessorVersionsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDocumentaiV1ListProcessorVersionsResponse`
        """
        model = GoogleCloudDocumentaiV1ListProcessorVersionsResponse()
        if include_optional:
            return GoogleCloudDocumentaiV1ListProcessorVersionsResponse(
                next_page_token = '',
                processor_versions = [
                    openapi_client.models.google_cloud_documentai_v1_processor_version.GoogleCloudDocumentaiV1ProcessorVersion(
                        create_time = '', 
                        deprecation_info = openapi_client.models.google_cloud_documentai_v1_processor_version_deprecation_info.GoogleCloudDocumentaiV1ProcessorVersionDeprecationInfo(
                            deprecation_time = '', 
                            replacement_processor_version = '', ), 
                        display_name = '', 
                        document_schema = openapi_client.models.google_cloud_documentai_v1_document_schema.GoogleCloudDocumentaiV1DocumentSchema(
                            description = '', 
                            display_name = '', 
                            entity_types = [
                                openapi_client.models.google_cloud_documentai_v1_document_schema_entity_type.GoogleCloudDocumentaiV1DocumentSchemaEntityType(
                                    base_types = [
                                        ''
                                        ], 
                                    display_name = '', 
                                    enum_values = openapi_client.models.google_cloud_documentai_v1_document_schema_entity_type_enum_values.GoogleCloudDocumentaiV1DocumentSchemaEntityTypeEnumValues(
                                        values = [
                                            ''
                                            ], ), 
                                    name = '', 
                                    properties = [
                                        openapi_client.models.google_cloud_documentai_v1_document_schema_entity_type_property.GoogleCloudDocumentaiV1DocumentSchemaEntityTypeProperty(
                                            display_name = '', 
                                            name = '', 
                                            occurrence_type = 'OCCURRENCE_TYPE_UNSPECIFIED', 
                                            value_type = '', )
                                        ], )
                                ], 
                            metadata = openapi_client.models.google_cloud_documentai_v1_document_schema_metadata.GoogleCloudDocumentaiV1DocumentSchemaMetadata(
                                document_allow_multiple_labels = True, 
                                document_splitter = True, 
                                prefixed_naming_on_properties = True, 
                                skip_naming_validation = True, ), ), 
                        google_managed = True, 
                        kms_key_name = '', 
                        kms_key_version_name = '', 
                        latest_evaluation = openapi_client.models.google_cloud_documentai_v1_evaluation_reference.GoogleCloudDocumentaiV1EvaluationReference(
                            aggregate_metrics = openapi_client.models.google_cloud_documentai_v1_evaluation_metrics.GoogleCloudDocumentaiV1EvaluationMetrics(
                                f1_score = 1.337, 
                                false_negatives_count = 56, 
                                false_positives_count = 56, 
                                ground_truth_document_count = 56, 
                                ground_truth_occurrences_count = 56, 
                                precision = 1.337, 
                                predicted_document_count = 56, 
                                predicted_occurrences_count = 56, 
                                recall = 1.337, 
                                total_documents_count = 56, 
                                true_positives_count = 56, ), 
                            aggregate_metrics_exact = openapi_client.models.google_cloud_documentai_v1_evaluation_metrics.GoogleCloudDocumentaiV1EvaluationMetrics(
                                f1_score = 1.337, 
                                false_negatives_count = 56, 
                                false_positives_count = 56, 
                                ground_truth_document_count = 56, 
                                ground_truth_occurrences_count = 56, 
                                precision = 1.337, 
                                predicted_document_count = 56, 
                                predicted_occurrences_count = 56, 
                                recall = 1.337, 
                                total_documents_count = 56, 
                                true_positives_count = 56, ), 
                            evaluation = '', 
                            operation = '', ), 
                        model_type = 'MODEL_TYPE_UNSPECIFIED', 
                        name = '', 
                        state = 'STATE_UNSPECIFIED', )
                    ]
            )
        else:
            return GoogleCloudDocumentaiV1ListProcessorVersionsResponse(
        )
        """

    def testGoogleCloudDocumentaiV1ListProcessorVersionsResponse(self):
        """Test GoogleCloudDocumentaiV1ListProcessorVersionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
