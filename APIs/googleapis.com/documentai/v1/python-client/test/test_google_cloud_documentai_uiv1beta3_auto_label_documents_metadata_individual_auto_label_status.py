# coding: utf-8

"""
    Cloud Document AI API

    Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_documentai_uiv1beta3_auto_label_documents_metadata_individual_auto_label_status import GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus

class TestGoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus(unittest.TestCase):
    """GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus:
        """Test GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus`
        """
        model = GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus()
        if include_optional:
            return GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus(
                document_id = openapi_client.models.google_cloud_documentai_uiv1beta3_document_id.GoogleCloudDocumentaiUiv1beta3DocumentId(
                    gcs_managed_doc_id = openapi_client.models.google_cloud_documentai_uiv1beta3_document_id_gcs_managed_document_id.GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId(
                        cw_doc_id = '', 
                        gcs_uri = '', ), 
                    revision_ref = openapi_client.models.google_cloud_documentai_uiv1beta3_revision_ref.GoogleCloudDocumentaiUiv1beta3RevisionRef(
                        latest_processor_version = '', 
                        revision_case = 'REVISION_CASE_UNSPECIFIED', 
                        revision_id = '', ), 
                    unmanaged_doc_id = openapi_client.models.google_cloud_documentai_uiv1beta3_document_id_unmanaged_document_id.GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId(
                        doc_id = '', ), ),
                status = openapi_client.models.google_rpc_status.GoogleRpcStatus(
                    code = 56, 
                    details = [
                        {
                            'key' : null
                            }
                        ], 
                    message = '', )
            )
        else:
            return GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus(
        )
        """

    def testGoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus(self):
        """Test GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
