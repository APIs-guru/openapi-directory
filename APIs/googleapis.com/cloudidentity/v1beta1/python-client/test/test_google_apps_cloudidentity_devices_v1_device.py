# coding: utf-8

"""
    Cloud Identity API

    API for provisioning and managing identity resources.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_apps_cloudidentity_devices_v1_device import GoogleAppsCloudidentityDevicesV1Device

class TestGoogleAppsCloudidentityDevicesV1Device(unittest.TestCase):
    """GoogleAppsCloudidentityDevicesV1Device unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleAppsCloudidentityDevicesV1Device:
        """Test GoogleAppsCloudidentityDevicesV1Device
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleAppsCloudidentityDevicesV1Device`
        """
        model = GoogleAppsCloudidentityDevicesV1Device()
        if include_optional:
            return GoogleAppsCloudidentityDevicesV1Device(
                android_specific_attributes = openapi_client.models.google_apps_cloudidentity_devices_v1_android_attributes.GoogleAppsCloudidentityDevicesV1AndroidAttributes(
                    cts_profile_match = True, 
                    enabled_unknown_sources = True, 
                    has_potentially_harmful_apps = True, 
                    owner_profile_account = True, 
                    ownership_privilege = 'OWNERSHIP_PRIVILEGE_UNSPECIFIED', 
                    supports_work_profile = True, 
                    verified_boot = True, 
                    verify_apps_enabled = True, ),
                asset_tag = '',
                baseband_version = '',
                bootloader_version = '',
                brand = '',
                build_number = '',
                compromised_state = 'COMPROMISED_STATE_UNSPECIFIED',
                create_time = '',
                device_id = '',
                device_type = 'DEVICE_TYPE_UNSPECIFIED',
                enabled_developer_options = True,
                enabled_usb_debugging = True,
                encryption_state = 'ENCRYPTION_STATE_UNSPECIFIED',
                hostname = '',
                imei = '',
                kernel_version = '',
                last_sync_time = '',
                management_state = 'MANAGEMENT_STATE_UNSPECIFIED',
                manufacturer = '',
                meid = '',
                model = '',
                name = '',
                network_operator = '',
                os_version = '',
                other_accounts = [
                    ''
                    ],
                owner_type = 'DEVICE_OWNERSHIP_UNSPECIFIED',
                release_version = '',
                security_patch_time = '',
                serial_number = '',
                wifi_mac_addresses = [
                    ''
                    ]
            )
        else:
            return GoogleAppsCloudidentityDevicesV1Device(
        )
        """

    def testGoogleAppsCloudidentityDevicesV1Device(self):
        """Test GoogleAppsCloudidentityDevicesV1Device"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
