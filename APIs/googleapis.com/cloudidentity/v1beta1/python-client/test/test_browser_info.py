# coding: utf-8

"""
    Cloud Identity API

    API for provisioning and managing identity resources.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.browser_info import BrowserInfo

class TestBrowserInfo(unittest.TestCase):
    """BrowserInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BrowserInfo:
        """Test BrowserInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BrowserInfo`
        """
        model = BrowserInfo()
        if include_optional:
            return BrowserInfo(
                browser_management_state = 'UNSPECIFIED',
                browser_version = '',
                is_built_in_dns_client_enabled = True,
                is_bulk_data_entry_analysis_enabled = True,
                is_chrome_cleanup_enabled = True,
                is_chrome_remote_desktop_app_blocked = True,
                is_file_download_analysis_enabled = True,
                is_file_upload_analysis_enabled = True,
                is_realtime_url_check_enabled = True,
                is_security_event_analysis_enabled = True,
                is_site_isolation_enabled = True,
                is_third_party_blocking_enabled = True,
                password_protection_warning_trigger = 'PASSWORD_PROTECTION_TRIGGER_UNSPECIFIED',
                safe_browsing_protection_level = 'SAFE_BROWSING_LEVEL_UNSPECIFIED'
            )
        else:
            return BrowserInfo(
        )
        """

    def testBrowserInfo(self):
        """Test BrowserInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
