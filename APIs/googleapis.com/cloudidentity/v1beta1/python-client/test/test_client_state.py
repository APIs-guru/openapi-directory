# coding: utf-8

"""
    Cloud Identity API

    API for provisioning and managing identity resources.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.client_state import ClientState

class TestClientState(unittest.TestCase):
    """ClientState unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ClientState:
        """Test ClientState
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ClientState`
        """
        model = ClientState()
        if include_optional:
            return ClientState(
                asset_tags = [
                    ''
                    ],
                compliance_state = 'COMPLIANCE_STATE_UNSPECIFIED',
                create_time = '',
                custom_id = '',
                etag = '',
                health_score = 'HEALTH_SCORE_UNSPECIFIED',
                key_value_pairs = {
                    'key' : openapi_client.models.custom_attribute_value.CustomAttributeValue(
                        bool_value = True, 
                        number_value = 1.337, 
                        string_value = '', )
                    },
                last_update_time = '',
                managed = 'MANAGED_STATE_UNSPECIFIED',
                name = '',
                owner_type = 'OWNER_TYPE_UNSPECIFIED',
                score_reason = ''
            )
        else:
            return ClientState(
        )
        """

    def testClientState(self):
        """Test ClientState"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
