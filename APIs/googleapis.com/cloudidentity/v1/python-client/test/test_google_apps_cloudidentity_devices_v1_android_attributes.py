# coding: utf-8

"""
    Cloud Identity API

    API for provisioning and managing identity resources.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_apps_cloudidentity_devices_v1_android_attributes import GoogleAppsCloudidentityDevicesV1AndroidAttributes

class TestGoogleAppsCloudidentityDevicesV1AndroidAttributes(unittest.TestCase):
    """GoogleAppsCloudidentityDevicesV1AndroidAttributes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleAppsCloudidentityDevicesV1AndroidAttributes:
        """Test GoogleAppsCloudidentityDevicesV1AndroidAttributes
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleAppsCloudidentityDevicesV1AndroidAttributes`
        """
        model = GoogleAppsCloudidentityDevicesV1AndroidAttributes()
        if include_optional:
            return GoogleAppsCloudidentityDevicesV1AndroidAttributes(
                cts_profile_match = True,
                enabled_unknown_sources = True,
                has_potentially_harmful_apps = True,
                owner_profile_account = True,
                ownership_privilege = 'OWNERSHIP_PRIVILEGE_UNSPECIFIED',
                supports_work_profile = True,
                verified_boot = True,
                verify_apps_enabled = True
            )
        else:
            return GoogleAppsCloudidentityDevicesV1AndroidAttributes(
        )
        """

    def testGoogleAppsCloudidentityDevicesV1AndroidAttributes(self):
        """Test GoogleAppsCloudidentityDevicesV1AndroidAttributes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
