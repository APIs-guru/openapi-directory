# coding: utf-8

"""
    Cloud Identity API

    API for provisioning and managing identity resources.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.group import Group

class TestGroup(unittest.TestCase):
    """Group unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Group:
        """Test Group
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Group`
        """
        model = Group()
        if include_optional:
            return Group(
                additional_group_keys = [
                    openapi_client.models.entity_key.EntityKey(
                        id = '', 
                        namespace = '', )
                    ],
                create_time = '',
                description = '',
                display_name = '',
                dynamic_group_metadata = openapi_client.models.dynamic_group_metadata.DynamicGroupMetadata(
                    queries = [
                        openapi_client.models.dynamic_group_query.DynamicGroupQuery(
                            query = '', 
                            resource_type = 'RESOURCE_TYPE_UNSPECIFIED', )
                        ], 
                    status = openapi_client.models.dynamic_group_status.DynamicGroupStatus(
                        status_time = '', ), ),
                group_key = openapi_client.models.entity_key.EntityKey(
                    id = '', 
                    namespace = '', ),
                labels = {
                    'key' : ''
                    },
                name = '',
                parent = '',
                update_time = ''
            )
        else:
            return Group(
        )
        """

    def testGroup(self):
        """Test Group"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
