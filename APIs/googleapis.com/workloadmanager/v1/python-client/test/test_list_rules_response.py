# coding: utf-8

"""
    Workload Manager API

    Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_rules_response import ListRulesResponse

class TestListRulesResponse(unittest.TestCase):
    """ListRulesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListRulesResponse:
        """Test ListRulesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListRulesResponse`
        """
        model = ListRulesResponse()
        if include_optional:
            return ListRulesResponse(
                next_page_token = '',
                rules = [
                    openapi_client.models.rule.Rule(
                        description = '', 
                        display_name = '', 
                        error_message = '', 
                        name = '', 
                        primary_category = '', 
                        remediation = '', 
                        revision_id = '', 
                        secondary_category = '', 
                        severity = '', 
                        tags = [
                            ''
                            ], 
                        uri = '', )
                    ]
            )
        else:
            return ListRulesResponse(
        )
        """

    def testListRulesResponse(self):
        """Test ListRulesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
