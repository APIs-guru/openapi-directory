# coding: utf-8

"""
    Workload Manager API

    Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.backend_server import BackendServer

class TestBackendServer(unittest.TestCase):
    """BackendServer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BackendServer:
        """Test BackendServer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BackendServer`
        """
        model = BackendServer()
        if include_optional:
            return BackendServer(
                backup_file = '',
                backup_schedule = '',
                name = '',
                os_version = '',
                resources = [
                    openapi_client.models.cloud_resource.CloudResource(
                        kind = 'RESOURCE_KIND_UNSPECIFIED', 
                        name = '', )
                    ]
            )
        else:
            return BackendServer(
        )
        """

    def testBackendServer(self):
        """Test BackendServer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
