# coding: utf-8

"""
    Workload Manager API

    Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_executions_response import ListExecutionsResponse

class TestListExecutionsResponse(unittest.TestCase):
    """ListExecutionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListExecutionsResponse:
        """Test ListExecutionsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListExecutionsResponse`
        """
        model = ListExecutionsResponse()
        if include_optional:
            return ListExecutionsResponse(
                executions = [
                    openapi_client.models.execution.Execution(
                        end_time = '', 
                        evaluation_id = '', 
                        inventory_time = '', 
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        run_type = 'TYPE_UNSPECIFIED', 
                        start_time = '', 
                        state = 'STATE_UNSPECIFIED', )
                    ],
                next_page_token = '',
                unreachable = [
                    ''
                    ]
            )
        else:
            return ListExecutionsResponse(
        )
        """

    def testListExecutionsResponse(self):
        """Test ListExecutionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
