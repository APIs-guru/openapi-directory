openapi: 3.0.0
servers:
  - url: https://workloadmanager.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Workload Manager API
  version: v1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://workloadmanager.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-providerName: googleapis.com
  x-serviceName: workloadmanager
externalDocs:
  url: https://cloud.google.com/workload-manager/docs
tags:
  - name: projects
paths:
  /v1/{location}/insights:writeInsight:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Write the data insights to workload manager data warehouse.
      operationId: workloadmanager.projects.locations.insights.writeInsight
      parameters:
        - description: "Required. The GCP location. The format is: projects/{project}/locations/{location}."
          in: path
          name: location
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WriteInsightRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WriteInsightResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: workloadmanager.projects.locations.operations.delete
      parameters:
        - description: The name of the operation resource to be deleted.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets details of a single workload.
      operationId: workloadmanager.projects.locations.workloadProfiles.get
      parameters:
        - description: Required. Name of the resource
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkloadProfile"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}/executions:run:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new Execution in a given project and location.
      operationId: workloadmanager.projects.locations.evaluations.executions.run
      parameters:
        - description: "Required. The resource name of the Execution using the form: 'projects/{project}/locations/{location}/evaluations/{evaluation}/executions/{execution}'"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunEvaluationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: workloadmanager.projects.locations.list
      parameters:
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results to return. If not set, the service selects a default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}/operations:
    get:
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: workloadmanager.projects.locations.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: workloadmanager.projects.locations.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOperationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/evaluations:
    get:
      description: Lists Evaluations in a given project and location.
      operationId: workloadmanager.projects.locations.evaluations.list
      parameters:
        - description: Required. Parent value for ListEvaluationsRequest
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filtering results
          in: query
          name: filter
          schema:
            type: string
        - description: Hint for how to order the results
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEvaluationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new Evaluation in a given project and location.
      operationId: workloadmanager.projects.locations.evaluations.create
      parameters:
        - description: "Required. The resource prefix of the evaluation location using the form: `projects/{project_id}/locations/{location_id}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. Id of the requesting object
          in: query
          name: evaluationId
          schema:
            type: string
        - description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Evaluation"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/executions:
    get:
      description: Lists Executions in a given project and location.
      operationId: workloadmanager.projects.locations.evaluations.executions.list
      parameters:
        - description: "Required. The resource prefix of the Execution using the form: 'projects/{project}/locations/{location}/evaluations/{evaluation}'"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filtering results
          in: query
          name: filter
          schema:
            type: string
        - description: Field to sort by. See https://google.aip.dev/132#ordering for more details.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListExecutionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/results:
    get:
      description: List the running result of a single Execution.
      operationId: workloadmanager.projects.locations.evaluations.executions.results.list
      parameters:
        - description: "Required. The execution results. Format: {parent}/evaluations/*/executions/*/results"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filtering results
          in: query
          name: filter
          schema:
            type: string
        - description: Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListExecutionResultsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/rules:
    get:
      description: Lists rules in a given project.
      operationId: workloadmanager.projects.locations.rules.list
      parameters:
        - description: "Required. The [project] on which to execute the request. The format is: projects/{project_id}/locations/{location} Currently, the pre-defined rules are global available to all projects and all regions"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The Cloud Storage bucket name for custom rules.
          in: query
          name: customRulesBucket
          schema:
            type: string
        - description: Filter based on primary_category, secondary_category
          in: query
          name: filter
          schema:
            type: string
        - description: Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRulesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/scannedResources:
    get:
      description: List all scanned resources for a single Execution.
      operationId: workloadmanager.projects.locations.evaluations.executions.scannedResources.list
      parameters:
        - description: Required. parent for ListScannedResourcesRequest
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filtering results
          in: query
          name: filter
          schema:
            type: string
        - description: Field to sort by. See https://google.aip.dev/132#ordering for more details.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return.
          in: query
          name: pageToken
          schema:
            type: string
        - description: rule name
          in: query
          name: rule
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListScannedResourcesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/workloadProfiles:
    get:
      description: List workloads
      operationId: workloadmanager.projects.locations.workloadProfiles.list
      parameters:
        - description: Required. Parent value for ListWorkloadRequest
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filtering results
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. A token identifying a page of results the server should return.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkloadProfilesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    APILayerServer:
      description: The API layer server
      properties:
        name:
          description: Output only. The api layer name
          readOnly: true
          type: string
        osVersion:
          description: Output only. OS information
          readOnly: true
          type: string
        resources:
          description: Output only. resources in the component
          items:
            $ref: "#/components/schemas/CloudResource"
          readOnly: true
          type: array
      type: object
    AvailabilityGroup:
      description: The availability groups for sqlserver
      properties:
        databases:
          description: Output only. The databases
          items:
            type: string
          readOnly: true
          type: array
        name:
          description: Output only. The availability group name
          readOnly: true
          type: string
        primaryServer:
          description: Output only. The primary server
          readOnly: true
          type: string
        secondaryServers:
          description: Output only. The secondary servers
          items:
            type: string
          readOnly: true
          type: array
      type: object
    BackendServer:
      description: The backend server
      properties:
        backupFile:
          description: Output only. The backup file
          readOnly: true
          type: string
        backupSchedule:
          description: Output only. The backup schedule
          readOnly: true
          type: string
        name:
          description: Output only. The backend name
          readOnly: true
          type: string
        osVersion:
          description: Output only. OS information
          readOnly: true
          type: string
        resources:
          description: Output only. resources in the component
          items:
            $ref: "#/components/schemas/CloudResource"
          readOnly: true
          type: array
      type: object
    BigQueryDestination:
      description: Message describing big query destination
      properties:
        createNewResultsTable:
          description: Optional. determine if results will be saved in a new table
          type: boolean
        destinationDataset:
          description: Optional. destination dataset to save evaluation results
          type: string
      type: object
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    CloudResource:
      description: The resource on GCP
      properties:
        kind:
          description: Output only. ComputeInstance, ComputeDisk, VPC, Bare Metal server, etc.
          enum:
            - RESOURCE_KIND_UNSPECIFIED
            - RESOURCE_KIND_INSTANCE
            - RESOURCE_KIND_DISK
            - RESOURCE_KIND_ADDRESS
            - RESOURCE_KIND_FILESTORE
            - RESOURCE_KIND_HEALTH_CHECK
            - RESOURCE_KIND_FORWARDING_RULE
            - RESOURCE_KIND_BACKEND_SERVICE
            - RESOURCE_KIND_SUBNETWORK
            - RESOURCE_KIND_NETWORK
            - RESOURCE_KIND_PUBLIC_ADDRESS
            - RESOURCE_KIND_INSTANCE_GROUP
          readOnly: true
          type: string
        name:
          description: Output only. resource name
          readOnly: true
          type: string
      type: object
    Cluster:
      description: The cluster for sqlserver
      properties:
        nodes:
          description: Output only. The nodes
          items:
            type: string
          readOnly: true
          type: array
        witnessServer:
          description: Output only. The witness server
          readOnly: true
          type: string
      type: object
    Database:
      description: The database for sqlserver
      properties:
        backupFile:
          description: Output only. The backup file
          readOnly: true
          type: string
        backupSchedule:
          description: Output only. The backup schedule
          readOnly: true
          type: string
        hostVm:
          description: Output only. The host VM
          readOnly: true
          type: string
        name:
          description: Output only. The database name
          readOnly: true
          type: string
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    Evaluation:
      description: LINT.IfChange Message describing Evaluation object
      properties:
        bigQueryDestination:
          $ref: "#/components/schemas/BigQueryDestination"
          description: Optional. BigQuery destination
        createTime:
          description: Output only. [Output only] Create time stamp
          format: google-datetime
          readOnly: true
          type: string
        customRulesBucket:
          description: The Cloud Storage bucket name for custom rules.
          type: string
        description:
          description: Description of the Evaluation
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs
          type: object
        name:
          description: name of resource names have the form 'projects/{project_id}/locations/{location_id}/evaluations/{evaluation_id}'
          type: string
        resourceFilter:
          $ref: "#/components/schemas/ResourceFilter"
          description: annotations as key value pairs
        resourceStatus:
          $ref: "#/components/schemas/ResourceStatus"
          description: Output only. [Output only] The updated rule ids if exist.
          readOnly: true
        ruleNames:
          description: the name of the rule
          items:
            type: string
          type: array
        ruleVersions:
          description: Output only. [Output only] The updated rule ids if exist.
          items:
            type: string
          readOnly: true
          type: array
        schedule:
          description: 'crontab format schedule for scheduled evaluation, currently only support the following schedule: "0 */1 * * *", "0 */6 * * *", "0 */12 * * *", "0 0 */1 * *", "0 0 */7 * *",'
          type: string
        updateTime:
          description: Output only. [Output only] Update time stamp
          format: google-datetime
          readOnly: true
          type: string
      type: object
    Execution:
      description: Message describing Execution object
      properties:
        endTime:
          description: Output only. [Output only] End time stamp
          format: google-datetime
          readOnly: true
          type: string
        evaluationId:
          description: Output only. [Output only] Evaluation ID
          readOnly: true
          type: string
        inventoryTime:
          description: Output only. [Output only] Inventory time stamp
          format: google-datetime
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs
          type: object
        name:
          description: The name of execution resource. The format is projects/{project}/locations/{location}/evaluations/{evaluation}/executions/{execution}
          type: string
        runType:
          description: type represent whether the execution executed directly by user or scheduled according evaluation.schedule field.
          enum:
            - TYPE_UNSPECIFIED
            - ONE_TIME
            - SCHEDULED
          type: string
        startTime:
          description: Output only. [Output only] Start time stamp
          format: google-datetime
          readOnly: true
          type: string
        state:
          description: Output only. [Output only] State
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - SUCCEEDED
            - FAILED
          readOnly: true
          type: string
      type: object
    ExecutionResult:
      description: Message describing the result of an execution
      properties:
        documentationUrl:
          description: the document url of the rule
          type: string
        resource:
          $ref: "#/components/schemas/Resource"
          description: the violate resource
        rule:
          description: the rule which violate in execution
          type: string
        severity:
          description: severity of violation
          type: string
        violationDetails:
          $ref: "#/components/schemas/ViolationDetails"
          description: the details of violation in result
        violationMessage:
          description: the violation message of an execution
          type: string
      type: object
    FrontEndServer:
      description: The front end server
      properties:
        name:
          description: Output only. The frontend name
          readOnly: true
          type: string
        osVersion:
          description: Output only. OS information
          readOnly: true
          type: string
        resources:
          description: Output only. resources in the component
          items:
            $ref: "#/components/schemas/CloudResource"
          readOnly: true
          type: array
      type: object
    GceInstanceFilter:
      description: Message describing compute engine instance filter
      properties:
        serviceAccounts:
          description: Service account of compute engine
          items:
            type: string
          type: array
      type: object
    Insight:
      description: A presentation of host resource usage where the workload runs.
      properties:
        instanceId:
          description: Required. The instance id where the insight is generated from
          type: string
        sapDiscovery:
          $ref: "#/components/schemas/SapDiscovery"
          description: The insights data for SAP system discovery. This is a copy of SAP System proto and should get updated whenever that one changes.
        sapValidation:
          $ref: "#/components/schemas/SapValidation"
          description: The insights data for the SAP workload validation.
        sentTime:
          description: Output only. [Output only] Create time stamp
          format: google-datetime
          readOnly: true
          type: string
        sqlserverValidation:
          $ref: "#/components/schemas/SqlserverValidation"
          description: The insights data for the sqlserver workload validation.
      type: object
    Instance:
      description: a vm instance
      properties:
        name:
          description: Output only. name of the VM
          readOnly: true
          type: string
        region:
          description: Output only. The location of the VM
          readOnly: true
          type: string
        status:
          description: Output only. The state of the VM
          enum:
            - INSTANCESTATE_UNSPECIFIED
            - PROVISIONING
            - STAGING
            - RUNNING
            - STOPPING
            - STOPPED
            - TERMINATED
            - SUSPENDING
            - SUSPENDED
            - REPAIRING
            - DEPROVISIONING
          readOnly: true
          type: string
      type: object
    Layer:
      description: The database layer
      properties:
        applicationType:
          description: the application layer
          type: string
        databaseType:
          description: Optional. the database layer
          type: string
        instances:
          description: Optional. instances in a layer
          items:
            $ref: "#/components/schemas/Instance"
          type: array
        sid:
          description: Output only. system identification of a layer
          readOnly: true
          type: string
      type: object
    ListEvaluationsResponse:
      description: Message for response to listing Evaluations
      properties:
        evaluations:
          description: The list of Evaluation
          items:
            $ref: "#/components/schemas/Evaluation"
          type: array
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListExecutionResultsResponse:
      description: Message for response of list execution results
      properties:
        executionResults:
          description: The versions from the specified publisher.
          items:
            $ref: "#/components/schemas/ExecutionResult"
          type: array
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
    ListExecutionsResponse:
      description: Message for response to listing Executions
      properties:
        executions:
          description: The list of Execution
          items:
            $ref: "#/components/schemas/Execution"
          type: array
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    ListRulesResponse:
      description: Mesesage of response of list rules
      properties:
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        rules:
          description: all rules in response
          items:
            $ref: "#/components/schemas/Rule"
          type: array
      type: object
    ListScannedResourcesResponse:
      description: Message for response to list scanned resources
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        scannedResources:
          description: All scanned resources in response
          items:
            $ref: "#/components/schemas/ScannedResource"
          type: array
      type: object
    ListWorkloadProfilesResponse:
      description: List workloadResponse returns a response with the list of workload overview
      properties:
        nextPageToken:
          description: Output only. A token identifying a page of results the server should return
          readOnly: true
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        workloadOverviews:
          description: Output only. The list of Workload Overview
          items:
            $ref: "#/components/schemas/WorkloadProfileOverview"
          readOnly: true
          type: array
      type: object
    LoadBalancerServer:
      description: The load balancer for sqlserver
      properties:
        ip:
          description: Output only. The IP address
          readOnly: true
          type: string
        vm:
          description: Output only. The VM name
          readOnly: true
          type: string
      type: object
    Location:
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    OperationMetadata:
      description: Represents the metadata of the long-running operation.
      properties:
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        requestedCancellation:
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
      type: object
    Resource:
      description: Message represent resource in execution result
      properties:
        name:
          description: the name of the resource
          type: string
        serviceAccount:
          description: the service account accosiate with resource
          type: string
        type:
          description: the type of reresource
          type: string
      type: object
    ResourceFilter:
      description: Message describing resource filters
      properties:
        gceInstanceFilter:
          $ref: "#/components/schemas/GceInstanceFilter"
          description: Filter compute engine resource
        inclusionLabels:
          additionalProperties:
            type: string
          description: The label used for filter resource
          type: object
        resourceIdPatterns:
          description: The id pattern for filter resource
          items:
            type: string
          type: array
        scopes:
          description: The scopes of evaluation resource
          items:
            type: string
          type: array
      type: object
    ResourceStatus:
      description: Message describing resource status
      properties:
        rulesNewerVersions:
          deprecated: true
          description: "Historical: Used before 2023-05-22 the new version of rule id if exists"
          items:
            type: string
          type: array
        state:
          description: State of the resource
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
          type: string
      type: object
    Rule:
      description: Message represent a rule
      properties:
        description:
          description: descrite rule in plain language
          type: string
        displayName:
          description: the name display in UI
          type: string
        errorMessage:
          description: the message template for rule
          type: string
        name:
          description: rule name
          type: string
        primaryCategory:
          description: the primary category
          type: string
        remediation:
          description: the remediation for the rule
          type: string
        revisionId:
          description: Output only. the version of the rule
          readOnly: true
          type: string
        secondaryCategory:
          description: the secondary category
          type: string
        severity:
          description: the severity of the rule
          type: string
        tags:
          description: List of user-defined tags
          items:
            type: string
          type: array
        uri:
          description: the docuement url for the rule
          type: string
      type: object
    RunEvaluationRequest:
      description: Message for creating a Execution
      properties:
        execution:
          $ref: "#/components/schemas/Execution"
          description: Required. The resource being created
        executionId:
          description: Required. Id of the requesting object If auto-generating Id server-side, remove this field and execution_id from the method_signature of Create RPC
          type: string
        requestId:
          description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
      type: object
    SapComponent:
      description: The component of sap workload
      properties:
        resources:
          description: Output only. resources in the component
          items:
            $ref: "#/components/schemas/CloudResource"
          readOnly: true
          type: array
        sid:
          description: Output only. sid is the sap component identificator
          readOnly: true
          type: string
      type: object
    SapDiscovery:
      description: The schema of SAP system discovery data.
      properties:
        applicationLayer:
          $ref: "#/components/schemas/SapDiscoveryComponent"
          description: Optional. An SAP system may run without an application layer.
        databaseLayer:
          $ref: "#/components/schemas/SapDiscoveryComponent"
          description: Required. An SAP System must have a database.
        metadata:
          $ref: "#/components/schemas/SapDiscoveryMetadata"
          description: Optional. The metadata for SAP system discovery data.
        projectNumber:
          description: Optional. The GCP project number that this SapSystem belongs to.
          type: string
        systemId:
          description: Output only. A combination of database SID, database instance URI and tenant DB name to make a unique identifier per-system.
          readOnly: true
          type: string
        updateTime:
          description: Required. Unix timestamp this system has been updated last.
          format: google-datetime
          type: string
        workloadProperties:
          $ref: "#/components/schemas/SapDiscoveryWorkloadProperties"
          description: Optional. The properties of the workload.
      type: object
    SapDiscoveryComponent:
      description: Message describing the system component.
      properties:
        applicationProperties:
          $ref: "#/components/schemas/SapDiscoveryComponentApplicationProperties"
          description: Optional. The component is a SAP application.
        databaseProperties:
          $ref: "#/components/schemas/SapDiscoveryComponentDatabaseProperties"
          description: Optional. The component is a SAP database.
        haHosts:
          description: Optional. A list of host URIs that are part of the HA configuration if present. An empty list indicates the component is not configured for HA.
          items:
            type: string
          type: array
        hostProject:
          description: Required. Pantheon Project in which the resources reside.
          type: string
        resources:
          description: Optional. The resources in a component.
          items:
            $ref: "#/components/schemas/SapDiscoveryResource"
          type: array
        sid:
          description: Optional. The SAP identifier, used by the SAP software and helps differentiate systems for customers.
          type: string
        topologyType:
          description: Optional. The detected topology of the component.
          enum:
            - TOPOLOGY_TYPE_UNSPECIFIED
            - TOPOLOGY_SCALE_UP
            - TOPOLOGY_SCALE_OUT
          type: string
      type: object
    SapDiscoveryComponentApplicationProperties:
      description: A set of properties describing an SAP Application layer.
      properties:
        abap:
          description: Optional. Indicates whether this is a Java or ABAP Netweaver instance. true means it is ABAP, false means it is Java.
          type: boolean
        applicationType:
          description: Required. Type of the application. Netweaver, etc.
          enum:
            - APPLICATION_TYPE_UNSPECIFIED
            - NETWEAVER
          type: string
        ascsUri:
          description: Optional. Resource URI of the recognized ASCS host of the application.
          type: string
        kernelVersion:
          description: Optional. Kernel version for Netweaver running in the system.
          type: string
        nfsUri:
          description: Optional. Resource URI of the recognized shared NFS of the application. May be empty if the application server has only a single node.
          type: string
      type: object
    SapDiscoveryComponentDatabaseProperties:
      description: A set of properties describing an SAP Database layer.
      properties:
        databaseType:
          description: Required. Type of the database. HANA, DB2, etc.
          enum:
            - DATABASE_TYPE_UNSPECIFIED
            - HANA
            - MAX_DB
            - DB2
          type: string
        databaseVersion:
          description: Optional. The version of the database software running in the system.
          type: string
        primaryInstanceUri:
          description: Required. URI of the recognized primary instance of the database.
          type: string
        sharedNfsUri:
          description: Optional. URI of the recognized shared NFS of the database. May be empty if the database has only a single node.
          type: string
      type: object
    SapDiscoveryMetadata:
      description: Message describing SAP discovery system metadata
      properties:
        customerRegion:
          description: Optional. Customer region string for customer's use. Does not represent GCP region.
          type: string
        definedSystem:
          description: Optional. Customer defined, something like "E-commerce pre prod"
          type: string
        environmentType:
          description: Optional. Should be "prod", "QA", "dev", "staging", etc.
          type: string
        sapProduct:
          description: Optional. This SAP product name
          type: string
      type: object
    SapDiscoveryResource:
      description: Message describing a resource.
      properties:
        instanceProperties:
          $ref: "#/components/schemas/SapDiscoveryResourceInstanceProperties"
          description: Optional. A set of properties only applying to instance type resources.
        relatedResources:
          description: Optional. A list of resource URIs related to this resource.
          items:
            type: string
          type: array
        resourceKind:
          description: Required. ComputeInstance, ComputeDisk, VPC, Bare Metal server, etc.
          enum:
            - RESOURCE_KIND_UNSPECIFIED
            - RESOURCE_KIND_INSTANCE
            - RESOURCE_KIND_DISK
            - RESOURCE_KIND_ADDRESS
            - RESOURCE_KIND_FILESTORE
            - RESOURCE_KIND_HEALTH_CHECK
            - RESOURCE_KIND_FORWARDING_RULE
            - RESOURCE_KIND_BACKEND_SERVICE
            - RESOURCE_KIND_SUBNETWORK
            - RESOURCE_KIND_NETWORK
            - RESOURCE_KIND_PUBLIC_ADDRESS
            - RESOURCE_KIND_INSTANCE_GROUP
          type: string
        resourceType:
          description: Required. The type of this resource.
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - RESOURCE_TYPE_COMPUTE
            - RESOURCE_TYPE_STORAGE
            - RESOURCE_TYPE_NETWORK
          type: string
        resourceUri:
          description: Required. URI of the resource, includes project, location, and name.
          type: string
        updateTime:
          description: Required. Unix timestamp of when this resource last had its discovery data updated.
          format: google-datetime
          type: string
      type: object
    SapDiscoveryResourceInstanceProperties:
      description: A set of properties only present for an instance type resource
      properties:
        clusterInstances:
          description: Optional. A list of instance URIs that are part of a cluster with this one.
          items:
            type: string
          type: array
        virtualHostname:
          description: Optional. A virtual hostname of the instance if it has one.
          type: string
      type: object
    SapDiscoveryWorkloadProperties:
      description: A set of properties describing an SAP workload.
      properties:
        productVersions:
          description: Optional. List of SAP Products and their versions running on the system.
          items:
            $ref: "#/components/schemas/SapDiscoveryWorkloadPropertiesProductVersion"
          type: array
        softwareComponentVersions:
          description: Optional. A list of SAP software components and their versions running on the system.
          items:
            $ref: "#/components/schemas/SapDiscoveryWorkloadPropertiesSoftwareComponentProperties"
          type: array
      type: object
    SapDiscoveryWorkloadPropertiesProductVersion:
      description: A product name and version.
      properties:
        name:
          description: Optional. Name of the product.
          type: string
        version:
          description: Optional. Version of the product.
          type: string
      type: object
    SapDiscoveryWorkloadPropertiesSoftwareComponentProperties:
      description: A SAP software component name, version, and type.
      properties:
        extVersion:
          description: Optional. The component's minor version.
          type: string
        name:
          description: Optional. Name of the component.
          type: string
        type:
          description: Optional. The component's type.
          type: string
        version:
          description: Optional. The component's major version.
          type: string
      type: object
    SapValidation:
      description: A presentation of SAP workload insight. The schema of SAP workloads validation related data.
      properties:
        projectId:
          description: Required. The project_id of the cloud project that the Insight data comes from.
          type: string
        validationDetails:
          description: Optional. A list of SAP validation metrics data.
          items:
            $ref: "#/components/schemas/SapValidationValidationDetail"
          type: array
        zone:
          description: Optional. The zone of the instance that the Insight data comes from.
          type: string
      type: object
    SapValidationValidationDetail:
      description: Message describing the SAP validation metrics.
      properties:
        details:
          additionalProperties:
            type: string
          description: "Optional. The pairs of metrics data: field name & field value."
          type: object
        isPresent:
          description: Optional. Was there a SAP system detected for this validation type.
          type: boolean
        sapValidationType:
          description: Optional. The SAP system that the validation data is from.
          enum:
            - SAP_VALIDATION_TYPE_UNSPECIFIED
            - SYSTEM
            - COROSYNC
            - PACEMAKER
            - HANA
            - NETWEAVER
            - HANA_SECURITY
            - CUSTOM
          type: string
      type: object
    SapWorkload:
      description: The body of sap workload
      properties:
        application:
          $ref: "#/components/schemas/SapComponent"
          description: Output only. the acsc componment
          readOnly: true
        database:
          $ref: "#/components/schemas/SapComponent"
          description: Output only. the database componment
          readOnly: true
        metadata:
          additionalProperties:
            type: string
          description: Output only. The metadata for SAP workload.
          readOnly: true
          type: object
      type: object
    SapWorkloadOverview:
      description: The overview of sap workload
      properties:
        appSid:
          description: Output only. The application SID
          readOnly: true
          type: string
        dbSid:
          description: Output only. The database SID
          readOnly: true
          type: string
        sapSystemId:
          description: Output only. The UUID for a SAP workload
          readOnly: true
          type: string
      type: object
    ScannedResource:
      description: Message of scanned resource
      properties:
        resource:
          description: resource name
          type: string
        type:
          description: resource type
          type: string
      type: object
    SqlserverValidation:
      description: A presentation of SQLServer workload insight. The schema of SqlServer workloads validation related data.
      properties:
        agentVersion:
          description: Optional. The agent version collected this data point
          type: string
        instance:
          description: "Required. The instance_name of the instance that the Insight data comes from. According to https://linter.aip.dev/122/name-suffix: field names should not use the _name suffix unless the field would be ambiguous without it."
          type: string
        projectId:
          description: Required. The project_id of the cloud project that the Insight data comes from.
          type: string
        validationDetails:
          description: Optional. A list of SqlServer validation metrics data.
          items:
            $ref: "#/components/schemas/SqlserverValidationValidationDetail"
          type: array
      type: object
    SqlserverValidationDetails:
      description: Message containing collected data names and values.
      properties:
        fields:
          additionalProperties:
            type: string
          description: Required. Collected data is in format.
          type: object
      type: object
    SqlserverValidationValidationDetail:
      description: Message describing the Sqlserver validation metrics.
      properties:
        details:
          description: Required. Details wraps map that represents collected data names and values.
          items:
            $ref: "#/components/schemas/SqlserverValidationDetails"
          type: array
        type:
          description: Optional. The Sqlserver system that the validation data is from.
          enum:
            - SQLSERVER_VALIDATION_TYPE_UNSPECIFIED
            - OS
            - DB_LOG_DISK_SEPARATION
            - DB_MAX_PARALLELISM
            - DB_CXPACKET_WAITS
            - DB_TRANSACTION_LOG_HANDLING
            - DB_VIRTUAL_LOG_FILE_COUNT
            - DB_BUFFER_POOL_EXTENSION
            - DB_MAX_SERVER_MEMORY
            - INSTANCE_METRICS
            - DB_INDEX_FRAGMENTATION
            - DB_TABLE_INDEX_COMPRESSION
            - DB_BACKUP_POLICY
          type: string
      type: object
    SqlserverWorkload:
      description: The body of sqlserver workload
      properties:
        ags:
          description: Output only. The availability groups for sqlserver
          items:
            $ref: "#/components/schemas/AvailabilityGroup"
          readOnly: true
          type: array
        cluster:
          $ref: "#/components/schemas/Cluster"
          description: Output only. The cluster for sqlserver
          readOnly: true
        databases:
          description: Output only. The databases for sqlserver
          items:
            $ref: "#/components/schemas/Database"
          readOnly: true
          type: array
        loadBalancerServer:
          $ref: "#/components/schemas/LoadBalancerServer"
          description: Output only. The load balancer for sqlserver
          readOnly: true
      type: object
    SqlserverWorkloadOverview:
      description: The overview of sqlserver workload
      properties:
        availabilityGroup:
          description: Output only. The availability groups
          items:
            type: string
          readOnly: true
          type: array
        sqlserverSystemId:
          description: Output only. The UUID for a Sqlserver workload
          readOnly: true
          type: string
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    ThreeTierWorkload:
      description: The body of three tier workload
      properties:
        apiLayer:
          $ref: "#/components/schemas/APILayerServer"
          description: Output only. The API layer for three tier workload
          readOnly: true
        backend:
          $ref: "#/components/schemas/BackendServer"
          description: Output only. The backend for three tier workload
          readOnly: true
        endpoint:
          description: Output only. the workload endpoint
          readOnly: true
          type: string
        frontend:
          $ref: "#/components/schemas/FrontEndServer"
          description: Output only. The frontend for three tier workload
          readOnly: true
      type: object
    ThreeTierWorkloadOverview:
      description: The overview of three tier workload
      properties:
        threeTierSystemId:
          description: Output only. The UUID for a three tier workload
          readOnly: true
          type: string
      type: object
    ViolationDetails:
      description: Message describing the violdation in execution result
      properties:
        asset:
          description: the name of asset
          type: string
        observed:
          additionalProperties:
            type: string
          description: observed
          type: object
        serviceAccount:
          description: the service account associate with resource
          type: string
      type: object
    WorkloadProfile:
      description: workload resource
      properties:
        application:
          $ref: "#/components/schemas/Layer"
          deprecated: true
          description: Optional. The application layer
        ascs:
          $ref: "#/components/schemas/Layer"
          deprecated: true
          description: Optional. The ascs layer
        database:
          $ref: "#/components/schemas/Layer"
          deprecated: true
          description: Optional. The database layer
        labels:
          additionalProperties:
            type: string
          description: Optional. such as name, description, version. More example can be found in deployment
          type: object
        name:
          description: Identifier. name of resource names have the form 'projects/{project_id}/workloads/{workload_id}'
          type: string
        refreshedTime:
          description: Required. time when the workload data was refreshed
          format: google-datetime
          type: string
        sapWorkload:
          $ref: "#/components/schemas/SapWorkload"
          description: The sap workload content
        sqlserverWorkload:
          $ref: "#/components/schemas/SqlserverWorkload"
          description: The sqlserver workload content
        state:
          deprecated: true
          description: Output only. [output only] the current state if a a workload
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DEPLOYING
            - DESTROYING
            - MAINTENANCE
          readOnly: true
          type: string
        threeTierWorkload:
          $ref: "#/components/schemas/ThreeTierWorkload"
          description: The 3 tier web app workload content
        workloadType:
          description: Required. The type of the workload
          enum:
            - WORKLOAD_TYPE_UNSPECIFIED
            - S4_HANA
            - SQL_SERVER
            - THREE_TIER_WEB_APP
          type: string
      type: object
    WorkloadProfileOverview:
      description: a workload profile overview
      properties:
        sapWorkloadOverview:
          $ref: "#/components/schemas/SapWorkloadOverview"
          description: The sap workload overview
        sqlserverWorkloadOverview:
          $ref: "#/components/schemas/SqlserverWorkloadOverview"
          description: The sqlserver workload overview
        threeTierWorkloadOverview:
          $ref: "#/components/schemas/ThreeTierWorkloadOverview"
          description: The three tier workload overview
      type: object
    WriteInsightRequest:
      description: Request for sending the data insights.
      properties:
        insight:
          $ref: "#/components/schemas/Insight"
          description: Required. The metrics data details.
        requestId:
          description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
      type: object
    WriteInsightResponse:
      description: The response for write insights request.
      properties: {}
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
