# coding: utf-8

"""
    Business Profile Performance API

    The Business Profile Performance API allows merchants to fetch performance reports about their business profile on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.daily_metric_time_series import DailyMetricTimeSeries

class TestDailyMetricTimeSeries(unittest.TestCase):
    """DailyMetricTimeSeries unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DailyMetricTimeSeries:
        """Test DailyMetricTimeSeries
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DailyMetricTimeSeries`
        """
        model = DailyMetricTimeSeries()
        if include_optional:
            return DailyMetricTimeSeries(
                daily_metric = 'DAILY_METRIC_UNKNOWN',
                daily_sub_entity_type = openapi_client.models.daily_sub_entity_type.DailySubEntityType(
                    day_of_week = 'DAY_OF_WEEK_UNSPECIFIED', 
                    time_of_day = openapi_client.models.time_of_day.TimeOfDay(
                        hours = 56, 
                        minutes = 56, 
                        nanos = 56, 
                        seconds = 56, ), ),
                time_series = openapi_client.models.time_series.TimeSeries(
                    dated_values = [
                        openapi_client.models.dated_value.DatedValue(
                            date = openapi_client.models.date.Date(
                                day = 56, 
                                month = 56, 
                                year = 56, ), 
                            value = '', )
                        ], )
            )
        else:
            return DailyMetricTimeSeries(
        )
        """

    def testDailyMetricTimeSeries(self):
        """Test DailyMetricTimeSeries"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
