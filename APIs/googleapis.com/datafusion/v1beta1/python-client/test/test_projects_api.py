# coding: utf-8

"""
    Cloud Data Fusion API

    Cloud Data Fusion is a fully-managed, cloud native, enterprise data integration service for quickly building and managing data pipelines. It provides a graphical interface to increase time efficiency and reduce complexity, and allows business users, developers, and data scientists to easily and reliably build scalable data integration solutions to cleanse, prepare, blend, transfer and transform data without having to wrestle with infrastructure.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.projects_api import ProjectsApi


class TestProjectsApi(unittest.TestCase):
    """ProjectsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ProjectsApi()

    def tearDown(self) -> None:
        pass

    def test_datafusion_projects_locations_instances_create(self) -> None:
        """Test case for datafusion_projects_locations_instances_create

        """
        pass

    def test_datafusion_projects_locations_instances_dns_peerings_create(self) -> None:
        """Test case for datafusion_projects_locations_instances_dns_peerings_create

        """
        pass

    def test_datafusion_projects_locations_instances_dns_peerings_list(self) -> None:
        """Test case for datafusion_projects_locations_instances_dns_peerings_list

        """
        pass

    def test_datafusion_projects_locations_instances_list(self) -> None:
        """Test case for datafusion_projects_locations_instances_list

        """
        pass

    def test_datafusion_projects_locations_instances_namespaces_get_iam_policy(self) -> None:
        """Test case for datafusion_projects_locations_instances_namespaces_get_iam_policy

        """
        pass

    def test_datafusion_projects_locations_instances_namespaces_list(self) -> None:
        """Test case for datafusion_projects_locations_instances_namespaces_list

        """
        pass

    def test_datafusion_projects_locations_instances_namespaces_set_iam_policy(self) -> None:
        """Test case for datafusion_projects_locations_instances_namespaces_set_iam_policy

        """
        pass

    def test_datafusion_projects_locations_instances_namespaces_test_iam_permissions(self) -> None:
        """Test case for datafusion_projects_locations_instances_namespaces_test_iam_permissions

        """
        pass

    def test_datafusion_projects_locations_instances_patch(self) -> None:
        """Test case for datafusion_projects_locations_instances_patch

        """
        pass

    def test_datafusion_projects_locations_instances_restart(self) -> None:
        """Test case for datafusion_projects_locations_instances_restart

        """
        pass

    def test_datafusion_projects_locations_instances_upgrade(self) -> None:
        """Test case for datafusion_projects_locations_instances_upgrade

        """
        pass

    def test_datafusion_projects_locations_list(self) -> None:
        """Test case for datafusion_projects_locations_list

        """
        pass

    def test_datafusion_projects_locations_operations_cancel(self) -> None:
        """Test case for datafusion_projects_locations_operations_cancel

        """
        pass

    def test_datafusion_projects_locations_operations_delete(self) -> None:
        """Test case for datafusion_projects_locations_operations_delete

        """
        pass

    def test_datafusion_projects_locations_operations_get(self) -> None:
        """Test case for datafusion_projects_locations_operations_get

        """
        pass

    def test_datafusion_projects_locations_operations_list(self) -> None:
        """Test case for datafusion_projects_locations_operations_list

        """
        pass

    def test_datafusion_projects_locations_remove_iam_policy(self) -> None:
        """Test case for datafusion_projects_locations_remove_iam_policy

        """
        pass

    def test_datafusion_projects_locations_versions_list(self) -> None:
        """Test case for datafusion_projects_locations_versions_list

        """
        pass


if __name__ == '__main__':
    unittest.main()
