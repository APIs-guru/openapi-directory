# coding: utf-8

"""
    Cloud Data Fusion API

    Cloud Data Fusion is a fully-managed, cloud native, enterprise data integration service for quickly building and managing data pipelines. It provides a graphical interface to increase time efficiency and reduce complexity, and allows business users, developers, and data scientists to easily and reliably build scalable data integration solutions to cleanse, prepare, blend, transfer and transform data without having to wrestle with infrastructure.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.data_residency_augmented_view import DataResidencyAugmentedView

class TestDataResidencyAugmentedView(unittest.TestCase):
    """DataResidencyAugmentedView unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataResidencyAugmentedView:
        """Test DataResidencyAugmentedView
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataResidencyAugmentedView`
        """
        model = DataResidencyAugmentedView()
        if include_optional:
            return DataResidencyAugmentedView(
                cr_gopo_guris = [
                    ''
                    ],
                cr_gopo_prefixes = [
                    ''
                    ],
                service_data = openapi_client.models.service_data.ServiceData(
                    pd = openapi_client.models.persistent_disk_data.PersistentDiskData(
                        cfs_roots = [
                            ''
                            ], 
                        gcs_bucket_names = [
                            ''
                            ], ), ),
                tp_ids = [
                    ''
                    ]
            )
        else:
            return DataResidencyAugmentedView(
        )
        """

    def testDataResidencyAugmentedView(self):
        """Test DataResidencyAugmentedView"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
