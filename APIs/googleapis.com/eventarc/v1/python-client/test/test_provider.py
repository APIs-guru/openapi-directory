# coding: utf-8

"""
    Eventarc API

    Build event-driven applications on Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.provider import Provider

class TestProvider(unittest.TestCase):
    """Provider unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Provider:
        """Test Provider
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Provider`
        """
        model = Provider()
        if include_optional:
            return Provider(
                display_name = '',
                event_types = [
                    openapi_client.models.event_type.EventType(
                        description = '', 
                        event_schema_uri = '', 
                        filtering_attributes = [
                            openapi_client.models.filtering_attribute.FilteringAttribute(
                                attribute = '', 
                                description = '', 
                                path_pattern_supported = True, 
                                required = True, )
                            ], 
                        type = '', )
                    ],
                name = ''
            )
        else:
            return Provider(
        )
        """

    def testProvider(self):
        """Test Provider"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
