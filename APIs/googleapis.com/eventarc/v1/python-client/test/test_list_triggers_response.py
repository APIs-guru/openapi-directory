# coding: utf-8

"""
    Eventarc API

    Build event-driven applications on Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_triggers_response import ListTriggersResponse

class TestListTriggersResponse(unittest.TestCase):
    """ListTriggersResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListTriggersResponse:
        """Test ListTriggersResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListTriggersResponse`
        """
        model = ListTriggersResponse()
        if include_optional:
            return ListTriggersResponse(
                next_page_token = '',
                triggers = [
                    openapi_client.models.trigger.Trigger(
                        channel = '', 
                        conditions = {
                            'key' : openapi_client.models.state_condition.StateCondition(
                                code = 'OK', 
                                message = '', )
                            }, 
                        create_time = '', 
                        destination = openapi_client.models.destination.Destination(
                            cloud_function = '', 
                            cloud_run = openapi_client.models.cloud_run.CloudRun(
                                path = '', 
                                region = '', 
                                service = '', ), 
                            gke = openapi_client.models.gke.GKE(
                                cluster = '', 
                                location = '', 
                                namespace = '', 
                                path = '', 
                                service = '', ), 
                            http_endpoint = openapi_client.models.http_endpoint.HttpEndpoint(
                                uri = '', ), 
                            network_config = openapi_client.models.network_config.NetworkConfig(
                                network_attachment = '', ), 
                            workflow = '', ), 
                        etag = '', 
                        event_data_content_type = '', 
                        event_filters = [
                            openapi_client.models.event_filter.EventFilter(
                                attribute = '', 
                                operator = '', 
                                value = '', )
                            ], 
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        service_account = '', 
                        transport = openapi_client.models.transport.Transport(
                            pubsub = openapi_client.models.pubsub.Pubsub(
                                subscription = '', 
                                topic = '', ), ), 
                        uid = '', 
                        update_time = '', )
                    ],
                unreachable = [
                    ''
                    ]
            )
        else:
            return ListTriggersResponse(
        )
        """

    def testListTriggersResponse(self):
        """Test ListTriggersResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
