# coding: utf-8

"""
    Eventarc API

    Build event-driven applications on Google Cloud Platform.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.trigger import Trigger

class TestTrigger(unittest.TestCase):
    """Trigger unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Trigger:
        """Test Trigger
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Trigger`
        """
        model = Trigger()
        if include_optional:
            return Trigger(
                create_time = '',
                destination = openapi_client.models.destination.Destination(
                    cloud_run_service = openapi_client.models.cloud_run_service.CloudRunService(
                        path = '', 
                        region = '', 
                        service = '', ), ),
                etag = '',
                labels = {
                    'key' : ''
                    },
                matching_criteria = [
                    openapi_client.models.matching_criteria.MatchingCriteria(
                        attribute = '', 
                        value = '', )
                    ],
                name = '',
                service_account = '',
                transport = openapi_client.models.transport.Transport(
                    pubsub = openapi_client.models.pubsub.Pubsub(
                        subscription = '', 
                        topic = '', ), ),
                update_time = ''
            )
        else:
            return Trigger(
        )
        """

    def testTrigger(self):
        """Test Trigger"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
