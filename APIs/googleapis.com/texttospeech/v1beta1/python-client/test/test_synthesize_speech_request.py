# coding: utf-8

"""
    Cloud Text-to-Speech API

    Synthesizes natural-sounding speech by applying powerful neural network models.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.synthesize_speech_request import SynthesizeSpeechRequest

class TestSynthesizeSpeechRequest(unittest.TestCase):
    """SynthesizeSpeechRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SynthesizeSpeechRequest:
        """Test SynthesizeSpeechRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SynthesizeSpeechRequest`
        """
        model = SynthesizeSpeechRequest()
        if include_optional:
            return SynthesizeSpeechRequest(
                audio_config = openapi_client.models.audio_config.AudioConfig(
                    audio_encoding = 'AUDIO_ENCODING_UNSPECIFIED', 
                    effects_profile_id = [
                        ''
                        ], 
                    pitch = 1.337, 
                    sample_rate_hertz = 56, 
                    speaking_rate = 1.337, 
                    volume_gain_db = 1.337, ),
                enable_time_pointing = [
                    'TIMEPOINT_TYPE_UNSPECIFIED'
                    ],
                input = openapi_client.models.synthesis_input.SynthesisInput(
                    ssml = '', 
                    text = '', ),
                voice = openapi_client.models.voice_selection_params.VoiceSelectionParams(
                    custom_voice = openapi_client.models.custom_voice_params.CustomVoiceParams(
                        model = '', 
                        reported_usage = 'REPORTED_USAGE_UNSPECIFIED', ), 
                    language_code = '', 
                    name = '', 
                    ssml_gender = 'SSML_VOICE_GENDER_UNSPECIFIED', )
            )
        else:
            return SynthesizeSpeechRequest(
        )
        """

    def testSynthesizeSpeechRequest(self):
        """Test SynthesizeSpeechRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
