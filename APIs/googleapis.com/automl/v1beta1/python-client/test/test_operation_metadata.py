# coding: utf-8

"""
    Cloud AutoML API

    Train high-quality custom machine learning models with minimum effort and machine learning expertise.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.operation_metadata import OperationMetadata

class TestOperationMetadata(unittest.TestCase):
    """OperationMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OperationMetadata:
        """Test OperationMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OperationMetadata`
        """
        model = OperationMetadata()
        if include_optional:
            return OperationMetadata(
                batch_predict_details = openapi_client.models.batch_predict_operation_metadata.BatchPredictOperationMetadata(
                    input_config = openapi_client.models.batch_predict_input_config.BatchPredictInputConfig(
                        bigquery_source = openapi_client.models.big_query_source.BigQuerySource(
                            input_uri = '', ), 
                        gcs_source = openapi_client.models.gcs_source.GcsSource(
                            input_uris = [
                                ''
                                ], ), ), 
                    output_info = openapi_client.models.batch_predict_output_info.BatchPredictOutputInfo(
                        bigquery_output_dataset = '', 
                        gcs_output_directory = '', ), ),
                create_model_details = None,
                create_time = '',
                delete_details = None,
                deploy_model_details = None,
                export_data_details = openapi_client.models.export_data_operation_metadata.ExportDataOperationMetadata(
                    output_info = openapi_client.models.export_data_output_info.ExportDataOutputInfo(
                        bigquery_output_dataset = '', 
                        gcs_output_directory = '', ), ),
                export_evaluated_examples_details = openapi_client.models.export_evaluated_examples_operation_metadata.ExportEvaluatedExamplesOperationMetadata(
                    output_info = openapi_client.models.export_evaluated_examples_output_info.ExportEvaluatedExamplesOutputInfo(
                        bigquery_output_dataset = '', ), ),
                export_model_details = openapi_client.models.export_model_operation_metadata.ExportModelOperationMetadata(
                    output_info = openapi_client.models.export_model_output_info.ExportModelOutputInfo(
                        gcs_output_directory = '', ), ),
                import_data_details = None,
                partial_failures = [
                    openapi_client.models.status.Status(
                        code = 56, 
                        details = [
                            {
                                'key' : null
                                }
                            ], 
                        message = '', )
                    ],
                progress_percent = 56,
                undeploy_model_details = None,
                update_time = ''
            )
        else:
            return OperationMetadata(
        )
        """

    def testOperationMetadata(self):
        """Test OperationMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
