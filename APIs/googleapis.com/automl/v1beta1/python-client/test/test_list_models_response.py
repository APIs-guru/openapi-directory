# coding: utf-8

"""
    Cloud AutoML API

    Train high-quality custom machine learning models with minimum effort and machine learning expertise.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_models_response import ListModelsResponse

class TestListModelsResponse(unittest.TestCase):
    """ListModelsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListModelsResponse:
        """Test ListModelsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListModelsResponse`
        """
        model = ListModelsResponse()
        if include_optional:
            return ListModelsResponse(
                model = [
                    openapi_client.models.model.Model(
                        create_time = '', 
                        dataset_id = '', 
                        deployment_state = 'DEPLOYMENT_STATE_UNSPECIFIED', 
                        display_name = '', 
                        image_classification_model_metadata = openapi_client.models.image_classification_model_metadata.ImageClassificationModelMetadata(
                            base_model_id = '', 
                            model_type = '', 
                            node_count = '', 
                            node_qps = 1.337, 
                            stop_reason = '', 
                            train_budget = '', 
                            train_cost = '', ), 
                        image_object_detection_model_metadata = openapi_client.models.image_object_detection_model_metadata.ImageObjectDetectionModelMetadata(
                            model_type = '', 
                            node_count = '', 
                            node_qps = 1.337, 
                            stop_reason = '', 
                            train_budget_milli_node_hours = '', 
                            train_cost_milli_node_hours = '', ), 
                        name = '', 
                        tables_model_metadata = openapi_client.models.tables_model_metadata.TablesModelMetadata(
                            disable_early_stopping = True, 
                            input_feature_column_specs = [
                                openapi_client.models.column_spec.ColumnSpec(
                                    data_stats = openapi_client.models.data_stats.DataStats(
                                        array_stats = openapi_client.models.array_stats.ArrayStats(
                                            member_stats = openapi_client.models.data_stats.DataStats(
                                                category_stats = openapi_client.models.category_stats.CategoryStats(
                                                    top_category_stats = [
                                                        openapi_client.models.single_category_stats.SingleCategoryStats(
                                                            count = '', 
                                                            value = '', )
                                                        ], ), 
                                                distinct_value_count = '', 
                                                float64_stats = openapi_client.models.float64_stats.Float64Stats(
                                                    histogram_buckets = [
                                                        openapi_client.models.histogram_bucket.HistogramBucket(
                                                            count = '', 
                                                            max = 1.337, 
                                                            min = 1.337, )
                                                        ], 
                                                    mean = 1.337, 
                                                    quantiles = [
                                                        1.337
                                                        ], 
                                                    standard_deviation = 1.337, ), 
                                                null_value_count = '', 
                                                string_stats = openapi_client.models.string_stats.StringStats(
                                                    top_unigram_stats = [
                                                        openapi_client.models.unigram_stats.UnigramStats(
                                                            count = '', 
                                                            value = '', )
                                                        ], ), 
                                                struct_stats = openapi_client.models.struct_stats.StructStats(
                                                    field_stats = {
                                                        'key' : 
                                                        }, ), 
                                                timestamp_stats = openapi_client.models.timestamp_stats.TimestampStats(
                                                    granular_stats = {
                                                        'key' : openapi_client.models.granular_stats.GranularStats(
                                                            buckets = {
                                                                'key' : ''
                                                                }, )
                                                        }, ), 
                                                valid_value_count = '', ), ), 
                                        category_stats = openapi_client.models.category_stats.CategoryStats(), 
                                        distinct_value_count = '', 
                                        float64_stats = openapi_client.models.float64_stats.Float64Stats(
                                            mean = 1.337, 
                                            standard_deviation = 1.337, ), 
                                        null_value_count = '', 
                                        string_stats = openapi_client.models.string_stats.StringStats(), 
                                        struct_stats = openapi_client.models.struct_stats.StructStats(), 
                                        timestamp_stats = openapi_client.models.timestamp_stats.TimestampStats(), 
                                        valid_value_count = '', ), 
                                    data_type = openapi_client.models.data_type.DataType(
                                        list_element_type = openapi_client.models.data_type.DataType(
                                            nullable = True, 
                                            struct_type = openapi_client.models.struct_type.StructType(
                                                fields = {
                                                    'key' : 
                                                    }, ), 
                                            time_format = '', 
                                            type_code = 'TYPE_CODE_UNSPECIFIED', ), 
                                        nullable = True, 
                                        struct_type = openapi_client.models.struct_type.StructType(), 
                                        time_format = '', 
                                        type_code = 'TYPE_CODE_UNSPECIFIED', ), 
                                    display_name = '', 
                                    etag = '', 
                                    name = '', 
                                    top_correlated_columns = [
                                        openapi_client.models.correlated_column.CorrelatedColumn(
                                            column_spec_id = '', 
                                            correlation_stats = openapi_client.models.correlation_stats.CorrelationStats(
                                                cramers_v = 1.337, ), )
                                        ], )
                                ], 
                            optimization_objective = '', 
                            optimization_objective_precision_value = 1.337, 
                            optimization_objective_recall_value = 1.337, 
                            tables_model_column_info = [
                                openapi_client.models.tables_model_column_info.TablesModelColumnInfo(
                                    column_display_name = '', 
                                    column_spec_name = '', 
                                    feature_importance = 1.337, )
                                ], 
                            target_column_spec = openapi_client.models.column_spec.ColumnSpec(
                                display_name = '', 
                                etag = '', 
                                name = '', ), 
                            train_budget_milli_node_hours = '', 
                            train_cost_milli_node_hours = '', ), 
                        text_classification_model_metadata = openapi_client.models.text_classification_model_metadata.TextClassificationModelMetadata(
                            classification_type = 'CLASSIFICATION_TYPE_UNSPECIFIED', ), 
                        text_extraction_model_metadata = openapi_client.models.text_extraction_model_metadata.TextExtractionModelMetadata(
                            model_hint = '', ), 
                        text_sentiment_model_metadata = openapi_client.models.text_sentiment_model_metadata.TextSentimentModelMetadata(), 
                        train_example_count = 56, 
                        translation_model_metadata = openapi_client.models.translation_model_metadata.TranslationModelMetadata(
                            base_model = '', 
                            source_language_code = '', 
                            target_language_code = '', ), 
                        update_time = '', 
                        validate_example_count = 56, 
                        video_classification_model_metadata = openapi_client.models.video_classification_model_metadata.VideoClassificationModelMetadata(), 
                        video_object_tracking_model_metadata = openapi_client.models.video_object_tracking_model_metadata.VideoObjectTrackingModelMetadata(), )
                    ],
                next_page_token = ''
            )
        else:
            return ListModelsResponse(
        )
        """

    def testListModelsResponse(self):
        """Test ListModelsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
