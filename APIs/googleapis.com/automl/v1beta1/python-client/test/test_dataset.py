# coding: utf-8

"""
    Cloud AutoML API

    Train high-quality custom machine learning models with minimum effort and machine learning expertise.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dataset import Dataset

class TestDataset(unittest.TestCase):
    """Dataset unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Dataset:
        """Test Dataset
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Dataset`
        """
        model = Dataset()
        if include_optional:
            return Dataset(
                create_time = '',
                description = '',
                display_name = '',
                etag = '',
                example_count = 56,
                image_classification_dataset_metadata = openapi_client.models.image_classification_dataset_metadata.ImageClassificationDatasetMetadata(
                    classification_type = 'CLASSIFICATION_TYPE_UNSPECIFIED', ),
                image_object_detection_dataset_metadata = None,
                name = '',
                tables_dataset_metadata = openapi_client.models.tables_dataset_metadata.TablesDatasetMetadata(
                    ml_use_column_spec_id = '', 
                    primary_table_spec_id = '', 
                    stats_update_time = '', 
                    target_column_correlations = {
                        'key' : openapi_client.models.correlation_stats.CorrelationStats(
                            cramers_v = 1.337, )
                        }, 
                    target_column_spec_id = '', 
                    weight_column_spec_id = '', ),
                text_classification_dataset_metadata = openapi_client.models.text_classification_dataset_metadata.TextClassificationDatasetMetadata(
                    classification_type = 'CLASSIFICATION_TYPE_UNSPECIFIED', ),
                text_extraction_dataset_metadata = None,
                text_sentiment_dataset_metadata = openapi_client.models.text_sentiment_dataset_metadata.TextSentimentDatasetMetadata(
                    sentiment_max = 56, ),
                translation_dataset_metadata = openapi_client.models.translation_dataset_metadata.TranslationDatasetMetadata(
                    source_language_code = '', 
                    target_language_code = '', ),
                video_classification_dataset_metadata = None,
                video_object_tracking_dataset_metadata = None
            )
        else:
            return Dataset(
        )
        """

    def testDataset(self):
        """Test Dataset"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
