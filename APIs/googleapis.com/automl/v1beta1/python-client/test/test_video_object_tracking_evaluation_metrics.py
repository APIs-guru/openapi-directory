# coding: utf-8

"""
    Cloud AutoML API

    Train high-quality custom machine learning models with minimum effort and machine learning expertise.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.video_object_tracking_evaluation_metrics import VideoObjectTrackingEvaluationMetrics

class TestVideoObjectTrackingEvaluationMetrics(unittest.TestCase):
    """VideoObjectTrackingEvaluationMetrics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VideoObjectTrackingEvaluationMetrics:
        """Test VideoObjectTrackingEvaluationMetrics
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VideoObjectTrackingEvaluationMetrics`
        """
        model = VideoObjectTrackingEvaluationMetrics()
        if include_optional:
            return VideoObjectTrackingEvaluationMetrics(
                bounding_box_mean_average_precision = 1.337,
                bounding_box_metrics_entries = [
                    openapi_client.models.bounding_box_metrics_entry.BoundingBoxMetricsEntry(
                        confidence_metrics_entries = [
                            openapi_client.models.bounding_box_metrics_entry_confidence_metrics_entry.BoundingBoxMetricsEntryConfidenceMetricsEntry(
                                confidence_threshold = 1.337, 
                                f1_score = 1.337, 
                                precision = 1.337, 
                                recall = 1.337, )
                            ], 
                        iou_threshold = 1.337, 
                        mean_average_precision = 1.337, )
                    ],
                evaluated_bounding_box_count = 56,
                evaluated_frame_count = 56
            )
        else:
            return VideoObjectTrackingEvaluationMetrics(
        )
        """

    def testVideoObjectTrackingEvaluationMetrics(self):
        """Test VideoObjectTrackingEvaluationMetrics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
