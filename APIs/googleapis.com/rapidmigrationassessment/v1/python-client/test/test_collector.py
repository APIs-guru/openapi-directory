# coding: utf-8

"""
    Rapid Migration Assessment API

    The Rapid Migration Assessment service is our first-party migration assessment and planning tool.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.collector import Collector

class TestCollector(unittest.TestCase):
    """Collector unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Collector:
        """Test Collector
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Collector`
        """
        model = Collector()
        if include_optional:
            return Collector(
                bucket = '',
                client_version = '',
                collection_days = 56,
                create_time = '',
                description = '',
                display_name = '',
                eula_uri = '',
                expected_asset_count = '',
                guest_os_scan = openapi_client.models.guest_os_scan.GuestOsScan(
                    core_source = '', ),
                labels = {
                    'key' : ''
                    },
                name = '',
                service_account = '',
                state = 'STATE_UNSPECIFIED',
                update_time = '',
                vsphere_scan = openapi_client.models.v_sphere_scan.VSphereScan(
                    core_source = '', )
            )
        else:
            return Collector(
        )
        """

    def testCollector(self):
        """Test Collector"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
