# coding: utf-8

"""
    Data pipelines API

    Data Pipelines provides an interface for creating, updating, and managing recurring Data Analytics jobs.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_datapipelines_v1_workload import GoogleCloudDatapipelinesV1Workload

class TestGoogleCloudDatapipelinesV1Workload(unittest.TestCase):
    """GoogleCloudDatapipelinesV1Workload unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDatapipelinesV1Workload:
        """Test GoogleCloudDatapipelinesV1Workload
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDatapipelinesV1Workload`
        """
        model = GoogleCloudDatapipelinesV1Workload()
        if include_optional:
            return GoogleCloudDatapipelinesV1Workload(
                dataflow_flex_template_request = openapi_client.models.google_cloud_datapipelines_v1_launch_flex_template_request.GoogleCloudDatapipelinesV1LaunchFlexTemplateRequest(
                    launch_parameter = openapi_client.models.google_cloud_datapipelines_v1_launch_flex_template_parameter.GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter(
                        container_spec_gcs_path = '', 
                        environment = openapi_client.models.google_cloud_datapipelines_v1_flex_template_runtime_environment.GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment(
                            additional_experiments = [
                                ''
                                ], 
                            additional_user_labels = {
                                'key' : ''
                                }, 
                            enable_streaming_engine = True, 
                            flexrs_goal = 'FLEXRS_UNSPECIFIED', 
                            ip_configuration = 'WORKER_IP_UNSPECIFIED', 
                            kms_key_name = '', 
                            machine_type = '', 
                            max_workers = 56, 
                            network = '', 
                            num_workers = 56, 
                            service_account_email = '', 
                            subnetwork = '', 
                            temp_location = '', 
                            worker_region = '', 
                            worker_zone = '', 
                            zone = '', ), 
                        job_name = '', 
                        launch_options = {
                            'key' : ''
                            }, 
                        parameters = {
                            'key' : ''
                            }, 
                        transform_name_mappings = {
                            'key' : ''
                            }, 
                        update = True, ), 
                    location = '', 
                    project_id = '', 
                    validate_only = True, ),
                dataflow_launch_template_request = openapi_client.models.google_cloud_datapipelines_v1_launch_template_request.GoogleCloudDatapipelinesV1LaunchTemplateRequest(
                    gcs_path = '', 
                    launch_parameters = openapi_client.models.google_cloud_datapipelines_v1_launch_template_parameters.GoogleCloudDatapipelinesV1LaunchTemplateParameters(
                        environment = openapi_client.models.google_cloud_datapipelines_v1_runtime_environment.GoogleCloudDatapipelinesV1RuntimeEnvironment(
                            additional_experiments = [
                                ''
                                ], 
                            additional_user_labels = {
                                'key' : ''
                                }, 
                            bypass_temp_dir_validation = True, 
                            enable_streaming_engine = True, 
                            ip_configuration = 'WORKER_IP_UNSPECIFIED', 
                            kms_key_name = '', 
                            machine_type = '', 
                            max_workers = 56, 
                            network = '', 
                            num_workers = 56, 
                            service_account_email = '', 
                            subnetwork = '', 
                            temp_location = '', 
                            worker_region = '', 
                            worker_zone = '', 
                            zone = '', ), 
                        job_name = '', 
                        parameters = {
                            'key' : ''
                            }, 
                        transform_name_mapping = {
                            'key' : ''
                            }, 
                        update = True, ), 
                    location = '', 
                    project_id = '', 
                    validate_only = True, )
            )
        else:
            return GoogleCloudDatapipelinesV1Workload(
        )
        """

    def testGoogleCloudDatapipelinesV1Workload(self):
        """Test GoogleCloudDatapipelinesV1Workload"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
