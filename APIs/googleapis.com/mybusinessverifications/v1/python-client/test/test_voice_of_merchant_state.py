# coding: utf-8

"""
    My Business Verifications API

    The My Business Verifications API provides an interface for taking verifications related actions for locations.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.voice_of_merchant_state import VoiceOfMerchantState

class TestVoiceOfMerchantState(unittest.TestCase):
    """VoiceOfMerchantState unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VoiceOfMerchantState:
        """Test VoiceOfMerchantState
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VoiceOfMerchantState`
        """
        model = VoiceOfMerchantState()
        if include_optional:
            return VoiceOfMerchantState(
                comply_with_guidelines = openapi_client.models.comply_with_guidelines.ComplyWithGuidelines(
                    recommendation_reason = 'RECOMMENDATION_REASON_UNSPECIFIED', ),
                has_business_authority = True,
                has_voice_of_merchant = True,
                resolve_ownership_conflict = None,
                verify = openapi_client.models.verify.Verify(
                    has_pending_verification = True, ),
                wait_for_voice_of_merchant = None
            )
        else:
            return VoiceOfMerchantState(
        )
        """

    def testVoiceOfMerchantState(self):
        """Test VoiceOfMerchantState"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
