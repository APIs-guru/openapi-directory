# coding: utf-8

"""
    Kubernetes Engine API

    Builds and manages container-based applications, powered by the open source Kubernetes technology.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cluster_autoscaling import ClusterAutoscaling

class TestClusterAutoscaling(unittest.TestCase):
    """ClusterAutoscaling unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ClusterAutoscaling:
        """Test ClusterAutoscaling
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ClusterAutoscaling`
        """
        model = ClusterAutoscaling()
        if include_optional:
            return ClusterAutoscaling(
                autoprovisioning_locations = [
                    ''
                    ],
                autoprovisioning_node_pool_defaults = openapi_client.models.autoprovisioning_node_pool_defaults.AutoprovisioningNodePoolDefaults(
                    boot_disk_kms_key = '', 
                    disk_size_gb = 56, 
                    disk_type = '', 
                    image_type = '', 
                    insecure_kubelet_readonly_port_enabled = True, 
                    management = openapi_client.models.node_management.NodeManagement(
                        auto_repair = True, 
                        auto_upgrade = True, 
                        upgrade_options = openapi_client.models.auto_upgrade_options.AutoUpgradeOptions(
                            auto_upgrade_start_time = '', 
                            description = '', ), ), 
                    min_cpu_platform = '', 
                    oauth_scopes = [
                        ''
                        ], 
                    service_account = '', 
                    shielded_instance_config = openapi_client.models.shielded_instance_config.ShieldedInstanceConfig(
                        enable_integrity_monitoring = True, 
                        enable_secure_boot = True, ), 
                    upgrade_settings = openapi_client.models.upgrade_settings.UpgradeSettings(
                        blue_green_settings = openapi_client.models.blue_green_settings.BlueGreenSettings(
                            node_pool_soak_duration = '', 
                            standard_rollout_policy = openapi_client.models.standard_rollout_policy.StandardRolloutPolicy(
                                batch_node_count = 56, 
                                batch_percentage = 1.337, 
                                batch_soak_duration = '', ), ), 
                        max_surge = 56, 
                        max_unavailable = 56, 
                        strategy = 'NODE_POOL_UPDATE_STRATEGY_UNSPECIFIED', ), ),
                autoscaling_profile = 'PROFILE_UNSPECIFIED',
                enable_node_autoprovisioning = True,
                resource_limits = [
                    openapi_client.models.resource_limit.ResourceLimit(
                        maximum = '', 
                        minimum = '', 
                        resource_type = '', )
                    ]
            )
        else:
            return ClusterAutoscaling(
        )
        """

    def testClusterAutoscaling(self):
        """Test ClusterAutoscaling"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
