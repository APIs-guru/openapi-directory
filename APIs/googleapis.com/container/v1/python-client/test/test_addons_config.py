# coding: utf-8

"""
    Kubernetes Engine API

    Builds and manages container-based applications, powered by the open source Kubernetes technology.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.addons_config import AddonsConfig

class TestAddonsConfig(unittest.TestCase):
    """AddonsConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddonsConfig:
        """Test AddonsConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddonsConfig`
        """
        model = AddonsConfig()
        if include_optional:
            return AddonsConfig(
                cloud_run_config = openapi_client.models.cloud_run_config.CloudRunConfig(
                    disabled = True, 
                    load_balancer_type = 'LOAD_BALANCER_TYPE_UNSPECIFIED', ),
                config_connector_config = openapi_client.models.config_connector_config.ConfigConnectorConfig(
                    enabled = True, ),
                dns_cache_config = openapi_client.models.dns_cache_config.DnsCacheConfig(
                    enabled = True, ),
                gce_persistent_disk_csi_driver_config = openapi_client.models.gce_persistent_disk_csi_driver_config.GcePersistentDiskCsiDriverConfig(
                    enabled = True, ),
                gcp_filestore_csi_driver_config = openapi_client.models.gcp_filestore_csi_driver_config.GcpFilestoreCsiDriverConfig(
                    enabled = True, ),
                gcs_fuse_csi_driver_config = openapi_client.models.gcs_fuse_csi_driver_config.GcsFuseCsiDriverConfig(
                    enabled = True, ),
                gke_backup_agent_config = openapi_client.models.gke_backup_agent_config.GkeBackupAgentConfig(
                    enabled = True, ),
                horizontal_pod_autoscaling = openapi_client.models.horizontal_pod_autoscaling.HorizontalPodAutoscaling(
                    disabled = True, ),
                http_load_balancing = openapi_client.models.http_load_balancing.HttpLoadBalancing(
                    disabled = True, ),
                kubernetes_dashboard = openapi_client.models.kubernetes_dashboard.KubernetesDashboard(
                    disabled = True, ),
                network_policy_config = openapi_client.models.network_policy_config.NetworkPolicyConfig(
                    disabled = True, ),
                stateful_ha_config = openapi_client.models.stateful_ha_config.StatefulHAConfig(
                    enabled = True, )
            )
        else:
            return AddonsConfig(
        )
        """

    def testAddonsConfig(self):
        """Test AddonsConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
