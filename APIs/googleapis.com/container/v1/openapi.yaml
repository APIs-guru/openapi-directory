openapi: 3.0.0
servers:
  - url: https://container.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Builds and manages container-based applications, powered by the open source Kubernetes technology.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Kubernetes Engine API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - format: google
      url: https://container.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: container
externalDocs:
  url: https://cloud.google.com/container-engine/
tags:
  - name: projects
paths:
  /v1/projects/{projectId}/zones/{zone}/clusters:
    get:
      description: Lists all clusters owned by a project in either the specified zone or all zones.
      operationId: container.projects.zones.clusters.list
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides, or "-" for all zones. This field has been deprecated and replaced by the parent field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: The parent (project and location) where the clusters will be listed. Specified in the format `projects/*/locations/*`. Location "-" matches all zones and all regions.
          in: query
          name: parent
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListClustersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a cluster, consisting of the specified number and type of Google Compute Engine instances. By default, the cluster is created in the project's [default network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks). One firewall is added for the cluster. After cluster creation, the Kubelet creates routes for each node to allow the containers on that node to communicate with all other instances in the cluster. Finally, an entry is added to the project's global metadata indicating which CIDR range the cluster is using.
      operationId: container.projects.zones.clusters.create
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateClusterRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:
    delete:
      description: Deletes the cluster, including the Kubernetes endpoint and all worker nodes. Firewalls and routes that were configured during cluster creation are also deleted. Other Google Compute Engine resources that might be in use by the cluster, such as load balancer resources, are not deleted if they weren't present when the cluster was initially created.
      operationId: container.projects.zones.clusters.delete
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster to delete. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
        - description: The name (project, location, cluster) of the cluster to delete. Specified in the format `projects/*/locations/*/clusters/*`.
          in: query
          name: name
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets the details of a specific cluster.
      operationId: container.projects.zones.clusters.get
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster to retrieve. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
        - description: The name (project, location, cluster) of the cluster to retrieve. Specified in the format `projects/*/locations/*/clusters/*`.
          in: query
          name: name
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cluster"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    put:
      description: Updates the settings of a specific cluster.
      operationId: container.projects.zones.clusters.update
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateClusterRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/addons:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the addons for a specific cluster.
      operationId: container.projects.zones.clusters.addons
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetAddonsConfigRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/legacyAbac:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Enables or disables the ABAC authorization mechanism on a cluster.
      operationId: container.projects.zones.clusters.legacyAbac
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetLegacyAbacRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/locations:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the locations for a specific cluster. Deprecated. Use [projects.locations.clusters.update](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters/update) instead.
      operationId: container.projects.zones.clusters.locations
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetLocationsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/logging:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the logging service for a specific cluster.
      operationId: container.projects.zones.clusters.logging
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetLoggingServiceRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/master:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates the master for a specific cluster.
      operationId: container.projects.zones.clusters.master
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMasterRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/monitoring:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the monitoring service for a specific cluster.
      operationId: container.projects.zones.clusters.monitoring
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetMonitoringServiceRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools:
    get:
      description: Lists the node pools for a cluster.
      operationId: container.projects.zones.clusters.nodePools.list
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster. This field has been deprecated and replaced by the parent field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
        - description: The parent (project, location, cluster name) where the node pools will be listed. Specified in the format `projects/*/locations/*/clusters/*`.
          in: query
          name: parent
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListNodePoolsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a node pool for a cluster.
      operationId: container.projects.zones.clusters.nodePools.create
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster. This field has been deprecated and replaced by the parent field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateNodePoolRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}:
    delete:
      description: Deletes a node pool from a cluster.
      operationId: container.projects.zones.clusters.nodePools.delete
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the node pool to delete. This field has been deprecated and replaced by the name field.
          in: path
          name: nodePoolId
          required: true
          schema:
            type: string
        - description: The name (project, location, cluster, node pool id) of the node pool to delete. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
          in: query
          name: name
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Retrieves the requested node pool.
      operationId: container.projects.zones.clusters.nodePools.get
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the node pool. This field has been deprecated and replaced by the name field.
          in: path
          name: nodePoolId
          required: true
          schema:
            type: string
        - description: The name (project, location, cluster, node pool id) of the node pool to get. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
          in: query
          name: name
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodePool"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/autoscaling:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the autoscaling settings for the specified node pool.
      operationId: container.projects.zones.clusters.nodePools.autoscaling
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the node pool to upgrade. This field has been deprecated and replaced by the name field.
          in: path
          name: nodePoolId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetNodePoolAutoscalingRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/setManagement:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the NodeManagement options for a node pool.
      operationId: container.projects.zones.clusters.nodePools.setManagement
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the node pool to update. This field has been deprecated and replaced by the name field.
          in: path
          name: nodePoolId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetNodePoolManagementRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/setSize:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the size for a specific node pool. The new size will be used for all replicas, including future replicas created by modifying NodePool.locations.
      operationId: container.projects.zones.clusters.nodePools.setSize
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the node pool to update. This field has been deprecated and replaced by the name field.
          in: path
          name: nodePoolId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetNodePoolSizeRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/update:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates the version and/or image type for the specified node pool.
      operationId: container.projects.zones.clusters.nodePools.update
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the node pool to upgrade. This field has been deprecated and replaced by the name field.
          in: path
          name: nodePoolId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateNodePoolRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}:rollback:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Rolls back a previously Aborted or Failed NodePool upgrade. This makes no changes if the last upgrade successfully completed.
      operationId: container.projects.zones.clusters.nodePools.rollback
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster to rollback. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the node pool to rollback. This field has been deprecated and replaced by the name field.
          in: path
          name: nodePoolId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RollbackNodePoolUpgradeRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/resourceLabels:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets labels on a cluster.
      operationId: container.projects.zones.clusters.resourceLabels
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetLabelsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:completeIpRotation:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Completes master IP rotation.
      operationId: container.projects.zones.clusters.completeIpRotation
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompleteIPRotationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setMaintenancePolicy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the maintenance policy for a cluster.
      operationId: container.projects.zones.clusters.setMaintenancePolicy
      parameters:
        - description: Required. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Required. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Required. The name of the cluster to update.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetMaintenancePolicyRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setMasterAuth:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets master auth materials. Currently supports changing the admin password or a specific cluster, either via password generation or explicitly setting the password.
      operationId: container.projects.zones.clusters.setMasterAuth
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetMasterAuthRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setNetworkPolicy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Enables or disables Network Policy for a cluster.
      operationId: container.projects.zones.clusters.setNetworkPolicy
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetNetworkPolicyRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:startIpRotation:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts master IP rotation.
      operationId: container.projects.zones.clusters.startIpRotation
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.
          in: path
          name: clusterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartIPRotationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/operations:
    get:
      description: Lists all operations in a project in a specific zone or all zones.
      operationId: container.projects.zones.operations.list
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) to return operations for, or `-` for all zones. This field has been deprecated and replaced by the parent field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: The parent (project and location) where the operations will be listed. Specified in the format `projects/*/locations/*`. Location "-" matches all zones and all regions.
          in: query
          name: parent
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/projects/{projectId}/zones/{zone}/operations/{operationId}:
    get:
      description: Gets the specified operation.
      operationId: container.projects.zones.operations.get
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The server-assigned `name` of the operation. This field has been deprecated and replaced by the name field.
          in: path
          name: operationId
          required: true
          schema:
            type: string
        - description: The name (project, location, operation id) of the operation to get. Specified in the format `projects/*/locations/*/operations/*`.
          in: query
          name: name
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/projects/{projectId}/zones/{zone}/operations/{operationId}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Cancels the specified operation.
      operationId: container.projects.zones.operations.cancel
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the operation resides. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: Deprecated. The server-assigned `name` of the operation. This field has been deprecated and replaced by the name field.
          in: path
          name: operationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOperationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/zones/{zone}/serverconfig:
    get:
      description: Returns configuration info about the Google Kubernetes Engine service.
      operationId: container.projects.zones.getServerconfig
      parameters:
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) to return operations for. This field has been deprecated and replaced by the name field.
          in: path
          name: zone
          required: true
          schema:
            type: string
        - description: The name (project and location) of the server config to get, specified in the format `projects/*/locations/*`.
          in: query
          name: name
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerConfig"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:
    delete:
      description: Deletes a node pool from a cluster.
      operationId: container.projects.locations.clusters.nodePools.delete
      parameters:
        - description: The name (project, location, cluster, node pool id) of the node pool to delete. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.
          in: query
          name: clusterId
          schema:
            type: string
        - description: Deprecated. The name of the node pool to delete. This field has been deprecated and replaced by the name field.
          in: query
          name: nodePoolId
          schema:
            type: string
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: query
          name: projectId
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: query
          name: zone
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets the specified operation.
      operationId: container.projects.locations.operations.get
      parameters:
        - description: The name (project, location, operation id) of the operation to get. Specified in the format `projects/*/locations/*/operations/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Deprecated. The server-assigned `name` of the operation. This field has been deprecated and replaced by the name field.
          in: query
          name: operationId
          schema:
            type: string
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: query
          name: projectId
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          in: query
          name: zone
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    put:
      description: Updates the version and/or image type for the specified node pool.
      operationId: container.projects.locations.clusters.nodePools.update
      parameters:
        - description: The name (project, location, cluster, node pool) of the node pool to update. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateNodePoolRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}/serverConfig:
    get:
      description: Returns configuration info about the Google Kubernetes Engine service.
      operationId: container.projects.locations.getServerConfig
      parameters:
        - description: The name (project and location) of the server config to get, specified in the format `projects/*/locations/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          in: query
          name: projectId
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) to return operations for. This field has been deprecated and replaced by the name field.
          in: query
          name: zone
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerConfig"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Cancels the specified operation.
      operationId: container.projects.locations.operations.cancel
      parameters:
        - description: The name (project, location, operation id) of the operation to cancel. Specified in the format `projects/*/locations/*/operations/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOperationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:checkAutopilotCompatibility:
    get:
      description: Checks the cluster compatibility with Autopilot mode, and returns a list of compatibility issues.
      operationId: container.projects.locations.clusters.checkAutopilotCompatibility
      parameters:
        - description: The name (project, location, cluster) of the cluster to retrieve. Specified in the format `projects/*/locations/*/clusters/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckAutopilotCompatibilityResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:completeIpRotation:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Completes master IP rotation.
      operationId: container.projects.locations.clusters.completeIpRotation
      parameters:
        - description: The name (project, location, cluster name) of the cluster to complete IP rotation. Specified in the format `projects/*/locations/*/clusters/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompleteIPRotationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:completeUpgrade:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: CompleteNodePoolUpgrade will signal an on-going node pool upgrade to complete.
      operationId: container.projects.locations.clusters.nodePools.completeUpgrade
      parameters:
        - description: The name (project, location, cluster, node pool id) of the node pool to complete upgrade. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompleteNodePoolUpgradeRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:rollback:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Rolls back a previously Aborted or Failed NodePool upgrade. This makes no changes if the last upgrade successfully completed.
      operationId: container.projects.locations.clusters.nodePools.rollback
      parameters:
        - description: The name (project, location, cluster, node pool id) of the node poll to rollback upgrade. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RollbackNodePoolUpgradeRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:setAddons:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the addons for a specific cluster.
      operationId: container.projects.locations.clusters.setAddons
      parameters:
        - description: The name (project, location, cluster) of the cluster to set addons. Specified in the format `projects/*/locations/*/clusters/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetAddonsConfigRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:setAutoscaling:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the autoscaling settings for the specified node pool.
      operationId: container.projects.locations.clusters.nodePools.setAutoscaling
      parameters:
        - description: The name (project, location, cluster, node pool) of the node pool to set autoscaler settings. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetNodePoolAutoscalingRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:setLegacyAbac:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Enables or disables the ABAC authorization mechanism on a cluster.
      operationId: container.projects.locations.clusters.setLegacyAbac
      parameters:
        - description: The name (project, location, cluster name) of the cluster to set legacy abac. Specified in the format `projects/*/locations/*/clusters/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetLegacyAbacRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:setLocations:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the locations for a specific cluster. Deprecated. Use [projects.locations.clusters.update](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters/update) instead.
      operationId: container.projects.locations.clusters.setLocations
      parameters:
        - description: The name (project, location, cluster) of the cluster to set locations. Specified in the format `projects/*/locations/*/clusters/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetLocationsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:setLogging:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the logging service for a specific cluster.
      operationId: container.projects.locations.clusters.setLogging
      parameters:
        - description: The name (project, location, cluster) of the cluster to set logging. Specified in the format `projects/*/locations/*/clusters/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetLoggingServiceRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:setMaintenancePolicy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the maintenance policy for a cluster.
      operationId: container.projects.locations.clusters.setMaintenancePolicy
      parameters:
        - description: The name (project, location, cluster name) of the cluster to set maintenance policy. Specified in the format `projects/*/locations/*/clusters/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetMaintenancePolicyRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:setManagement:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the NodeManagement options for a node pool.
      operationId: container.projects.locations.clusters.nodePools.setManagement
      parameters:
        - description: The name (project, location, cluster, node pool id) of the node pool to set management properties. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetNodePoolManagementRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:setMasterAuth:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets master auth materials. Currently supports changing the admin password or a specific cluster, either via password generation or explicitly setting the password.
      operationId: container.projects.locations.clusters.setMasterAuth
      parameters:
        - description: The name (project, location, cluster) of the cluster to set auth. Specified in the format `projects/*/locations/*/clusters/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetMasterAuthRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:setMonitoring:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the monitoring service for a specific cluster.
      operationId: container.projects.locations.clusters.setMonitoring
      parameters:
        - description: The name (project, location, cluster) of the cluster to set monitoring. Specified in the format `projects/*/locations/*/clusters/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetMonitoringServiceRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:setNetworkPolicy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Enables or disables Network Policy for a cluster.
      operationId: container.projects.locations.clusters.setNetworkPolicy
      parameters:
        - description: The name (project, location, cluster name) of the cluster to set networking policy. Specified in the format `projects/*/locations/*/clusters/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetNetworkPolicyRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:setResourceLabels:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets labels on a cluster.
      operationId: container.projects.locations.clusters.setResourceLabels
      parameters:
        - description: The name (project, location, cluster name) of the cluster to set labels. Specified in the format `projects/*/locations/*/clusters/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetLabelsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:setSize:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the size for a specific node pool. The new size will be used for all replicas, including future replicas created by modifying NodePool.locations.
      operationId: container.projects.locations.clusters.nodePools.setSize
      parameters:
        - description: The name (project, location, cluster, node pool id) of the node pool to set size. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetNodePoolSizeRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:startIpRotation:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts master IP rotation.
      operationId: container.projects.locations.clusters.startIpRotation
      parameters:
        - description: The name (project, location, cluster name) of the cluster to start IP rotation. Specified in the format `projects/*/locations/*/clusters/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartIPRotationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:updateMaster:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates the master for a specific cluster.
      operationId: container.projects.locations.clusters.updateMaster
      parameters:
        - description: The name (project, location, cluster) of the cluster to update. Specified in the format `projects/*/locations/*/clusters/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMasterRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/.well-known/openid-configuration:
    get:
      description: Gets the OIDC discovery document for the cluster. See the [OpenID Connect Discovery 1.0 specification](https://openid.net/specs/openid-connect-discovery-1_0.html) for details.
      operationId: container.projects.locations.clusters.well-known.getOpenid-configuration
      parameters:
        - description: The cluster (project, location, cluster name) to get the discovery document for. Specified in the format `projects/*/locations/*/clusters/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOpenIDConfigResponse"
          description: Successful response
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/aggregated/usableSubnetworks:
    get:
      description: Lists subnetworks that are usable for creating clusters in a project.
      operationId: container.projects.aggregated.usableSubnetworks.list
      parameters:
        - description: The parent project where subnetworks are usable. Specified in the format `projects/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'Filtering currently only supports equality on the networkProjectId and must be in the form: "networkProjectId=[PROJECTID]", where `networkProjectId` is the project which owns the listed subnetworks. This defaults to the parent project ID.'
          in: query
          name: filter
          schema:
            type: string
        - description: "The max number of results per page that should be returned. If the number of available results is larger than `page_size`, a `next_page_token` is returned which can be used to get the next page of results in subsequent requests. Acceptable values are 0 to 500, inclusive. (Default: 500)"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Specifies a page token to use. Set this to the nextPageToken returned by previous list requests to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUsableSubnetworksResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/clusters:
    get:
      description: Lists all clusters owned by a project in either the specified zone or all zones.
      operationId: container.projects.locations.clusters.list
      parameters:
        - description: The parent (project and location) where the clusters will be listed. Specified in the format `projects/*/locations/*`. Location "-" matches all zones and all regions.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field.
          in: query
          name: projectId
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides, or "-" for all zones. This field has been deprecated and replaced by the parent field.
          in: query
          name: zone
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListClustersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a cluster, consisting of the specified number and type of Google Compute Engine instances. By default, the cluster is created in the project's [default network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks). One firewall is added for the cluster. After cluster creation, the Kubelet creates routes for each node to allow the containers on that node to communicate with all other instances in the cluster. Finally, an entry is added to the project's global metadata indicating which CIDR range the cluster is using.
      operationId: container.projects.locations.clusters.create
      parameters:
        - description: The parent (project and location) where the cluster will be created. Specified in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateClusterRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/jwks:
    get:
      description: Gets the public component of the cluster signing keys in JSON Web Key format.
      operationId: container.projects.locations.clusters.getJwks
      parameters:
        - description: The cluster (project, location, cluster name) to get keys for. Specified in the format `projects/*/locations/*/clusters/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetJSONWebKeysResponse"
          description: Successful response
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/nodePools:
    get:
      description: Lists the node pools for a cluster.
      operationId: container.projects.locations.clusters.nodePools.list
      parameters:
        - description: The parent (project, location, cluster name) where the node pools will be listed. Specified in the format `projects/*/locations/*/clusters/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Deprecated. The name of the cluster. This field has been deprecated and replaced by the parent field.
          in: query
          name: clusterId
          schema:
            type: string
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field.
          in: query
          name: projectId
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field.
          in: query
          name: zone
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListNodePoolsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a node pool for a cluster.
      operationId: container.projects.locations.clusters.nodePools.create
      parameters:
        - description: The parent (project, location, cluster name) where the node pool will be created. Specified in the format `projects/*/locations/*/clusters/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateNodePoolRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/operations:
    get:
      description: Lists all operations in a project in a specific zone or all zones.
      operationId: container.projects.locations.operations.list
      parameters:
        - description: The parent (project and location) where the operations will be listed. Specified in the format `projects/*/locations/*`. Location "-" matches all zones and all regions.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field.
          in: query
          name: projectId
          schema:
            type: string
        - description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) to return operations for, or `-` for all zones. This field has been deprecated and replaced by the parent field.
          in: query
          name: zone
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AcceleratorConfig:
      description: AcceleratorConfig represents a Hardware Accelerator request.
      properties:
        acceleratorCount:
          description: The number of the accelerator cards exposed to an instance.
          format: int64
          type: string
        acceleratorType:
          description: The accelerator type resource name. List of supported accelerators [here](https://cloud.google.com/compute/docs/gpus)
          type: string
        gpuDriverInstallationConfig:
          $ref: "#/components/schemas/GPUDriverInstallationConfig"
          description: The configuration for auto installation of GPU driver.
        gpuPartitionSize:
          description: Size of partitions to create on the GPU. Valid values are described in the NVIDIA [mig user guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
          type: string
        gpuSharingConfig:
          $ref: "#/components/schemas/GPUSharingConfig"
          description: The configuration for GPU sharing options.
      type: object
    AdditionalNodeNetworkConfig:
      description: AdditionalNodeNetworkConfig is the configuration for additional node networks within the NodeNetworkConfig message
      properties:
        network:
          description: Name of the VPC where the additional interface belongs
          type: string
        subnetwork:
          description: Name of the subnetwork where the additional interface belongs
          type: string
      type: object
    AdditionalPodNetworkConfig:
      description: AdditionalPodNetworkConfig is the configuration for additional pod networks within the NodeNetworkConfig message
      properties:
        maxPodsPerNode:
          $ref: "#/components/schemas/MaxPodsConstraint"
          description: The maximum number of pods per node which use this pod network
        secondaryPodRange:
          description: The name of the secondary range on the subnet which provides IP address for this pod range
          type: string
        subnetwork:
          description: Name of the subnetwork where the additional pod network belongs
          type: string
      type: object
    AdditionalPodRangesConfig:
      description: AdditionalPodRangesConfig is the configuration for additional pod secondary ranges supporting the ClusterUpdate message.
      properties:
        podRangeInfo:
          description: Output only. [Output only] Information for additional pod range.
          items:
            $ref: "#/components/schemas/RangeInfo"
          readOnly: true
          type: array
        podRangeNames:
          description: Name for pod secondary ipv4 range which has the actual range defined ahead.
          items:
            type: string
          type: array
      type: object
    AddonsConfig:
      description: Configuration for the addons that can be automatically spun up in the cluster, enabling additional functionality.
      properties:
        cloudRunConfig:
          $ref: "#/components/schemas/CloudRunConfig"
          description: Configuration for the Cloud Run addon, which allows the user to use a managed Knative service.
        configConnectorConfig:
          $ref: "#/components/schemas/ConfigConnectorConfig"
          description: Configuration for the ConfigConnector add-on, a Kubernetes extension to manage hosted GCP services through the Kubernetes API
        dnsCacheConfig:
          $ref: "#/components/schemas/DnsCacheConfig"
          description: Configuration for NodeLocalDNS, a dns cache running on cluster nodes
        gcePersistentDiskCsiDriverConfig:
          $ref: "#/components/schemas/GcePersistentDiskCsiDriverConfig"
          description: Configuration for the Compute Engine Persistent Disk CSI driver.
        gcpFilestoreCsiDriverConfig:
          $ref: "#/components/schemas/GcpFilestoreCsiDriverConfig"
          description: Configuration for the GCP Filestore CSI driver.
        gcsFuseCsiDriverConfig:
          $ref: "#/components/schemas/GcsFuseCsiDriverConfig"
          description: Configuration for the Cloud Storage Fuse CSI driver.
        gkeBackupAgentConfig:
          $ref: "#/components/schemas/GkeBackupAgentConfig"
          description: Configuration for the Backup for GKE agent addon.
        horizontalPodAutoscaling:
          $ref: "#/components/schemas/HorizontalPodAutoscaling"
          description: Configuration for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods.
        httpLoadBalancing:
          $ref: "#/components/schemas/HttpLoadBalancing"
          description: Configuration for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.
        kubernetesDashboard:
          $ref: "#/components/schemas/KubernetesDashboard"
          deprecated: true
          description: "Configuration for the Kubernetes Dashboard. This addon is deprecated, and will be disabled in 1.15. It is recommended to use the Cloud Console to manage and monitor your Kubernetes clusters, workloads and applications. For more information, see: https://cloud.google.com/kubernetes-engine/docs/concepts/dashboards"
        networkPolicyConfig:
          $ref: "#/components/schemas/NetworkPolicyConfig"
          description: Configuration for NetworkPolicy. This only tracks whether the addon is enabled or not on the Master, it does not track whether network policy is enabled for the nodes.
        statefulHaConfig:
          $ref: "#/components/schemas/StatefulHAConfig"
          description: Optional. Configuration for the StatefulHA add-on.
      type: object
    AdvancedDatapathObservabilityConfig:
      description: AdvancedDatapathObservabilityConfig specifies configuration of observability features of advanced datapath.
      properties:
        enableMetrics:
          description: Expose flow metrics on nodes
          type: boolean
        enableRelay:
          description: Enable Relay component
          type: boolean
        relayMode:
          description: Method used to make Relay available
          enum:
            - RELAY_MODE_UNSPECIFIED
            - DISABLED
            - INTERNAL_VPC_LB
            - EXTERNAL_LB
          type: string
      type: object
    AdvancedMachineFeatures:
      description: Specifies options for controlling advanced machine features.
      properties:
        threadsPerCore:
          description: The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
          format: int64
          type: string
      type: object
    AuthenticatorGroupsConfig:
      description: Configuration for returning group information from authenticators.
      properties:
        enabled:
          description: Whether this cluster should return group membership lookups during authentication using a group of security groups.
          type: boolean
        securityGroup:
          description: The name of the security group-of-groups to be used. Only relevant if enabled = true.
          type: string
      type: object
    AutoUpgradeOptions:
      description: AutoUpgradeOptions defines the set of options for the user to control how the Auto Upgrades will proceed.
      properties:
        autoUpgradeStartTime:
          description: "[Output only] This field is set when upgrades are about to commence with the approximate start time for the upgrades, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."
          type: string
        description:
          description: "[Output only] This field is set when upgrades are about to commence with the description of the upgrade."
          type: string
      type: object
    Autopilot:
      description: Autopilot is the configuration for Autopilot settings on the cluster.
      properties:
        enabled:
          description: Enable Autopilot
          type: boolean
        workloadPolicyConfig:
          $ref: "#/components/schemas/WorkloadPolicyConfig"
          description: Workload policy configuration for Autopilot.
      type: object
    AutopilotCompatibilityIssue:
      description: AutopilotCompatibilityIssue contains information about a specific compatibility issue with Autopilot mode.
      properties:
        constraintType:
          description: The constraint type of the issue.
          type: string
        description:
          description: The description of the issue.
          type: string
        documentationUrl:
          description: A URL to a public documnetation, which addresses resolving this issue.
          type: string
        incompatibilityType:
          description: The incompatibility type of this issue.
          enum:
            - UNSPECIFIED
            - INCOMPATIBILITY
            - ADDITIONAL_CONFIG_REQUIRED
            - PASSED_WITH_OPTIONAL_CONFIG
          type: string
        lastObservation:
          description: The last time when this issue was observed.
          format: google-datetime
          type: string
        subjects:
          description: The name of the resources which are subject to this issue.
          items:
            type: string
          type: array
      type: object
    AutoprovisioningNodePoolDefaults:
      description: AutoprovisioningNodePoolDefaults contains defaults for a node pool created by NAP.
      properties:
        bootDiskKmsKey:
          description: "The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption"
          type: string
        diskSizeGb:
          description: Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.
          format: int32
          type: integer
        diskType:
          description: Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced') If unspecified, the default disk type is 'pd-standard'
          type: string
        imageType:
          description: The image type to use for NAP created node. Please see https://cloud.google.com/kubernetes-engine/docs/concepts/node-images for available image types.
          type: string
        insecureKubeletReadonlyPortEnabled:
          description: Enable or disable Kubelet read only port.
          type: boolean
        management:
          $ref: "#/components/schemas/NodeManagement"
          description: Specifies the node management options for NAP created node-pools.
        minCpuPlatform:
          deprecated: true
          description: 'Deprecated. Minimum CPU platform to be used for NAP created node pools. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: Intel Haswell or minCpuPlatform: Intel Sandy Bridge. For more information, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform). This field is deprecated, min_cpu_platform should be specified using `cloud.google.com/requested-min-cpu-platform` label selector on the pod. To unset the min cpu platform field pass "automatic" as field value.'
          type: string
        oauthScopes:
          description: Scopes that are used by NAP when creating node pools.
          items:
            type: string
          type: array
        serviceAccount:
          description: The Google Cloud Platform Service Account to be used by the node VMs.
          type: string
        shieldedInstanceConfig:
          $ref: "#/components/schemas/ShieldedInstanceConfig"
          description: Shielded Instance options.
        upgradeSettings:
          $ref: "#/components/schemas/UpgradeSettings"
          description: Specifies the upgrade settings for NAP created node pools
      type: object
    BestEffortProvisioning:
      description: Best effort provisioning.
      properties:
        enabled:
          description: When this is enabled, cluster/node pool creations will ignore non-fatal errors like stockout to best provision as many nodes as possible right now and eventually bring up all target number of nodes
          type: boolean
        minProvisionNodes:
          description: Minimum number of nodes to be provisioned to be considered as succeeded, and the rest of nodes will be provisioned gradually and eventually when stockout issue has been resolved.
          format: int32
          type: integer
      type: object
    BigQueryDestination:
      description: Parameters for using BigQuery as the destination of resource usage export.
      properties:
        datasetId:
          description: The ID of a BigQuery Dataset.
          type: string
      type: object
    BinaryAuthorization:
      description: Configuration for Binary Authorization.
      properties:
        enabled:
          deprecated: true
          description: This field is deprecated. Leave this unset and instead configure BinaryAuthorization using evaluation_mode. If evaluation_mode is set to anything other than EVALUATION_MODE_UNSPECIFIED, this field is ignored.
          type: boolean
        evaluationMode:
          description: Mode of operation for binauthz policy evaluation. If unspecified, defaults to DISABLED.
          enum:
            - EVALUATION_MODE_UNSPECIFIED
            - DISABLED
            - PROJECT_SINGLETON_POLICY_ENFORCE
          type: string
      type: object
    BlueGreenInfo:
      description: Information relevant to blue-green upgrade.
      properties:
        blueInstanceGroupUrls:
          description: The resource URLs of the [managed instance groups] (/compute/docs/instance-groups/creating-groups-of-managed-instances) associated with blue pool.
          items:
            type: string
          type: array
        bluePoolDeletionStartTime:
          description: Time to start deleting blue pool to complete blue-green upgrade, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
        greenInstanceGroupUrls:
          description: The resource URLs of the [managed instance groups] (/compute/docs/instance-groups/creating-groups-of-managed-instances) associated with green pool.
          items:
            type: string
          type: array
        greenPoolVersion:
          description: Version of green pool.
          type: string
        phase:
          description: Current blue-green upgrade phase.
          enum:
            - PHASE_UNSPECIFIED
            - UPDATE_STARTED
            - CREATING_GREEN_POOL
            - CORDONING_BLUE_POOL
            - DRAINING_BLUE_POOL
            - NODE_POOL_SOAKING
            - DELETING_BLUE_POOL
            - ROLLBACK_STARTED
          type: string
      type: object
    BlueGreenSettings:
      description: Settings for blue-green upgrade.
      properties:
        nodePoolSoakDuration:
          description: Time needed after draining entire blue pool. After this period, blue pool will be cleaned up.
          format: google-duration
          type: string
        standardRolloutPolicy:
          $ref: "#/components/schemas/StandardRolloutPolicy"
          description: Standard policy for the blue-green upgrade.
      type: object
    CancelOperationRequest:
      description: CancelOperationRequest cancels a single operation.
      properties:
        name:
          description: The name (project, location, operation id) of the operation to cancel. Specified in the format `projects/*/locations/*/operations/*`.
          type: string
        operationId:
          deprecated: true
          description: Deprecated. The server-assigned `name` of the operation. This field has been deprecated and replaced by the name field.
          type: string
        projectId:
          deprecated: true
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        zone:
          deprecated: true
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the operation resides. This field has been deprecated and replaced by the name field.
          type: string
      type: object
    CheckAutopilotCompatibilityResponse:
      description: CheckAutopilotCompatibilityResponse has a list of compatibility issues.
      properties:
        issues:
          description: The list of issues for the given operation.
          items:
            $ref: "#/components/schemas/AutopilotCompatibilityIssue"
          type: array
        summary:
          description: The summary of the autopilot compatibility response.
          type: string
      type: object
    CidrBlock:
      description: CidrBlock contains an optional name and one CIDR block.
      properties:
        cidrBlock:
          description: cidr_block must be specified in CIDR notation.
          type: string
        displayName:
          description: display_name is an optional field for users to identify CIDR blocks.
          type: string
      type: object
    ClientCertificateConfig:
      description: Configuration for client certificates on the cluster.
      properties:
        issueClientCertificate:
          description: Issue a client certificate.
          type: boolean
      type: object
    CloudRunConfig:
      description: Configuration options for the Cloud Run feature.
      properties:
        disabled:
          description: Whether Cloud Run addon is enabled for this cluster.
          type: boolean
        loadBalancerType:
          description: Which load balancer type is installed for Cloud Run.
          enum:
            - LOAD_BALANCER_TYPE_UNSPECIFIED
            - LOAD_BALANCER_TYPE_EXTERNAL
            - LOAD_BALANCER_TYPE_INTERNAL
          type: string
      type: object
    Cluster:
      description: A Google Kubernetes Engine cluster.
      properties:
        addonsConfig:
          $ref: "#/components/schemas/AddonsConfig"
          description: Configurations for the various addons available to run in the cluster.
        authenticatorGroupsConfig:
          $ref: "#/components/schemas/AuthenticatorGroupsConfig"
          description: Configuration controlling RBAC group membership information.
        autopilot:
          $ref: "#/components/schemas/Autopilot"
          description: Autopilot configuration for the cluster.
        autoscaling:
          $ref: "#/components/schemas/ClusterAutoscaling"
          description: Cluster-level autoscaling configuration.
        binaryAuthorization:
          $ref: "#/components/schemas/BinaryAuthorization"
          description: Configuration for Binary Authorization.
        clusterIpv4Cidr:
          description: The IP address range of the container pods in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`). Leave blank to have one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
          type: string
        conditions:
          description: Which conditions caused the current cluster state.
          items:
            $ref: "#/components/schemas/StatusCondition"
          type: array
        confidentialNodes:
          $ref: "#/components/schemas/ConfidentialNodes"
          description: Configuration of Confidential Nodes. All the nodes in the cluster will be Confidential VM once enabled.
        costManagementConfig:
          $ref: "#/components/schemas/CostManagementConfig"
          description: Configuration for the fine-grained cost management feature.
        createTime:
          description: "[Output only] The time the cluster was created, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."
          type: string
        currentMasterVersion:
          description: "[Output only] The current software version of the master endpoint."
          type: string
        currentNodeCount:
          deprecated: true
          description: "[Output only] The number of nodes currently in the cluster. Deprecated. Call Kubernetes API directly to retrieve node information."
          format: int32
          type: integer
        currentNodeVersion:
          deprecated: true
          description: "[Output only] Deprecated, use [NodePools.version](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools) instead. The current version of the node software components. If they are currently at multiple versions because they're in the process of being upgraded, this reflects the minimum version of all nodes."
          type: string
        databaseEncryption:
          $ref: "#/components/schemas/DatabaseEncryption"
          description: Configuration of etcd encryption.
        defaultMaxPodsConstraint:
          $ref: "#/components/schemas/MaxPodsConstraint"
          description: The default constraint on the maximum number of pods that can be run simultaneously on a node in the node pool of this cluster. Only honored if cluster created with IP Alias support.
        description:
          description: An optional description of this cluster.
          type: string
        enableK8sBetaApis:
          $ref: "#/components/schemas/K8sBetaAPIConfig"
          description: Beta APIs Config
        enableKubernetesAlpha:
          description: Kubernetes alpha features are enabled on this cluster. This includes alpha API groups (e.g. v1alpha1) and features that may not be production ready in the kubernetes version of the master and nodes. The cluster has no SLA for uptime and master/node upgrades are disabled. Alpha enabled clusters are automatically deleted thirty days after creation.
          type: boolean
        enableTpu:
          description: Enable the ability to use Cloud TPUs in this cluster.
          type: boolean
        endpoint:
          description: "[Output only] The IP address of this cluster's master endpoint. The endpoint can be accessed from the internet at `https://username:password@endpoint/`. See the `masterAuth` property of this resource for username and password information."
          type: string
        enterpriseConfig:
          $ref: "#/components/schemas/EnterpriseConfig"
          description: GKE Enterprise Configuration.
        etag:
          description: This checksum is computed by the server based on the value of cluster fields, and may be sent on update requests to ensure the client has an up-to-date value before proceeding.
          type: string
        expireTime:
          description: "[Output only] The time the cluster will be automatically deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."
          type: string
        fleet:
          $ref: "#/components/schemas/Fleet"
          description: Fleet information for the cluster.
        id:
          description: Output only. Unique id for the cluster.
          readOnly: true
          type: string
        identityServiceConfig:
          $ref: "#/components/schemas/IdentityServiceConfig"
          description: Configuration for Identity Service component.
        initialClusterVersion:
          description: 'The initial Kubernetes version for this cluster. Valid versions are those found in validMasterVersions returned by getServerConfig. The version can be upgraded over time; such upgrades are reflected in currentMasterVersion and currentNodeVersion. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "","-": picks the default Kubernetes version'
          type: string
        initialNodeCount:
          deprecated: true
          description: The number of nodes to create in this cluster. You must ensure that your Compute Engine [resource quota](https://cloud.google.com/compute/quotas) is sufficient for this number of instances. You must also have available firewall and routes quota. For requests, this field should only be used in lieu of a "node_pool" object, since this configuration (along with the "node_config") will be used to create a "NodePool" object with an auto-generated name. Do not use this and a node_pool at the same time. This field is deprecated, use node_pool.initial_node_count instead.
          format: int32
          type: integer
        instanceGroupUrls:
          deprecated: true
          description: Deprecated. Use node_pools.instance_group_urls.
          items:
            type: string
          type: array
        ipAllocationPolicy:
          $ref: "#/components/schemas/IPAllocationPolicy"
          description: Configuration for cluster IP allocation.
        labelFingerprint:
          description: The fingerprint of the set of labels for this cluster.
          type: string
        legacyAbac:
          $ref: "#/components/schemas/LegacyAbac"
          description: Configuration for the legacy ABAC authorization mode.
        location:
          description: "[Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which the cluster resides."
          type: string
        locations:
          description: "The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. This field provides a default value if [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) are not specified during node pool creation. Warning: changing cluster locations will update the [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) of all node pools and will result in nodes being added and/or removed."
          items:
            type: string
          type: array
        loggingConfig:
          $ref: "#/components/schemas/LoggingConfig"
          description: Logging configuration for the cluster.
        loggingService:
          description: "The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions."
          type: string
        maintenancePolicy:
          $ref: "#/components/schemas/MaintenancePolicy"
          description: Configure the maintenance policy for this cluster.
        masterAuth:
          $ref: "#/components/schemas/MasterAuth"
          description: 'The authentication information for accessing the master endpoint. If unspecified, the defaults are used: For clusters before v1.12, if master_auth is unspecified, `username` will be set to "admin", a random password will be generated, and a client certificate will be issued.'
        masterAuthorizedNetworksConfig:
          $ref: "#/components/schemas/MasterAuthorizedNetworksConfig"
          description: The configuration options for master authorized networks feature.
        meshCertificates:
          $ref: "#/components/schemas/MeshCertificates"
          description: Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
        monitoringConfig:
          $ref: "#/components/schemas/MonitoringConfig"
          description: Monitoring configuration for the cluster.
        monitoringService:
          description: 'The monitoring service the cluster should use to write metrics. Currently available options: * "monitoring.googleapis.com/kubernetes" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.'
          type: string
        name:
          description: "The name of this cluster. The name must be unique within this project and location (e.g. zone or region), and can be up to 40 characters with the following restrictions: * Lowercase letters, numbers, and hyphens only. * Must start with a letter. * Must end with a number or a letter."
          type: string
        network:
          description: The name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. If left unspecified, the `default` network will be used.
          type: string
        networkConfig:
          $ref: "#/components/schemas/NetworkConfig"
          description: Configuration for cluster networking.
        networkPolicy:
          $ref: "#/components/schemas/NetworkPolicy"
          description: Configuration options for the NetworkPolicy feature.
        nodeConfig:
          $ref: "#/components/schemas/NodeConfig"
          deprecated: true
          description: Parameters used in creating the cluster's nodes. For requests, this field should only be used in lieu of a "node_pool" object, since this configuration (along with the "initial_node_count") will be used to create a "NodePool" object with an auto-generated name. Do not use this and a node_pool at the same time. For responses, this field will be populated with the node configuration of the first node pool. (For configuration of each node pool, see `node_pool.config`) If unspecified, the defaults are used. This field is deprecated, use node_pool.config instead.
        nodeIpv4CidrSize:
          description: "[Output only] The size of the address space on each node for hosting containers. This is provisioned from within the `container_ipv4_cidr` range. This field will only be set when cluster is in route-based network mode."
          format: int32
          type: integer
        nodePoolAutoConfig:
          $ref: "#/components/schemas/NodePoolAutoConfig"
          description: Node pool configs that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled clusters.
        nodePoolDefaults:
          $ref: "#/components/schemas/NodePoolDefaults"
          description: Default NodePool settings for the entire cluster. These settings are overridden if specified on the specific NodePool object.
        nodePools:
          description: The node pools associated with this cluster. This field should not be set if "node_config" or "initial_node_count" are specified.
          items:
            $ref: "#/components/schemas/NodePool"
          type: array
        notificationConfig:
          $ref: "#/components/schemas/NotificationConfig"
          description: Notification configuration of the cluster.
        parentProductConfig:
          $ref: "#/components/schemas/ParentProductConfig"
          description: The configuration of the parent product of the cluster. This field is used by Google internal products that are built on top of the GKE cluster and take the ownership of the cluster.
        privateClusterConfig:
          $ref: "#/components/schemas/PrivateClusterConfig"
          description: Configuration for private cluster.
        releaseChannel:
          $ref: "#/components/schemas/ReleaseChannel"
          description: Release channel configuration. If left unspecified on cluster creation and a version is specified, the cluster is enrolled in the most mature release channel where the version is available (first checking STABLE, then REGULAR, and finally RAPID). Otherwise, if no release channel configuration and no version is specified, the cluster is enrolled in the REGULAR channel with its default version.
        resourceLabels:
          additionalProperties:
            type: string
          description: The resource labels for the cluster to use to annotate any related Google Compute Engine resources.
          type: object
        resourceUsageExportConfig:
          $ref: "#/components/schemas/ResourceUsageExportConfig"
          description: Configuration for exporting resource usages. Resource usage export is disabled when this config is unspecified.
        securityPostureConfig:
          $ref: "#/components/schemas/SecurityPostureConfig"
          description: Enable/Disable Security Posture API features for the cluster.
        selfLink:
          description: "[Output only] Server-defined URL for the resource."
          type: string
        servicesIpv4Cidr:
          description: "[Output only] The IP address range of the Kubernetes services in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`). Service addresses are typically put in the last `/16` from the container CIDR."
          type: string
        shieldedNodes:
          $ref: "#/components/schemas/ShieldedNodes"
          description: Shielded Nodes configuration.
        status:
          description: "[Output only] The current status of this cluster."
          enum:
            - STATUS_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - RECONCILING
            - STOPPING
            - ERROR
            - DEGRADED
          type: string
        statusMessage:
          deprecated: true
          description: "[Output only] Deprecated. Use conditions instead. Additional information about the current status of this cluster, if available."
          type: string
        subnetwork:
          description: The name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/subnetworks) to which the cluster is connected.
          type: string
        tpuIpv4CidrBlock:
          description: "[Output only] The IP address range of the Cloud TPUs in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`)."
          type: string
        verticalPodAutoscaling:
          $ref: "#/components/schemas/VerticalPodAutoscaling"
          description: Cluster-level Vertical Pod Autoscaling configuration.
        workloadIdentityConfig:
          $ref: "#/components/schemas/WorkloadIdentityConfig"
          description: Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
        zone:
          deprecated: true
          description: "[Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field is deprecated, use location instead."
          type: string
      type: object
    ClusterAutoscaling:
      description: ClusterAutoscaling contains global, per-cluster information required by Cluster Autoscaler to automatically adjust the size of the cluster and create/delete node pools based on the current needs.
      properties:
        autoprovisioningLocations:
          description: The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the NodePool's nodes can be created by NAP.
          items:
            type: string
          type: array
        autoprovisioningNodePoolDefaults:
          $ref: "#/components/schemas/AutoprovisioningNodePoolDefaults"
          description: AutoprovisioningNodePoolDefaults contains defaults for a node pool created by NAP.
        autoscalingProfile:
          description: Defines autoscaling behaviour.
          enum:
            - PROFILE_UNSPECIFIED
            - OPTIMIZE_UTILIZATION
            - BALANCED
          type: string
        enableNodeAutoprovisioning:
          description: Enables automatic node pool creation and deletion.
          type: boolean
        resourceLimits:
          description: Contains global constraints regarding minimum and maximum amount of resources in the cluster.
          items:
            $ref: "#/components/schemas/ResourceLimit"
          type: array
      type: object
    ClusterNetworkPerformanceConfig:
      description: Configuration of network bandwidth tiers
      properties:
        totalEgressBandwidthTier:
          description: Specifies the total network bandwidth tier for NodePools in the cluster.
          enum:
            - TIER_UNSPECIFIED
            - TIER_1
          type: string
      type: object
    ClusterUpdate:
      description: ClusterUpdate describes an update to the cluster. Exactly one update can be applied to a cluster with each request, so at most one field can be provided.
      properties:
        additionalPodRangesConfig:
          $ref: "#/components/schemas/AdditionalPodRangesConfig"
          description: The additional pod ranges to be added to the cluster. These pod ranges can be used by node pools to allocate pod IPs.
        desiredAddonsConfig:
          $ref: "#/components/schemas/AddonsConfig"
          description: Configurations for the various addons available to run in the cluster.
        desiredAuthenticatorGroupsConfig:
          $ref: "#/components/schemas/AuthenticatorGroupsConfig"
          description: The desired authenticator groups config for the cluster.
        desiredAutopilotWorkloadPolicyConfig:
          $ref: "#/components/schemas/WorkloadPolicyConfig"
          description: The desired workload policy configuration for the autopilot cluster.
        desiredBinaryAuthorization:
          $ref: "#/components/schemas/BinaryAuthorization"
          description: The desired configuration options for the Binary Authorization feature.
        desiredClusterAutoscaling:
          $ref: "#/components/schemas/ClusterAutoscaling"
          description: Cluster-level autoscaling configuration.
        desiredCostManagementConfig:
          $ref: "#/components/schemas/CostManagementConfig"
          description: The desired configuration for the fine-grained cost management feature.
        desiredDatabaseEncryption:
          $ref: "#/components/schemas/DatabaseEncryption"
          description: Configuration of etcd encryption.
        desiredDatapathProvider:
          description: The desired datapath provider for the cluster.
          enum:
            - DATAPATH_PROVIDER_UNSPECIFIED
            - LEGACY_DATAPATH
            - ADVANCED_DATAPATH
          type: string
        desiredDefaultSnatStatus:
          $ref: "#/components/schemas/DefaultSnatStatus"
          description: The desired status of whether to disable default sNAT for this cluster.
        desiredDnsConfig:
          $ref: "#/components/schemas/DNSConfig"
          description: DNSConfig contains clusterDNS config for this cluster.
        desiredEnableFqdnNetworkPolicy:
          description: Enable/Disable FQDN Network Policy for the cluster.
          type: boolean
        desiredEnablePrivateEndpoint:
          description: Enable/Disable private endpoint for the cluster's master.
          type: boolean
        desiredFleet:
          $ref: "#/components/schemas/Fleet"
          description: The desired fleet configuration for the cluster.
        desiredGatewayApiConfig:
          $ref: "#/components/schemas/GatewayAPIConfig"
          description: The desired config of Gateway API on this cluster.
        desiredGcfsConfig:
          $ref: "#/components/schemas/GcfsConfig"
          description: The desired GCFS config for the cluster
        desiredIdentityServiceConfig:
          $ref: "#/components/schemas/IdentityServiceConfig"
          description: The desired Identity Service component configuration.
        desiredImageType:
          description: 'The desired image type for the node pool. NOTE: Set the "desired_node_pool" field as well.'
          type: string
        desiredInTransitEncryptionConfig:
          description: Specify the details of in-transit encryption.
          enum:
            - IN_TRANSIT_ENCRYPTION_CONFIG_UNSPECIFIED
            - IN_TRANSIT_ENCRYPTION_DISABLED
            - IN_TRANSIT_ENCRYPTION_INTER_NODE_TRANSPARENT
          type: string
        desiredIntraNodeVisibilityConfig:
          $ref: "#/components/schemas/IntraNodeVisibilityConfig"
          description: The desired config of Intra-node visibility.
        desiredK8sBetaApis:
          $ref: "#/components/schemas/K8sBetaAPIConfig"
          description: Desired Beta APIs to be enabled for cluster.
        desiredL4ilbSubsettingConfig:
          $ref: "#/components/schemas/ILBSubsettingConfig"
          description: The desired L4 Internal Load Balancer Subsetting configuration.
        desiredLocations:
          description: "The desired list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. This list must always include the cluster's primary zone. Warning: changing cluster locations will update the locations of all node pools and will result in nodes being added and/or removed."
          items:
            type: string
          type: array
        desiredLoggingConfig:
          $ref: "#/components/schemas/LoggingConfig"
          description: The desired logging configuration.
        desiredLoggingService:
          description: "The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions."
          type: string
        desiredMasterAuthorizedNetworksConfig:
          $ref: "#/components/schemas/MasterAuthorizedNetworksConfig"
          description: The desired configuration options for master authorized networks feature.
        desiredMasterVersion:
          description: 'The Kubernetes version to change the master to. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "-": picks the default Kubernetes version'
          type: string
        desiredMeshCertificates:
          $ref: "#/components/schemas/MeshCertificates"
          description: Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
        desiredMonitoringConfig:
          $ref: "#/components/schemas/MonitoringConfig"
          description: The desired monitoring configuration.
        desiredMonitoringService:
          description: 'The monitoring service the cluster should use to write metrics. Currently available options: * "monitoring.googleapis.com/kubernetes" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.'
          type: string
        desiredNetworkPerformanceConfig:
          $ref: "#/components/schemas/ClusterNetworkPerformanceConfig"
          description: The desired network performance config.
        desiredNodePoolAutoConfigNetworkTags:
          $ref: "#/components/schemas/NetworkTags"
          description: The desired network tags that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled clusters.
        desiredNodePoolAutoConfigResourceManagerTags:
          $ref: "#/components/schemas/ResourceManagerTags"
          description: The desired resource manager tags that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled clusters.
        desiredNodePoolAutoscaling:
          $ref: "#/components/schemas/NodePoolAutoscaling"
          description: Autoscaler configuration for the node pool specified in desired_node_pool_id. If there is only one pool in the cluster and desired_node_pool_id is not provided then the change applies to that single node pool.
        desiredNodePoolId:
          description: The node pool to be upgraded. This field is mandatory if "desired_node_version", "desired_image_family" or "desired_node_pool_autoscaling" is specified and there is more than one node pool on the cluster.
          type: string
        desiredNodePoolLoggingConfig:
          $ref: "#/components/schemas/NodePoolLoggingConfig"
          description: The desired node pool logging configuration defaults for the cluster.
        desiredNodeVersion:
          description: 'The Kubernetes version to change the nodes to (typically an upgrade). Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "-": picks the Kubernetes master version'
          type: string
        desiredNotificationConfig:
          $ref: "#/components/schemas/NotificationConfig"
          description: The desired notification configuration.
        desiredParentProductConfig:
          $ref: "#/components/schemas/ParentProductConfig"
          description: The desired parent product config for the cluster.
        desiredPrivateClusterConfig:
          $ref: "#/components/schemas/PrivateClusterConfig"
          description: The desired private cluster configuration.
        desiredPrivateIpv6GoogleAccess:
          description: The desired state of IPv6 connectivity to Google Services.
          enum:
            - PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED
            - PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED
            - PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE
            - PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL
          type: string
        desiredReleaseChannel:
          $ref: "#/components/schemas/ReleaseChannel"
          description: The desired release channel configuration.
        desiredResourceUsageExportConfig:
          $ref: "#/components/schemas/ResourceUsageExportConfig"
          description: The desired configuration for exporting resource usage.
        desiredSecurityPostureConfig:
          $ref: "#/components/schemas/SecurityPostureConfig"
          description: Enable/Disable Security Posture API features for the cluster.
        desiredServiceExternalIpsConfig:
          $ref: "#/components/schemas/ServiceExternalIPsConfig"
          description: ServiceExternalIPsConfig specifies the config for the use of Services with ExternalIPs field.
        desiredShieldedNodes:
          $ref: "#/components/schemas/ShieldedNodes"
          description: Configuration for Shielded Nodes.
        desiredStackType:
          description: The desired stack type of the cluster. If a stack type is provided and does not match the current stack type of the cluster, update will attempt to change the stack type to the new type.
          enum:
            - STACK_TYPE_UNSPECIFIED
            - IPV4
            - IPV4_IPV6
          type: string
        desiredVerticalPodAutoscaling:
          $ref: "#/components/schemas/VerticalPodAutoscaling"
          description: Cluster-level Vertical Pod Autoscaling configuration.
        desiredWorkloadIdentityConfig:
          $ref: "#/components/schemas/WorkloadIdentityConfig"
          description: Configuration for Workload Identity.
        enableK8sBetaApis:
          $ref: "#/components/schemas/K8sBetaAPIConfig"
          description: Kubernetes open source beta apis enabled on the cluster. Only beta apis
        etag:
          description: The current etag of the cluster. If an etag is provided and does not match the current etag of the cluster, update will be blocked and an ABORTED error will be returned.
          type: string
        removedAdditionalPodRangesConfig:
          $ref: "#/components/schemas/AdditionalPodRangesConfig"
          description: The additional pod ranges that are to be removed from the cluster. The pod ranges specified here must have been specified earlier in the 'additional_pod_ranges_config' argument.
      type: object
    CompleteIPRotationRequest:
      description: CompleteIPRotationRequest moves the cluster master back into single-IP mode.
      properties:
        clusterId:
          deprecated: true
          description: Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.
          type: string
        name:
          description: The name (project, location, cluster name) of the cluster to complete IP rotation. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
        projectId:
          deprecated: true
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        zone:
          deprecated: true
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
      type: object
    CompleteNodePoolUpgradeRequest:
      description: CompleteNodePoolUpgradeRequest sets the name of target node pool to complete upgrade.
      properties: {}
      type: object
    ConfidentialNodes:
      description: ConfidentialNodes is configuration for the confidential nodes feature, which makes nodes run on confidential VMs.
      properties:
        enabled:
          description: Whether Confidential Nodes feature is enabled.
          type: boolean
      type: object
    ConfigConnectorConfig:
      description: Configuration options for the Config Connector add-on.
      properties:
        enabled:
          description: Whether Cloud Connector is enabled for this cluster.
          type: boolean
      type: object
    ConsumptionMeteringConfig:
      description: Parameters for controlling consumption metering.
      properties:
        enabled:
          description: Whether to enable consumption metering for this cluster. If enabled, a second BigQuery table will be created to hold resource consumption records.
          type: boolean
      type: object
    CostManagementConfig:
      description: Configuration for fine-grained cost management feature.
      properties:
        enabled:
          description: Whether the feature is enabled or not.
          type: boolean
      type: object
    CreateClusterRequest:
      description: CreateClusterRequest creates a cluster.
      properties:
        cluster:
          $ref: "#/components/schemas/Cluster"
          description: Required. A [cluster resource](https://cloud.google.com/container-engine/reference/rest/v1/projects.locations.clusters)
        parent:
          description: The parent (project and location) where the cluster will be created. Specified in the format `projects/*/locations/*`.
          type: string
        projectId:
          deprecated: true
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field.
          type: string
        zone:
          deprecated: true
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field.
          type: string
      type: object
    CreateNodePoolRequest:
      description: CreateNodePoolRequest creates a node pool for a cluster.
      properties:
        clusterId:
          deprecated: true
          description: Deprecated. The name of the cluster. This field has been deprecated and replaced by the parent field.
          type: string
        nodePool:
          $ref: "#/components/schemas/NodePool"
          description: Required. The node pool to create.
        parent:
          description: The parent (project, location, cluster name) where the node pool will be created. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
        projectId:
          deprecated: true
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field.
          type: string
        zone:
          deprecated: true
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field.
          type: string
      type: object
    DNSConfig:
      description: DNSConfig contains the desired set of options for configuring clusterDNS.
      properties:
        clusterDns:
          description: cluster_dns indicates which in-cluster DNS provider should be used.
          enum:
            - PROVIDER_UNSPECIFIED
            - PLATFORM_DEFAULT
            - CLOUD_DNS
            - KUBE_DNS
          type: string
        clusterDnsDomain:
          description: cluster_dns_domain is the suffix used for all cluster service records.
          type: string
        clusterDnsScope:
          description: cluster_dns_scope indicates the scope of access to cluster DNS records.
          enum:
            - DNS_SCOPE_UNSPECIFIED
            - CLUSTER_SCOPE
            - VPC_SCOPE
          type: string
      type: object
    DailyMaintenanceWindow:
      description: Time window specified for daily maintenance operations.
      properties:
        duration:
          description: '[Output only] Duration of the time window, automatically chosen to be smallest possible in the given scenario. Duration will be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "PTnHnMnS".'
          type: string
        startTime:
          description: 'Time within the maintenance window to start the maintenance operations. Time format should be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM", where HH : [00-23] and MM : [00-59] GMT.'
          type: string
      type: object
    DatabaseEncryption:
      description: Configuration of etcd encryption.
      properties:
        keyName:
          description: Name of CloudKMS key to use for the encryption of secrets in etcd. Ex. projects/my-project/locations/global/keyRings/my-ring/cryptoKeys/my-key
          type: string
        state:
          description: The desired state of etcd encryption.
          enum:
            - UNKNOWN
            - ENCRYPTED
            - DECRYPTED
          type: string
      type: object
    DefaultSnatStatus:
      description: DefaultSnatStatus contains the desired state of whether default sNAT should be disabled on the cluster.
      properties:
        disabled:
          description: Disables cluster default sNAT rules.
          type: boolean
      type: object
    DnsCacheConfig:
      description: Configuration for NodeLocal DNSCache
      properties:
        enabled:
          description: Whether NodeLocal DNSCache is enabled for this cluster.
          type: boolean
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    EnterpriseConfig:
      description: EnterpriseConfig is the cluster enterprise configuration.
      properties:
        clusterTier:
          description: Output only. [Output only] cluster_tier specifies the premium tier of the cluster.
          enum:
            - CLUSTER_TIER_UNSPECIFIED
            - STANDARD
            - ENTERPRISE
          readOnly: true
          type: string
      type: object
    EphemeralStorageLocalSsdConfig:
      description: EphemeralStorageLocalSsdConfig contains configuration for the node ephemeral storage using Local SSDs.
      properties:
        localSsdCount:
          description: "Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. A zero (or unset) value has different meanings depending on machine type being used: 1. For pre-Gen3 machines, which support flexible numbers of local ssds, zero (or unset) means to disable using local SSDs as ephemeral storage. The limit for this value is dependent upon the maximum number of disk available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information. 2. For Gen3 machines which dictate a specific number of local ssds, zero (or unset) means to use the default number of local ssds that goes with that machine type. For example, for a c3-standard-8-lssd machine, 2 local ssds would be provisioned. For c3-standard-8 (which doesn't support local ssds), 0 will be provisioned. See https://cloud.google.com/compute/docs/disks/local-ssd#choose_number_local_ssds for more info."
          format: int32
          type: integer
      type: object
    FastSocket:
      description: Configuration of Fast Socket feature.
      properties:
        enabled:
          description: Whether Fast Socket features are enabled in the node pool.
          type: boolean
      type: object
    Filter:
      description: Allows filtering to one or more specific event types. If event types are present, those and only those event types will be transmitted to the cluster. Other types will be skipped. If no filter is specified, or no event types are present, all event types will be sent
      properties:
        eventType:
          description: Event types to allowlist.
          items:
            enum:
              - EVENT_TYPE_UNSPECIFIED
              - UPGRADE_AVAILABLE_EVENT
              - UPGRADE_EVENT
              - SECURITY_BULLETIN_EVENT
            type: string
          type: array
      type: object
    Fleet:
      description: Fleet is the fleet configuration for the cluster.
      properties:
        membership:
          description: "[Output only] The full resource name of the registered fleet membership of the cluster, in the format `//gkehub.googleapis.com/projects/*/locations/*/memberships/*`."
          type: string
        preRegistered:
          description: "[Output only] Whether the cluster has been registered through the fleet API."
          type: boolean
        project:
          description: The Fleet host project(project ID or project number) where this cluster will be registered to. This field cannot be changed after the cluster has been registered.
          type: string
      type: object
    GPUDriverInstallationConfig:
      description: GPUDriverInstallationConfig specifies the version of GPU driver to be auto installed.
      properties:
        gpuDriverVersion:
          description: Mode for how the GPU driver is installed.
          enum:
            - GPU_DRIVER_VERSION_UNSPECIFIED
            - INSTALLATION_DISABLED
            - DEFAULT
            - LATEST
          type: string
      type: object
    GPUSharingConfig:
      description: GPUSharingConfig represents the GPU sharing configuration for Hardware Accelerators.
      properties:
        gpuSharingStrategy:
          description: The type of GPU sharing strategy to enable on the GPU node.
          enum:
            - GPU_SHARING_STRATEGY_UNSPECIFIED
            - TIME_SHARING
          type: string
        maxSharedClientsPerGpu:
          description: The max number of containers that can share a physical GPU.
          format: int64
          type: string
      type: object
    GatewayAPIConfig:
      description: GatewayAPIConfig contains the desired config of Gateway API on this cluster.
      properties:
        channel:
          description: The Gateway API release channel to use for Gateway API.
          enum:
            - CHANNEL_UNSPECIFIED
            - CHANNEL_DISABLED
            - CHANNEL_EXPERIMENTAL
            - CHANNEL_STANDARD
          type: string
      type: object
    GcePersistentDiskCsiDriverConfig:
      description: Configuration for the Compute Engine PD CSI driver.
      properties:
        enabled:
          description: Whether the Compute Engine PD CSI driver is enabled for this cluster.
          type: boolean
      type: object
    GcfsConfig:
      description: GcfsConfig contains configurations of Google Container File System (image streaming).
      properties:
        enabled:
          description: Whether to use GCFS.
          type: boolean
      type: object
    GcpFilestoreCsiDriverConfig:
      description: Configuration for the GCP Filestore CSI driver.
      properties:
        enabled:
          description: Whether the GCP Filestore CSI driver is enabled for this cluster.
          type: boolean
      type: object
    GcsFuseCsiDriverConfig:
      description: Configuration for the Cloud Storage Fuse CSI driver.
      properties:
        enabled:
          description: Whether the Cloud Storage Fuse CSI driver is enabled for this cluster.
          type: boolean
      type: object
    GetJSONWebKeysResponse:
      description: GetJSONWebKeysResponse is a valid JSON Web Key Set as specififed in rfc 7517
      properties:
        cacheHeader:
          $ref: "#/components/schemas/HttpCacheControlResponseHeader"
          description: OnePlatform automatically extracts this field and uses it to set the HTTP Cache-Control header.
        keys:
          description: The public component of the keys used by the cluster to sign token requests.
          items:
            $ref: "#/components/schemas/Jwk"
          type: array
      type: object
    GetOpenIDConfigResponse:
      description: GetOpenIDConfigResponse is an OIDC discovery document for the cluster. See the OpenID Connect Discovery 1.0 specification for details.
      properties:
        cacheHeader:
          $ref: "#/components/schemas/HttpCacheControlResponseHeader"
          description: OnePlatform automatically extracts this field and uses it to set the HTTP Cache-Control header.
        claims_supported:
          description: Supported claims.
          items:
            type: string
          type: array
        grant_types:
          description: Supported grant types.
          items:
            type: string
          type: array
        id_token_signing_alg_values_supported:
          description: supported ID Token signing Algorithms.
          items:
            type: string
          type: array
        issuer:
          description: OIDC Issuer.
          type: string
        jwks_uri:
          description: JSON Web Key uri.
          type: string
        response_types_supported:
          description: Supported response types.
          items:
            type: string
          type: array
        subject_types_supported:
          description: Supported subject types.
          items:
            type: string
          type: array
      type: object
    GkeBackupAgentConfig:
      description: Configuration for the Backup for GKE Agent.
      properties:
        enabled:
          description: Whether the Backup for GKE agent is enabled for this cluster.
          type: boolean
      type: object
    HorizontalPodAutoscaling:
      description: Configuration options for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods.
      properties:
        disabled:
          description: Whether the Horizontal Pod Autoscaling feature is enabled in the cluster. When enabled, it ensures that metrics are collected into Stackdriver Monitoring.
          type: boolean
      type: object
    HttpCacheControlResponseHeader:
      description: "RFC-2616: cache control support"
      properties:
        age:
          description: 14.6 response cache age, in seconds since the response is generated
          format: int64
          type: string
        directive:
          description: 14.9 request and response directives
          type: string
        expires:
          description: 14.21 response cache expires, in RFC 1123 date format
          type: string
      type: object
    HttpLoadBalancing:
      description: Configuration options for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.
      properties:
        disabled:
          description: Whether the HTTP Load Balancing controller is enabled in the cluster. When enabled, it runs a small pod in the cluster that manages the load balancers.
          type: boolean
      type: object
    ILBSubsettingConfig:
      description: ILBSubsettingConfig contains the desired config of L4 Internal LoadBalancer subsetting on this cluster.
      properties:
        enabled:
          description: Enables l4 ILB subsetting for this cluster.
          type: boolean
      type: object
    IPAllocationPolicy:
      description: Configuration for controlling how IPs are allocated in the cluster.
      properties:
        additionalPodRangesConfig:
          $ref: "#/components/schemas/AdditionalPodRangesConfig"
          description: Output only. [Output only] The additional pod ranges that are added to the cluster. These pod ranges can be used by new node pools to allocate pod IPs automatically. Once the range is removed it will not show up in IPAllocationPolicy.
          readOnly: true
        clusterIpv4Cidr:
          deprecated: true
          description: This field is deprecated, use cluster_ipv4_cidr_block.
          type: string
        clusterIpv4CidrBlock:
          description: The IP address range for the cluster pod IPs. If this field is set, then `cluster.cluster_ipv4_cidr` must be left blank. This field is only applicable when `use_ip_aliases` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.
          type: string
        clusterSecondaryRangeName:
          description: The name of the secondary range to be used for the cluster CIDR block. The secondary range will be used for pod IP addresses. This must be an existing secondary range associated with the cluster subnetwork. This field is only applicable with use_ip_aliases is true and create_subnetwork is false.
          type: string
        createSubnetwork:
          description: Whether a new subnetwork will be created automatically for the cluster. This field is only applicable when `use_ip_aliases` is true.
          type: boolean
        defaultPodIpv4RangeUtilization:
          description: Output only. [Output only] The utilization of the cluster default IPv4 range for the pod. The ratio is Usage/[Total number of IPs in the secondary range], Usage=numNodes*numZones*podIPsPerNode.
          format: double
          readOnly: true
          type: number
        ipv6AccessType:
          description: The ipv6 access type (internal or external) when create_subnetwork is true
          enum:
            - IPV6_ACCESS_TYPE_UNSPECIFIED
            - INTERNAL
            - EXTERNAL
          type: string
        nodeIpv4Cidr:
          deprecated: true
          description: This field is deprecated, use node_ipv4_cidr_block.
          type: string
        nodeIpv4CidrBlock:
          description: The IP address range of the instance IPs in this cluster. This is applicable only if `create_subnetwork` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.
          type: string
        podCidrOverprovisionConfig:
          $ref: "#/components/schemas/PodCIDROverprovisionConfig"
          description: "[PRIVATE FIELD] Pod CIDR size overprovisioning config for the cluster. Pod CIDR size per node depends on max_pods_per_node. By default, the value of max_pods_per_node is doubled and then rounded off to next power of 2 to get the size of pod CIDR block per node. Example: max_pods_per_node of 30 would result in 64 IPs (/26). This config can disable the doubling of IPs (we still round off to next power of 2) Example: max_pods_per_node of 30 will result in 32 IPs (/27) when overprovisioning is disabled."
        servicesIpv4Cidr:
          deprecated: true
          description: This field is deprecated, use services_ipv4_cidr_block.
          type: string
        servicesIpv4CidrBlock:
          description: The IP address range of the services IPs in this cluster. If blank, a range will be automatically chosen with the default size. This field is only applicable when `use_ip_aliases` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.
          type: string
        servicesIpv6CidrBlock:
          description: Output only. [Output only] The services IPv6 CIDR block for the cluster.
          readOnly: true
          type: string
        servicesSecondaryRangeName:
          description: The name of the secondary range to be used as for the services CIDR block. The secondary range will be used for service ClusterIPs. This must be an existing secondary range associated with the cluster subnetwork. This field is only applicable with use_ip_aliases is true and create_subnetwork is false.
          type: string
        stackType:
          description: The IP stack type of the cluster
          enum:
            - STACK_TYPE_UNSPECIFIED
            - IPV4
            - IPV4_IPV6
          type: string
        subnetIpv6CidrBlock:
          description: Output only. [Output only] The subnet's IPv6 CIDR block used by nodes and pods.
          readOnly: true
          type: string
        subnetworkName:
          description: A custom subnetwork name to be used if `create_subnetwork` is true. If this field is empty, then an automatic name will be chosen for the new subnetwork.
          type: string
        tpuIpv4CidrBlock:
          description: The IP address range of the Cloud TPUs in this cluster. If unspecified, a range will be automatically chosen with the default size. This field is only applicable when `use_ip_aliases` is true. If unspecified, the range will use the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.
          type: string
        useIpAliases:
          description: Whether alias IPs will be used for pod IPs in the cluster. This is used in conjunction with use_routes. It cannot be true if use_routes is true. If both use_ip_aliases and use_routes are false, then the server picks the default IP allocation mode
          type: boolean
        useRoutes:
          description: Whether routes will be used for pod IPs in the cluster. This is used in conjunction with use_ip_aliases. It cannot be true if use_ip_aliases is true. If both use_ip_aliases and use_routes are false, then the server picks the default IP allocation mode
          type: boolean
      type: object
    IdentityServiceConfig:
      description: IdentityServiceConfig is configuration for Identity Service which allows customers to use external identity providers with the K8S API
      properties:
        enabled:
          description: Whether to enable the Identity Service component
          type: boolean
      type: object
    IntraNodeVisibilityConfig:
      description: IntraNodeVisibilityConfig contains the desired config of the intra-node visibility on this cluster.
      properties:
        enabled:
          description: Enables intra node visibility for this cluster.
          type: boolean
      type: object
    Jwk:
      description: Jwk is a JSON Web Key as specified in RFC 7517
      properties:
        alg:
          description: Algorithm.
          type: string
        crv:
          description: Used for ECDSA keys.
          type: string
        e:
          description: Used for RSA keys.
          type: string
        kid:
          description: Key ID.
          type: string
        kty:
          description: Key Type.
          type: string
        n:
          description: Used for RSA keys.
          type: string
        use:
          description: Permitted uses for the public keys.
          type: string
        x:
          description: Used for ECDSA keys.
          type: string
        y:
          description: Used for ECDSA keys.
          type: string
      type: object
    K8sBetaAPIConfig:
      description: K8sBetaAPIConfig , configuration for beta APIs
      properties:
        enabledApis:
          description: Enabled k8s beta APIs.
          items:
            type: string
          type: array
      type: object
    KubernetesDashboard:
      description: Configuration for the Kubernetes Dashboard.
      properties:
        disabled:
          description: Whether the Kubernetes Dashboard is enabled for this cluster.
          type: boolean
      type: object
    LegacyAbac:
      description: Configuration for the legacy Attribute Based Access Control authorization mode.
      properties:
        enabled:
          description: Whether the ABAC authorizer is enabled for this cluster. When enabled, identities in the system, including service accounts, nodes, and controllers, will have statically granted permissions beyond those provided by the RBAC configuration or IAM.
          type: boolean
      type: object
    LinuxNodeConfig:
      description: Parameters that can be configured on Linux nodes.
      properties:
        cgroupMode:
          description: cgroup_mode specifies the cgroup mode to be used on the node.
          enum:
            - CGROUP_MODE_UNSPECIFIED
            - CGROUP_MODE_V1
            - CGROUP_MODE_V2
          type: string
        sysctls:
          additionalProperties:
            type: string
          description: The Linux kernel parameters to be applied to the nodes and all pods running on the nodes. The following parameters are supported. net.core.busy_poll net.core.busy_read net.core.netdev_max_backlog net.core.rmem_max net.core.wmem_default net.core.wmem_max net.core.optmem_max net.core.somaxconn net.ipv4.tcp_rmem net.ipv4.tcp_wmem net.ipv4.tcp_tw_reuse
          type: object
      type: object
    ListClustersResponse:
      description: ListClustersResponse is the result of ListClustersRequest.
      properties:
        clusters:
          description: A list of clusters in the project in the specified zone, or across all ones.
          items:
            $ref: "#/components/schemas/Cluster"
          type: array
        missingZones:
          description: If any zones are listed here, the list of clusters returned may be missing those zones.
          items:
            type: string
          type: array
      type: object
    ListNodePoolsResponse:
      description: ListNodePoolsResponse is the result of ListNodePoolsRequest.
      properties:
        nodePools:
          description: A list of node pools for a cluster.
          items:
            $ref: "#/components/schemas/NodePool"
          type: array
      type: object
    ListOperationsResponse:
      description: ListOperationsResponse is the result of ListOperationsRequest.
      properties:
        missingZones:
          description: If any zones are listed here, the list of operations returned may be missing the operations from those zones.
          items:
            type: string
          type: array
        operations:
          description: A list of operations in the project in the specified zone.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    ListUsableSubnetworksResponse:
      description: ListUsableSubnetworksResponse is the response of ListUsableSubnetworksRequest.
      properties:
        nextPageToken:
          description: This token allows you to get the next page of results for list requests. If the number of results is larger than `page_size`, use the `next_page_token` as a value for the query parameter `page_token` in the next request. The value will become empty when there are no more pages.
          type: string
        subnetworks:
          description: A list of usable subnetworks in the specified network project.
          items:
            $ref: "#/components/schemas/UsableSubnetwork"
          type: array
      type: object
    LocalNvmeSsdBlockConfig:
      description: LocalNvmeSsdBlockConfig contains configuration for using raw-block local NVMe SSDs
      properties:
        localSsdCount:
          description: "Number of local NVMe SSDs to use. The limit for this value is dependent upon the maximum number of disk available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information. A zero (or unset) value has different meanings depending on machine type being used: 1. For pre-Gen3 machines, which support flexible numbers of local ssds, zero (or unset) means to disable using local SSDs as ephemeral storage. 2. For Gen3 machines which dictate a specific number of local ssds, zero (or unset) means to use the default number of local ssds that goes with that machine type. For example, for a c3-standard-8-lssd machine, 2 local ssds would be provisioned. For c3-standard-8 (which doesn't support local ssds), 0 will be provisioned. See https://cloud.google.com/compute/docs/disks/local-ssd#choose_number_local_ssds for more info."
          format: int32
          type: integer
      type: object
    LoggingComponentConfig:
      description: LoggingComponentConfig is cluster logging component configuration.
      properties:
        enableComponents:
          description: Select components to collect logs. An empty set would disable all logging.
          items:
            enum:
              - COMPONENT_UNSPECIFIED
              - SYSTEM_COMPONENTS
              - WORKLOADS
              - APISERVER
              - SCHEDULER
              - CONTROLLER_MANAGER
            type: string
          type: array
      type: object
    LoggingConfig:
      description: LoggingConfig is cluster logging configuration.
      properties:
        componentConfig:
          $ref: "#/components/schemas/LoggingComponentConfig"
          description: Logging components configuration
      type: object
    LoggingVariantConfig:
      description: LoggingVariantConfig specifies the behaviour of the logging component.
      properties:
        variant:
          description: Logging variant deployed on nodes.
          enum:
            - VARIANT_UNSPECIFIED
            - DEFAULT
            - MAX_THROUGHPUT
          type: string
      type: object
    MaintenanceExclusionOptions:
      description: Represents the Maintenance exclusion option.
      properties:
        scope:
          description: Scope specifies the upgrade scope which upgrades are blocked by the exclusion.
          enum:
            - NO_UPGRADES
            - NO_MINOR_UPGRADES
            - NO_MINOR_OR_NODE_UPGRADES
          type: string
      type: object
    MaintenancePolicy:
      description: MaintenancePolicy defines the maintenance policy to be used for the cluster.
      properties:
        resourceVersion:
          description: A hash identifying the version of this policy, so that updates to fields of the policy won't accidentally undo intermediate changes (and so that users of the API unaware of some fields won't accidentally remove other fields). Make a `get()` request to the cluster to get the current resource version and include it with requests to set the policy.
          type: string
        window:
          $ref: "#/components/schemas/MaintenanceWindow"
          description: Specifies the maintenance window in which maintenance may be performed.
      type: object
    MaintenanceWindow:
      description: MaintenanceWindow defines the maintenance window to be used for the cluster.
      properties:
        dailyMaintenanceWindow:
          $ref: "#/components/schemas/DailyMaintenanceWindow"
          description: DailyMaintenanceWindow specifies a daily maintenance operation window.
        maintenanceExclusions:
          additionalProperties:
            $ref: "#/components/schemas/TimeWindow"
          description: Exceptions to maintenance window. Non-emergency maintenance should not occur in these windows.
          type: object
        recurringWindow:
          $ref: "#/components/schemas/RecurringTimeWindow"
          description: RecurringWindow specifies some number of recurring time periods for maintenance to occur. The time windows may be overlapping. If no maintenance windows are set, maintenance can occur at any time.
      type: object
    ManagedPrometheusConfig:
      description: ManagedPrometheusConfig defines the configuration for Google Cloud Managed Service for Prometheus.
      properties:
        enabled:
          description: Enable Managed Collection.
          type: boolean
      type: object
    MasterAuth:
      description: The authentication information for accessing the master endpoint. Authentication can be done using HTTP basic auth or using client certificates.
      properties:
        clientCertificate:
          description: "[Output only] Base64-encoded public certificate used by clients to authenticate to the cluster endpoint."
          type: string
        clientCertificateConfig:
          $ref: "#/components/schemas/ClientCertificateConfig"
          description: Configuration for client certificate authentication on the cluster. For clusters before v1.12, if no configuration is specified, a client certificate is issued.
        clientKey:
          description: "[Output only] Base64-encoded private key used by clients to authenticate to the cluster endpoint."
          type: string
        clusterCaCertificate:
          description: "[Output only] Base64-encoded public certificate that is the root of trust for the cluster."
          type: string
        password:
          deprecated: true
          description: "The password to use for HTTP basic authentication to the master endpoint. Because the master endpoint is open to the Internet, you should create a strong password. If a password is provided for cluster creation, username must be non-empty. Warning: basic authentication is deprecated, and will be removed in GKE control plane versions 1.19 and newer. For a list of recommended authentication methods, see: https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication"
          type: string
        username:
          deprecated: true
          description: "The username to use for HTTP basic authentication to the master endpoint. For clusters v1.6.0 and later, basic authentication can be disabled by leaving username unspecified (or setting it to the empty string). Warning: basic authentication is deprecated, and will be removed in GKE control plane versions 1.19 and newer. For a list of recommended authentication methods, see: https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication"
          type: string
      type: object
    MasterAuthorizedNetworksConfig:
      description: Configuration options for the master authorized networks feature. Enabled master authorized networks will disallow all external traffic to access Kubernetes master through HTTPS except traffic from the given CIDR blocks, Google Compute Engine Public IPs and Google Prod IPs.
      properties:
        cidrBlocks:
          description: cidr_blocks define up to 50 external networks that could access Kubernetes master through HTTPS.
          items:
            $ref: "#/components/schemas/CidrBlock"
          type: array
        enabled:
          description: Whether or not master authorized networks is enabled.
          type: boolean
        gcpPublicCidrsAccessEnabled:
          description: Whether master is accessbile via Google Compute Engine Public IP addresses.
          type: boolean
      type: object
    MaxPodsConstraint:
      description: Constraints applied to pods.
      properties:
        maxPodsPerNode:
          description: Constraint enforced on the max num of pods per node.
          format: int64
          type: string
      type: object
    MeshCertificates:
      description: Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
      properties:
        enableCertificates:
          description: enable_certificates controls issuance of workload mTLS certificates. If set, the GKE Workload Identity Certificates controller and node agent will be deployed in the cluster, which can then be configured by creating a WorkloadCertificateConfig Custom Resource. Requires Workload Identity (workload_pool must be non-empty).
          type: boolean
      type: object
    Metric:
      description: Progress metric is (string, int|float|string) pair.
      properties:
        doubleValue:
          description: For metrics with floating point value.
          format: double
          type: number
        intValue:
          description: For metrics with integer value.
          format: int64
          type: string
        name:
          description: Required. Metric name, e.g., "nodes total", "percent done".
          type: string
        stringValue:
          description: For metrics with custom values (ratios, visual progress, etc.).
          type: string
      type: object
    MonitoringComponentConfig:
      description: MonitoringComponentConfig is cluster monitoring component configuration.
      properties:
        enableComponents:
          description: Select components to collect metrics. An empty set would disable all monitoring.
          items:
            enum:
              - COMPONENT_UNSPECIFIED
              - SYSTEM_COMPONENTS
              - APISERVER
              - SCHEDULER
              - CONTROLLER_MANAGER
              - STORAGE
              - HPA
              - POD
              - DAEMONSET
              - DEPLOYMENT
              - STATEFULSET
            type: string
          type: array
      type: object
    MonitoringConfig:
      description: MonitoringConfig is cluster monitoring configuration.
      properties:
        advancedDatapathObservabilityConfig:
          $ref: "#/components/schemas/AdvancedDatapathObservabilityConfig"
          description: Configuration of Advanced Datapath Observability features.
        componentConfig:
          $ref: "#/components/schemas/MonitoringComponentConfig"
          description: Monitoring components configuration
        managedPrometheusConfig:
          $ref: "#/components/schemas/ManagedPrometheusConfig"
          description: Enable Google Cloud Managed Service for Prometheus in the cluster.
      type: object
    NetworkConfig:
      description: NetworkConfig reports the relative names of network & subnetwork.
      properties:
        datapathProvider:
          description: The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation.
          enum:
            - DATAPATH_PROVIDER_UNSPECIFIED
            - LEGACY_DATAPATH
            - ADVANCED_DATAPATH
          type: string
        defaultSnatStatus:
          $ref: "#/components/schemas/DefaultSnatStatus"
          description: Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when default_snat_status is disabled. When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic.
        dnsConfig:
          $ref: "#/components/schemas/DNSConfig"
          description: DNSConfig contains clusterDNS config for this cluster.
        enableFqdnNetworkPolicy:
          description: Whether FQDN Network Policy is enabled on this cluster.
          type: boolean
        enableIntraNodeVisibility:
          description: Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC network.
          type: boolean
        enableL4ilbSubsetting:
          description: Whether L4ILB Subsetting is enabled for this cluster.
          type: boolean
        enableMultiNetworking:
          description: Whether multi-networking is enabled for this cluster.
          type: boolean
        gatewayApiConfig:
          $ref: "#/components/schemas/GatewayAPIConfig"
          description: GatewayAPIConfig contains the desired config of Gateway API on this cluster.
        inTransitEncryptionConfig:
          description: Specify the details of in-transit encryption.
          enum:
            - IN_TRANSIT_ENCRYPTION_CONFIG_UNSPECIFIED
            - IN_TRANSIT_ENCRYPTION_DISABLED
            - IN_TRANSIT_ENCRYPTION_INTER_NODE_TRANSPARENT
          type: string
        network:
          description: "Output only. The relative name of the Google Compute Engine network(https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. Example: projects/my-project/global/networks/my-network"
          type: string
        networkPerformanceConfig:
          $ref: "#/components/schemas/ClusterNetworkPerformanceConfig"
          description: Network bandwidth tier configuration.
        privateIpv6GoogleAccess:
          description: The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services (all access will be via IPv4)
          enum:
            - PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED
            - PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED
            - PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE
            - PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL
          type: string
        serviceExternalIpsConfig:
          $ref: "#/components/schemas/ServiceExternalIPsConfig"
          description: ServiceExternalIPsConfig specifies if services with externalIPs field are blocked or not.
        subnetwork:
          description: "Output only. The relative name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/vpc) to which the cluster is connected. Example: projects/my-project/regions/us-central1/subnetworks/my-subnet"
          type: string
      type: object
    NetworkPerformanceConfig:
      description: Configuration of all network bandwidth tiers
      properties:
        totalEgressBandwidthTier:
          description: Specifies the total network bandwidth tier for the NodePool.
          enum:
            - TIER_UNSPECIFIED
            - TIER_1
          type: string
      type: object
    NetworkPolicy:
      description: Configuration options for the NetworkPolicy feature. https://kubernetes.io/docs/concepts/services-networking/networkpolicies/
      properties:
        enabled:
          description: Whether network policy is enabled on the cluster.
          type: boolean
        provider:
          description: The selected network policy provider.
          enum:
            - PROVIDER_UNSPECIFIED
            - CALICO
          type: string
      type: object
    NetworkPolicyConfig:
      description: Configuration for NetworkPolicy. This only tracks whether the addon is enabled or not on the Master, it does not track whether network policy is enabled for the nodes.
      properties:
        disabled:
          description: Whether NetworkPolicy is enabled for this cluster.
          type: boolean
      type: object
    NetworkTags:
      description: Collection of Compute Engine network tags that can be applied to a node's underlying VM instance.
      properties:
        tags:
          description: List of network tags.
          items:
            type: string
          type: array
      type: object
    NodeAffinity:
      description: Specifies the NodeAffinity key, values, and affinity operator according to [shared sole tenant node group affinities](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes#node_affinity_and_anti-affinity).
      properties:
        key:
          description: Key for NodeAffinity.
          type: string
        operator:
          description: Operator for NodeAffinity.
          enum:
            - OPERATOR_UNSPECIFIED
            - IN
            - NOT_IN
          type: string
        values:
          description: Values for NodeAffinity.
          items:
            type: string
          type: array
      type: object
    NodeConfig:
      description: Parameters that describe the nodes in a cluster. GKE Autopilot clusters do not recognize parameters in `NodeConfig`. Use AutoprovisioningNodePoolDefaults instead.
      properties:
        accelerators:
          description: A list of hardware accelerators to be attached to each node. See https://cloud.google.com/compute/docs/gpus for more information about support for GPUs.
          items:
            $ref: "#/components/schemas/AcceleratorConfig"
          type: array
        advancedMachineFeatures:
          $ref: "#/components/schemas/AdvancedMachineFeatures"
          description: Advanced features for the Compute Engine VM.
        bootDiskKmsKey:
          description: " The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption"
          type: string
        confidentialNodes:
          $ref: "#/components/schemas/ConfidentialNodes"
          description: Confidential nodes config. All the nodes in the node pool will be Confidential VM once enabled.
        diskSizeGb:
          description: Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.
          format: int32
          type: integer
        diskType:
          description: Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced') If unspecified, the default disk type is 'pd-standard'
          type: string
        enableConfidentialStorage:
          description: Optional. Reserved for future use.
          type: boolean
        ephemeralStorageLocalSsdConfig:
          $ref: "#/components/schemas/EphemeralStorageLocalSsdConfig"
          description: Parameters for the node ephemeral storage using Local SSDs. If unspecified, ephemeral storage is backed by the boot disk.
        fastSocket:
          $ref: "#/components/schemas/FastSocket"
          description: Enable or disable NCCL fast socket for the node pool.
        gcfsConfig:
          $ref: "#/components/schemas/GcfsConfig"
          description: Google Container File System (image streaming) configs.
        gvnic:
          $ref: "#/components/schemas/VirtualNIC"
          description: Enable or disable gvnic in the node pool.
        imageType:
          description: The image type to use for this node. Note that for a given image type, the latest version of it will be used. Please see https://cloud.google.com/kubernetes-engine/docs/concepts/node-images for available image types.
          type: string
        kubeletConfig:
          $ref: "#/components/schemas/NodeKubeletConfig"
          description: Node kubelet configs.
        labels:
          additionalProperties:
            type: string
          description: "The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node. In case of conflict in label keys, the applied set may differ depending on the Kubernetes version -- it's best to assume the behavior is undefined and conflicts should be avoided. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/"
          type: object
        linuxNodeConfig:
          $ref: "#/components/schemas/LinuxNodeConfig"
          description: Parameters that can be configured on Linux nodes.
        localNvmeSsdBlockConfig:
          $ref: "#/components/schemas/LocalNvmeSsdBlockConfig"
          description: Parameters for using raw-block Local NVMe SSDs.
        localSsdCount:
          description: "The number of local SSD disks to be attached to the node. The limit for this value is dependent upon the maximum number of disks available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information."
          format: int32
          type: integer
        loggingConfig:
          $ref: "#/components/schemas/NodePoolLoggingConfig"
          description: Logging configuration.
        machineType:
          description: The name of a Google Compute Engine [machine type](https://cloud.google.com/compute/docs/machine-types) If unspecified, the default machine type is `e2-medium`.
          type: string
        metadata:
          additionalProperties:
            type: string
          description: "The metadata key/value pairs assigned to instances in the cluster. Keys must conform to the regexp `[a-zA-Z0-9-_]+` and be less than 128 bytes in length. These are reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project or be one of the reserved keys: - \"cluster-location\" - \"cluster-name\" - \"cluster-uid\" - \"configure-sh\" - \"containerd-configure-sh\" - \"enable-os-login\" - \"gci-ensure-gke-docker\" - \"gci-metrics-enabled\" - \"gci-update-strategy\" - \"instance-template\" - \"kube-env\" - \"startup-script\" - \"user-data\" - \"disable-address-manager\" - \"windows-startup-script-ps1\" - \"common-psm1\" - \"k8s-node-setup-psm1\" - \"install-ssh-psm1\" - \"user-profile-psm1\" Values are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on them is that each value's size must be less than or equal to 32 KB. The total size of all keys and values must be less than 512 KB."
          type: object
        minCpuPlatform:
          description: 'Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as `minCpuPlatform: "Intel Haswell"` or `minCpuPlatform: "Intel Sandy Bridge"`. For more information, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)'
          type: string
        nodeGroup:
          description: Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
          type: string
        oauthScopes:
          description: 'The set of Google API scopes to be made available on all of the node VMs under the "default" service account. The following scopes are recommended, but not required, and by default are not included: * `https://www.googleapis.com/auth/compute` is required for mounting persistent storage on your nodes. * `https://www.googleapis.com/auth/devstorage.read_only` is required for communicating with **gcr.io** (the [Google Container Registry](https://cloud.google.com/container-registry/)). If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.'
          items:
            type: string
          type: array
        preemptible:
          description: "Whether the nodes are created as preemptible VM instances. See: https://cloud.google.com/compute/docs/instances/preemptible for more information about preemptible VM instances."
          type: boolean
        reservationAffinity:
          $ref: "#/components/schemas/ReservationAffinity"
          description: The optional reservation affinity. Setting this field will apply the specified [Zonal Compute Reservation](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources) to this node pool.
        resourceLabels:
          additionalProperties:
            type: string
          description: The resource labels for the node pool to use to annotate any related Google Compute Engine resources.
          type: object
        resourceManagerTags:
          $ref: "#/components/schemas/ResourceManagerTags"
          description: A map of resource manager tag keys and values to be attached to the nodes.
        sandboxConfig:
          $ref: "#/components/schemas/SandboxConfig"
          description: Sandbox configuration for this node.
        secondaryBootDisks:
          description: List of secondary boot disks attached to the nodes.
          items:
            $ref: "#/components/schemas/SecondaryBootDisk"
          type: array
        serviceAccount:
          description: The Google Cloud Platform Service Account to be used by the node VMs. Specify the email address of the Service Account; otherwise, if no Service Account is specified, the "default" service account is used.
          type: string
        shieldedInstanceConfig:
          $ref: "#/components/schemas/ShieldedInstanceConfig"
          description: Shielded Instance options.
        soleTenantConfig:
          $ref: "#/components/schemas/SoleTenantConfig"
          description: Parameters for node pools to be backed by shared sole tenant node groups.
        spot:
          description: Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag.
          type: boolean
        tags:
          description: The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during cluster or node pool creation. Each tag within the list must comply with RFC1035.
          items:
            type: string
          type: array
        taints:
          description: "List of kubernetes taints to be applied to each node. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/"
          items:
            $ref: "#/components/schemas/NodeTaint"
          type: array
        windowsNodeConfig:
          $ref: "#/components/schemas/WindowsNodeConfig"
          description: Parameters that can be configured on Windows nodes.
        workloadMetadataConfig:
          $ref: "#/components/schemas/WorkloadMetadataConfig"
          description: The workload metadata configuration for this node.
      type: object
    NodeConfigDefaults:
      description: Subset of NodeConfig message that has defaults.
      properties:
        gcfsConfig:
          $ref: "#/components/schemas/GcfsConfig"
          description: GCFS (Google Container File System, also known as Riptide) options.
        loggingConfig:
          $ref: "#/components/schemas/NodePoolLoggingConfig"
          description: Logging configuration for node pools.
      type: object
    NodeKubeletConfig:
      description: Node kubelet configs.
      properties:
        cpuCfsQuota:
          description: Enable CPU CFS quota enforcement for containers that specify CPU limits. This option is enabled by default which makes kubelet use CFS quota (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to enforce container CPU limits. Otherwise, CPU limits will not be enforced at all. Disable this option to mitigate CPU throttling problems while still having your pods to be in Guaranteed QoS class by specifying the CPU limits. The default value is 'true' if unspecified.
          type: boolean
        cpuCfsQuotaPeriod:
          description: Set the CPU CFS quota period value 'cpu.cfs_period_us'. The string must be a sequence of decimal numbers, each with optional fraction and a unit suffix, such as "300ms". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h". The value must be a positive duration.
          type: string
        cpuManagerPolicy:
          description: "Control the CPU management policy on the node. See https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/ The following values are allowed. * \"none\": the default, which represents the existing scheduling behavior. * \"static\": allows pods with certain resource characteristics to be granted increased CPU affinity and exclusivity on the node. The default value is 'none' if unspecified."
          type: string
        insecureKubeletReadonlyPortEnabled:
          description: Enable or disable Kubelet read only port.
          type: boolean
        podPidsLimit:
          description: Set the Pod PID limits. See https://kubernetes.io/docs/concepts/policy/pid-limiting/#pod-pid-limits Controls the maximum number of processes allowed to run in a pod. The value must be greater than or equal to 1024 and less than 4194304.
          format: int64
          type: string
      type: object
    NodeLabels:
      description: Collection of node-level [Kubernetes labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels).
      properties:
        labels:
          additionalProperties:
            type: string
          description: Map of node label keys and node label values.
          type: object
      type: object
    NodeManagement:
      description: NodeManagement defines the set of node management services turned on for the node pool.
      properties:
        autoRepair:
          description: A flag that specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered.
          type: boolean
        autoUpgrade:
          description: A flag that specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes.
          type: boolean
        upgradeOptions:
          $ref: "#/components/schemas/AutoUpgradeOptions"
          description: Specifies the Auto Upgrade knobs for the node pool.
      type: object
    NodeNetworkConfig:
      description: Parameters for node pool-level network config.
      properties:
        additionalNodeNetworkConfigs:
          description: We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface
          items:
            $ref: "#/components/schemas/AdditionalNodeNetworkConfig"
          type: array
        additionalPodNetworkConfigs:
          description: We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node
          items:
            $ref: "#/components/schemas/AdditionalPodNetworkConfig"
          type: array
        createPodRange:
          description: Input only. Whether to create a new range for pod IPs in this node pool. Defaults are provided for `pod_range` and `pod_ipv4_cidr_block` if they are not specified. If neither `create_pod_range` or `pod_range` are specified, the cluster-level default (`ip_allocation_policy.cluster_ipv4_cidr_block`) is used. Only applicable if `ip_allocation_policy.use_ip_aliases` is true. This field cannot be changed after the node pool has been created.
          type: boolean
        enablePrivateNodes:
          description: Whether nodes have internal IP addresses only. If enable_private_nodes is not specified, then the value is derived from cluster.privateClusterConfig.enablePrivateNodes
          type: boolean
        networkPerformanceConfig:
          $ref: "#/components/schemas/NetworkPerformanceConfig"
          description: Network bandwidth tier configuration.
        podCidrOverprovisionConfig:
          $ref: "#/components/schemas/PodCIDROverprovisionConfig"
          description: "[PRIVATE FIELD] Pod CIDR size overprovisioning config for the nodepool. Pod CIDR size per node depends on max_pods_per_node. By default, the value of max_pods_per_node is rounded off to next power of 2 and we then double that to get the size of pod CIDR block per node. Example: max_pods_per_node of 30 would result in 64 IPs (/26). This config can disable the doubling of IPs (we still round off to next power of 2) Example: max_pods_per_node of 30 will result in 32 IPs (/27) when overprovisioning is disabled."
        podIpv4CidrBlock:
          description: The IP address range for pod IPs in this node pool. Only applicable if `create_pod_range` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) to pick a specific range to use. Only applicable if `ip_allocation_policy.use_ip_aliases` is true. This field cannot be changed after the node pool has been created.
          type: string
        podIpv4RangeUtilization:
          description: Output only. [Output only] The utilization of the IPv4 range for the pod. The ratio is Usage/[Total number of IPs in the secondary range], Usage=numNodes*numZones*podIPsPerNode.
          format: double
          readOnly: true
          type: number
        podRange:
          description: The ID of the secondary range for pod IPs. If `create_pod_range` is true, this ID is used for the new range. If `create_pod_range` is false, uses an existing secondary range with this ID. Only applicable if `ip_allocation_policy.use_ip_aliases` is true. This field cannot be changed after the node pool has been created.
          type: string
      type: object
    NodePool:
      description: NodePool contains the name and configuration for a cluster's node pool. Node pools are a set of nodes (i.e. VM's), with a common configuration and specification, under the control of the cluster master. They may have a set of Kubernetes labels applied to them, which may be used to reference them during pod scheduling. They may also be resized up or down, to accommodate the workload.
      properties:
        autoscaling:
          $ref: "#/components/schemas/NodePoolAutoscaling"
          description: Autoscaler configuration for this NodePool. Autoscaler is enabled only if a valid configuration is present.
        bestEffortProvisioning:
          $ref: "#/components/schemas/BestEffortProvisioning"
          description: Enable best effort provisioning for nodes
        conditions:
          description: Which conditions caused the current node pool state.
          items:
            $ref: "#/components/schemas/StatusCondition"
          type: array
        config:
          $ref: "#/components/schemas/NodeConfig"
          description: The node configuration of the pool.
        etag:
          description: This checksum is computed by the server based on the value of node pool fields, and may be sent on update requests to ensure the client has an up-to-date value before proceeding.
          type: string
        initialNodeCount:
          description: The initial node count for the pool. You must ensure that your Compute Engine [resource quota](https://cloud.google.com/compute/quotas) is sufficient for this number of instances. You must also have available firewall and routes quota.
          format: int32
          type: integer
        instanceGroupUrls:
          description: "[Output only] The resource URLs of the [managed instance groups](https://cloud.google.com/compute/docs/instance-groups/creating-groups-of-managed-instances) associated with this node pool. During the node pool blue-green upgrade operation, the URLs contain both blue and green resources."
          items:
            type: string
          type: array
        locations:
          description: "The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the NodePool's nodes should be located. If this value is unspecified during node pool creation, the [Cluster.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters#Cluster.FIELDS.locations) value will be used, instead. Warning: changing node pool locations will result in nodes being added and/or removed."
          items:
            type: string
          type: array
        management:
          $ref: "#/components/schemas/NodeManagement"
          description: NodeManagement configuration for this NodePool.
        maxPodsConstraint:
          $ref: "#/components/schemas/MaxPodsConstraint"
          description: The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
        name:
          description: The name of the node pool.
          type: string
        networkConfig:
          $ref: "#/components/schemas/NodeNetworkConfig"
          description: Networking configuration for this NodePool. If specified, it overrides the cluster-level defaults.
        placementPolicy:
          $ref: "#/components/schemas/PlacementPolicy"
          description: Specifies the node placement policy.
        podIpv4CidrSize:
          description: "[Output only] The pod CIDR block size per node in this node pool."
          format: int32
          type: integer
        queuedProvisioning:
          $ref: "#/components/schemas/QueuedProvisioning"
          description: Specifies the configuration of queued provisioning.
        selfLink:
          description: "[Output only] Server-defined URL for the resource."
          type: string
        status:
          description: "[Output only] The status of the nodes in this pool instance."
          enum:
            - STATUS_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - RUNNING_WITH_ERROR
            - RECONCILING
            - STOPPING
            - ERROR
          type: string
        statusMessage:
          deprecated: true
          description: "[Output only] Deprecated. Use conditions instead. Additional information about the current status of this node pool instance, if available."
          type: string
        updateInfo:
          $ref: "#/components/schemas/UpdateInfo"
          description: Output only. [Output only] Update info contains relevant information during a node pool update.
          readOnly: true
        upgradeSettings:
          $ref: "#/components/schemas/UpgradeSettings"
          description: Upgrade settings control disruption and speed of the upgrade.
        version:
          description: The version of Kubernetes running on this NodePool's nodes. If unspecified, it defaults as described [here](https://cloud.google.com/kubernetes-engine/versioning#specifying_node_version).
          type: string
      type: object
    NodePoolAutoConfig:
      description: Node pool configs that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled clusters.
      properties:
        networkTags:
          $ref: "#/components/schemas/NetworkTags"
          description: The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during cluster creation. Each tag within the list must comply with RFC1035.
        resourceManagerTags:
          $ref: "#/components/schemas/ResourceManagerTags"
          description: Resource manager tag keys and values to be attached to the nodes for managing Compute Engine firewalls using Network Firewall Policies.
      type: object
    NodePoolAutoscaling:
      description: NodePoolAutoscaling contains information required by cluster autoscaler to adjust the size of the node pool to the current cluster usage.
      properties:
        autoprovisioned:
          description: Can this node pool be deleted automatically.
          type: boolean
        enabled:
          description: Is autoscaling enabled for this node pool.
          type: boolean
        locationPolicy:
          description: Location policy used when scaling up a nodepool.
          enum:
            - LOCATION_POLICY_UNSPECIFIED
            - BALANCED
            - ANY
          type: string
        maxNodeCount:
          description: Maximum number of nodes for one location in the NodePool. Must be >= min_node_count. There has to be enough quota to scale up the cluster.
          format: int32
          type: integer
        minNodeCount:
          description: Minimum number of nodes for one location in the NodePool. Must be >= 1 and <= max_node_count.
          format: int32
          type: integer
        totalMaxNodeCount:
          description: Maximum number of nodes in the node pool. Must be greater than total_min_node_count. There has to be enough quota to scale up the cluster. The total_*_node_count fields are mutually exclusive with the *_node_count fields.
          format: int32
          type: integer
        totalMinNodeCount:
          description: Minimum number of nodes in the node pool. Must be greater than 1 less than total_max_node_count. The total_*_node_count fields are mutually exclusive with the *_node_count fields.
          format: int32
          type: integer
      type: object
    NodePoolDefaults:
      description: Subset of Nodepool message that has defaults.
      properties:
        nodeConfigDefaults:
          $ref: "#/components/schemas/NodeConfigDefaults"
          description: Subset of NodeConfig message that has defaults.
      type: object
    NodePoolLoggingConfig:
      description: NodePoolLoggingConfig specifies logging configuration for nodepools.
      properties:
        variantConfig:
          $ref: "#/components/schemas/LoggingVariantConfig"
          description: Logging variant configuration.
      type: object
    NodeTaint:
      description: "Kubernetes taint is composed of three fields: key, value, and effect. Effect can only be one of three types: NoSchedule, PreferNoSchedule or NoExecute. See [here](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration) for more information, including usage and the valid values."
      properties:
        effect:
          description: Effect for taint.
          enum:
            - EFFECT_UNSPECIFIED
            - NO_SCHEDULE
            - PREFER_NO_SCHEDULE
            - NO_EXECUTE
          type: string
        key:
          description: Key for taint.
          type: string
        value:
          description: Value for taint.
          type: string
      type: object
    NodeTaints:
      description: Collection of Kubernetes [node taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration).
      properties:
        taints:
          description: List of node taints.
          items:
            $ref: "#/components/schemas/NodeTaint"
          type: array
      type: object
    NotificationConfig:
      description: NotificationConfig is the configuration of notifications.
      properties:
        pubsub:
          $ref: "#/components/schemas/PubSub"
          description: Notification config for Pub/Sub.
      type: object
    Operation:
      description: This operation resource represents operations that may have happened or are happening on the cluster. All fields are output only.
      properties:
        clusterConditions:
          deprecated: true
          description: Which conditions caused the current cluster state. Deprecated. Use field error instead.
          items:
            $ref: "#/components/schemas/StatusCondition"
          type: array
        detail:
          description: Detailed operation progress, if available.
          type: string
        endTime:
          description: "[Output only] The time the operation completed, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."
          type: string
        error:
          $ref: "#/components/schemas/Status"
          description: The error result of the operation in case of failure.
        location:
          description: "[Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which the cluster resides."
          type: string
        name:
          description: The server-assigned ID for the operation.
          type: string
        nodepoolConditions:
          deprecated: true
          description: Which conditions caused the current node pool state. Deprecated. Use field error instead.
          items:
            $ref: "#/components/schemas/StatusCondition"
          type: array
        operationType:
          description: The operation type.
          enum:
            - TYPE_UNSPECIFIED
            - CREATE_CLUSTER
            - DELETE_CLUSTER
            - UPGRADE_MASTER
            - UPGRADE_NODES
            - REPAIR_CLUSTER
            - UPDATE_CLUSTER
            - CREATE_NODE_POOL
            - DELETE_NODE_POOL
            - SET_NODE_POOL_MANAGEMENT
            - AUTO_REPAIR_NODES
            - AUTO_UPGRADE_NODES
            - SET_LABELS
            - SET_MASTER_AUTH
            - SET_NODE_POOL_SIZE
            - SET_NETWORK_POLICY
            - SET_MAINTENANCE_POLICY
            - RESIZE_CLUSTER
            - FLEET_FEATURE_UPGRADE
          type: string
          x-enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
            - true
            - true
            - false
            - true
            - true
            - false
            - false
        progress:
          $ref: "#/components/schemas/OperationProgress"
          description: Output only. [Output only] Progress information for an operation.
          readOnly: true
        selfLink:
          description: "Server-defined URI for the operation. Example: `https://container.googleapis.com/v1alpha1/projects/123/locations/us-central1/operations/operation-123`."
          type: string
        startTime:
          description: "[Output only] The time the operation started, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."
          type: string
        status:
          description: The current status of the operation.
          enum:
            - STATUS_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
            - ABORTING
          type: string
        statusMessage:
          deprecated: true
          description: Output only. If an error has occurred, a textual description of the error. Deprecated. Use the field error instead.
          readOnly: true
          type: string
        targetLink:
          description: "Server-defined URI for the target of the operation. The format of this is a URI to the resource being modified (such as a cluster, node pool, or node). For node pool repairs, there may be multiple nodes being repaired, but only one will be the target. Examples: - ## `https://container.googleapis.com/v1/projects/123/locations/us-central1/clusters/my-cluster` ## `https://container.googleapis.com/v1/projects/123/zones/us-central1-c/clusters/my-cluster/nodePools/my-np` `https://container.googleapis.com/v1/projects/123/zones/us-central1-c/clusters/my-cluster/nodePools/my-np/node/my-node`"
          type: string
        zone:
          deprecated: true
          description: The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the operation is taking place. This field is deprecated, use location instead.
          type: string
      type: object
    OperationProgress:
      description: Information about operation (or operation stage) progress.
      properties:
        metrics:
          description: 'Progress metric bundle, for example: metrics: [{name: "nodes done", int_value: 15}, {name: "nodes total", int_value: 32}] or metrics: [{name: "progress", double_value: 0.56}, {name: "progress scale", double_value: 1.0}]'
          items:
            $ref: "#/components/schemas/Metric"
          type: array
        name:
          description: A non-parameterized string describing an operation stage. Unset for single-stage operations.
          type: string
        stages:
          description: Substages of an operation or a stage.
          items:
            $ref: "#/components/schemas/OperationProgress"
          type: array
        status:
          description: Status of an operation stage. Unset for single-stage operations.
          enum:
            - STATUS_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
            - ABORTING
          type: string
      type: object
    ParentProductConfig:
      description: ParentProductConfig is the configuration of the parent product of the cluster. This field is used by Google internal products that are built on top of a GKE cluster and take the ownership of the cluster.
      properties:
        labels:
          additionalProperties:
            type: string
          description: Labels contain the configuration of the parent product.
          type: object
        productName:
          description: Name of the parent product associated with the cluster.
          type: string
      type: object
    PlacementPolicy:
      description: PlacementPolicy defines the placement policy used by the node pool.
      properties:
        policyName:
          description: If set, refers to the name of a custom resource policy supplied by the user. The resource policy must be in the same project and region as the node pool. If not found, InvalidArgument error is returned.
          type: string
        tpuTopology:
          description: Optional. TPU placement topology for pod slice node pool. https://cloud.google.com/tpu/docs/types-topologies#tpu_topologies
          type: string
        type:
          description: The type of placement.
          enum:
            - TYPE_UNSPECIFIED
            - COMPACT
          type: string
      type: object
    PodCIDROverprovisionConfig:
      description: "[PRIVATE FIELD] Config for pod CIDR size overprovisioning."
      properties:
        disable:
          description: "Whether Pod CIDR overprovisioning is disabled. Note: Pod CIDR overprovisioning is enabled by default."
          type: boolean
      type: object
    PrivateClusterConfig:
      description: Configuration options for private clusters.
      properties:
        enablePrivateEndpoint:
          description: Whether the master's internal IP address is used as the cluster endpoint.
          type: boolean
        enablePrivateNodes:
          description: Whether nodes have internal IP addresses only. If enabled, all nodes are given only RFC 1918 private addresses and communicate with the master via private networking.
          type: boolean
        masterGlobalAccessConfig:
          $ref: "#/components/schemas/PrivateClusterMasterGlobalAccessConfig"
          description: Controls master global access settings.
        masterIpv4CidrBlock:
          description: The IP range in CIDR notation to use for the hosted master network. This range will be used for assigning internal IP addresses to the master or set of masters, as well as the ILB VIP. This range must not overlap with any other ranges in use within the cluster's network.
          type: string
        peeringName:
          description: Output only. The peering name in the customer VPC used by this cluster.
          type: string
        privateEndpoint:
          description: Output only. The internal IP address of this cluster's master endpoint.
          type: string
        privateEndpointSubnetwork:
          description: Subnet to provision the master's private endpoint during cluster creation. Specified in projects/*/regions/*/subnetworks/* format.
          type: string
        publicEndpoint:
          description: Output only. The external IP address of this cluster's master endpoint.
          type: string
      type: object
    PrivateClusterMasterGlobalAccessConfig:
      description: Configuration for controlling master global access settings.
      properties:
        enabled:
          description: Whenever master is accessible globally or not.
          type: boolean
      type: object
    PubSub:
      description: Pub/Sub specific notification config.
      properties:
        enabled:
          description: Enable notifications for Pub/Sub.
          type: boolean
        filter:
          $ref: "#/components/schemas/Filter"
          description: Allows filtering to one or more specific event types. If no filter is specified, or if a filter is specified with no event types, all event types will be sent
        topic:
          description: The desired Pub/Sub topic to which notifications will be sent by GKE. Format is `projects/{project}/topics/{topic}`.
          type: string
      type: object
    QueuedProvisioning:
      description: QueuedProvisioning defines the queued provisioning used by the node pool.
      properties:
        enabled:
          description: Denotes that this nodepool is QRM specific, meaning nodes can be only obtained through queuing via the Cluster Autoscaler ProvisioningRequest API.
          type: boolean
      type: object
    RangeInfo:
      description: RangeInfo contains the range name and the range utilization by this cluster.
      properties:
        rangeName:
          description: Output only. [Output only] Name of a range.
          readOnly: true
          type: string
        utilization:
          description: Output only. [Output only] The utilization of the range.
          format: double
          readOnly: true
          type: number
      type: object
    RecurringTimeWindow:
      description: Represents an arbitrary window of time that recurs.
      properties:
        recurrence:
          description: "An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how this window reccurs. They go on for the span of time between the start and end time. For example, to have something repeat every weekday, you'd use: `FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR` To repeat some window daily (equivalent to the DailyMaintenanceWindow): `FREQ=DAILY` For the first weekend of every month: `FREQ=MONTHLY;BYSETPOS=1;BYDAY=SA,SU` This specifies how frequently the window starts. Eg, if you wanted to have a 9-5 UTC-4 window every weekday, you'd use something like: ``` start time = 2019-01-01T09:00:00-0400 end time = 2019-01-01T17:00:00-0400 recurrence = FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR ``` Windows can span multiple days. Eg, to make the window encompass every weekend from midnight Saturday till the last minute of Sunday UTC: ``` start time = 2019-01-05T00:00:00Z end time = 2019-01-07T23:59:00Z recurrence = FREQ=WEEKLY;BYDAY=SA ``` Note the start and end time's specific dates are largely arbitrary except to specify duration of the window and when it first starts. The FREQ values of HOURLY, MINUTELY, and SECONDLY are not supported."
          type: string
        window:
          $ref: "#/components/schemas/TimeWindow"
          description: The window of the first recurrence.
      type: object
    ReleaseChannel:
      description: ReleaseChannel indicates which release channel a cluster is subscribed to. Release channels are arranged in order of risk. When a cluster is subscribed to a release channel, Google maintains both the master version and the node version. Node auto-upgrade defaults to true and cannot be disabled.
      properties:
        channel:
          description: channel specifies which release channel the cluster is subscribed to.
          enum:
            - UNSPECIFIED
            - RAPID
            - REGULAR
            - STABLE
          type: string
      type: object
    ReleaseChannelConfig:
      description: ReleaseChannelConfig exposes configuration for a release channel.
      properties:
        channel:
          description: The release channel this configuration applies to.
          enum:
            - UNSPECIFIED
            - RAPID
            - REGULAR
            - STABLE
          type: string
        defaultVersion:
          description: The default version for newly created clusters on the channel.
          type: string
        validVersions:
          description: List of valid versions for the channel.
          items:
            type: string
          type: array
      type: object
    ReservationAffinity:
      description: "[ReservationAffinity](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources) is the configuration of desired reservation which instances could take capacity from."
      properties:
        consumeReservationType:
          description: Corresponds to the type of reservation consumption.
          enum:
            - UNSPECIFIED
            - NO_RESERVATION
            - ANY_RESERVATION
            - SPECIFIC_RESERVATION
          type: string
        key:
          description: Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify "compute.googleapis.com/reservation-name" as the key and specify the name of your reservation as its value.
          type: string
        values:
          description: Corresponds to the label value(s) of reservation resource(s).
          items:
            type: string
          type: array
      type: object
    ResourceLabels:
      description: Collection of [GCP labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels).
      properties:
        labels:
          additionalProperties:
            type: string
          description: Map of node label keys and node label values.
          type: object
      type: object
    ResourceLimit:
      description: Contains information about amount of some resource in the cluster. For memory, value should be in GB.
      properties:
        maximum:
          description: Maximum amount of the resource in the cluster.
          format: int64
          type: string
        minimum:
          description: Minimum amount of the resource in the cluster.
          format: int64
          type: string
        resourceType:
          description: Resource name "cpu", "memory" or gpu-specific string.
          type: string
      type: object
    ResourceManagerTags:
      description: A map of resource manager tag keys and values to be attached to the nodes for managing Compute Engine firewalls using Network Firewall Policies. Tags must be according to specifications in https://cloud.google.com/vpc/docs/tags-firewalls-overview#specifications. A maximum of 5 tag key-value pairs can be specified. Existing tags will be replaced with new values.
      properties:
        tags:
          additionalProperties:
            type: string
          description: TagKeyValue must be in one of the following formats ([KEY]=[VALUE]) 1. `tagKeys/{tag_key_id}=tagValues/{tag_value_id}` 2. `{org_id}/{tag_key_name}={tag_value_name}` 3. `{project_id}/{tag_key_name}={tag_value_name}`
          type: object
      type: object
    ResourceUsageExportConfig:
      description: Configuration for exporting cluster resource usages.
      properties:
        bigqueryDestination:
          $ref: "#/components/schemas/BigQueryDestination"
          description: Configuration to use BigQuery as usage export destination.
        consumptionMeteringConfig:
          $ref: "#/components/schemas/ConsumptionMeteringConfig"
          description: Configuration to enable resource consumption metering.
        enableNetworkEgressMetering:
          description: Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created in the cluster to meter network egress traffic.
          type: boolean
      type: object
    RollbackNodePoolUpgradeRequest:
      description: RollbackNodePoolUpgradeRequest rollbacks the previously Aborted or Failed NodePool upgrade. This will be an no-op if the last upgrade successfully completed.
      properties:
        clusterId:
          deprecated: true
          description: Deprecated. The name of the cluster to rollback. This field has been deprecated and replaced by the name field.
          type: string
        name:
          description: The name (project, location, cluster, node pool id) of the node poll to rollback upgrade. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
          type: string
        nodePoolId:
          deprecated: true
          description: Deprecated. The name of the node pool to rollback. This field has been deprecated and replaced by the name field.
          type: string
        projectId:
          deprecated: true
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        respectPdb:
          description: Option for rollback to ignore the PodDisruptionBudget. Default value is false.
          type: boolean
        zone:
          deprecated: true
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
      type: object
    SandboxConfig:
      description: SandboxConfig contains configurations of the sandbox to use for the node.
      properties:
        type:
          description: Type of the sandbox to use for the node.
          enum:
            - UNSPECIFIED
            - GVISOR
          type: string
      type: object
    SecondaryBootDisk:
      description: SecondaryBootDisk represents a persistent disk attached to a node with special configurations based on its mode.
      properties:
        diskImage:
          description: Fully-qualified resource ID for an existing disk image.
          type: string
        mode:
          description: Disk mode (container image cache, etc.)
          enum:
            - MODE_UNSPECIFIED
            - CONTAINER_IMAGE_CACHE
          type: string
      type: object
    SecurityBulletinEvent:
      description: SecurityBulletinEvent is a notification sent to customers when a security bulletin has been posted that they are vulnerable to.
      properties:
        affectedSupportedMinors:
          description: The GKE minor versions affected by this vulnerability.
          items:
            type: string
          type: array
        briefDescription:
          description: A brief description of the bulletin. See the bulletin pointed to by the bulletin_uri field for an expanded description.
          type: string
        bulletinId:
          description: The ID of the bulletin corresponding to the vulnerability.
          type: string
        bulletinUri:
          description: The URI link to the bulletin on the website for more information.
          type: string
        cveIds:
          description: The CVEs associated with this bulletin.
          items:
            type: string
          type: array
        manualStepsRequired:
          description: If this field is specified, it means there are manual steps that the user must take to make their clusters safe.
          type: boolean
        patchedVersions:
          description: The GKE versions where this vulnerability is patched.
          items:
            type: string
          type: array
        resourceTypeAffected:
          description: The resource type (node/control plane) that has the vulnerability. Multiple notifications (1 notification per resource type) will be sent for a vulnerability that affects > 1 resource type.
          type: string
        severity:
          description: The severity of this bulletin as it relates to GKE.
          type: string
        suggestedUpgradeTarget:
          description: This represents a version selected from the patched_versions field that the cluster receiving this notification should most likely want to upgrade to based on its current version. Note that if this notification is being received by a given cluster, it means that this version is currently available as an upgrade target in that cluster's location.
          type: string
      type: object
    SecurityPostureConfig:
      description: SecurityPostureConfig defines the flags needed to enable/disable features for the Security Posture API.
      properties:
        mode:
          description: Sets which mode to use for Security Posture features.
          enum:
            - MODE_UNSPECIFIED
            - DISABLED
            - BASIC
          type: string
        vulnerabilityMode:
          description: Sets which mode to use for vulnerability scanning.
          enum:
            - VULNERABILITY_MODE_UNSPECIFIED
            - VULNERABILITY_DISABLED
            - VULNERABILITY_BASIC
            - VULNERABILITY_ENTERPRISE
          type: string
      type: object
    ServerConfig:
      description: Kubernetes Engine service configuration.
      properties:
        channels:
          description: List of release channel configurations.
          items:
            $ref: "#/components/schemas/ReleaseChannelConfig"
          type: array
        defaultClusterVersion:
          description: Version of Kubernetes the service deploys by default.
          type: string
        defaultImageType:
          description: Default image type.
          type: string
        validImageTypes:
          description: List of valid image types.
          items:
            type: string
          type: array
        validMasterVersions:
          description: List of valid master versions, in descending order.
          items:
            type: string
          type: array
        validNodeVersions:
          description: List of valid node upgrade target versions, in descending order.
          items:
            type: string
          type: array
      type: object
    ServiceExternalIPsConfig:
      description: Config to block services with externalIPs field.
      properties:
        enabled:
          description: Whether Services with ExternalIPs field are allowed or not.
          type: boolean
      type: object
    SetAddonsConfigRequest:
      description: SetAddonsConfigRequest sets the addons associated with the cluster.
      properties:
        addonsConfig:
          $ref: "#/components/schemas/AddonsConfig"
          description: Required. The desired configurations for the various addons available to run in the cluster.
        clusterId:
          deprecated: true
          description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          type: string
        name:
          description: The name (project, location, cluster) of the cluster to set addons. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
        projectId:
          deprecated: true
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        zone:
          deprecated: true
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
      type: object
    SetLabelsRequest:
      description: SetLabelsRequest sets the Google Cloud Platform labels on a Google Container Engine cluster, which will in turn set them for Google Compute Engine resources used by that cluster
      properties:
        clusterId:
          deprecated: true
          description: Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.
          type: string
        labelFingerprint:
          description: Required. The fingerprint of the previous set of labels for this resource, used to detect conflicts. The fingerprint is initially generated by Kubernetes Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash when updating or changing labels. Make a `get()` request to the resource to get the latest fingerprint.
          type: string
        name:
          description: The name (project, location, cluster name) of the cluster to set labels. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
        projectId:
          deprecated: true
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        resourceLabels:
          additionalProperties:
            type: string
          description: Required. The labels to set for that cluster.
          type: object
        zone:
          deprecated: true
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
      type: object
    SetLegacyAbacRequest:
      description: SetLegacyAbacRequest enables or disables the ABAC authorization mechanism for a cluster.
      properties:
        clusterId:
          deprecated: true
          description: Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field.
          type: string
        enabled:
          description: Required. Whether ABAC authorization will be enabled in the cluster.
          type: boolean
        name:
          description: The name (project, location, cluster name) of the cluster to set legacy abac. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
        projectId:
          deprecated: true
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        zone:
          deprecated: true
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
      type: object
    SetLocationsRequest:
      description: SetLocationsRequest sets the locations of the cluster.
      properties:
        clusterId:
          deprecated: true
          description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          type: string
        locations:
          description: Required. The desired list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. Changing the locations a cluster is in will result in nodes being either created or removed from the cluster, depending on whether locations are being added or removed. This list must always include the cluster's primary zone.
          items:
            type: string
          type: array
        name:
          description: The name (project, location, cluster) of the cluster to set locations. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
        projectId:
          deprecated: true
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        zone:
          deprecated: true
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
      type: object
    SetLoggingServiceRequest:
      description: SetLoggingServiceRequest sets the logging service of a cluster.
      properties:
        clusterId:
          deprecated: true
          description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          type: string
        loggingService:
          description: "Required. The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions."
          type: string
        name:
          description: The name (project, location, cluster) of the cluster to set logging. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
        projectId:
          deprecated: true
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        zone:
          deprecated: true
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
      type: object
    SetMaintenancePolicyRequest:
      description: SetMaintenancePolicyRequest sets the maintenance policy for a cluster.
      properties:
        clusterId:
          description: Required. The name of the cluster to update.
          type: string
        maintenancePolicy:
          $ref: "#/components/schemas/MaintenancePolicy"
          description: Required. The maintenance policy to be set for the cluster. An empty field clears the existing maintenance policy.
        name:
          description: The name (project, location, cluster name) of the cluster to set maintenance policy. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
        projectId:
          description: Required. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects).
          type: string
        zone:
          description: Required. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides.
          type: string
      type: object
    SetMasterAuthRequest:
      description: SetMasterAuthRequest updates the admin password of a cluster.
      properties:
        action:
          description: Required. The exact form of action to be taken on the master auth.
          enum:
            - UNKNOWN
            - SET_PASSWORD
            - GENERATE_PASSWORD
            - SET_USERNAME
          type: string
        clusterId:
          deprecated: true
          description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          type: string
        name:
          description: The name (project, location, cluster) of the cluster to set auth. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
        projectId:
          deprecated: true
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        update:
          $ref: "#/components/schemas/MasterAuth"
          description: Required. A description of the update.
        zone:
          deprecated: true
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
      type: object
    SetMonitoringServiceRequest:
      description: SetMonitoringServiceRequest sets the monitoring service of a cluster.
      properties:
        clusterId:
          deprecated: true
          description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          type: string
        monitoringService:
          description: 'Required. The monitoring service the cluster should use to write metrics. Currently available options: * "monitoring.googleapis.com/kubernetes" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.'
          type: string
        name:
          description: The name (project, location, cluster) of the cluster to set monitoring. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
        projectId:
          deprecated: true
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        zone:
          deprecated: true
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
      type: object
    SetNetworkPolicyRequest:
      description: SetNetworkPolicyRequest enables/disables network policy for a cluster.
      properties:
        clusterId:
          deprecated: true
          description: Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.
          type: string
        name:
          description: The name (project, location, cluster name) of the cluster to set networking policy. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
        networkPolicy:
          $ref: "#/components/schemas/NetworkPolicy"
          description: Required. Configuration options for the NetworkPolicy feature.
        projectId:
          deprecated: true
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        zone:
          deprecated: true
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
      type: object
    SetNodePoolAutoscalingRequest:
      description: SetNodePoolAutoscalingRequest sets the autoscaler settings of a node pool.
      properties:
        autoscaling:
          $ref: "#/components/schemas/NodePoolAutoscaling"
          description: Required. Autoscaling configuration for the node pool.
        clusterId:
          deprecated: true
          description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          type: string
        name:
          description: The name (project, location, cluster, node pool) of the node pool to set autoscaler settings. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
          type: string
        nodePoolId:
          deprecated: true
          description: Deprecated. The name of the node pool to upgrade. This field has been deprecated and replaced by the name field.
          type: string
        projectId:
          deprecated: true
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        zone:
          deprecated: true
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
      type: object
    SetNodePoolManagementRequest:
      description: SetNodePoolManagementRequest sets the node management properties of a node pool.
      properties:
        clusterId:
          deprecated: true
          description: Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field.
          type: string
        management:
          $ref: "#/components/schemas/NodeManagement"
          description: Required. NodeManagement configuration for the node pool.
        name:
          description: The name (project, location, cluster, node pool id) of the node pool to set management properties. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
          type: string
        nodePoolId:
          deprecated: true
          description: Deprecated. The name of the node pool to update. This field has been deprecated and replaced by the name field.
          type: string
        projectId:
          deprecated: true
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        zone:
          deprecated: true
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
      type: object
    SetNodePoolSizeRequest:
      description: SetNodePoolSizeRequest sets the size of a node pool.
      properties:
        clusterId:
          deprecated: true
          description: Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field.
          type: string
        name:
          description: The name (project, location, cluster, node pool id) of the node pool to set size. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
          type: string
        nodeCount:
          description: Required. The desired node count for the pool.
          format: int32
          type: integer
        nodePoolId:
          deprecated: true
          description: Deprecated. The name of the node pool to update. This field has been deprecated and replaced by the name field.
          type: string
        projectId:
          deprecated: true
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        zone:
          deprecated: true
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
      type: object
    ShieldedInstanceConfig:
      description: A set of Shielded Instance options.
      properties:
        enableIntegrityMonitoring:
          description: Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.
          type: boolean
        enableSecureBoot:
          description: Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.
          type: boolean
      type: object
    ShieldedNodes:
      description: Configuration of Shielded Nodes feature.
      properties:
        enabled:
          description: Whether Shielded Nodes features are enabled on all nodes in this cluster.
          type: boolean
      type: object
    SoleTenantConfig:
      description: SoleTenantConfig contains the NodeAffinities to specify what shared sole tenant node groups should back the node pool.
      properties:
        nodeAffinities:
          description: NodeAffinities used to match to a shared sole tenant node group.
          items:
            $ref: "#/components/schemas/NodeAffinity"
          type: array
      type: object
    StandardRolloutPolicy:
      description: Standard rollout policy is the default policy for blue-green.
      properties:
        batchNodeCount:
          description: Number of blue nodes to drain in a batch.
          format: int32
          type: integer
        batchPercentage:
          description: Percentage of the blue pool nodes to drain in a batch. The range of this field should be (0.0, 1.0].
          format: float
          type: number
        batchSoakDuration:
          description: Soak time after each batch gets drained. Default to zero.
          format: google-duration
          type: string
      type: object
    StartIPRotationRequest:
      description: StartIPRotationRequest creates a new IP for the cluster and then performs a node upgrade on each node pool to point to the new IP.
      properties:
        clusterId:
          deprecated: true
          description: Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.
          type: string
        name:
          description: The name (project, location, cluster name) of the cluster to start IP rotation. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
        projectId:
          deprecated: true
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        rotateCredentials:
          description: Whether to rotate credentials during IP rotation.
          type: boolean
        zone:
          deprecated: true
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
      type: object
    StatefulHAConfig:
      description: Configuration for the Stateful HA add-on.
      properties:
        enabled:
          description: Whether the Stateful HA add-on is enabled for this cluster.
          type: boolean
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    StatusCondition:
      description: StatusCondition describes why a cluster or a node pool has a certain status (e.g., ERROR or DEGRADED).
      properties:
        canonicalCode:
          description: Canonical code of the condition.
          enum:
            - OK
            - CANCELLED
            - UNKNOWN
            - INVALID_ARGUMENT
            - DEADLINE_EXCEEDED
            - NOT_FOUND
            - ALREADY_EXISTS
            - PERMISSION_DENIED
            - UNAUTHENTICATED
            - RESOURCE_EXHAUSTED
            - FAILED_PRECONDITION
            - ABORTED
            - OUT_OF_RANGE
            - UNIMPLEMENTED
            - INTERNAL
            - UNAVAILABLE
            - DATA_LOSS
          type: string
        code:
          deprecated: true
          description: Machine-friendly representation of the condition Deprecated. Use canonical_code instead.
          enum:
            - UNKNOWN
            - GCE_STOCKOUT
            - GKE_SERVICE_ACCOUNT_DELETED
            - GCE_QUOTA_EXCEEDED
            - SET_BY_OPERATOR
            - CLOUD_KMS_KEY_ERROR
            - CA_EXPIRING
          type: string
        message:
          description: Human-friendly representation of the condition
          type: string
      type: object
    TimeWindow:
      description: Represents an arbitrary window of time.
      properties:
        endTime:
          description: The time that the window ends. The end time should take place after the start time.
          format: google-datetime
          type: string
        maintenanceExclusionOptions:
          $ref: "#/components/schemas/MaintenanceExclusionOptions"
          description: MaintenanceExclusionOptions provides maintenance exclusion related options.
        startTime:
          description: The time that the window first starts.
          format: google-datetime
          type: string
      type: object
    UpdateClusterRequest:
      description: UpdateClusterRequest updates the settings of a cluster.
      properties:
        clusterId:
          deprecated: true
          description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          type: string
        name:
          description: The name (project, location, cluster) of the cluster to update. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
        projectId:
          deprecated: true
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        update:
          $ref: "#/components/schemas/ClusterUpdate"
          description: Required. A description of the update.
        zone:
          deprecated: true
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
      type: object
    UpdateInfo:
      description: UpdateInfo contains resource (instance groups, etc), status and other intermediate information relevant to a node pool upgrade.
      properties:
        blueGreenInfo:
          $ref: "#/components/schemas/BlueGreenInfo"
          description: Information of a blue-green upgrade.
      type: object
    UpdateMasterRequest:
      description: UpdateMasterRequest updates the master of the cluster.
      properties:
        clusterId:
          deprecated: true
          description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          type: string
        masterVersion:
          description: 'Required. The Kubernetes version to change the master to. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "-": picks the default Kubernetes version'
          type: string
        name:
          description: The name (project, location, cluster) of the cluster to update. Specified in the format `projects/*/locations/*/clusters/*`.
          type: string
        projectId:
          deprecated: true
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        zone:
          deprecated: true
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
      type: object
    UpdateNodePoolRequest:
      description: UpdateNodePoolRequests update a node pool's image and/or version.
      properties:
        clusterId:
          deprecated: true
          description: Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.
          type: string
        confidentialNodes:
          $ref: "#/components/schemas/ConfidentialNodes"
          description: Confidential nodes config. All the nodes in the node pool will be Confidential VM once enabled.
        diskSizeGb:
          description: Optional. The desired disk size for nodes in the node pool specified in GB. The smallest allowed disk size is 10GB. Initiates an upgrade operation that migrates the nodes in the node pool to the specified disk size.
          format: int64
          type: string
        diskType:
          description: Optional. The desired disk type (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced') for nodes in the node pool. Initiates an upgrade operation that migrates the nodes in the node pool to the specified disk type.
          type: string
        etag:
          description: The current etag of the node pool. If an etag is provided and does not match the current etag of the node pool, update will be blocked and an ABORTED error will be returned.
          type: string
        fastSocket:
          $ref: "#/components/schemas/FastSocket"
          description: Enable or disable NCCL fast socket for the node pool.
        gcfsConfig:
          $ref: "#/components/schemas/GcfsConfig"
          description: GCFS config.
        gvnic:
          $ref: "#/components/schemas/VirtualNIC"
          description: Enable or disable gvnic on the node pool.
        imageType:
          description: Required. The desired image type for the node pool. Please see https://cloud.google.com/kubernetes-engine/docs/concepts/node-images for available image types.
          type: string
        kubeletConfig:
          $ref: "#/components/schemas/NodeKubeletConfig"
          description: Node kubelet configs.
        labels:
          $ref: "#/components/schemas/NodeLabels"
          description: The desired node labels to be applied to all nodes in the node pool. If this field is not present, the labels will not be changed. Otherwise, the existing node labels will be *replaced* with the provided labels.
        linuxNodeConfig:
          $ref: "#/components/schemas/LinuxNodeConfig"
          description: Parameters that can be configured on Linux nodes.
        locations:
          description: The desired list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the node pool's nodes should be located. Changing the locations for a node pool will result in nodes being either created or removed from the node pool, depending on whether locations are being added or removed.
          items:
            type: string
          type: array
        loggingConfig:
          $ref: "#/components/schemas/NodePoolLoggingConfig"
          description: Logging configuration.
        machineType:
          description: Optional. The desired [Google Compute Engine machine type](https://cloud.google.com/compute/docs/machine-types) for nodes in the node pool. Initiates an upgrade operation that migrates the nodes in the node pool to the specified machine type.
          type: string
        name:
          description: The name (project, location, cluster, node pool) of the node pool to update. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
          type: string
        nodeNetworkConfig:
          $ref: "#/components/schemas/NodeNetworkConfig"
          description: Node network config.
        nodePoolId:
          deprecated: true
          description: Deprecated. The name of the node pool to upgrade. This field has been deprecated and replaced by the name field.
          type: string
        nodeVersion:
          description: 'Required. The Kubernetes version to change the nodes to (typically an upgrade). Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "-": picks the Kubernetes master version'
          type: string
        projectId:
          deprecated: true
          description: Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.
          type: string
        queuedProvisioning:
          $ref: "#/components/schemas/QueuedProvisioning"
          description: Specifies the configuration of queued provisioning.
        resourceLabels:
          $ref: "#/components/schemas/ResourceLabels"
          description: The resource labels for the node pool to use to annotate any related Google Compute Engine resources.
        resourceManagerTags:
          $ref: "#/components/schemas/ResourceManagerTags"
          description: Desired resource manager tag keys and values to be attached to the nodes for managing Compute Engine firewalls using Network Firewall Policies. Existing tags will be replaced with new values.
        tags:
          $ref: "#/components/schemas/NetworkTags"
          description: The desired network tags to be applied to all nodes in the node pool. If this field is not present, the tags will not be changed. Otherwise, the existing network tags will be *replaced* with the provided tags.
        taints:
          $ref: "#/components/schemas/NodeTaints"
          description: The desired node taints to be applied to all nodes in the node pool. If this field is not present, the taints will not be changed. Otherwise, the existing node taints will be *replaced* with the provided taints.
        upgradeSettings:
          $ref: "#/components/schemas/UpgradeSettings"
          description: Upgrade settings control disruption and speed of the upgrade.
        windowsNodeConfig:
          $ref: "#/components/schemas/WindowsNodeConfig"
          description: Parameters that can be configured on Windows nodes.
        workloadMetadataConfig:
          $ref: "#/components/schemas/WorkloadMetadataConfig"
          description: The desired workload metadata config for the node pool.
        zone:
          deprecated: true
          description: Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.
          type: string
      type: object
    UpgradeAvailableEvent:
      description: UpgradeAvailableEvent is a notification sent to customers when a new available version is released.
      properties:
        releaseChannel:
          $ref: "#/components/schemas/ReleaseChannel"
          description: The release channel of the version. If empty, it means a non-channel release.
        resource:
          description: Optional relative path to the resource. For example, the relative path of the node pool.
          type: string
        resourceType:
          description: The resource type of the release version.
          enum:
            - UPGRADE_RESOURCE_TYPE_UNSPECIFIED
            - MASTER
            - NODE_POOL
          type: string
        version:
          description: The release version available for upgrade.
          type: string
      type: object
    UpgradeEvent:
      description: UpgradeEvent is a notification sent to customers by the cluster server when a resource is upgrading.
      properties:
        currentVersion:
          description: The current version before the upgrade.
          type: string
        operation:
          description: The operation associated with this upgrade.
          type: string
        operationStartTime:
          description: The time when the operation was started.
          format: google-datetime
          type: string
        resource:
          description: Optional relative path to the resource. For example in node pool upgrades, the relative path of the node pool.
          type: string
        resourceType:
          description: The resource type that is upgrading.
          enum:
            - UPGRADE_RESOURCE_TYPE_UNSPECIFIED
            - MASTER
            - NODE_POOL
          type: string
        targetVersion:
          description: The target version for the upgrade.
          type: string
      type: object
    UpgradeSettings:
      description: "These upgrade settings control the level of parallelism and the level of disruption caused by an upgrade. maxUnavailable controls the number of nodes that can be simultaneously unavailable. maxSurge controls the number of additional nodes that can be added to the node pool temporarily for the time of the upgrade to increase the number of available nodes. (maxUnavailable + maxSurge) determines the level of parallelism (how many nodes are being upgraded at the same time). Note: upgrades inevitably introduce some disruption since workloads need to be moved from old nodes to new, upgraded ones. Even if maxUnavailable=0, this holds true. (Disruption stays within the limits of PodDisruptionBudget, if it is configured.) Consider a hypothetical node pool with 5 nodes having maxSurge=2, maxUnavailable=1. This means the upgrade process upgrades 3 nodes simultaneously. It creates 2 additional (upgraded) nodes, then it brings down 3 old (not yet upgraded) nodes at the same time. This ensures that there are always at least 4 nodes available. These upgrade settings configure the upgrade strategy for the node pool. Use strategy to switch between the strategies applied to the node pool. If the strategy is ROLLING, use max_surge and max_unavailable to control the level of parallelism and the level of disruption caused by upgrade. 1. maxSurge controls the number of additional nodes that can be added to the node pool temporarily for the time of the upgrade to increase the number of available nodes. 2. maxUnavailable controls the number of nodes that can be simultaneously unavailable. 3. (maxUnavailable + maxSurge) determines the level of parallelism (how many nodes are being upgraded at the same time). If the strategy is BLUE_GREEN, use blue_green_settings to configure the blue-green upgrade related settings. 1. standard_rollout_policy is the default policy. The policy is used to control the way blue pool gets drained. The draining is executed in the batch mode. The batch size could be specified as either percentage of the node pool size or the number of nodes. batch_soak_duration is the soak time after each batch gets drained. 2. node_pool_soak_duration is the soak time after all blue nodes are drained. After this period, the blue pool nodes will be deleted."
      properties:
        blueGreenSettings:
          $ref: "#/components/schemas/BlueGreenSettings"
          description: Settings for blue-green upgrade strategy.
        maxSurge:
          description: The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process.
          format: int32
          type: integer
        maxUnavailable:
          description: The maximum number of nodes that can be simultaneously unavailable during the upgrade process. A node is considered available if its status is Ready.
          format: int32
          type: integer
        strategy:
          description: Update strategy of the node pool.
          enum:
            - NODE_POOL_UPDATE_STRATEGY_UNSPECIFIED
            - BLUE_GREEN
            - SURGE
          type: string
      type: object
    UsableSubnetwork:
      description: UsableSubnetwork resource returns the subnetwork name, its associated network and the primary CIDR range.
      properties:
        ipCidrRange:
          description: The range of internal addresses that are owned by this subnetwork.
          type: string
        network:
          description: "Network Name. Example: projects/my-project/global/networks/my-network"
          type: string
        secondaryIpRanges:
          description: Secondary IP ranges.
          items:
            $ref: "#/components/schemas/UsableSubnetworkSecondaryRange"
          type: array
        statusMessage:
          description: A human readable status message representing the reasons for cases where the caller cannot use the secondary ranges under the subnet. For example if the secondary_ip_ranges is empty due to a permission issue, an insufficient permission message will be given by status_message.
          type: string
        subnetwork:
          description: "Subnetwork Name. Example: projects/my-project/regions/us-central1/subnetworks/my-subnet"
          type: string
      type: object
    UsableSubnetworkSecondaryRange:
      description: Secondary IP range of a usable subnetwork.
      properties:
        ipCidrRange:
          description: The range of IP addresses belonging to this subnetwork secondary range.
          type: string
        rangeName:
          description: The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance.
          type: string
        status:
          description: This field is to determine the status of the secondary range programmably.
          enum:
            - UNKNOWN
            - UNUSED
            - IN_USE_SERVICE
            - IN_USE_SHAREABLE_POD
            - IN_USE_MANAGED_POD
          type: string
      type: object
    VerticalPodAutoscaling:
      description: VerticalPodAutoscaling contains global, per-cluster information required by Vertical Pod Autoscaler to automatically adjust the resources of pods controlled by it.
      properties:
        enabled:
          description: Enables vertical pod autoscaling.
          type: boolean
      type: object
    VirtualNIC:
      description: Configuration of gVNIC feature.
      properties:
        enabled:
          description: Whether gVNIC features are enabled in the node pool.
          type: boolean
      type: object
    WindowsNodeConfig:
      description: Parameters that can be configured on Windows nodes. Windows Node Config that define the parameters that will be used to configure the Windows node pool settings
      properties:
        osVersion:
          description: OSVersion specifies the Windows node config to be used on the node
          enum:
            - OS_VERSION_UNSPECIFIED
            - OS_VERSION_LTSC2019
            - OS_VERSION_LTSC2022
          type: string
      type: object
    WorkloadIdentityConfig:
      description: Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
      properties:
        workloadPool:
          description: The workload pool to attach all Kubernetes service accounts to.
          type: string
      type: object
    WorkloadMetadataConfig:
      description: WorkloadMetadataConfig defines the metadata configuration to expose to workloads on the node pool.
      properties:
        mode:
          description: Mode is the configuration for how to expose metadata to workloads running on the node pool.
          enum:
            - MODE_UNSPECIFIED
            - GCE_METADATA
            - GKE_METADATA
          type: string
      type: object
    WorkloadPolicyConfig:
      description: WorkloadPolicyConfig is the configuration of workload policy for autopilot clusters.
      properties:
        allowNetAdmin:
          description: If true, workloads can use NET_ADMIN capability.
          type: boolean
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
