# coding: utf-8

"""
    Kubernetes Engine API

    Builds and manages container-based applications, powered by the open source Kubernetes technology.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.set_node_pool_management_request import SetNodePoolManagementRequest

class TestSetNodePoolManagementRequest(unittest.TestCase):
    """SetNodePoolManagementRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SetNodePoolManagementRequest:
        """Test SetNodePoolManagementRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SetNodePoolManagementRequest`
        """
        model = SetNodePoolManagementRequest()
        if include_optional:
            return SetNodePoolManagementRequest(
                cluster_id = '',
                management = openapi_client.models.node_management.NodeManagement(
                    auto_repair = True, 
                    auto_upgrade = True, 
                    upgrade_options = openapi_client.models.auto_upgrade_options.AutoUpgradeOptions(
                        auto_upgrade_start_time = '', 
                        description = '', ), ),
                name = '',
                node_pool_id = '',
                project_id = '',
                zone = ''
            )
        else:
            return SetNodePoolManagementRequest(
        )
        """

    def testSetNodePoolManagementRequest(self):
        """Test SetNodePoolManagementRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
