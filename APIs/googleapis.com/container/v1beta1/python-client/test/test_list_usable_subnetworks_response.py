# coding: utf-8

"""
    Kubernetes Engine API

    Builds and manages container-based applications, powered by the open source Kubernetes technology.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_usable_subnetworks_response import ListUsableSubnetworksResponse

class TestListUsableSubnetworksResponse(unittest.TestCase):
    """ListUsableSubnetworksResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListUsableSubnetworksResponse:
        """Test ListUsableSubnetworksResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListUsableSubnetworksResponse`
        """
        model = ListUsableSubnetworksResponse()
        if include_optional:
            return ListUsableSubnetworksResponse(
                next_page_token = '',
                subnetworks = [
                    openapi_client.models.usable_subnetwork.UsableSubnetwork(
                        ip_cidr_range = '', 
                        network = '', 
                        secondary_ip_ranges = [
                            openapi_client.models.usable_subnetwork_secondary_range.UsableSubnetworkSecondaryRange(
                                ip_cidr_range = '', 
                                range_name = '', 
                                status = 'UNKNOWN', )
                            ], 
                        status_message = '', 
                        subnetwork = '', )
                    ]
            )
        else:
            return ListUsableSubnetworksResponse(
        )
        """

    def testListUsableSubnetworksResponse(self):
        """Test ListUsableSubnetworksResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
