# coding: utf-8

"""
    Kubernetes Engine API

    Builds and manages container-based applications, powered by the open source Kubernetes technology.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.node_pool_defaults import NodePoolDefaults

class TestNodePoolDefaults(unittest.TestCase):
    """NodePoolDefaults unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NodePoolDefaults:
        """Test NodePoolDefaults
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NodePoolDefaults`
        """
        model = NodePoolDefaults()
        if include_optional:
            return NodePoolDefaults(
                node_config_defaults = openapi_client.models.node_config_defaults.NodeConfigDefaults(
                    gcfs_config = openapi_client.models.gcfs_config.GcfsConfig(
                        enabled = True, ), 
                    host_maintenance_policy = openapi_client.models.host_maintenance_policy.HostMaintenancePolicy(
                        maintenance_interval = 'MAINTENANCE_INTERVAL_UNSPECIFIED', 
                        opportunistic_maintenance_strategy = openapi_client.models.opportunistic_maintenance_strategy.OpportunisticMaintenanceStrategy(
                            maintenance_availability_window = '', 
                            min_nodes_per_pool = '', 
                            node_idle_time_window = '', ), ), 
                    logging_config = openapi_client.models.node_pool_logging_config.NodePoolLoggingConfig(
                        variant_config = openapi_client.models.logging_variant_config.LoggingVariantConfig(
                            variant = 'VARIANT_UNSPECIFIED', ), ), )
            )
        else:
            return NodePoolDefaults(
        )
        """

    def testNodePoolDefaults(self):
        """Test NodePoolDefaults"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
