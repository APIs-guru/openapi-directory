# coding: utf-8

"""
    Kubernetes Engine API

    Builds and manages container-based applications, powered by the open source Kubernetes technology.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.monitoring_config import MonitoringConfig

class TestMonitoringConfig(unittest.TestCase):
    """MonitoringConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MonitoringConfig:
        """Test MonitoringConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MonitoringConfig`
        """
        model = MonitoringConfig()
        if include_optional:
            return MonitoringConfig(
                advanced_datapath_observability_config = openapi_client.models.advanced_datapath_observability_config.AdvancedDatapathObservabilityConfig(
                    enable_metrics = True, 
                    enable_relay = True, 
                    relay_mode = 'RELAY_MODE_UNSPECIFIED', ),
                component_config = openapi_client.models.monitoring_component_config.MonitoringComponentConfig(
                    enable_components = [
                        'COMPONENT_UNSPECIFIED'
                        ], ),
                managed_prometheus_config = openapi_client.models.managed_prometheus_config.ManagedPrometheusConfig(
                    enabled = True, )
            )
        else:
            return MonitoringConfig(
        )
        """

    def testMonitoringConfig(self):
        """Test MonitoringConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
