# coding: utf-8

"""
    Kubernetes Engine API

    Builds and manages container-based applications, powered by the open source Kubernetes technology.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.server_config import ServerConfig

class TestServerConfig(unittest.TestCase):
    """ServerConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServerConfig:
        """Test ServerConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServerConfig`
        """
        model = ServerConfig()
        if include_optional:
            return ServerConfig(
                channels = [
                    openapi_client.models.release_channel_config.ReleaseChannelConfig(
                        available_versions = [
                            openapi_client.models.available_version.AvailableVersion(
                                reason = '', 
                                version = '', )
                            ], 
                        channel = 'UNSPECIFIED', 
                        default_version = '', 
                        valid_versions = [
                            ''
                            ], )
                    ],
                default_cluster_version = '',
                default_image_type = '',
                valid_image_types = [
                    ''
                    ],
                valid_master_versions = [
                    ''
                    ],
                valid_node_versions = [
                    ''
                    ],
                windows_version_maps = {
                    'key' : openapi_client.models.windows_versions.WindowsVersions(
                        windows_versions = [
                            openapi_client.models.windows_version.WindowsVersion(
                                image_type = '', 
                                os_version = '', 
                                support_end_date = openapi_client.models.date.Date(
                                    day = 56, 
                                    month = 56, 
                                    year = 56, ), )
                            ], )
                    }
            )
        else:
            return ServerConfig(
        )
        """

    def testServerConfig(self):
        """Test ServerConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
