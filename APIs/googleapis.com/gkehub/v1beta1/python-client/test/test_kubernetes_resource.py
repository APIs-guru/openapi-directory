# coding: utf-8

"""
    GKE Hub API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.kubernetes_resource import KubernetesResource

class TestKubernetesResource(unittest.TestCase):
    """KubernetesResource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> KubernetesResource:
        """Test KubernetesResource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `KubernetesResource`
        """
        model = KubernetesResource()
        if include_optional:
            return KubernetesResource(
                connect_resources = [
                    openapi_client.models.resource_manifest.ResourceManifest(
                        cluster_scoped = True, 
                        manifest = '', )
                    ],
                membership_cr_manifest = '',
                membership_resources = [
                    openapi_client.models.resource_manifest.ResourceManifest(
                        cluster_scoped = True, 
                        manifest = '', )
                    ],
                resource_options = openapi_client.models.resource_options.ResourceOptions(
                    connect_version = '', 
                    k8s_version = '', 
                    v1beta1_crd = True, )
            )
        else:
            return KubernetesResource(
        )
        """

    def testKubernetesResource(self):
        """Test KubernetesResource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
