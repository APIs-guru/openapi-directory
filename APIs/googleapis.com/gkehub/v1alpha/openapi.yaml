openapi: 3.0.0
servers:
  - url: https://gkehub.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: ""
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: GKE Hub API
  version: v1alpha
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://gkehub.googleapis.com/$discovery/rest?version=v1alpha
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: gkehub
externalDocs:
  url: https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster
tags:
  - name: organizations
  - name: projects
paths:
  /v1alpha/{name}:
    delete:
      description: Deletes a Scope RBACRoleBinding.
      operationId: gkehub.projects.locations.scopes.rbacrolebindings.delete
      parameters:
        - description: Required. The RBACRoleBinding resource name in the format `projects/*/locations/*/scopes/*/rbacrolebindings/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. If set to true, any subresource from this Membership will also be deleted. Otherwise, the request will only work if the Membership has no subresource.
          in: query
          name: force
          schema:
            type: boolean
        - description: Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Returns the details of a Scope RBACRoleBinding.
      operationId: gkehub.projects.locations.scopes.rbacrolebindings.get
      parameters:
        - description: Required. The RBACRoleBinding resource name in the format `projects/*/locations/*/scopes/*/rbacrolebindings/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RBACRoleBinding"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a Scope RBACRoleBinding.
      operationId: gkehub.projects.locations.scopes.rbacrolebindings.patch
      parameters:
        - description: The resource name for the rbacrolebinding `projects/{project}/locations/{location}/scopes/{scope}/rbacrolebindings/{rbacrolebinding}` or `projects/{project}/locations/{location}/memberships/{membership}/rbacrolebindings/{rbacrolebinding}`
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Required. The fields to be updated.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RBACRoleBinding"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1alpha/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: gkehub.projects.locations.list
      parameters:
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results to return. If not set, the service selects a default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1alpha/{name}/operations:
    get:
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: gkehub.projects.locations.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1alpha/{name}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: gkehub.projects.locations.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOperationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1alpha/{name}:generateConnectManifest:
    get:
      description: Generates the manifest for deployment of the GKE connect agent. **This method is used internally by Google-provided libraries.** Most clients should not need to call this method directly.
      operationId: gkehub.projects.locations.memberships.generateConnectManifest
      parameters:
        - description: Required. The Membership resource name the Agent will associate with, in the format `projects/*/locations/*/memberships/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. The image pull secret content for the registry, if not public.
          in: query
          name: imagePullSecretContent
          schema:
            type: string
        - description: Optional. If true, generate the resources for upgrade only. Some resources generated only for installation (e.g. secrets) will be excluded.
          in: query
          name: isUpgrade
          schema:
            type: boolean
        - description: Optional. Namespace for GKE Connect agent resources. Defaults to `gke-connect`. The Connect Agent is authorized automatically when run in the default namespace. Otherwise, explicit authorization must be granted with an additional IAM binding.
          in: query
          name: namespace
          schema:
            type: string
        - description: Optional. URI of a proxy if connectivity from the agent to gkeconnect.googleapis.com requires the use of a proxy. Format must be in the form `http(s)://{proxy_address}`, depending on the HTTP/HTTPS protocol supported by the proxy. This will direct the connect agent's outbound traffic through a HTTP(S) proxy.
          in: query
          name: proxy
          schema:
            type: string
        - description: Optional. The registry to fetch the connect agent image from. Defaults to gcr.io/gkeconnect.
          in: query
          name: registry
          schema:
            type: string
        - description: Optional. The Connect agent version to use. Defaults to the most current version.
          in: query
          name: version
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateConnectManifestResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1alpha/{parent}/bindings:
    get:
      description: Lists MembershipBindings.
      operationId: gkehub.projects.locations.memberships.bindings.list
      parameters:
        - description: Required. The parent Membership for which the MembershipBindings will be listed. Specified in the format `projects/*/locations/*/memberships/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Lists MembershipBindings that match the filter expression, following the syntax outlined in https://google.aip.dev/160.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Token returned by previous call to `ListMembershipBindings` which specifies the position in the list from where to continue listing the resources.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMembershipBindingsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a MembershipBinding.
      operationId: gkehub.projects.locations.memberships.bindings.create
      parameters:
        - description: Required. The parent (project and location) where the MembershipBinding will be created. Specified in the format `projects/*/locations/*/memberships/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. The ID to use for the MembershipBinding.
          in: query
          name: membershipBindingId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MembershipBinding"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1alpha/{parent}/features:
    get:
      description: Lists Features in a given project and location.
      operationId: gkehub.projects.locations.features.list
      parameters:
        - description: Required. The parent (project and location) where the Features will be listed. Specified in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'Lists Features that match the filter expression, following the syntax outlined in https://google.aip.dev/160. Examples: - Feature with the name "servicemesh" in project "foo-proj": name = "projects/foo-proj/locations/global/features/servicemesh" - Features that have a label called `foo`: labels.foo:* - Features that have a label called `foo` whose value is `bar`: labels.foo = bar'
          in: query
          name: filter
          schema:
            type: string
        - description: One or more fields to compare and use to sort the output. See https://google.aip.dev/132#ordering.
          in: query
          name: orderBy
          schema:
            type: string
        - description: When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Token returned by previous call to `ListFeatures` which specifies the position in the list from where to continue listing the resources.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFeaturesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Adds a new Feature.
      operationId: gkehub.projects.locations.features.create
      parameters:
        - description: Required. The parent (project and location) where the Feature will be created. Specified in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The ID of the feature to create.
          in: query
          name: featureId
          schema:
            type: string
        - description: A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Feature"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1alpha/{parent}/fleets:
    get:
      description: Returns all fleets within an organization or a project that the caller has access to.
      operationId: gkehub.projects.locations.fleets.list
      parameters:
        - description: Required. The organization or project to list for Fleets under, in the format `organizations/*/locations/*` or `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The maximum number of fleets to return. The service may return fewer than this value. If unspecified, at most 200 fleets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. A page token, received from a previous `ListFleets` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListFleets` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFleetsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a fleet.
      operationId: gkehub.projects.locations.fleets.create
      parameters:
        - description: Required. The parent (project and location) where the Fleet will be created. Specified in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Fleet"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1alpha/{parent}/memberships:
    get:
      description: Lists Memberships in a given project and location.
      operationId: gkehub.projects.locations.memberships.list
      parameters:
        - description: Required. The parent (project and location) where the Memberships will be listed. Specified in the format `projects/*/locations/*`. `projects/*/locations/-` list memberships in all the regions.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'Optional. Lists Memberships that match the filter expression, following the syntax outlined in https://google.aip.dev/160. Examples: - Name is `bar` in project `foo-proj` and location `global`: name = "projects/foo-proj/locations/global/membership/bar" - Memberships that have a label called `foo`: labels.foo:* - Memberships that have a label called `foo` whose value is `bar`: labels.foo = bar - Memberships in the CREATING state: state = CREATING'
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. One or more fields to compare and use to sort the output. See https://google.aip.dev/132#ordering.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Token returned by previous call to `ListMemberships` which specifies the position in the list from where to continue listing the resources.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMembershipsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new Membership. **This is currently only supported for GKE clusters on Google Cloud**. To register other clusters, follow the instructions at https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster.
      operationId: gkehub.projects.locations.memberships.create
      parameters:
        - description: Required. The parent (project and location) where the Memberships will be created. Specified in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Required. Client chosen ID for the membership. `membership_id` must be a valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters."
          in: query
          name: membershipId
          schema:
            type: string
        - description: Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Membership"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1alpha/{parent}/memberships:listAdmin:
    get:
      description: Lists Memberships of admin clusters in a given project and location. **This method is only used internally**.
      operationId: gkehub.projects.locations.memberships.listAdmin
      parameters:
        - description: Required. The parent (project and location) where the Memberships of admin cluster will be listed. Specified in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Lists Memberships of admin clusters that match the filter expression.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. One or more fields to compare and use to sort the output. See https://google.aip.dev/132#ordering.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Token returned by previous call to `ListAdminClusterMemberships` which specifies the position in the list from where to continue listing the resources.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAdminClusterMembershipsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1alpha/{parent}/memberships:validateCreate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "ValidateCreateMembership is a preflight check for CreateMembership. It checks the following: 1. Caller has the required `gkehub.memberships.create` permission. 2. The membership_id is still available."
      operationId: gkehub.projects.locations.memberships.validateCreate
      parameters:
        - description: Required. The parent (project and location) where the Memberships will be created. Specified in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidateCreateMembershipRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateCreateMembershipResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1alpha/{parent}/namespaces:
    get:
      description: Lists fleet namespaces.
      operationId: gkehub.projects.locations.scopes.namespaces.list
      parameters:
        - description: Required. The parent (project and location) where the Features will be listed. Specified in the format `projects/*/locations/*/scopes/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Token returned by previous call to `ListFeatures` which specifies the position in the list from where to continue listing the resources.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListScopeNamespacesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a fleet namespace.
      operationId: gkehub.projects.locations.scopes.namespaces.create
      parameters:
        - description: Required. The parent (project and location) where the Namespace will be created. Specified in the format `projects/*/locations/*/scopes/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Required. Client chosen ID for the Namespace. `namespace_id` must be a valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters."
          in: query
          name: scopeNamespaceId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Namespace"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1alpha/{parent}/rbacrolebindings:
    get:
      description: Lists all Scope RBACRoleBindings.
      operationId: gkehub.projects.locations.scopes.rbacrolebindings.list
      parameters:
        - description: Required. The parent (project and location) where the Features will be listed. Specified in the format `projects/*/locations/*/scopes/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Token returned by previous call to `ListScopeRBACRoleBindings` which specifies the position in the list from where to continue listing the resources.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListScopeRBACRoleBindingsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a Scope RBACRoleBinding.
      operationId: gkehub.projects.locations.scopes.rbacrolebindings.create
      parameters:
        - description: Required. The parent (project and location) where the RBACRoleBinding will be created. Specified in the format `projects/*/locations/*/scopes/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Required. Client chosen ID for the RBACRoleBinding. `rbacrolebinding_id` must be a valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters."
          in: query
          name: rbacrolebindingId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RBACRoleBinding"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1alpha/{parent}/rbacrolebindings:generateMembershipRBACRoleBindingYAML:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Generates a YAML of the RBAC policies for the specified RoleBinding and its associated impersonation resources.
      operationId: gkehub.projects.locations.memberships.rbacrolebindings.generateMembershipRBACRoleBindingYAML
      parameters:
        - description: Required. The parent (project and location) where the RBACRoleBinding will be created. Specified in the format `projects/*/locations/*/memberships/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Required. Client chosen ID for the RBACRoleBinding. `rbacrolebinding_id` must be a valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters."
          in: query
          name: rbacrolebindingId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RBACRoleBinding"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateMembershipRBACRoleBindingYAMLResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1alpha/{parent}/scopes:
    get:
      description: Lists Scopes.
      operationId: gkehub.projects.locations.scopes.list
      parameters:
        - description: Required. The parent (project and location) where the Scope will be listed. Specified in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Token returned by previous call to `ListScopes` which specifies the position in the list from where to continue listing the resources.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListScopesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a Scope.
      operationId: gkehub.projects.locations.scopes.create
      parameters:
        - description: Required. The parent (project and location) where the Scope will be created. Specified in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. Client chosen ID for the Scope. `scope_id` must be a ????
          in: query
          name: scopeId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Scope"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1alpha/{parent}/scopes:listPermitted:
    get:
      description: Lists permitted Scopes.
      operationId: gkehub.projects.locations.scopes.listPermitted
      parameters:
        - description: Required. The parent (project and location) where the Scope will be listed. Specified in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Token returned by previous call to `ListPermittedScopes` which specifies the position in the list from where to continue listing the resources.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPermittedScopesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1alpha/{resource}:getIamPolicy:
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: gkehub.projects.locations.scopes.getIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1alpha/{resource}:setIamPolicy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: gkehub.projects.locations.scopes.setIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetIamPolicyRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1alpha/{resource}:testIamPermissions:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: gkehub.projects.locations.scopes.testIamPermissions
      parameters:
        - description: "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestIamPermissionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1alpha/{scopeName}:listMemberships:
    get:
      description: Lists Memberships bound to a Scope. The response includes relevant Memberships from all regions.
      operationId: gkehub.projects.locations.scopes.listMemberships
      parameters:
        - description: Required. Name of the Scope, in the format `projects/*/locations/global/scopes/*`, to which the Memberships are bound.
          in: path
          name: scopeName
          required: true
          schema:
            type: string
        - description: Optional. Lists Memberships that match the filter expression, following the syntax outlined in https://google.aip.dev/160. Currently, filtering can be done only based on Memberships's `name`, `labels`, `create_time`, `update_time`, and `unique_id`.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned. Pagination is currently not supported; therefore, setting this field does not have any impact for now.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Token returned by previous call to `ListBoundMemberships` which specifies the position in the list from where to continue listing the resources.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListBoundMembershipsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AnthosObservabilityFeatureSpec:
      description: "**Anthos Observability**: Spec"
      properties:
        defaultMembershipSpec:
          $ref: "#/components/schemas/AnthosObservabilityMembershipSpec"
          description: Default membership spec for unconfigured memberships
      type: object
    AnthosObservabilityMembershipSpec:
      description: "**Anthosobservability**: Per-Membership Feature spec."
      properties:
        doNotOptimizeMetrics:
          description: Use full of metrics rather than optimized metrics. See https://cloud.google.com/anthos/clusters/docs/on-prem/1.8/concepts/logging-and-monitoring#optimized_metrics_default_metrics
          type: boolean
        enableStackdriverOnApplications:
          description: Enable collecting and reporting metrics and logs from user apps.
          type: boolean
        version:
          description: the version of stackdriver operator used by this feature
          type: string
      type: object
    AppDevExperienceFeatureSpec:
      description: Spec for App Dev Experience Feature.
      properties: {}
      type: object
    AppDevExperienceFeatureState:
      description: State for App Dev Exp Feature.
      properties:
        networkingInstallSucceeded:
          $ref: "#/components/schemas/Status"
          description: Status of subcomponent that detects configured Service Mesh resources.
      type: object
    ApplianceCluster:
      description: ApplianceCluster contains information specific to GDC Edge Appliance Clusters.
      properties:
        resourceLink:
          description: "Immutable. Self-link of the Google Cloud resource for the Appliance Cluster. For example: //transferappliance.googleapis.com/projects/my-project/locations/us-west1-a/appliances/my-appliance"
          type: string
      type: object
    AuditConfig:
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: "#/components/schemas/AuditLogConfig"
          type: array
        service:
          description: Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
          type: string
      type: object
    AuditLogConfig:
      description: "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
      properties:
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
      type: object
    Authority:
      description: "Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity"
      properties:
        identityProvider:
          description: Output only. An identity provider that reflects the `issuer` in the workload identity pool.
          readOnly: true
          type: string
        issuer:
          description: Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length <2000 characters, it must use `location` rather than `zone` for GKE clusters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).
          type: string
        oidcJwks:
          description: Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field.
          format: byte
          type: string
        workloadIdentityPool:
          description: Output only. The name of the workload identity pool in which `issuer` will be recognized. There is a single Workload Identity Pool per Hub that is shared between all Memberships that belong to that Hub. For a Hub hosted in {PROJECT_ID}, the workload pool format is `{PROJECT_ID}.hub.id.goog`, although this is subject to change in newer versions of this API.
          readOnly: true
          type: string
      type: object
    BinaryAuthorizationConfig:
      description: BinaryAuthorizationConfig defines the fleet level configuration of binary authorization feature.
      properties:
        evaluationMode:
          description: Optional. Mode of operation for binauthz policy evaluation.
          enum:
            - EVALUATION_MODE_UNSPECIFIED
            - DISABLED
            - POLICY_BINDINGS
          type: string
        policyBindings:
          description: Optional. Binauthz policies that apply to this cluster.
          items:
            $ref: "#/components/schemas/PolicyBinding"
          type: array
      type: object
    Binding:
      description: Associates `members`, or principals, with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
          description: The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        members:
          description: "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`."
          items:
            type: string
          type: array
        role:
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
      type: object
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    CloudAuditLoggingFeatureSpec:
      description: "**Cloud Audit Logging**: Spec for Audit Logging Allowlisting."
      properties:
        allowlistedServiceAccounts:
          description: Service account that should be allowlisted to send the audit logs; eg cloudauditlogging@gcp-project.iam.gserviceaccount.com. These accounts must already exist, but do not need to have any permissions granted to them. The customer's entitlements will be checked prior to allowlisting (i.e. the customer must be an Anthos customer.)
          items:
            type: string
          type: array
      type: object
    CloudBuildMembershipSpec:
      description: "**Cloud Build**: Configurations for each Cloud Build enabled cluster."
      properties:
        securityPolicy:
          description: Whether it is allowed to run the privileged builds on the cluster or not.
          enum:
            - SECURITY_POLICY_UNSPECIFIED
            - NON_PRIVILEGED
            - PRIVILEGED
          type: string
        version:
          description: Version of the cloud build software on the cluster.
          type: string
      type: object
    ClusterUpgradeFleetSpec:
      description: "**ClusterUpgrade**: The configuration for the fleet-level ClusterUpgrade feature."
      properties:
        gkeUpgradeOverrides:
          description: Allow users to override some properties of each GKE upgrade.
          items:
            $ref: "#/components/schemas/ClusterUpgradeGKEUpgradeOverride"
          type: array
        postConditions:
          $ref: "#/components/schemas/ClusterUpgradePostConditions"
          description: Required. Post conditions to evaluate to mark an upgrade COMPLETE. Required.
        upstreamFleets:
          description: This fleet consumes upgrades that have COMPLETE status code in the upstream fleets. See UpgradeStatus.Code for code definitions. The fleet name should be either fleet project number or id. This is defined as repeated for future proof reasons. Initial implementation will enforce at most one upstream fleet.
          items:
            type: string
          type: array
      type: object
    ClusterUpgradeFleetState:
      description: "**ClusterUpgrade**: The state for the fleet-level ClusterUpgrade feature."
      properties:
        downstreamFleets:
          description: This fleets whose upstream_fleets contain the current fleet. The fleet name should be either fleet project number or id.
          items:
            type: string
          type: array
        gkeState:
          $ref: "#/components/schemas/ClusterUpgradeGKEUpgradeFeatureState"
          description: Feature state for GKE clusters.
        ignored:
          additionalProperties:
            $ref: "#/components/schemas/ClusterUpgradeIgnoredMembership"
          description: "A list of memberships ignored by the feature. For example, manually upgraded clusters can be ignored if they are newer than the default versions of its release channel. The membership resource is in the format: `projects/{p}/locations/{l}/membership/{m}`."
          type: object
      type: object
    ClusterUpgradeGKEUpgrade:
      description: GKEUpgrade represents a GKE provided upgrade, e.g., control plane upgrade.
      properties:
        name:
          description: Name of the upgrade, e.g., "k8s_control_plane". It should be a valid upgrade name. It must not exceet 99 characters.
          type: string
        version:
          description: Version of the upgrade, e.g., "1.22.1-gke.100". It should be a valid version. It must not exceet 99 characters.
          type: string
      type: object
    ClusterUpgradeGKEUpgradeFeatureCondition:
      description: GKEUpgradeFeatureCondition describes the condition of the feature for GKE clusters at a certain point of time.
      properties:
        reason:
          description: Reason why the feature is in this status.
          type: string
        status:
          description: Status of the condition, one of True, False, Unknown.
          type: string
        type:
          description: Type of the condition, for example, "ready".
          type: string
        updateTime:
          description: Last timestamp the condition was updated.
          format: google-datetime
          type: string
      type: object
    ClusterUpgradeGKEUpgradeFeatureState:
      description: GKEUpgradeFeatureState contains feature states for GKE clusters in the scope.
      properties:
        conditions:
          description: Current conditions of the feature.
          items:
            $ref: "#/components/schemas/ClusterUpgradeGKEUpgradeFeatureCondition"
          type: array
        upgradeState:
          description: Upgrade state. It will eventually replace `state`.
          items:
            $ref: "#/components/schemas/ClusterUpgradeGKEUpgradeState"
          type: array
      type: object
    ClusterUpgradeGKEUpgradeOverride:
      description: Properties of a GKE upgrade that can be overridden by the user. For example, a user can skip soaking by overriding the soaking to 0.
      properties:
        postConditions:
          $ref: "#/components/schemas/ClusterUpgradePostConditions"
          description: Required. Post conditions to override for the specified upgrade (name + version). Required.
        upgrade:
          $ref: "#/components/schemas/ClusterUpgradeGKEUpgrade"
          description: Required. Which upgrade to override. Required.
      type: object
    ClusterUpgradeGKEUpgradeState:
      description: GKEUpgradeState is a GKEUpgrade and its state at the scope and fleet level.
      properties:
        stats:
          additionalProperties:
            format: int64
            type: string
          description: Number of GKE clusters in each status code.
          type: object
        status:
          $ref: "#/components/schemas/ClusterUpgradeUpgradeStatus"
          description: Status of the upgrade.
        upgrade:
          $ref: "#/components/schemas/ClusterUpgradeGKEUpgrade"
          description: Which upgrade to track the state.
      type: object
    ClusterUpgradeIgnoredMembership:
      description: IgnoredMembership represents a membership ignored by the feature. A membership can be ignored because it was manually upgraded to a newer version than RC default.
      properties:
        ignoredTime:
          description: Time when the membership was first set to ignored.
          format: google-datetime
          type: string
        reason:
          description: Reason why the membership is ignored.
          type: string
      type: object
    ClusterUpgradeMembershipGKEUpgradeState:
      description: ScopeGKEUpgradeState is a GKEUpgrade and its state per-membership.
      properties:
        status:
          $ref: "#/components/schemas/ClusterUpgradeUpgradeStatus"
          description: Status of the upgrade.
        upgrade:
          $ref: "#/components/schemas/ClusterUpgradeGKEUpgrade"
          description: Which upgrade to track the state.
      type: object
    ClusterUpgradeMembershipState:
      description: Per-membership state for this feature.
      properties:
        ignored:
          $ref: "#/components/schemas/ClusterUpgradeIgnoredMembership"
          description: Whether this membership is ignored by the feature. For example, manually upgraded clusters can be ignored if they are newer than the default versions of its release channel.
        scopes:
          description: Fully qualified scope names that this clusters is bound to which also have rollout sequencing enabled.
          items:
            type: string
          type: array
        upgrades:
          description: Actual upgrade state against desired.
          items:
            $ref: "#/components/schemas/ClusterUpgradeMembershipGKEUpgradeState"
          type: array
      type: object
    ClusterUpgradePostConditions:
      description: Post conditional checks after an upgrade has been applied on all eligible clusters.
      properties:
        soaking:
          description: Required. Amount of time to "soak" after a rollout has been finished before marking it COMPLETE. Cannot exceed 30 days. Required.
          format: google-duration
          type: string
      type: object
    ClusterUpgradeScopeSpec:
      description: "**ClusterUpgrade**: The configuration for the scope-level ClusterUpgrade feature."
      properties:
        gkeUpgradeOverrides:
          description: Allow users to override some properties of each GKE upgrade.
          items:
            $ref: "#/components/schemas/ClusterUpgradeGKEUpgradeOverride"
          type: array
        postConditions:
          $ref: "#/components/schemas/ClusterUpgradePostConditions"
          description: Required. Post conditions to evaluate to mark an upgrade COMPLETE. Required.
        upstreamScopes:
          description: "This scope consumes upgrades that have COMPLETE status code in the upstream scopes. See UpgradeStatus.Code for code definitions. The scope name should be in the form: `projects/{p}/locations/global/scopes/{s}` Where {p} is the project, {s} is a valid Scope in this project. {p} WILL match the Feature's project. This is defined as repeated for future proof reasons. Initial implementation will enforce at most one upstream scope."
          items:
            type: string
          type: array
      type: object
    ClusterUpgradeScopeState:
      description: "**ClusterUpgrade**: The state for the scope-level ClusterUpgrade feature."
      properties:
        downstreamScopes:
          description: "This scopes whose upstream_scopes contain the current scope. The scope name should be in the form: `projects/{p}/locations/gloobal/scopes/{s}` Where {p} is the project, {s} is a valid Scope in this project. {p} WILL match the Feature's project."
          items:
            type: string
          type: array
        gkeState:
          $ref: "#/components/schemas/ClusterUpgradeGKEUpgradeFeatureState"
          description: Feature state for GKE clusters.
        ignored:
          additionalProperties:
            $ref: "#/components/schemas/ClusterUpgradeIgnoredMembership"
          description: "A list of memberships ignored by the feature. For example, manually upgraded clusters can be ignored if they are newer than the default versions of its release channel. The membership resource is in the format: `projects/{p}/locations/{l}/membership/{m}`."
          type: object
      type: object
    ClusterUpgradeUpgradeStatus:
      description: UpgradeStatus provides status information for each upgrade.
      properties:
        code:
          description: Status code of the upgrade.
          enum:
            - CODE_UNSPECIFIED
            - INELIGIBLE
            - PENDING
            - IN_PROGRESS
            - SOAKING
            - FORCED_SOAKING
            - COMPLETE
          type: string
        reason:
          description: Reason for this status.
          type: string
        updateTime:
          description: Last timestamp the status was updated.
          format: google-datetime
          type: string
      type: object
    CommonFeatureSpec:
      description: CommonFeatureSpec contains Hub-wide configuration information
      properties:
        anthosobservability:
          $ref: "#/components/schemas/AnthosObservabilityFeatureSpec"
          description: Anthos Observability spec
        appdevexperience:
          $ref: "#/components/schemas/AppDevExperienceFeatureSpec"
          description: Appdevexperience specific spec.
        cloudauditlogging:
          $ref: "#/components/schemas/CloudAuditLoggingFeatureSpec"
          description: Cloud Audit Logging-specific spec.
        clusterupgrade:
          $ref: "#/components/schemas/ClusterUpgradeFleetSpec"
          description: ClusterUpgrade (fleet-based) feature spec.
        dataplanev2:
          $ref: "#/components/schemas/DataplaneV2FeatureSpec"
          description: DataplaneV2 feature spec.
        fleetobservability:
          $ref: "#/components/schemas/FleetObservabilityFeatureSpec"
          description: FleetObservability feature spec.
        multiclusteringress:
          $ref: "#/components/schemas/MultiClusterIngressFeatureSpec"
          description: Multicluster Ingress-specific spec.
        namespaceactuation:
          $ref: "#/components/schemas/NamespaceActuationFeatureSpec"
          description: Namespace Actuation feature spec
        workloadcertificate:
          $ref: "#/components/schemas/FeatureSpec"
          description: Workload Certificate spec.
      type: object
    CommonFeatureState:
      description: CommonFeatureState contains Hub-wide Feature status information.
      properties:
        appdevexperience:
          $ref: "#/components/schemas/AppDevExperienceFeatureState"
          description: Appdevexperience specific state.
        clusterupgrade:
          $ref: "#/components/schemas/ClusterUpgradeFleetState"
          description: ClusterUpgrade fleet-level state.
        fleetobservability:
          $ref: "#/components/schemas/FleetObservabilityFeatureState"
          description: FleetObservability feature state.
        namespaceactuation:
          $ref: "#/components/schemas/NamespaceActuationFeatureState"
          description: Namespace Actuation feature state.
        servicemesh:
          $ref: "#/components/schemas/ServiceMeshFeatureState"
          description: Service Mesh-specific state.
        state:
          $ref: "#/components/schemas/FeatureState"
          description: Output only. The "running state" of the Feature in this Hub.
          readOnly: true
      type: object
    CommonFleetDefaultMemberConfigSpec:
      description: CommonFleetDefaultMemberConfigSpec contains default configuration information for memberships of a fleet
      properties:
        configmanagement:
          $ref: "#/components/schemas/ConfigManagementMembershipSpec"
          description: Config Management-specific spec.
        identityservice:
          $ref: "#/components/schemas/IdentityServiceMembershipSpec"
          description: Identity Service-specific spec.
        mesh:
          $ref: "#/components/schemas/ServiceMeshMembershipSpec"
          description: Anthos Service Mesh-specific spec
        policycontroller:
          $ref: "#/components/schemas/PolicyControllerMembershipSpec"
          description: Policy Controller spec.
      type: object
    ConfigManagementBinauthzConfig:
      description: Configuration for Binauthz
      properties:
        enabled:
          description: Whether binauthz is enabled in this cluster.
          type: boolean
      type: object
    ConfigManagementBinauthzState:
      description: State for Binauthz
      properties:
        version:
          $ref: "#/components/schemas/ConfigManagementBinauthzVersion"
          description: The version of binauthz that is installed.
        webhook:
          description: The state of the binauthz webhook.
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
          type: string
      type: object
    ConfigManagementBinauthzVersion:
      description: The version of binauthz.
      properties:
        webhookVersion:
          description: The version of the binauthz webhook.
          type: string
      type: object
    ConfigManagementConfigSync:
      description: Configuration for Config Sync
      properties:
        allowVerticalScale:
          deprecated: true
          description: Set to true to allow the vertical scaling. Defaults to false which disallows vertical scaling. This field is deprecated.
          type: boolean
        enabled:
          description: Enables the installation of ConfigSync. If set to true, ConfigSync resources will be created and the other ConfigSync fields will be applied if exist. If set to false, all other ConfigSync fields will be ignored, ConfigSync resources will be deleted. If omitted, ConfigSync resources will be managed depends on the presence of the git or oci field.
          type: boolean
        git:
          $ref: "#/components/schemas/ConfigManagementGitConfig"
          description: Git repo configuration for the cluster.
        metricsGcpServiceAccountEmail:
          description: The Email of the Google Cloud Service Account (GSA) used for exporting Config Sync metrics to Cloud Monitoring and Cloud Monarch when Workload Identity is enabled. The GSA should have the Monitoring Metric Writer (roles/monitoring.metricWriter) IAM role. The Kubernetes ServiceAccount `default` in the namespace `config-management-monitoring` should be bound to the GSA.
          type: string
        oci:
          $ref: "#/components/schemas/ConfigManagementOciConfig"
          description: OCI repo configuration for the cluster
        preventDrift:
          description: Set to true to enable the Config Sync admission webhook to prevent drifts. If set to `false`, disables the Config Sync admission webhook and does not prevent drifts.
          type: boolean
        sourceFormat:
          description: Specifies whether the Config Sync Repo is in "hierarchical" or "unstructured" mode.
          type: string
      type: object
    ConfigManagementConfigSyncDeploymentState:
      description: The state of ConfigSync's deployment on a cluster
      properties:
        admissionWebhook:
          description: Deployment state of admission-webhook
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
          type: string
        gitSync:
          description: Deployment state of the git-sync pod
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
          type: string
        importer:
          description: Deployment state of the importer pod
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
          type: string
        monitor:
          description: Deployment state of the monitor pod
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
          type: string
        reconcilerManager:
          description: Deployment state of reconciler-manager pod
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
          type: string
        rootReconciler:
          description: Deployment state of root-reconciler
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
          type: string
        syncer:
          description: Deployment state of the syncer pod
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
          type: string
      type: object
    ConfigManagementConfigSyncError:
      description: Errors pertaining to the installation of Config Sync
      properties:
        errorMessage:
          description: A string representing the user facing error message
          type: string
      type: object
    ConfigManagementConfigSyncState:
      description: State information for ConfigSync
      properties:
        deploymentState:
          $ref: "#/components/schemas/ConfigManagementConfigSyncDeploymentState"
          description: Information about the deployment of ConfigSync, including the version of the various Pods deployed
        errors:
          description: Errors pertaining to the installation of Config Sync.
          items:
            $ref: "#/components/schemas/ConfigManagementConfigSyncError"
          type: array
        reposyncCrd:
          description: The state of the Reposync CRD
          enum:
            - CRD_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - TERMINATING
            - INSTALLING
          type: string
        rootsyncCrd:
          description: The state of the RootSync CRD
          enum:
            - CRD_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - TERMINATING
            - INSTALLING
          type: string
        state:
          description: The state of CS This field summarizes the other fields in this message.
          enum:
            - STATE_UNSPECIFIED
            - CONFIG_SYNC_NOT_INSTALLED
            - CONFIG_SYNC_INSTALLED
            - CONFIG_SYNC_ERROR
            - CONFIG_SYNC_PENDING
          type: string
        syncState:
          $ref: "#/components/schemas/ConfigManagementSyncState"
          description: The state of ConfigSync's process to sync configs to a cluster
        version:
          $ref: "#/components/schemas/ConfigManagementConfigSyncVersion"
          description: The version of ConfigSync deployed
      type: object
    ConfigManagementConfigSyncVersion:
      description: Specific versioning information pertaining to ConfigSync's Pods
      properties:
        admissionWebhook:
          description: Version of the deployed admission_webhook pod
          type: string
        gitSync:
          description: Version of the deployed git-sync pod
          type: string
        importer:
          description: Version of the deployed importer pod
          type: string
        monitor:
          description: Version of the deployed monitor pod
          type: string
        reconcilerManager:
          description: Version of the deployed reconciler-manager pod
          type: string
        rootReconciler:
          description: Version of the deployed reconciler container in root-reconciler pod
          type: string
        syncer:
          description: Version of the deployed syncer pod
          type: string
      type: object
    ConfigManagementErrorResource:
      description: Model for a config file in the git repo with an associated Sync error
      properties:
        resourceGvk:
          $ref: "#/components/schemas/ConfigManagementGroupVersionKind"
          description: Group/version/kind of the resource that is causing an error
        resourceName:
          description: Metadata name of the resource that is causing an error
          type: string
        resourceNamespace:
          description: Namespace of the resource that is causing an error
          type: string
        sourcePath:
          description: Path in the git repo of the erroneous config
          type: string
      type: object
    ConfigManagementGatekeeperDeploymentState:
      description: State of Policy Controller installation.
      properties:
        gatekeeperAudit:
          description: Status of gatekeeper-audit deployment.
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
          type: string
        gatekeeperControllerManagerState:
          description: Status of gatekeeper-controller-manager pod.
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
          type: string
        gatekeeperMutation:
          description: Status of the pod serving the mutation webhook.
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
          type: string
      type: object
    ConfigManagementGitConfig:
      description: Git repo configuration for a single cluster.
      properties:
        gcpServiceAccountEmail:
          description: The Google Cloud Service Account Email used for auth when secret_type is gcpServiceAccount.
          type: string
        httpsProxy:
          description: URL for the HTTPS proxy to be used when communicating with the Git repo.
          type: string
        policyDir:
          description: "The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository."
          type: string
        secretType:
          description: Type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, gcpserviceaccount or none. The validation of this is case-sensitive. Required.
          type: string
        syncBranch:
          description: "The branch of the repository to sync from. Default: master."
          type: string
        syncRepo:
          description: The URL of the Git repository to use as the source of truth.
          type: string
        syncRev:
          description: Git revision (tag or hash) to check out. Default HEAD.
          type: string
        syncWaitSecs:
          description: "Period in seconds between consecutive syncs. Default: 15."
          format: int64
          type: string
      type: object
    ConfigManagementGroupVersionKind:
      description: A Kubernetes object's GVK
      properties:
        group:
          description: Kubernetes Group
          type: string
        kind:
          description: Kubernetes Kind
          type: string
        version:
          description: Kubernetes Version
          type: string
      type: object
    ConfigManagementHierarchyControllerConfig:
      description: Configuration for Hierarchy Controller
      properties:
        enableHierarchicalResourceQuota:
          description: Whether hierarchical resource quota is enabled in this cluster.
          type: boolean
        enablePodTreeLabels:
          description: Whether pod tree labels are enabled in this cluster.
          type: boolean
        enabled:
          description: Whether Hierarchy Controller is enabled in this cluster.
          type: boolean
      type: object
    ConfigManagementHierarchyControllerDeploymentState:
      description: Deployment state for Hierarchy Controller
      properties:
        extension:
          description: The deployment state for Hierarchy Controller extension (e.g. v0.7.0-hc.1)
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
          type: string
        hnc:
          description: The deployment state for open source HNC (e.g. v0.7.0-hc.0)
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
          type: string
      type: object
    ConfigManagementHierarchyControllerState:
      description: State for Hierarchy Controller
      properties:
        state:
          $ref: "#/components/schemas/ConfigManagementHierarchyControllerDeploymentState"
          description: The deployment state for Hierarchy Controller
        version:
          $ref: "#/components/schemas/ConfigManagementHierarchyControllerVersion"
          description: The version for Hierarchy Controller
      type: object
    ConfigManagementHierarchyControllerVersion:
      description: Version for Hierarchy Controller
      properties:
        extension:
          description: Version for Hierarchy Controller extension
          type: string
        hnc:
          description: Version for open source HNC
          type: string
      type: object
    ConfigManagementInstallError:
      description: Errors pertaining to the installation of ACM
      properties:
        errorMessage:
          description: A string representing the user facing error message
          type: string
      type: object
    ConfigManagementMembershipSpec:
      description: "**Anthos Config Management**: Configuration for a single cluster. Intended to parallel the ConfigManagement CR."
      properties:
        binauthz:
          $ref: "#/components/schemas/ConfigManagementBinauthzConfig"
          deprecated: true
          description: "Binauthz conifguration for the cluster. Deprecated: This field will be ignored and should not be set."
        cluster:
          description: The user-specified cluster name used by Config Sync cluster-name-selector annotation or ClusterSelector, for applying configs to only a subset of clusters. Omit this field if the cluster's fleet membership name is used by Config Sync cluster-name-selector annotation or ClusterSelector. Set this field if a name different from the cluster's fleet membership name is used by Config Sync cluster-name-selector annotation or ClusterSelector.
          type: string
        configSync:
          $ref: "#/components/schemas/ConfigManagementConfigSync"
          description: Config Sync configuration for the cluster.
        hierarchyController:
          $ref: "#/components/schemas/ConfigManagementHierarchyControllerConfig"
          description: Hierarchy Controller configuration for the cluster.
        management:
          description: Enables automatic Feature management.
          enum:
            - MANAGEMENT_UNSPECIFIED
            - MANAGEMENT_AUTOMATIC
            - MANAGEMENT_MANUAL
          type: string
        policyController:
          $ref: "#/components/schemas/ConfigManagementPolicyController"
          description: Policy Controller configuration for the cluster.
        version:
          description: Version of ACM installed.
          type: string
      type: object
    ConfigManagementMembershipState:
      description: "**Anthos Config Management**: State for a single cluster."
      properties:
        binauthzState:
          $ref: "#/components/schemas/ConfigManagementBinauthzState"
          description: Binauthz status
        clusterName:
          description: This field is set to the `cluster_name` field of the Membership Spec if it is not empty. Otherwise, it is set to the cluster's fleet membership name.
          type: string
        configSyncState:
          $ref: "#/components/schemas/ConfigManagementConfigSyncState"
          description: Current sync status
        hierarchyControllerState:
          $ref: "#/components/schemas/ConfigManagementHierarchyControllerState"
          description: Hierarchy Controller status
        membershipSpec:
          $ref: "#/components/schemas/ConfigManagementMembershipSpec"
          description: Membership configuration in the cluster. This represents the actual state in the cluster, while the MembershipSpec in the FeatureSpec represents the intended state
        operatorState:
          $ref: "#/components/schemas/ConfigManagementOperatorState"
          description: Current install status of ACM's Operator
        policyControllerState:
          $ref: "#/components/schemas/ConfigManagementPolicyControllerState"
          description: PolicyController status
      type: object
    ConfigManagementOciConfig:
      description: OCI repo configuration for a single cluster
      properties:
        gcpServiceAccountEmail:
          description: The Google Cloud Service Account Email used for auth when secret_type is gcpServiceAccount.
          type: string
        policyDir:
          description: "The absolute path of the directory that contains the local resources. Default: the root directory of the image."
          type: string
        secretType:
          description: Type of secret configured for access to the Git repo.
          type: string
        syncRepo:
          description: The OCI image repository URL for the package to sync from. e.g. `LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME`.
          type: string
        syncWaitSecs:
          description: "Period in seconds between consecutive syncs. Default: 15."
          format: int64
          type: string
      type: object
    ConfigManagementOperatorState:
      description: State information for an ACM's Operator
      properties:
        deploymentState:
          description: The state of the Operator's deployment
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
            - PENDING
          type: string
        errors:
          description: Install errors.
          items:
            $ref: "#/components/schemas/ConfigManagementInstallError"
          type: array
        version:
          description: The semenatic version number of the operator
          type: string
      type: object
    ConfigManagementPolicyController:
      description: Configuration for Policy Controller
      properties:
        auditIntervalSeconds:
          description: Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.
          format: int64
          type: string
        enabled:
          description: Enables the installation of Policy Controller. If false, the rest of PolicyController fields take no effect.
          type: boolean
        exemptableNamespaces:
          description: The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.
          items:
            type: string
          type: array
        logDeniesEnabled:
          description: Logs all denies and dry run failures.
          type: boolean
        monitoring:
          $ref: "#/components/schemas/ConfigManagementPolicyControllerMonitoring"
          description: Monitoring specifies the configuration of monitoring.
        mutationEnabled:
          description: Enable or disable mutation in policy controller. If true, mutation CRDs, webhook and controller deployment will be deployed to the cluster.
          type: boolean
        referentialRulesEnabled:
          description: Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.
          type: boolean
        templateLibraryInstalled:
          description: Installs the default template library along with Policy Controller.
          type: boolean
        updateTime:
          description: Output only. Last time this membership spec was updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    ConfigManagementPolicyControllerMigration:
      description: State for the migration of PolicyController from ACM -> PoCo Hub.
      properties:
        copyTime:
          description: Last time this membership spec was copied to PoCo feature.
          format: google-datetime
          type: string
        stage:
          description: Stage of the migration.
          enum:
            - STAGE_UNSPECIFIED
            - ACM_MANAGED
            - POCO_MANAGED
          type: string
      type: object
    ConfigManagementPolicyControllerMonitoring:
      description: 'PolicyControllerMonitoring specifies the backends Policy Controller should export metrics to. For example, to specify metrics should be exported to Cloud Monitoring and Prometheus, specify backends: ["cloudmonitoring", "prometheus"]'
      properties:
        backends:
          description: Specifies the list of backends Policy Controller will export to. An empty list would effectively disable metrics export.
          items:
            enum:
              - MONITORING_BACKEND_UNSPECIFIED
              - PROMETHEUS
              - CLOUD_MONITORING
            type: string
          type: array
      type: object
    ConfigManagementPolicyControllerState:
      description: State for PolicyControllerState.
      properties:
        deploymentState:
          $ref: "#/components/schemas/ConfigManagementGatekeeperDeploymentState"
          description: The state about the policy controller installation.
        migration:
          $ref: "#/components/schemas/ConfigManagementPolicyControllerMigration"
          description: Record state of ACM -> PoCo Hub migration for this feature.
        version:
          $ref: "#/components/schemas/ConfigManagementPolicyControllerVersion"
          description: The version of Gatekeeper Policy Controller deployed.
      type: object
    ConfigManagementPolicyControllerVersion:
      description: The build version of Gatekeeper Policy Controller is using.
      properties:
        version:
          description: The gatekeeper image tag that is composed of ACM version, git tag, build number.
          type: string
      type: object
    ConfigManagementSyncError:
      description: An ACM created error representing a problem syncing configurations
      properties:
        code:
          description: An ACM defined error code
          type: string
        errorMessage:
          description: A description of the error
          type: string
        errorResources:
          description: A list of config(s) associated with the error, if any
          items:
            $ref: "#/components/schemas/ConfigManagementErrorResource"
          type: array
      type: object
    ConfigManagementSyncState:
      description: State indicating an ACM's progress syncing configurations to a cluster
      properties:
        code:
          description: Sync status code
          enum:
            - SYNC_CODE_UNSPECIFIED
            - SYNCED
            - PENDING
            - ERROR
            - NOT_CONFIGURED
            - NOT_INSTALLED
            - UNAUTHORIZED
            - UNREACHABLE
          type: string
        errors:
          description: A list of errors resulting from problematic configs. This list will be truncated after 100 errors, although it is unlikely for that many errors to simultaneously exist.
          items:
            $ref: "#/components/schemas/ConfigManagementSyncError"
          type: array
        importToken:
          description: Token indicating the state of the importer.
          type: string
        lastSync:
          deprecated: true
          description: "Deprecated: use last_sync_time instead. Timestamp of when ACM last successfully synced the repo The time format is specified in https://golang.org/pkg/time/#Time.String"
          type: string
        lastSyncTime:
          description: Timestamp type of when ACM last successfully synced the repo
          format: google-datetime
          type: string
        sourceToken:
          description: Token indicating the state of the repo.
          type: string
        syncToken:
          description: Token indicating the state of the syncer.
          type: string
      type: object
    ConnectAgentResource:
      description: ConnectAgentResource represents a Kubernetes resource manifest for Connect Agent deployment.
      properties:
        manifest:
          description: YAML manifest of the resource.
          type: string
        type:
          $ref: "#/components/schemas/TypeMeta"
          description: Kubernetes type of the resource.
      type: object
    DataplaneV2FeatureSpec:
      description: "**Dataplane V2**: Spec"
      properties:
        enableEncryption:
          description: Enable dataplane-v2 based encryption for multiple clusters.
          type: boolean
      type: object
    DefaultClusterConfig:
      description: DefaultClusterConfig describes the default cluster configurations to be applied to all clusters born-in-fleet.
      properties:
        binaryAuthorizationConfig:
          $ref: "#/components/schemas/BinaryAuthorizationConfig"
          description: Optional. Enable/Disable binary authorization features for the cluster.
        securityPostureConfig:
          $ref: "#/components/schemas/SecurityPostureConfig"
          description: Enable/Disable Security Posture features for the cluster.
      type: object
    EdgeCluster:
      description: EdgeCluster contains information specific to Google Edge Clusters.
      properties:
        resourceLink:
          description: "Immutable. Self-link of the Google Cloud resource for the Edge Cluster. For example: //edgecontainer.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster"
          type: string
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    Expr:
      description: "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
      properties:
        description:
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
          type: string
      type: object
    Feature:
      description: Feature represents the settings and status of any Hub Feature.
      properties:
        createTime:
          description: Output only. When the Feature resource was created.
          format: google-datetime
          readOnly: true
          type: string
        deleteTime:
          description: Output only. When the Feature resource was deleted.
          format: google-datetime
          readOnly: true
          type: string
        fleetDefaultMemberConfig:
          $ref: "#/components/schemas/CommonFleetDefaultMemberConfigSpec"
          description: Optional. Feature configuration applicable to all memberships of the fleet.
        labels:
          additionalProperties:
            type: string
          description: Labels for this Feature.
          type: object
        membershipSpecs:
          additionalProperties:
            $ref: "#/components/schemas/MembershipFeatureSpec"
          description: "Optional. Membership-specific configuration for this Feature. If this Feature does not support any per-Membership configuration, this field may be unused. The keys indicate which Membership the configuration is for, in the form: `projects/{p}/locations/{l}/memberships/{m}` Where {p} is the project, {l} is a valid location and {m} is a valid Membership in this project at that location. {p} WILL match the Feature's project. {p} will always be returned as the project number, but the project ID is also accepted during input. If the same Membership is specified in the map twice (using the project ID form, and the project number form), exactly ONE of the entries will be saved, with no guarantees as to which. For this reason, it is recommended the same format be used for all entries when mutating a Feature."
          type: object
        membershipStates:
          additionalProperties:
            $ref: "#/components/schemas/MembershipFeatureState"
          description: "Output only. Membership-specific Feature status. If this Feature does report any per-Membership status, this field may be unused. The keys indicate which Membership the state is for, in the form: `projects/{p}/locations/{l}/memberships/{m}` Where {p} is the project number, {l} is a valid location and {m} is a valid Membership in this project at that location. {p} MUST match the Feature's project number."
          readOnly: true
          type: object
        name:
          description: Output only. The full, unique name of this Feature resource in the format `projects/*/locations/*/features/*`.
          readOnly: true
          type: string
        resourceState:
          $ref: "#/components/schemas/FeatureResourceState"
          description: Output only. State of the Feature resource itself.
          readOnly: true
        scopeSpecs:
          additionalProperties:
            $ref: "#/components/schemas/ScopeFeatureSpec"
          description: "Optional. Scope-specific configuration for this Feature. If this Feature does not support any per-Scope configuration, this field may be unused. The keys indicate which Scope the configuration is for, in the form: `projects/{p}/locations/global/scopes/{s}` Where {p} is the project, {s} is a valid Scope in this project. {p} WILL match the Feature's project. {p} will always be returned as the project number, but the project ID is also accepted during input. If the same Scope is specified in the map twice (using the project ID form, and the project number form), exactly ONE of the entries will be saved, with no guarantees as to which. For this reason, it is recommended the same format be used for all entries when mutating a Feature."
          type: object
        scopeStates:
          additionalProperties:
            $ref: "#/components/schemas/ScopeFeatureState"
          description: "Output only. Scope-specific Feature status. If this Feature does report any per-Scope status, this field may be unused. The keys indicate which Scope the state is for, in the form: `projects/{p}/locations/global/scopes/{s}` Where {p} is the project, {s} is a valid Scope in this project. {p} WILL match the Feature's project."
          readOnly: true
          type: object
        spec:
          $ref: "#/components/schemas/CommonFeatureSpec"
          description: Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide configuration, this field may be unused.
        state:
          $ref: "#/components/schemas/CommonFeatureState"
          description: Output only. The Hub-wide Feature state.
          readOnly: true
        updateTime:
          description: Output only. When the Feature resource was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    FeatureResourceState:
      description: FeatureResourceState describes the state of a Feature *resource* in the GkeHub API. See `FeatureState` for the "running state" of the Feature in the Hub and across Memberships.
      properties:
        state:
          description: The current state of the Feature resource in the Hub API.
          enum:
            - STATE_UNSPECIFIED
            - ENABLING
            - ACTIVE
            - DISABLING
            - UPDATING
            - SERVICE_UPDATING
          type: string
      type: object
    FeatureSpec:
      description: "**Workload Certificate**: The Hub-wide input for the WorkloadCertificate feature."
      properties:
        defaultConfig:
          $ref: "#/components/schemas/MembershipSpec"
          description: Specifies default membership spec. Users can override the default in the member_configs for each member.
        provisionGoogleCa:
          description: Immutable. Specifies CA configuration.
          enum:
            - GOOGLE_CA_PROVISIONING_UNSPECIFIED
            - DISABLED
            - ENABLED
            - ENABLED_WITH_MANAGED_CA
            - ENABLED_WITH_DEFAULT_CA
          type: string
      type: object
    FeatureState:
      description: FeatureState describes the high-level state of a Feature. It may be used to describe a Feature's state at the environ-level, or per-membershop, depending on the context.
      properties:
        code:
          description: The high-level, machine-readable status of this Feature.
          enum:
            - CODE_UNSPECIFIED
            - OK
            - WARNING
            - ERROR
          type: string
        description:
          description: A human-readable description of the current status.
          type: string
        updateTime:
          description: The time this status and any related Feature-specific details were updated.
          format: google-datetime
          type: string
      type: object
    Fleet:
      description: Fleet contains the Fleet-wide metadata and configuration.
      properties:
        createTime:
          description: Output only. When the Fleet was created.
          format: google-datetime
          readOnly: true
          type: string
        defaultClusterConfig:
          $ref: "#/components/schemas/DefaultClusterConfig"
          description: Optional. The default cluster configurations to apply across the fleet.
        deleteTime:
          description: Output only. When the Fleet was deleted.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: "Optional. A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point. Example: `Production Fleet`"
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. Labels for this Fleet.
          type: object
        name:
          description: Output only. The full, unique resource name of this fleet in the format of `projects/{project}/locations/{location}/fleets/{fleet}`. Each Google Cloud project can have at most one fleet resource, named "default".
          readOnly: true
          type: string
        state:
          $ref: "#/components/schemas/FleetLifecycleState"
          description: Output only. State of the namespace resource.
          readOnly: true
        uid:
          description: Output only. Google-generated UUID for this resource. This is unique across all Fleet resources. If a Fleet resource is deleted and another resource with the same name is created, it gets a different uid.
          readOnly: true
          type: string
        updateTime:
          description: Output only. When the Fleet was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    FleetLifecycleState:
      description: FleetLifecycleState describes the state of a Fleet resource.
      properties:
        code:
          description: Output only. The current state of the Fleet resource.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
          readOnly: true
          type: string
      type: object
    FleetObservabilityFeatureError:
      description: All error details of the fleet observability feature.
      properties:
        code:
          description: The code of the error.
          type: string
        description:
          description: A human-readable description of the current status.
          type: string
      type: object
    FleetObservabilityFeatureSpec:
      description: "**Fleet Observability**: The Hub-wide input for the FleetObservability feature."
      properties:
        loggingConfig:
          $ref: "#/components/schemas/FleetObservabilityLoggingConfig"
          description: Specified if fleet logging feature is enabled for the entire fleet. If UNSPECIFIED, fleet logging feature is disabled for the entire fleet.
      type: object
    FleetObservabilityFeatureState:
      description: "**FleetObservability**: Hub-wide Feature for FleetObservability feature. state."
      properties:
        logging:
          $ref: "#/components/schemas/FleetObservabilityFleetObservabilityLoggingState"
          description: The feature state of default logging.
        monitoring:
          $ref: "#/components/schemas/FleetObservabilityFleetObservabilityMonitoringState"
          description: The feature state of fleet monitoring.
      type: object
    FleetObservabilityFleetObservabilityBaseFeatureState:
      description: Base state for fleet observability feature.
      properties:
        code:
          description: The high-level, machine-readable status of this Feature.
          enum:
            - CODE_UNSPECIFIED
            - OK
            - ERROR
          type: string
        errors:
          description: Errors after reconciling the monitoring and logging feature if the code is not OK.
          items:
            $ref: "#/components/schemas/FleetObservabilityFeatureError"
          type: array
      type: object
    FleetObservabilityFleetObservabilityLoggingState:
      description: Feature state for logging feature.
      properties:
        defaultLog:
          $ref: "#/components/schemas/FleetObservabilityFleetObservabilityBaseFeatureState"
          description: The base feature state of fleet default log.
        scopeLog:
          $ref: "#/components/schemas/FleetObservabilityFleetObservabilityBaseFeatureState"
          description: The base feature state of fleet scope log.
      type: object
    FleetObservabilityFleetObservabilityMonitoringState:
      description: Feature state for monitoring feature.
      properties:
        state:
          $ref: "#/components/schemas/FleetObservabilityFleetObservabilityBaseFeatureState"
          description: The base feature state of fleet monitoring feature.
      type: object
    FleetObservabilityLoggingConfig:
      description: LoggingConfig defines the configuration for different types of logs.
      properties:
        defaultConfig:
          $ref: "#/components/schemas/FleetObservabilityRoutingConfig"
          description: Specified if applying the default routing config to logs not specified in other configs.
        fleetScopeLogsConfig:
          $ref: "#/components/schemas/FleetObservabilityRoutingConfig"
          description: Specified if applying the routing config to all logs for all fleet scopes.
      type: object
    FleetObservabilityMembershipSpec:
      description: "**FleetObservability**: The membership-specific input for FleetObservability feature."
      properties: {}
      type: object
    FleetObservabilityMembershipState:
      description: "**FleetObservability**: Membership-specific Feature state for fleetobservability."
      properties: {}
      type: object
    FleetObservabilityRoutingConfig:
      description: RoutingConfig configures the behaviour of fleet logging feature.
      properties:
        mode:
          description: mode configures the logs routing mode.
          enum:
            - MODE_UNSPECIFIED
            - COPY
            - MOVE
          type: string
      type: object
    GenerateConnectManifestResponse:
      description: GenerateConnectManifestResponse contains manifest information for installing/upgrading a Connect agent.
      properties:
        manifest:
          description: The ordered list of Kubernetes resources that need to be applied to the cluster for GKE Connect agent installation/upgrade.
          items:
            $ref: "#/components/schemas/ConnectAgentResource"
          type: array
      type: object
    GenerateMembershipRBACRoleBindingYAMLResponse:
      description: Response for GenerateRBACRoleBindingYAML.
      properties:
        roleBindingsYaml:
          description: a yaml text blob including the RBAC policies.
          type: string
      type: object
    GkeCluster:
      description: GkeCluster contains information specific to GKE clusters.
      properties:
        clusterMissing:
          description: Output only. If cluster_missing is set then it denotes that the GKE cluster no longer exists in the GKE Control Plane.
          readOnly: true
          type: boolean
        resourceLink:
          description: "Immutable. Self-link of the Google Cloud resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported."
          type: string
      type: object
    GoogleRpcStatus:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    IdentityServiceAuthMethod:
      description: Configuration of an auth method for a member/cluster. Only one authentication method (e.g., OIDC and LDAP) can be set per AuthMethod.
      properties:
        azureadConfig:
          $ref: "#/components/schemas/IdentityServiceAzureADConfig"
          description: AzureAD specific Configuration.
        googleConfig:
          $ref: "#/components/schemas/IdentityServiceGoogleConfig"
          description: GoogleConfig specific configuration.
        name:
          description: Identifier for auth config.
          type: string
        oidcConfig:
          $ref: "#/components/schemas/IdentityServiceOidcConfig"
          description: OIDC specific configuration.
        proxy:
          description: Proxy server address to use for auth method.
          type: string
      type: object
    IdentityServiceAzureADConfig:
      description: Configuration for the AzureAD Auth flow.
      properties:
        clientId:
          description: ID for the registered client application that makes authentication requests to the Azure AD identity provider.
          type: string
        clientSecret:
          description: Input only. Unencrypted AzureAD client secret will be passed to the GKE Hub CLH.
          type: string
        encryptedClientSecret:
          description: Output only. Encrypted AzureAD client secret.
          format: byte
          readOnly: true
          type: string
        kubectlRedirectUri:
          description: The redirect URL that kubectl uses for authorization.
          type: string
        tenant:
          description: Kind of Azure AD account to be authenticated. Supported values are or for accounts belonging to a specific tenant.
          type: string
      type: object
    IdentityServiceGoogleConfig:
      description: Configuration for the Google Plugin Auth flow.
      properties:
        disable:
          description: Disable automatic configuration of Google Plugin on supported platforms.
          type: boolean
      type: object
    IdentityServiceMembershipSpec:
      description: "**Anthos Identity Service**: Configuration for a single Membership."
      properties:
        authMethods:
          description: A member may support multiple auth methods.
          items:
            $ref: "#/components/schemas/IdentityServiceAuthMethod"
          type: array
      type: object
    IdentityServiceMembershipState:
      description: "**Anthos Identity Service**: State for a single Membership."
      properties:
        failureReason:
          description: The reason of the failure.
          type: string
        installedVersion:
          description: Installed AIS version. This is the AIS version installed on this member. The values makes sense iff state is OK.
          type: string
        memberConfig:
          $ref: "#/components/schemas/IdentityServiceMembershipSpec"
          description: Last reconciled membership configuration
        state:
          description: Deployment state on this member
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - OK
            - ERROR
          type: string
      type: object
    IdentityServiceOidcConfig:
      description: Configuration for OIDC Auth flow.
      properties:
        certificateAuthorityData:
          description: PEM-encoded CA for OIDC provider.
          type: string
        clientId:
          description: ID for OIDC client application.
          type: string
        clientSecret:
          description: Input only. Unencrypted OIDC client secret will be passed to the GKE Hub CLH.
          type: string
        deployCloudConsoleProxy:
          description: Flag to denote if reverse proxy is used to connect to auth provider. This flag should be set to true when provider is not reachable by Google Cloud Console.
          type: boolean
        enableAccessToken:
          description: Enable access token.
          type: boolean
        encryptedClientSecret:
          description: Output only. Encrypted OIDC Client secret
          format: byte
          readOnly: true
          type: string
        extraParams:
          description: Comma-separated list of key-value pairs.
          type: string
        groupPrefix:
          description: Prefix to prepend to group name.
          type: string
        groupsClaim:
          description: Claim in OIDC ID token that holds group information.
          type: string
        issuerUri:
          description: URI for the OIDC provider. This should point to the level below .well-known/openid-configuration.
          type: string
        kubectlRedirectUri:
          description: Registered redirect uri to redirect users going through OAuth flow using kubectl plugin.
          type: string
        scopes:
          description: Comma-separated list of identifiers.
          type: string
        userClaim:
          description: Claim in OIDC ID token that holds username.
          type: string
        userPrefix:
          description: Prefix to prepend to user name.
          type: string
      type: object
    KubernetesMetadata:
      description: KubernetesMetadata provides informational metadata for Memberships representing Kubernetes clusters.
      properties:
        kubernetesApiServerVersion:
          description: Output only. Kubernetes API server version string as reported by `/version`.
          readOnly: true
          type: string
        memoryMb:
          description: Output only. The total memory capacity as reported by the sum of all Kubernetes nodes resources, defined in MB.
          format: int32
          readOnly: true
          type: integer
        nodeCount:
          description: Output only. Node count as reported by Kubernetes nodes resources.
          format: int32
          readOnly: true
          type: integer
        nodeProviderId:
          description: Output only. Node providerID as reported by the first node in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the node_count will be zero and the node_provider_id will be empty.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time at which these details were last updated. This update_time is different from the Membership-level update_time since EndpointDetails are updated internally for API consumers.
          format: google-datetime
          readOnly: true
          type: string
        vcpuCount:
          description: Output only. vCPU count as reported by Kubernetes nodes resources.
          format: int32
          readOnly: true
          type: integer
      type: object
    KubernetesResource:
      description: KubernetesResource contains the YAML manifests and configuration for Membership Kubernetes resources in the cluster. After CreateMembership or UpdateMembership, these resources should be re-applied in the cluster.
      properties:
        connectResources:
          description: Output only. The Kubernetes resources for installing the GKE Connect agent This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.
          items:
            $ref: "#/components/schemas/ResourceManifest"
          readOnly: true
          type: array
        membershipCrManifest:
          description: Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.
          type: string
        membershipResources:
          description: Output only. Additional Kubernetes resources that need to be applied to the cluster after Membership creation, and after every update. This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.
          items:
            $ref: "#/components/schemas/ResourceManifest"
          readOnly: true
          type: array
        resourceOptions:
          $ref: "#/components/schemas/ResourceOptions"
          description: Optional. Options for Kubernetes resource generation.
      type: object
    ListAdminClusterMembershipsResponse:
      description: Response message for the `GkeHub.ListAdminClusterMemberships` method.
      properties:
        adminClusterMemberships:
          description: The list of matching Memberships of admin clusters.
          items:
            $ref: "#/components/schemas/Membership"
          type: array
        nextPageToken:
          description: A token to request the next page of resources from the `ListAdminClusterMemberships` method. The value of an empty string means that there are no more resources to return.
          type: string
        unreachable:
          description: List of locations that could not be reached while fetching this list.
          items:
            type: string
          type: array
      type: object
    ListBoundMembershipsResponse:
      description: List of Memberships bound to a Scope.
      properties:
        memberships:
          description: The list of Memberships bound to the given Scope.
          items:
            $ref: "#/components/schemas/Membership"
          type: array
        nextPageToken:
          description: A token to request the next page of resources from the `ListBoundMemberships` method. The value of an empty string means that there are no more resources to return.
          type: string
        unreachable:
          description: List of locations that could not be reached while fetching this list.
          items:
            type: string
          type: array
      type: object
    ListFeaturesResponse:
      description: Response message for the `GkeHub.ListFeatures` method.
      properties:
        nextPageToken:
          description: A token to request the next page of resources from the `ListFeatures` method. The value of an empty string means that there are no more resources to return.
          type: string
        resources:
          description: The list of matching Features
          items:
            $ref: "#/components/schemas/Feature"
          type: array
      type: object
    ListFleetsResponse:
      description: Response message for the `GkeHub.ListFleetsResponse` method.
      properties:
        fleets:
          description: The list of matching fleets.
          items:
            $ref: "#/components/schemas/Fleet"
          type: array
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. The token is only valid for 1h.
          type: string
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListMembershipBindingsResponse:
      description: List of MembershipBindings.
      properties:
        membershipBindings:
          description: The list of membership_bindings
          items:
            $ref: "#/components/schemas/MembershipBinding"
          type: array
        nextPageToken:
          description: A token to request the next page of resources from the `ListMembershipBindings` method. The value of an empty string means that there are no more resources to return.
          type: string
      type: object
    ListMembershipRBACRoleBindingsResponse:
      description: List of Membership RBACRoleBindings.
      properties:
        nextPageToken:
          description: A token to request the next page of resources from the `ListMembershipRBACRoleBindings` method. The value of an empty string means that there are no more resources to return.
          type: string
        rbacrolebindings:
          description: The list of Membership RBACRoleBindings.
          items:
            $ref: "#/components/schemas/RBACRoleBinding"
          type: array
      type: object
    ListMembershipsResponse:
      description: Response message for the `GkeHub.ListMemberships` method.
      properties:
        nextPageToken:
          description: A token to request the next page of resources from the `ListMemberships` method. The value of an empty string means that there are no more resources to return.
          type: string
        resources:
          description: The list of matching Memberships.
          items:
            $ref: "#/components/schemas/Membership"
          type: array
        unreachable:
          description: List of locations that could not be reached while fetching this list.
          items:
            type: string
          type: array
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    ListPermittedScopesResponse:
      description: List of permitted Scopes.
      properties:
        nextPageToken:
          description: A token to request the next page of resources from the `ListPermittedScopes` method. The value of an empty string means that there are no more resources to return.
          type: string
        scopes:
          description: The list of permitted Scopes
          items:
            $ref: "#/components/schemas/Scope"
          type: array
      type: object
    ListScopeNamespacesResponse:
      description: List of fleet namespaces.
      properties:
        nextPageToken:
          description: A token to request the next page of resources from the `ListNamespaces` method. The value of an empty string means that there are no more resources to return.
          type: string
        scopeNamespaces:
          description: The list of fleet namespaces
          items:
            $ref: "#/components/schemas/Namespace"
          type: array
      type: object
    ListScopeRBACRoleBindingsResponse:
      description: List of Scope RBACRoleBindings.
      properties:
        nextPageToken:
          description: A token to request the next page of resources from the `ListScopeRBACRoleBindings` method. The value of an empty string means that there are no more resources to return.
          type: string
        rbacrolebindings:
          description: The list of Scope RBACRoleBindings.
          items:
            $ref: "#/components/schemas/RBACRoleBinding"
          type: array
      type: object
    ListScopesResponse:
      description: List of Scopes.
      properties:
        nextPageToken:
          description: A token to request the next page of resources from the `ListScopes` method. The value of an empty string means that there are no more resources to return.
          type: string
        scopes:
          description: The list of Scopes
          items:
            $ref: "#/components/schemas/Scope"
          type: array
      type: object
    Location:
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      type: object
    Membership:
      description: Membership contains information about a member cluster.
      properties:
        authority:
          $ref: "#/components/schemas/Authority"
          description: "Optional. How to identify workloads from this Membership. See the documentation on Workload Identity for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity"
        createTime:
          description: Output only. When the Membership was created.
          format: google-datetime
          readOnly: true
          type: string
        deleteTime:
          description: Output only. When the Membership was deleted.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: "Output only. Description of this membership, limited to 63 characters. Must match the regex: `a-zA-Z0-9*` This field is present for legacy purposes."
          readOnly: true
          type: string
        endpoint:
          $ref: "#/components/schemas/MembershipEndpoint"
          description: Optional. Endpoint information to reach this member.
        externalId:
          description: "Optional. An externally-generated and managed ID for this Membership. This ID may be modified after creation, but this is not recommended. The ID must match the regex: `a-zA-Z0-9*` If this Membership represents a Kubernetes cluster, this value should be set to the UID of the `kube-system` namespace object."
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. Labels for this membership.
          type: object
        lastConnectionTime:
          description: Output only. For clusters using Connect, the timestamp of the most recent connection established with Google Cloud. This time is updated every several minutes, not continuously. For clusters that do not use GKE Connect, or that have never connected successfully, this field will be unset.
          format: google-datetime
          readOnly: true
          type: string
        monitoringConfig:
          $ref: "#/components/schemas/MonitoringConfig"
          description: Optional. The monitoring config information for this membership.
        name:
          description: "Output only. The full, unique name of this Membership resource in the format `projects/*/locations/*/memberships/{membership_id}`, set during creation. `membership_id` must be a valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters."
          readOnly: true
          type: string
        state:
          $ref: "#/components/schemas/MembershipState"
          description: Output only. State of the Membership resource.
          readOnly: true
        uniqueId:
          description: Output only. Google-generated UUID for this resource. This is unique across all Membership resources. If a Membership resource is deleted and another resource with the same name is created, it gets a different unique_id.
          readOnly: true
          type: string
        updateTime:
          description: Output only. When the Membership was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    MembershipBinding:
      description: MembershipBinding is a subresource of a Membership, representing what Fleet Scopes (or other, future Fleet resources) a Membership is bound to.
      properties:
        createTime:
          description: Output only. When the membership binding was created.
          format: google-datetime
          readOnly: true
          type: string
        deleteTime:
          description: Output only. When the membership binding was deleted.
          format: google-datetime
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. Labels for this MembershipBinding.
          type: object
        name:
          description: The resource name for the membershipbinding itself `projects/{project}/locations/{location}/memberships/{membership}/bindings/{membershipbinding}`
          type: string
        scope:
          description: A Scope resource name in the format `projects/*/locations/*/scopes/*`.
          type: string
        state:
          $ref: "#/components/schemas/MembershipBindingLifecycleState"
          description: Output only. State of the membership binding resource.
          readOnly: true
        uid:
          description: Output only. Google-generated UUID for this resource. This is unique across all membershipbinding resources. If a membershipbinding resource is deleted and another resource with the same name is created, it gets a different uid.
          readOnly: true
          type: string
        updateTime:
          description: Output only. When the membership binding was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    MembershipBindingLifecycleState:
      description: MembershipBindingLifecycleState describes the state of a Binding resource.
      properties:
        code:
          description: Output only. The current state of the MembershipBinding resource.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
          readOnly: true
          type: string
      type: object
    MembershipEndpoint:
      description: MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata.
      properties:
        applianceCluster:
          $ref: "#/components/schemas/ApplianceCluster"
          description: Optional. Specific information for a GDC Edge Appliance cluster.
        edgeCluster:
          $ref: "#/components/schemas/EdgeCluster"
          description: Optional. Specific information for a Google Edge cluster.
        gkeCluster:
          $ref: "#/components/schemas/GkeCluster"
          description: Optional. Specific information for a GKE-on-GCP cluster.
        googleManaged:
          description: Output only. Whether the lifecycle of this membership is managed by a google cluster platform service.
          readOnly: true
          type: boolean
        kubernetesMetadata:
          $ref: "#/components/schemas/KubernetesMetadata"
          description: Output only. Useful Kubernetes-specific metadata.
          readOnly: true
        kubernetesResource:
          $ref: "#/components/schemas/KubernetesResource"
          description: "Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features."
        multiCloudCluster:
          $ref: "#/components/schemas/MultiCloudCluster"
          description: Optional. Specific information for a GKE Multi-Cloud cluster.
        onPremCluster:
          $ref: "#/components/schemas/OnPremCluster"
          description: Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil "type" instead.
      type: object
    MembershipFeatureSpec:
      description: "MembershipFeatureSpec contains configuration information for a single Membership. NOTE: Please use snake case in your feature name."
      properties:
        anthosobservability:
          $ref: "#/components/schemas/AnthosObservabilityMembershipSpec"
          description: Anthos Observability-specific spec
        cloudbuild:
          $ref: "#/components/schemas/CloudBuildMembershipSpec"
          description: Cloud Build-specific spec
        configmanagement:
          $ref: "#/components/schemas/ConfigManagementMembershipSpec"
          description: Config Management-specific spec.
        fleetobservability:
          $ref: "#/components/schemas/FleetObservabilityMembershipSpec"
          description: Fleet observability membership spec
        identityservice:
          $ref: "#/components/schemas/IdentityServiceMembershipSpec"
          description: Identity Service-specific spec.
        mesh:
          $ref: "#/components/schemas/ServiceMeshMembershipSpec"
          description: Anthos Service Mesh-specific spec
        namespaceactuation:
          $ref: "#/components/schemas/NamespaceActuationMembershipSpec"
          description: FNS Actuation membership spec
        origin:
          $ref: "#/components/schemas/Origin"
          description: Whether this per-Membership spec was inherited from a fleet-level default. This field can be updated by users by either overriding a Membership config (updated to USER implicitly) or setting to FLEET explicitly.
        policycontroller:
          $ref: "#/components/schemas/PolicyControllerMembershipSpec"
          description: Policy Controller spec.
        workloadcertificate:
          $ref: "#/components/schemas/MembershipSpec"
          description: Workload Certificate spec.
      type: object
    MembershipFeatureState:
      description: MembershipFeatureState contains Feature status information for a single Membership.
      properties:
        appdevexperience:
          $ref: "#/components/schemas/AppDevExperienceFeatureState"
          description: Appdevexperience specific state.
        clusterupgrade:
          $ref: "#/components/schemas/ClusterUpgradeMembershipState"
          description: ClusterUpgrade state.
        configmanagement:
          $ref: "#/components/schemas/ConfigManagementMembershipState"
          description: Config Management-specific state.
        fleetobservability:
          $ref: "#/components/schemas/FleetObservabilityMembershipState"
          description: Fleet observability membership state.
        identityservice:
          $ref: "#/components/schemas/IdentityServiceMembershipState"
          description: Identity Service-specific state.
        metering:
          $ref: "#/components/schemas/MeteringMembershipState"
          description: Metering-specific state.
        namespaceactuation:
          $ref: "#/components/schemas/NamespaceActuationMembershipState"
          description: FNS Actuation membership state
        policycontroller:
          $ref: "#/components/schemas/PolicyControllerMembershipState"
          description: Policycontroller-specific state.
        servicemesh:
          $ref: "#/components/schemas/ServiceMeshMembershipState"
          description: Service Mesh-specific state.
        state:
          $ref: "#/components/schemas/FeatureState"
          description: The high-level state of this Feature for a single membership.
      type: object
    MembershipSpec:
      description: "**Workload Certificate**: The membership-specific input for WorkloadCertificate feature."
      properties:
        certificateManagement:
          description: Specifies workload certificate management.
          enum:
            - CERTIFICATE_MANAGEMENT_UNSPECIFIED
            - DISABLED
            - ENABLED
          type: string
      type: object
    MembershipState:
      description: MembershipState describes the state of a Membership resource.
      properties:
        code:
          description: Output only. The current state of the Membership resource.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
            - SERVICE_UPDATING
          readOnly: true
          type: string
      type: object
    MeteringMembershipState:
      description: "**Metering**: Per-Membership Feature State."
      properties:
        lastMeasurementTime:
          description: The time stamp of the most recent measurement of the number of vCPUs in the cluster.
          format: google-datetime
          type: string
        preciseLastMeasuredClusterVcpuCapacity:
          description: The vCPUs capacity in the cluster according to the most recent measurement (1/1000 precision).
          format: float
          type: number
      type: object
    MonitoringConfig:
      description: MonitoringConfig informs Fleet-based applications/services/UIs how the metrics for the underlying cluster is reported to cloud monitoring services. It can be set from empty to non-empty, but can't be mutated directly to prevent accidentally breaking the constinousty of metrics.
      properties:
        cluster:
          description: Optional. Cluster name used to report metrics. For Anthos on VMWare/Baremetal/MultiCloud clusters, it would be in format {cluster_type}/{cluster_name}, e.g., "awsClusters/cluster_1".
          type: string
        clusterHash:
          description: Optional. For GKE and Multicloud clusters, this is the UUID of the cluster resource. For VMWare and Baremetal clusters, this is the kube-system UID.
          type: string
        kubernetesMetricsPrefix:
          description: "Optional. Kubernetes system metrics, if available, are written to this prefix. This defaults to kubernetes.io for GKE, and kubernetes.io/anthos for Anthos eventually. Noted: Anthos MultiCloud will have kubernetes.io prefix today but will migration to be under kubernetes.io/anthos."
          type: string
        location:
          description: Optional. Location used to report Metrics
          type: string
        projectId:
          description: Optional. Project used to report Metrics
          type: string
      type: object
    MultiCloudCluster:
      description: MultiCloudCluster contains information specific to GKE Multi-Cloud clusters.
      properties:
        clusterMissing:
          description: Output only. If cluster_missing is set then it denotes that API(gkemulticloud.googleapis.com) resource for this GKE Multi-Cloud cluster no longer exists.
          readOnly: true
          type: boolean
        resourceLink:
          description: "Immutable. Self-link of the Google Cloud resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/attachedClusters/my-cluster"
          type: string
      type: object
    MultiClusterIngressFeatureSpec:
      description: "**Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature."
      properties:
        billing:
          deprecated: true
          description: "Deprecated: This field will be ignored and should not be set. Customer's billing structure."
          enum:
            - BILLING_UNSPECIFIED
            - PAY_AS_YOU_GO
            - ANTHOS_LICENSE
          type: string
        configMembership:
          description: "Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`"
          type: string
      type: object
    Namespace:
      description: Namespace represents a namespace across the Fleet
      properties:
        createTime:
          description: Output only. When the namespace was created.
          format: google-datetime
          readOnly: true
          type: string
        deleteTime:
          description: Output only. When the namespace was deleted.
          format: google-datetime
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. Labels for this Namespace.
          type: object
        name:
          description: The resource name for the namespace `projects/{project}/locations/{location}/namespaces/{namespace}`
          type: string
        namespaceLabels:
          additionalProperties:
            type: string
          description: Optional. Namespace-level cluster namespace labels. These labels are applied to the related namespace of the member clusters bound to the parent Scope. Scope-level labels (`namespace_labels` in the Fleet Scope resource) take precedence over Namespace-level labels if they share a key. Keys and values must be Kubernetes-conformant.
          type: object
        scope:
          description: Required. Scope associated with the namespace
          type: string
        state:
          $ref: "#/components/schemas/NamespaceLifecycleState"
          description: Output only. State of the namespace resource.
          readOnly: true
        uid:
          description: Output only. Google-generated UUID for this resource. This is unique across all namespace resources. If a namespace resource is deleted and another resource with the same name is created, it gets a different uid.
          readOnly: true
          type: string
        updateTime:
          description: Output only. When the namespace was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    NamespaceActuationFeatureSpec:
      description: An empty spec for actuation feature. This is required since Feature proto requires a spec.
      properties:
        actuationMode:
          description: actuation_mode controls the behavior of the controller
          enum:
            - ACTUATION_MODE_UNSPECIFIED
            - ACTUATION_MODE_CREATE_AND_DELETE_IF_CREATED
            - ACTUATION_MODE_ADD_AND_REMOVE_FLEET_LABELS
          type: string
      type: object
    NamespaceActuationFeatureState:
      description: NamespaceActuation Feature State.
      properties: {}
      type: object
    NamespaceActuationMembershipSpec:
      description: "**Namespace Actuation**: The membership-specific input for NamespaceActuation feature."
      properties: {}
      type: object
    NamespaceActuationMembershipState:
      description: "**Namespace Actuation**: An empty state left as an example membership-specific Feature state."
      properties: {}
      type: object
    NamespaceLifecycleState:
      description: NamespaceLifecycleState describes the state of a Namespace resource.
      properties:
        code:
          description: Output only. The current state of the Namespace resource.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
          readOnly: true
          type: string
      type: object
    OnPremCluster:
      description: OnPremCluster contains information specific to GKE On-Prem clusters.
      properties:
        adminCluster:
          description: Immutable. Whether the cluster is an admin cluster.
          type: boolean
        clusterMissing:
          description: Output only. If cluster_missing is set then it denotes that API(gkeonprem.googleapis.com) resource for this GKE On-Prem cluster no longer exists.
          readOnly: true
          type: boolean
        clusterType:
          description: Immutable. The on prem cluster's type.
          enum:
            - CLUSTERTYPE_UNSPECIFIED
            - BOOTSTRAP
            - HYBRID
            - STANDALONE
            - USER
          type: string
        resourceLink:
          description: "Immutable. Self-link of the Google Cloud resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster"
          type: string
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    OperationMetadata:
      description: Represents the metadata of the long-running operation.
      properties:
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        cancelRequested:
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        statusDetail:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
      type: object
    Origin:
      description: Origin defines where this MembershipFeatureSpec originated from.
      properties:
        type:
          description: Type specifies which type of origin is set.
          enum:
            - TYPE_UNSPECIFIED
            - FLEET
            - FLEET_OUT_OF_SYNC
            - USER
          type: string
      type: object
    Policy:
      description: "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/AuditConfig"
          type: array
        bindings:
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
          format: byte
          type: string
        version:
          description: "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
          format: int32
          type: integer
      type: object
    PolicyBinding:
      description: Binauthz policy that applies to this cluster.
      properties:
        name:
          description: "The relative resource name of the binauthz platform policy to audit. GKE platform policies have the following format: `projects/{project_number}/platforms/gke/policies/{policy_id}`."
          type: string
      type: object
    PolicyControllerBundleInstallSpec:
      description: BundleInstallSpec is the specification configuration for a single managed bundle.
      properties:
        exemptedNamespaces:
          description: The set of namespaces to be exempted from the bundle.
          items:
            type: string
          type: array
      type: object
    PolicyControllerHubConfig:
      description: Configuration for Policy Controller
      properties:
        auditIntervalSeconds:
          description: Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.
          format: int64
          type: string
        constraintViolationLimit:
          description: The maximum number of audit violations to be stored in a constraint. If not set, the internal default (currently 20) will be used.
          format: int64
          type: string
        deploymentConfigs:
          additionalProperties:
            $ref: "#/components/schemas/PolicyControllerPolicyControllerDeploymentConfig"
          description: Map of deployment configs to deployments ("admission", "audit", "mutation').
          type: object
        exemptableNamespaces:
          description: The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.
          items:
            type: string
          type: array
        installSpec:
          description: The install_spec represents the intended state specified by the latest request that mutated install_spec in the feature spec, not the lifecycle state of the feature observed by the Hub feature controller that is reported in the feature state.
          enum:
            - INSTALL_SPEC_UNSPECIFIED
            - INSTALL_SPEC_NOT_INSTALLED
            - INSTALL_SPEC_ENABLED
            - INSTALL_SPEC_SUSPENDED
            - INSTALL_SPEC_DETACHED
          type: string
        logDeniesEnabled:
          description: Logs all denies and dry run failures.
          type: boolean
        monitoring:
          $ref: "#/components/schemas/PolicyControllerMonitoringConfig"
          description: Monitoring specifies the configuration of monitoring.
        mutationEnabled:
          description: Enables the ability to mutate resources using Policy Controller.
          type: boolean
        policyContent:
          $ref: "#/components/schemas/PolicyControllerPolicyContentSpec"
          description: Specifies the desired policy content on the cluster
        referentialRulesEnabled:
          description: Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.
          type: boolean
      type: object
    PolicyControllerMembershipSpec:
      description: "**Policy Controller**: Configuration for a single cluster. Intended to parallel the PolicyController CR."
      properties:
        policyControllerHubConfig:
          $ref: "#/components/schemas/PolicyControllerHubConfig"
          description: Policy Controller configuration for the cluster.
        version:
          description: Version of Policy Controller installed.
          type: string
      type: object
    PolicyControllerMembershipState:
      description: "**Policy Controller**: State for a single cluster."
      properties:
        componentStates:
          additionalProperties:
            $ref: "#/components/schemas/PolicyControllerOnClusterState"
          description: 'Currently these include (also serving as map keys): 1. "admission" 2. "audit" 3. "mutation"'
          type: object
        policyContentState:
          $ref: "#/components/schemas/PolicyControllerPolicyContentState"
          description: The overall content state observed by the Hub Feature controller.
        state:
          description: The overall Policy Controller lifecycle state observed by the Hub Feature controller.
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLING
            - ACTIVE
            - UPDATING
            - DECOMMISSIONING
            - CLUSTER_ERROR
            - HUB_ERROR
            - SUSPENDED
            - DETACHED
          type: string
      type: object
    PolicyControllerMonitoringConfig:
      description: 'MonitoringConfig specifies the backends Policy Controller should export metrics to. For example, to specify metrics should be exported to Cloud Monitoring and Prometheus, specify backends: ["cloudmonitoring", "prometheus"]'
      properties:
        backends:
          description: Specifies the list of backends Policy Controller will export to. An empty list would effectively disable metrics export.
          items:
            enum:
              - MONITORING_BACKEND_UNSPECIFIED
              - PROMETHEUS
              - CLOUD_MONITORING
            type: string
          type: array
      type: object
    PolicyControllerOnClusterState:
      description: OnClusterState represents the state of a sub-component of Policy Controller.
      properties:
        details:
          description: Surface potential errors or information logs.
          type: string
        state:
          description: The lifecycle state of this component.
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLING
            - ACTIVE
            - UPDATING
            - DECOMMISSIONING
            - CLUSTER_ERROR
            - HUB_ERROR
            - SUSPENDED
            - DETACHED
          type: string
      type: object
    PolicyControllerPolicyContentSpec:
      description: PolicyContentSpec defines the user's desired content configuration on the cluster.
      properties:
        bundles:
          additionalProperties:
            $ref: "#/components/schemas/PolicyControllerBundleInstallSpec"
          description: map of bundle name to BundleInstallSpec. The bundle name maps to the `bundleName` key in the `policycontroller.gke.io/constraintData` annotation on a constraint.
          type: object
        templateLibrary:
          $ref: "#/components/schemas/PolicyControllerTemplateLibraryConfig"
          description: Configures the installation of the Template Library.
      type: object
    PolicyControllerPolicyContentState:
      description: The state of the policy controller policy content
      properties:
        bundleStates:
          additionalProperties:
            $ref: "#/components/schemas/PolicyControllerOnClusterState"
          description: The state of the any bundles included in the chosen version of the manifest
          type: object
        referentialSyncConfigState:
          $ref: "#/components/schemas/PolicyControllerOnClusterState"
          description: The state of the referential data sync configuration. This could represent the state of either the syncSet object(s) or the config object, depending on the version of PoCo configured by the user.
        templateLibraryState:
          $ref: "#/components/schemas/PolicyControllerOnClusterState"
          description: The state of the template library
      type: object
    PolicyControllerPolicyControllerDeploymentConfig:
      description: Deployment-specific configuration.
      properties:
        containerResources:
          $ref: "#/components/schemas/PolicyControllerResourceRequirements"
          description: Container resource requirements.
        podAffinity:
          description: Pod affinity configuration.
          enum:
            - AFFINITY_UNSPECIFIED
            - NO_AFFINITY
            - ANTI_AFFINITY
          type: string
        podAntiAffinity:
          deprecated: true
          description: "Pod anti-affinity enablement. Deprecated: use `pod_affinity` instead."
          type: boolean
        podTolerations:
          description: Pod tolerations of node taints.
          items:
            $ref: "#/components/schemas/PolicyControllerToleration"
          type: array
        replicaCount:
          description: Pod replica count.
          format: int64
          type: string
      type: object
    PolicyControllerResourceList:
      description: ResourceList contains container resource requirements.
      properties:
        cpu:
          description: CPU requirement expressed in Kubernetes resource units.
          type: string
        memory:
          description: Memory requirement expressed in Kubernetes resource units.
          type: string
      type: object
    PolicyControllerResourceRequirements:
      description: ResourceRequirements describes the compute resource requirements.
      properties:
        limits:
          $ref: "#/components/schemas/PolicyControllerResourceList"
          description: Limits describes the maximum amount of compute resources allowed for use by the running container.
        requests:
          $ref: "#/components/schemas/PolicyControllerResourceList"
          description: Requests describes the amount of compute resources reserved for the container by the kube-scheduler.
      type: object
    PolicyControllerTemplateLibraryConfig:
      description: The config specifying which default library templates to install.
      properties:
        installation:
          description: Configures the manner in which the template library is installed on the cluster.
          enum:
            - INSTALLATION_UNSPECIFIED
            - NOT_INSTALLED
            - ALL
          type: string
      type: object
    PolicyControllerToleration:
      description: Toleration of a node taint.
      properties:
        effect:
          description: Matches a taint effect.
          type: string
        key:
          description: Matches a taint key (not necessarily unique).
          type: string
        operator:
          description: Matches a taint operator.
          type: string
        value:
          description: Matches a taint value.
          type: string
      type: object
    RBACRoleBinding:
      description: RBACRoleBinding represents a rbacrolebinding across the Fleet
      properties:
        createTime:
          description: Output only. When the rbacrolebinding was created.
          format: google-datetime
          readOnly: true
          type: string
        deleteTime:
          description: Output only. When the rbacrolebinding was deleted.
          format: google-datetime
          readOnly: true
          type: string
        group:
          description: group is the group, as seen by the kubernetes cluster.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. Labels for this RBACRolebinding.
          type: object
        name:
          description: The resource name for the rbacrolebinding `projects/{project}/locations/{location}/scopes/{scope}/rbacrolebindings/{rbacrolebinding}` or `projects/{project}/locations/{location}/memberships/{membership}/rbacrolebindings/{rbacrolebinding}`
          type: string
        role:
          $ref: "#/components/schemas/Role"
          description: Required. Role to bind to the principal
        state:
          $ref: "#/components/schemas/RBACRoleBindingLifecycleState"
          description: Output only. State of the rbacrolebinding resource.
          readOnly: true
        uid:
          description: Output only. Google-generated UUID for this resource. This is unique across all rbacrolebinding resources. If a rbacrolebinding resource is deleted and another resource with the same name is created, it gets a different uid.
          readOnly: true
          type: string
        updateTime:
          description: Output only. When the rbacrolebinding was last updated.
          format: google-datetime
          readOnly: true
          type: string
        user:
          description: user is the name of the user as seen by the kubernetes cluster, example "alice" or "alice@domain.tld"
          type: string
      type: object
    RBACRoleBindingLifecycleState:
      description: RBACRoleBindingLifecycleState describes the state of a RbacRoleBinding resource.
      properties:
        code:
          description: Output only. The current state of the rbacrolebinding resource.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
          readOnly: true
          type: string
      type: object
    ResourceManifest:
      description: ResourceManifest represents a single Kubernetes resource to be applied to the cluster.
      properties:
        clusterScoped:
          description: Whether the resource provided in the manifest is `cluster_scoped`. If unset, the manifest is assumed to be namespace scoped. This field is used for REST mapping when applying the resource in a cluster.
          type: boolean
        manifest:
          description: YAML manifest of the resource.
          type: string
      type: object
    ResourceOptions:
      description: ResourceOptions represent options for Kubernetes resource generation.
      properties:
        connectVersion:
          description: Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.
          type: string
        k8sVersion:
          description: Optional. Major version of the Kubernetes cluster. This is only used to determine which version to use for the CustomResourceDefinition resources, `apiextensions/v1beta1` or`apiextensions/v1`.
          type: string
        v1beta1Crd:
          description: Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.
          type: boolean
      type: object
    Role:
      description: Role is the type for Kubernetes roles
      properties:
        predefinedRole:
          description: predefined_role is the Kubernetes default role to use
          enum:
            - UNKNOWN
            - ADMIN
            - EDIT
            - VIEW
            - ANTHOS_SUPPORT
          type: string
      type: object
    Scope:
      description: Scope represents a Scope in a Fleet.
      properties:
        createTime:
          description: Output only. When the scope was created.
          format: google-datetime
          readOnly: true
          type: string
        deleteTime:
          description: Output only. When the scope was deleted.
          format: google-datetime
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. Labels for this Scope.
          type: object
        name:
          description: The resource name for the scope `projects/{project}/locations/{location}/scopes/{scope}`
          type: string
        namespaceLabels:
          additionalProperties:
            type: string
          description: Optional. Scope-level cluster namespace labels. For the member clusters bound to the Scope, these labels are applied to each namespace under the Scope. Scope-level labels take precedence over Namespace-level labels (`namespace_labels` in the Fleet Namespace resource) if they share a key. Keys and values must be Kubernetes-conformant.
          type: object
        state:
          $ref: "#/components/schemas/ScopeLifecycleState"
          description: Output only. State of the scope resource.
          readOnly: true
        uid:
          description: Output only. Google-generated UUID for this resource. This is unique across all scope resources. If a scope resource is deleted and another resource with the same name is created, it gets a different uid.
          readOnly: true
          type: string
        updateTime:
          description: Output only. When the scope was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    ScopeFeatureSpec:
      description: ScopeFeatureSpec contains feature specs for a fleet scope.
      properties:
        clusterupgrade:
          $ref: "#/components/schemas/ClusterUpgradeScopeSpec"
          description: Spec for the ClusterUpgrade feature at the scope level
      type: object
    ScopeFeatureState:
      description: ScopeFeatureState contains Scope-wide Feature status information.
      properties:
        clusterupgrade:
          $ref: "#/components/schemas/ClusterUpgradeScopeState"
          description: State for the ClusterUpgrade feature at the scope level
        state:
          $ref: "#/components/schemas/FeatureState"
          description: Output only. The "running state" of the Feature in this Scope.
          readOnly: true
      type: object
    ScopeLifecycleState:
      description: ScopeLifecycleState describes the state of a Scope resource.
      properties:
        code:
          description: Output only. The current state of the scope resource.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
          readOnly: true
          type: string
      type: object
    SecurityPostureConfig:
      description: SecurityPostureConfig defines the flags needed to enable/disable features for the Security Posture API.
      properties:
        mode:
          description: Sets which mode to use for Security Posture features.
          enum:
            - MODE_UNSPECIFIED
            - DISABLED
            - BASIC
          type: string
        vulnerabilityMode:
          description: Sets which mode to use for vulnerability scanning.
          enum:
            - VULNERABILITY_MODE_UNSPECIFIED
            - VULNERABILITY_DISABLED
            - VULNERABILITY_BASIC
            - VULNERABILITY_ENTERPRISE
          type: string
      type: object
    ServiceMeshAnalysisMessage:
      description: AnalysisMessage is a single message produced by an analyzer, and it used to communicate to the end user about the state of their Service Mesh configuration.
      properties:
        args:
          additionalProperties:
            description: Properties of the object.
          description: A UI can combine these args with a template (based on message_base.type) to produce an internationalized message.
          type: object
        description:
          description: A human readable description of what the error means. It is suitable for non-internationalize display purposes.
          type: string
        messageBase:
          $ref: "#/components/schemas/ServiceMeshAnalysisMessageBase"
          description: Details common to all types of Istio and ServiceMesh analysis messages.
        resourcePaths:
          description: 'A list of strings specifying the resource identifiers that were the cause of message generation. A "path" here may be: * MEMBERSHIP_ID if the cause is a specific member cluster * MEMBERSHIP_ID/(NAMESPACE\/)?RESOURCETYPE/NAME if the cause is a resource in a cluster'
          items:
            type: string
          type: array
      type: object
    ServiceMeshAnalysisMessageBase:
      description: AnalysisMessageBase describes some common information that is needed for all messages.
      properties:
        documentationUrl:
          description: A url pointing to the Service Mesh or Istio documentation for this specific error type.
          type: string
        level:
          description: Represents how severe a message is.
          enum:
            - LEVEL_UNSPECIFIED
            - ERROR
            - WARNING
            - INFO
          type: string
        type:
          $ref: "#/components/schemas/ServiceMeshType"
          description: Represents the specific type of a message.
      type: object
    ServiceMeshControlPlaneManagement:
      description: Status of control plane management.
      properties:
        details:
          description: Explanation of state.
          items:
            $ref: "#/components/schemas/ServiceMeshStatusDetails"
          type: array
        state:
          description: LifecycleState of control plane management.
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - DISABLED
            - FAILED_PRECONDITION
            - PROVISIONING
            - ACTIVE
            - STALLED
            - NEEDS_ATTENTION
            - DEGRADED
          type: string
      type: object
    ServiceMeshDataPlaneManagement:
      description: Status of data plane management. Only reported per-member.
      properties:
        details:
          description: Explanation of the status.
          items:
            $ref: "#/components/schemas/ServiceMeshStatusDetails"
          type: array
        state:
          description: Lifecycle status of data plane management.
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - DISABLED
            - FAILED_PRECONDITION
            - PROVISIONING
            - ACTIVE
            - STALLED
            - NEEDS_ATTENTION
            - DEGRADED
          type: string
      type: object
    ServiceMeshFeatureState:
      description: "**Service Mesh**: State for the whole Hub, as analyzed by the Service Mesh Hub Controller."
      properties:
        analysisMessages:
          description: Output only. Results of running Service Mesh analyzers.
          items:
            $ref: "#/components/schemas/ServiceMeshAnalysisMessage"
          readOnly: true
          type: array
      type: object
    ServiceMeshMembershipSpec:
      description: "**Service Mesh**: Spec for a single Membership for the servicemesh feature"
      properties:
        controlPlane:
          deprecated: true
          description: "Deprecated: use `management` instead Enables automatic control plane management."
          enum:
            - CONTROL_PLANE_MANAGEMENT_UNSPECIFIED
            - AUTOMATIC
            - MANUAL
          type: string
        defaultChannel:
          description: Determines which release channel to use for default injection and service mesh APIs.
          enum:
            - CHANNEL_UNSPECIFIED
            - RAPID
            - REGULAR
            - STABLE
          type: string
        management:
          description: Enables automatic Service Mesh management.
          enum:
            - MANAGEMENT_UNSPECIFIED
            - MANAGEMENT_AUTOMATIC
            - MANAGEMENT_MANUAL
          type: string
      type: object
    ServiceMeshMembershipState:
      description: "**Service Mesh**: State for a single Membership, as analyzed by the Service Mesh Hub Controller."
      properties:
        analysisMessages:
          description: Output only. Results of running Service Mesh analyzers.
          items:
            $ref: "#/components/schemas/ServiceMeshAnalysisMessage"
          readOnly: true
          type: array
        configApiVersion:
          description: The API version (i.e. Istio CRD version) for configuring service mesh in this cluster. This version is influenced by the `default_channel` field.
          type: string
        controlPlaneManagement:
          $ref: "#/components/schemas/ServiceMeshControlPlaneManagement"
          description: Output only. Status of control plane management
          readOnly: true
        dataPlaneManagement:
          $ref: "#/components/schemas/ServiceMeshDataPlaneManagement"
          description: Output only. Status of data plane management.
          readOnly: true
      type: object
    ServiceMeshStatusDetails:
      description: Structured and human-readable details for a status.
      properties:
        code:
          description: A machine-readable code that further describes a broad status.
          type: string
        details:
          description: Human-readable explanation of code.
          type: string
      type: object
    ServiceMeshType:
      description: A unique identifier for the type of message. Display_name is intended to be human-readable, code is intended to be machine readable. There should be a one-to-one mapping between display_name and code. (i.e. do not re-use display_names or codes between message types.) See istio.analysis.v1alpha1.AnalysisMessageBase.Type
      properties:
        code:
          description: A 7 character code matching `^IST[0-9]{4}$` or `^ASM[0-9]{4}$`, intended to uniquely identify the message type. (e.g. "IST0001" is mapped to the "InternalError" message type.)
          type: string
        displayName:
          description: A human-readable name for the message type. e.g. "InternalError", "PodMissingProxy". This should be the same for all messages of the same type. (This corresponds to the `name` field in open-source Istio.)
          type: string
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
          description: "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        updateMask:
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          format: google-fieldmask
          type: string
      type: object
    Status:
      description: Status specifies state for the subcomponent.
      properties:
        code:
          description: Code specifies AppDevExperienceFeature's subcomponent ready state.
          enum:
            - CODE_UNSPECIFIED
            - OK
            - FAILED
            - UNKNOWN
          type: string
        description:
          description: Description is populated if Code is Failed, explaining why it has failed.
          type: string
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
          type: array
      type: object
    TypeMeta:
      description: TypeMeta is the type information needed for content unmarshalling of Kubernetes resources in the manifest.
      properties:
        apiVersion:
          description: APIVersion of the resource (e.g. v1).
          type: string
        kind:
          description: Kind of the resource (e.g. Deployment).
          type: string
      type: object
    ValidateCreateMembershipRequest:
      description: Request message for the `GkeHub.ValidateCreateMembership` method.
      properties:
        membership:
          $ref: "#/components/schemas/Membership"
          description: Required. Membership resource to be created.
        membershipId:
          description: Required. Client chosen membership id.
          type: string
      type: object
    ValidateCreateMembershipResponse:
      description: Response message for the `GkeHub.ValidateCreateMembership` method.
      properties:
        validationResults:
          description: Wraps all the validator results.
          items:
            $ref: "#/components/schemas/ValidationResult"
          type: array
      type: object
    ValidationResult:
      description: ValidationResults are results set by each validator running during ValidateCreateMembership.
      properties:
        result:
          description: Additional information for the validation.
          type: string
        success:
          description: Whether the validation is passed or not.
          type: boolean
        validator:
          description: Validator type to validate membership with.
          enum:
            - VALIDATOR_TYPE_UNSPECIFIED
            - MEMBERSHIP_ID
            - CROSS_PROJECT_PERMISSION
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
