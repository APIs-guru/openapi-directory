# coding: utf-8

"""
    GKE Hub API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_admin_cluster_memberships_response import ListAdminClusterMembershipsResponse

class TestListAdminClusterMembershipsResponse(unittest.TestCase):
    """ListAdminClusterMembershipsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListAdminClusterMembershipsResponse:
        """Test ListAdminClusterMembershipsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListAdminClusterMembershipsResponse`
        """
        model = ListAdminClusterMembershipsResponse()
        if include_optional:
            return ListAdminClusterMembershipsResponse(
                admin_cluster_memberships = [
                    openapi_client.models.membership.Membership(
                        authority = openapi_client.models.authority.Authority(
                            identity_provider = '', 
                            issuer = '', 
                            oidc_jwks = 'YQ==', 
                            workload_identity_pool = '', ), 
                        create_time = '', 
                        delete_time = '', 
                        description = '', 
                        endpoint = openapi_client.models.membership_endpoint.MembershipEndpoint(
                            appliance_cluster = openapi_client.models.appliance_cluster.ApplianceCluster(
                                resource_link = '', ), 
                            edge_cluster = openapi_client.models.edge_cluster.EdgeCluster(
                                resource_link = '', ), 
                            gke_cluster = openapi_client.models.gke_cluster.GkeCluster(
                                cluster_missing = True, 
                                resource_link = '', ), 
                            google_managed = True, 
                            kubernetes_metadata = openapi_client.models.kubernetes_metadata.KubernetesMetadata(
                                kubernetes_api_server_version = '', 
                                memory_mb = 56, 
                                node_count = 56, 
                                node_provider_id = '', 
                                update_time = '', 
                                vcpu_count = 56, ), 
                            kubernetes_resource = openapi_client.models.kubernetes_resource.KubernetesResource(
                                connect_resources = [
                                    openapi_client.models.resource_manifest.ResourceManifest(
                                        cluster_scoped = True, 
                                        manifest = '', )
                                    ], 
                                membership_cr_manifest = '', 
                                membership_resources = [
                                    openapi_client.models.resource_manifest.ResourceManifest(
                                        cluster_scoped = True, 
                                        manifest = '', )
                                    ], 
                                resource_options = openapi_client.models.resource_options.ResourceOptions(
                                    connect_version = '', 
                                    k8s_version = '', 
                                    v1beta1_crd = True, ), ), 
                            multi_cloud_cluster = openapi_client.models.multi_cloud_cluster.MultiCloudCluster(
                                cluster_missing = True, 
                                resource_link = '', ), 
                            on_prem_cluster = openapi_client.models.on_prem_cluster.OnPremCluster(
                                admin_cluster = True, 
                                cluster_missing = True, 
                                cluster_type = 'CLUSTERTYPE_UNSPECIFIED', 
                                resource_link = '', ), ), 
                        external_id = '', 
                        labels = {
                            'key' : ''
                            }, 
                        last_connection_time = '', 
                        monitoring_config = openapi_client.models.monitoring_config.MonitoringConfig(
                            cluster = '', 
                            cluster_hash = '', 
                            kubernetes_metrics_prefix = '', 
                            location = '', 
                            project_id = '', ), 
                        name = '', 
                        state = openapi_client.models.membership_state.MembershipState(
                            code = 'CODE_UNSPECIFIED', ), 
                        unique_id = '', 
                        update_time = '', )
                    ],
                next_page_token = '',
                unreachable = [
                    ''
                    ]
            )
        else:
            return ListAdminClusterMembershipsResponse(
        )
        """

    def testListAdminClusterMembershipsResponse(self):
        """Test ListAdminClusterMembershipsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
