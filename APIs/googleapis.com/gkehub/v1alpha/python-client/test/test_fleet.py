# coding: utf-8

"""
    GKE Hub API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.fleet import Fleet

class TestFleet(unittest.TestCase):
    """Fleet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Fleet:
        """Test Fleet
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Fleet`
        """
        model = Fleet()
        if include_optional:
            return Fleet(
                create_time = '',
                default_cluster_config = openapi_client.models.default_cluster_config.DefaultClusterConfig(
                    binary_authorization_config = openapi_client.models.binary_authorization_config.BinaryAuthorizationConfig(
                        evaluation_mode = 'EVALUATION_MODE_UNSPECIFIED', 
                        policy_bindings = [
                            openapi_client.models.policy_binding.PolicyBinding(
                                name = '', )
                            ], ), 
                    security_posture_config = openapi_client.models.security_posture_config.SecurityPostureConfig(
                        mode = 'MODE_UNSPECIFIED', 
                        vulnerability_mode = 'VULNERABILITY_MODE_UNSPECIFIED', ), ),
                delete_time = '',
                display_name = '',
                labels = {
                    'key' : ''
                    },
                name = '',
                state = openapi_client.models.fleet_lifecycle_state.FleetLifecycleState(
                    code = 'CODE_UNSPECIFIED', ),
                uid = '',
                update_time = ''
            )
        else:
            return Fleet(
        )
        """

    def testFleet(self):
        """Test Fleet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
