# coding: utf-8

"""
    GKE Hub API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.policy_controller_policy_controller_deployment_config import PolicyControllerPolicyControllerDeploymentConfig

class TestPolicyControllerPolicyControllerDeploymentConfig(unittest.TestCase):
    """PolicyControllerPolicyControllerDeploymentConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PolicyControllerPolicyControllerDeploymentConfig:
        """Test PolicyControllerPolicyControllerDeploymentConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PolicyControllerPolicyControllerDeploymentConfig`
        """
        model = PolicyControllerPolicyControllerDeploymentConfig()
        if include_optional:
            return PolicyControllerPolicyControllerDeploymentConfig(
                container_resources = openapi_client.models.policy_controller_resource_requirements.PolicyControllerResourceRequirements(
                    limits = openapi_client.models.policy_controller_resource_list.PolicyControllerResourceList(
                        cpu = '', 
                        memory = '', ), 
                    requests = openapi_client.models.policy_controller_resource_list.PolicyControllerResourceList(
                        cpu = '', 
                        memory = '', ), ),
                pod_affinity = 'AFFINITY_UNSPECIFIED',
                pod_anti_affinity = True,
                pod_tolerations = [
                    openapi_client.models.policy_controller_toleration.PolicyControllerToleration(
                        effect = '', 
                        key = '', 
                        operator = '', 
                        value = '', )
                    ],
                replica_count = ''
            )
        else:
            return PolicyControllerPolicyControllerDeploymentConfig(
        )
        """

    def testPolicyControllerPolicyControllerDeploymentConfig(self):
        """Test PolicyControllerPolicyControllerDeploymentConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
