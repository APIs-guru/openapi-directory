# coding: utf-8

"""
    GKE Hub API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.scope_feature_state import ScopeFeatureState

class TestScopeFeatureState(unittest.TestCase):
    """ScopeFeatureState unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ScopeFeatureState:
        """Test ScopeFeatureState
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ScopeFeatureState`
        """
        model = ScopeFeatureState()
        if include_optional:
            return ScopeFeatureState(
                clusterupgrade = openapi_client.models.cluster_upgrade_scope_state.ClusterUpgradeScopeState(
                    downstream_scopes = [
                        ''
                        ], 
                    gke_state = openapi_client.models.cluster_upgrade_gke_upgrade_feature_state.ClusterUpgradeGKEUpgradeFeatureState(
                        conditions = [
                            openapi_client.models.cluster_upgrade_gke_upgrade_feature_condition.ClusterUpgradeGKEUpgradeFeatureCondition(
                                reason = '', 
                                status = '', 
                                type = '', 
                                update_time = '', )
                            ], 
                        upgrade_state = [
                            openapi_client.models.cluster_upgrade_gke_upgrade_state.ClusterUpgradeGKEUpgradeState(
                                stats = {
                                    'key' : ''
                                    }, 
                                status = openapi_client.models.cluster_upgrade_upgrade_status.ClusterUpgradeUpgradeStatus(
                                    code = 'CODE_UNSPECIFIED', 
                                    reason = '', 
                                    update_time = '', ), 
                                upgrade = openapi_client.models.cluster_upgrade_gke_upgrade.ClusterUpgradeGKEUpgrade(
                                    name = '', 
                                    version = '', ), )
                            ], ), 
                    ignored = {
                        'key' : openapi_client.models.cluster_upgrade_ignored_membership.ClusterUpgradeIgnoredMembership(
                            ignored_time = '', 
                            reason = '', )
                        }, ),
                state = openapi_client.models.feature_state.FeatureState(
                    code = 'CODE_UNSPECIFIED', 
                    description = '', 
                    update_time = '', )
            )
        else:
            return ScopeFeatureState(
        )
        """

    def testScopeFeatureState(self):
        """Test ScopeFeatureState"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
