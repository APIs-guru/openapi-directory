# coding: utf-8

"""
    GKE Hub API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.config_management_membership_spec import ConfigManagementMembershipSpec

class TestConfigManagementMembershipSpec(unittest.TestCase):
    """ConfigManagementMembershipSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConfigManagementMembershipSpec:
        """Test ConfigManagementMembershipSpec
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConfigManagementMembershipSpec`
        """
        model = ConfigManagementMembershipSpec()
        if include_optional:
            return ConfigManagementMembershipSpec(
                binauthz = openapi_client.models.config_management_binauthz_config.ConfigManagementBinauthzConfig(
                    enabled = True, ),
                cluster = '',
                config_sync = openapi_client.models.config_management_config_sync.ConfigManagementConfigSync(
                    allow_vertical_scale = True, 
                    enabled = True, 
                    git = openapi_client.models.config_management_git_config.ConfigManagementGitConfig(
                        gcp_service_account_email = '', 
                        https_proxy = '', 
                        policy_dir = '', 
                        secret_type = '', 
                        sync_branch = '', 
                        sync_repo = '', 
                        sync_rev = '', 
                        sync_wait_secs = '', ), 
                    metrics_gcp_service_account_email = '', 
                    oci = openapi_client.models.config_management_oci_config.ConfigManagementOciConfig(
                        gcp_service_account_email = '', 
                        policy_dir = '', 
                        secret_type = '', 
                        sync_repo = '', 
                        sync_wait_secs = '', ), 
                    prevent_drift = True, 
                    source_format = '', ),
                hierarchy_controller = openapi_client.models.config_management_hierarchy_controller_config.ConfigManagementHierarchyControllerConfig(
                    enable_hierarchical_resource_quota = True, 
                    enable_pod_tree_labels = True, 
                    enabled = True, ),
                management = 'MANAGEMENT_UNSPECIFIED',
                policy_controller = openapi_client.models.config_management_policy_controller.ConfigManagementPolicyController(
                    audit_interval_seconds = '', 
                    enabled = True, 
                    exemptable_namespaces = [
                        ''
                        ], 
                    log_denies_enabled = True, 
                    monitoring = openapi_client.models.config_management_policy_controller_monitoring.ConfigManagementPolicyControllerMonitoring(
                        backends = [
                            'MONITORING_BACKEND_UNSPECIFIED'
                            ], ), 
                    mutation_enabled = True, 
                    referential_rules_enabled = True, 
                    template_library_installed = True, 
                    update_time = '', ),
                version = ''
            )
        else:
            return ConfigManagementMembershipSpec(
        )
        """

    def testConfigManagementMembershipSpec(self):
        """Test ConfigManagementMembershipSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
