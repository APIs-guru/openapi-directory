# coding: utf-8

"""
    GKE Hub API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cluster_upgrade_fleet_spec import ClusterUpgradeFleetSpec

class TestClusterUpgradeFleetSpec(unittest.TestCase):
    """ClusterUpgradeFleetSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ClusterUpgradeFleetSpec:
        """Test ClusterUpgradeFleetSpec
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ClusterUpgradeFleetSpec`
        """
        model = ClusterUpgradeFleetSpec()
        if include_optional:
            return ClusterUpgradeFleetSpec(
                gke_upgrade_overrides = [
                    openapi_client.models.cluster_upgrade_gke_upgrade_override.ClusterUpgradeGKEUpgradeOverride(
                        post_conditions = openapi_client.models.cluster_upgrade_post_conditions.ClusterUpgradePostConditions(
                            soaking = '', ), 
                        upgrade = openapi_client.models.cluster_upgrade_gke_upgrade.ClusterUpgradeGKEUpgrade(
                            name = '', 
                            version = '', ), )
                    ],
                post_conditions = openapi_client.models.cluster_upgrade_post_conditions.ClusterUpgradePostConditions(
                    soaking = '', ),
                upstream_fleets = [
                    ''
                    ]
            )
        else:
            return ClusterUpgradeFleetSpec(
        )
        """

    def testClusterUpgradeFleetSpec(self):
        """Test ClusterUpgradeFleetSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
