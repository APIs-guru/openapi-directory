# coding: utf-8

"""
    GKE Hub API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1alpha2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.membership_endpoint import MembershipEndpoint

class TestMembershipEndpoint(unittest.TestCase):
    """MembershipEndpoint unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MembershipEndpoint:
        """Test MembershipEndpoint
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MembershipEndpoint`
        """
        model = MembershipEndpoint()
        if include_optional:
            return MembershipEndpoint(
                appliance_cluster = openapi_client.models.appliance_cluster.ApplianceCluster(
                    resource_link = '', ),
                edge_cluster = openapi_client.models.edge_cluster.EdgeCluster(
                    resource_link = '', ),
                gke_cluster = openapi_client.models.gke_cluster.GkeCluster(
                    cluster_missing = True, 
                    resource_link = '', ),
                kubernetes_metadata = openapi_client.models.kubernetes_metadata.KubernetesMetadata(
                    kubernetes_api_server_version = '', 
                    memory_mb = 56, 
                    node_count = 56, 
                    node_provider_id = '', 
                    update_time = '', 
                    vcpu_count = 56, ),
                kubernetes_resource = openapi_client.models.kubernetes_resource.KubernetesResource(
                    connect_resources = [
                        openapi_client.models.resource_manifest.ResourceManifest(
                            cluster_scoped = True, 
                            manifest = '', )
                        ], 
                    membership_cr_manifest = '', 
                    membership_resources = [
                        openapi_client.models.resource_manifest.ResourceManifest(
                            cluster_scoped = True, 
                            manifest = '', )
                        ], 
                    resource_options = openapi_client.models.resource_options.ResourceOptions(
                        connect_version = '', 
                        k8s_version = '', 
                        v1beta1_crd = True, ), ),
                multi_cloud_cluster = openapi_client.models.multi_cloud_cluster.MultiCloudCluster(
                    cluster_missing = True, 
                    resource_link = '', ),
                on_prem_cluster = openapi_client.models.on_prem_cluster.OnPremCluster(
                    admin_cluster = True, 
                    cluster_missing = True, 
                    cluster_type = 'CLUSTERTYPE_UNSPECIFIED', 
                    resource_link = '', )
            )
        else:
            return MembershipEndpoint(
        )
        """

    def testMembershipEndpoint(self):
        """Test MembershipEndpoint"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
