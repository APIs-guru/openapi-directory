# coding: utf-8

"""
    GKE Hub API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.config_management_config_sync import ConfigManagementConfigSync

class TestConfigManagementConfigSync(unittest.TestCase):
    """ConfigManagementConfigSync unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConfigManagementConfigSync:
        """Test ConfigManagementConfigSync
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConfigManagementConfigSync`
        """
        model = ConfigManagementConfigSync()
        if include_optional:
            return ConfigManagementConfigSync(
                allow_vertical_scale = True,
                enabled = True,
                git = openapi_client.models.config_management_git_config.ConfigManagementGitConfig(
                    gcp_service_account_email = '', 
                    https_proxy = '', 
                    policy_dir = '', 
                    secret_type = '', 
                    sync_branch = '', 
                    sync_repo = '', 
                    sync_rev = '', 
                    sync_wait_secs = '', ),
                metrics_gcp_service_account_email = '',
                oci = openapi_client.models.config_management_oci_config.ConfigManagementOciConfig(
                    gcp_service_account_email = '', 
                    policy_dir = '', 
                    secret_type = '', 
                    sync_repo = '', 
                    sync_wait_secs = '', ),
                prevent_drift = True,
                source_format = ''
            )
        else:
            return ConfigManagementConfigSync(
        )
        """

    def testConfigManagementConfigSync(self):
        """Test ConfigManagementConfigSync"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
