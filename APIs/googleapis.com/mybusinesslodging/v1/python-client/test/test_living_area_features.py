# coding: utf-8

"""
    My Business Lodging API

    The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.living_area_features import LivingAreaFeatures

class TestLivingAreaFeatures(unittest.TestCase):
    """LivingAreaFeatures unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LivingAreaFeatures:
        """Test LivingAreaFeatures
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LivingAreaFeatures`
        """
        model = LivingAreaFeatures()
        if include_optional:
            return LivingAreaFeatures(
                air_conditioning = True,
                air_conditioning_exception = 'EXCEPTION_UNSPECIFIED',
                bathtub = True,
                bathtub_exception = 'EXCEPTION_UNSPECIFIED',
                bidet = True,
                bidet_exception = 'EXCEPTION_UNSPECIFIED',
                dryer = True,
                dryer_exception = 'EXCEPTION_UNSPECIFIED',
                electronic_room_key = True,
                electronic_room_key_exception = 'EXCEPTION_UNSPECIFIED',
                fireplace = True,
                fireplace_exception = 'EXCEPTION_UNSPECIFIED',
                hairdryer = True,
                hairdryer_exception = 'EXCEPTION_UNSPECIFIED',
                heating = True,
                heating_exception = 'EXCEPTION_UNSPECIFIED',
                inunit_safe = True,
                inunit_safe_exception = 'EXCEPTION_UNSPECIFIED',
                inunit_wifi_available = True,
                inunit_wifi_available_exception = 'EXCEPTION_UNSPECIFIED',
                ironing_equipment = True,
                ironing_equipment_exception = 'EXCEPTION_UNSPECIFIED',
                pay_per_view_movies = True,
                pay_per_view_movies_exception = 'EXCEPTION_UNSPECIFIED',
                private_bathroom = True,
                private_bathroom_exception = 'EXCEPTION_UNSPECIFIED',
                shower = True,
                shower_exception = 'EXCEPTION_UNSPECIFIED',
                toilet = True,
                toilet_exception = 'EXCEPTION_UNSPECIFIED',
                tv = True,
                tv_casting = True,
                tv_casting_exception = 'EXCEPTION_UNSPECIFIED',
                tv_exception = 'EXCEPTION_UNSPECIFIED',
                tv_streaming = True,
                tv_streaming_exception = 'EXCEPTION_UNSPECIFIED',
                universal_power_adapters = True,
                universal_power_adapters_exception = 'EXCEPTION_UNSPECIFIED',
                washer = True,
                washer_exception = 'EXCEPTION_UNSPECIFIED'
            )
        else:
            return LivingAreaFeatures(
        )
        """

    def testLivingAreaFeatures(self):
        """Test LivingAreaFeatures"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
