# coding: utf-8

"""
    My Business Lodging API

    The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.sustainability_certifications import SustainabilityCertifications

class TestSustainabilityCertifications(unittest.TestCase):
    """SustainabilityCertifications unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SustainabilityCertifications:
        """Test SustainabilityCertifications
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SustainabilityCertifications`
        """
        model = SustainabilityCertifications()
        if include_optional:
            return SustainabilityCertifications(
                breeam_certification = 'BREEAM_CERTIFICATION_UNSPECIFIED',
                breeam_certification_exception = 'EXCEPTION_UNSPECIFIED',
                eco_certifications = [
                    openapi_client.models.eco_certification.EcoCertification(
                        awarded = True, 
                        awarded_exception = 'EXCEPTION_UNSPECIFIED', 
                        eco_certificate = 'ECO_CERTIFICATE_UNSPECIFIED', )
                    ],
                leed_certification = 'LEED_CERTIFICATION_UNSPECIFIED',
                leed_certification_exception = 'EXCEPTION_UNSPECIFIED'
            )
        else:
            return SustainabilityCertifications(
        )
        """

    def testSustainabilityCertifications(self):
        """Test SustainabilityCertifications"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
