# coding: utf-8

"""
    My Business Lodging API

    The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.food_and_drink import FoodAndDrink

class TestFoodAndDrink(unittest.TestCase):
    """FoodAndDrink unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FoodAndDrink:
        """Test FoodAndDrink
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FoodAndDrink`
        """
        model = FoodAndDrink()
        if include_optional:
            return FoodAndDrink(
                bar = True,
                bar_exception = 'EXCEPTION_UNSPECIFIED',
                breakfast_available = True,
                breakfast_available_exception = 'EXCEPTION_UNSPECIFIED',
                breakfast_buffet = True,
                breakfast_buffet_exception = 'EXCEPTION_UNSPECIFIED',
                buffet = True,
                buffet_exception = 'EXCEPTION_UNSPECIFIED',
                dinner_buffet = True,
                dinner_buffet_exception = 'EXCEPTION_UNSPECIFIED',
                free_breakfast = True,
                free_breakfast_exception = 'EXCEPTION_UNSPECIFIED',
                restaurant = True,
                restaurant_exception = 'EXCEPTION_UNSPECIFIED',
                restaurants_count = 56,
                restaurants_count_exception = 'EXCEPTION_UNSPECIFIED',
                room_service = True,
                room_service_exception = 'EXCEPTION_UNSPECIFIED',
                table_service = True,
                table_service_exception = 'EXCEPTION_UNSPECIFIED',
                twenty_four_hour_room_service = True,
                twenty_four_hour_room_service_exception = 'EXCEPTION_UNSPECIFIED',
                vending_machine = True,
                vending_machine_exception = 'EXCEPTION_UNSPECIFIED'
            )
        else:
            return FoodAndDrink(
        )
        """

    def testFoodAndDrink(self):
        """Test FoodAndDrink"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
