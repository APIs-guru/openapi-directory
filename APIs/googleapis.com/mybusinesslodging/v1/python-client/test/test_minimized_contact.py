# coding: utf-8

"""
    My Business Lodging API

    The My Business Lodging API enables managing lodging business information on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.minimized_contact import MinimizedContact

class TestMinimizedContact(unittest.TestCase):
    """MinimizedContact unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MinimizedContact:
        """Test MinimizedContact
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MinimizedContact`
        """
        model = MinimizedContact()
        if include_optional:
            return MinimizedContact(
                contactless_checkin_checkout = True,
                contactless_checkin_checkout_exception = 'EXCEPTION_UNSPECIFIED',
                digital_guest_room_keys = True,
                digital_guest_room_keys_exception = 'EXCEPTION_UNSPECIFIED',
                housekeeping_scheduled_request_only = True,
                housekeeping_scheduled_request_only_exception = 'EXCEPTION_UNSPECIFIED',
                no_high_touch_items_common_areas = True,
                no_high_touch_items_common_areas_exception = 'EXCEPTION_UNSPECIFIED',
                no_high_touch_items_guest_rooms = True,
                no_high_touch_items_guest_rooms_exception = 'EXCEPTION_UNSPECIFIED',
                plastic_keycards_disinfected = True,
                plastic_keycards_disinfected_exception = 'EXCEPTION_UNSPECIFIED',
                room_bookings_buffer = True,
                room_bookings_buffer_exception = 'EXCEPTION_UNSPECIFIED'
            )
        else:
            return MinimizedContact(
        )
        """

    def testMinimizedContact(self):
        """Test MinimizedContact"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
