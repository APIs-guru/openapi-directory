# coding: utf-8

"""
    Poly API

    The Poly API provides read access to assets hosted on poly.google.com to all, and upload access to poly.google.com for whitelisted accounts. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_user_assets_response import ListUserAssetsResponse

class TestListUserAssetsResponse(unittest.TestCase):
    """ListUserAssetsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListUserAssetsResponse:
        """Test ListUserAssetsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListUserAssetsResponse`
        """
        model = ListUserAssetsResponse()
        if include_optional:
            return ListUserAssetsResponse(
                next_page_token = '',
                total_size = 56,
                user_assets = [
                    openapi_client.models.user_asset.UserAsset(
                        asset = openapi_client.models.asset.Asset(
                            author_name = '', 
                            create_time = '', 
                            description = '', 
                            display_name = '', 
                            formats = [
                                openapi_client.models.format.Format(
                                    format_complexity = openapi_client.models.format_complexity.FormatComplexity(
                                        lod_hint = 56, 
                                        triangle_count = '', ), 
                                    format_type = '', 
                                    resources = [
                                        openapi_client.models.file.File(
                                            content_type = '', 
                                            relative_path = '', 
                                            url = '', )
                                        ], 
                                    root = openapi_client.models.file.File(
                                        content_type = '', 
                                        relative_path = '', 
                                        url = '', ), )
                                ], 
                            is_curated = True, 
                            license = 'UNKNOWN', 
                            metadata = '', 
                            name = '', 
                            presentation_params = openapi_client.models.presentation_params.PresentationParams(
                                background_color = '', 
                                color_space = 'UNKNOWN', 
                                orienting_rotation = openapi_client.models.quaternion.Quaternion(
                                    w = 1.337, 
                                    x = 1.337, 
                                    y = 1.337, 
                                    z = 1.337, ), ), 
                            remix_info = openapi_client.models.remix_info.RemixInfo(
                                source_asset = [
                                    ''
                                    ], ), 
                            thumbnail = , 
                            update_time = '', 
                            visibility = 'VISIBILITY_UNSPECIFIED', ), )
                    ]
            )
        else:
            return ListUserAssetsResponse(
        )
        """

    def testListUserAssetsResponse(self):
        """Test ListUserAssetsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
