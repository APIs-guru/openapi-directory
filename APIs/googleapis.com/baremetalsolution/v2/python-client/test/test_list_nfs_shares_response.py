# coding: utf-8

"""
    Bare Metal Solution API

    Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_nfs_shares_response import ListNfsSharesResponse

class TestListNfsSharesResponse(unittest.TestCase):
    """ListNfsSharesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListNfsSharesResponse:
        """Test ListNfsSharesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListNfsSharesResponse`
        """
        model = ListNfsSharesResponse()
        if include_optional:
            return ListNfsSharesResponse(
                next_page_token = '',
                nfs_shares = [
                    openapi_client.models.nfs_share.NfsShare(
                        allowed_clients = [
                            openapi_client.models.allowed_client.AllowedClient(
                                allow_dev = True, 
                                allow_suid = True, 
                                allowed_clients_cidr = '', 
                                mount_permissions = 'MOUNT_PERMISSIONS_UNSPECIFIED', 
                                network = '', 
                                nfs_path = '', 
                                no_root_squash = True, 
                                share_ip = '', )
                            ], 
                        id = '', 
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        nfs_share_id = '', 
                        pod = '', 
                        requested_size_gib = '', 
                        state = 'STATE_UNSPECIFIED', 
                        storage_type = 'STORAGE_TYPE_UNSPECIFIED', 
                        volume = '', )
                    ],
                unreachable = [
                    ''
                    ]
            )
        else:
            return ListNfsSharesResponse(
        )
        """

    def testListNfsSharesResponse(self):
        """Test ListNfsSharesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
