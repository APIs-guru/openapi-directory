# coding: utf-8

"""
    Bare Metal Solution API

    Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.network import Network

class TestNetwork(unittest.TestCase):
    """Network unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Network:
        """Test Network
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Network`
        """
        model = Network()
        if include_optional:
            return Network(
                cidr = '',
                gateway_ip = '',
                id = '',
                ip_address = '',
                jumbo_frames_enabled = True,
                labels = {
                    'key' : ''
                    },
                mac_address = [
                    ''
                    ],
                mount_points = [
                    openapi_client.models.network_mount_point.NetworkMountPoint(
                        default_gateway = True, 
                        instance = '', 
                        ip_address = '', 
                        logical_interface = '', )
                    ],
                name = '',
                pod = '',
                reservations = [
                    openapi_client.models.network_address_reservation.NetworkAddressReservation(
                        end_address = '', 
                        note = '', 
                        start_address = '', )
                    ],
                services_cidr = '',
                state = 'STATE_UNSPECIFIED',
                type = 'TYPE_UNSPECIFIED',
                vlan_id = '',
                vrf = openapi_client.models.vrf.VRF(
                    name = '', 
                    qos_policy = openapi_client.models.qos_policy.QosPolicy(
                        bandwidth_gbps = 1.337, ), 
                    state = 'STATE_UNSPECIFIED', 
                    vlan_attachments = [
                        openapi_client.models.vlan_attachment.VlanAttachment(
                            id = '', 
                            interconnect_attachment = '', 
                            pairing_key = '', 
                            peer_ip = '', 
                            peer_vlan_id = '', 
                            router_ip = '', )
                        ], ),
                vrf_attachment = ''
            )
        else:
            return Network(
        )
        """

    def testNetwork(self):
        """Test Network"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
