# coding: utf-8

"""
    Bare Metal Solution API

    Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.volume_config import VolumeConfig

class TestVolumeConfig(unittest.TestCase):
    """VolumeConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VolumeConfig:
        """Test VolumeConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VolumeConfig`
        """
        model = VolumeConfig()
        if include_optional:
            return VolumeConfig(
                gcp_service = '',
                id = '',
                lun_ranges = [
                    openapi_client.models.lun_range.LunRange(
                        quantity = 56, 
                        size_gb = 56, )
                    ],
                machine_ids = [
                    ''
                    ],
                name = '',
                nfs_exports = [
                    openapi_client.models.nfs_export.NfsExport(
                        allow_dev = True, 
                        allow_suid = True, 
                        cidr = '', 
                        machine_id = '', 
                        network_id = '', 
                        no_root_squash = True, 
                        permissions = 'PERMISSIONS_UNSPECIFIED', )
                    ],
                performance_tier = 'VOLUME_PERFORMANCE_TIER_UNSPECIFIED',
                protocol = 'PROTOCOL_UNSPECIFIED',
                size_gb = 56,
                snapshots_enabled = True,
                type = 'TYPE_UNSPECIFIED',
                user_note = ''
            )
        else:
            return VolumeConfig(
        )
        """

    def testVolumeConfig(self):
        """Test VolumeConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
