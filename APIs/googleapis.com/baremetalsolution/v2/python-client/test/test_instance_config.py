# coding: utf-8

"""
    Bare Metal Solution API

    Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.instance_config import InstanceConfig

class TestInstanceConfig(unittest.TestCase):
    """InstanceConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InstanceConfig:
        """Test InstanceConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InstanceConfig`
        """
        model = InstanceConfig()
        if include_optional:
            return InstanceConfig(
                account_networks_enabled = True,
                client_network = openapi_client.models.network_address.NetworkAddress(
                    address = '', 
                    existing_network_id = '', 
                    network_id = '', ),
                hyperthreading = True,
                id = '',
                instance_type = '',
                kms_key_version = '',
                logical_interfaces = [
                    openapi_client.models.google_cloud_baremetalsolution_v2_logical_interface.GoogleCloudBaremetalsolutionV2LogicalInterface(
                        interface_index = 56, 
                        logical_network_interfaces = [
                            openapi_client.models.logical_network_interface.LogicalNetworkInterface(
                                default_gateway = True, 
                                id = '', 
                                ip_address = '', 
                                network = '', 
                                network_type = 'TYPE_UNSPECIFIED', )
                            ], 
                        name = '', )
                    ],
                name = '',
                network_config = 'NETWORKCONFIG_UNSPECIFIED',
                network_template = '',
                os_image = '',
                private_network = openapi_client.models.network_address.NetworkAddress(
                    address = '', 
                    existing_network_id = '', 
                    network_id = '', ),
                ssh_key_names = [
                    ''
                    ],
                user_note = ''
            )
        else:
            return InstanceConfig(
        )
        """

    def testInstanceConfig(self):
        """Test InstanceConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
