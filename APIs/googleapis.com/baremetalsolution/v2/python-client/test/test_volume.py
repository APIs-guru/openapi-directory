# coding: utf-8

"""
    Bare Metal Solution API

    Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.volume import Volume

class TestVolume(unittest.TestCase):
    """Volume unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Volume:
        """Test Volume
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Volume`
        """
        model = Volume()
        if include_optional:
            return Volume(
                attached = True,
                auto_grown_size_gib = '',
                boot_volume = True,
                current_size_gib = '',
                emergency_size_gib = '',
                expire_time = '',
                id = '',
                instances = [
                    ''
                    ],
                labels = {
                    'key' : ''
                    },
                max_size_gib = '',
                name = '',
                notes = '',
                originally_requested_size_gib = '',
                performance_tier = 'VOLUME_PERFORMANCE_TIER_UNSPECIFIED',
                pod = '',
                protocol = 'PROTOCOL_UNSPECIFIED',
                remaining_space_gib = '',
                requested_size_gib = '',
                snapshot_auto_delete_behavior = 'SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED',
                snapshot_enabled = True,
                snapshot_reservation_detail = openapi_client.models.snapshot_reservation_detail.SnapshotReservationDetail(
                    reserved_space_gib = '', 
                    reserved_space_percent = 56, 
                    reserved_space_remaining_gib = '', 
                    reserved_space_used_percent = 56, ),
                state = 'STATE_UNSPECIFIED',
                storage_type = 'STORAGE_TYPE_UNSPECIFIED',
                workload_profile = 'WORKLOAD_PROFILE_UNSPECIFIED'
            )
        else:
            return Volume(
        )
        """

    def testVolume(self):
        """Test Volume"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
