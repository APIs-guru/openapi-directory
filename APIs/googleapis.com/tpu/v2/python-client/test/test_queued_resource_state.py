# coding: utf-8

"""
    Cloud TPU API

    TPU API provides customers with access to Google TPU technology.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.queued_resource_state import QueuedResourceState

class TestQueuedResourceState(unittest.TestCase):
    """QueuedResourceState unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> QueuedResourceState:
        """Test QueuedResourceState
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `QueuedResourceState`
        """
        model = QueuedResourceState()
        if include_optional:
            return QueuedResourceState(
                accepted_data = openapi_client.models.accepted_data.AcceptedData(),
                active_data = openapi_client.models.active_data.ActiveData(),
                creating_data = openapi_client.models.creating_data.CreatingData(),
                deleting_data = openapi_client.models.deleting_data.DeletingData(),
                failed_data = openapi_client.models.failed_data.FailedData(
                    error = openapi_client.models.status.Status(
                        code = 56, 
                        details = [
                            {
                                'key' : null
                                }
                            ], 
                        message = '', ), ),
                provisioning_data = openapi_client.models.provisioning_data.ProvisioningData(),
                state = 'STATE_UNSPECIFIED',
                state_initiator = 'STATE_INITIATOR_UNSPECIFIED',
                suspended_data = openapi_client.models.suspended_data.SuspendedData(),
                suspending_data = openapi_client.models.suspending_data.SuspendingData()
            )
        else:
            return QueuedResourceState(
        )
        """

    def testQueuedResourceState(self):
        """Test QueuedResourceState"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
