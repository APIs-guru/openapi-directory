# coding: utf-8

"""
    Cloud TPU API

    TPU API provides customers with access to Google TPU technology.

    The version of the OpenAPI document: v2alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_reservations_response import ListReservationsResponse

class TestListReservationsResponse(unittest.TestCase):
    """ListReservationsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListReservationsResponse:
        """Test ListReservationsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListReservationsResponse`
        """
        model = ListReservationsResponse()
        if include_optional:
            return ListReservationsResponse(
                next_page_token = '',
                reservations = [
                    openapi_client.models.reservation.Reservation(
                        name = '', 
                        standard = openapi_client.models.standard.Standard(
                            capacity_units = 'CAPACITY_UNITS_UNSPECIFIED', 
                            interval = openapi_client.models.interval.Interval(
                                end_time = '', 
                                start_time = '', ), 
                            resource_type = '', 
                            size = 56, 
                            usage = openapi_client.models.usage.Usage(
                                total = '', ), ), )
                    ]
            )
        else:
            return ListReservationsResponse(
        )
        """

    def testListReservationsResponse(self):
        """Test ListReservationsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
