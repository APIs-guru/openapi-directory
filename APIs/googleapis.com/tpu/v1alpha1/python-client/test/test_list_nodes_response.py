# coding: utf-8

"""
    Cloud TPU API

    TPU API provides customers with access to Google TPU technology.

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_nodes_response import ListNodesResponse

class TestListNodesResponse(unittest.TestCase):
    """ListNodesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListNodesResponse:
        """Test ListNodesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListNodesResponse`
        """
        model = ListNodesResponse()
        if include_optional:
            return ListNodesResponse(
                next_page_token = '',
                nodes = [
                    openapi_client.models.node.Node(
                        accelerator_type = '', 
                        api_version = 'API_VERSION_UNSPECIFIED', 
                        cidr_block = '', 
                        create_time = '', 
                        description = '', 
                        health = 'HEALTH_UNSPECIFIED', 
                        health_description = '', 
                        ip_address = '', 
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        network = '', 
                        network_endpoints = [
                            openapi_client.models.network_endpoint.NetworkEndpoint(
                                ip_address = '', 
                                port = 56, )
                            ], 
                        port = '', 
                        scheduling_config = openapi_client.models.scheduling_config.SchedulingConfig(
                            preemptible = True, 
                            reserved = True, ), 
                        service_account = '', 
                        state = 'STATE_UNSPECIFIED', 
                        symptoms = [
                            openapi_client.models.symptom.Symptom(
                                create_time = '', 
                                details = '', 
                                symptom_type = 'SYMPTOM_TYPE_UNSPECIFIED', 
                                worker_id = '', )
                            ], 
                        tensorflow_version = '', 
                        use_service_networking = True, )
                    ],
                unreachable = [
                    ''
                    ]
            )
        else:
            return ListNodesResponse(
        )
        """

    def testListNodesResponse(self):
        """Test ListNodesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
