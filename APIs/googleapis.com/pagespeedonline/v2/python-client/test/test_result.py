# coding: utf-8

"""
    PageSpeed Insights

    Analyzes the performance of a web page and provides tailored suggestions to make that page faster.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.result import Result

class TestResult(unittest.TestCase):
    """Result unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Result:
        """Test Result
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Result`
        """
        model = Result()
        if include_optional:
            return Result(
                captcha_result = '',
                formatted_results = openapi_client.models.result_formatted_results.Result_formattedResults(
                    locale = '', 
                    rule_results = {
                        'key' : openapi_client.models.result_formatted_results_rule_results_value.Result_formattedResults_ruleResults_value(
                            groups = [
                                ''
                                ], 
                            localized_rule_name = '', 
                            rule_impact = 1.337, 
                            summary = openapi_client.models.pagespeed_api_format_string_v2.PagespeedApiFormatStringV2(
                                args = [
                                    openapi_client.models.pagespeed_api_format_string_v2_args_inner.PagespeedApiFormatStringV2_args_inner(
                                        key = '', 
                                        rects = [
                                            openapi_client.models.pagespeed_api_format_string_v2_args_inner_rects_inner.PagespeedApiFormatStringV2_args_inner_rects_inner(
                                                height = 56, 
                                                left = 56, 
                                                top = 56, 
                                                width = 56, )
                                            ], 
                                        secondary_rects = [
                                            openapi_client.models.pagespeed_api_format_string_v2_args_inner_rects_inner.PagespeedApiFormatStringV2_args_inner_rects_inner(
                                                height = 56, 
                                                left = 56, 
                                                top = 56, 
                                                width = 56, )
                                            ], 
                                        type = '', 
                                        value = '', )
                                    ], 
                                format = '', ), 
                            url_blocks = [
                                openapi_client.models.result_formatted_results_rule_results_value_url_blocks_inner.Result_formattedResults_ruleResults_value_urlBlocks_inner(
                                    header = openapi_client.models.pagespeed_api_format_string_v2.PagespeedApiFormatStringV2(
                                        format = '', ), 
                                    urls = [
                                        openapi_client.models.result_formatted_results_rule_results_value_url_blocks_inner_urls_inner.Result_formattedResults_ruleResults_value_urlBlocks_inner_urls_inner(
                                            details = [
                                                
                                                ], 
                                            result = , )
                                        ], )
                                ], )
                        }, ),
                id = '',
                invalid_rules = [
                    ''
                    ],
                kind = 'pagespeedonline#result',
                page_stats = openapi_client.models.result_page_stats.Result_pageStats(
                    css_response_bytes = '', 
                    flash_response_bytes = '', 
                    html_response_bytes = '', 
                    image_response_bytes = '', 
                    javascript_response_bytes = '', 
                    number_css_resources = 56, 
                    number_hosts = 56, 
                    number_js_resources = 56, 
                    number_resources = 56, 
                    number_static_resources = 56, 
                    other_response_bytes = '', 
                    text_response_bytes = '', 
                    total_request_bytes = '', ),
                response_code = 56,
                rule_groups = {
                    'key' : openapi_client.models.result_rule_groups_value.Result_ruleGroups_value(
                        score = 56, )
                    },
                screenshot = openapi_client.models.pagespeed_api_image_v2.PagespeedApiImageV2(
                    data = 'YQ==', 
                    height = 56, 
                    key = '', 
                    mime_type = '', 
                    page_rect = openapi_client.models.pagespeed_api_image_v2_page_rect.PagespeedApiImageV2_page_rect(
                        height = 56, 
                        left = 56, 
                        top = 56, 
                        width = 56, ), 
                    width = 56, ),
                title = '',
                version = openapi_client.models.result_version.Result_version(
                    major = 56, 
                    minor = 56, )
            )
        else:
            return Result(
        )
        """

    def testResult(self):
        """Test Result"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
