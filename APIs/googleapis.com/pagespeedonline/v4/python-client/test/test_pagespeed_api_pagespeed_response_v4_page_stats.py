# coding: utf-8

"""
    PageSpeed Insights

    Analyzes the performance of a web page and provides tailored suggestions to make that page faster.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pagespeed_api_pagespeed_response_v4_page_stats import PagespeedApiPagespeedResponseV4PageStats

class TestPagespeedApiPagespeedResponseV4PageStats(unittest.TestCase):
    """PagespeedApiPagespeedResponseV4PageStats unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PagespeedApiPagespeedResponseV4PageStats:
        """Test PagespeedApiPagespeedResponseV4PageStats
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PagespeedApiPagespeedResponseV4PageStats`
        """
        model = PagespeedApiPagespeedResponseV4PageStats()
        if include_optional:
            return PagespeedApiPagespeedResponseV4PageStats(
                cms = '',
                css_response_bytes = '',
                flash_response_bytes = '',
                html_response_bytes = '',
                image_response_bytes = '',
                javascript_response_bytes = '',
                num_render_blocking_round_trips = 56,
                num_total_round_trips = 56,
                number_css_resources = 56,
                number_hosts = 56,
                number_js_resources = 56,
                number_resources = 56,
                number_roboted_resources = 56,
                number_static_resources = 56,
                number_transient_fetch_failure_resources = 56,
                other_response_bytes = '',
                over_the_wire_response_bytes = '',
                roboted_urls = [
                    ''
                    ],
                text_response_bytes = '',
                total_request_bytes = '',
                transient_fetch_failure_urls = [
                    ''
                    ]
            )
        else:
            return PagespeedApiPagespeedResponseV4PageStats(
        )
        """

    def testPagespeedApiPagespeedResponseV4PageStats(self):
        """Test PagespeedApiPagespeedResponseV4PageStats"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
