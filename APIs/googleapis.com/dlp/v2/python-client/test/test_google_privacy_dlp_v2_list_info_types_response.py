# coding: utf-8

"""
    Sensitive Data Protection (DLP)

    Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_privacy_dlp_v2_list_info_types_response import GooglePrivacyDlpV2ListInfoTypesResponse

class TestGooglePrivacyDlpV2ListInfoTypesResponse(unittest.TestCase):
    """GooglePrivacyDlpV2ListInfoTypesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GooglePrivacyDlpV2ListInfoTypesResponse:
        """Test GooglePrivacyDlpV2ListInfoTypesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GooglePrivacyDlpV2ListInfoTypesResponse`
        """
        model = GooglePrivacyDlpV2ListInfoTypesResponse()
        if include_optional:
            return GooglePrivacyDlpV2ListInfoTypesResponse(
                info_types = [
                    openapi_client.models.google_privacy_dlp_v2_info_type_description.GooglePrivacyDlpV2InfoTypeDescription(
                        categories = [
                            openapi_client.models.google_privacy_dlp_v2_info_type_category.GooglePrivacyDlpV2InfoTypeCategory(
                                industry_category = 'INDUSTRY_UNSPECIFIED', 
                                location_category = 'LOCATION_UNSPECIFIED', 
                                type_category = 'TYPE_UNSPECIFIED', )
                            ], 
                        description = '', 
                        display_name = '', 
                        name = '', 
                        sensitivity_score = openapi_client.models.google_privacy_dlp_v2_sensitivity_score.GooglePrivacyDlpV2SensitivityScore(
                            score = 'SENSITIVITY_SCORE_UNSPECIFIED', ), 
                        supported_by = [
                            'ENUM_TYPE_UNSPECIFIED'
                            ], 
                        versions = [
                            openapi_client.models.google_privacy_dlp_v2_version_description.GooglePrivacyDlpV2VersionDescription(
                                description = '', 
                                version = '', )
                            ], )
                    ]
            )
        else:
            return GooglePrivacyDlpV2ListInfoTypesResponse(
        )
        """

    def testGooglePrivacyDlpV2ListInfoTypesResponse(self):
        """Test GooglePrivacyDlpV2ListInfoTypesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
