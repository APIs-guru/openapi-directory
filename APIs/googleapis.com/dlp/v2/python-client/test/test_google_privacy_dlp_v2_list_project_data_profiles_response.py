# coding: utf-8

"""
    Sensitive Data Protection (DLP)

    Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_privacy_dlp_v2_list_project_data_profiles_response import GooglePrivacyDlpV2ListProjectDataProfilesResponse

class TestGooglePrivacyDlpV2ListProjectDataProfilesResponse(unittest.TestCase):
    """GooglePrivacyDlpV2ListProjectDataProfilesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GooglePrivacyDlpV2ListProjectDataProfilesResponse:
        """Test GooglePrivacyDlpV2ListProjectDataProfilesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GooglePrivacyDlpV2ListProjectDataProfilesResponse`
        """
        model = GooglePrivacyDlpV2ListProjectDataProfilesResponse()
        if include_optional:
            return GooglePrivacyDlpV2ListProjectDataProfilesResponse(
                next_page_token = '',
                project_data_profiles = [
                    openapi_client.models.google_privacy_dlp_v2_project_data_profile.GooglePrivacyDlpV2ProjectDataProfile(
                        data_risk_level = openapi_client.models.google_privacy_dlp_v2_data_risk_level.GooglePrivacyDlpV2DataRiskLevel(
                            score = 'RISK_SCORE_UNSPECIFIED', ), 
                        name = '', 
                        profile_last_generated = '', 
                        profile_status = openapi_client.models.google_privacy_dlp_v2_profile_status.GooglePrivacyDlpV2ProfileStatus(
                            status = openapi_client.models.google_rpc_status.GoogleRpcStatus(
                                code = 56, 
                                details = [
                                    {
                                        'key' : null
                                        }
                                    ], 
                                message = '', ), 
                            timestamp = '', ), 
                        project_id = '', 
                        sensitivity_score = openapi_client.models.google_privacy_dlp_v2_sensitivity_score.GooglePrivacyDlpV2SensitivityScore(
                            score = 'SENSITIVITY_SCORE_UNSPECIFIED', ), )
                    ]
            )
        else:
            return GooglePrivacyDlpV2ListProjectDataProfilesResponse(
        )
        """

    def testGooglePrivacyDlpV2ListProjectDataProfilesResponse(self):
        """Test GooglePrivacyDlpV2ListProjectDataProfilesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
