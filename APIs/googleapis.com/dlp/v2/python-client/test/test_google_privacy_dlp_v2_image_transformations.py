# coding: utf-8

"""
    Sensitive Data Protection (DLP)

    Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_privacy_dlp_v2_image_transformations import GooglePrivacyDlpV2ImageTransformations

class TestGooglePrivacyDlpV2ImageTransformations(unittest.TestCase):
    """GooglePrivacyDlpV2ImageTransformations unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GooglePrivacyDlpV2ImageTransformations:
        """Test GooglePrivacyDlpV2ImageTransformations
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GooglePrivacyDlpV2ImageTransformations`
        """
        model = GooglePrivacyDlpV2ImageTransformations()
        if include_optional:
            return GooglePrivacyDlpV2ImageTransformations(
                transforms = [
                    openapi_client.models.google_privacy_dlp_v2_image_transformation.GooglePrivacyDlpV2ImageTransformation(
                        all_info_types = openapi_client.models.google_privacy_dlp_v2_all_info_types.GooglePrivacyDlpV2AllInfoTypes(), 
                        all_text = openapi_client.models.google_privacy_dlp_v2_all_text.GooglePrivacyDlpV2AllText(), 
                        redaction_color = openapi_client.models.google_privacy_dlp_v2_color.GooglePrivacyDlpV2Color(
                            blue = 1.337, 
                            green = 1.337, 
                            red = 1.337, ), 
                        selected_info_types = openapi_client.models.google_privacy_dlp_v2_selected_info_types.GooglePrivacyDlpV2SelectedInfoTypes(
                            info_types = [
                                openapi_client.models.google_privacy_dlp_v2_info_type.GooglePrivacyDlpV2InfoType(
                                    name = '', 
                                    sensitivity_score = openapi_client.models.google_privacy_dlp_v2_sensitivity_score.GooglePrivacyDlpV2SensitivityScore(
                                        score = 'SENSITIVITY_SCORE_UNSPECIFIED', ), 
                                    version = '', )
                                ], ), )
                    ]
            )
        else:
            return GooglePrivacyDlpV2ImageTransformations(
        )
        """

    def testGooglePrivacyDlpV2ImageTransformations(self):
        """Test GooglePrivacyDlpV2ImageTransformations"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
