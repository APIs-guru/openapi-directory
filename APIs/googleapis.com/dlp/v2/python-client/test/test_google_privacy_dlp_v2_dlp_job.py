# coding: utf-8

"""
    Sensitive Data Protection (DLP)

    Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_privacy_dlp_v2_dlp_job import GooglePrivacyDlpV2DlpJob

class TestGooglePrivacyDlpV2DlpJob(unittest.TestCase):
    """GooglePrivacyDlpV2DlpJob unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GooglePrivacyDlpV2DlpJob:
        """Test GooglePrivacyDlpV2DlpJob
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GooglePrivacyDlpV2DlpJob`
        """
        model = GooglePrivacyDlpV2DlpJob()
        if include_optional:
            return GooglePrivacyDlpV2DlpJob(
                action_details = [
                    openapi_client.models.google_privacy_dlp_v2_action_details.GooglePrivacyDlpV2ActionDetails(
                        deidentify_details = openapi_client.models.google_privacy_dlp_v2_deidentify_data_source_details.GooglePrivacyDlpV2DeidentifyDataSourceDetails(
                            deidentify_stats = openapi_client.models.google_privacy_dlp_v2_deidentify_data_source_stats.GooglePrivacyDlpV2DeidentifyDataSourceStats(
                                transformation_count = '', 
                                transformation_error_count = '', 
                                transformed_bytes = '', ), 
                            requested_options = openapi_client.models.google_privacy_dlp_v2_requested_deidentify_options.GooglePrivacyDlpV2RequestedDeidentifyOptions(
                                snapshot_deidentify_template = openapi_client.models.google_privacy_dlp_v2_deidentify_template.GooglePrivacyDlpV2DeidentifyTemplate(
                                    create_time = '', 
                                    deidentify_config = openapi_client.models.google_privacy_dlp_v2_deidentify_config.GooglePrivacyDlpV2DeidentifyConfig(
                                        image_transformations = openapi_client.models.google_privacy_dlp_v2_image_transformations.GooglePrivacyDlpV2ImageTransformations(
                                            transforms = [
                                                openapi_client.models.google_privacy_dlp_v2_image_transformation.GooglePrivacyDlpV2ImageTransformation(
                                                    all_info_types = openapi_client.models.google_privacy_dlp_v2_all_info_types.GooglePrivacyDlpV2AllInfoTypes(), 
                                                    all_text = openapi_client.models.google_privacy_dlp_v2_all_text.GooglePrivacyDlpV2AllText(), 
                                                    redaction_color = openapi_client.models.google_privacy_dlp_v2_color.GooglePrivacyDlpV2Color(
                                                        blue = 1.337, 
                                                        green = 1.337, 
                                                        red = 1.337, ), 
                                                    selected_info_types = openapi_client.models.google_privacy_dlp_v2_selected_info_types.GooglePrivacyDlpV2SelectedInfoTypes(
                                                        info_types = [
                                                            openapi_client.models.google_privacy_dlp_v2_info_type.GooglePrivacyDlpV2InfoType(
                                                                name = '', 
                                                                sensitivity_score = openapi_client.models.google_privacy_dlp_v2_sensitivity_score.GooglePrivacyDlpV2SensitivityScore(
                                                                    score = 'SENSITIVITY_SCORE_UNSPECIFIED', ), 
                                                                version = '', )
                                                            ], ), )
                                                ], ), 
                                        info_type_transformations = openapi_client.models.google_privacy_dlp_v2_info_type_transformations.GooglePrivacyDlpV2InfoTypeTransformations(
                                            transformations = [
                                                openapi_client.models.google_privacy_dlp_v2_info_type_transformation.GooglePrivacyDlpV2InfoTypeTransformation(
                                                    primitive_transformation = openapi_client.models.google_privacy_dlp_v2_primitive_transformation.GooglePrivacyDlpV2PrimitiveTransformation(
                                                        bucketing_config = openapi_client.models.google_privacy_dlp_v2_bucketing_config.GooglePrivacyDlpV2BucketingConfig(
                                                            buckets = [
                                                                openapi_client.models.google_privacy_dlp_v2_bucket.GooglePrivacyDlpV2Bucket(
                                                                    max = openapi_client.models.google_privacy_dlp_v2_value.GooglePrivacyDlpV2Value(
                                                                        boolean_value = True, 
                                                                        date_value = openapi_client.models.google_type_date.GoogleTypeDate(
                                                                            day = 56, 
                                                                            month = 56, 
                                                                            year = 56, ), 
                                                                        day_of_week_value = 'DAY_OF_WEEK_UNSPECIFIED', 
                                                                        float_value = 1.337, 
                                                                        integer_value = '', 
                                                                        string_value = '', 
                                                                        time_value = openapi_client.models.google_type_time_of_day.GoogleTypeTimeOfDay(
                                                                            hours = 56, 
                                                                            minutes = 56, 
                                                                            nanos = 56, 
                                                                            seconds = 56, ), 
                                                                        timestamp_value = '', ), 
                                                                    min = openapi_client.models.google_privacy_dlp_v2_value.GooglePrivacyDlpV2Value(
                                                                        boolean_value = True, 
                                                                        day_of_week_value = 'DAY_OF_WEEK_UNSPECIFIED', 
                                                                        float_value = 1.337, 
                                                                        integer_value = '', 
                                                                        string_value = '', 
                                                                        timestamp_value = '', ), 
                                                                    replacement_value = , )
                                                                ], ), 
                                                        character_mask_config = openapi_client.models.google_privacy_dlp_v2_character_mask_config.GooglePrivacyDlpV2CharacterMaskConfig(
                                                            characters_to_ignore = [
                                                                openapi_client.models.google_privacy_dlp_v2_chars_to_ignore.GooglePrivacyDlpV2CharsToIgnore(
                                                                    characters_to_skip = '', 
                                                                    common_characters_to_ignore = 'COMMON_CHARS_TO_IGNORE_UNSPECIFIED', )
                                                                ], 
                                                            masking_character = '', 
                                                            number_to_mask = 56, 
                                                            reverse_order = True, ), 
                                                        crypto_deterministic_config = openapi_client.models.google_privacy_dlp_v2_crypto_deterministic_config.GooglePrivacyDlpV2CryptoDeterministicConfig(
                                                            context = openapi_client.models.google_privacy_dlp_v2_field_id.GooglePrivacyDlpV2FieldId(
                                                                name = '', ), 
                                                            crypto_key = openapi_client.models.google_privacy_dlp_v2_crypto_key.GooglePrivacyDlpV2CryptoKey(
                                                                kms_wrapped = openapi_client.models.google_privacy_dlp_v2_kms_wrapped_crypto_key.GooglePrivacyDlpV2KmsWrappedCryptoKey(
                                                                    crypto_key_name = '', 
                                                                    wrapped_key = 'YQ==', ), 
                                                                transient = openapi_client.models.google_privacy_dlp_v2_transient_crypto_key.GooglePrivacyDlpV2TransientCryptoKey(
                                                                    name = '', ), 
                                                                unwrapped = openapi_client.models.google_privacy_dlp_v2_unwrapped_crypto_key.GooglePrivacyDlpV2UnwrappedCryptoKey(
                                                                    key = 'YQ==', ), ), 
                                                            surrogate_info_type = openapi_client.models.google_privacy_dlp_v2_info_type.GooglePrivacyDlpV2InfoType(
                                                                name = '', 
                                                                version = '', ), ), 
                                                        crypto_hash_config = openapi_client.models.google_privacy_dlp_v2_crypto_hash_config.GooglePrivacyDlpV2CryptoHashConfig(), 
                                                        crypto_replace_ffx_fpe_config = openapi_client.models.google_privacy_dlp_v2_crypto_replace_ffx_fpe_config.GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig(
                                                            common_alphabet = 'FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED', 
                                                            custom_alphabet = '', 
                                                            radix = 56, ), 
                                                        date_shift_config = openapi_client.models.google_privacy_dlp_v2_date_shift_config.GooglePrivacyDlpV2DateShiftConfig(
                                                            lower_bound_days = 56, 
                                                            upper_bound_days = 56, ), 
                                                        fixed_size_bucketing_config = openapi_client.models.google_privacy_dlp_v2_fixed_size_bucketing_config.GooglePrivacyDlpV2FixedSizeBucketingConfig(
                                                            bucket_size = 1.337, 
                                                            lower_bound = , 
                                                            upper_bound = , ), 
                                                        redact_config = openapi_client.models.google_privacy_dlp_v2_redact_config.GooglePrivacyDlpV2RedactConfig(), 
                                                        replace_config = openapi_client.models.google_privacy_dlp_v2_replace_value_config.GooglePrivacyDlpV2ReplaceValueConfig(
                                                            new_value = , ), 
                                                        replace_dictionary_config = openapi_client.models.google_privacy_dlp_v2_replace_dictionary_config.GooglePrivacyDlpV2ReplaceDictionaryConfig(
                                                            word_list = openapi_client.models.google_privacy_dlp_v2_word_list.GooglePrivacyDlpV2WordList(
                                                                words = [
                                                                    ''
                                                                    ], ), ), 
                                                        replace_with_info_type_config = openapi_client.models.google_privacy_dlp_v2_replace_with_info_type_config.GooglePrivacyDlpV2ReplaceWithInfoTypeConfig(), 
                                                        time_part_config = openapi_client.models.google_privacy_dlp_v2_time_part_config.GooglePrivacyDlpV2TimePartConfig(
                                                            part_to_extract = 'TIME_PART_UNSPECIFIED', ), ), )
                                                ], ), 
                                        record_transformations = openapi_client.models.google_privacy_dlp_v2_record_transformations.GooglePrivacyDlpV2RecordTransformations(
                                            field_transformations = [
                                                openapi_client.models.google_privacy_dlp_v2_field_transformation.GooglePrivacyDlpV2FieldTransformation(
                                                    condition = openapi_client.models.google_privacy_dlp_v2_record_condition.GooglePrivacyDlpV2RecordCondition(
                                                        expressions = openapi_client.models.google_privacy_dlp_v2_expressions.GooglePrivacyDlpV2Expressions(
                                                            conditions = openapi_client.models.google_privacy_dlp_v2_conditions.GooglePrivacyDlpV2Conditions(), 
                                                            logical_operator = 'LOGICAL_OPERATOR_UNSPECIFIED', ), ), 
                                                    fields = [
                                                        openapi_client.models.google_privacy_dlp_v2_field_id.GooglePrivacyDlpV2FieldId(
                                                            name = '', )
                                                        ], )
                                                ], 
                                            record_suppressions = [
                                                openapi_client.models.google_privacy_dlp_v2_record_suppression.GooglePrivacyDlpV2RecordSuppression()
                                                ], ), 
                                        transformation_error_handling = openapi_client.models.google_privacy_dlp_v2_transformation_error_handling.GooglePrivacyDlpV2TransformationErrorHandling(
                                            leave_untransformed = openapi_client.models.google_privacy_dlp_v2_leave_untransformed.GooglePrivacyDlpV2LeaveUntransformed(), 
                                            throw_error = openapi_client.models.google_privacy_dlp_v2_throw_error.GooglePrivacyDlpV2ThrowError(), ), ), 
                                    description = '', 
                                    display_name = '', 
                                    name = '', 
                                    update_time = '', ), 
                                snapshot_image_redact_template = openapi_client.models.google_privacy_dlp_v2_deidentify_template.GooglePrivacyDlpV2DeidentifyTemplate(
                                    create_time = '', 
                                    description = '', 
                                    display_name = '', 
                                    name = '', 
                                    update_time = '', ), 
                                snapshot_structured_deidentify_template = , ), ), )
                    ],
                create_time = '',
                end_time = '',
                errors = [
                    openapi_client.models.google_privacy_dlp_v2_error.GooglePrivacyDlpV2Error(
                        details = openapi_client.models.google_rpc_status.GoogleRpcStatus(
                            code = 56, 
                            message = '', ), 
                        timestamps = [
                            ''
                            ], )
                    ],
                inspect_details = openapi_client.models.google_privacy_dlp_v2_inspect_data_source_details.GooglePrivacyDlpV2InspectDataSourceDetails(
                    requested_options = openapi_client.models.google_privacy_dlp_v2_requested_options.GooglePrivacyDlpV2RequestedOptions(
                        job_config = openapi_client.models.google_privacy_dlp_v2_inspect_job_config.GooglePrivacyDlpV2InspectJobConfig(
                            actions = [
                                openapi_client.models.google_privacy_dlp_v2_action.GooglePrivacyDlpV2Action(
                                    deidentify = openapi_client.models.google_privacy_dlp_v2_deidentify.GooglePrivacyDlpV2Deidentify(
                                        cloud_storage_output = '', 
                                        file_types_to_transform = [
                                            'FILE_TYPE_UNSPECIFIED'
                                            ], 
                                        transformation_config = openapi_client.models.google_privacy_dlp_v2_transformation_config.GooglePrivacyDlpV2TransformationConfig(
                                            deidentify_template = '', 
                                            image_redact_template = '', 
                                            structured_deidentify_template = '', ), 
                                        transformation_details_storage_config = openapi_client.models.google_privacy_dlp_v2_transformation_details_storage_config.GooglePrivacyDlpV2TransformationDetailsStorageConfig(
                                            table = openapi_client.models.google_privacy_dlp_v2_big_query_table.GooglePrivacyDlpV2BigQueryTable(
                                                dataset_id = '', 
                                                project_id = '', 
                                                table_id = '', ), ), ), 
                                    job_notification_emails = openapi_client.models.job_notification_emails.jobNotificationEmails(), 
                                    pub_sub = openapi_client.models.google_privacy_dlp_v2_publish_to_pub_sub.GooglePrivacyDlpV2PublishToPubSub(
                                        topic = '', ), 
                                    publish_findings_to_cloud_data_catalog = openapi_client.models.publish_findings_to_cloud_data_catalog.publishFindingsToCloudDataCatalog(), 
                                    publish_summary_to_cscc = openapi_client.models.publish_summary_to_cscc.publishSummaryToCscc(), 
                                    publish_to_stackdriver = openapi_client.models.publish_to_stackdriver.publishToStackdriver(), 
                                    save_findings = openapi_client.models.google_privacy_dlp_v2_save_findings.GooglePrivacyDlpV2SaveFindings(
                                        output_config = openapi_client.models.google_privacy_dlp_v2_output_storage_config.GooglePrivacyDlpV2OutputStorageConfig(
                                            output_schema = 'OUTPUT_SCHEMA_UNSPECIFIED', ), ), )
                                ], 
                            inspect_config = openapi_client.models.google_privacy_dlp_v2_inspect_config.GooglePrivacyDlpV2InspectConfig(
                                content_options = [
                                    'CONTENT_UNSPECIFIED'
                                    ], 
                                custom_info_types = [
                                    openapi_client.models.google_privacy_dlp_v2_custom_info_type.GooglePrivacyDlpV2CustomInfoType(
                                        detection_rules = [
                                            openapi_client.models.google_privacy_dlp_v2_detection_rule.GooglePrivacyDlpV2DetectionRule(
                                                hotword_rule = openapi_client.models.google_privacy_dlp_v2_hotword_rule.GooglePrivacyDlpV2HotwordRule(
                                                    hotword_regex = openapi_client.models.google_privacy_dlp_v2_regex.GooglePrivacyDlpV2Regex(
                                                        group_indexes = [
                                                            56
                                                            ], 
                                                        pattern = '', ), 
                                                    likelihood_adjustment = openapi_client.models.google_privacy_dlp_v2_likelihood_adjustment.GooglePrivacyDlpV2LikelihoodAdjustment(
                                                        fixed_likelihood = 'LIKELIHOOD_UNSPECIFIED', 
                                                        relative_likelihood = 56, ), 
                                                    proximity = openapi_client.models.google_privacy_dlp_v2_proximity.GooglePrivacyDlpV2Proximity(
                                                        window_after = 56, 
                                                        window_before = 56, ), ), )
                                            ], 
                                        dictionary = openapi_client.models.google_privacy_dlp_v2_dictionary.GooglePrivacyDlpV2Dictionary(
                                            cloud_storage_path = openapi_client.models.google_privacy_dlp_v2_cloud_storage_path.GooglePrivacyDlpV2CloudStoragePath(
                                                path = '', ), 
                                            word_list = openapi_client.models.google_privacy_dlp_v2_word_list.GooglePrivacyDlpV2WordList(
                                                words = [
                                                    ''
                                                    ], ), ), 
                                        exclusion_type = 'EXCLUSION_TYPE_UNSPECIFIED', 
                                        info_type = openapi_client.models.google_privacy_dlp_v2_info_type.GooglePrivacyDlpV2InfoType(
                                            name = '', 
                                            sensitivity_score = openapi_client.models.google_privacy_dlp_v2_sensitivity_score.GooglePrivacyDlpV2SensitivityScore(
                                                score = 'SENSITIVITY_SCORE_UNSPECIFIED', ), 
                                            version = '', ), 
                                        likelihood = 'LIKELIHOOD_UNSPECIFIED', 
                                        regex = openapi_client.models.google_privacy_dlp_v2_regex.GooglePrivacyDlpV2Regex(
                                            pattern = '', ), 
                                        sensitivity_score = openapi_client.models.google_privacy_dlp_v2_sensitivity_score.GooglePrivacyDlpV2SensitivityScore(
                                            score = 'SENSITIVITY_SCORE_UNSPECIFIED', ), 
                                        stored_type = openapi_client.models.google_privacy_dlp_v2_stored_type.GooglePrivacyDlpV2StoredType(
                                            create_time = '', 
                                            name = '', ), 
                                        surrogate_type = openapi_client.models.google_privacy_dlp_v2_surrogate_type.GooglePrivacyDlpV2SurrogateType(), )
                                    ], 
                                exclude_info_types = True, 
                                include_quote = True, 
                                info_types = [
                                    openapi_client.models.google_privacy_dlp_v2_info_type.GooglePrivacyDlpV2InfoType(
                                        name = '', 
                                        version = '', )
                                    ], 
                                limits = openapi_client.models.google_privacy_dlp_v2_finding_limits.GooglePrivacyDlpV2FindingLimits(
                                    max_findings_per_info_type = [
                                        openapi_client.models.google_privacy_dlp_v2_info_type_limit.GooglePrivacyDlpV2InfoTypeLimit(
                                            max_findings = 56, )
                                        ], 
                                    max_findings_per_item = 56, 
                                    max_findings_per_request = 56, ), 
                                min_likelihood = 'LIKELIHOOD_UNSPECIFIED', 
                                min_likelihood_per_info_type = [
                                    openapi_client.models.google_privacy_dlp_v2_info_type_likelihood.GooglePrivacyDlpV2InfoTypeLikelihood(
                                        min_likelihood = 'LIKELIHOOD_UNSPECIFIED', )
                                    ], 
                                rule_set = [
                                    openapi_client.models.google_privacy_dlp_v2_inspection_rule_set.GooglePrivacyDlpV2InspectionRuleSet(
                                        rules = [
                                            openapi_client.models.google_privacy_dlp_v2_inspection_rule.GooglePrivacyDlpV2InspectionRule(
                                                exclusion_rule = openapi_client.models.google_privacy_dlp_v2_exclusion_rule.GooglePrivacyDlpV2ExclusionRule(
                                                    exclude_by_hotword = openapi_client.models.google_privacy_dlp_v2_exclude_by_hotword.GooglePrivacyDlpV2ExcludeByHotword(), 
                                                    exclude_info_types = openapi_client.models.google_privacy_dlp_v2_exclude_info_types.GooglePrivacyDlpV2ExcludeInfoTypes(), 
                                                    matching_type = 'MATCHING_TYPE_UNSPECIFIED', ), )
                                            ], )
                                    ], ), 
                            inspect_template_name = '', 
                            storage_config = openapi_client.models.google_privacy_dlp_v2_storage_config.GooglePrivacyDlpV2StorageConfig(
                                big_query_options = openapi_client.models.google_privacy_dlp_v2_big_query_options.GooglePrivacyDlpV2BigQueryOptions(
                                    excluded_fields = [
                                        openapi_client.models.google_privacy_dlp_v2_field_id.GooglePrivacyDlpV2FieldId(
                                            name = '', )
                                        ], 
                                    identifying_fields = [
                                        openapi_client.models.google_privacy_dlp_v2_field_id.GooglePrivacyDlpV2FieldId(
                                            name = '', )
                                        ], 
                                    included_fields = [
                                        
                                        ], 
                                    rows_limit = '', 
                                    rows_limit_percent = 56, 
                                    sample_method = 'SAMPLE_METHOD_UNSPECIFIED', 
                                    table_reference = openapi_client.models.google_privacy_dlp_v2_big_query_table.GooglePrivacyDlpV2BigQueryTable(
                                        dataset_id = '', 
                                        project_id = '', 
                                        table_id = '', ), ), 
                                cloud_storage_options = openapi_client.models.google_privacy_dlp_v2_cloud_storage_options.GooglePrivacyDlpV2CloudStorageOptions(
                                    bytes_limit_per_file = '', 
                                    bytes_limit_per_file_percent = 56, 
                                    file_set = openapi_client.models.google_privacy_dlp_v2_file_set.GooglePrivacyDlpV2FileSet(
                                        regex_file_set = openapi_client.models.google_privacy_dlp_v2_cloud_storage_regex_file_set.GooglePrivacyDlpV2CloudStorageRegexFileSet(
                                            bucket_name = '', 
                                            exclude_regex = [
                                                ''
                                                ], 
                                            include_regex = [
                                                ''
                                                ], ), 
                                        url = '', ), 
                                    file_types = [
                                        'FILE_TYPE_UNSPECIFIED'
                                        ], 
                                    files_limit_percent = 56, 
                                    sample_method = 'SAMPLE_METHOD_UNSPECIFIED', ), 
                                datastore_options = openapi_client.models.google_privacy_dlp_v2_datastore_options.GooglePrivacyDlpV2DatastoreOptions(
                                    kind = openapi_client.models.google_privacy_dlp_v2_kind_expression.GooglePrivacyDlpV2KindExpression(
                                        name = '', ), 
                                    partition_id = openapi_client.models.google_privacy_dlp_v2_partition_id.GooglePrivacyDlpV2PartitionId(
                                        namespace_id = '', 
                                        project_id = '', ), ), 
                                hybrid_options = openapi_client.models.google_privacy_dlp_v2_hybrid_options.GooglePrivacyDlpV2HybridOptions(
                                    description = '', 
                                    labels = {
                                        'key' : ''
                                        }, 
                                    required_finding_label_keys = [
                                        ''
                                        ], 
                                    table_options = openapi_client.models.google_privacy_dlp_v2_table_options.GooglePrivacyDlpV2TableOptions(), ), 
                                timespan_config = openapi_client.models.google_privacy_dlp_v2_timespan_config.GooglePrivacyDlpV2TimespanConfig(
                                    enable_auto_population_of_timespan_config = True, 
                                    end_time = '', 
                                    start_time = '', 
                                    timestamp_field = , ), ), ), 
                        snapshot_inspect_template = openapi_client.models.google_privacy_dlp_v2_inspect_template.GooglePrivacyDlpV2InspectTemplate(
                            create_time = '', 
                            description = '', 
                            display_name = '', 
                            name = '', 
                            update_time = '', ), ), 
                    result = openapi_client.models.google_privacy_dlp_v2_result.GooglePrivacyDlpV2Result(
                        hybrid_stats = openapi_client.models.google_privacy_dlp_v2_hybrid_inspect_statistics.GooglePrivacyDlpV2HybridInspectStatistics(
                            aborted_count = '', 
                            pending_count = '', 
                            processed_count = '', ), 
                        info_type_stats = [
                            openapi_client.models.google_privacy_dlp_v2_info_type_stats.GooglePrivacyDlpV2InfoTypeStats(
                                count = '', )
                            ], 
                        processed_bytes = '', 
                        total_estimated_bytes = '', ), ),
                job_trigger_name = '',
                last_modified = '',
                name = '',
                risk_details = openapi_client.models.google_privacy_dlp_v2_analyze_data_source_risk_details.GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails(
                    categorical_stats_result = openapi_client.models.google_privacy_dlp_v2_categorical_stats_result.GooglePrivacyDlpV2CategoricalStatsResult(
                        value_frequency_histogram_buckets = [
                            openapi_client.models.google_privacy_dlp_v2_categorical_stats_histogram_bucket.GooglePrivacyDlpV2CategoricalStatsHistogramBucket(
                                bucket_size = '', 
                                bucket_value_count = '', 
                                bucket_values = [
                                    openapi_client.models.google_privacy_dlp_v2_value_frequency.GooglePrivacyDlpV2ValueFrequency(
                                        count = '', 
                                        value = openapi_client.models.google_privacy_dlp_v2_value.GooglePrivacyDlpV2Value(
                                            boolean_value = True, 
                                            date_value = openapi_client.models.google_type_date.GoogleTypeDate(
                                                day = 56, 
                                                month = 56, 
                                                year = 56, ), 
                                            day_of_week_value = 'DAY_OF_WEEK_UNSPECIFIED', 
                                            float_value = 1.337, 
                                            integer_value = '', 
                                            string_value = '', 
                                            time_value = openapi_client.models.google_type_time_of_day.GoogleTypeTimeOfDay(
                                                hours = 56, 
                                                minutes = 56, 
                                                nanos = 56, 
                                                seconds = 56, ), 
                                            timestamp_value = '', ), )
                                    ], 
                                value_frequency_lower_bound = '', 
                                value_frequency_upper_bound = '', )
                            ], ), 
                    delta_presence_estimation_result = openapi_client.models.google_privacy_dlp_v2_delta_presence_estimation_result.GooglePrivacyDlpV2DeltaPresenceEstimationResult(
                        delta_presence_estimation_histogram = [
                            openapi_client.models.google_privacy_dlp_v2_delta_presence_estimation_histogram_bucket.GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket(
                                bucket_size = '', 
                                bucket_value_count = '', 
                                max_probability = 1.337, 
                                min_probability = 1.337, )
                            ], ), 
                    k_anonymity_result = openapi_client.models.google_privacy_dlp_v2_k_anonymity_result.GooglePrivacyDlpV2KAnonymityResult(
                        equivalence_class_histogram_buckets = [
                            openapi_client.models.google_privacy_dlp_v2_k_anonymity_histogram_bucket.GooglePrivacyDlpV2KAnonymityHistogramBucket(
                                bucket_size = '', 
                                bucket_value_count = '', 
                                equivalence_class_size_lower_bound = '', 
                                equivalence_class_size_upper_bound = '', )
                            ], ), 
                    k_map_estimation_result = openapi_client.models.google_privacy_dlp_v2_k_map_estimation_result.GooglePrivacyDlpV2KMapEstimationResult(
                        k_map_estimation_histogram = [
                            openapi_client.models.google_privacy_dlp_v2_k_map_estimation_histogram_bucket.GooglePrivacyDlpV2KMapEstimationHistogramBucket(
                                bucket_size = '', 
                                bucket_value_count = '', 
                                max_anonymity = '', 
                                min_anonymity = '', )
                            ], ), 
                    l_diversity_result = openapi_client.models.google_privacy_dlp_v2_l_diversity_result.GooglePrivacyDlpV2LDiversityResult(
                        sensitive_value_frequency_histogram_buckets = [
                            openapi_client.models.google_privacy_dlp_v2_l_diversity_histogram_bucket.GooglePrivacyDlpV2LDiversityHistogramBucket(
                                bucket_size = '', 
                                bucket_value_count = '', 
                                sensitive_value_frequency_lower_bound = '', 
                                sensitive_value_frequency_upper_bound = '', )
                            ], ), 
                    numerical_stats_result = openapi_client.models.google_privacy_dlp_v2_numerical_stats_result.GooglePrivacyDlpV2NumericalStatsResult(
                        max_value = openapi_client.models.google_privacy_dlp_v2_value.GooglePrivacyDlpV2Value(
                            boolean_value = True, 
                            day_of_week_value = 'DAY_OF_WEEK_UNSPECIFIED', 
                            float_value = 1.337, 
                            integer_value = '', 
                            string_value = '', 
                            timestamp_value = '', ), 
                        min_value = , 
                        quantile_values = [
                            
                            ], ), 
                    requested_options = openapi_client.models.google_privacy_dlp_v2_requested_risk_analysis_options.GooglePrivacyDlpV2RequestedRiskAnalysisOptions(
                        job_config = openapi_client.models.google_privacy_dlp_v2_risk_analysis_job_config.GooglePrivacyDlpV2RiskAnalysisJobConfig(
                            actions = [
                                openapi_client.models.google_privacy_dlp_v2_action.GooglePrivacyDlpV2Action(
                                    deidentify = openapi_client.models.google_privacy_dlp_v2_deidentify.GooglePrivacyDlpV2Deidentify(
                                        cloud_storage_output = '', 
                                        file_types_to_transform = [
                                            'FILE_TYPE_UNSPECIFIED'
                                            ], 
                                        transformation_config = openapi_client.models.google_privacy_dlp_v2_transformation_config.GooglePrivacyDlpV2TransformationConfig(
                                            deidentify_template = '', 
                                            image_redact_template = '', 
                                            structured_deidentify_template = '', ), 
                                        transformation_details_storage_config = openapi_client.models.google_privacy_dlp_v2_transformation_details_storage_config.GooglePrivacyDlpV2TransformationDetailsStorageConfig(
                                            table = openapi_client.models.google_privacy_dlp_v2_big_query_table.GooglePrivacyDlpV2BigQueryTable(
                                                dataset_id = '', 
                                                project_id = '', 
                                                table_id = '', ), ), ), 
                                    job_notification_emails = openapi_client.models.job_notification_emails.jobNotificationEmails(), 
                                    pub_sub = openapi_client.models.google_privacy_dlp_v2_publish_to_pub_sub.GooglePrivacyDlpV2PublishToPubSub(
                                        topic = '', ), 
                                    publish_findings_to_cloud_data_catalog = openapi_client.models.publish_findings_to_cloud_data_catalog.publishFindingsToCloudDataCatalog(), 
                                    publish_summary_to_cscc = openapi_client.models.publish_summary_to_cscc.publishSummaryToCscc(), 
                                    publish_to_stackdriver = openapi_client.models.publish_to_stackdriver.publishToStackdriver(), 
                                    save_findings = openapi_client.models.google_privacy_dlp_v2_save_findings.GooglePrivacyDlpV2SaveFindings(
                                        output_config = openapi_client.models.google_privacy_dlp_v2_output_storage_config.GooglePrivacyDlpV2OutputStorageConfig(
                                            output_schema = 'OUTPUT_SCHEMA_UNSPECIFIED', ), ), )
                                ], 
                            privacy_metric = openapi_client.models.google_privacy_dlp_v2_privacy_metric.GooglePrivacyDlpV2PrivacyMetric(
                                categorical_stats_config = openapi_client.models.google_privacy_dlp_v2_categorical_stats_config.GooglePrivacyDlpV2CategoricalStatsConfig(
                                    field = openapi_client.models.google_privacy_dlp_v2_field_id.GooglePrivacyDlpV2FieldId(
                                        name = '', ), ), 
                                delta_presence_estimation_config = openapi_client.models.google_privacy_dlp_v2_delta_presence_estimation_config.GooglePrivacyDlpV2DeltaPresenceEstimationConfig(
                                    auxiliary_tables = [
                                        openapi_client.models.google_privacy_dlp_v2_statistical_table.GooglePrivacyDlpV2StatisticalTable(
                                            quasi_ids = [
                                                openapi_client.models.google_privacy_dlp_v2_quasi_identifier_field.GooglePrivacyDlpV2QuasiIdentifierField(
                                                    custom_tag = '', )
                                                ], 
                                            relative_frequency = openapi_client.models.google_privacy_dlp_v2_field_id.GooglePrivacyDlpV2FieldId(
                                                name = '', ), )
                                        ], 
                                    quasi_ids = [
                                        openapi_client.models.google_privacy_dlp_v2_quasi_id.GooglePrivacyDlpV2QuasiId(
                                            custom_tag = '', 
                                            inferred = openapi_client.models.google_protobuf_empty.GoogleProtobufEmpty(), 
                                            info_type = openapi_client.models.google_privacy_dlp_v2_info_type.GooglePrivacyDlpV2InfoType(
                                                name = '', 
                                                sensitivity_score = openapi_client.models.google_privacy_dlp_v2_sensitivity_score.GooglePrivacyDlpV2SensitivityScore(
                                                    score = 'SENSITIVITY_SCORE_UNSPECIFIED', ), 
                                                version = '', ), )
                                        ], 
                                    region_code = '', ), 
                                k_anonymity_config = openapi_client.models.google_privacy_dlp_v2_k_anonymity_config.GooglePrivacyDlpV2KAnonymityConfig(
                                    entity_id = openapi_client.models.google_privacy_dlp_v2_entity_id.GooglePrivacyDlpV2EntityId(), ), 
                                k_map_estimation_config = openapi_client.models.google_privacy_dlp_v2_k_map_estimation_config.GooglePrivacyDlpV2KMapEstimationConfig(
                                    region_code = '', ), 
                                l_diversity_config = openapi_client.models.google_privacy_dlp_v2_l_diversity_config.GooglePrivacyDlpV2LDiversityConfig(
                                    sensitive_attribute = , ), 
                                numerical_stats_config = openapi_client.models.google_privacy_dlp_v2_numerical_stats_config.GooglePrivacyDlpV2NumericalStatsConfig(), ), 
                            source_table = openapi_client.models.google_privacy_dlp_v2_big_query_table.GooglePrivacyDlpV2BigQueryTable(
                                dataset_id = '', 
                                project_id = '', 
                                table_id = '', ), ), ), 
                    requested_privacy_metric = openapi_client.models.google_privacy_dlp_v2_privacy_metric.GooglePrivacyDlpV2PrivacyMetric(), 
                    requested_source_table = , ),
                start_time = '',
                state = 'JOB_STATE_UNSPECIFIED',
                type = 'DLP_JOB_TYPE_UNSPECIFIED'
            )
        else:
            return GooglePrivacyDlpV2DlpJob(
        )
        """

    def testGooglePrivacyDlpV2DlpJob(self):
        """Test GooglePrivacyDlpV2DlpJob"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
