# coding: utf-8

"""
    Sensitive Data Protection (DLP)

    Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_privacy_dlp_v2_analyze_data_source_risk_details import GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails

class TestGooglePrivacyDlpV2AnalyzeDataSourceRiskDetails(unittest.TestCase):
    """GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails:
        """Test GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails`
        """
        model = GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails()
        if include_optional:
            return GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails(
                categorical_stats_result = openapi_client.models.google_privacy_dlp_v2_categorical_stats_result.GooglePrivacyDlpV2CategoricalStatsResult(
                    value_frequency_histogram_buckets = [
                        openapi_client.models.google_privacy_dlp_v2_categorical_stats_histogram_bucket.GooglePrivacyDlpV2CategoricalStatsHistogramBucket(
                            bucket_size = '', 
                            bucket_value_count = '', 
                            bucket_values = [
                                openapi_client.models.google_privacy_dlp_v2_value_frequency.GooglePrivacyDlpV2ValueFrequency(
                                    count = '', 
                                    value = openapi_client.models.google_privacy_dlp_v2_value.GooglePrivacyDlpV2Value(
                                        boolean_value = True, 
                                        date_value = openapi_client.models.google_type_date.GoogleTypeDate(
                                            day = 56, 
                                            month = 56, 
                                            year = 56, ), 
                                        day_of_week_value = 'DAY_OF_WEEK_UNSPECIFIED', 
                                        float_value = 1.337, 
                                        integer_value = '', 
                                        string_value = '', 
                                        time_value = openapi_client.models.google_type_time_of_day.GoogleTypeTimeOfDay(
                                            hours = 56, 
                                            minutes = 56, 
                                            nanos = 56, 
                                            seconds = 56, ), 
                                        timestamp_value = '', ), )
                                ], 
                            value_frequency_lower_bound = '', 
                            value_frequency_upper_bound = '', )
                        ], ),
                delta_presence_estimation_result = openapi_client.models.google_privacy_dlp_v2_delta_presence_estimation_result.GooglePrivacyDlpV2DeltaPresenceEstimationResult(
                    delta_presence_estimation_histogram = [
                        openapi_client.models.google_privacy_dlp_v2_delta_presence_estimation_histogram_bucket.GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket(
                            bucket_size = '', 
                            bucket_value_count = '', 
                            bucket_values = [
                                openapi_client.models.google_privacy_dlp_v2_delta_presence_estimation_quasi_id_values.GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues(
                                    estimated_probability = 1.337, 
                                    quasi_ids_values = [
                                        openapi_client.models.google_privacy_dlp_v2_value.GooglePrivacyDlpV2Value(
                                            boolean_value = True, 
                                            date_value = openapi_client.models.google_type_date.GoogleTypeDate(
                                                day = 56, 
                                                month = 56, 
                                                year = 56, ), 
                                            day_of_week_value = 'DAY_OF_WEEK_UNSPECIFIED', 
                                            float_value = 1.337, 
                                            integer_value = '', 
                                            string_value = '', 
                                            time_value = openapi_client.models.google_type_time_of_day.GoogleTypeTimeOfDay(
                                                hours = 56, 
                                                minutes = 56, 
                                                nanos = 56, 
                                                seconds = 56, ), 
                                            timestamp_value = '', )
                                        ], )
                                ], 
                            max_probability = 1.337, 
                            min_probability = 1.337, )
                        ], ),
                k_anonymity_result = openapi_client.models.google_privacy_dlp_v2_k_anonymity_result.GooglePrivacyDlpV2KAnonymityResult(
                    equivalence_class_histogram_buckets = [
                        openapi_client.models.google_privacy_dlp_v2_k_anonymity_histogram_bucket.GooglePrivacyDlpV2KAnonymityHistogramBucket(
                            bucket_size = '', 
                            bucket_value_count = '', 
                            bucket_values = [
                                openapi_client.models.google_privacy_dlp_v2_k_anonymity_equivalence_class.GooglePrivacyDlpV2KAnonymityEquivalenceClass(
                                    equivalence_class_size = '', 
                                    quasi_ids_values = [
                                        openapi_client.models.google_privacy_dlp_v2_value.GooglePrivacyDlpV2Value(
                                            boolean_value = True, 
                                            date_value = openapi_client.models.google_type_date.GoogleTypeDate(
                                                day = 56, 
                                                month = 56, 
                                                year = 56, ), 
                                            day_of_week_value = 'DAY_OF_WEEK_UNSPECIFIED', 
                                            float_value = 1.337, 
                                            integer_value = '', 
                                            string_value = '', 
                                            time_value = openapi_client.models.google_type_time_of_day.GoogleTypeTimeOfDay(
                                                hours = 56, 
                                                minutes = 56, 
                                                nanos = 56, 
                                                seconds = 56, ), 
                                            timestamp_value = '', )
                                        ], )
                                ], 
                            equivalence_class_size_lower_bound = '', 
                            equivalence_class_size_upper_bound = '', )
                        ], ),
                k_map_estimation_result = openapi_client.models.google_privacy_dlp_v2_k_map_estimation_result.GooglePrivacyDlpV2KMapEstimationResult(
                    k_map_estimation_histogram = [
                        openapi_client.models.google_privacy_dlp_v2_k_map_estimation_histogram_bucket.GooglePrivacyDlpV2KMapEstimationHistogramBucket(
                            bucket_size = '', 
                            bucket_value_count = '', 
                            bucket_values = [
                                openapi_client.models.google_privacy_dlp_v2_k_map_estimation_quasi_id_values.GooglePrivacyDlpV2KMapEstimationQuasiIdValues(
                                    estimated_anonymity = '', 
                                    quasi_ids_values = [
                                        openapi_client.models.google_privacy_dlp_v2_value.GooglePrivacyDlpV2Value(
                                            boolean_value = True, 
                                            date_value = openapi_client.models.google_type_date.GoogleTypeDate(
                                                day = 56, 
                                                month = 56, 
                                                year = 56, ), 
                                            day_of_week_value = 'DAY_OF_WEEK_UNSPECIFIED', 
                                            float_value = 1.337, 
                                            integer_value = '', 
                                            string_value = '', 
                                            time_value = openapi_client.models.google_type_time_of_day.GoogleTypeTimeOfDay(
                                                hours = 56, 
                                                minutes = 56, 
                                                nanos = 56, 
                                                seconds = 56, ), 
                                            timestamp_value = '', )
                                        ], )
                                ], 
                            max_anonymity = '', 
                            min_anonymity = '', )
                        ], ),
                l_diversity_result = openapi_client.models.google_privacy_dlp_v2_l_diversity_result.GooglePrivacyDlpV2LDiversityResult(
                    sensitive_value_frequency_histogram_buckets = [
                        openapi_client.models.google_privacy_dlp_v2_l_diversity_histogram_bucket.GooglePrivacyDlpV2LDiversityHistogramBucket(
                            bucket_size = '', 
                            bucket_value_count = '', 
                            bucket_values = [
                                openapi_client.models.google_privacy_dlp_v2_l_diversity_equivalence_class.GooglePrivacyDlpV2LDiversityEquivalenceClass(
                                    equivalence_class_size = '', 
                                    num_distinct_sensitive_values = '', 
                                    quasi_ids_values = [
                                        openapi_client.models.google_privacy_dlp_v2_value.GooglePrivacyDlpV2Value(
                                            boolean_value = True, 
                                            date_value = openapi_client.models.google_type_date.GoogleTypeDate(
                                                day = 56, 
                                                month = 56, 
                                                year = 56, ), 
                                            day_of_week_value = 'DAY_OF_WEEK_UNSPECIFIED', 
                                            float_value = 1.337, 
                                            integer_value = '', 
                                            string_value = '', 
                                            time_value = openapi_client.models.google_type_time_of_day.GoogleTypeTimeOfDay(
                                                hours = 56, 
                                                minutes = 56, 
                                                nanos = 56, 
                                                seconds = 56, ), 
                                            timestamp_value = '', )
                                        ], 
                                    top_sensitive_values = [
                                        openapi_client.models.google_privacy_dlp_v2_value_frequency.GooglePrivacyDlpV2ValueFrequency(
                                            count = '', 
                                            value = openapi_client.models.google_privacy_dlp_v2_value.GooglePrivacyDlpV2Value(
                                                boolean_value = True, 
                                                day_of_week_value = 'DAY_OF_WEEK_UNSPECIFIED', 
                                                float_value = 1.337, 
                                                integer_value = '', 
                                                string_value = '', 
                                                timestamp_value = '', ), )
                                        ], )
                                ], 
                            sensitive_value_frequency_lower_bound = '', 
                            sensitive_value_frequency_upper_bound = '', )
                        ], ),
                numerical_stats_result = openapi_client.models.google_privacy_dlp_v2_numerical_stats_result.GooglePrivacyDlpV2NumericalStatsResult(
                    max_value = openapi_client.models.google_privacy_dlp_v2_value.GooglePrivacyDlpV2Value(
                        boolean_value = True, 
                        date_value = openapi_client.models.google_type_date.GoogleTypeDate(
                            day = 56, 
                            month = 56, 
                            year = 56, ), 
                        day_of_week_value = 'DAY_OF_WEEK_UNSPECIFIED', 
                        float_value = 1.337, 
                        integer_value = '', 
                        string_value = '', 
                        time_value = openapi_client.models.google_type_time_of_day.GoogleTypeTimeOfDay(
                            hours = 56, 
                            minutes = 56, 
                            nanos = 56, 
                            seconds = 56, ), 
                        timestamp_value = '', ), 
                    min_value = openapi_client.models.google_privacy_dlp_v2_value.GooglePrivacyDlpV2Value(
                        boolean_value = True, 
                        day_of_week_value = 'DAY_OF_WEEK_UNSPECIFIED', 
                        float_value = 1.337, 
                        integer_value = '', 
                        string_value = '', 
                        timestamp_value = '', ), 
                    quantile_values = [
                        
                        ], ),
                requested_options = openapi_client.models.google_privacy_dlp_v2_requested_risk_analysis_options.GooglePrivacyDlpV2RequestedRiskAnalysisOptions(
                    job_config = openapi_client.models.google_privacy_dlp_v2_risk_analysis_job_config.GooglePrivacyDlpV2RiskAnalysisJobConfig(
                        actions = [
                            openapi_client.models.google_privacy_dlp_v2_action.GooglePrivacyDlpV2Action(
                                deidentify = openapi_client.models.google_privacy_dlp_v2_deidentify.GooglePrivacyDlpV2Deidentify(
                                    cloud_storage_output = '', 
                                    file_types_to_transform = [
                                        'FILE_TYPE_UNSPECIFIED'
                                        ], 
                                    transformation_config = openapi_client.models.google_privacy_dlp_v2_transformation_config.GooglePrivacyDlpV2TransformationConfig(
                                        deidentify_template = '', 
                                        image_redact_template = '', 
                                        structured_deidentify_template = '', ), 
                                    transformation_details_storage_config = openapi_client.models.google_privacy_dlp_v2_transformation_details_storage_config.GooglePrivacyDlpV2TransformationDetailsStorageConfig(
                                        table = openapi_client.models.google_privacy_dlp_v2_big_query_table.GooglePrivacyDlpV2BigQueryTable(
                                            dataset_id = '', 
                                            project_id = '', 
                                            table_id = '', ), ), ), 
                                job_notification_emails = openapi_client.models.job_notification_emails.jobNotificationEmails(), 
                                pub_sub = openapi_client.models.google_privacy_dlp_v2_publish_to_pub_sub.GooglePrivacyDlpV2PublishToPubSub(
                                    topic = '', ), 
                                publish_findings_to_cloud_data_catalog = openapi_client.models.publish_findings_to_cloud_data_catalog.publishFindingsToCloudDataCatalog(), 
                                publish_summary_to_cscc = openapi_client.models.publish_summary_to_cscc.publishSummaryToCscc(), 
                                publish_to_stackdriver = openapi_client.models.publish_to_stackdriver.publishToStackdriver(), 
                                save_findings = openapi_client.models.google_privacy_dlp_v2_save_findings.GooglePrivacyDlpV2SaveFindings(
                                    output_config = openapi_client.models.google_privacy_dlp_v2_output_storage_config.GooglePrivacyDlpV2OutputStorageConfig(
                                        output_schema = 'OUTPUT_SCHEMA_UNSPECIFIED', ), ), )
                            ], 
                        privacy_metric = openapi_client.models.google_privacy_dlp_v2_privacy_metric.GooglePrivacyDlpV2PrivacyMetric(
                            categorical_stats_config = openapi_client.models.google_privacy_dlp_v2_categorical_stats_config.GooglePrivacyDlpV2CategoricalStatsConfig(
                                field = openapi_client.models.google_privacy_dlp_v2_field_id.GooglePrivacyDlpV2FieldId(
                                    name = '', ), ), 
                            delta_presence_estimation_config = openapi_client.models.google_privacy_dlp_v2_delta_presence_estimation_config.GooglePrivacyDlpV2DeltaPresenceEstimationConfig(
                                auxiliary_tables = [
                                    openapi_client.models.google_privacy_dlp_v2_statistical_table.GooglePrivacyDlpV2StatisticalTable(
                                        quasi_ids = [
                                            openapi_client.models.google_privacy_dlp_v2_quasi_identifier_field.GooglePrivacyDlpV2QuasiIdentifierField(
                                                custom_tag = '', )
                                            ], 
                                        relative_frequency = openapi_client.models.google_privacy_dlp_v2_field_id.GooglePrivacyDlpV2FieldId(
                                            name = '', ), )
                                    ], 
                                quasi_ids = [
                                    openapi_client.models.google_privacy_dlp_v2_quasi_id.GooglePrivacyDlpV2QuasiId(
                                        custom_tag = '', 
                                        inferred = openapi_client.models.google_protobuf_empty.GoogleProtobufEmpty(), 
                                        info_type = openapi_client.models.google_privacy_dlp_v2_info_type.GooglePrivacyDlpV2InfoType(
                                            name = '', 
                                            sensitivity_score = openapi_client.models.google_privacy_dlp_v2_sensitivity_score.GooglePrivacyDlpV2SensitivityScore(
                                                score = 'SENSITIVITY_SCORE_UNSPECIFIED', ), 
                                            version = '', ), )
                                    ], 
                                region_code = '', ), 
                            k_anonymity_config = openapi_client.models.google_privacy_dlp_v2_k_anonymity_config.GooglePrivacyDlpV2KAnonymityConfig(
                                entity_id = openapi_client.models.google_privacy_dlp_v2_entity_id.GooglePrivacyDlpV2EntityId(), ), 
                            k_map_estimation_config = openapi_client.models.google_privacy_dlp_v2_k_map_estimation_config.GooglePrivacyDlpV2KMapEstimationConfig(
                                region_code = '', ), 
                            l_diversity_config = openapi_client.models.google_privacy_dlp_v2_l_diversity_config.GooglePrivacyDlpV2LDiversityConfig(
                                sensitive_attribute = , ), 
                            numerical_stats_config = openapi_client.models.google_privacy_dlp_v2_numerical_stats_config.GooglePrivacyDlpV2NumericalStatsConfig(), ), 
                        source_table = openapi_client.models.google_privacy_dlp_v2_big_query_table.GooglePrivacyDlpV2BigQueryTable(
                            dataset_id = '', 
                            project_id = '', 
                            table_id = '', ), ), ),
                requested_privacy_metric = openapi_client.models.google_privacy_dlp_v2_privacy_metric.GooglePrivacyDlpV2PrivacyMetric(
                    categorical_stats_config = openapi_client.models.google_privacy_dlp_v2_categorical_stats_config.GooglePrivacyDlpV2CategoricalStatsConfig(
                        field = openapi_client.models.google_privacy_dlp_v2_field_id.GooglePrivacyDlpV2FieldId(
                            name = '', ), ), 
                    delta_presence_estimation_config = openapi_client.models.google_privacy_dlp_v2_delta_presence_estimation_config.GooglePrivacyDlpV2DeltaPresenceEstimationConfig(
                        auxiliary_tables = [
                            openapi_client.models.google_privacy_dlp_v2_statistical_table.GooglePrivacyDlpV2StatisticalTable(
                                quasi_ids = [
                                    openapi_client.models.google_privacy_dlp_v2_quasi_identifier_field.GooglePrivacyDlpV2QuasiIdentifierField(
                                        custom_tag = '', )
                                    ], 
                                relative_frequency = openapi_client.models.google_privacy_dlp_v2_field_id.GooglePrivacyDlpV2FieldId(
                                    name = '', ), 
                                table = openapi_client.models.google_privacy_dlp_v2_big_query_table.GooglePrivacyDlpV2BigQueryTable(
                                    dataset_id = '', 
                                    project_id = '', 
                                    table_id = '', ), )
                            ], 
                        quasi_ids = [
                            openapi_client.models.google_privacy_dlp_v2_quasi_id.GooglePrivacyDlpV2QuasiId(
                                custom_tag = '', 
                                inferred = openapi_client.models.google_protobuf_empty.GoogleProtobufEmpty(), 
                                info_type = openapi_client.models.google_privacy_dlp_v2_info_type.GooglePrivacyDlpV2InfoType(
                                    name = '', 
                                    sensitivity_score = openapi_client.models.google_privacy_dlp_v2_sensitivity_score.GooglePrivacyDlpV2SensitivityScore(
                                        score = 'SENSITIVITY_SCORE_UNSPECIFIED', ), 
                                    version = '', ), )
                            ], 
                        region_code = '', ), 
                    k_anonymity_config = openapi_client.models.google_privacy_dlp_v2_k_anonymity_config.GooglePrivacyDlpV2KAnonymityConfig(
                        entity_id = openapi_client.models.google_privacy_dlp_v2_entity_id.GooglePrivacyDlpV2EntityId(), ), 
                    k_map_estimation_config = openapi_client.models.google_privacy_dlp_v2_k_map_estimation_config.GooglePrivacyDlpV2KMapEstimationConfig(
                        region_code = '', ), 
                    l_diversity_config = openapi_client.models.google_privacy_dlp_v2_l_diversity_config.GooglePrivacyDlpV2LDiversityConfig(
                        sensitive_attribute = , ), 
                    numerical_stats_config = openapi_client.models.google_privacy_dlp_v2_numerical_stats_config.GooglePrivacyDlpV2NumericalStatsConfig(), ),
                requested_source_table = openapi_client.models.google_privacy_dlp_v2_big_query_table.GooglePrivacyDlpV2BigQueryTable(
                    dataset_id = '', 
                    project_id = '', 
                    table_id = '', )
            )
        else:
            return GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails(
        )
        """

    def testGooglePrivacyDlpV2AnalyzeDataSourceRiskDetails(self):
        """Test GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
