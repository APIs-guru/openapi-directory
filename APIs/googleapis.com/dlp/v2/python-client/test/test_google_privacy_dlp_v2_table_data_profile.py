# coding: utf-8

"""
    Sensitive Data Protection (DLP)

    Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_privacy_dlp_v2_table_data_profile import GooglePrivacyDlpV2TableDataProfile

class TestGooglePrivacyDlpV2TableDataProfile(unittest.TestCase):
    """GooglePrivacyDlpV2TableDataProfile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GooglePrivacyDlpV2TableDataProfile:
        """Test GooglePrivacyDlpV2TableDataProfile
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GooglePrivacyDlpV2TableDataProfile`
        """
        model = GooglePrivacyDlpV2TableDataProfile()
        if include_optional:
            return GooglePrivacyDlpV2TableDataProfile(
                config_snapshot = openapi_client.models.google_privacy_dlp_v2_data_profile_config_snapshot.GooglePrivacyDlpV2DataProfileConfigSnapshot(
                    data_profile_job = openapi_client.models.google_privacy_dlp_v2_data_profile_job_config.GooglePrivacyDlpV2DataProfileJobConfig(
                        data_profile_actions = [
                            openapi_client.models.google_privacy_dlp_v2_data_profile_action.GooglePrivacyDlpV2DataProfileAction(
                                export_data = openapi_client.models.google_privacy_dlp_v2_export.GooglePrivacyDlpV2Export(
                                    profile_table = openapi_client.models.google_privacy_dlp_v2_big_query_table.GooglePrivacyDlpV2BigQueryTable(
                                        dataset_id = '', 
                                        project_id = '', 
                                        table_id = '', ), ), 
                                pub_sub_notification = openapi_client.models.google_privacy_dlp_v2_pub_sub_notification.GooglePrivacyDlpV2PubSubNotification(
                                    detail_of_message = 'DETAIL_LEVEL_UNSPECIFIED', 
                                    event = 'EVENT_TYPE_UNSPECIFIED', 
                                    pubsub_condition = openapi_client.models.google_privacy_dlp_v2_data_profile_pub_sub_condition.GooglePrivacyDlpV2DataProfilePubSubCondition(
                                        expressions = openapi_client.models.google_privacy_dlp_v2_pub_sub_expressions.GooglePrivacyDlpV2PubSubExpressions(
                                            conditions = [
                                                openapi_client.models.google_privacy_dlp_v2_pub_sub_condition.GooglePrivacyDlpV2PubSubCondition(
                                                    minimum_risk_score = 'PROFILE_SCORE_BUCKET_UNSPECIFIED', 
                                                    minimum_sensitivity_score = 'PROFILE_SCORE_BUCKET_UNSPECIFIED', )
                                                ], 
                                            logical_operator = 'LOGICAL_OPERATOR_UNSPECIFIED', ), ), 
                                    topic = '', ), )
                            ], 
                        inspect_templates = [
                            ''
                            ], 
                        location = openapi_client.models.google_privacy_dlp_v2_data_profile_location.GooglePrivacyDlpV2DataProfileLocation(
                            folder_id = '', 
                            organization_id = '', ), 
                        project_id = '', ), 
                    discovery_config = openapi_client.models.google_privacy_dlp_v2_discovery_config.GooglePrivacyDlpV2DiscoveryConfig(
                        actions = [
                            openapi_client.models.google_privacy_dlp_v2_data_profile_action.GooglePrivacyDlpV2DataProfileAction()
                            ], 
                        create_time = '', 
                        display_name = '', 
                        errors = [
                            openapi_client.models.google_privacy_dlp_v2_error.GooglePrivacyDlpV2Error(
                                details = openapi_client.models.google_rpc_status.GoogleRpcStatus(
                                    code = 56, 
                                    message = '', ), 
                                timestamps = [
                                    ''
                                    ], )
                            ], 
                        last_run_time = '', 
                        name = '', 
                        org_config = openapi_client.models.google_privacy_dlp_v2_org_config.GooglePrivacyDlpV2OrgConfig(
                            project_id = '', ), 
                        status = 'STATUS_UNSPECIFIED', 
                        targets = [
                            openapi_client.models.google_privacy_dlp_v2_discovery_target.GooglePrivacyDlpV2DiscoveryTarget(
                                big_query_target = openapi_client.models.google_privacy_dlp_v2_big_query_discovery_target.GooglePrivacyDlpV2BigQueryDiscoveryTarget(
                                    cadence = openapi_client.models.google_privacy_dlp_v2_discovery_generation_cadence.GooglePrivacyDlpV2DiscoveryGenerationCadence(
                                        schema_modified_cadence = openapi_client.models.google_privacy_dlp_v2_discovery_schema_modified_cadence.GooglePrivacyDlpV2DiscoverySchemaModifiedCadence(
                                            frequency = 'UPDATE_FREQUENCY_UNSPECIFIED', 
                                            types = [
                                                'SCHEMA_MODIFICATION_UNSPECIFIED'
                                                ], ), 
                                        table_modified_cadence = openapi_client.models.google_privacy_dlp_v2_discovery_table_modified_cadence.GooglePrivacyDlpV2DiscoveryTableModifiedCadence(
                                            frequency = 'UPDATE_FREQUENCY_UNSPECIFIED', ), ), 
                                    disabled = openapi_client.models.disabled.disabled(), 
                                    filter = openapi_client.models.google_privacy_dlp_v2_discovery_big_query_filter.GooglePrivacyDlpV2DiscoveryBigQueryFilter(
                                        other_tables = openapi_client.models.google_privacy_dlp_v2_all_other_big_query_tables.GooglePrivacyDlpV2AllOtherBigQueryTables(), 
                                        tables = openapi_client.models.google_privacy_dlp_v2_big_query_table_collection.GooglePrivacyDlpV2BigQueryTableCollection(
                                            include_regexes = openapi_client.models.google_privacy_dlp_v2_big_query_regexes.GooglePrivacyDlpV2BigQueryRegexes(
                                                patterns = [
                                                    openapi_client.models.google_privacy_dlp_v2_big_query_regex.GooglePrivacyDlpV2BigQueryRegex(
                                                        dataset_id_regex = '', 
                                                        project_id_regex = '', 
                                                        table_id_regex = '', )
                                                    ], ), ), ), ), )
                            ], 
                        update_time = '', ), 
                    inspect_config = openapi_client.models.google_privacy_dlp_v2_inspect_config.GooglePrivacyDlpV2InspectConfig(
                        content_options = [
                            'CONTENT_UNSPECIFIED'
                            ], 
                        custom_info_types = [
                            openapi_client.models.google_privacy_dlp_v2_custom_info_type.GooglePrivacyDlpV2CustomInfoType(
                                detection_rules = [
                                    openapi_client.models.google_privacy_dlp_v2_detection_rule.GooglePrivacyDlpV2DetectionRule(
                                        hotword_rule = openapi_client.models.google_privacy_dlp_v2_hotword_rule.GooglePrivacyDlpV2HotwordRule(
                                            hotword_regex = openapi_client.models.google_privacy_dlp_v2_regex.GooglePrivacyDlpV2Regex(
                                                group_indexes = [
                                                    56
                                                    ], 
                                                pattern = '', ), 
                                            likelihood_adjustment = openapi_client.models.google_privacy_dlp_v2_likelihood_adjustment.GooglePrivacyDlpV2LikelihoodAdjustment(
                                                fixed_likelihood = 'LIKELIHOOD_UNSPECIFIED', 
                                                relative_likelihood = 56, ), 
                                            proximity = openapi_client.models.google_privacy_dlp_v2_proximity.GooglePrivacyDlpV2Proximity(
                                                window_after = 56, 
                                                window_before = 56, ), ), )
                                    ], 
                                dictionary = openapi_client.models.google_privacy_dlp_v2_dictionary.GooglePrivacyDlpV2Dictionary(
                                    cloud_storage_path = openapi_client.models.google_privacy_dlp_v2_cloud_storage_path.GooglePrivacyDlpV2CloudStoragePath(
                                        path = '', ), 
                                    word_list = openapi_client.models.google_privacy_dlp_v2_word_list.GooglePrivacyDlpV2WordList(
                                        words = [
                                            ''
                                            ], ), ), 
                                exclusion_type = 'EXCLUSION_TYPE_UNSPECIFIED', 
                                info_type = openapi_client.models.google_privacy_dlp_v2_info_type.GooglePrivacyDlpV2InfoType(
                                    name = '', 
                                    sensitivity_score = openapi_client.models.google_privacy_dlp_v2_sensitivity_score.GooglePrivacyDlpV2SensitivityScore(
                                        score = 'SENSITIVITY_SCORE_UNSPECIFIED', ), 
                                    version = '', ), 
                                likelihood = 'LIKELIHOOD_UNSPECIFIED', 
                                regex = openapi_client.models.google_privacy_dlp_v2_regex.GooglePrivacyDlpV2Regex(
                                    pattern = '', ), 
                                sensitivity_score = openapi_client.models.google_privacy_dlp_v2_sensitivity_score.GooglePrivacyDlpV2SensitivityScore(
                                    score = 'SENSITIVITY_SCORE_UNSPECIFIED', ), 
                                stored_type = openapi_client.models.google_privacy_dlp_v2_stored_type.GooglePrivacyDlpV2StoredType(
                                    create_time = '', 
                                    name = '', ), 
                                surrogate_type = openapi_client.models.google_privacy_dlp_v2_surrogate_type.GooglePrivacyDlpV2SurrogateType(), )
                            ], 
                        exclude_info_types = True, 
                        include_quote = True, 
                        info_types = [
                            openapi_client.models.google_privacy_dlp_v2_info_type.GooglePrivacyDlpV2InfoType(
                                name = '', 
                                version = '', )
                            ], 
                        limits = openapi_client.models.google_privacy_dlp_v2_finding_limits.GooglePrivacyDlpV2FindingLimits(
                            max_findings_per_info_type = [
                                openapi_client.models.google_privacy_dlp_v2_info_type_limit.GooglePrivacyDlpV2InfoTypeLimit(
                                    max_findings = 56, )
                                ], 
                            max_findings_per_item = 56, 
                            max_findings_per_request = 56, ), 
                        min_likelihood = 'LIKELIHOOD_UNSPECIFIED', 
                        min_likelihood_per_info_type = [
                            openapi_client.models.google_privacy_dlp_v2_info_type_likelihood.GooglePrivacyDlpV2InfoTypeLikelihood(
                                min_likelihood = 'LIKELIHOOD_UNSPECIFIED', )
                            ], 
                        rule_set = [
                            openapi_client.models.google_privacy_dlp_v2_inspection_rule_set.GooglePrivacyDlpV2InspectionRuleSet(
                                rules = [
                                    openapi_client.models.google_privacy_dlp_v2_inspection_rule.GooglePrivacyDlpV2InspectionRule(
                                        exclusion_rule = openapi_client.models.google_privacy_dlp_v2_exclusion_rule.GooglePrivacyDlpV2ExclusionRule(
                                            exclude_by_hotword = openapi_client.models.google_privacy_dlp_v2_exclude_by_hotword.GooglePrivacyDlpV2ExcludeByHotword(), 
                                            exclude_info_types = openapi_client.models.google_privacy_dlp_v2_exclude_info_types.GooglePrivacyDlpV2ExcludeInfoTypes(), 
                                            matching_type = 'MATCHING_TYPE_UNSPECIFIED', ), )
                                    ], )
                            ], ), 
                    inspect_template_modified_time = '', 
                    inspect_template_name = '', ),
                create_time = '',
                data_risk_level = openapi_client.models.google_privacy_dlp_v2_data_risk_level.GooglePrivacyDlpV2DataRiskLevel(
                    score = 'RISK_SCORE_UNSPECIFIED', ),
                data_source_type = openapi_client.models.google_privacy_dlp_v2_data_source_type.GooglePrivacyDlpV2DataSourceType(
                    data_source = '', ),
                dataset_id = '',
                dataset_location = '',
                dataset_project_id = '',
                encryption_status = 'ENCRYPTION_STATUS_UNSPECIFIED',
                expiration_time = '',
                failed_column_count = '',
                full_resource = '',
                last_modified_time = '',
                name = '',
                other_info_types = [
                    openapi_client.models.google_privacy_dlp_v2_other_info_type_summary.GooglePrivacyDlpV2OtherInfoTypeSummary(
                        estimated_prevalence = 56, 
                        excluded_from_analysis = True, 
                        info_type = openapi_client.models.google_privacy_dlp_v2_info_type.GooglePrivacyDlpV2InfoType(
                            name = '', 
                            sensitivity_score = openapi_client.models.google_privacy_dlp_v2_sensitivity_score.GooglePrivacyDlpV2SensitivityScore(
                                score = 'SENSITIVITY_SCORE_UNSPECIFIED', ), 
                            version = '', ), )
                    ],
                predicted_info_types = [
                    openapi_client.models.google_privacy_dlp_v2_info_type_summary.GooglePrivacyDlpV2InfoTypeSummary(
                        estimated_prevalence = 56, 
                        info_type = openapi_client.models.google_privacy_dlp_v2_info_type.GooglePrivacyDlpV2InfoType(
                            name = '', 
                            sensitivity_score = openapi_client.models.google_privacy_dlp_v2_sensitivity_score.GooglePrivacyDlpV2SensitivityScore(
                                score = 'SENSITIVITY_SCORE_UNSPECIFIED', ), 
                            version = '', ), )
                    ],
                profile_last_generated = '',
                profile_status = openapi_client.models.google_privacy_dlp_v2_profile_status.GooglePrivacyDlpV2ProfileStatus(
                    status = openapi_client.models.google_rpc_status.GoogleRpcStatus(
                        code = 56, 
                        details = [
                            {
                                'key' : null
                                }
                            ], 
                        message = '', ), 
                    timestamp = '', ),
                project_data_profile = '',
                resource_labels = {
                    'key' : ''
                    },
                resource_visibility = 'RESOURCE_VISIBILITY_UNSPECIFIED',
                row_count = '',
                scanned_column_count = '',
                sensitivity_score = openapi_client.models.google_privacy_dlp_v2_sensitivity_score.GooglePrivacyDlpV2SensitivityScore(
                    score = 'SENSITIVITY_SCORE_UNSPECIFIED', ),
                state = 'STATE_UNSPECIFIED',
                table_id = '',
                table_size_bytes = ''
            )
        else:
            return GooglePrivacyDlpV2TableDataProfile(
        )
        """

    def testGooglePrivacyDlpV2TableDataProfile(self):
        """Test GooglePrivacyDlpV2TableDataProfile"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
