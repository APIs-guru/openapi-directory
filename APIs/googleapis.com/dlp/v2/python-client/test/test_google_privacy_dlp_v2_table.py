# coding: utf-8

"""
    Sensitive Data Protection (DLP)

    Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_privacy_dlp_v2_table import GooglePrivacyDlpV2Table

class TestGooglePrivacyDlpV2Table(unittest.TestCase):
    """GooglePrivacyDlpV2Table unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GooglePrivacyDlpV2Table:
        """Test GooglePrivacyDlpV2Table
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GooglePrivacyDlpV2Table`
        """
        model = GooglePrivacyDlpV2Table()
        if include_optional:
            return GooglePrivacyDlpV2Table(
                headers = [
                    openapi_client.models.google_privacy_dlp_v2_field_id.GooglePrivacyDlpV2FieldId(
                        name = '', )
                    ],
                rows = [
                    openapi_client.models.google_privacy_dlp_v2_row.GooglePrivacyDlpV2Row(
                        values = [
                            openapi_client.models.google_privacy_dlp_v2_value.GooglePrivacyDlpV2Value(
                                boolean_value = True, 
                                date_value = openapi_client.models.google_type_date.GoogleTypeDate(
                                    day = 56, 
                                    month = 56, 
                                    year = 56, ), 
                                day_of_week_value = 'DAY_OF_WEEK_UNSPECIFIED', 
                                float_value = 1.337, 
                                integer_value = '', 
                                string_value = '', 
                                time_value = openapi_client.models.google_type_time_of_day.GoogleTypeTimeOfDay(
                                    hours = 56, 
                                    minutes = 56, 
                                    nanos = 56, 
                                    seconds = 56, ), 
                                timestamp_value = '', )
                            ], )
                    ]
            )
        else:
            return GooglePrivacyDlpV2Table(
        )
        """

    def testGooglePrivacyDlpV2Table(self):
        """Test GooglePrivacyDlpV2Table"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
