# coding: utf-8

"""
    Sensitive Data Protection (DLP)

    Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_privacy_dlp_v2_path_element import GooglePrivacyDlpV2PathElement

class TestGooglePrivacyDlpV2PathElement(unittest.TestCase):
    """GooglePrivacyDlpV2PathElement unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GooglePrivacyDlpV2PathElement:
        """Test GooglePrivacyDlpV2PathElement
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GooglePrivacyDlpV2PathElement`
        """
        model = GooglePrivacyDlpV2PathElement()
        if include_optional:
            return GooglePrivacyDlpV2PathElement(
                id = '',
                kind = '',
                name = ''
            )
        else:
            return GooglePrivacyDlpV2PathElement(
        )
        """

    def testGooglePrivacyDlpV2PathElement(self):
        """Test GooglePrivacyDlpV2PathElement"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
