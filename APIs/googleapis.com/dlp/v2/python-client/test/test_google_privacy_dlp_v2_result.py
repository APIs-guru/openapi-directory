# coding: utf-8

"""
    Sensitive Data Protection (DLP)

    Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_privacy_dlp_v2_result import GooglePrivacyDlpV2Result

class TestGooglePrivacyDlpV2Result(unittest.TestCase):
    """GooglePrivacyDlpV2Result unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GooglePrivacyDlpV2Result:
        """Test GooglePrivacyDlpV2Result
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GooglePrivacyDlpV2Result`
        """
        model = GooglePrivacyDlpV2Result()
        if include_optional:
            return GooglePrivacyDlpV2Result(
                hybrid_stats = openapi_client.models.google_privacy_dlp_v2_hybrid_inspect_statistics.GooglePrivacyDlpV2HybridInspectStatistics(
                    aborted_count = '', 
                    pending_count = '', 
                    processed_count = '', ),
                info_type_stats = [
                    openapi_client.models.google_privacy_dlp_v2_info_type_stats.GooglePrivacyDlpV2InfoTypeStats(
                        count = '', 
                        info_type = openapi_client.models.google_privacy_dlp_v2_info_type.GooglePrivacyDlpV2InfoType(
                            name = '', 
                            sensitivity_score = openapi_client.models.google_privacy_dlp_v2_sensitivity_score.GooglePrivacyDlpV2SensitivityScore(
                                score = 'SENSITIVITY_SCORE_UNSPECIFIED', ), 
                            version = '', ), )
                    ],
                processed_bytes = '',
                total_estimated_bytes = ''
            )
        else:
            return GooglePrivacyDlpV2Result(
        )
        """

    def testGooglePrivacyDlpV2Result(self):
        """Test GooglePrivacyDlpV2Result"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
