# coding: utf-8

"""
    Sensitive Data Protection (DLP)

    Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_privacy_dlp_v2_action_details import GooglePrivacyDlpV2ActionDetails

class TestGooglePrivacyDlpV2ActionDetails(unittest.TestCase):
    """GooglePrivacyDlpV2ActionDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GooglePrivacyDlpV2ActionDetails:
        """Test GooglePrivacyDlpV2ActionDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GooglePrivacyDlpV2ActionDetails`
        """
        model = GooglePrivacyDlpV2ActionDetails()
        if include_optional:
            return GooglePrivacyDlpV2ActionDetails(
                deidentify_details = openapi_client.models.google_privacy_dlp_v2_deidentify_data_source_details.GooglePrivacyDlpV2DeidentifyDataSourceDetails(
                    deidentify_stats = openapi_client.models.google_privacy_dlp_v2_deidentify_data_source_stats.GooglePrivacyDlpV2DeidentifyDataSourceStats(
                        transformation_count = '', 
                        transformation_error_count = '', 
                        transformed_bytes = '', ), 
                    requested_options = openapi_client.models.google_privacy_dlp_v2_requested_deidentify_options.GooglePrivacyDlpV2RequestedDeidentifyOptions(
                        snapshot_deidentify_template = openapi_client.models.google_privacy_dlp_v2_deidentify_template.GooglePrivacyDlpV2DeidentifyTemplate(
                            create_time = '', 
                            deidentify_config = openapi_client.models.google_privacy_dlp_v2_deidentify_config.GooglePrivacyDlpV2DeidentifyConfig(
                                image_transformations = openapi_client.models.google_privacy_dlp_v2_image_transformations.GooglePrivacyDlpV2ImageTransformations(
                                    transforms = [
                                        openapi_client.models.google_privacy_dlp_v2_image_transformation.GooglePrivacyDlpV2ImageTransformation(
                                            all_info_types = openapi_client.models.google_privacy_dlp_v2_all_info_types.GooglePrivacyDlpV2AllInfoTypes(), 
                                            all_text = openapi_client.models.google_privacy_dlp_v2_all_text.GooglePrivacyDlpV2AllText(), 
                                            redaction_color = openapi_client.models.google_privacy_dlp_v2_color.GooglePrivacyDlpV2Color(
                                                blue = 1.337, 
                                                green = 1.337, 
                                                red = 1.337, ), 
                                            selected_info_types = openapi_client.models.google_privacy_dlp_v2_selected_info_types.GooglePrivacyDlpV2SelectedInfoTypes(
                                                info_types = [
                                                    openapi_client.models.google_privacy_dlp_v2_info_type.GooglePrivacyDlpV2InfoType(
                                                        name = '', 
                                                        sensitivity_score = openapi_client.models.google_privacy_dlp_v2_sensitivity_score.GooglePrivacyDlpV2SensitivityScore(
                                                            score = 'SENSITIVITY_SCORE_UNSPECIFIED', ), 
                                                        version = '', )
                                                    ], ), )
                                        ], ), 
                                info_type_transformations = openapi_client.models.google_privacy_dlp_v2_info_type_transformations.GooglePrivacyDlpV2InfoTypeTransformations(
                                    transformations = [
                                        openapi_client.models.google_privacy_dlp_v2_info_type_transformation.GooglePrivacyDlpV2InfoTypeTransformation(
                                            primitive_transformation = openapi_client.models.google_privacy_dlp_v2_primitive_transformation.GooglePrivacyDlpV2PrimitiveTransformation(
                                                bucketing_config = openapi_client.models.google_privacy_dlp_v2_bucketing_config.GooglePrivacyDlpV2BucketingConfig(
                                                    buckets = [
                                                        openapi_client.models.google_privacy_dlp_v2_bucket.GooglePrivacyDlpV2Bucket(
                                                            max = openapi_client.models.google_privacy_dlp_v2_value.GooglePrivacyDlpV2Value(
                                                                boolean_value = True, 
                                                                date_value = openapi_client.models.google_type_date.GoogleTypeDate(
                                                                    day = 56, 
                                                                    month = 56, 
                                                                    year = 56, ), 
                                                                day_of_week_value = 'DAY_OF_WEEK_UNSPECIFIED', 
                                                                float_value = 1.337, 
                                                                integer_value = '', 
                                                                string_value = '', 
                                                                time_value = openapi_client.models.google_type_time_of_day.GoogleTypeTimeOfDay(
                                                                    hours = 56, 
                                                                    minutes = 56, 
                                                                    nanos = 56, 
                                                                    seconds = 56, ), 
                                                                timestamp_value = '', ), 
                                                            min = openapi_client.models.google_privacy_dlp_v2_value.GooglePrivacyDlpV2Value(
                                                                boolean_value = True, 
                                                                day_of_week_value = 'DAY_OF_WEEK_UNSPECIFIED', 
                                                                float_value = 1.337, 
                                                                integer_value = '', 
                                                                string_value = '', 
                                                                timestamp_value = '', ), 
                                                            replacement_value = , )
                                                        ], ), 
                                                character_mask_config = openapi_client.models.google_privacy_dlp_v2_character_mask_config.GooglePrivacyDlpV2CharacterMaskConfig(
                                                    characters_to_ignore = [
                                                        openapi_client.models.google_privacy_dlp_v2_chars_to_ignore.GooglePrivacyDlpV2CharsToIgnore(
                                                            characters_to_skip = '', 
                                                            common_characters_to_ignore = 'COMMON_CHARS_TO_IGNORE_UNSPECIFIED', )
                                                        ], 
                                                    masking_character = '', 
                                                    number_to_mask = 56, 
                                                    reverse_order = True, ), 
                                                crypto_deterministic_config = openapi_client.models.google_privacy_dlp_v2_crypto_deterministic_config.GooglePrivacyDlpV2CryptoDeterministicConfig(
                                                    context = openapi_client.models.google_privacy_dlp_v2_field_id.GooglePrivacyDlpV2FieldId(
                                                        name = '', ), 
                                                    crypto_key = openapi_client.models.google_privacy_dlp_v2_crypto_key.GooglePrivacyDlpV2CryptoKey(
                                                        kms_wrapped = openapi_client.models.google_privacy_dlp_v2_kms_wrapped_crypto_key.GooglePrivacyDlpV2KmsWrappedCryptoKey(
                                                            crypto_key_name = '', 
                                                            wrapped_key = 'YQ==', ), 
                                                        transient = openapi_client.models.google_privacy_dlp_v2_transient_crypto_key.GooglePrivacyDlpV2TransientCryptoKey(
                                                            name = '', ), 
                                                        unwrapped = openapi_client.models.google_privacy_dlp_v2_unwrapped_crypto_key.GooglePrivacyDlpV2UnwrappedCryptoKey(
                                                            key = 'YQ==', ), ), 
                                                    surrogate_info_type = openapi_client.models.google_privacy_dlp_v2_info_type.GooglePrivacyDlpV2InfoType(
                                                        name = '', 
                                                        version = '', ), ), 
                                                crypto_hash_config = openapi_client.models.google_privacy_dlp_v2_crypto_hash_config.GooglePrivacyDlpV2CryptoHashConfig(), 
                                                crypto_replace_ffx_fpe_config = openapi_client.models.google_privacy_dlp_v2_crypto_replace_ffx_fpe_config.GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig(
                                                    common_alphabet = 'FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED', 
                                                    custom_alphabet = '', 
                                                    radix = 56, ), 
                                                date_shift_config = openapi_client.models.google_privacy_dlp_v2_date_shift_config.GooglePrivacyDlpV2DateShiftConfig(
                                                    lower_bound_days = 56, 
                                                    upper_bound_days = 56, ), 
                                                fixed_size_bucketing_config = openapi_client.models.google_privacy_dlp_v2_fixed_size_bucketing_config.GooglePrivacyDlpV2FixedSizeBucketingConfig(
                                                    bucket_size = 1.337, 
                                                    lower_bound = , 
                                                    upper_bound = , ), 
                                                redact_config = openapi_client.models.google_privacy_dlp_v2_redact_config.GooglePrivacyDlpV2RedactConfig(), 
                                                replace_config = openapi_client.models.google_privacy_dlp_v2_replace_value_config.GooglePrivacyDlpV2ReplaceValueConfig(
                                                    new_value = , ), 
                                                replace_dictionary_config = openapi_client.models.google_privacy_dlp_v2_replace_dictionary_config.GooglePrivacyDlpV2ReplaceDictionaryConfig(
                                                    word_list = openapi_client.models.google_privacy_dlp_v2_word_list.GooglePrivacyDlpV2WordList(
                                                        words = [
                                                            ''
                                                            ], ), ), 
                                                replace_with_info_type_config = openapi_client.models.google_privacy_dlp_v2_replace_with_info_type_config.GooglePrivacyDlpV2ReplaceWithInfoTypeConfig(), 
                                                time_part_config = openapi_client.models.google_privacy_dlp_v2_time_part_config.GooglePrivacyDlpV2TimePartConfig(
                                                    part_to_extract = 'TIME_PART_UNSPECIFIED', ), ), )
                                        ], ), 
                                record_transformations = openapi_client.models.google_privacy_dlp_v2_record_transformations.GooglePrivacyDlpV2RecordTransformations(
                                    field_transformations = [
                                        openapi_client.models.google_privacy_dlp_v2_field_transformation.GooglePrivacyDlpV2FieldTransformation(
                                            condition = openapi_client.models.google_privacy_dlp_v2_record_condition.GooglePrivacyDlpV2RecordCondition(
                                                expressions = openapi_client.models.google_privacy_dlp_v2_expressions.GooglePrivacyDlpV2Expressions(
                                                    conditions = openapi_client.models.google_privacy_dlp_v2_conditions.GooglePrivacyDlpV2Conditions(), 
                                                    logical_operator = 'LOGICAL_OPERATOR_UNSPECIFIED', ), ), 
                                            fields = [
                                                openapi_client.models.google_privacy_dlp_v2_field_id.GooglePrivacyDlpV2FieldId(
                                                    name = '', )
                                                ], )
                                        ], 
                                    record_suppressions = [
                                        openapi_client.models.google_privacy_dlp_v2_record_suppression.GooglePrivacyDlpV2RecordSuppression()
                                        ], ), 
                                transformation_error_handling = openapi_client.models.google_privacy_dlp_v2_transformation_error_handling.GooglePrivacyDlpV2TransformationErrorHandling(
                                    leave_untransformed = openapi_client.models.google_privacy_dlp_v2_leave_untransformed.GooglePrivacyDlpV2LeaveUntransformed(), 
                                    throw_error = openapi_client.models.google_privacy_dlp_v2_throw_error.GooglePrivacyDlpV2ThrowError(), ), ), 
                            description = '', 
                            display_name = '', 
                            name = '', 
                            update_time = '', ), 
                        snapshot_image_redact_template = openapi_client.models.google_privacy_dlp_v2_deidentify_template.GooglePrivacyDlpV2DeidentifyTemplate(
                            create_time = '', 
                            description = '', 
                            display_name = '', 
                            name = '', 
                            update_time = '', ), 
                        snapshot_structured_deidentify_template = , ), )
            )
        else:
            return GooglePrivacyDlpV2ActionDetails(
        )
        """

    def testGooglePrivacyDlpV2ActionDetails(self):
        """Test GooglePrivacyDlpV2ActionDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
