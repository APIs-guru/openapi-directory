# coding: utf-8

"""
    Sensitive Data Protection (DLP)

    Discover and protect your sensitive data. A fully managed service designed to help you discover, classify, and protect your valuable data assets with ease.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_privacy_dlp_v2_conditions import GooglePrivacyDlpV2Conditions

class TestGooglePrivacyDlpV2Conditions(unittest.TestCase):
    """GooglePrivacyDlpV2Conditions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GooglePrivacyDlpV2Conditions:
        """Test GooglePrivacyDlpV2Conditions
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GooglePrivacyDlpV2Conditions`
        """
        model = GooglePrivacyDlpV2Conditions()
        if include_optional:
            return GooglePrivacyDlpV2Conditions(
                conditions = [
                    openapi_client.models.google_privacy_dlp_v2_condition.GooglePrivacyDlpV2Condition(
                        field = openapi_client.models.google_privacy_dlp_v2_field_id.GooglePrivacyDlpV2FieldId(
                            name = '', ), 
                        operator = 'RELATIONAL_OPERATOR_UNSPECIFIED', 
                        value = openapi_client.models.google_privacy_dlp_v2_value.GooglePrivacyDlpV2Value(
                            boolean_value = True, 
                            date_value = openapi_client.models.google_type_date.GoogleTypeDate(
                                day = 56, 
                                month = 56, 
                                year = 56, ), 
                            day_of_week_value = 'DAY_OF_WEEK_UNSPECIFIED', 
                            float_value = 1.337, 
                            integer_value = '', 
                            string_value = '', 
                            time_value = openapi_client.models.google_type_time_of_day.GoogleTypeTimeOfDay(
                                hours = 56, 
                                minutes = 56, 
                                nanos = 56, 
                                seconds = 56, ), 
                            timestamp_value = '', ), )
                    ]
            )
        else:
            return GooglePrivacyDlpV2Conditions(
        )
        """

    def testGooglePrivacyDlpV2Conditions(self):
        """Test GooglePrivacyDlpV2Conditions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
