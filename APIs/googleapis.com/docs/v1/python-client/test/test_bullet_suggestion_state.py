# coding: utf-8

"""
    Google Docs API

    Reads and writes Google Docs documents.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.bullet_suggestion_state import BulletSuggestionState

class TestBulletSuggestionState(unittest.TestCase):
    """BulletSuggestionState unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BulletSuggestionState:
        """Test BulletSuggestionState
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BulletSuggestionState`
        """
        model = BulletSuggestionState()
        if include_optional:
            return BulletSuggestionState(
                list_id_suggested = True,
                nesting_level_suggested = True,
                text_style_suggestion_state = openapi_client.models.text_style_suggestion_state.TextStyleSuggestionState(
                    background_color_suggested = True, 
                    baseline_offset_suggested = True, 
                    bold_suggested = True, 
                    font_size_suggested = True, 
                    foreground_color_suggested = True, 
                    italic_suggested = True, 
                    link_suggested = True, 
                    small_caps_suggested = True, 
                    strikethrough_suggested = True, 
                    underline_suggested = True, 
                    weighted_font_family_suggested = True, )
            )
        else:
            return BulletSuggestionState(
        )
        """

    def testBulletSuggestionState(self):
        """Test BulletSuggestionState"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
