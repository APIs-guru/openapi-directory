# coding: utf-8

"""
    Google Docs API

    Reads and writes Google Docs documents.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list import List

class TestList(unittest.TestCase):
    """List unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> List:
        """Test List
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `List`
        """
        model = List()
        if include_optional:
            return List(
                list_properties = openapi_client.models.list_properties.ListProperties(
                    nesting_levels = [
                        openapi_client.models.nesting_level.NestingLevel(
                            bullet_alignment = 'BULLET_ALIGNMENT_UNSPECIFIED', 
                            glyph_format = '', 
                            glyph_symbol = '', 
                            glyph_type = 'GLYPH_TYPE_UNSPECIFIED', 
                            indent_first_line = openapi_client.models.dimension.Dimension(
                                magnitude = 1.337, 
                                unit = 'UNIT_UNSPECIFIED', ), 
                            indent_start = openapi_client.models.dimension.Dimension(
                                magnitude = 1.337, 
                                unit = 'UNIT_UNSPECIFIED', ), 
                            start_number = 56, 
                            text_style = openapi_client.models.text_style.TextStyle(
                                background_color = openapi_client.models.optional_color.OptionalColor(
                                    color = openapi_client.models.color.Color(
                                        rgb_color = openapi_client.models.rgb_color.RgbColor(
                                            blue = 1.337, 
                                            green = 1.337, 
                                            red = 1.337, ), ), ), 
                                baseline_offset = 'BASELINE_OFFSET_UNSPECIFIED', 
                                bold = True, 
                                font_size = , 
                                foreground_color = openapi_client.models.optional_color.OptionalColor(), 
                                italic = True, 
                                link = openapi_client.models.link.Link(
                                    bookmark_id = '', 
                                    heading_id = '', 
                                    url = '', ), 
                                small_caps = True, 
                                strikethrough = True, 
                                underline = True, 
                                weighted_font_family = openapi_client.models.weighted_font_family.WeightedFontFamily(
                                    font_family = '', 
                                    weight = 56, ), ), )
                        ], ),
                suggested_deletion_ids = [
                    ''
                    ],
                suggested_insertion_id = '',
                suggested_list_properties_changes = {
                    'key' : openapi_client.models.suggested_list_properties.SuggestedListProperties(
                        list_properties = openapi_client.models.list_properties.ListProperties(
                            nesting_levels = [
                                openapi_client.models.nesting_level.NestingLevel(
                                    bullet_alignment = 'BULLET_ALIGNMENT_UNSPECIFIED', 
                                    glyph_format = '', 
                                    glyph_symbol = '', 
                                    glyph_type = 'GLYPH_TYPE_UNSPECIFIED', 
                                    indent_first_line = openapi_client.models.dimension.Dimension(
                                        magnitude = 1.337, 
                                        unit = 'UNIT_UNSPECIFIED', ), 
                                    indent_start = openapi_client.models.dimension.Dimension(
                                        magnitude = 1.337, 
                                        unit = 'UNIT_UNSPECIFIED', ), 
                                    start_number = 56, 
                                    text_style = openapi_client.models.text_style.TextStyle(
                                        background_color = openapi_client.models.optional_color.OptionalColor(
                                            color = openapi_client.models.color.Color(
                                                rgb_color = openapi_client.models.rgb_color.RgbColor(
                                                    blue = 1.337, 
                                                    green = 1.337, 
                                                    red = 1.337, ), ), ), 
                                        baseline_offset = 'BASELINE_OFFSET_UNSPECIFIED', 
                                        bold = True, 
                                        font_size = , 
                                        foreground_color = openapi_client.models.optional_color.OptionalColor(), 
                                        italic = True, 
                                        link = openapi_client.models.link.Link(
                                            bookmark_id = '', 
                                            heading_id = '', 
                                            url = '', ), 
                                        small_caps = True, 
                                        strikethrough = True, 
                                        underline = True, 
                                        weighted_font_family = openapi_client.models.weighted_font_family.WeightedFontFamily(
                                            font_family = '', 
                                            weight = 56, ), ), )
                                ], ), 
                        list_properties_suggestion_state = openapi_client.models.list_properties_suggestion_state.ListPropertiesSuggestionState(
                            nesting_levels_suggestion_states = [
                                openapi_client.models.nesting_level_suggestion_state.NestingLevelSuggestionState(
                                    bullet_alignment_suggested = True, 
                                    glyph_format_suggested = True, 
                                    glyph_symbol_suggested = True, 
                                    glyph_type_suggested = True, 
                                    indent_first_line_suggested = True, 
                                    indent_start_suggested = True, 
                                    start_number_suggested = True, 
                                    text_style_suggestion_state = openapi_client.models.text_style_suggestion_state.TextStyleSuggestionState(
                                        background_color_suggested = True, 
                                        baseline_offset_suggested = True, 
                                        bold_suggested = True, 
                                        font_size_suggested = True, 
                                        foreground_color_suggested = True, 
                                        italic_suggested = True, 
                                        link_suggested = True, 
                                        small_caps_suggested = True, 
                                        strikethrough_suggested = True, 
                                        underline_suggested = True, 
                                        weighted_font_family_suggested = True, ), )
                                ], ), )
                    }
            )
        else:
            return List(
        )
        """

    def testList(self):
        """Test List"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
