# coding: utf-8

"""
    Google Docs API

    Reads and writes Google Docs documents.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_table_column_properties_request import UpdateTableColumnPropertiesRequest

class TestUpdateTableColumnPropertiesRequest(unittest.TestCase):
    """UpdateTableColumnPropertiesRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateTableColumnPropertiesRequest:
        """Test UpdateTableColumnPropertiesRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateTableColumnPropertiesRequest`
        """
        model = UpdateTableColumnPropertiesRequest()
        if include_optional:
            return UpdateTableColumnPropertiesRequest(
                column_indices = [
                    56
                    ],
                fields = '',
                table_column_properties = openapi_client.models.table_column_properties.TableColumnProperties(
                    width = openapi_client.models.dimension.Dimension(
                        magnitude = 1.337, 
                        unit = 'UNIT_UNSPECIFIED', ), 
                    width_type = 'WIDTH_TYPE_UNSPECIFIED', ),
                table_start_location = openapi_client.models.location.Location(
                    index = 56, 
                    segment_id = '', )
            )
        else:
            return UpdateTableColumnPropertiesRequest(
        )
        """

    def testUpdateTableColumnPropertiesRequest(self):
        """Test UpdateTableColumnPropertiesRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
