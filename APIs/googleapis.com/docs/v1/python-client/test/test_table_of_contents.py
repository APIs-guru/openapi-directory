# coding: utf-8

"""
    Google Docs API

    Reads and writes Google Docs documents.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.table_of_contents import TableOfContents

class TestTableOfContents(unittest.TestCase):
    """TableOfContents unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TableOfContents:
        """Test TableOfContents
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TableOfContents`
        """
        model = TableOfContents()
        if include_optional:
            return TableOfContents(
                content = [
                    openapi_client.models.structural_element.StructuralElement(
                        end_index = 56, 
                        paragraph = openapi_client.models.paragraph.Paragraph(
                            bullet = openapi_client.models.bullet.Bullet(
                                list_id = '', 
                                nesting_level = 56, 
                                text_style = openapi_client.models.text_style.TextStyle(
                                    background_color = openapi_client.models.optional_color.OptionalColor(
                                        color = openapi_client.models.color.Color(
                                            rgb_color = openapi_client.models.rgb_color.RgbColor(
                                                blue = 1.337, 
                                                green = 1.337, 
                                                red = 1.337, ), ), ), 
                                    baseline_offset = 'BASELINE_OFFSET_UNSPECIFIED', 
                                    bold = True, 
                                    font_size = openapi_client.models.dimension.Dimension(
                                        magnitude = 1.337, 
                                        unit = 'UNIT_UNSPECIFIED', ), 
                                    foreground_color = openapi_client.models.optional_color.OptionalColor(), 
                                    italic = True, 
                                    link = openapi_client.models.link.Link(
                                        bookmark_id = '', 
                                        heading_id = '', 
                                        url = '', ), 
                                    small_caps = True, 
                                    strikethrough = True, 
                                    underline = True, 
                                    weighted_font_family = openapi_client.models.weighted_font_family.WeightedFontFamily(
                                        font_family = '', 
                                        weight = 56, ), ), ), 
                            elements = [
                                openapi_client.models.paragraph_element.ParagraphElement(
                                    auto_text = openapi_client.models.auto_text.AutoText(
                                        suggested_deletion_ids = [
                                            ''
                                            ], 
                                        suggested_insertion_ids = [
                                            ''
                                            ], 
                                        suggested_text_style_changes = {
                                            'key' : openapi_client.models.suggested_text_style.SuggestedTextStyle(
                                                text_style_suggestion_state = openapi_client.models.text_style_suggestion_state.TextStyleSuggestionState(
                                                    background_color_suggested = True, 
                                                    baseline_offset_suggested = True, 
                                                    bold_suggested = True, 
                                                    font_size_suggested = True, 
                                                    foreground_color_suggested = True, 
                                                    italic_suggested = True, 
                                                    link_suggested = True, 
                                                    small_caps_suggested = True, 
                                                    strikethrough_suggested = True, 
                                                    underline_suggested = True, 
                                                    weighted_font_family_suggested = True, ), )
                                            }, 
                                        type = 'TYPE_UNSPECIFIED', ), 
                                    column_break = openapi_client.models.column_break.ColumnBreak(), 
                                    end_index = 56, 
                                    equation = openapi_client.models.equation.Equation(), 
                                    footnote_reference = openapi_client.models.footnote_reference.FootnoteReference(
                                        footnote_id = '', 
                                        footnote_number = '', ), 
                                    horizontal_rule = openapi_client.models.horizontal_rule.HorizontalRule(), 
                                    inline_object_element = openapi_client.models.inline_object_element.InlineObjectElement(
                                        inline_object_id = '', ), 
                                    page_break = openapi_client.models.page_break.PageBreak(), 
                                    person = openapi_client.models.person.Person(
                                        person_id = '', 
                                        person_properties = openapi_client.models.person_properties.PersonProperties(
                                            email = '', 
                                            name = '', ), ), 
                                    rich_link = openapi_client.models.rich_link.RichLink(
                                        rich_link_id = '', 
                                        rich_link_properties = openapi_client.models.rich_link_properties.RichLinkProperties(
                                            mime_type = '', 
                                            title = '', 
                                            uri = '', ), ), 
                                    start_index = 56, 
                                    text_run = openapi_client.models.text_run.TextRun(), )
                                ], 
                            paragraph_style = openapi_client.models.paragraph_style.ParagraphStyle(
                                alignment = 'ALIGNMENT_UNSPECIFIED', 
                                avoid_widow_and_orphan = True, 
                                border_between = openapi_client.models.paragraph_border.ParagraphBorder(
                                    dash_style = 'DASH_STYLE_UNSPECIFIED', 
                                    padding = openapi_client.models.dimension.Dimension(
                                        magnitude = 1.337, 
                                        unit = 'UNIT_UNSPECIFIED', ), 
                                    width = , ), 
                                border_bottom = openapi_client.models.paragraph_border.ParagraphBorder(
                                    dash_style = 'DASH_STYLE_UNSPECIFIED', ), 
                                border_left = , 
                                border_right = , 
                                border_top = , 
                                direction = 'CONTENT_DIRECTION_UNSPECIFIED', 
                                heading_id = '', 
                                indent_end = , 
                                indent_first_line = , 
                                indent_start = , 
                                keep_lines_together = True, 
                                keep_with_next = True, 
                                line_spacing = 1.337, 
                                named_style_type = 'NAMED_STYLE_TYPE_UNSPECIFIED', 
                                page_break_before = True, 
                                shading = openapi_client.models.shading.Shading(), 
                                space_above = , 
                                space_below = , 
                                spacing_mode = 'SPACING_MODE_UNSPECIFIED', 
                                tab_stops = [
                                    openapi_client.models.tab_stop.TabStop(
                                        alignment = 'TAB_STOP_ALIGNMENT_UNSPECIFIED', 
                                        offset = , )
                                    ], ), 
                            positioned_object_ids = [
                                ''
                                ], 
                            suggested_bullet_changes = {
                                'key' : openapi_client.models.suggested_bullet.SuggestedBullet(
                                    bullet_suggestion_state = openapi_client.models.bullet_suggestion_state.BulletSuggestionState(
                                        list_id_suggested = True, 
                                        nesting_level_suggested = True, ), )
                                }, 
                            suggested_paragraph_style_changes = {
                                'key' : openapi_client.models.suggested_paragraph_style.SuggestedParagraphStyle(
                                    paragraph_style_suggestion_state = openapi_client.models.paragraph_style_suggestion_state.ParagraphStyleSuggestionState(
                                        alignment_suggested = True, 
                                        avoid_widow_and_orphan_suggested = True, 
                                        border_between_suggested = True, 
                                        border_bottom_suggested = True, 
                                        border_left_suggested = True, 
                                        border_right_suggested = True, 
                                        border_top_suggested = True, 
                                        direction_suggested = True, 
                                        heading_id_suggested = True, 
                                        indent_end_suggested = True, 
                                        indent_first_line_suggested = True, 
                                        indent_start_suggested = True, 
                                        keep_lines_together_suggested = True, 
                                        keep_with_next_suggested = True, 
                                        line_spacing_suggested = True, 
                                        named_style_type_suggested = True, 
                                        page_break_before_suggested = True, 
                                        shading_suggestion_state = openapi_client.models.shading_suggestion_state.ShadingSuggestionState(
                                            background_color_suggested = True, ), 
                                        space_above_suggested = True, 
                                        space_below_suggested = True, 
                                        spacing_mode_suggested = True, ), )
                                }, 
                            suggested_positioned_object_ids = {
                                'key' : openapi_client.models.object_references.ObjectReferences(
                                    object_ids = [
                                        ''
                                        ], )
                                }, ), 
                        section_break = openapi_client.models.section_break.SectionBreak(
                            section_style = openapi_client.models.section_style.SectionStyle(
                                column_properties = [
                                    openapi_client.models.section_column_properties.SectionColumnProperties(
                                        padding_end = , )
                                    ], 
                                column_separator_style = 'COLUMN_SEPARATOR_STYLE_UNSPECIFIED', 
                                content_direction = 'CONTENT_DIRECTION_UNSPECIFIED', 
                                default_footer_id = '', 
                                default_header_id = '', 
                                even_page_footer_id = '', 
                                even_page_header_id = '', 
                                first_page_footer_id = '', 
                                first_page_header_id = '', 
                                flip_page_orientation = True, 
                                margin_bottom = , 
                                margin_footer = , 
                                margin_header = , 
                                margin_left = , 
                                margin_right = , 
                                margin_top = , 
                                page_number_start = 56, 
                                section_type = 'SECTION_TYPE_UNSPECIFIED', 
                                use_first_page_header_footer = True, ), ), 
                        start_index = 56, 
                        table = openapi_client.models.table.Table(
                            columns = 56, 
                            rows = 56, 
                            table_rows = [
                                openapi_client.models.table_row.TableRow(
                                    end_index = 56, 
                                    start_index = 56, 
                                    suggested_table_row_style_changes = {
                                        'key' : openapi_client.models.suggested_table_row_style.SuggestedTableRowStyle(
                                            table_row_style = openapi_client.models.table_row_style.TableRowStyle(
                                                min_row_height = , 
                                                prevent_overflow = True, 
                                                table_header = True, ), 
                                            table_row_style_suggestion_state = openapi_client.models.table_row_style_suggestion_state.TableRowStyleSuggestionState(
                                                min_row_height_suggested = True, ), )
                                        }, 
                                    table_cells = [
                                        openapi_client.models.table_cell.TableCell(
                                            end_index = 56, 
                                            start_index = 56, 
                                            suggested_table_cell_style_changes = {
                                                'key' : openapi_client.models.suggested_table_cell_style.SuggestedTableCellStyle(
                                                    table_cell_style = openapi_client.models.table_cell_style.TableCellStyle(
                                                        column_span = 56, 
                                                        content_alignment = 'CONTENT_ALIGNMENT_UNSPECIFIED', 
                                                        padding_bottom = , 
                                                        padding_left = , 
                                                        padding_right = , 
                                                        padding_top = , 
                                                        row_span = 56, ), 
                                                    table_cell_style_suggestion_state = openapi_client.models.table_cell_style_suggestion_state.TableCellStyleSuggestionState(
                                                        background_color_suggested = True, 
                                                        border_bottom_suggested = True, 
                                                        border_left_suggested = True, 
                                                        border_right_suggested = True, 
                                                        border_top_suggested = True, 
                                                        column_span_suggested = True, 
                                                        content_alignment_suggested = True, 
                                                        padding_bottom_suggested = True, 
                                                        padding_left_suggested = True, 
                                                        padding_right_suggested = True, 
                                                        padding_top_suggested = True, 
                                                        row_span_suggested = True, ), )
                                                }, 
                                            table_cell_style = openapi_client.models.table_cell_style.TableCellStyle(
                                                column_span = 56, 
                                                content_alignment = 'CONTENT_ALIGNMENT_UNSPECIFIED', 
                                                row_span = 56, ), )
                                        ], 
                                    table_row_style = openapi_client.models.table_row_style.TableRowStyle(
                                        prevent_overflow = True, 
                                        table_header = True, ), )
                                ], 
                            table_style = openapi_client.models.table_style.TableStyle(
                                table_column_properties = [
                                    openapi_client.models.table_column_properties.TableColumnProperties(
                                        width_type = 'WIDTH_TYPE_UNSPECIFIED', )
                                    ], ), ), 
                        table_of_contents = openapi_client.models.table_of_contents.TableOfContents(), )
                    ],
                suggested_deletion_ids = [
                    ''
                    ],
                suggested_insertion_ids = [
                    ''
                    ]
            )
        else:
            return TableOfContents(
        )
        """

    def testTableOfContents(self):
        """Test TableOfContents"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
