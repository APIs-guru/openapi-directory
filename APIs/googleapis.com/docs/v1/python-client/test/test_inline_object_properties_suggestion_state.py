# coding: utf-8

"""
    Google Docs API

    Reads and writes Google Docs documents.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.inline_object_properties_suggestion_state import InlineObjectPropertiesSuggestionState

class TestInlineObjectPropertiesSuggestionState(unittest.TestCase):
    """InlineObjectPropertiesSuggestionState unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InlineObjectPropertiesSuggestionState:
        """Test InlineObjectPropertiesSuggestionState
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InlineObjectPropertiesSuggestionState`
        """
        model = InlineObjectPropertiesSuggestionState()
        if include_optional:
            return InlineObjectPropertiesSuggestionState(
                embedded_object_suggestion_state = openapi_client.models.embedded_object_suggestion_state.EmbeddedObjectSuggestionState(
                    description_suggested = True, 
                    embedded_drawing_properties_suggestion_state = openapi_client.models.embedded_drawing_properties_suggestion_state.EmbeddedDrawingPropertiesSuggestionState(), 
                    embedded_object_border_suggestion_state = openapi_client.models.embedded_object_border_suggestion_state.EmbeddedObjectBorderSuggestionState(
                        color_suggested = True, 
                        dash_style_suggested = True, 
                        property_state_suggested = True, 
                        width_suggested = True, ), 
                    image_properties_suggestion_state = openapi_client.models.image_properties_suggestion_state.ImagePropertiesSuggestionState(
                        angle_suggested = True, 
                        brightness_suggested = True, 
                        content_uri_suggested = True, 
                        contrast_suggested = True, 
                        crop_properties_suggestion_state = openapi_client.models.crop_properties_suggestion_state.CropPropertiesSuggestionState(
                            angle_suggested = True, 
                            offset_bottom_suggested = True, 
                            offset_left_suggested = True, 
                            offset_right_suggested = True, 
                            offset_top_suggested = True, ), 
                        source_uri_suggested = True, 
                        transparency_suggested = True, ), 
                    linked_content_reference_suggestion_state = openapi_client.models.linked_content_reference_suggestion_state.LinkedContentReferenceSuggestionState(
                        sheets_chart_reference_suggestion_state = openapi_client.models.sheets_chart_reference_suggestion_state.SheetsChartReferenceSuggestionState(
                            chart_id_suggested = True, 
                            spreadsheet_id_suggested = True, ), ), 
                    margin_bottom_suggested = True, 
                    margin_left_suggested = True, 
                    margin_right_suggested = True, 
                    margin_top_suggested = True, 
                    size_suggestion_state = openapi_client.models.size_suggestion_state.SizeSuggestionState(
                        height_suggested = True, 
                        width_suggested = True, ), 
                    title_suggested = True, )
            )
        else:
            return InlineObjectPropertiesSuggestionState(
        )
        """

    def testInlineObjectPropertiesSuggestionState(self):
        """Test InlineObjectPropertiesSuggestionState"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
