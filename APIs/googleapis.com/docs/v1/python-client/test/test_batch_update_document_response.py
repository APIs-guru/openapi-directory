# coding: utf-8

"""
    Google Docs API

    Reads and writes Google Docs documents.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.batch_update_document_response import BatchUpdateDocumentResponse

class TestBatchUpdateDocumentResponse(unittest.TestCase):
    """BatchUpdateDocumentResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BatchUpdateDocumentResponse:
        """Test BatchUpdateDocumentResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BatchUpdateDocumentResponse`
        """
        model = BatchUpdateDocumentResponse()
        if include_optional:
            return BatchUpdateDocumentResponse(
                document_id = '',
                replies = [
                    openapi_client.models.response.Response(
                        create_footer = openapi_client.models.create_footer_response.CreateFooterResponse(
                            footer_id = '', ), 
                        create_footnote = openapi_client.models.create_footnote_response.CreateFootnoteResponse(
                            footnote_id = '', ), 
                        create_header = openapi_client.models.create_header_response.CreateHeaderResponse(
                            header_id = '', ), 
                        create_named_range = openapi_client.models.create_named_range_response.CreateNamedRangeResponse(
                            named_range_id = '', ), 
                        insert_inline_image = openapi_client.models.insert_inline_image_response.InsertInlineImageResponse(
                            object_id = '', ), 
                        insert_inline_sheets_chart = openapi_client.models.insert_inline_sheets_chart_response.InsertInlineSheetsChartResponse(
                            object_id = '', ), 
                        replace_all_text = openapi_client.models.replace_all_text_response.ReplaceAllTextResponse(
                            occurrences_changed = 56, ), )
                    ],
                write_control = openapi_client.models.write_control.WriteControl(
                    required_revision_id = '', 
                    target_revision_id = '', )
            )
        else:
            return BatchUpdateDocumentResponse(
        )
        """

    def testBatchUpdateDocumentResponse(self):
        """Test BatchUpdateDocumentResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
