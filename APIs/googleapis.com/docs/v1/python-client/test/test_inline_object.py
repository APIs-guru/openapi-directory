# coding: utf-8

"""
    Google Docs API

    Reads and writes Google Docs documents.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.inline_object import InlineObject

class TestInlineObject(unittest.TestCase):
    """InlineObject unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InlineObject:
        """Test InlineObject
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InlineObject`
        """
        model = InlineObject()
        if include_optional:
            return InlineObject(
                inline_object_properties = openapi_client.models.inline_object_properties.InlineObjectProperties(
                    embedded_object = openapi_client.models.embedded_object.EmbeddedObject(
                        description = '', 
                        embedded_drawing_properties = openapi_client.models.embedded_drawing_properties.EmbeddedDrawingProperties(), 
                        embedded_object_border = openapi_client.models.embedded_object_border.EmbeddedObjectBorder(
                            color = openapi_client.models.optional_color.OptionalColor(), 
                            dash_style = 'DASH_STYLE_UNSPECIFIED', 
                            property_state = 'RENDERED', 
                            width = openapi_client.models.dimension.Dimension(
                                magnitude = 1.337, 
                                unit = 'UNIT_UNSPECIFIED', ), ), 
                        image_properties = openapi_client.models.image_properties.ImageProperties(
                            angle = 1.337, 
                            brightness = 1.337, 
                            content_uri = '', 
                            contrast = 1.337, 
                            crop_properties = openapi_client.models.crop_properties.CropProperties(
                                angle = 1.337, 
                                offset_bottom = 1.337, 
                                offset_left = 1.337, 
                                offset_right = 1.337, 
                                offset_top = 1.337, ), 
                            source_uri = '', 
                            transparency = 1.337, ), 
                        linked_content_reference = openapi_client.models.linked_content_reference.LinkedContentReference(
                            sheets_chart_reference = openapi_client.models.sheets_chart_reference.SheetsChartReference(
                                chart_id = 56, 
                                spreadsheet_id = '', ), ), 
                        margin_bottom = openapi_client.models.dimension.Dimension(
                            magnitude = 1.337, 
                            unit = 'UNIT_UNSPECIFIED', ), 
                        margin_left = , 
                        margin_right = , 
                        margin_top = , 
                        size = openapi_client.models.size.Size(
                            height = , ), 
                        title = '', ), ),
                object_id = '',
                suggested_deletion_ids = [
                    ''
                    ],
                suggested_inline_object_properties_changes = {
                    'key' : openapi_client.models.suggested_inline_object_properties.SuggestedInlineObjectProperties(
                        inline_object_properties = openapi_client.models.inline_object_properties.InlineObjectProperties(
                            embedded_object = openapi_client.models.embedded_object.EmbeddedObject(
                                description = '', 
                                embedded_drawing_properties = openapi_client.models.embedded_drawing_properties.EmbeddedDrawingProperties(), 
                                embedded_object_border = openapi_client.models.embedded_object_border.EmbeddedObjectBorder(
                                    color = openapi_client.models.optional_color.OptionalColor(), 
                                    dash_style = 'DASH_STYLE_UNSPECIFIED', 
                                    property_state = 'RENDERED', 
                                    width = openapi_client.models.dimension.Dimension(
                                        magnitude = 1.337, 
                                        unit = 'UNIT_UNSPECIFIED', ), ), 
                                image_properties = openapi_client.models.image_properties.ImageProperties(
                                    angle = 1.337, 
                                    brightness = 1.337, 
                                    content_uri = '', 
                                    contrast = 1.337, 
                                    crop_properties = openapi_client.models.crop_properties.CropProperties(
                                        angle = 1.337, 
                                        offset_bottom = 1.337, 
                                        offset_left = 1.337, 
                                        offset_right = 1.337, 
                                        offset_top = 1.337, ), 
                                    source_uri = '', 
                                    transparency = 1.337, ), 
                                linked_content_reference = openapi_client.models.linked_content_reference.LinkedContentReference(
                                    sheets_chart_reference = openapi_client.models.sheets_chart_reference.SheetsChartReference(
                                        chart_id = 56, 
                                        spreadsheet_id = '', ), ), 
                                margin_bottom = openapi_client.models.dimension.Dimension(
                                    magnitude = 1.337, 
                                    unit = 'UNIT_UNSPECIFIED', ), 
                                margin_left = , 
                                margin_right = , 
                                margin_top = , 
                                size = openapi_client.models.size.Size(
                                    height = , ), 
                                title = '', ), ), 
                        inline_object_properties_suggestion_state = openapi_client.models.inline_object_properties_suggestion_state.InlineObjectPropertiesSuggestionState(
                            embedded_object_suggestion_state = openapi_client.models.embedded_object_suggestion_state.EmbeddedObjectSuggestionState(
                                description_suggested = True, 
                                embedded_drawing_properties_suggestion_state = openapi_client.models.embedded_drawing_properties_suggestion_state.EmbeddedDrawingPropertiesSuggestionState(), 
                                embedded_object_border_suggestion_state = openapi_client.models.embedded_object_border_suggestion_state.EmbeddedObjectBorderSuggestionState(
                                    color_suggested = True, 
                                    dash_style_suggested = True, 
                                    property_state_suggested = True, 
                                    width_suggested = True, ), 
                                image_properties_suggestion_state = openapi_client.models.image_properties_suggestion_state.ImagePropertiesSuggestionState(
                                    angle_suggested = True, 
                                    brightness_suggested = True, 
                                    content_uri_suggested = True, 
                                    contrast_suggested = True, 
                                    crop_properties_suggestion_state = openapi_client.models.crop_properties_suggestion_state.CropPropertiesSuggestionState(
                                        angle_suggested = True, 
                                        offset_bottom_suggested = True, 
                                        offset_left_suggested = True, 
                                        offset_right_suggested = True, 
                                        offset_top_suggested = True, ), 
                                    source_uri_suggested = True, 
                                    transparency_suggested = True, ), 
                                linked_content_reference_suggestion_state = openapi_client.models.linked_content_reference_suggestion_state.LinkedContentReferenceSuggestionState(
                                    sheets_chart_reference_suggestion_state = openapi_client.models.sheets_chart_reference_suggestion_state.SheetsChartReferenceSuggestionState(
                                        chart_id_suggested = True, 
                                        spreadsheet_id_suggested = True, ), ), 
                                margin_bottom_suggested = True, 
                                margin_left_suggested = True, 
                                margin_right_suggested = True, 
                                margin_top_suggested = True, 
                                size_suggestion_state = openapi_client.models.size_suggestion_state.SizeSuggestionState(
                                    height_suggested = True, 
                                    width_suggested = True, ), 
                                title_suggested = True, ), ), )
                    },
                suggested_insertion_id = ''
            )
        else:
            return InlineObject(
        )
        """

    def testInlineObject(self):
        """Test InlineObject"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
