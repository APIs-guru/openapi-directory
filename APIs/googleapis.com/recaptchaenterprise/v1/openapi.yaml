openapi: 3.0.0
servers:
  - url: https://recaptchaenterprise.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Help protect your website from fraudulent activity, spam, and abuse without creating friction.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: reCAPTCHA Enterprise API
  version: v1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: openapi
      url: https://recaptchaenterprise.googleapis.com/$discovery/rest?version=v1
      version: "3.0"
  x-providerName: googleapis.com
  x-serviceName: recaptchaenterprise
externalDocs:
  url: https://cloud.google.com/recaptcha-enterprise/
tags:
  - name: projects
paths:
  /v1/{key}:retrieveLegacySecretKey:
    get:
      description: Returns the secret key related to the specified public key. You must use the legacy secret key only in a 3rd party integration with legacy reCAPTCHA.
      operationId: recaptchaenterprise.projects.keys.retrieveLegacySecretKey
      parameters:
        - description: Required. The public key name linked to the requested secret key in the format `projects/{project}/keys/{key}`.
          in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1RetrieveLegacySecretKeyResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:
    delete:
      description: Deletes the specified key.
      operationId: recaptchaenterprise.projects.keys.delete
      parameters:
        - description: Required. The name of the key to be deleted, in the format `projects/{project}/keys/{key}`.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Get some aggregated metrics for a Key. This data can be used to build dashboards.
      operationId: recaptchaenterprise.projects.keys.getMetrics
      parameters:
        - description: Required. The name of the requested metrics, in the format `projects/{project}/keys/{key}/metrics`.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1Metrics"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates the specified key.
      operationId: recaptchaenterprise.projects.keys.patch
      parameters:
        - description: Identifier. The resource name for the Key in the format `projects/{project}/keys/{key}`.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. The mask to control which fields of the key get updated. If the mask is not present, all fields will be updated.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:annotate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Annotates a previously created Assessment to provide additional information on whether the event turned out to be authentic or fraudulent.
      operationId: recaptchaenterprise.projects.assessments.annotate
      parameters:
        - description: Required. The resource name of the Assessment, in the format `projects/{project}/assessments/{assessment}`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:migrate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Migrates an existing key from reCAPTCHA to reCAPTCHA Enterprise. Once a key is migrated, it can be used from either product. SiteVerify requests are billed as CreateAssessment calls. You must be authenticated as one of the current owners of the reCAPTCHA Key, and your user must have the reCAPTCHA Enterprise Admin IAM role in the destination project.
      operationId: recaptchaenterprise.projects.keys.migrate
      parameters:
        - description: Required. The name of the key to be migrated, in the format `projects/{project}/keys/{key}`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1MigrateKeyRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/assessments:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an Assessment of the likelihood an event is legitimate.
      operationId: recaptchaenterprise.projects.assessments.create
      parameters:
        - description: Required. The name of the project in which the assessment will be created, in the format `projects/{project}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1Assessment"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1Assessment"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/firewallpolicies:
    get:
      description: Returns the list of all firewall policies that belong to a project.
      operationId: recaptchaenterprise.projects.firewallpolicies.list
      parameters:
        - description: Required. The name of the project to list the policies for, in the format `projects/{project}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The maximum number of policies to return. Default is 10. Max limit is 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The next_page_token value returned from a previous. ListFirewallPoliciesRequest, if any.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1ListFirewallPoliciesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new FirewallPolicy, specifying conditions at which reCAPTCHA Enterprise actions can be executed. A project may have a maximum of 1000 policies.
      operationId: recaptchaenterprise.projects.firewallpolicies.create
      parameters:
        - description: Required. The name of the project this policy will apply to, in the format `projects/{project}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicy"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/firewallpolicies:reorder:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Reorders all firewall policies.
      operationId: recaptchaenterprise.projects.firewallpolicies.reorder
      parameters:
        - description: Required. The name of the project to list the policies for, in the format `projects/{project}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1ReorderFirewallPoliciesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1ReorderFirewallPoliciesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/keys:
    get:
      description: Returns the list of all keys that belong to a project.
      operationId: recaptchaenterprise.projects.keys.list
      parameters:
        - description: Required. The name of the project that contains the keys that will be listed, in the format `projects/{project}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The maximum number of keys to return. Default is 10. Max limit is 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The next_page_token value returned from a previous. ListKeysRequest, if any.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1ListKeysResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new reCAPTCHA Enterprise key.
      operationId: recaptchaenterprise.projects.keys.create
      parameters:
        - description: Required. The name of the project in which the key will be created, in the format `projects/{project}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/memberships:
    get:
      description: Get memberships in a group of related accounts.
      operationId: recaptchaenterprise.projects.relatedaccountgroups.memberships.list
      parameters:
        - description: Required. The resource name for the related account group in the format `projects/{project}/relatedaccountgroups/{relatedaccountgroup}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The maximum number of accounts to return. The service might return fewer than this value. If unspecified, at most 50 accounts are returned. The maximum value is 1000; values above 1000 are coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. A page token, received from a previous `ListRelatedAccountGroupMemberships` call. When paginating, all other parameters provided to `ListRelatedAccountGroupMemberships` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupMembershipsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/relatedaccountgroups:
    get:
      description: List groups of related accounts.
      operationId: recaptchaenterprise.projects.relatedaccountgroups.list
      parameters:
        - description: Required. The name of the project to list related account groups from, in the format `projects/{project}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The maximum number of groups to return. The service might return fewer than this value. If unspecified, at most 50 groups are returned. The maximum value is 1000; values above 1000 are coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. A page token, received from a previous `ListRelatedAccountGroups` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRelatedAccountGroups` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{project}/relatedaccountgroupmemberships:search:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Search group memberships related to a given account.
      operationId: recaptchaenterprise.projects.relatedaccountgroupmemberships.search
      parameters:
        - description: "Required. The name of the project to search related account group memberships from. Specify the project name in the following format: `projects/{project}`."
          in: path
          name: project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment:
      description: Account defender risk assessment.
      properties:
        labels:
          description: Output only. Labels for this request.
          items:
            enum:
              - ACCOUNT_DEFENDER_LABEL_UNSPECIFIED
              - PROFILE_MATCH
              - SUSPICIOUS_LOGIN_ACTIVITY
              - SUSPICIOUS_ACCOUNT_CREATION
              - RELATED_ACCOUNTS_NUMBER_HIGH
            type: string
          readOnly: true
          type: array
      type: object
    GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo:
      description: Information about account verification, used for identity verification.
      properties:
        endpoints:
          description: Optional. Endpoints that can be used for identity verification.
          items:
            $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1EndpointVerificationInfo"
          type: array
        languageCode:
          description: Optional. Language code preference for the verification message, set as a IETF BCP 47 language code.
          type: string
        latestVerificationResult:
          description: Output only. Result of the latest account verification challenge.
          enum:
            - RESULT_UNSPECIFIED
            - SUCCESS_USER_VERIFIED
            - ERROR_USER_NOT_VERIFIED
            - ERROR_SITE_ONBOARDING_INCOMPLETE
            - ERROR_RECIPIENT_NOT_ALLOWED
            - ERROR_RECIPIENT_ABUSE_LIMIT_EXHAUSTED
            - ERROR_CRITICAL_INTERNAL
            - ERROR_CUSTOMER_QUOTA_EXHAUSTED
            - ERROR_VERIFICATION_BYPASSED
            - ERROR_VERDICT_MISMATCH
          readOnly: true
          type: string
        username:
          deprecated: true
          description: Username of the account that is being verified. Deprecated. Customers should now provide the `account_id` field in `event.user_info`.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1AndroidKeySettings:
      description: Settings specific to keys that can be used by Android apps.
      properties:
        allowAllPackageNames:
          description: Optional. If set to true, allowed_package_names are not enforced.
          type: boolean
        allowedPackageNames:
          description: "Optional. Android package names of apps allowed to use the key. Example: 'com.companyname.appname'"
          items:
            type: string
          type: array
        supportNonGoogleAppStoreDistribution:
          description: Optional. Set to true for keys that are used in an Android application that is available for download in app stores in addition to the Google Play Store.
          type: boolean
      type: object
    GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest:
      description: The request message to annotate an Assessment.
      properties:
        accountId:
          description: Optional. A stable account identifier to apply to the assessment. This is an alternative to setting `account_id` in `CreateAssessment`, for example when a stable account identifier is not yet known in the initial request.
          type: string
        annotation:
          description: Optional. The annotation that will be assigned to the Event. This field can be left empty to provide reasons that apply to an event without concluding whether the event is legitimate or fraudulent.
          enum:
            - ANNOTATION_UNSPECIFIED
            - LEGITIMATE
            - FRAUDULENT
            - PASSWORD_CORRECT
            - PASSWORD_INCORRECT
          type: string
          x-enumDeprecated:
            - false
            - false
            - false
            - true
            - true
        hashedAccountId:
          description: Optional. A stable hashed account identifier to apply to the assessment. This is an alternative to setting `hashed_account_id` in `CreateAssessment`, for example when a stable account identifier is not yet known in the initial request.
          format: byte
          type: string
        reasons:
          description: Optional. Reasons for the annotation that are assigned to the event.
          items:
            enum:
              - REASON_UNSPECIFIED
              - CHARGEBACK
              - CHARGEBACK_FRAUD
              - CHARGEBACK_DISPUTE
              - REFUND
              - REFUND_FRAUD
              - TRANSACTION_ACCEPTED
              - TRANSACTION_DECLINED
              - PAYMENT_HEURISTICS
              - INITIATED_TWO_FACTOR
              - PASSED_TWO_FACTOR
              - FAILED_TWO_FACTOR
              - CORRECT_PASSWORD
              - INCORRECT_PASSWORD
              - SOCIAL_SPAM
            type: string
          type: array
        transactionEvent:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionEvent"
          description: Optional. If the assessment is part of a payment transaction, provide details on payment lifecycle events that occur in the transaction.
      type: object
    GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse:
      description: Empty response for AnnotateAssessment.
      properties: {}
      type: object
    GoogleCloudRecaptchaenterpriseV1AppleDeveloperId:
      description: Contains fields that are required to perform Apple-specific integrity checks.
      properties:
        keyId:
          description: Required. The Apple developer key ID (10-character string).
          type: string
        privateKey:
          description: Required. Input only. A private key (downloaded as a text file with a .p8 file extension) generated for your Apple Developer account. Ensure that Apple DeviceCheck is enabled for the private key.
          type: string
        teamId:
          description: Required. The Apple team ID (10-character string) owning the provisioning profile used to build your application.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1Assessment:
      description: A reCAPTCHA Enterprise assessment resource.
      properties:
        accountDefenderAssessment:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment"
          description: Output only. Assessment returned by account defender when an account identifier is provided.
          readOnly: true
        accountVerification:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo"
          description: Optional. Account verification information for identity verification. The assessment event must include a token and site key to use this feature.
        event:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1Event"
          description: Optional. The event being assessed.
        firewallPolicyAssessment:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicyAssessment"
          description: Output only. Assessment returned when firewall policies belonging to the project are evaluated using the field firewall_policy_evaluation.
          readOnly: true
        fraudPreventionAssessment:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment"
          description: Output only. Assessment returned by Fraud Prevention when TransactionData is provided.
          readOnly: true
        fraudSignals:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1FraudSignals"
          description: Output only. Fraud Signals specific to the users involved in a payment transaction.
          readOnly: true
        name:
          description: Output only. Identifier. The resource name for the Assessment in the format `projects/{project}/assessments/{assessment}`.
          readOnly: true
          type: string
        privatePasswordLeakVerification:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification"
          description: Optional. The private password leak verification field contains the parameters that are used to to check for leaks privately without sharing user credentials.
        riskAnalysis:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1RiskAnalysis"
          description: Output only. The risk analysis result for the event being assessed.
          readOnly: true
        tokenProperties:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1TokenProperties"
          description: Output only. Properties of the provided event token.
          readOnly: true
      type: object
    GoogleCloudRecaptchaenterpriseV1ChallengeMetrics:
      description: Metrics related to challenges.
      properties:
        failedCount:
          description: Count of submitted challenge solutions that were incorrect or otherwise deemed suspicious such that a subsequent challenge was triggered.
          format: int64
          type: string
        nocaptchaCount:
          description: Count of nocaptchas (successful verification without a challenge) issued.
          format: int64
          type: string
        pageloadCount:
          description: Count of reCAPTCHA checkboxes or badges rendered. This is mostly equivalent to a count of pageloads for pages that include reCAPTCHA.
          format: int64
          type: string
        passedCount:
          description: Count of nocaptchas (successful verification without a challenge) plus submitted challenge solutions that were correct and resulted in verification.
          format: int64
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1EndpointVerificationInfo:
      description: Information about a verification endpoint that can be used for 2FA.
      properties:
        emailAddress:
          description: Email address for which to trigger a verification request.
          type: string
        lastVerificationTime:
          description: Output only. Timestamp of the last successful verification for the endpoint, if any.
          format: google-datetime
          readOnly: true
          type: string
        phoneNumber:
          description: Phone number for which to trigger a verification request. Should be given in E.164 format.
          type: string
        requestToken:
          description: Output only. Token to provide to the client to trigger endpoint verification. It must be used within 15 minutes.
          readOnly: true
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1Event:
      description: The event being assessed.
      properties:
        expectedAction:
          description: Optional. The expected action for this type of event. This should be the same action provided at token generation time on client-side platforms already integrated with recaptcha enterprise.
          type: string
        express:
          description: Optional. Flag for a reCAPTCHA express request for an assessment without a token. If enabled, `site_key` must reference a SCORE key with WAF feature set to EXPRESS.
          type: boolean
        firewallPolicyEvaluation:
          description: Optional. Flag for enabling firewall policy config assessment. If this flag is enabled, the firewall policy will be evaluated and a suggested firewall action will be returned in the response.
          type: boolean
        hashedAccountId:
          deprecated: true
          description: "Optional. Deprecated: use `user_info.account_id` instead. Unique stable hashed user identifier for the request. The identifier must be hashed using hmac-sha256 with stable secret."
          format: byte
          type: string
        headers:
          description: Optional. HTTP header information about the request.
          items:
            type: string
          type: array
        ja3:
          description: Optional. JA3 fingerprint for SSL clients.
          type: string
        requestedUri:
          description: Optional. The URI resource the user requested that triggered an assessment.
          type: string
        siteKey:
          description: Optional. The site key that was used to invoke reCAPTCHA Enterprise on your site and generate the token.
          type: string
        token:
          description: Optional. The user response token provided by the reCAPTCHA Enterprise client-side integration on your site.
          type: string
        transactionData:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionData"
          description: Optional. Data describing a payment transaction to be assessed. Sending this data enables reCAPTCHA Enterprise Fraud Prevention and the FraudPreventionAssessment component in the response.
        userAgent:
          description: Optional. The user agent present in the request from the user's device related to this event.
          type: string
        userInfo:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1UserInfo"
          description: Optional. Information about the user that generates this event, when they can be identified. They are often identified through the use of an account for logged-in requests or login/registration requests, or by providing user identifiers for guest actions like checkout.
        userIpAddress:
          description: Optional. The IP address in the request from the user's device related to this event.
          type: string
        wafTokenAssessment:
          description: Optional. Flag for running WAF token assessment. If enabled, the token must be specified, and have been created by a WAF-enabled key.
          type: boolean
      type: object
    GoogleCloudRecaptchaenterpriseV1FirewallAction:
      description: An individual action. Each action represents what to do if a policy matches.
      properties:
        allow:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallActionAllowAction"
          description: The user request did not match any policy and should be allowed access to the requested resource.
        block:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallActionBlockAction"
          description: This action will deny access to a given page. The user will get an HTTP error code.
        includeRecaptchaScript:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallActionIncludeRecaptchaScriptAction"
          description: This action will inject reCAPTCHA JavaScript code into the HTML page returned by the site backend.
        redirect:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallActionRedirectAction"
          description: This action will redirect the request to a ReCaptcha interstitial to attach a token.
        setHeader:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallActionSetHeaderAction"
          description: This action will set a custom header but allow the request to continue to the customer backend.
        substitute:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallActionSubstituteAction"
          description: This action will transparently serve a different page to an offending user.
      type: object
    GoogleCloudRecaptchaenterpriseV1FirewallActionAllowAction:
      description: An allow action continues processing a request unimpeded.
      properties: {}
      type: object
    GoogleCloudRecaptchaenterpriseV1FirewallActionBlockAction:
      description: A block action serves an HTTP error code a prevents the request from hitting the backend.
      properties: {}
      type: object
    GoogleCloudRecaptchaenterpriseV1FirewallActionIncludeRecaptchaScriptAction:
      description: An include reCAPTCHA script action involves injecting reCAPTCHA JavaScript code into the HTML returned by the site backend. This reCAPTCHA script is tasked with collecting user signals on the requested web page, issuing tokens as a cookie within the site domain, and enabling their utilization in subsequent page requests.
      properties: {}
      type: object
    GoogleCloudRecaptchaenterpriseV1FirewallActionRedirectAction:
      description: A redirect action returns a 307 (temporary redirect) response, pointing the user to a ReCaptcha interstitial page to attach a token.
      properties: {}
      type: object
    GoogleCloudRecaptchaenterpriseV1FirewallActionSetHeaderAction:
      description: A set header action sets a header and forwards the request to the backend. This can be used to trigger custom protection implemented on the backend.
      properties:
        key:
          description: Optional. The header key to set in the request to the backend server.
          type: string
        value:
          description: Optional. The header value to set in the request to the backend server.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1FirewallActionSubstituteAction:
      description: A substitute action transparently serves a different page than the one requested.
      properties:
        path:
          description: 'Optional. The address to redirect to. The target is a relative path in the current host. Example: "/blog/404.html".'
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1FirewallPolicy:
      description: A FirewallPolicy represents a single matching pattern and resulting actions to take.
      properties:
        actions:
          description: Optional. The actions that the caller should take regarding user access. There should be at most one terminal action. A terminal action is any action that forces a response, such as `AllowAction`, `BlockAction` or `SubstituteAction`. Zero or more non-terminal actions such as `SetHeader` might be specified. A single policy can contain up to 16 actions.
          items:
            $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallAction"
          type: array
        condition:
          description: Optional. A CEL (Common Expression Language) conditional expression that specifies if this policy applies to an incoming user request. If this condition evaluates to true and the requested path matched the path pattern, the associated actions should be executed by the caller. The condition string is checked for CEL syntax correctness on creation. For more information, see the [CEL spec](https://github.com/google/cel-spec) and its [language definition](https://github.com/google/cel-spec/blob/master/doc/langdef.md). A condition has a max length of 500 characters.
          type: string
        description:
          description: Optional. A description of what this policy aims to achieve, for convenience purposes. The description can at most include 256 UTF-8 characters.
          type: string
        name:
          description: Identifier. The resource name for the FirewallPolicy in the format `projects/{project}/firewallpolicies/{firewallpolicy}`.
          type: string
        path:
          description: Optional. The path for which this policy applies, specified as a glob pattern. For more information on glob, see the [manual page](https://man7.org/linux/man-pages/man7/glob.7.html). A path has a max length of 200 characters.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1FirewallPolicyAssessment:
      description: Policy config assessment.
      properties:
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Output only. If the processing of a policy config fails, an error will be populated and the firewall_policy will be left empty.
          readOnly: true
        firewallPolicy:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicy"
          description: Output only. The policy that matched the request. If more than one policy may match, this is the first match. If no policy matches the incoming request, the policy field will be left empty.
          readOnly: true
      type: object
    GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment:
      description: Assessment for Fraud Prevention.
      properties:
        behavioralTrustVerdict:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentBehavioralTrustVerdict"
          description: Output only. Assessment of this transaction for behavioral trust.
          readOnly: true
        cardTestingVerdict:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentCardTestingVerdict"
          description: Output only. Assessment of this transaction for risk of being part of a card testing attack.
          readOnly: true
        stolenInstrumentVerdict:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentStolenInstrumentVerdict"
          description: Output only. Assessment of this transaction for risk of a stolen instrument.
          readOnly: true
        transactionRisk:
          description: Output only. Probability of this transaction being fraudulent. Summarizes the combined risk of attack vectors below. Values are from 0.0 (lowest) to 1.0 (highest).
          format: float
          readOnly: true
          type: number
      type: object
    GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentBehavioralTrustVerdict:
      description: Information about behavioral trust of the transaction.
      properties:
        trust:
          description: Output only. Probability of this transaction attempt being executed in a behaviorally trustworthy way. Values are from 0.0 (lowest) to 1.0 (highest).
          format: float
          readOnly: true
          type: number
      type: object
    GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentCardTestingVerdict:
      description: Information about card testing fraud, where an adversary is testing fraudulently obtained cards or brute forcing their details.
      properties:
        risk:
          description: Output only. Probability of this transaction attempt being part of a card testing attack. Values are from 0.0 (lowest) to 1.0 (highest).
          format: float
          readOnly: true
          type: number
      type: object
    GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentStolenInstrumentVerdict:
      description: Information about stolen instrument fraud, where the user is not the legitimate owner of the instrument being used for the purchase.
      properties:
        risk:
          description: Output only. Probability of this transaction being executed with a stolen instrument. Values are from 0.0 (lowest) to 1.0 (highest).
          format: float
          readOnly: true
          type: number
      type: object
    GoogleCloudRecaptchaenterpriseV1FraudSignals:
      description: Fraud signals describing users and cards involved in the transaction.
      properties:
        cardSignals:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1FraudSignalsCardSignals"
          description: Output only. Signals describing the payment card or cards used in this transaction.
          readOnly: true
        userSignals:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1FraudSignalsUserSignals"
          description: Output only. Signals describing the end user in this transaction.
          readOnly: true
      type: object
    GoogleCloudRecaptchaenterpriseV1FraudSignalsCardSignals:
      description: Signals describing the payment card used in this transaction.
      properties:
        cardLabels:
          description: Output only. The labels for the payment card in this transaction.
          items:
            enum:
              - CARD_LABEL_UNSPECIFIED
              - PREPAID
              - VIRTUAL
              - UNEXPECTED_LOCATION
            type: string
          readOnly: true
          type: array
      type: object
    GoogleCloudRecaptchaenterpriseV1FraudSignalsUserSignals:
      description: Signals describing the user involved in this transaction.
      properties:
        activeDaysLowerBound:
          description: Output only. This user (based on email, phone, and other identifiers) has been seen on the internet for at least this number of days.
          format: int32
          readOnly: true
          type: integer
        syntheticRisk:
          description: Output only. Likelihood (from 0.0 to 1.0) this user includes synthetic components in their identity, such as a randomly generated email address, temporary phone number, or fake shipping address.
          format: float
          readOnly: true
          type: number
      type: object
    GoogleCloudRecaptchaenterpriseV1IOSKeySettings:
      description: Settings specific to keys that can be used by iOS apps.
      properties:
        allowAllBundleIds:
          description: Optional. If set to true, allowed_bundle_ids are not enforced.
          type: boolean
        allowedBundleIds:
          description: "Optional. iOS bundle ids of apps allowed to use the key. Example: 'com.companyname.productname.appname'"
          items:
            type: string
          type: array
        appleDeveloperId:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1AppleDeveloperId"
          description: Optional. Apple Developer account details for the app that is protected by the reCAPTCHA Key. reCAPTCHA Enterprise leverages platform-specific checks like Apple App Attest and Apple DeviceCheck to protect your app from abuse. Providing these fields allows reCAPTCHA Enterprise to get a better assessment of the integrity of your app.
      type: object
    GoogleCloudRecaptchaenterpriseV1Key:
      description: A key used to identify and configure applications (web and/or mobile) that use reCAPTCHA Enterprise.
      properties:
        androidSettings:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1AndroidKeySettings"
          description: Settings for keys that can be used by Android apps.
        createTime:
          description: Output only. The timestamp corresponding to the creation of this key.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: Required. Human-readable display name of this key. Modifiable by user.
          type: string
        iosSettings:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1IOSKeySettings"
          description: Settings for keys that can be used by iOS apps.
        labels:
          additionalProperties:
            type: string
          description: Optional. See [Creating and managing labels] (https://cloud.google.com/recaptcha-enterprise/docs/labels).
          type: object
        name:
          description: Identifier. The resource name for the Key in the format `projects/{project}/keys/{key}`.
          type: string
        testingOptions:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1TestingOptions"
          description: Optional. Options for user acceptance testing.
        wafSettings:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1WafSettings"
          description: Optional. Settings for WAF
        webSettings:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1WebKeySettings"
          description: Settings for keys that can be used by websites.
      type: object
    GoogleCloudRecaptchaenterpriseV1ListFirewallPoliciesResponse:
      description: Response to request to list firewall policies belonging to a key.
      properties:
        firewallPolicies:
          description: Policy details.
          items:
            $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicy"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results. It is set to empty if no policies remain in results.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1ListKeysResponse:
      description: Response to request to list keys in a project.
      properties:
        keys:
          description: Key details.
          items:
            $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results. It is set to empty if no keys remain in results.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupMembershipsResponse:
      description: The response to a `ListRelatedAccountGroupMemberships` call.
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        relatedAccountGroupMemberships:
          description: The memberships listed by the query.
          items:
            $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership"
          type: array
      type: object
    GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse:
      description: The response to a `ListRelatedAccountGroups` call.
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        relatedAccountGroups:
          description: The groups of related accounts listed by the query.
          items:
            $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1RelatedAccountGroup"
          type: array
      type: object
    GoogleCloudRecaptchaenterpriseV1Metrics:
      description: Metrics for a single Key.
      properties:
        challengeMetrics:
          description: Metrics will be continuous and in order by dates, and in the granularity of day. Only challenge-based keys (CHECKBOX, INVISIBLE), will have challenge-based data.
          items:
            $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1ChallengeMetrics"
          type: array
        name:
          description: Output only. Identifier. The name of the metrics, in the format `projects/{project}/keys/{key}/metrics`.
          readOnly: true
          type: string
        scoreMetrics:
          description: Metrics will be continuous and in order by dates, and in the granularity of day. All Key types should have score-based data.
          items:
            $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1ScoreMetrics"
          type: array
        startTime:
          description: Inclusive start time aligned to a day (UTC).
          format: google-datetime
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1MigrateKeyRequest:
      description: The migrate key request message.
      properties:
        skipBillingCheck:
          description: Optional. If true, skips the billing check. A reCAPTCHA Enterprise key or migrated key behaves differently than a reCAPTCHA (non-Enterprise version) key when you reach a quota limit (see https://cloud.google.com/recaptcha-enterprise/quotas#quota_limit). To avoid any disruption of your usage, we check that a billing account is present. If your usage of reCAPTCHA is under the free quota, you can safely skip the billing check and proceed with the migration. See https://cloud.google.com/recaptcha-enterprise/docs/billing-information.
          type: boolean
      type: object
    GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification:
      description: Private password leak verification info.
      properties:
        encryptedLeakMatchPrefixes:
          description: Output only. List of prefixes of the encrypted potential password leaks that matched the given parameters. They must be compared with the client-side decryption prefix of `reencrypted_user_credentials_hash`
          items:
            format: byte
            type: string
          readOnly: true
          type: array
        encryptedUserCredentialsHash:
          description: Optional. Encrypted Scrypt hash of the canonicalized username+password. It is re-encrypted by the server and returned through `reencrypted_user_credentials_hash`.
          format: byte
          type: string
        lookupHashPrefix:
          description: Required. Exactly 26-bit prefix of the SHA-256 hash of the canonicalized username. It is used to look up password leaks associated with that hash prefix.
          format: byte
          type: string
        reencryptedUserCredentialsHash:
          description: Output only. Corresponds to the re-encryption of the `encrypted_user_credentials_hash` field. It is used to match potential password leaks within `encrypted_leak_match_prefixes`.
          format: byte
          readOnly: true
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1RelatedAccountGroup:
      description: A group of related accounts.
      properties:
        name:
          description: Required. Identifier. The resource name for the related account group in the format `projects/{project}/relatedaccountgroups/{related_account_group}`.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership:
      description: A membership in a group of related accounts.
      properties:
        accountId:
          description: The unique stable account identifier of the member. The identifier corresponds to an `account_id` provided in a previous `CreateAssessment` or `AnnotateAssessment` call.
          type: string
        hashedAccountId:
          deprecated: true
          description: "Deprecated: use `account_id` instead. The unique stable hashed account identifier of the member. The identifier corresponds to a `hashed_account_id` provided in a previous `CreateAssessment` or `AnnotateAssessment` call."
          format: byte
          type: string
        name:
          description: Required. Identifier. The resource name for this membership in the format `projects/{project}/relatedaccountgroups/{relatedaccountgroup}/memberships/{membership}`.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1ReorderFirewallPoliciesRequest:
      description: The reorder firewall policies request message.
      properties:
        names:
          description: Required. A list containing all policy names, in the new order. Each name is in the format `projects/{project}/firewallpolicies/{firewallpolicy}`.
          items:
            type: string
          type: array
      type: object
    GoogleCloudRecaptchaenterpriseV1ReorderFirewallPoliciesResponse:
      description: The reorder firewall policies response message.
      properties: {}
      type: object
    GoogleCloudRecaptchaenterpriseV1RetrieveLegacySecretKeyResponse:
      description: Secret key is used only in legacy reCAPTCHA. It must be used in a 3rd party integration with legacy reCAPTCHA.
      properties:
        legacySecretKey:
          description: The secret key (also known as shared secret) authorizes communication between your application backend and the reCAPTCHA Enterprise server to create an assessment. The secret key needs to be kept safe for security purposes.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1RiskAnalysis:
      description: Risk analysis result for an event.
      properties:
        extendedVerdictReasons:
          description: Output only. Extended verdict reasons to be used for experimentation only. The set of possible reasons is subject to change.
          items:
            type: string
          readOnly: true
          type: array
        reasons:
          description: Output only. Reasons contributing to the risk analysis verdict.
          items:
            enum:
              - CLASSIFICATION_REASON_UNSPECIFIED
              - AUTOMATION
              - UNEXPECTED_ENVIRONMENT
              - TOO_MUCH_TRAFFIC
              - UNEXPECTED_USAGE_PATTERNS
              - LOW_CONFIDENCE_SCORE
              - SUSPECTED_CARDING
              - SUSPECTED_CHARGEBACK
            type: string
          readOnly: true
          type: array
        score:
          description: Output only. Legitimate event score from 0.0 to 1.0. (1.0 means very likely legitimate traffic while 0.0 means very likely non-legitimate traffic).
          format: float
          readOnly: true
          type: number
      type: object
    GoogleCloudRecaptchaenterpriseV1ScoreDistribution:
      description: Score distribution.
      properties:
        scoreBuckets:
          additionalProperties:
            format: int64
            type: string
          description: Map key is score value multiplied by 100. The scores are discrete values between [0, 1]. The maximum number of buckets is on order of a few dozen, but typically much lower (ie. 10).
          type: object
      type: object
    GoogleCloudRecaptchaenterpriseV1ScoreMetrics:
      description: Metrics related to scoring.
      properties:
        actionMetrics:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1ScoreDistribution"
          description: Action-based metrics. The map key is the action name which specified by the site owners at time of the "execute" client-side call.
          type: object
        overallMetrics:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1ScoreDistribution"
          description: Aggregated score metrics for all traffic.
      type: object
    GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsRequest:
      description: The request message to search related account group memberships.
      properties:
        accountId:
          description: Optional. The unique stable account identifier used to search connections. The identifier should correspond to an `account_id` provided in a previous `CreateAssessment` or `AnnotateAssessment` call. Either hashed_account_id or account_id must be set, but not both.
          type: string
        hashedAccountId:
          deprecated: true
          description: "Optional. Deprecated: use `account_id` instead. The unique stable hashed account identifier used to search connections. The identifier should correspond to a `hashed_account_id` provided in a previous `CreateAssessment` or `AnnotateAssessment` call. Either hashed_account_id or account_id must be set, but not both."
          format: byte
          type: string
        pageSize:
          description: Optional. The maximum number of groups to return. The service might return fewer than this value. If unspecified, at most 50 groups are returned. The maximum value is 1000; values above 1000 are coerced to 1000.
          format: int32
          type: integer
        pageToken:
          description: Optional. A page token, received from a previous `SearchRelatedAccountGroupMemberships` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `SearchRelatedAccountGroupMemberships` must match the call that provided the page token.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsResponse:
      description: The response to a `SearchRelatedAccountGroupMemberships` call.
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        relatedAccountGroupMemberships:
          description: The queried memberships.
          items:
            $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership"
          type: array
      type: object
    GoogleCloudRecaptchaenterpriseV1TestingOptions:
      description: Options for user acceptance testing.
      properties:
        testingChallenge:
          description: Optional. For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this site will return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE.
          enum:
            - TESTING_CHALLENGE_UNSPECIFIED
            - NOCAPTCHA
            - UNSOLVABLE_CHALLENGE
          type: string
        testingScore:
          description: Optional. All assessments for this Key will return this score. Must be between 0 (likely not legitimate) and 1 (likely legitimate) inclusive.
          format: float
          type: number
      type: object
    GoogleCloudRecaptchaenterpriseV1TokenProperties:
      description: Properties of the provided event token.
      properties:
        action:
          description: Output only. Action name provided at token generation.
          readOnly: true
          type: string
        androidPackageName:
          description: Output only. The name of the Android package with which the token was generated (Android keys only).
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp corresponding to the generation of the token.
          format: google-datetime
          readOnly: true
          type: string
        hostname:
          description: Output only. The hostname of the page on which the token was generated (Web keys only).
          readOnly: true
          type: string
        invalidReason:
          description: Output only. Reason associated with the response when valid = false.
          enum:
            - INVALID_REASON_UNSPECIFIED
            - UNKNOWN_INVALID_REASON
            - MALFORMED
            - EXPIRED
            - DUPE
            - MISSING
            - BROWSER_ERROR
          readOnly: true
          type: string
        iosBundleId:
          description: Output only. The ID of the iOS bundle with which the token was generated (iOS keys only).
          readOnly: true
          type: string
        valid:
          description: Output only. Whether the provided user response token is valid. When valid = false, the reason could be specified in invalid_reason or it could also be due to a user failing to solve a challenge or a sitekey mismatch (i.e the sitekey used to generate the token was different than the one specified in the assessment).
          readOnly: true
          type: boolean
      type: object
    GoogleCloudRecaptchaenterpriseV1TransactionData:
      description: Transaction data associated with a payment protected by reCAPTCHA Enterprise.
      properties:
        billingAddress:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionDataAddress"
          description: Optional. Address associated with the payment method when applicable.
        cardBin:
          description: Optional. The Bank Identification Number - generally the first 6 or 8 digits of the card.
          type: string
        cardLastFour:
          description: Optional. The last four digits of the card.
          type: string
        currencyCode:
          description: Optional. The currency code in ISO-4217 format.
          type: string
        gatewayInfo:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionDataGatewayInfo"
          description: Optional. Information about the payment gateway's response to the transaction.
        items:
          description: Optional. Items purchased in this transaction.
          items:
            $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionDataItem"
          type: array
        merchants:
          description: Optional. Information about the user or users fulfilling the transaction.
          items:
            $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionDataUser"
          type: array
        paymentMethod:
          description: "Optional. The payment method for the transaction. The allowed values are: * credit-card * debit-card * gift-card * processor-{name} (If a third-party is used, for example, processor-paypal) * custom-{name} (If an alternative method is used, for example, custom-crypto)"
          type: string
        shippingAddress:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionDataAddress"
          description: Optional. Destination address if this transaction involves shipping a physical item.
        shippingValue:
          description: Optional. The value of shipping in the specified currency. 0 for free or no shipping.
          format: double
          type: number
        transactionId:
          description: Unique identifier for the transaction. This custom identifier can be used to reference this transaction in the future, for example, labeling a refund or chargeback event. Two attempts at the same transaction should use the same transaction id.
          type: string
        user:
          $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionDataUser"
          description: Optional. Information about the user paying/initiating the transaction.
        value:
          description: Optional. The decimal value of the transaction in the specified currency.
          format: double
          type: number
      type: object
    GoogleCloudRecaptchaenterpriseV1TransactionDataAddress:
      description: Structured address format for billing and shipping addresses.
      properties:
        address:
          description: Optional. The first lines of the address. The first line generally contains the street name and number, and further lines may include information such as an apartment number.
          items:
            type: string
          type: array
        administrativeArea:
          description: Optional. The state, province, or otherwise administrative area of the address.
          type: string
        locality:
          description: Optional. The town/city of the address.
          type: string
        postalCode:
          description: Optional. The postal or ZIP code of the address.
          type: string
        recipient:
          description: Optional. The recipient name, potentially including information such as "care of".
          type: string
        regionCode:
          description: Optional. The CLDR country/region of the address.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1TransactionDataGatewayInfo:
      description: Details about the transaction from the gateway.
      properties:
        avsResponseCode:
          description: Optional. AVS response code from the gateway (available only when reCAPTCHA Enterprise is called after authorization).
          type: string
        cvvResponseCode:
          description: Optional. CVV response code from the gateway (available only when reCAPTCHA Enterprise is called after authorization).
          type: string
        gatewayResponseCode:
          description: Optional. Gateway response code describing the state of the transaction.
          type: string
        name:
          description: Optional. Name of the gateway service (for example, stripe, square, paypal).
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1TransactionDataItem:
      description: Line items being purchased in this transaction.
      properties:
        merchantAccountId:
          description: Optional. When a merchant is specified, its corresponding account_id. Necessary to populate marketplace-style transactions.
          type: string
        name:
          description: Optional. The full name of the item.
          type: string
        quantity:
          description: Optional. The quantity of this item that is being purchased.
          format: int64
          type: string
        value:
          description: Optional. The value per item that the user is paying, in the transaction currency, after discounts.
          format: double
          type: number
      type: object
    GoogleCloudRecaptchaenterpriseV1TransactionDataUser:
      description: Details about a user's account involved in the transaction.
      properties:
        accountId:
          description: Optional. Unique account identifier for this user. If using account defender, this should match the hashed_account_id field. Otherwise, a unique and persistent identifier for this account.
          type: string
        creationMs:
          description: Optional. The epoch milliseconds of the user's account creation.
          format: int64
          type: string
        email:
          description: Optional. The email address of the user.
          type: string
        emailVerified:
          description: Optional. Whether the email has been verified to be accessible by the user (OTP or similar).
          type: boolean
        phoneNumber:
          description: Optional. The phone number of the user, with country code.
          type: string
        phoneVerified:
          description: Optional. Whether the phone number has been verified to be accessible by the user (OTP or similar).
          type: boolean
      type: object
    GoogleCloudRecaptchaenterpriseV1TransactionEvent:
      description: Describes an event in the lifecycle of a payment transaction.
      properties:
        eventTime:
          description: Optional. Timestamp when this transaction event occurred; otherwise assumed to be the time of the API call.
          format: google-datetime
          type: string
        eventType:
          description: Optional. The type of this transaction event.
          enum:
            - TRANSACTION_EVENT_TYPE_UNSPECIFIED
            - MERCHANT_APPROVE
            - MERCHANT_DENY
            - MANUAL_REVIEW
            - AUTHORIZATION
            - AUTHORIZATION_DECLINE
            - PAYMENT_CAPTURE
            - PAYMENT_CAPTURE_DECLINE
            - CANCEL
            - CHARGEBACK_INQUIRY
            - CHARGEBACK_ALERT
            - FRAUD_NOTIFICATION
            - CHARGEBACK
            - CHARGEBACK_REPRESENTMENT
            - CHARGEBACK_REVERSE
            - REFUND_REQUEST
            - REFUND_DECLINE
            - REFUND
            - REFUND_REVERSE
          type: string
        reason:
          description: Optional. The reason or standardized code that corresponds with this transaction event, if one exists. For example, a CHARGEBACK event with code 6005.
          type: string
        value:
          description: Optional. The value that corresponds with this transaction event, if one exists. For example, a refund event where $5.00 was refunded. Currency is obtained from the original transaction data.
          format: double
          type: number
      type: object
    GoogleCloudRecaptchaenterpriseV1UserId:
      description: An identifier associated with a user.
      properties:
        email:
          description: Optional. An email address.
          type: string
        phoneNumber:
          description: Optional. A phone number. Should use the E.164 format.
          type: string
        username:
          description: Optional. A unique username, if different from all the other identifiers and `account_id` that are provided. Can be a unique login handle or display name for a user.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1UserInfo:
      description: User information associated with a request protected by reCAPTCHA Enterprise.
      properties:
        accountId:
          description: Optional. For logged-in requests or login/registration requests, the unique account identifier associated with this user. You can use the username if it is stable (meaning it is the same for every request associated with the same user), or any stable user ID of your choice. Leave blank for non logged-in actions or guest checkout.
          type: string
        createAccountTime:
          description: Optional. Creation time for this account associated with this user. Leave blank for non logged-in actions, guest checkout, or when there is no account associated with the current user.
          format: google-datetime
          type: string
        userIds:
          description: Optional. Identifiers associated with this user or request.
          items:
            $ref: "#/components/schemas/GoogleCloudRecaptchaenterpriseV1UserId"
          type: array
      type: object
    GoogleCloudRecaptchaenterpriseV1WafSettings:
      description: Settings specific to keys that can be used for WAF (Web Application Firewall).
      properties:
        wafFeature:
          description: Required. The WAF feature for which this key is enabled.
          enum:
            - WAF_FEATURE_UNSPECIFIED
            - CHALLENGE_PAGE
            - SESSION_TOKEN
            - ACTION_TOKEN
            - EXPRESS
          type: string
        wafService:
          description: Required. The WAF service that uses this key.
          enum:
            - WAF_SERVICE_UNSPECIFIED
            - CA
            - FASTLY
            - CLOUDFLARE
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1WebKeySettings:
      description: Settings specific to keys that can be used by websites.
      properties:
        allowAllDomains:
          description: Optional. If set to true, it means allowed_domains will not be enforced.
          type: boolean
        allowAmpTraffic:
          description: Optional. If set to true, the key can be used on AMP (Accelerated Mobile Pages) websites. This is supported only for the SCORE integration type.
          type: boolean
        allowedDomains:
          description: "Optional. Domains or subdomains of websites allowed to use the key. All subdomains of an allowed domain are automatically allowed. A valid domain requires a host and must not include any path, port, query or fragment. Examples: 'example.com' or 'subdomain.example.com'"
          items:
            type: string
          type: array
        challengeSecurityPreference:
          description: Optional. Settings for the frequency and difficulty at which this key triggers captcha challenges. This should only be specified for IntegrationTypes CHECKBOX and INVISIBLE.
          enum:
            - CHALLENGE_SECURITY_PREFERENCE_UNSPECIFIED
            - USABILITY
            - BALANCE
            - SECURITY
          type: string
        integrationType:
          description: Required. Describes how this key is integrated with the website.
          enum:
            - INTEGRATION_TYPE_UNSPECIFIED
            - SCORE
            - CHECKBOX
            - INVISIBLE
          type: string
      type: object
    GoogleProtobufEmpty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    GoogleRpcStatus:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
