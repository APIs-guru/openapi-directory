# coding: utf-8

"""
    reCAPTCHA Enterprise API

    Help protect your website from fraudulent activity, spam, and abuse without creating friction.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_recaptchaenterprise_v1_ios_key_settings import GoogleCloudRecaptchaenterpriseV1IOSKeySettings

class TestGoogleCloudRecaptchaenterpriseV1IOSKeySettings(unittest.TestCase):
    """GoogleCloudRecaptchaenterpriseV1IOSKeySettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudRecaptchaenterpriseV1IOSKeySettings:
        """Test GoogleCloudRecaptchaenterpriseV1IOSKeySettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudRecaptchaenterpriseV1IOSKeySettings`
        """
        model = GoogleCloudRecaptchaenterpriseV1IOSKeySettings()
        if include_optional:
            return GoogleCloudRecaptchaenterpriseV1IOSKeySettings(
                allow_all_bundle_ids = True,
                allowed_bundle_ids = [
                    ''
                    ],
                apple_developer_id = openapi_client.models.google_cloud_recaptchaenterprise_v1_apple_developer_id.GoogleCloudRecaptchaenterpriseV1AppleDeveloperId(
                    key_id = '', 
                    private_key = '', 
                    team_id = '', )
            )
        else:
            return GoogleCloudRecaptchaenterpriseV1IOSKeySettings(
        )
        """

    def testGoogleCloudRecaptchaenterpriseV1IOSKeySettings(self):
        """Test GoogleCloudRecaptchaenterpriseV1IOSKeySettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
