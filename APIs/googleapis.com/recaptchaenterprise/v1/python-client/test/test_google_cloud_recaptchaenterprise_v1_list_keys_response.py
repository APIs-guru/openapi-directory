# coding: utf-8

"""
    reCAPTCHA Enterprise API

    Help protect your website from fraudulent activity, spam, and abuse without creating friction.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_recaptchaenterprise_v1_list_keys_response import GoogleCloudRecaptchaenterpriseV1ListKeysResponse

class TestGoogleCloudRecaptchaenterpriseV1ListKeysResponse(unittest.TestCase):
    """GoogleCloudRecaptchaenterpriseV1ListKeysResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudRecaptchaenterpriseV1ListKeysResponse:
        """Test GoogleCloudRecaptchaenterpriseV1ListKeysResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudRecaptchaenterpriseV1ListKeysResponse`
        """
        model = GoogleCloudRecaptchaenterpriseV1ListKeysResponse()
        if include_optional:
            return GoogleCloudRecaptchaenterpriseV1ListKeysResponse(
                keys = [
                    openapi_client.models.google_cloud_recaptchaenterprise_v1_key.GoogleCloudRecaptchaenterpriseV1Key(
                        android_settings = openapi_client.models.google_cloud_recaptchaenterprise_v1_android_key_settings.GoogleCloudRecaptchaenterpriseV1AndroidKeySettings(
                            allow_all_package_names = True, 
                            allowed_package_names = [
                                ''
                                ], 
                            support_non_google_app_store_distribution = True, ), 
                        create_time = '', 
                        display_name = '', 
                        ios_settings = openapi_client.models.google_cloud_recaptchaenterprise_v1_ios_key_settings.GoogleCloudRecaptchaenterpriseV1IOSKeySettings(
                            allow_all_bundle_ids = True, 
                            allowed_bundle_ids = [
                                ''
                                ], 
                            apple_developer_id = openapi_client.models.google_cloud_recaptchaenterprise_v1_apple_developer_id.GoogleCloudRecaptchaenterpriseV1AppleDeveloperId(
                                key_id = '', 
                                private_key = '', 
                                team_id = '', ), ), 
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        testing_options = openapi_client.models.google_cloud_recaptchaenterprise_v1_testing_options.GoogleCloudRecaptchaenterpriseV1TestingOptions(
                            testing_challenge = 'TESTING_CHALLENGE_UNSPECIFIED', 
                            testing_score = 1.337, ), 
                        waf_settings = openapi_client.models.google_cloud_recaptchaenterprise_v1_waf_settings.GoogleCloudRecaptchaenterpriseV1WafSettings(
                            waf_feature = 'WAF_FEATURE_UNSPECIFIED', 
                            waf_service = 'WAF_SERVICE_UNSPECIFIED', ), 
                        web_settings = openapi_client.models.google_cloud_recaptchaenterprise_v1_web_key_settings.GoogleCloudRecaptchaenterpriseV1WebKeySettings(
                            allow_all_domains = True, 
                            allow_amp_traffic = True, 
                            allowed_domains = [
                                ''
                                ], 
                            challenge_security_preference = 'CHALLENGE_SECURITY_PREFERENCE_UNSPECIFIED', 
                            integration_type = 'INTEGRATION_TYPE_UNSPECIFIED', ), )
                    ],
                next_page_token = ''
            )
        else:
            return GoogleCloudRecaptchaenterpriseV1ListKeysResponse(
        )
        """

    def testGoogleCloudRecaptchaenterpriseV1ListKeysResponse(self):
        """Test GoogleCloudRecaptchaenterpriseV1ListKeysResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
