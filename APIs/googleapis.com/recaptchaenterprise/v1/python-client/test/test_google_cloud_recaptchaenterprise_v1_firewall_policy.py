# coding: utf-8

"""
    reCAPTCHA Enterprise API

    Help protect your website from fraudulent activity, spam, and abuse without creating friction.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_recaptchaenterprise_v1_firewall_policy import GoogleCloudRecaptchaenterpriseV1FirewallPolicy

class TestGoogleCloudRecaptchaenterpriseV1FirewallPolicy(unittest.TestCase):
    """GoogleCloudRecaptchaenterpriseV1FirewallPolicy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudRecaptchaenterpriseV1FirewallPolicy:
        """Test GoogleCloudRecaptchaenterpriseV1FirewallPolicy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudRecaptchaenterpriseV1FirewallPolicy`
        """
        model = GoogleCloudRecaptchaenterpriseV1FirewallPolicy()
        if include_optional:
            return GoogleCloudRecaptchaenterpriseV1FirewallPolicy(
                actions = [
                    openapi_client.models.google_cloud_recaptchaenterprise_v1_firewall_action.GoogleCloudRecaptchaenterpriseV1FirewallAction(
                        allow = openapi_client.models.google_cloud_recaptchaenterprise_v1_firewall_action_allow_action.GoogleCloudRecaptchaenterpriseV1FirewallActionAllowAction(), 
                        block = openapi_client.models.google_cloud_recaptchaenterprise_v1_firewall_action_block_action.GoogleCloudRecaptchaenterpriseV1FirewallActionBlockAction(), 
                        include_recaptcha_script = openapi_client.models.google_cloud_recaptchaenterprise_v1_firewall_action_include_recaptcha_script_action.GoogleCloudRecaptchaenterpriseV1FirewallActionIncludeRecaptchaScriptAction(), 
                        redirect = openapi_client.models.google_cloud_recaptchaenterprise_v1_firewall_action_redirect_action.GoogleCloudRecaptchaenterpriseV1FirewallActionRedirectAction(), 
                        set_header = openapi_client.models.google_cloud_recaptchaenterprise_v1_firewall_action_set_header_action.GoogleCloudRecaptchaenterpriseV1FirewallActionSetHeaderAction(
                            key = '', 
                            value = '', ), 
                        substitute = openapi_client.models.google_cloud_recaptchaenterprise_v1_firewall_action_substitute_action.GoogleCloudRecaptchaenterpriseV1FirewallActionSubstituteAction(
                            path = '', ), )
                    ],
                condition = '',
                description = '',
                name = '',
                path = ''
            )
        else:
            return GoogleCloudRecaptchaenterpriseV1FirewallPolicy(
        )
        """

    def testGoogleCloudRecaptchaenterpriseV1FirewallPolicy(self):
        """Test GoogleCloudRecaptchaenterpriseV1FirewallPolicy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
