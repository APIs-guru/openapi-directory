# coding: utf-8

"""
    reCAPTCHA Enterprise API

    Help protect your website from fraudulent activity, spam, and abuse without creating friction.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_recaptchaenterprise_v1_annotate_assessment_request import GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest

class TestGoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest(unittest.TestCase):
    """GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest:
        """Test GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest`
        """
        model = GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest()
        if include_optional:
            return GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest(
                account_id = '',
                annotation = 'ANNOTATION_UNSPECIFIED',
                hashed_account_id = 'YQ==',
                reasons = [
                    'REASON_UNSPECIFIED'
                    ],
                transaction_event = openapi_client.models.google_cloud_recaptchaenterprise_v1_transaction_event.GoogleCloudRecaptchaenterpriseV1TransactionEvent(
                    event_time = '', 
                    event_type = 'TRANSACTION_EVENT_TYPE_UNSPECIFIED', 
                    reason = '', 
                    value = 1.337, )
            )
        else:
            return GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest(
        )
        """

    def testGoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest(self):
        """Test GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
