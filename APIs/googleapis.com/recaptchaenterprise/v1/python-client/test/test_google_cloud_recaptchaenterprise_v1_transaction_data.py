# coding: utf-8

"""
    reCAPTCHA Enterprise API

    Help protect your website from fraudulent activity, spam, and abuse without creating friction.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_recaptchaenterprise_v1_transaction_data import GoogleCloudRecaptchaenterpriseV1TransactionData

class TestGoogleCloudRecaptchaenterpriseV1TransactionData(unittest.TestCase):
    """GoogleCloudRecaptchaenterpriseV1TransactionData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudRecaptchaenterpriseV1TransactionData:
        """Test GoogleCloudRecaptchaenterpriseV1TransactionData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudRecaptchaenterpriseV1TransactionData`
        """
        model = GoogleCloudRecaptchaenterpriseV1TransactionData()
        if include_optional:
            return GoogleCloudRecaptchaenterpriseV1TransactionData(
                billing_address = openapi_client.models.google_cloud_recaptchaenterprise_v1_transaction_data_address.GoogleCloudRecaptchaenterpriseV1TransactionDataAddress(
                    address = [
                        ''
                        ], 
                    administrative_area = '', 
                    locality = '', 
                    postal_code = '', 
                    recipient = '', 
                    region_code = '', ),
                card_bin = '',
                card_last_four = '',
                currency_code = '',
                gateway_info = openapi_client.models.google_cloud_recaptchaenterprise_v1_transaction_data_gateway_info.GoogleCloudRecaptchaenterpriseV1TransactionDataGatewayInfo(
                    avs_response_code = '', 
                    cvv_response_code = '', 
                    gateway_response_code = '', 
                    name = '', ),
                items = [
                    openapi_client.models.google_cloud_recaptchaenterprise_v1_transaction_data_item.GoogleCloudRecaptchaenterpriseV1TransactionDataItem(
                        merchant_account_id = '', 
                        name = '', 
                        quantity = '', 
                        value = 1.337, )
                    ],
                merchants = [
                    openapi_client.models.google_cloud_recaptchaenterprise_v1_transaction_data_user.GoogleCloudRecaptchaenterpriseV1TransactionDataUser(
                        account_id = '', 
                        creation_ms = '', 
                        email = '', 
                        email_verified = True, 
                        phone_number = '', 
                        phone_verified = True, )
                    ],
                payment_method = '',
                shipping_address = openapi_client.models.google_cloud_recaptchaenterprise_v1_transaction_data_address.GoogleCloudRecaptchaenterpriseV1TransactionDataAddress(
                    address = [
                        ''
                        ], 
                    administrative_area = '', 
                    locality = '', 
                    postal_code = '', 
                    recipient = '', 
                    region_code = '', ),
                shipping_value = 1.337,
                transaction_id = '',
                user = openapi_client.models.google_cloud_recaptchaenterprise_v1_transaction_data_user.GoogleCloudRecaptchaenterpriseV1TransactionDataUser(
                    account_id = '', 
                    creation_ms = '', 
                    email = '', 
                    email_verified = True, 
                    phone_number = '', 
                    phone_verified = True, ),
                value = 1.337
            )
        else:
            return GoogleCloudRecaptchaenterpriseV1TransactionData(
        )
        """

    def testGoogleCloudRecaptchaenterpriseV1TransactionData(self):
        """Test GoogleCloudRecaptchaenterpriseV1TransactionData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
