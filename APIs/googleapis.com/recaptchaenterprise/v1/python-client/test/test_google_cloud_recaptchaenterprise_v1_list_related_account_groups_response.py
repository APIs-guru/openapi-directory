# coding: utf-8

"""
    reCAPTCHA Enterprise API

    Help protect your website from fraudulent activity, spam, and abuse without creating friction.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_recaptchaenterprise_v1_list_related_account_groups_response import GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse

class TestGoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse(unittest.TestCase):
    """GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse:
        """Test GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse`
        """
        model = GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse()
        if include_optional:
            return GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse(
                next_page_token = '',
                related_account_groups = [
                    openapi_client.models.google_cloud_recaptchaenterprise_v1_related_account_group.GoogleCloudRecaptchaenterpriseV1RelatedAccountGroup(
                        name = '', )
                    ]
            )
        else:
            return GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse(
        )
        """

    def testGoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse(self):
        """Test GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
