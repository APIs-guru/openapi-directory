# coding: utf-8

"""
    Workflow Executions API

    Execute workflows created with Workflows API.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_executions_response import ListExecutionsResponse

class TestListExecutionsResponse(unittest.TestCase):
    """ListExecutionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListExecutionsResponse:
        """Test ListExecutionsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListExecutionsResponse`
        """
        model = ListExecutionsResponse()
        if include_optional:
            return ListExecutionsResponse(
                executions = [
                    openapi_client.models.execution.Execution(
                        argument = '', 
                        call_log_level = 'CALL_LOG_LEVEL_UNSPECIFIED', 
                        create_time = '', 
                        disable_concurrency_quota_overflow_buffering = True, 
                        duration = '', 
                        end_time = '', 
                        error = openapi_client.models.error.Error(
                            context = '', 
                            payload = '', 
                            stack_trace = openapi_client.models.stack_trace.StackTrace(
                                elements = [
                                    openapi_client.models.stack_trace_element.StackTraceElement(
                                        position = openapi_client.models.position.Position(
                                            column = '', 
                                            length = '', 
                                            line = '', ), 
                                        routine = '', 
                                        step = '', )
                                    ], ), ), 
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        result = '', 
                        start_time = '', 
                        state = 'STATE_UNSPECIFIED', 
                        state_error = openapi_client.models.state_error.StateError(
                            details = '', 
                            type = 'TYPE_UNSPECIFIED', ), 
                        status = openapi_client.models.status.Status(
                            current_steps = [
                                openapi_client.models.step.Step(
                                    routine = '', 
                                    step = '', )
                                ], ), 
                        workflow_revision_id = '', )
                    ],
                next_page_token = ''
            )
        else:
            return ListExecutionsResponse(
        )
        """

    def testListExecutionsResponse(self):
        """Test ListExecutionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
