# coding: utf-8

"""
    Workflow Executions API

    Execute workflows created with Workflows API.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.step_entry import StepEntry

class TestStepEntry(unittest.TestCase):
    """StepEntry unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StepEntry:
        """Test StepEntry
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StepEntry`
        """
        model = StepEntry()
        if include_optional:
            return StepEntry(
                create_time = '',
                entry_id = '',
                exception = openapi_client.models.exception.Exception(
                    payload = '', ),
                name = '',
                navigation_info = openapi_client.models.navigation_info.NavigationInfo(
                    children = [
                        ''
                        ], 
                    next = '', 
                    parent = '', 
                    previous = '', ),
                routine = '',
                state = 'STATE_UNSPECIFIED',
                step = '',
                step_entry_metadata = openapi_client.models.step_entry_metadata.StepEntryMetadata(
                    progress_number = '', 
                    progress_type = 'PROGRESS_TYPE_UNSPECIFIED', 
                    thread_id = '', ),
                step_type = 'STEP_TYPE_UNSPECIFIED',
                update_time = ''
            )
        else:
            return StepEntry(
        )
        """

    def testStepEntry(self):
        """Test StepEntry"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
