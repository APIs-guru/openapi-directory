# coding: utf-8

"""
    Cloud Healthcare API

    Manage, store, and access healthcare data in Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.group_or_segment import GroupOrSegment

class TestGroupOrSegment(unittest.TestCase):
    """GroupOrSegment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GroupOrSegment:
        """Test GroupOrSegment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GroupOrSegment`
        """
        model = GroupOrSegment()
        if include_optional:
            return GroupOrSegment(
                group = openapi_client.models.schema_group.SchemaGroup(
                    choice = True, 
                    max_occurs = 56, 
                    members = [
                        openapi_client.models.group_or_segment.GroupOrSegment(
                            group = openapi_client.models.schema_group.SchemaGroup(
                                choice = True, 
                                max_occurs = 56, 
                                min_occurs = 56, 
                                name = '', ), 
                            segment = openapi_client.models.schema_segment.SchemaSegment(
                                max_occurs = 56, 
                                min_occurs = 56, 
                                type = '', ), )
                        ], 
                    min_occurs = 56, 
                    name = '', ),
                segment = openapi_client.models.schema_segment.SchemaSegment(
                    max_occurs = 56, 
                    min_occurs = 56, 
                    type = '', )
            )
        else:
            return GroupOrSegment(
        )
        """

    def testGroupOrSegment(self):
        """Test GroupOrSegment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
