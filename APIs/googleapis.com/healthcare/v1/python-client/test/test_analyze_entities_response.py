# coding: utf-8

"""
    Cloud Healthcare API

    Manage, store, and access healthcare data in Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.analyze_entities_response import AnalyzeEntitiesResponse

class TestAnalyzeEntitiesResponse(unittest.TestCase):
    """AnalyzeEntitiesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnalyzeEntitiesResponse:
        """Test AnalyzeEntitiesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnalyzeEntitiesResponse`
        """
        model = AnalyzeEntitiesResponse()
        if include_optional:
            return AnalyzeEntitiesResponse(
                entities = [
                    openapi_client.models.entity.Entity(
                        entity_id = '', 
                        preferred_term = '', 
                        vocabulary_codes = [
                            ''
                            ], )
                    ],
                entity_mentions = [
                    openapi_client.models.entity_mention.EntityMention(
                        certainty_assessment = openapi_client.models.feature.Feature(
                            confidence = 1.337, 
                            value = '', ), 
                        confidence = 1.337, 
                        linked_entities = [
                            openapi_client.models.linked_entity.LinkedEntity(
                                entity_id = '', )
                            ], 
                        mention_id = '', 
                        subject = openapi_client.models.feature.Feature(
                            confidence = 1.337, 
                            value = '', ), 
                        temporal_assessment = , 
                        text = openapi_client.models.text_span.TextSpan(
                            begin_offset = 56, 
                            content = '', ), 
                        type = '', )
                    ],
                fhir_bundle = '',
                relationships = [
                    openapi_client.models.entity_mention_relationship.EntityMentionRelationship(
                        confidence = 1.337, 
                        object_id = '', 
                        subject_id = '', )
                    ]
            )
        else:
            return AnalyzeEntitiesResponse(
        )
        """

    def testAnalyzeEntitiesResponse(self):
        """Test AnalyzeEntitiesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
