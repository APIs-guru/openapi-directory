# coding: utf-8

"""
    Cloud Healthcare API

    Manage, store, and access healthcare data in Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_hl7_v2_stores_response import ListHl7V2StoresResponse

class TestListHl7V2StoresResponse(unittest.TestCase):
    """ListHl7V2StoresResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListHl7V2StoresResponse:
        """Test ListHl7V2StoresResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListHl7V2StoresResponse`
        """
        model = ListHl7V2StoresResponse()
        if include_optional:
            return ListHl7V2StoresResponse(
                hl7_v2_stores = [
                    openapi_client.models.hl7_v2_store.Hl7V2Store(
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        notification_configs = [
                            openapi_client.models.hl7_v2_notification_config.Hl7V2NotificationConfig(
                                filter = '', 
                                pubsub_topic = '', )
                            ], 
                        parser_config = openapi_client.models.parser_config.ParserConfig(
                            allow_null_header = True, 
                            schema = openapi_client.models.schema_package.SchemaPackage(
                                ignore_min_occurs = True, 
                                schemas = [
                                    openapi_client.models.hl7_schema_config.Hl7SchemaConfig(
                                        message_schema_configs = {
                                            'key' : openapi_client.models.schema_group.SchemaGroup(
                                                choice = True, 
                                                max_occurs = 56, 
                                                members = [
                                                    openapi_client.models.group_or_segment.GroupOrSegment(
                                                        group = openapi_client.models.schema_group.SchemaGroup(
                                                            choice = True, 
                                                            max_occurs = 56, 
                                                            min_occurs = 56, 
                                                            name = '', ), 
                                                        segment = openapi_client.models.schema_segment.SchemaSegment(
                                                            max_occurs = 56, 
                                                            min_occurs = 56, 
                                                            type = '', ), )
                                                    ], 
                                                min_occurs = 56, 
                                                name = '', )
                                            }, 
                                        version = [
                                            openapi_client.models.version_source.VersionSource(
                                                msh_field = '', 
                                                value = '', )
                                            ], )
                                    ], 
                                schematized_parsing_type = 'SCHEMATIZED_PARSING_TYPE_UNSPECIFIED', 
                                types = [
                                    openapi_client.models.hl7_types_config.Hl7TypesConfig(
                                        type = [
                                            openapi_client.models.type.Type(
                                                fields = [
                                                    openapi_client.models.field.Field(
                                                        max_occurs = 56, 
                                                        min_occurs = 56, 
                                                        name = '', 
                                                        table = '', )
                                                    ], 
                                                name = '', 
                                                primitive = 'PRIMITIVE_UNSPECIFIED', )
                                            ], )
                                    ], 
                                unexpected_segment_handling = 'UNEXPECTED_SEGMENT_HANDLING_MODE_UNSPECIFIED', ), 
                            segment_terminator = 'YQ==', 
                            version = 'PARSER_VERSION_UNSPECIFIED', ), 
                        reject_duplicate_message = True, )
                    ],
                next_page_token = ''
            )
        else:
            return ListHl7V2StoresResponse(
        )
        """

    def testListHl7V2StoresResponse(self):
        """Test ListHl7V2StoresResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
