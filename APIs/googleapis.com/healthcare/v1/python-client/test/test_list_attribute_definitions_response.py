# coding: utf-8

"""
    Cloud Healthcare API

    Manage, store, and access healthcare data in Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_attribute_definitions_response import ListAttributeDefinitionsResponse

class TestListAttributeDefinitionsResponse(unittest.TestCase):
    """ListAttributeDefinitionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListAttributeDefinitionsResponse:
        """Test ListAttributeDefinitionsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListAttributeDefinitionsResponse`
        """
        model = ListAttributeDefinitionsResponse()
        if include_optional:
            return ListAttributeDefinitionsResponse(
                attribute_definitions = [
                    openapi_client.models.attribute_definition.AttributeDefinition(
                        allowed_values = [
                            ''
                            ], 
                        category = 'CATEGORY_UNSPECIFIED', 
                        consent_default_values = [
                            ''
                            ], 
                        data_mapping_default_value = '', 
                        description = '', 
                        name = '', )
                    ],
                next_page_token = ''
            )
        else:
            return ListAttributeDefinitionsResponse(
        )
        """

    def testListAttributeDefinitionsResponse(self):
        """Test ListAttributeDefinitionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
