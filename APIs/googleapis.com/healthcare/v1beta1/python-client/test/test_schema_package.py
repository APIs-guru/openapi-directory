# coding: utf-8

"""
    Cloud Healthcare API

    Manage, store, and access healthcare data in Google Cloud Platform.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.schema_package import SchemaPackage

class TestSchemaPackage(unittest.TestCase):
    """SchemaPackage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SchemaPackage:
        """Test SchemaPackage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SchemaPackage`
        """
        model = SchemaPackage()
        if include_optional:
            return SchemaPackage(
                ignore_min_occurs = True,
                schemas = [
                    openapi_client.models.hl7_schema_config.Hl7SchemaConfig(
                        message_schema_configs = {
                            'key' : openapi_client.models.schema_group.SchemaGroup(
                                choice = True, 
                                max_occurs = 56, 
                                members = [
                                    openapi_client.models.group_or_segment.GroupOrSegment(
                                        group = openapi_client.models.schema_group.SchemaGroup(
                                            choice = True, 
                                            max_occurs = 56, 
                                            min_occurs = 56, 
                                            name = '', ), 
                                        segment = openapi_client.models.schema_segment.SchemaSegment(
                                            max_occurs = 56, 
                                            min_occurs = 56, 
                                            type = '', ), )
                                    ], 
                                min_occurs = 56, 
                                name = '', )
                            }, 
                        version = [
                            openapi_client.models.version_source.VersionSource(
                                msh_field = '', 
                                value = '', )
                            ], )
                    ],
                schematized_parsing_type = 'SCHEMATIZED_PARSING_TYPE_UNSPECIFIED',
                types = [
                    openapi_client.models.hl7_types_config.Hl7TypesConfig(
                        type = [
                            openapi_client.models.type.Type(
                                fields = [
                                    openapi_client.models.field.Field(
                                        max_occurs = 56, 
                                        min_occurs = 56, 
                                        name = '', 
                                        table = '', )
                                    ], 
                                name = '', 
                                primitive = 'PRIMITIVE_UNSPECIFIED', )
                            ], 
                        version = [
                            openapi_client.models.version_source.VersionSource(
                                msh_field = '', 
                                value = '', )
                            ], )
                    ],
                unexpected_segment_handling = 'UNEXPECTED_SEGMENT_HANDLING_MODE_UNSPECIFIED'
            )
        else:
            return SchemaPackage(
        )
        """

    def testSchemaPackage(self):
        """Test SchemaPackage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
