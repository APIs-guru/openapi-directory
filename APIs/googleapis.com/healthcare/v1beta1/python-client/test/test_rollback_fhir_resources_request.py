# coding: utf-8

"""
    Cloud Healthcare API

    Manage, store, and access healthcare data in Google Cloud Platform.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.rollback_fhir_resources_request import RollbackFhirResourcesRequest

class TestRollbackFhirResourcesRequest(unittest.TestCase):
    """RollbackFhirResourcesRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RollbackFhirResourcesRequest:
        """Test RollbackFhirResourcesRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RollbackFhirResourcesRequest`
        """
        model = RollbackFhirResourcesRequest()
        if include_optional:
            return RollbackFhirResourcesRequest(
                change_type = 'CHANGE_TYPE_UNSPECIFIED',
                exclude_rollbacks = True,
                filtering_fields = openapi_client.models.rollback_fhir_resource_filtering_fields.RollbackFhirResourceFilteringFields(
                    metadata_filter = '', 
                    operation_ids = [
                        ''
                        ], ),
                force = True,
                input_gcs_object = '',
                result_gcs_bucket = '',
                rollback_time = '',
                type = [
                    ''
                    ]
            )
        else:
            return RollbackFhirResourcesRequest(
        )
        """

    def testRollbackFhirResourcesRequest(self):
        """Test RollbackFhirResourcesRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
