# coding: utf-8

"""
    Cloud Healthcare API

    Manage, store, and access healthcare data in Google Cloud Platform.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.info_type_transformation import InfoTypeTransformation

class TestInfoTypeTransformation(unittest.TestCase):
    """InfoTypeTransformation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InfoTypeTransformation:
        """Test InfoTypeTransformation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InfoTypeTransformation`
        """
        model = InfoTypeTransformation()
        if include_optional:
            return InfoTypeTransformation(
                character_mask_config = openapi_client.models.character_mask_config.CharacterMaskConfig(
                    masking_character = '', ),
                crypto_hash_config = openapi_client.models.crypto_hash_config.CryptoHashConfig(
                    crypto_key = 'YQ==', 
                    kms_wrapped = openapi_client.models.kms_wrapped_crypto_key.KmsWrappedCryptoKey(
                        crypto_key = '', 
                        wrapped_key = 'YQ==', ), ),
                date_shift_config = openapi_client.models.date_shift_config.DateShiftConfig(
                    crypto_key = 'YQ==', 
                    kms_wrapped = openapi_client.models.kms_wrapped_crypto_key.KmsWrappedCryptoKey(
                        crypto_key = '', 
                        wrapped_key = 'YQ==', ), ),
                info_types = [
                    ''
                    ],
                redact_config = openapi_client.models.redact_config.RedactConfig(),
                replace_with_info_type_config = openapi_client.models.replace_with_info_type_config.ReplaceWithInfoTypeConfig()
            )
        else:
            return InfoTypeTransformation(
        )
        """

    def testInfoTypeTransformation(self):
        """Test InfoTypeTransformation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
