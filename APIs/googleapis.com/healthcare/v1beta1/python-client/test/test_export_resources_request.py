# coding: utf-8

"""
    Cloud Healthcare API

    Manage, store, and access healthcare data in Google Cloud Platform.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.export_resources_request import ExportResourcesRequest

class TestExportResourcesRequest(unittest.TestCase):
    """ExportResourcesRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExportResourcesRequest:
        """Test ExportResourcesRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExportResourcesRequest`
        """
        model = ExportResourcesRequest()
        if include_optional:
            return ExportResourcesRequest(
                since = '',
                type = '',
                bigquery_destination = openapi_client.models.google_cloud_healthcare_v1beta1_fhir_big_query_destination.GoogleCloudHealthcareV1beta1FhirBigQueryDestination(
                    dataset_uri = '', 
                    force = True, 
                    schema_config = openapi_client.models.schema_config.SchemaConfig(
                        last_updated_partition_config = openapi_client.models.time_partitioning.TimePartitioning(
                            expiration_ms = '', 
                            type = 'PARTITION_TYPE_UNSPECIFIED', ), 
                        recursive_structure_depth = '', 
                        schema_type = 'SCHEMA_TYPE_UNSPECIFIED', ), 
                    write_disposition = 'WRITE_DISPOSITION_UNSPECIFIED', ),
                gcs_destination = openapi_client.models.google_cloud_healthcare_v1beta1_fhir_gcs_destination.GoogleCloudHealthcareV1beta1FhirGcsDestination(
                    uri_prefix = '', )
            )
        else:
            return ExportResourcesRequest(
        )
        """

    def testExportResourcesRequest(self):
        """Test ExportResourcesRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
