# coding: utf-8

"""
    Cloud Healthcare API

    Manage, store, and access healthcare data in Google Cloud Platform.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.explain_data_access_consent_info import ExplainDataAccessConsentInfo

class TestExplainDataAccessConsentInfo(unittest.TestCase):
    """ExplainDataAccessConsentInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExplainDataAccessConsentInfo:
        """Test ExplainDataAccessConsentInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExplainDataAccessConsentInfo`
        """
        model = ExplainDataAccessConsentInfo()
        if include_optional:
            return ExplainDataAccessConsentInfo(
                cascade_origins = [
                    ''
                    ],
                consent_resource = '',
                enforcement_time = '',
                matching_accessor_scopes = [
                    openapi_client.models.consent_accessor_scope.ConsentAccessorScope(
                        actor = '', 
                        environment = '', 
                        purpose = '', )
                    ],
                patient_consent_owner = '',
                type = 'CONSENT_POLICY_TYPE_UNSPECIFIED',
                variants = [
                    'VARIANT_UNSPECIFIED'
                    ]
            )
        else:
            return ExplainDataAccessConsentInfo(
        )
        """

    def testExplainDataAccessConsentInfo(self):
        """Test ExplainDataAccessConsentInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
