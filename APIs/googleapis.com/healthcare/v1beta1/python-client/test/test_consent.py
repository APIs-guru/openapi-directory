# coding: utf-8

"""
    Cloud Healthcare API

    Manage, store, and access healthcare data in Google Cloud Platform.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.consent import Consent

class TestConsent(unittest.TestCase):
    """Consent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Consent:
        """Test Consent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Consent`
        """
        model = Consent()
        if include_optional:
            return Consent(
                consent_artifact = '',
                expire_time = '',
                metadata = {
                    'key' : ''
                    },
                name = '',
                policies = [
                    openapi_client.models.google_cloud_healthcare_v1beta1_consent_policy.GoogleCloudHealthcareV1beta1ConsentPolicy(
                        authorization_rule = openapi_client.models.expr.Expr(
                            description = '', 
                            expression = '', 
                            location = '', 
                            title = '', ), 
                        resource_attributes = [
                            openapi_client.models.attribute.Attribute(
                                attribute_definition_id = '', 
                                values = [
                                    ''
                                    ], )
                            ], )
                    ],
                revision_create_time = '',
                revision_id = '',
                state = 'STATE_UNSPECIFIED',
                ttl = '',
                user_id = ''
            )
        else:
            return Consent(
        )
        """

    def testConsent(self):
        """Test Consent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
