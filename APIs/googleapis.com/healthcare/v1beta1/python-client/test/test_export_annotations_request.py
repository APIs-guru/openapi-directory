# coding: utf-8

"""
    Cloud Healthcare API

    Manage, store, and access healthcare data in Google Cloud Platform.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.export_annotations_request import ExportAnnotationsRequest

class TestExportAnnotationsRequest(unittest.TestCase):
    """ExportAnnotationsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExportAnnotationsRequest:
        """Test ExportAnnotationsRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExportAnnotationsRequest`
        """
        model = ExportAnnotationsRequest()
        if include_optional:
            return ExportAnnotationsRequest(
                bigquery_destination = openapi_client.models.google_cloud_healthcare_v1beta1_annotation_big_query_destination.GoogleCloudHealthcareV1beta1AnnotationBigQueryDestination(
                    force = True, 
                    schema_type = 'SCHEMA_TYPE_UNSPECIFIED', 
                    table_uri = '', 
                    write_disposition = 'WRITE_DISPOSITION_UNSPECIFIED', ),
                gcs_destination = openapi_client.models.google_cloud_healthcare_v1beta1_annotation_gcs_destination.GoogleCloudHealthcareV1beta1AnnotationGcsDestination(
                    uri_prefix = '', )
            )
        else:
            return ExportAnnotationsRequest(
        )
        """

    def testExportAnnotationsRequest(self):
        """Test ExportAnnotationsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
