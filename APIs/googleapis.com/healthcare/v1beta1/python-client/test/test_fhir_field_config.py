# coding: utf-8

"""
    Cloud Healthcare API

    Manage, store, and access healthcare data in Google Cloud Platform.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.fhir_field_config import FhirFieldConfig

class TestFhirFieldConfig(unittest.TestCase):
    """FhirFieldConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FhirFieldConfig:
        """Test FhirFieldConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FhirFieldConfig`
        """
        model = FhirFieldConfig()
        if include_optional:
            return FhirFieldConfig(
                field_metadata_list = [
                    openapi_client.models.google_cloud_healthcare_v1beta1_deidentify_field_metadata.GoogleCloudHealthcareV1beta1DeidentifyFieldMetadata(
                        character_mask_field = openapi_client.models.character_mask_field.CharacterMaskField(), 
                        clean_text_field = openapi_client.models.clean_text_field.CleanTextField(), 
                        crypto_hash_field = openapi_client.models.crypto_hash_field.CryptoHashField(), 
                        date_shift_field = openapi_client.models.date_shift_field.DateShiftField(), 
                        keep_field = openapi_client.models.keep_field.KeepField(), 
                        paths = [
                            ''
                            ], 
                        remove_field = openapi_client.models.remove_field.RemoveField(), )
                    ],
                options = openapi_client.models.google_cloud_healthcare_v1beta1_deidentify_options.GoogleCloudHealthcareV1beta1DeidentifyOptions(
                    character_mask_config = openapi_client.models.character_mask_config.CharacterMaskConfig(
                        masking_character = '', ), 
                    contextual_deid = openapi_client.models.contextual_deid_config.ContextualDeidConfig(), 
                    crypto_hash_config = openapi_client.models.crypto_hash_config.CryptoHashConfig(
                        crypto_key = 'YQ==', 
                        kms_wrapped = openapi_client.models.kms_wrapped_crypto_key.KmsWrappedCryptoKey(
                            crypto_key = '', 
                            wrapped_key = 'YQ==', ), ), 
                    date_shift_config = openapi_client.models.date_shift_config.DateShiftConfig(
                        crypto_key = 'YQ==', ), 
                    keep_extensions = openapi_client.models.keep_extensions_config.KeepExtensionsConfig(), ),
                profile_type = 'PROFILE_TYPE_UNSPECIFIED'
            )
        else:
            return FhirFieldConfig(
        )
        """

    def testFhirFieldConfig(self):
        """Test FhirFieldConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
