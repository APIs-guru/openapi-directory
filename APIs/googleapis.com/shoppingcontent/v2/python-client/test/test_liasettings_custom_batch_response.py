# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.liasettings_custom_batch_response import LiasettingsCustomBatchResponse

class TestLiasettingsCustomBatchResponse(unittest.TestCase):
    """LiasettingsCustomBatchResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LiasettingsCustomBatchResponse:
        """Test LiasettingsCustomBatchResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LiasettingsCustomBatchResponse`
        """
        model = LiasettingsCustomBatchResponse()
        if include_optional:
            return LiasettingsCustomBatchResponse(
                entries = [
                    openapi_client.models.liasettings_custom_batch_response_entry.LiasettingsCustomBatchResponseEntry(
                        batch_id = 56, 
                        errors = openapi_client.models.errors.Errors(
                            code = 56, 
                            message = '', ), 
                        gmb_accounts = openapi_client.models.gmb_accounts.GmbAccounts(
                            account_id = '', ), 
                        kind = '', 
                        lia_settings = openapi_client.models.lia_settings.LiaSettings(
                            account_id = '', 
                            country_settings = [
                                openapi_client.models.lia_country_settings.LiaCountrySettings(
                                    about = openapi_client.models.lia_about_page_settings.LiaAboutPageSettings(
                                        status = '', 
                                        url = '', ), 
                                    country = '', 
                                    hosted_local_storefront_active = True, 
                                    inventory = openapi_client.models.lia_inventory_settings.LiaInventorySettings(
                                        inventory_verification_contact_email = '', 
                                        inventory_verification_contact_name = '', 
                                        inventory_verification_contact_status = '', 
                                        status = '', ), 
                                    on_display_to_order = openapi_client.models.lia_on_display_to_order_settings.LiaOnDisplayToOrderSettings(
                                        shipping_cost_policy_url = '', 
                                        status = '', ), 
                                    pos_data_provider = openapi_client.models.lia_pos_data_provider.LiaPosDataProvider(
                                        pos_data_provider_id = '', 
                                        pos_external_account_id = '', ), 
                                    store_pickup_active = True, )
                                ], 
                            kind = '', ), 
                        pos_data_providers = [
                            openapi_client.models.pos_data_providers.PosDataProviders(
                                country = '', )
                            ], )
                    ],
                kind = ''
            )
        else:
            return LiasettingsCustomBatchResponse(
        )
        """

    def testLiasettingsCustomBatchResponse(self):
        """Test LiasettingsCustomBatchResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
