# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.accountstatuses_custom_batch_response_entry import AccountstatusesCustomBatchResponseEntry

class TestAccountstatusesCustomBatchResponseEntry(unittest.TestCase):
    """AccountstatusesCustomBatchResponseEntry unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccountstatusesCustomBatchResponseEntry:
        """Test AccountstatusesCustomBatchResponseEntry
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccountstatusesCustomBatchResponseEntry`
        """
        model = AccountstatusesCustomBatchResponseEntry()
        if include_optional:
            return AccountstatusesCustomBatchResponseEntry(
                account_status = openapi_client.models.account_status.AccountStatus(
                    account_id = '', 
                    account_level_issues = [
                        openapi_client.models.account_status_account_level_issue.AccountStatusAccountLevelIssue(
                            country = '', 
                            destination = '', 
                            detail = '', 
                            documentation = '', 
                            id = '', 
                            severity = '', 
                            title = '', )
                        ], 
                    data_quality_issues = [
                        openapi_client.models.account_status_data_quality_issue.AccountStatusDataQualityIssue(
                            country = '', 
                            destination = '', 
                            detail = '', 
                            displayed_value = '', 
                            example_items = [
                                openapi_client.models.account_status_example_item.AccountStatusExampleItem(
                                    item_id = '', 
                                    link = '', 
                                    submitted_value = '', 
                                    title = '', 
                                    value_on_landing_page = '', )
                                ], 
                            id = '', 
                            last_checked = '', 
                            location = '', 
                            num_items = 56, 
                            severity = '', 
                            submitted_value = '', )
                        ], 
                    kind = '', 
                    products = [
                        openapi_client.models.account_status_products.AccountStatusProducts(
                            channel = '', 
                            country = '', 
                            destination = '', 
                            item_level_issues = [
                                openapi_client.models.account_status_item_level_issue.AccountStatusItemLevelIssue(
                                    attribute_name = '', 
                                    code = '', 
                                    description = '', 
                                    detail = '', 
                                    documentation = '', 
                                    num_items = '', 
                                    resolution = '', 
                                    servability = '', )
                                ], 
                            statistics = openapi_client.models.account_status_statistics.AccountStatusStatistics(
                                active = '', 
                                disapproved = '', 
                                expiring = '', 
                                pending = '', ), )
                        ], 
                    website_claimed = True, ),
                batch_id = 56,
                errors = openapi_client.models.errors.Errors(
                    code = 56, 
                    message = '', )
            )
        else:
            return AccountstatusesCustomBatchResponseEntry(
        )
        """

    def testAccountstatusesCustomBatchResponseEntry(self):
        """Test AccountstatusesCustomBatchResponseEntry"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
