# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.productstatuses_custom_batch_request import ProductstatusesCustomBatchRequest

class TestProductstatusesCustomBatchRequest(unittest.TestCase):
    """ProductstatusesCustomBatchRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProductstatusesCustomBatchRequest:
        """Test ProductstatusesCustomBatchRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProductstatusesCustomBatchRequest`
        """
        model = ProductstatusesCustomBatchRequest()
        if include_optional:
            return ProductstatusesCustomBatchRequest(
                entries = [
                    openapi_client.models.productstatuses_custom_batch_request_entry.ProductstatusesCustomBatchRequestEntry(
                        batch_id = 56, 
                        destinations = [
                            ''
                            ], 
                        include_attributes = True, 
                        merchant_id = '', 
                        method = '', 
                        product_id = '', )
                    ]
            )
        else:
            return ProductstatusesCustomBatchRequest(
        )
        """

    def testProductstatusesCustomBatchRequest(self):
        """Test ProductstatusesCustomBatchRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
