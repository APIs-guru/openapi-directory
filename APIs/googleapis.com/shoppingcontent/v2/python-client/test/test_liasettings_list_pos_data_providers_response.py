# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.liasettings_list_pos_data_providers_response import LiasettingsListPosDataProvidersResponse

class TestLiasettingsListPosDataProvidersResponse(unittest.TestCase):
    """LiasettingsListPosDataProvidersResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LiasettingsListPosDataProvidersResponse:
        """Test LiasettingsListPosDataProvidersResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LiasettingsListPosDataProvidersResponse`
        """
        model = LiasettingsListPosDataProvidersResponse()
        if include_optional:
            return LiasettingsListPosDataProvidersResponse(
                kind = '',
                pos_data_providers = [
                    openapi_client.models.pos_data_providers.PosDataProviders(
                        country = '', 
                        pos_data_providers = [
                            openapi_client.models.pos_data_providers_pos_data_provider.PosDataProvidersPosDataProvider(
                                display_name = '', 
                                full_name = '', 
                                provider_id = '', )
                            ], )
                    ]
            )
        else:
            return LiasettingsListPosDataProvidersResponse(
        )
        """

    def testLiasettingsListPosDataProvidersResponse(self):
        """Test LiasettingsListPosDataProvidersResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
