# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.accounttax_custom_batch_response import AccounttaxCustomBatchResponse

class TestAccounttaxCustomBatchResponse(unittest.TestCase):
    """AccounttaxCustomBatchResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccounttaxCustomBatchResponse:
        """Test AccounttaxCustomBatchResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccounttaxCustomBatchResponse`
        """
        model = AccounttaxCustomBatchResponse()
        if include_optional:
            return AccounttaxCustomBatchResponse(
                entries = [
                    openapi_client.models.accounttax_custom_batch_response_entry.AccounttaxCustomBatchResponseEntry(
                        account_tax = openapi_client.models.account_tax.AccountTax(
                            account_id = '', 
                            kind = '', 
                            rules = [
                                openapi_client.models.account_tax_tax_rule.AccountTaxTaxRule(
                                    country = '', 
                                    location_id = '', 
                                    rate_percent = '', 
                                    shipping_taxed = True, 
                                    use_global_rate = True, )
                                ], ), 
                        batch_id = 56, 
                        errors = openapi_client.models.errors.Errors(
                            code = 56, 
                            message = '', ), 
                        kind = '', )
                    ],
                kind = ''
            )
        else:
            return AccounttaxCustomBatchResponse(
        )
        """

    def testAccounttaxCustomBatchResponse(self):
        """Test AccounttaxCustomBatchResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
