# coding: utf-8

"""
    Cloud Functions API

    Manages lightweight user-provided functions executed in response to events.

    The version of the OpenAPI document: v2beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.service_config import ServiceConfig

class TestServiceConfig(unittest.TestCase):
    """ServiceConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceConfig:
        """Test ServiceConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceConfig`
        """
        model = ServiceConfig()
        if include_optional:
            return ServiceConfig(
                all_traffic_on_latest_revision = True,
                available_cpu = '',
                available_memory = '',
                environment_variables = {
                    'key' : ''
                    },
                ingress_settings = 'INGRESS_SETTINGS_UNSPECIFIED',
                max_instance_count = 56,
                max_instance_request_concurrency = 56,
                min_instance_count = 56,
                revision = '',
                secret_environment_variables = [
                    openapi_client.models.secret_env_var.SecretEnvVar(
                        key = '', 
                        project_id = '', 
                        secret = '', 
                        version = '', )
                    ],
                secret_volumes = [
                    openapi_client.models.secret_volume.SecretVolume(
                        mount_path = '', 
                        project_id = '', 
                        secret = '', 
                        versions = [
                            openapi_client.models.secret_version.SecretVersion(
                                path = '', 
                                version = '', )
                            ], )
                    ],
                security_level = 'SECURITY_LEVEL_UNSPECIFIED',
                service = '',
                service_account_email = '',
                timeout_seconds = 56,
                uri = '',
                vpc_connector = '',
                vpc_connector_egress_settings = 'VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED'
            )
        else:
            return ServiceConfig(
        )
        """

    def testServiceConfig(self):
        """Test ServiceConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
