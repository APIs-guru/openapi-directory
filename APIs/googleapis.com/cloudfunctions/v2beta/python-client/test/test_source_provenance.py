# coding: utf-8

"""
    Cloud Functions API

    Manages lightweight user-provided functions executed in response to events.

    The version of the OpenAPI document: v2beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.source_provenance import SourceProvenance

class TestSourceProvenance(unittest.TestCase):
    """SourceProvenance unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SourceProvenance:
        """Test SourceProvenance
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SourceProvenance`
        """
        model = SourceProvenance()
        if include_optional:
            return SourceProvenance(
                git_uri = '',
                resolved_repo_source = openapi_client.models.repo_source.RepoSource(
                    branch_name = '', 
                    commit_sha = '', 
                    dir = '', 
                    project_id = '', 
                    repo_name = '', 
                    tag_name = '', ),
                resolved_storage_source = openapi_client.models.storage_source.StorageSource(
                    bucket = '', 
                    generation = '', 
                    object = '', )
            )
        else:
            return SourceProvenance(
        )
        """

    def testSourceProvenance(self):
        """Test SourceProvenance"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
