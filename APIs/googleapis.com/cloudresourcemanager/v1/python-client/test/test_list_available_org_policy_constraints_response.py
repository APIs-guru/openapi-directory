# coding: utf-8

"""
    Cloud Resource Manager API

    Creates, reads, and updates metadata for Google Cloud Platform resource containers.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_available_org_policy_constraints_response import ListAvailableOrgPolicyConstraintsResponse

class TestListAvailableOrgPolicyConstraintsResponse(unittest.TestCase):
    """ListAvailableOrgPolicyConstraintsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListAvailableOrgPolicyConstraintsResponse:
        """Test ListAvailableOrgPolicyConstraintsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListAvailableOrgPolicyConstraintsResponse`
        """
        model = ListAvailableOrgPolicyConstraintsResponse()
        if include_optional:
            return ListAvailableOrgPolicyConstraintsResponse(
                constraints = [
                    openapi_client.models.constraint.Constraint(
                        boolean_constraint = openapi_client.models.boolean_constraint.booleanConstraint(), 
                        constraint_default = 'CONSTRAINT_DEFAULT_UNSPECIFIED', 
                        description = '', 
                        display_name = '', 
                        list_constraint = openapi_client.models.list_constraint.ListConstraint(
                            suggested_value = '', 
                            supports_under = True, ), 
                        name = '', 
                        version = 56, )
                    ],
                next_page_token = ''
            )
        else:
            return ListAvailableOrgPolicyConstraintsResponse(
        )
        """

    def testListAvailableOrgPolicyConstraintsResponse(self):
        """Test ListAvailableOrgPolicyConstraintsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
