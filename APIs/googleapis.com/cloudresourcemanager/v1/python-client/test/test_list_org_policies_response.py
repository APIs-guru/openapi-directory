# coding: utf-8

"""
    Cloud Resource Manager API

    Creates, reads, and updates metadata for Google Cloud Platform resource containers.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_org_policies_response import ListOrgPoliciesResponse

class TestListOrgPoliciesResponse(unittest.TestCase):
    """ListOrgPoliciesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListOrgPoliciesResponse:
        """Test ListOrgPoliciesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListOrgPoliciesResponse`
        """
        model = ListOrgPoliciesResponse()
        if include_optional:
            return ListOrgPoliciesResponse(
                next_page_token = '',
                policies = [
                    openapi_client.models.org_policy.OrgPolicy(
                        boolean_policy = openapi_client.models.boolean_policy.BooleanPolicy(
                            enforced = True, ), 
                        constraint = '', 
                        etag = 'YQ==', 
                        list_policy = openapi_client.models.list_policy.ListPolicy(
                            all_values = 'ALL_VALUES_UNSPECIFIED', 
                            allowed_values = [
                                ''
                                ], 
                            denied_values = [
                                ''
                                ], 
                            inherit_from_parent = True, 
                            suggested_value = '', ), 
                        restore_default = openapi_client.models.restore_default.RestoreDefault(), 
                        update_time = '', 
                        version = 56, )
                    ]
            )
        else:
            return ListOrgPoliciesResponse(
        )
        """

    def testListOrgPoliciesResponse(self):
        """Test ListOrgPoliciesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
