# coding: utf-8

"""
    Google Civic Information API

    Provides polling places, early vote locations, contest data, election officials, and government representatives for U.S. residential addresses.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.representative_info_data import RepresentativeInfoData

class TestRepresentativeInfoData(unittest.TestCase):
    """RepresentativeInfoData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RepresentativeInfoData:
        """Test RepresentativeInfoData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RepresentativeInfoData`
        """
        model = RepresentativeInfoData()
        if include_optional:
            return RepresentativeInfoData(
                divisions = {
                    'key' : openapi_client.models.geographic_division.GeographicDivision(
                        also_known_as = [
                            ''
                            ], 
                        name = '', 
                        office_indices = [
                            56
                            ], )
                    },
                offices = [
                    openapi_client.models.office.Office(
                        division_id = '', 
                        levels = [
                            'international'
                            ], 
                        name = '', 
                        official_indices = [
                            56
                            ], 
                        roles = [
                            'headOfState'
                            ], 
                        sources = [
                            openapi_client.models.source.Source(
                                name = '', 
                                official = True, )
                            ], )
                    ],
                officials = [
                    openapi_client.models.official.Official(
                        address = [
                            openapi_client.models.simple_address_type.SimpleAddressType(
                                city = '', 
                                line1 = '', 
                                line2 = '', 
                                line3 = '', 
                                location_name = '', 
                                state = '', 
                                zip = '', )
                            ], 
                        channels = [
                            openapi_client.models.channel.Channel(
                                id = '', 
                                type = '', )
                            ], 
                        emails = [
                            ''
                            ], 
                        name = '', 
                        party = '', 
                        phones = [
                            ''
                            ], 
                        photo_url = '', 
                        urls = [
                            ''
                            ], )
                    ]
            )
        else:
            return RepresentativeInfoData(
        )
        """

    def testRepresentativeInfoData(self):
        """Test RepresentativeInfoData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
