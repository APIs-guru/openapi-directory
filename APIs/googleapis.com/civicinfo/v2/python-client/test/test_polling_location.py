# coding: utf-8

"""
    Google Civic Information API

    Provides polling places, early vote locations, contest data, election officials, and government representatives for U.S. residential addresses.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.polling_location import PollingLocation

class TestPollingLocation(unittest.TestCase):
    """PollingLocation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PollingLocation:
        """Test PollingLocation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PollingLocation`
        """
        model = PollingLocation()
        if include_optional:
            return PollingLocation(
                address = openapi_client.models.simple_address_type.SimpleAddressType(
                    city = '', 
                    line1 = '', 
                    line2 = '', 
                    line3 = '', 
                    location_name = '', 
                    state = '', 
                    zip = '', ),
                end_date = '',
                latitude = 1.337,
                longitude = 1.337,
                name = '',
                notes = '',
                polling_hours = '',
                sources = [
                    openapi_client.models.source.Source(
                        name = '', 
                        official = True, )
                    ],
                start_date = '',
                voter_services = ''
            )
        else:
            return PollingLocation(
        )
        """

    def testPollingLocation(self):
        """Test PollingLocation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
