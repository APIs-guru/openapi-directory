# coding: utf-8

"""
    BigQuery Data Policy API

    Allows users to manage BigQuery data policies.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.data_policy import DataPolicy

class TestDataPolicy(unittest.TestCase):
    """DataPolicy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataPolicy:
        """Test DataPolicy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataPolicy`
        """
        model = DataPolicy()
        if include_optional:
            return DataPolicy(
                data_masking_policy = openapi_client.models.data_masking_policy.DataMaskingPolicy(
                    predefined_expression = 'PREDEFINED_EXPRESSION_UNSPECIFIED', 
                    routine = '', ),
                data_policy_id = '',
                data_policy_type = 'DATA_POLICY_TYPE_UNSPECIFIED',
                name = '',
                policy_tag = ''
            )
        else:
            return DataPolicy(
        )
        """

    def testDataPolicy(self):
        """Test DataPolicy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
