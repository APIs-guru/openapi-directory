# coding: utf-8

"""
    Search Ads 360 API

    The Search Ads 360 API allows developers to automate uploading conversions and downloading reports from Search Ads 360.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.report_request_filters_inner import ReportRequestFiltersInner

class TestReportRequestFiltersInner(unittest.TestCase):
    """ReportRequestFiltersInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReportRequestFiltersInner:
        """Test ReportRequestFiltersInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReportRequestFiltersInner`
        """
        model = ReportRequestFiltersInner()
        if include_optional:
            return ReportRequestFiltersInner(
                column = openapi_client.models.report_api_column_spec.ReportApiColumnSpec(
                    column_name = '', 
                    custom_dimension_name = '', 
                    custom_metric_name = '', 
                    end_date = '', 
                    group_by_column = True, 
                    header_text = '', 
                    platform_source = '', 
                    product_report_perspective = '', 
                    saved_column_name = '', 
                    start_date = '', ),
                operator = '',
                values = [
                    null
                    ]
            )
        else:
            return ReportRequestFiltersInner(
        )
        """

    def testReportRequestFiltersInner(self):
        """Test ReportRequestFiltersInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
