# coding: utf-8

"""
    Search Ads 360 API

    The Search Ads 360 API allows developers to automate uploading conversions and downloading reports from Search Ads 360.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.report_request import ReportRequest

class TestReportRequest(unittest.TestCase):
    """ReportRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReportRequest:
        """Test ReportRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReportRequest`
        """
        model = ReportRequest()
        if include_optional:
            return ReportRequest(
                columns = [
                    openapi_client.models.report_api_column_spec.ReportApiColumnSpec(
                        column_name = '', 
                        custom_dimension_name = '', 
                        custom_metric_name = '', 
                        end_date = '', 
                        group_by_column = True, 
                        header_text = '', 
                        platform_source = '', 
                        product_report_perspective = '', 
                        saved_column_name = '', 
                        start_date = '', )
                    ],
                download_format = '',
                filters = [
                    openapi_client.models.report_request_filters_inner.ReportRequest_filters_inner(
                        column = openapi_client.models.report_api_column_spec.ReportApiColumnSpec(
                            column_name = '', 
                            custom_dimension_name = '', 
                            custom_metric_name = '', 
                            end_date = '', 
                            group_by_column = True, 
                            header_text = '', 
                            platform_source = '', 
                            product_report_perspective = '', 
                            saved_column_name = '', 
                            start_date = '', ), 
                        operator = '', 
                        values = [
                            null
                            ], )
                    ],
                include_deleted_entities = True,
                include_removed_entities = True,
                max_rows_per_file = 56,
                order_by = [
                    openapi_client.models.report_request_order_by_inner.ReportRequest_orderBy_inner(
                        column = openapi_client.models.report_api_column_spec.ReportApiColumnSpec(
                            column_name = '', 
                            custom_dimension_name = '', 
                            custom_metric_name = '', 
                            end_date = '', 
                            group_by_column = True, 
                            header_text = '', 
                            platform_source = '', 
                            product_report_perspective = '', 
                            saved_column_name = '', 
                            start_date = '', ), 
                        sort_order = '', )
                    ],
                report_scope = openapi_client.models.report_request_report_scope.ReportRequest_reportScope(
                    ad_group_id = '', 
                    ad_id = '', 
                    advertiser_id = '', 
                    agency_id = '', 
                    campaign_id = '', 
                    engine_account_id = '', 
                    keyword_id = '', ),
                report_type = '',
                row_count = 56,
                start_row = 56,
                statistics_currency = '',
                time_range = openapi_client.models.report_request_time_range.ReportRequest_timeRange(
                    changed_attributes_since_timestamp = '', 
                    changed_metrics_since_timestamp = '', 
                    end_date = '', 
                    start_date = '', ),
                verify_single_time_zone = True
            )
        else:
            return ReportRequest(
        )
        """

    def testReportRequest(self):
        """Test ReportRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
