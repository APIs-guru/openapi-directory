# coding: utf-8

"""
    Google Workspace Alert Center API

    Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dlp_rule_violation import DlpRuleViolation

class TestDlpRuleViolation(unittest.TestCase):
    """DlpRuleViolation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DlpRuleViolation:
        """Test DlpRuleViolation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DlpRuleViolation`
        """
        model = DlpRuleViolation()
        if include_optional:
            return DlpRuleViolation(
                rule_violation_info = openapi_client.models.rule_violation_info.RuleViolationInfo(
                    data_source = 'DATA_SOURCE_UNSPECIFIED', 
                    match_info = [
                        openapi_client.models.match_info.MatchInfo(
                            predefined_detector = openapi_client.models.predefined_detector_info.PredefinedDetectorInfo(
                                detector_name = '', ), 
                            user_defined_detector = openapi_client.models.user_defined_detector_info.UserDefinedDetectorInfo(
                                display_name = '', 
                                resource_name = '', ), )
                        ], 
                    recipients = [
                        ''
                        ], 
                    resource_info = openapi_client.models.resource_info.ResourceInfo(
                        document_id = '', 
                        resource_title = '', ), 
                    rule_info = openapi_client.models.rule_info.RuleInfo(
                        display_name = '', 
                        resource_name = '', ), 
                    suppressed_action_types = [
                        'ACTION_TYPE_UNSPECIFIED'
                        ], 
                    trigger = 'TRIGGER_UNSPECIFIED', 
                    triggered_action_info = [
                        openapi_client.models.action_info.ActionInfo()
                        ], 
                    triggered_action_types = [
                        'ACTION_TYPE_UNSPECIFIED'
                        ], 
                    triggering_user_email = '', )
            )
        else:
            return DlpRuleViolation(
        )
        """

    def testDlpRuleViolation(self):
        """Test DlpRuleViolation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
