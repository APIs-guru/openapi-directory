# coding: utf-8

"""
    Google Workspace Alert Center API

    Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.voice_misconfiguration import VoiceMisconfiguration

class TestVoiceMisconfiguration(unittest.TestCase):
    """VoiceMisconfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VoiceMisconfiguration:
        """Test VoiceMisconfiguration
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VoiceMisconfiguration`
        """
        model = VoiceMisconfiguration()
        if include_optional:
            return VoiceMisconfiguration(
                entity_name = '',
                entity_type = 'ENTITY_TYPE_UNSPECIFIED',
                fix_uri = '',
                members_misconfiguration = openapi_client.models.transfer_misconfiguration.TransferMisconfiguration(
                    errors = [
                        openapi_client.models.transfer_error.TransferError(
                            email = '', 
                            entity_type = 'TRANSFER_ENTITY_TYPE_UNSPECIFIED', 
                            id = '', 
                            invalid_reason = 'TRANSFER_INVALID_REASON_UNSPECIFIED', 
                            name = '', )
                        ], ),
                transfer_misconfiguration = openapi_client.models.transfer_misconfiguration.TransferMisconfiguration(
                    errors = [
                        openapi_client.models.transfer_error.TransferError(
                            email = '', 
                            entity_type = 'TRANSFER_ENTITY_TYPE_UNSPECIFIED', 
                            id = '', 
                            invalid_reason = 'TRANSFER_INVALID_REASON_UNSPECIFIED', 
                            name = '', )
                        ], ),
                voicemail_misconfiguration = openapi_client.models.voicemail_misconfiguration.VoicemailMisconfiguration(
                    errors = [
                        openapi_client.models.voicemail_recipient_error.VoicemailRecipientError(
                            email = '', 
                            invalid_reason = 'EMAIL_INVALID_REASON_UNSPECIFIED', )
                        ], )
            )
        else:
            return VoiceMisconfiguration(
        )
        """

    def testVoiceMisconfiguration(self):
        """Test VoiceMisconfiguration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
