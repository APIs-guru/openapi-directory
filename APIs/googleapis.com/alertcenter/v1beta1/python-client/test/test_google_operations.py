# coding: utf-8

"""
    Google Workspace Alert Center API

    Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_operations import GoogleOperations

class TestGoogleOperations(unittest.TestCase):
    """GoogleOperations unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleOperations:
        """Test GoogleOperations
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleOperations`
        """
        model = GoogleOperations()
        if include_optional:
            return GoogleOperations(
                affected_user_emails = [
                    ''
                    ],
                attachment_data = openapi_client.models.attachment.Attachment(
                    csv = openapi_client.models.csv.Csv(
                        data_rows = [
                            openapi_client.models.csv_row.CsvRow(
                                entries = [
                                    ''
                                    ], )
                            ], 
                        headers = [
                            ''
                            ], ), ),
                description = '',
                domain = '',
                header = '',
                title = ''
            )
        else:
            return GoogleOperations(
        )
        """

    def testGoogleOperations(self):
        """Test GoogleOperations"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
