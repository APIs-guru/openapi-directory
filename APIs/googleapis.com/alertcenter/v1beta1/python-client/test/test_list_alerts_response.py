# coding: utf-8

"""
    Google Workspace Alert Center API

    Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. 

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_alerts_response import ListAlertsResponse

class TestListAlertsResponse(unittest.TestCase):
    """ListAlertsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListAlertsResponse:
        """Test ListAlertsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListAlertsResponse`
        """
        model = ListAlertsResponse()
        if include_optional:
            return ListAlertsResponse(
                alerts = [
                    openapi_client.models.alert.Alert(
                        alert_id = '', 
                        create_time = '', 
                        customer_id = '', 
                        data = {
                            'key' : null
                            }, 
                        deleted = True, 
                        end_time = '', 
                        etag = '', 
                        metadata = openapi_client.models.alert_metadata.AlertMetadata(
                            alert_id = '', 
                            assignee = '', 
                            customer_id = '', 
                            etag = '', 
                            severity = '', 
                            status = '', 
                            update_time = '', ), 
                        security_investigation_tool_link = '', 
                        source = '', 
                        start_time = '', 
                        type = '', 
                        update_time = '', )
                    ],
                next_page_token = ''
            )
        else:
            return ListAlertsResponse(
        )
        """

    def testListAlertsResponse(self):
        """Test ListAlertsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
