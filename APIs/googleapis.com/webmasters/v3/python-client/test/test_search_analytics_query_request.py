# coding: utf-8

"""
    Search Console API

    View Google Search Console data for your verified sites.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.search_analytics_query_request import SearchAnalyticsQueryRequest

class TestSearchAnalyticsQueryRequest(unittest.TestCase):
    """SearchAnalyticsQueryRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchAnalyticsQueryRequest:
        """Test SearchAnalyticsQueryRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchAnalyticsQueryRequest`
        """
        model = SearchAnalyticsQueryRequest()
        if include_optional:
            return SearchAnalyticsQueryRequest(
                aggregation_type = '',
                data_state = '',
                dimension_filter_groups = [
                    openapi_client.models.api_dimension_filter_group.ApiDimensionFilterGroup(
                        filters = [
                            openapi_client.models.api_dimension_filter.ApiDimensionFilter(
                                dimension = '', 
                                expression = '', 
                                operator = '', )
                            ], 
                        group_type = '', )
                    ],
                dimensions = [
                    ''
                    ],
                end_date = '',
                row_limit = 56,
                search_type = '',
                start_date = '',
                start_row = 56
            )
        else:
            return SearchAnalyticsQueryRequest(
        )
        """

    def testSearchAnalyticsQueryRequest(self):
        """Test SearchAnalyticsQueryRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
