# coding: utf-8

"""
    API Discovery Service

    Provides information about other Google APIs, such as what APIs are available, the resource, and method details for each API.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.rest_description import RestDescription

class TestRestDescription(unittest.TestCase):
    """RestDescription unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestDescription:
        """Test RestDescription
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestDescription`
        """
        model = RestDescription()
        if include_optional:
            return RestDescription(
                auth = openapi_client.models.rest_description_auth.RestDescription_auth(
                    oauth2 = openapi_client.models.rest_description_auth_oauth2.RestDescription_auth_oauth2(
                        scopes = {
                            'key' : openapi_client.models.rest_description_auth_oauth2_scopes_value.RestDescription_auth_oauth2_scopes_value(
                                description = '', )
                            }, ), ),
                base_path = '',
                base_url = '',
                batch_path = '',
                canonical_name = '',
                description = '',
                discovery_version = 'v1',
                documentation_link = '',
                endpoints = [
                    openapi_client.models.rest_description_endpoints_inner.RestDescription_endpoints_inner(
                        deprecated = True, 
                        description = '', 
                        endpoint_url = '', 
                        location = '', )
                    ],
                etag = '',
                exponential_backoff_default = True,
                features = [
                    ''
                    ],
                icons = openapi_client.models.directory_list_items_inner_icons.DirectoryList_items_inner_icons(
                    x16 = '', 
                    x32 = '', ),
                id = '',
                kind = 'discovery#restDescription',
                labels = [
                    ''
                    ],
                methods = {
                    'key' : openapi_client.models.rest_method.RestMethod(
                        deprecated = True, 
                        description = '', 
                        etag_required = True, 
                        flat_path = '', 
                        http_method = '', 
                        id = '', 
                        media_upload = openapi_client.models.rest_method_media_upload.RestMethod_mediaUpload(
                            accept = [
                                ''
                                ], 
                            max_size = '', 
                            protocols = openapi_client.models.rest_method_media_upload_protocols.RestMethod_mediaUpload_protocols(
                                resumable = openapi_client.models.rest_method_media_upload_protocols_resumable.RestMethod_mediaUpload_protocols_resumable(
                                    multipart = True, 
                                    path = '', ), 
                                simple = openapi_client.models.rest_method_media_upload_protocols_simple.RestMethod_mediaUpload_protocols_simple(
                                    multipart = True, 
                                    path = '', ), ), ), 
                        parameter_order = [
                            ''
                            ], 
                        parameters = {
                            'key' : openapi_client.models.json_schema.JsonSchema(
                                __ref = '', 
                                additional_properties = openapi_client.models.json_schema.JsonSchema(
                                    __ref = '', 
                                    annotations = openapi_client.models.json_schema_annotations.JsonSchema_annotations(
                                        required = [
                                            ''
                                            ], ), 
                                    deprecated = True, 
                                    description = '', 
                                    enum = [
                                        ''
                                        ], 
                                    enum_deprecated = [
                                        True
                                        ], 
                                    enum_descriptions = [
                                        ''
                                        ], 
                                    format = '', 
                                    id = '', 
                                    items = , 
                                    location = '', 
                                    maximum = '', 
                                    minimum = '', 
                                    pattern = '', 
                                    properties = {
                                        'key' : 
                                        }, 
                                    read_only = True, 
                                    repeated = True, 
                                    required = True, 
                                    type = '', 
                                    variant = openapi_client.models.json_schema_variant.JsonSchema_variant(
                                        discriminant = '', 
                                        map = [
                                            openapi_client.models.json_schema_variant_map_inner.JsonSchema_variant_map_inner(
                                                __ref = '', 
                                                type_value = '', )
                                            ], ), ), 
                                annotations = openapi_client.models.json_schema_annotations.JsonSchema_annotations(), 
                                deprecated = True, 
                                description = '', 
                                enum = [
                                    ''
                                    ], 
                                enum_deprecated = [
                                    True
                                    ], 
                                enum_descriptions = [
                                    ''
                                    ], 
                                format = '', 
                                id = '', 
                                items = , 
                                location = '', 
                                maximum = '', 
                                minimum = '', 
                                pattern = '', 
                                properties = {
                                    'key' : 
                                    }, 
                                read_only = True, 
                                repeated = True, 
                                required = True, 
                                type = '', 
                                variant = openapi_client.models.json_schema_variant.JsonSchema_variant(
                                    discriminant = '', ), )
                            }, 
                        path = '', 
                        request = openapi_client.models.rest_method_request.RestMethod_request(
                            __ref = '', 
                            parameter_name = '', ), 
                        response = openapi_client.models.rest_method_response.RestMethod_response(
                            __ref = '', ), 
                        scopes = [
                            ''
                            ], 
                        supports_media_download = True, 
                        supports_media_upload = True, 
                        supports_subscription = True, 
                        use_media_download_service = True, )
                    },
                name = '',
                owner_domain = '',
                owner_name = '',
                package_path = '',
                parameters = {
                    'key' : openapi_client.models.json_schema.JsonSchema(
                        __ref = '', 
                        additional_properties = openapi_client.models.json_schema.JsonSchema(
                            __ref = '', 
                            annotations = openapi_client.models.json_schema_annotations.JsonSchema_annotations(
                                required = [
                                    ''
                                    ], ), 
                            deprecated = True, 
                            description = '', 
                            enum = [
                                ''
                                ], 
                            enum_deprecated = [
                                True
                                ], 
                            enum_descriptions = [
                                ''
                                ], 
                            format = '', 
                            id = '', 
                            items = , 
                            location = '', 
                            maximum = '', 
                            minimum = '', 
                            pattern = '', 
                            properties = {
                                'key' : 
                                }, 
                            read_only = True, 
                            repeated = True, 
                            required = True, 
                            type = '', 
                            variant = openapi_client.models.json_schema_variant.JsonSchema_variant(
                                discriminant = '', 
                                map = [
                                    openapi_client.models.json_schema_variant_map_inner.JsonSchema_variant_map_inner(
                                        __ref = '', 
                                        type_value = '', )
                                    ], ), ), 
                        annotations = openapi_client.models.json_schema_annotations.JsonSchema_annotations(), 
                        deprecated = True, 
                        description = '', 
                        enum = [
                            ''
                            ], 
                        enum_deprecated = [
                            True
                            ], 
                        enum_descriptions = [
                            ''
                            ], 
                        format = '', 
                        id = '', 
                        items = , 
                        location = '', 
                        maximum = '', 
                        minimum = '', 
                        pattern = '', 
                        properties = {
                            'key' : 
                            }, 
                        read_only = True, 
                        repeated = True, 
                        required = True, 
                        type = '', 
                        variant = openapi_client.models.json_schema_variant.JsonSchema_variant(
                            discriminant = '', ), )
                    },
                protocol = 'rest',
                resources = {
                    'key' : openapi_client.models.rest_resource.RestResource(
                        deprecated = True, 
                        methods = {
                            'key' : openapi_client.models.rest_method.RestMethod(
                                deprecated = True, 
                                description = '', 
                                etag_required = True, 
                                flat_path = '', 
                                http_method = '', 
                                id = '', 
                                media_upload = openapi_client.models.rest_method_media_upload.RestMethod_mediaUpload(
                                    accept = [
                                        ''
                                        ], 
                                    max_size = '', 
                                    protocols = openapi_client.models.rest_method_media_upload_protocols.RestMethod_mediaUpload_protocols(
                                        resumable = openapi_client.models.rest_method_media_upload_protocols_resumable.RestMethod_mediaUpload_protocols_resumable(
                                            multipart = True, 
                                            path = '', ), 
                                        simple = openapi_client.models.rest_method_media_upload_protocols_simple.RestMethod_mediaUpload_protocols_simple(
                                            multipart = True, 
                                            path = '', ), ), ), 
                                parameter_order = [
                                    ''
                                    ], 
                                parameters = {
                                    'key' : openapi_client.models.json_schema.JsonSchema(
                                        __ref = '', 
                                        additional_properties = openapi_client.models.json_schema.JsonSchema(
                                            __ref = '', 
                                            annotations = openapi_client.models.json_schema_annotations.JsonSchema_annotations(
                                                required = [
                                                    ''
                                                    ], ), 
                                            deprecated = True, 
                                            description = '', 
                                            enum = [
                                                ''
                                                ], 
                                            enum_deprecated = [
                                                True
                                                ], 
                                            enum_descriptions = [
                                                ''
                                                ], 
                                            format = '', 
                                            id = '', 
                                            items = , 
                                            location = '', 
                                            maximum = '', 
                                            minimum = '', 
                                            pattern = '', 
                                            properties = {
                                                'key' : 
                                                }, 
                                            read_only = True, 
                                            repeated = True, 
                                            required = True, 
                                            type = '', 
                                            variant = openapi_client.models.json_schema_variant.JsonSchema_variant(
                                                discriminant = '', 
                                                map = [
                                                    openapi_client.models.json_schema_variant_map_inner.JsonSchema_variant_map_inner(
                                                        __ref = '', 
                                                        type_value = '', )
                                                    ], ), ), 
                                        annotations = openapi_client.models.json_schema_annotations.JsonSchema_annotations(), 
                                        deprecated = True, 
                                        description = '', 
                                        enum = [
                                            ''
                                            ], 
                                        enum_deprecated = [
                                            True
                                            ], 
                                        enum_descriptions = [
                                            ''
                                            ], 
                                        format = '', 
                                        id = '', 
                                        items = , 
                                        location = '', 
                                        maximum = '', 
                                        minimum = '', 
                                        pattern = '', 
                                        properties = {
                                            'key' : 
                                            }, 
                                        read_only = True, 
                                        repeated = True, 
                                        required = True, 
                                        type = '', 
                                        variant = openapi_client.models.json_schema_variant.JsonSchema_variant(
                                            discriminant = '', ), )
                                    }, 
                                path = '', 
                                request = openapi_client.models.rest_method_request.RestMethod_request(
                                    __ref = '', 
                                    parameter_name = '', ), 
                                response = openapi_client.models.rest_method_response.RestMethod_response(
                                    __ref = '', ), 
                                scopes = [
                                    ''
                                    ], 
                                supports_media_download = True, 
                                supports_media_upload = True, 
                                supports_subscription = True, 
                                use_media_download_service = True, )
                            }, 
                        resources = {
                            'key' : openapi_client.models.rest_resource.RestResource(
                                deprecated = True, )
                            }, )
                    },
                revision = '',
                root_url = '',
                schemas = {
                    'key' : openapi_client.models.json_schema.JsonSchema(
                        __ref = '', 
                        additional_properties = openapi_client.models.json_schema.JsonSchema(
                            __ref = '', 
                            annotations = openapi_client.models.json_schema_annotations.JsonSchema_annotations(
                                required = [
                                    ''
                                    ], ), 
                            deprecated = True, 
                            description = '', 
                            enum = [
                                ''
                                ], 
                            enum_deprecated = [
                                True
                                ], 
                            enum_descriptions = [
                                ''
                                ], 
                            format = '', 
                            id = '', 
                            items = , 
                            location = '', 
                            maximum = '', 
                            minimum = '', 
                            pattern = '', 
                            properties = {
                                'key' : 
                                }, 
                            read_only = True, 
                            repeated = True, 
                            required = True, 
                            type = '', 
                            variant = openapi_client.models.json_schema_variant.JsonSchema_variant(
                                discriminant = '', 
                                map = [
                                    openapi_client.models.json_schema_variant_map_inner.JsonSchema_variant_map_inner(
                                        __ref = '', 
                                        type_value = '', )
                                    ], ), ), 
                        annotations = openapi_client.models.json_schema_annotations.JsonSchema_annotations(), 
                        deprecated = True, 
                        description = '', 
                        enum = [
                            ''
                            ], 
                        enum_deprecated = [
                            True
                            ], 
                        enum_descriptions = [
                            ''
                            ], 
                        format = '', 
                        id = '', 
                        items = , 
                        location = '', 
                        maximum = '', 
                        minimum = '', 
                        pattern = '', 
                        properties = {
                            'key' : 
                            }, 
                        read_only = True, 
                        repeated = True, 
                        required = True, 
                        type = '', 
                        variant = openapi_client.models.json_schema_variant.JsonSchema_variant(
                            discriminant = '', ), )
                    },
                service_path = '',
                title = '',
                version = '',
                version_module = True
            )
        else:
            return RestDescription(
        )
        """

    def testRestDescription(self):
        """Test RestDescription"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
