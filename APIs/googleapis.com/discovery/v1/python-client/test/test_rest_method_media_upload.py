# coding: utf-8

"""
    API Discovery Service

    Provides information about other Google APIs, such as what APIs are available, the resource, and method details for each API.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.rest_method_media_upload import RestMethodMediaUpload

class TestRestMethodMediaUpload(unittest.TestCase):
    """RestMethodMediaUpload unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestMethodMediaUpload:
        """Test RestMethodMediaUpload
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestMethodMediaUpload`
        """
        model = RestMethodMediaUpload()
        if include_optional:
            return RestMethodMediaUpload(
                accept = [
                    ''
                    ],
                max_size = '',
                protocols = openapi_client.models.rest_method_media_upload_protocols.RestMethod_mediaUpload_protocols(
                    resumable = openapi_client.models.rest_method_media_upload_protocols_resumable.RestMethod_mediaUpload_protocols_resumable(
                        multipart = True, 
                        path = '', ), 
                    simple = openapi_client.models.rest_method_media_upload_protocols_simple.RestMethod_mediaUpload_protocols_simple(
                        multipart = True, 
                        path = '', ), )
            )
        else:
            return RestMethodMediaUpload(
        )
        """

    def testRestMethodMediaUpload(self):
        """Test RestMethodMediaUpload"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
