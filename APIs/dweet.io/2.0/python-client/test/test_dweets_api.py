# coding: utf-8

"""
    dweet.io

    Dweet.io allows users to share data from mobile, tablets, and pcs, and them to other devices and accounts across social media platforms. Dweet.io provides an API to access the different functionality of the Dweet.io service. Users can make REST calls to read and create dweets, lock and unlock things, and perform other calls. The API returns JSON and JSONP.

    The version of the OpenAPI document: 2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.dweets_api import DweetsApi


class TestDweetsApi(unittest.TestCase):
    """DweetsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DweetsApi()

    def tearDown(self) -> None:
        pass

    def test_dweet_for_thing_post(self) -> None:
        """Test case for dweet_for_thing_post

        Create a dweet for a thing.
        """
        pass

    def test_dweet_quietly_for_thing_post(self) -> None:
        """Test case for dweet_quietly_for_thing_post

        Create a dweet for a thing.  This method differs from /dweet/for/{thing} only in that successful dweets result in an HTTP 204 response rather than the typical verbose response.
        """
        pass

    def test_get_dweets_for_thing_get(self) -> None:
        """Test case for get_dweets_for_thing_get

        Read the last 5 cached dweets for a thing.
        """
        pass

    def test_get_latest_dweet(self) -> None:
        """Test case for get_latest_dweet

        Read the latest dweet for a thing.
        """
        pass

    def test_listen_for_dweets(self) -> None:
        """Test case for listen_for_dweets

        Listen for dweets from a thing.
        """
        pass


if __name__ == '__main__':
    unittest.main()
