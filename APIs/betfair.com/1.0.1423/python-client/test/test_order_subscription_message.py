# coding: utf-8

"""
    Betfair: Exchange Streaming API

    API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)

    The version of the OpenAPI document: 1.0.1423
    Contact: bdp@betfair.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.order_subscription_message import OrderSubscriptionMessage

class TestOrderSubscriptionMessage(unittest.TestCase):
    """OrderSubscriptionMessage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrderSubscriptionMessage:
        """Test OrderSubscriptionMessage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrderSubscriptionMessage`
        """
        model = OrderSubscriptionMessage()
        if include_optional:
            return OrderSubscriptionMessage(
                clk = '',
                conflate_ms = 56,
                heartbeat_ms = 56,
                initial_clk = '',
                order_filter = openapi_client.models.order_filter.OrderFilter(
                    account_ids = [
                        56
                        ], 
                    customer_strategy_refs = [
                        ''
                        ], 
                    include_overall_position = True, 
                    partition_matched_by_strategy_ref = True, ),
                segmentation_enabled = True
            )
        else:
            return OrderSubscriptionMessage(
        )
        """

    def testOrderSubscriptionMessage(self):
        """Test OrderSubscriptionMessage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
