# coding: utf-8

"""
    Twitter API v2

    Twitter API v2 available endpoints

    The version of the OpenAPI document: 2.62
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dm_event import DmEvent

class TestDmEvent(unittest.TestCase):
    """DmEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DmEvent:
        """Test DmEvent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DmEvent`
        """
        model = DmEvent()
        if include_optional:
            return DmEvent(
                attachments = openapi_client.models.dm_event_attachments.DmEvent_attachments(
                    card_ids = [
                        ''
                        ], 
                    media_keys = [
                        '4_072888001528021798096225500850762068629'
                        ], ),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                dm_conversation_id = '123123123-456456456',
                event_type = 'MessageCreate',
                id = '1146654567674912769',
                participant_ids = [
                    '2244994945'
                    ],
                referenced_tweets = [
                    openapi_client.models.dm_event_referenced_tweets_inner.DmEvent_referenced_tweets_inner(
                        id = '1346889436626259968', )
                    ],
                sender_id = '2244994945',
                text = ''
            )
        else:
            return DmEvent(
                event_type = 'MessageCreate',
                id = '1146654567674912769',
        )
        """

    def testDmEvent(self):
        """Test DmEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
