# coding: utf-8

"""
    Twitter API v2

    Twitter API v2 available endpoints

    The version of the OpenAPI document: 2.62
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.user_compliance_data import UserComplianceData

class TestUserComplianceData(unittest.TestCase):
    """UserComplianceData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserComplianceData:
        """Test UserComplianceData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserComplianceData`
        """
        model = UserComplianceData()
        if include_optional:
            return UserComplianceData(
                user_protect = openapi_client.models.user_compliance_schema.UserComplianceSchema(
                    event_at = '2021-07-06T18:40:40Z', 
                    user = openapi_client.models.user_compliance_schema_user.UserComplianceSchema_user(
                        id = '2244994945', ), ),
                user_unprotect = openapi_client.models.user_compliance_schema.UserComplianceSchema(
                    event_at = '2021-07-06T18:40:40Z', 
                    user = openapi_client.models.user_compliance_schema_user.UserComplianceSchema_user(
                        id = '2244994945', ), ),
                user_delete = openapi_client.models.user_compliance_schema.UserComplianceSchema(
                    event_at = '2021-07-06T18:40:40Z', 
                    user = openapi_client.models.user_compliance_schema_user.UserComplianceSchema_user(
                        id = '2244994945', ), ),
                user_undelete = openapi_client.models.user_compliance_schema.UserComplianceSchema(
                    event_at = '2021-07-06T18:40:40Z', 
                    user = openapi_client.models.user_compliance_schema_user.UserComplianceSchema_user(
                        id = '2244994945', ), ),
                user_suspend = openapi_client.models.user_compliance_schema.UserComplianceSchema(
                    event_at = '2021-07-06T18:40:40Z', 
                    user = openapi_client.models.user_compliance_schema_user.UserComplianceSchema_user(
                        id = '2244994945', ), ),
                user_unsuspend = openapi_client.models.user_compliance_schema.UserComplianceSchema(
                    event_at = '2021-07-06T18:40:40Z', 
                    user = openapi_client.models.user_compliance_schema_user.UserComplianceSchema_user(
                        id = '2244994945', ), ),
                user_withheld = openapi_client.models.user_takedown_compliance_schema.UserTakedownComplianceSchema(
                    event_at = '2021-07-06T18:40:40Z', 
                    user = openapi_client.models.user_compliance_schema_user.UserComplianceSchema_user(
                        id = '2244994945', ), 
                    withheld_in_countries = [
                        'US'
                        ], ),
                scrub_geo = openapi_client.models.user_scrub_geo_object_schema.UserScrubGeoObjectSchema(
                    event_at = '2021-07-06T18:40:40Z', 
                    up_to_tweet_id = '1346889436626259968', 
                    user = openapi_client.models.user_compliance_schema_user.UserComplianceSchema_user(
                        id = '2244994945', ), ),
                user_profile_modification = openapi_client.models.user_profile_modification_object_schema.UserProfileModificationObjectSchema(
                    event_at = '2021-07-06T18:40:40Z', 
                    new_value = '', 
                    profile_field = '', 
                    user = openapi_client.models.user_compliance_schema_user.UserComplianceSchema_user(
                        id = '2244994945', ), )
            )
        else:
            return UserComplianceData(
                user_protect = openapi_client.models.user_compliance_schema.UserComplianceSchema(
                    event_at = '2021-07-06T18:40:40Z', 
                    user = openapi_client.models.user_compliance_schema_user.UserComplianceSchema_user(
                        id = '2244994945', ), ),
                user_unprotect = openapi_client.models.user_compliance_schema.UserComplianceSchema(
                    event_at = '2021-07-06T18:40:40Z', 
                    user = openapi_client.models.user_compliance_schema_user.UserComplianceSchema_user(
                        id = '2244994945', ), ),
                user_delete = openapi_client.models.user_compliance_schema.UserComplianceSchema(
                    event_at = '2021-07-06T18:40:40Z', 
                    user = openapi_client.models.user_compliance_schema_user.UserComplianceSchema_user(
                        id = '2244994945', ), ),
                user_undelete = openapi_client.models.user_compliance_schema.UserComplianceSchema(
                    event_at = '2021-07-06T18:40:40Z', 
                    user = openapi_client.models.user_compliance_schema_user.UserComplianceSchema_user(
                        id = '2244994945', ), ),
                user_suspend = openapi_client.models.user_compliance_schema.UserComplianceSchema(
                    event_at = '2021-07-06T18:40:40Z', 
                    user = openapi_client.models.user_compliance_schema_user.UserComplianceSchema_user(
                        id = '2244994945', ), ),
                user_unsuspend = openapi_client.models.user_compliance_schema.UserComplianceSchema(
                    event_at = '2021-07-06T18:40:40Z', 
                    user = openapi_client.models.user_compliance_schema_user.UserComplianceSchema_user(
                        id = '2244994945', ), ),
                user_withheld = openapi_client.models.user_takedown_compliance_schema.UserTakedownComplianceSchema(
                    event_at = '2021-07-06T18:40:40Z', 
                    user = openapi_client.models.user_compliance_schema_user.UserComplianceSchema_user(
                        id = '2244994945', ), 
                    withheld_in_countries = [
                        'US'
                        ], ),
                scrub_geo = openapi_client.models.user_scrub_geo_object_schema.UserScrubGeoObjectSchema(
                    event_at = '2021-07-06T18:40:40Z', 
                    up_to_tweet_id = '1346889436626259968', 
                    user = openapi_client.models.user_compliance_schema_user.UserComplianceSchema_user(
                        id = '2244994945', ), ),
                user_profile_modification = openapi_client.models.user_profile_modification_object_schema.UserProfileModificationObjectSchema(
                    event_at = '2021-07-06T18:40:40Z', 
                    new_value = '', 
                    profile_field = '', 
                    user = openapi_client.models.user_compliance_schema_user.UserComplianceSchema_user(
                        id = '2244994945', ), ),
        )
        """

    def testUserComplianceData(self):
        """Test UserComplianceData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
