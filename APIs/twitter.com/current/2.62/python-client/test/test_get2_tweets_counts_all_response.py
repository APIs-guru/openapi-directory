# coding: utf-8

"""
    Twitter API v2

    Twitter API v2 available endpoints

    The version of the OpenAPI document: 2.62
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get2_tweets_counts_all_response import Get2TweetsCountsAllResponse

class TestGet2TweetsCountsAllResponse(unittest.TestCase):
    """Get2TweetsCountsAllResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Get2TweetsCountsAllResponse:
        """Test Get2TweetsCountsAllResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Get2TweetsCountsAllResponse`
        """
        model = Get2TweetsCountsAllResponse()
        if include_optional:
            return Get2TweetsCountsAllResponse(
                data = [
                    openapi_client.models.search_count.SearchCount(
                        end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        tweet_count = 56, )
                    ],
                errors = [
                    openapi_client.models.problem.Problem(
                        detail = '', 
                        status = 56, 
                        title = '', 
                        type = '', )
                    ],
                meta = openapi_client.models.get2_tweets_counts_all_response_meta.Get2TweetsCountsAllResponse_meta(
                    newest_id = '', 
                    next_token = '0', 
                    oldest_id = '', 
                    total_tweet_count = 56, )
            )
        else:
            return Get2TweetsCountsAllResponse(
        )
        """

    def testGet2TweetsCountsAllResponse(self):
        """Test Get2TweetsCountsAllResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
