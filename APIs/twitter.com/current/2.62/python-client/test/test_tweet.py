# coding: utf-8

"""
    Twitter API v2

    Twitter API v2 available endpoints

    The version of the OpenAPI document: 2.62
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tweet import Tweet

class TestTweet(unittest.TestCase):
    """Tweet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Tweet:
        """Test Tweet
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Tweet`
        """
        model = Tweet()
        if include_optional:
            return Tweet(
                attachments = openapi_client.models.tweet_attachments.Tweet_attachments(
                    media_keys = [
                        '4_072888001528021798096225500850762068629'
                        ], 
                    poll_ids = [
                        '1365059861688410112'
                        ], ),
                author_id = '2244994945',
                context_annotations = [
                    openapi_client.models.context_annotation.ContextAnnotation(
                        domain = openapi_client.models.context_annotation_domain_fields.ContextAnnotationDomainFields(
                            description = '', 
                            id = '4807288800152802', 
                            name = '', ), 
                        entity = openapi_client.models.context_annotation_entity_fields.ContextAnnotationEntityFields(
                            description = '', 
                            id = '4807288800152802', 
                            name = '', ), )
                    ],
                conversation_id = '1346889436626259968',
                created_at = '2021-01-06T18:40:40Z',
                edit_controls = openapi_client.models.tweet_edit_controls.Tweet_edit_controls(
                    editable_until = '2021-01-06T18:40:40Z', 
                    edits_remaining = 56, 
                    is_edit_eligible = False, ),
                edit_history_tweet_ids = [
                    '1346889436626259968'
                    ],
                entities = openapi_client.models.full_text_entities.FullTextEntities(
                    annotations = [
                        null
                        ], 
                    cashtags = [
                        null
                        ], 
                    hashtags = [
                        null
                        ], 
                    mentions = [
                        null
                        ], 
                    urls = [
                        null
                        ], ),
                geo = openapi_client.models.tweet_geo.Tweet_geo(
                    coordinates = openapi_client.models.point.Point(
                        coordinates = [-105.18816086351444,40.247749999999996], 
                        type = 'Point', ), 
                    place_id = 'f7eb2fa2fea288b1', ),
                id = '1346889436626259968',
                in_reply_to_user_id = '2244994945',
                lang = 'en',
                non_public_metrics = openapi_client.models.tweet_non_public_metrics.Tweet_non_public_metrics(
                    impression_count = 56, ),
                organic_metrics = openapi_client.models.tweet_organic_metrics.Tweet_organic_metrics(
                    impression_count = 56, 
                    like_count = 56, 
                    reply_count = 56, 
                    retweet_count = 56, ),
                possibly_sensitive = False,
                promoted_metrics = openapi_client.models.tweet_promoted_metrics.Tweet_promoted_metrics(
                    impression_count = 56, 
                    like_count = 56, 
                    reply_count = 56, 
                    retweet_count = 56, ),
                public_metrics = openapi_client.models.tweet_public_metrics.Tweet_public_metrics(
                    impression_count = 56, 
                    like_count = 56, 
                    quote_count = 56, 
                    reply_count = 56, 
                    retweet_count = 56, ),
                referenced_tweets = [
                    openapi_client.models.tweet_referenced_tweets_inner.Tweet_referenced_tweets_inner(
                        id = '1346889436626259968', 
                        type = 'retweeted', )
                    ],
                reply_settings = 'everyone',
                source = '',
                text = 'Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i',
                withheld = openapi_client.models.tweet_withheld.TweetWithheld(
                    copyright = True, 
                    country_codes = [
                        'US'
                        ], 
                    scope = 'tweet', )
            )
        else:
            return Tweet(
                edit_history_tweet_ids = [
                    '1346889436626259968'
                    ],
                id = '1346889436626259968',
                text = 'Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i',
        )
        """

    def testTweet(self):
        """Test Tweet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
