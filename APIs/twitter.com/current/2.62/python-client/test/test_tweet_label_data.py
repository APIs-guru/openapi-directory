# coding: utf-8

"""
    Twitter API v2

    Twitter API v2 available endpoints

    The version of the OpenAPI document: 2.62
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tweet_label_data import TweetLabelData

class TestTweetLabelData(unittest.TestCase):
    """TweetLabelData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TweetLabelData:
        """Test TweetLabelData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TweetLabelData`
        """
        model = TweetLabelData()
        if include_optional:
            return TweetLabelData(
                public_tweet_notice = openapi_client.models.tweet_notice.TweetNotice(
                    application = 'apply', 
                    details = '', 
                    event_at = '2021-07-06T18:40:40Z', 
                    event_type = 'misleading', 
                    extended_details_url = '', 
                    label_title = '', 
                    tweet = openapi_client.models.tweet_compliance_schema_tweet.TweetComplianceSchema_tweet(
                        author_id = '2244994945', 
                        id = '1346889436626259968', ), ),
                public_tweet_unviewable = openapi_client.models.tweet_unviewable.TweetUnviewable(
                    application = 'apply', 
                    event_at = '2021-07-06T18:40:40Z', 
                    tweet = openapi_client.models.tweet_compliance_schema_tweet.TweetComplianceSchema_tweet(
                        author_id = '2244994945', 
                        id = '1346889436626259968', ), )
            )
        else:
            return TweetLabelData(
                public_tweet_notice = openapi_client.models.tweet_notice.TweetNotice(
                    application = 'apply', 
                    details = '', 
                    event_at = '2021-07-06T18:40:40Z', 
                    event_type = 'misleading', 
                    extended_details_url = '', 
                    label_title = '', 
                    tweet = openapi_client.models.tweet_compliance_schema_tweet.TweetComplianceSchema_tweet(
                        author_id = '2244994945', 
                        id = '1346889436626259968', ), ),
                public_tweet_unviewable = openapi_client.models.tweet_unviewable.TweetUnviewable(
                    application = 'apply', 
                    event_at = '2021-07-06T18:40:40Z', 
                    tweet = openapi_client.models.tweet_compliance_schema_tweet.TweetComplianceSchema_tweet(
                        author_id = '2244994945', 
                        id = '1346889436626259968', ), ),
        )
        """

    def testTweetLabelData(self):
        """Test TweetLabelData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
