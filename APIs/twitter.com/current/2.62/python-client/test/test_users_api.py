# coding: utf-8

"""
    Twitter API v2

    Twitter API v2 available endpoints

    The version of the OpenAPI document: 2.62
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.users_api import UsersApi


class TestUsersApi(unittest.TestCase):
    """UsersApi unit test stubs"""

    def setUp(self) -> None:
        self.api = UsersApi()

    def tearDown(self) -> None:
        pass

    def test_find_my_user(self) -> None:
        """Test case for find_my_user

        User lookup me
        """
        pass

    def test_find_user_by_id(self) -> None:
        """Test case for find_user_by_id

        User lookup by ID
        """
        pass

    def test_find_user_by_username(self) -> None:
        """Test case for find_user_by_username

        User lookup by username
        """
        pass

    def test_find_users_by_id(self) -> None:
        """Test case for find_users_by_id

        User lookup by IDs
        """
        pass

    def test_find_users_by_username(self) -> None:
        """Test case for find_users_by_username

        User lookup by usernames
        """
        pass

    def test_list_get_followers(self) -> None:
        """Test case for list_get_followers

        Returns User objects that follow a List by the provided List ID
        """
        pass

    def test_list_get_members(self) -> None:
        """Test case for list_get_members

        Returns User objects that are members of a List by the provided List ID.
        """
        pass

    def test_tweets_id_liking_users(self) -> None:
        """Test case for tweets_id_liking_users

        Returns User objects that have liked the provided Tweet ID
        """
        pass

    def test_tweets_id_retweeting_users(self) -> None:
        """Test case for tweets_id_retweeting_users

        Returns User objects that have retweeted the provided Tweet ID
        """
        pass

    def test_users_id_block(self) -> None:
        """Test case for users_id_block

        Block User by User ID
        """
        pass

    def test_users_id_blocking(self) -> None:
        """Test case for users_id_blocking

        Returns User objects that are blocked by provided User ID
        """
        pass

    def test_users_id_follow(self) -> None:
        """Test case for users_id_follow

        Follow User
        """
        pass

    def test_users_id_followers(self) -> None:
        """Test case for users_id_followers

        Followers by User ID
        """
        pass

    def test_users_id_following(self) -> None:
        """Test case for users_id_following

        Following by User ID
        """
        pass

    def test_users_id_mute(self) -> None:
        """Test case for users_id_mute

        Mute User by User ID.
        """
        pass

    def test_users_id_muting(self) -> None:
        """Test case for users_id_muting

        Returns User objects that are muted by the provided User ID
        """
        pass

    def test_users_id_unblock(self) -> None:
        """Test case for users_id_unblock

        Unblock User by User ID
        """
        pass

    def test_users_id_unfollow(self) -> None:
        """Test case for users_id_unfollow

        Unfollow User
        """
        pass

    def test_users_id_unmute(self) -> None:
        """Test case for users_id_unmute

        Unmute User by User ID
        """
        pass


if __name__ == '__main__':
    unittest.main()
