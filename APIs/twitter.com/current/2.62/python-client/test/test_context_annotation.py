# coding: utf-8

"""
    Twitter API v2

    Twitter API v2 available endpoints

    The version of the OpenAPI document: 2.62
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.context_annotation import ContextAnnotation

class TestContextAnnotation(unittest.TestCase):
    """ContextAnnotation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContextAnnotation:
        """Test ContextAnnotation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContextAnnotation`
        """
        model = ContextAnnotation()
        if include_optional:
            return ContextAnnotation(
                domain = openapi_client.models.context_annotation_domain_fields.ContextAnnotationDomainFields(
                    description = '', 
                    id = '4807288800152802', 
                    name = '', ),
                entity = openapi_client.models.context_annotation_entity_fields.ContextAnnotationEntityFields(
                    description = '', 
                    id = '4807288800152802', 
                    name = '', )
            )
        else:
            return ContextAnnotation(
                domain = openapi_client.models.context_annotation_domain_fields.ContextAnnotationDomainFields(
                    description = '', 
                    id = '4807288800152802', 
                    name = '', ),
                entity = openapi_client.models.context_annotation_entity_fields.ContextAnnotationEntityFields(
                    description = '', 
                    id = '4807288800152802', 
                    name = '', ),
        )
        """

    def testContextAnnotation(self):
        """Test ContextAnnotation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
