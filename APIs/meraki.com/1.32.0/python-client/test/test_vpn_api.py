# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.vpn_api import VpnApi


class TestVpnApi(unittest.TestCase):
    """VpnApi unit test stubs"""

    def setUp(self) -> None:
        self.api = VpnApi()

    def tearDown(self) -> None:
        pass

    def test_get_network_appliance_vpn_bgp_1(self) -> None:
        """Test case for get_network_appliance_vpn_bgp_1

        Return a Hub BGP Configuration
        """
        pass

    def test_get_network_appliance_vpn_site_to_site_vpn_1(self) -> None:
        """Test case for get_network_appliance_vpn_site_to_site_vpn_1

        Return the site-to-site VPN settings of a network
        """
        pass

    def test_get_network_wireless_ssid_vpn_2(self) -> None:
        """Test case for get_network_wireless_ssid_vpn_2

        List the VPN settings for the SSID.
        """
        pass

    def test_get_organization_appliance_vpn_stats_1(self) -> None:
        """Test case for get_organization_appliance_vpn_stats_1

        Show VPN history stat for networks in an organization
        """
        pass

    def test_get_organization_appliance_vpn_statuses_1(self) -> None:
        """Test case for get_organization_appliance_vpn_statuses_1

        Show VPN status for networks in an organization
        """
        pass

    def test_get_organization_appliance_vpn_third_party_vpn_peers_1(self) -> None:
        """Test case for get_organization_appliance_vpn_third_party_vpn_peers_1

        Return the third party VPN peers for an organization
        """
        pass

    def test_get_organization_appliance_vpn_vpn_firewall_rules_1(self) -> None:
        """Test case for get_organization_appliance_vpn_vpn_firewall_rules_1

        Return the firewall rules for an organization's site-to-site VPN
        """
        pass

    def test_update_network_appliance_vpn_bgp_1(self) -> None:
        """Test case for update_network_appliance_vpn_bgp_1

        Update a Hub BGP Configuration
        """
        pass

    def test_update_network_appliance_vpn_site_to_site_vpn_1(self) -> None:
        """Test case for update_network_appliance_vpn_site_to_site_vpn_1

        Update the site-to-site VPN settings of a network
        """
        pass

    def test_update_network_wireless_ssid_vpn_2(self) -> None:
        """Test case for update_network_wireless_ssid_vpn_2

        Update the VPN settings for the SSID
        """
        pass

    def test_update_organization_appliance_vpn_third_party_vpn_peers_1(self) -> None:
        """Test case for update_organization_appliance_vpn_third_party_vpn_peers_1

        Update the third party VPN peers for an organization
        """
        pass

    def test_update_organization_appliance_vpn_vpn_firewall_rules_1(self) -> None:
        """Test case for update_organization_appliance_vpn_vpn_firewall_rules_1

        Update the firewall rules of an organization's site-to-site VPN
        """
        pass


if __name__ == '__main__':
    unittest.main()
