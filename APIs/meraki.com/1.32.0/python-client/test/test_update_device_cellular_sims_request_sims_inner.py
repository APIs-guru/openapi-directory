# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_device_cellular_sims_request_sims_inner import UpdateDeviceCellularSimsRequestSimsInner

class TestUpdateDeviceCellularSimsRequestSimsInner(unittest.TestCase):
    """UpdateDeviceCellularSimsRequestSimsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateDeviceCellularSimsRequestSimsInner:
        """Test UpdateDeviceCellularSimsRequestSimsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateDeviceCellularSimsRequestSimsInner`
        """
        model = UpdateDeviceCellularSimsRequestSimsInner()
        if include_optional:
            return UpdateDeviceCellularSimsRequestSimsInner(
                apns = [
                    openapi_client.models.update_device_cellular_sims_request_sims_inner_apns_inner.updateDeviceCellularSims_request_sims_inner_apns_inner(
                        allowed_ip_types = [
                            ''
                            ], 
                        authentication = openapi_client.models.update_device_cellular_sims_request_sims_inner_apns_inner_authentication.updateDeviceCellularSims_request_sims_inner_apns_inner_authentication(
                            password = '', 
                            type = 'none', 
                            username = '', ), 
                        name = '', )
                    ],
                is_primary = True,
                slot = 'sim1'
            )
        else:
            return UpdateDeviceCellularSimsRequestSimsInner(
        )
        """

    def testUpdateDeviceCellularSimsRequestSimsInner(self):
        """Test UpdateDeviceCellularSimsRequestSimsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
