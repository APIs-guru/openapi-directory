# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_network_switch_link_aggregation_request import CreateNetworkSwitchLinkAggregationRequest

class TestCreateNetworkSwitchLinkAggregationRequest(unittest.TestCase):
    """CreateNetworkSwitchLinkAggregationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateNetworkSwitchLinkAggregationRequest:
        """Test CreateNetworkSwitchLinkAggregationRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateNetworkSwitchLinkAggregationRequest`
        """
        model = CreateNetworkSwitchLinkAggregationRequest()
        if include_optional:
            return CreateNetworkSwitchLinkAggregationRequest(
                switch_ports = [
                    openapi_client.models.create_network_switch_link_aggregation_request_switch_ports_inner.createNetworkSwitchLinkAggregation_request_switchPorts_inner(
                        port_id = '', 
                        serial = '', )
                    ],
                switch_profile_ports = [
                    openapi_client.models.create_network_switch_link_aggregation_request_switch_profile_ports_inner.createNetworkSwitchLinkAggregation_request_switchProfilePorts_inner(
                        port_id = '', 
                        profile = '', )
                    ]
            )
        else:
            return CreateNetworkSwitchLinkAggregationRequest(
        )
        """

    def testCreateNetworkSwitchLinkAggregationRequest(self):
        """Test CreateNetworkSwitchLinkAggregationRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
