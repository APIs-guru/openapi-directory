# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_organization_wireless_devices_ethernet_statuses200_response_inner import GetOrganizationWirelessDevicesEthernetStatuses200ResponseInner

class TestGetOrganizationWirelessDevicesEthernetStatuses200ResponseInner(unittest.TestCase):
    """GetOrganizationWirelessDevicesEthernetStatuses200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetOrganizationWirelessDevicesEthernetStatuses200ResponseInner:
        """Test GetOrganizationWirelessDevicesEthernetStatuses200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetOrganizationWirelessDevicesEthernetStatuses200ResponseInner`
        """
        model = GetOrganizationWirelessDevicesEthernetStatuses200ResponseInner()
        if include_optional:
            return GetOrganizationWirelessDevicesEthernetStatuses200ResponseInner(
                aggregation = openapi_client.models.get_organization_wireless_devices_ethernet_statuses_200_response_inner_aggregation.getOrganizationWirelessDevicesEthernetStatuses_200_response_inner_aggregation(
                    enabled = True, 
                    speed = 56, ),
                name = '',
                network = openapi_client.models.get_organization_wireless_devices_ethernet_statuses_200_response_inner_network.getOrganizationWirelessDevicesEthernetStatuses_200_response_inner_network(
                    id = '', ),
                ports = [
                    openapi_client.models.get_organization_wireless_devices_ethernet_statuses_200_response_inner_ports_inner.getOrganizationWirelessDevicesEthernetStatuses_200_response_inner_ports_inner(
                        link_negotiation = openapi_client.models.get_organization_wireless_devices_ethernet_statuses_200_response_inner_ports_inner_link_negotiation.getOrganizationWirelessDevicesEthernetStatuses_200_response_inner_ports_inner_linkNegotiation(
                            duplex = '', 
                            speed = 56, ), 
                        name = '', 
                        poe = openapi_client.models.get_organization_wireless_devices_ethernet_statuses_200_response_inner_ports_inner_poe.getOrganizationWirelessDevicesEthernetStatuses_200_response_inner_ports_inner_poe(
                            standard = '', ), )
                    ],
                power = openapi_client.models.get_organization_wireless_devices_ethernet_statuses_200_response_inner_power.getOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power(
                    ac = openapi_client.models.get_organization_wireless_devices_ethernet_statuses_200_response_inner_power_ac.getOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power_ac(
                        is_connected = True, ), 
                    mode = '', 
                    poe = openapi_client.models.get_organization_wireless_devices_ethernet_statuses_200_response_inner_power_poe.getOrganizationWirelessDevicesEthernetStatuses_200_response_inner_power_poe(
                        is_connected = True, ), ),
                serial = ''
            )
        else:
            return GetOrganizationWirelessDevicesEthernetStatuses200ResponseInner(
        )
        """

    def testGetOrganizationWirelessDevicesEthernetStatuses200ResponseInner(self):
        """Test GetOrganizationWirelessDevicesEthernetStatuses200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
