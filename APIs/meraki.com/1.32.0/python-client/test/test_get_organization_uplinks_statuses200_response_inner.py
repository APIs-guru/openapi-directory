# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_organization_uplinks_statuses200_response_inner import GetOrganizationUplinksStatuses200ResponseInner

class TestGetOrganizationUplinksStatuses200ResponseInner(unittest.TestCase):
    """GetOrganizationUplinksStatuses200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetOrganizationUplinksStatuses200ResponseInner:
        """Test GetOrganizationUplinksStatuses200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetOrganizationUplinksStatuses200ResponseInner`
        """
        model = GetOrganizationUplinksStatuses200ResponseInner()
        if include_optional:
            return GetOrganizationUplinksStatuses200ResponseInner(
                last_reported_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                model = '',
                network_id = '',
                serial = '',
                uplinks = [
                    openapi_client.models.get_organization_uplinks_statuses_200_response_inner_uplinks_inner.getOrganizationUplinksStatuses_200_response_inner_uplinks_inner(
                        apn = '', 
                        connection_type = '', 
                        dns1 = '', 
                        dns2 = '', 
                        gateway = '', 
                        iccid = '', 
                        interface = 'cellular', 
                        ip = '', 
                        ip_assigned_by = '', 
                        primary_dns = '', 
                        provider = '', 
                        public_ip = '', 
                        secondary_dns = '', 
                        signal_stat = openapi_client.models.get_organization_cellular_gateway_uplink_statuses_200_response_inner_uplinks_inner_signal_stat.getOrganizationCellularGatewayUplinkStatuses_200_response_inner_uplinks_inner_signalStat(
                            rsrp = '', 
                            rsrq = '', ), 
                        signal_type = '', 
                        status = 'active', )
                    ]
            )
        else:
            return GetOrganizationUplinksStatuses200ResponseInner(
        )
        """

    def testGetOrganizationUplinksStatuses200ResponseInner(self):
        """Test GetOrganizationUplinksStatuses200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
