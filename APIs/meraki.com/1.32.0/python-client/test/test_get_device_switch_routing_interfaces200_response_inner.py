# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_device_switch_routing_interfaces200_response_inner import GetDeviceSwitchRoutingInterfaces200ResponseInner

class TestGetDeviceSwitchRoutingInterfaces200ResponseInner(unittest.TestCase):
    """GetDeviceSwitchRoutingInterfaces200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetDeviceSwitchRoutingInterfaces200ResponseInner:
        """Test GetDeviceSwitchRoutingInterfaces200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetDeviceSwitchRoutingInterfaces200ResponseInner`
        """
        model = GetDeviceSwitchRoutingInterfaces200ResponseInner()
        if include_optional:
            return GetDeviceSwitchRoutingInterfaces200ResponseInner(
                default_gateway = '',
                interface_id = '',
                interface_ip = '',
                ipv6 = openapi_client.models.get_device_switch_routing_interfaces_200_response_inner_ipv6.getDeviceSwitchRoutingInterfaces_200_response_inner_ipv6(
                    address = '', 
                    assignment_mode = '', 
                    gateway = '', 
                    prefix = '', ),
                multicast_routing = '',
                name = '',
                ospf_settings = openapi_client.models.get_device_switch_routing_interfaces_200_response_inner_ospf_settings.getDeviceSwitchRoutingInterfaces_200_response_inner_ospfSettings(
                    area = '', 
                    cost = 56, 
                    is_passive_enabled = True, ),
                ospf_v3 = openapi_client.models.get_device_switch_routing_interfaces_200_response_inner_ospf_v3.getDeviceSwitchRoutingInterfaces_200_response_inner_ospfV3(
                    area = '', 
                    cost = 56, 
                    is_passive_enabled = True, ),
                subnet = '',
                vlan_id = 56
            )
        else:
            return GetDeviceSwitchRoutingInterfaces200ResponseInner(
        )
        """

    def testGetDeviceSwitchRoutingInterfaces200ResponseInner(self):
        """Test GetDeviceSwitchRoutingInterfaces200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
