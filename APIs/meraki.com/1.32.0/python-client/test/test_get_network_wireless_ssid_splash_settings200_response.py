# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_network_wireless_ssid_splash_settings200_response import GetNetworkWirelessSsidSplashSettings200Response

class TestGetNetworkWirelessSsidSplashSettings200Response(unittest.TestCase):
    """GetNetworkWirelessSsidSplashSettings200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetNetworkWirelessSsidSplashSettings200Response:
        """Test GetNetworkWirelessSsidSplashSettings200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetNetworkWirelessSsidSplashSettings200Response`
        """
        model = GetNetworkWirelessSsidSplashSettings200Response()
        if include_optional:
            return GetNetworkWirelessSsidSplashSettings200Response(
                allow_simultaneous_logins = True,
                billing = openapi_client.models.get_network_wireless_ssid_splash_settings_200_response_billing.getNetworkWirelessSsidSplashSettings_200_response_billing(
                    free_access = openapi_client.models.get_network_wireless_ssid_splash_settings_200_response_billing_free_access.getNetworkWirelessSsidSplashSettings_200_response_billing_freeAccess(
                        duration_in_minutes = 56, 
                        enabled = True, ), 
                    prepaid_access_fast_login_enabled = True, 
                    reply_to_email_address = '', ),
                block_all_traffic_before_sign_on = True,
                controller_disconnection_behavior = '',
                guest_sponsorship = openapi_client.models.get_network_wireless_ssid_splash_settings_200_response_guest_sponsorship.getNetworkWirelessSsidSplashSettings_200_response_guestSponsorship(
                    duration_in_minutes = 56, 
                    guest_can_request_timeframe = True, ),
                redirect_url = '',
                self_registration = openapi_client.models.get_network_wireless_ssid_splash_settings_200_response_self_registration.getNetworkWirelessSsidSplashSettings_200_response_selfRegistration(
                    authorization_type = 'admin', 
                    enabled = True, ),
                sentry_enrollment = openapi_client.models.get_network_wireless_ssid_splash_settings_200_response_sentry_enrollment.getNetworkWirelessSsidSplashSettings_200_response_sentryEnrollment(
                    enforced_systems = [
                        ''
                        ], 
                    strength = 'click-through', 
                    systems_manager_network = openapi_client.models.get_network_wireless_ssid_splash_settings_200_response_sentry_enrollment_systems_manager_network.getNetworkWirelessSsidSplashSettings_200_response_sentryEnrollment_systemsManagerNetwork(
                        id = '', ), ),
                splash_image = openapi_client.models.get_network_wireless_ssid_splash_settings_200_response_splash_image.getNetworkWirelessSsidSplashSettings_200_response_splashImage(
                    extension = '', 
                    md5 = '', ),
                splash_logo = openapi_client.models.get_network_wireless_ssid_splash_settings_200_response_splash_logo.getNetworkWirelessSsidSplashSettings_200_response_splashLogo(
                    extension = '', 
                    md5 = '', ),
                splash_page = '',
                splash_prepaid_front = openapi_client.models.get_network_wireless_ssid_splash_settings_200_response_splash_prepaid_front.getNetworkWirelessSsidSplashSettings_200_response_splashPrepaidFront(
                    extension = '', 
                    md5 = '', ),
                splash_timeout = 56,
                splash_url = '',
                ssid_number = 56,
                use_redirect_url = True,
                use_splash_url = True,
                welcome_message = ''
            )
        else:
            return GetNetworkWirelessSsidSplashSettings200Response(
        )
        """

    def testGetNetworkWirelessSsidSplashSettings200Response(self):
        """Test GetNetworkWirelessSsidSplashSettings200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
