# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_network_wireless_rf_profile_request_per_ssid_settings import CreateNetworkWirelessRfProfileRequestPerSsidSettings

class TestCreateNetworkWirelessRfProfileRequestPerSsidSettings(unittest.TestCase):
    """CreateNetworkWirelessRfProfileRequestPerSsidSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateNetworkWirelessRfProfileRequestPerSsidSettings:
        """Test CreateNetworkWirelessRfProfileRequestPerSsidSettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateNetworkWirelessRfProfileRequestPerSsidSettings`
        """
        model = CreateNetworkWirelessRfProfileRequestPerSsidSettings()
        if include_optional:
            return CreateNetworkWirelessRfProfileRequestPerSsidSettings(
                var_0 = openapi_client.models.create_network_wireless_rf_profile_request_per_ssid_settings_0.createNetworkWirelessRfProfile_request_perSsidSettings_0(
                    band_operation_mode = '2.4ghz', 
                    band_steering_enabled = True, 
                    min_bitrate = 1.337, ),
                var_1 = openapi_client.models.create_network_wireless_rf_profile_request_per_ssid_settings_1.createNetworkWirelessRfProfile_request_perSsidSettings_1(
                    band_operation_mode = '2.4ghz', 
                    band_steering_enabled = True, 
                    min_bitrate = 1.337, ),
                var_2 = openapi_client.models.create_network_wireless_rf_profile_request_per_ssid_settings_2.createNetworkWirelessRfProfile_request_perSsidSettings_2(
                    band_operation_mode = '2.4ghz', 
                    band_steering_enabled = True, 
                    min_bitrate = 1.337, ),
                var_3 = openapi_client.models.create_network_wireless_rf_profile_request_per_ssid_settings_3.createNetworkWirelessRfProfile_request_perSsidSettings_3(
                    band_operation_mode = '2.4ghz', 
                    band_steering_enabled = True, 
                    min_bitrate = 1.337, ),
                var_4 = openapi_client.models.create_network_wireless_rf_profile_request_per_ssid_settings_4.createNetworkWirelessRfProfile_request_perSsidSettings_4(
                    band_operation_mode = '2.4ghz', 
                    band_steering_enabled = True, 
                    min_bitrate = 1.337, ),
                var_5 = openapi_client.models.create_network_wireless_rf_profile_request_per_ssid_settings_5.createNetworkWirelessRfProfile_request_perSsidSettings_5(
                    band_operation_mode = '2.4ghz', 
                    band_steering_enabled = True, 
                    min_bitrate = 1.337, ),
                var_6 = openapi_client.models.create_network_wireless_rf_profile_request_per_ssid_settings_6.createNetworkWirelessRfProfile_request_perSsidSettings_6(
                    band_operation_mode = '2.4ghz', 
                    band_steering_enabled = True, 
                    min_bitrate = 1.337, ),
                var_7 = openapi_client.models.create_network_wireless_rf_profile_request_per_ssid_settings_7.createNetworkWirelessRfProfile_request_perSsidSettings_7(
                    band_operation_mode = '2.4ghz', 
                    band_steering_enabled = True, 
                    min_bitrate = 1.337, ),
                var_8 = openapi_client.models.create_network_wireless_rf_profile_request_per_ssid_settings_8.createNetworkWirelessRfProfile_request_perSsidSettings_8(
                    band_operation_mode = '2.4ghz', 
                    band_steering_enabled = True, 
                    min_bitrate = 1.337, ),
                var_9 = openapi_client.models.create_network_wireless_rf_profile_request_per_ssid_settings_9.createNetworkWirelessRfProfile_request_perSsidSettings_9(
                    band_operation_mode = '2.4ghz', 
                    band_steering_enabled = True, 
                    min_bitrate = 1.337, ),
                var_10 = openapi_client.models.create_network_wireless_rf_profile_request_per_ssid_settings_10.createNetworkWirelessRfProfile_request_perSsidSettings_10(
                    band_operation_mode = '2.4ghz', 
                    band_steering_enabled = True, 
                    min_bitrate = 1.337, ),
                var_11 = openapi_client.models.create_network_wireless_rf_profile_request_per_ssid_settings_11.createNetworkWirelessRfProfile_request_perSsidSettings_11(
                    band_operation_mode = '2.4ghz', 
                    band_steering_enabled = True, 
                    min_bitrate = 1.337, ),
                var_12 = openapi_client.models.create_network_wireless_rf_profile_request_per_ssid_settings_12.createNetworkWirelessRfProfile_request_perSsidSettings_12(
                    band_operation_mode = '2.4ghz', 
                    band_steering_enabled = True, 
                    min_bitrate = 1.337, ),
                var_13 = openapi_client.models.create_network_wireless_rf_profile_request_per_ssid_settings_13.createNetworkWirelessRfProfile_request_perSsidSettings_13(
                    band_operation_mode = '2.4ghz', 
                    band_steering_enabled = True, 
                    min_bitrate = 1.337, ),
                var_14 = openapi_client.models.create_network_wireless_rf_profile_request_per_ssid_settings_14.createNetworkWirelessRfProfile_request_perSsidSettings_14(
                    band_operation_mode = '2.4ghz', 
                    band_steering_enabled = True, 
                    min_bitrate = 1.337, )
            )
        else:
            return CreateNetworkWirelessRfProfileRequestPerSsidSettings(
        )
        """

    def testCreateNetworkWirelessRfProfileRequestPerSsidSettings(self):
        """Test CreateNetworkWirelessRfProfileRequestPerSsidSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
