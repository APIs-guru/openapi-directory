# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_organization_branding_policy_request_help_settings import CreateOrganizationBrandingPolicyRequestHelpSettings

class TestCreateOrganizationBrandingPolicyRequestHelpSettings(unittest.TestCase):
    """CreateOrganizationBrandingPolicyRequestHelpSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateOrganizationBrandingPolicyRequestHelpSettings:
        """Test CreateOrganizationBrandingPolicyRequestHelpSettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateOrganizationBrandingPolicyRequestHelpSettings`
        """
        model = CreateOrganizationBrandingPolicyRequestHelpSettings()
        if include_optional:
            return CreateOrganizationBrandingPolicyRequestHelpSettings(
                api_docs_subtab = 'default or inherit',
                cases_subtab = 'default or inherit',
                cisco_meraki_product_documentation = '',
                community_subtab = 'default or inherit',
                data_protection_requests_subtab = 'default or inherit',
                firewall_info_subtab = 'default or inherit',
                get_help_subtab = 'default or inherit',
                get_help_subtab_knowledge_base_search = '',
                hardware_replacements_subtab = 'default or inherit',
                help_tab = 'default or inherit',
                help_widget = 'default or inherit',
                new_features_subtab = 'default or inherit',
                sm_forums = 'default or inherit',
                support_contact_info = '',
                universal_search_knowledge_base_search = 'default or inherit'
            )
        else:
            return CreateOrganizationBrandingPolicyRequestHelpSettings(
        )
        """

    def testCreateOrganizationBrandingPolicyRequestHelpSettings(self):
        """Test CreateOrganizationBrandingPolicyRequestHelpSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
