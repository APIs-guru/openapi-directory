# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_organization_switch_ports_by_switch200_response_inner import GetOrganizationSwitchPortsBySwitch200ResponseInner

class TestGetOrganizationSwitchPortsBySwitch200ResponseInner(unittest.TestCase):
    """GetOrganizationSwitchPortsBySwitch200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetOrganizationSwitchPortsBySwitch200ResponseInner:
        """Test GetOrganizationSwitchPortsBySwitch200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetOrganizationSwitchPortsBySwitch200ResponseInner`
        """
        model = GetOrganizationSwitchPortsBySwitch200ResponseInner()
        if include_optional:
            return GetOrganizationSwitchPortsBySwitch200ResponseInner(
                mac = '',
                model = '',
                name = '',
                network = openapi_client.models.get_organization_switch_ports_by_switch_200_response_inner_network.getOrganizationSwitchPortsBySwitch_200_response_inner_network(
                    id = '', 
                    name = '', ),
                ports = [
                    openapi_client.models.get_organization_switch_ports_by_switch_200_response_inner_ports_inner.getOrganizationSwitchPortsBySwitch_200_response_inner_ports_inner(
                        access_policy_type = 'Custom access policy', 
                        allowed_vlans = '', 
                        enabled = True, 
                        link_negotiation = '', 
                        name = '', 
                        poe_enabled = True, 
                        port_id = '', 
                        rstp_enabled = True, 
                        sticky_mac_allow_list = [
                            ''
                            ], 
                        sticky_mac_allow_list_limit = 56, 
                        stp_guard = 'bpdu guard', 
                        tags = [
                            ''
                            ], 
                        type = 'access', 
                        vlan = 56, 
                        voice_vlan = 56, )
                    ],
                serial = ''
            )
        else:
            return GetOrganizationSwitchPortsBySwitch200ResponseInner(
        )
        """

    def testGetOrganizationSwitchPortsBySwitch200ResponseInner(self):
        """Test GetOrganizationSwitchPortsBySwitch200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
