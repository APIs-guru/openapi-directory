# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_device_live_tools_ping200_response_results import GetDeviceLiveToolsPing200ResponseResults

class TestGetDeviceLiveToolsPing200ResponseResults(unittest.TestCase):
    """GetDeviceLiveToolsPing200ResponseResults unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetDeviceLiveToolsPing200ResponseResults:
        """Test GetDeviceLiveToolsPing200ResponseResults
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetDeviceLiveToolsPing200ResponseResults`
        """
        model = GetDeviceLiveToolsPing200ResponseResults()
        if include_optional:
            return GetDeviceLiveToolsPing200ResponseResults(
                latencies = openapi_client.models.get_device_live_tools_ping_200_response_results_latencies.getDeviceLiveToolsPing_200_response_results_latencies(
                    average = 1.337, 
                    maximum = 1.337, 
                    minimum = 1.337, ),
                loss = openapi_client.models.get_device_live_tools_ping_200_response_results_loss.getDeviceLiveToolsPing_200_response_results_loss(
                    percentage = 1.337, ),
                received = 56,
                replies = [
                    openapi_client.models.get_device_live_tools_ping_200_response_results_replies_inner.getDeviceLiveToolsPing_200_response_results_replies_inner(
                        latency = 1.337, 
                        sequence_id = 56, 
                        size = 56, )
                    ],
                sent = 56
            )
        else:
            return GetDeviceLiveToolsPing200ResponseResults(
        )
        """

    def testGetDeviceLiveToolsPing200ResponseResults(self):
        """Test GetDeviceLiveToolsPing200ResponseResults"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
