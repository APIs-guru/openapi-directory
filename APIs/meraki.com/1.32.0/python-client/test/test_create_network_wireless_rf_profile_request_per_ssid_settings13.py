# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_network_wireless_rf_profile_request_per_ssid_settings13 import CreateNetworkWirelessRfProfileRequestPerSsidSettings13

class TestCreateNetworkWirelessRfProfileRequestPerSsidSettings13(unittest.TestCase):
    """CreateNetworkWirelessRfProfileRequestPerSsidSettings13 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateNetworkWirelessRfProfileRequestPerSsidSettings13:
        """Test CreateNetworkWirelessRfProfileRequestPerSsidSettings13
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateNetworkWirelessRfProfileRequestPerSsidSettings13`
        """
        model = CreateNetworkWirelessRfProfileRequestPerSsidSettings13()
        if include_optional:
            return CreateNetworkWirelessRfProfileRequestPerSsidSettings13(
                band_operation_mode = '2.4ghz',
                band_steering_enabled = True,
                min_bitrate = 1.337
            )
        else:
            return CreateNetworkWirelessRfProfileRequestPerSsidSettings13(
        )
        """

    def testCreateNetworkWirelessRfProfileRequestPerSsidSettings13(self):
        """Test CreateNetworkWirelessRfProfileRequestPerSsidSettings13"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
