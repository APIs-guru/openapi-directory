# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.switch_api import SwitchApi


class TestSwitchApi(unittest.TestCase):
    """SwitchApi unit test stubs"""

    def setUp(self) -> None:
        self.api = SwitchApi()

    def tearDown(self) -> None:
        pass

    def test_add_network_switch_stack(self) -> None:
        """Test case for add_network_switch_stack

        Add a switch to a stack
        """
        pass

    def test_clone_organization_switch_devices(self) -> None:
        """Test case for clone_organization_switch_devices

        Clone port-level and some switch-level configuration settings from a source switch to one or more target switches
        """
        pass

    def test_create_device_switch_routing_interface(self) -> None:
        """Test case for create_device_switch_routing_interface

        Create a layer 3 interface for a switch
        """
        pass

    def test_create_device_switch_routing_static_route(self) -> None:
        """Test case for create_device_switch_routing_static_route

        Create a layer 3 static route for a switch
        """
        pass

    def test_create_network_switch_access_policy(self) -> None:
        """Test case for create_network_switch_access_policy

        Create an access policy for a switch network
        """
        pass

    def test_create_network_switch_dhcp_server_policy_arp_inspection_trusted_server(self) -> None:
        """Test case for create_network_switch_dhcp_server_policy_arp_inspection_trusted_server

        Add a server to be trusted by Dynamic ARP Inspection on this network
        """
        pass

    def test_create_network_switch_link_aggregation(self) -> None:
        """Test case for create_network_switch_link_aggregation

        Create a link aggregation group
        """
        pass

    def test_create_network_switch_port_schedule(self) -> None:
        """Test case for create_network_switch_port_schedule

        Add a switch port schedule
        """
        pass

    def test_create_network_switch_qos_rule(self) -> None:
        """Test case for create_network_switch_qos_rule

        Add a quality of service rule
        """
        pass

    def test_create_network_switch_routing_multicast_rendezvous_point(self) -> None:
        """Test case for create_network_switch_routing_multicast_rendezvous_point

        Create a multicast rendezvous point
        """
        pass

    def test_create_network_switch_stack(self) -> None:
        """Test case for create_network_switch_stack

        Create a stack
        """
        pass

    def test_create_network_switch_stack_routing_interface(self) -> None:
        """Test case for create_network_switch_stack_routing_interface

        Create a layer 3 interface for a switch stack
        """
        pass

    def test_create_network_switch_stack_routing_static_route(self) -> None:
        """Test case for create_network_switch_stack_routing_static_route

        Create a layer 3 static route for a switch stack
        """
        pass

    def test_cycle_device_switch_ports(self) -> None:
        """Test case for cycle_device_switch_ports

        Cycle a set of switch ports
        """
        pass

    def test_delete_device_switch_routing_interface(self) -> None:
        """Test case for delete_device_switch_routing_interface

        Delete a layer 3 interface from the switch
        """
        pass

    def test_delete_device_switch_routing_static_route(self) -> None:
        """Test case for delete_device_switch_routing_static_route

        Delete a layer 3 static route for a switch
        """
        pass

    def test_delete_network_switch_access_policy(self) -> None:
        """Test case for delete_network_switch_access_policy

        Delete an access policy for a switch network
        """
        pass

    def test_delete_network_switch_dhcp_server_policy_arp_inspection_trusted_server(self) -> None:
        """Test case for delete_network_switch_dhcp_server_policy_arp_inspection_trusted_server

        Remove a server from being trusted by Dynamic ARP Inspection on this network
        """
        pass

    def test_delete_network_switch_link_aggregation(self) -> None:
        """Test case for delete_network_switch_link_aggregation

        Split a link aggregation group into separate ports
        """
        pass

    def test_delete_network_switch_port_schedule(self) -> None:
        """Test case for delete_network_switch_port_schedule

        Delete a switch port schedule
        """
        pass

    def test_delete_network_switch_qos_rule(self) -> None:
        """Test case for delete_network_switch_qos_rule

        Delete a quality of service rule
        """
        pass

    def test_delete_network_switch_routing_multicast_rendezvous_point(self) -> None:
        """Test case for delete_network_switch_routing_multicast_rendezvous_point

        Delete a multicast rendezvous point
        """
        pass

    def test_delete_network_switch_stack(self) -> None:
        """Test case for delete_network_switch_stack

        Delete a stack
        """
        pass

    def test_delete_network_switch_stack_routing_interface(self) -> None:
        """Test case for delete_network_switch_stack_routing_interface

        Delete a layer 3 interface from a switch stack
        """
        pass

    def test_delete_network_switch_stack_routing_static_route(self) -> None:
        """Test case for delete_network_switch_stack_routing_static_route

        Delete a layer 3 static route for a switch stack
        """
        pass

    def test_get_device_switch_port(self) -> None:
        """Test case for get_device_switch_port

        Return a switch port
        """
        pass

    def test_get_device_switch_ports(self) -> None:
        """Test case for get_device_switch_ports

        List the switch ports for a switch
        """
        pass

    def test_get_device_switch_ports_statuses(self) -> None:
        """Test case for get_device_switch_ports_statuses

        Return the status for all the ports of a switch
        """
        pass

    def test_get_device_switch_ports_statuses_packets(self) -> None:
        """Test case for get_device_switch_ports_statuses_packets

        Return the packet counters for all the ports of a switch
        """
        pass

    def test_get_device_switch_routing_interface(self) -> None:
        """Test case for get_device_switch_routing_interface

        Return a layer 3 interface for a switch
        """
        pass

    def test_get_device_switch_routing_interface_dhcp(self) -> None:
        """Test case for get_device_switch_routing_interface_dhcp

        Return a layer 3 interface DHCP configuration for a switch
        """
        pass

    def test_get_device_switch_routing_interfaces(self) -> None:
        """Test case for get_device_switch_routing_interfaces

        List layer 3 interfaces for a switch
        """
        pass

    def test_get_device_switch_routing_static_route(self) -> None:
        """Test case for get_device_switch_routing_static_route

        Return a layer 3 static route for a switch
        """
        pass

    def test_get_device_switch_routing_static_routes(self) -> None:
        """Test case for get_device_switch_routing_static_routes

        List layer 3 static routes for a switch
        """
        pass

    def test_get_device_switch_warm_spare(self) -> None:
        """Test case for get_device_switch_warm_spare

        Return warm spare configuration for a switch
        """
        pass

    def test_get_network_switch_access_control_lists(self) -> None:
        """Test case for get_network_switch_access_control_lists

        Return the access control lists for a MS network
        """
        pass

    def test_get_network_switch_access_policies(self) -> None:
        """Test case for get_network_switch_access_policies

        List the access policies for a switch network
        """
        pass

    def test_get_network_switch_access_policy(self) -> None:
        """Test case for get_network_switch_access_policy

        Return a specific access policy for a switch network
        """
        pass

    def test_get_network_switch_alternate_management_interface(self) -> None:
        """Test case for get_network_switch_alternate_management_interface

        Return the switch alternate management interface for the network
        """
        pass

    def test_get_network_switch_dhcp_server_policy(self) -> None:
        """Test case for get_network_switch_dhcp_server_policy

        Return the DHCP server settings
        """
        pass

    def test_get_network_switch_dhcp_server_policy_arp_inspection_trusted_servers(self) -> None:
        """Test case for get_network_switch_dhcp_server_policy_arp_inspection_trusted_servers

        Return the list of servers trusted by Dynamic ARP Inspection on this network
        """
        pass

    def test_get_network_switch_dhcp_server_policy_arp_inspection_warnings_by_device(self) -> None:
        """Test case for get_network_switch_dhcp_server_policy_arp_inspection_warnings_by_device

        Return the devices that have a Dynamic ARP Inspection warning and their warnings
        """
        pass

    def test_get_network_switch_dhcp_v4_servers_seen(self) -> None:
        """Test case for get_network_switch_dhcp_v4_servers_seen

        Return the network's DHCPv4 servers seen within the selected timeframe (default 1 day)
        """
        pass

    def test_get_network_switch_dscp_to_cos_mappings(self) -> None:
        """Test case for get_network_switch_dscp_to_cos_mappings

        Return the DSCP to CoS mappings
        """
        pass

    def test_get_network_switch_link_aggregations(self) -> None:
        """Test case for get_network_switch_link_aggregations

        List link aggregation groups
        """
        pass

    def test_get_network_switch_mtu(self) -> None:
        """Test case for get_network_switch_mtu

        Return the MTU configuration
        """
        pass

    def test_get_network_switch_port_schedules(self) -> None:
        """Test case for get_network_switch_port_schedules

        List switch port schedules
        """
        pass

    def test_get_network_switch_qos_rule(self) -> None:
        """Test case for get_network_switch_qos_rule

        Return a quality of service rule
        """
        pass

    def test_get_network_switch_qos_rules(self) -> None:
        """Test case for get_network_switch_qos_rules

        List quality of service rules
        """
        pass

    def test_get_network_switch_qos_rules_order(self) -> None:
        """Test case for get_network_switch_qos_rules_order

        Return the quality of service rule IDs by order in which they will be processed by the switch
        """
        pass

    def test_get_network_switch_routing_multicast(self) -> None:
        """Test case for get_network_switch_routing_multicast

        Return multicast settings for a network
        """
        pass

    def test_get_network_switch_routing_multicast_rendezvous_point(self) -> None:
        """Test case for get_network_switch_routing_multicast_rendezvous_point

        Return a multicast rendezvous point
        """
        pass

    def test_get_network_switch_routing_multicast_rendezvous_points(self) -> None:
        """Test case for get_network_switch_routing_multicast_rendezvous_points

        List multicast rendezvous points
        """
        pass

    def test_get_network_switch_routing_ospf(self) -> None:
        """Test case for get_network_switch_routing_ospf

        Return layer 3 OSPF routing configuration
        """
        pass

    def test_get_network_switch_settings(self) -> None:
        """Test case for get_network_switch_settings

        Returns the switch network settings
        """
        pass

    def test_get_network_switch_stack(self) -> None:
        """Test case for get_network_switch_stack

        Show a switch stack
        """
        pass

    def test_get_network_switch_stack_routing_interface(self) -> None:
        """Test case for get_network_switch_stack_routing_interface

        Return a layer 3 interface from a switch stack
        """
        pass

    def test_get_network_switch_stack_routing_interface_dhcp(self) -> None:
        """Test case for get_network_switch_stack_routing_interface_dhcp

        Return a layer 3 interface DHCP configuration for a switch stack
        """
        pass

    def test_get_network_switch_stack_routing_interfaces(self) -> None:
        """Test case for get_network_switch_stack_routing_interfaces

        List layer 3 interfaces for a switch stack
        """
        pass

    def test_get_network_switch_stack_routing_static_route(self) -> None:
        """Test case for get_network_switch_stack_routing_static_route

        Return a layer 3 static route for a switch stack
        """
        pass

    def test_get_network_switch_stack_routing_static_routes(self) -> None:
        """Test case for get_network_switch_stack_routing_static_routes

        List layer 3 static routes for a switch stack
        """
        pass

    def test_get_network_switch_stacks(self) -> None:
        """Test case for get_network_switch_stacks

        List the switch stacks in a network
        """
        pass

    def test_get_network_switch_storm_control(self) -> None:
        """Test case for get_network_switch_storm_control

        Return the storm control configuration for a switch network
        """
        pass

    def test_get_network_switch_stp(self) -> None:
        """Test case for get_network_switch_stp

        Returns STP settings
        """
        pass

    def test_get_organization_config_template_switch_profile_port(self) -> None:
        """Test case for get_organization_config_template_switch_profile_port

        Return a switch profile port
        """
        pass

    def test_get_organization_config_template_switch_profile_ports(self) -> None:
        """Test case for get_organization_config_template_switch_profile_ports

        Return all the ports of a switch profile
        """
        pass

    def test_get_organization_config_template_switch_profiles(self) -> None:
        """Test case for get_organization_config_template_switch_profiles

        List the switch profiles for your switch template configuration
        """
        pass

    def test_get_organization_switch_ports_by_switch(self) -> None:
        """Test case for get_organization_switch_ports_by_switch

        List the switchports in an organization by switch
        """
        pass

    def test_remove_network_switch_stack(self) -> None:
        """Test case for remove_network_switch_stack

        Remove a switch from a stack
        """
        pass

    def test_update_device_switch_port(self) -> None:
        """Test case for update_device_switch_port

        Update a switch port
        """
        pass

    def test_update_device_switch_routing_interface(self) -> None:
        """Test case for update_device_switch_routing_interface

        Update a layer 3 interface for a switch
        """
        pass

    def test_update_device_switch_routing_interface_dhcp(self) -> None:
        """Test case for update_device_switch_routing_interface_dhcp

        Update a layer 3 interface DHCP configuration for a switch
        """
        pass

    def test_update_device_switch_routing_static_route(self) -> None:
        """Test case for update_device_switch_routing_static_route

        Update a layer 3 static route for a switch
        """
        pass

    def test_update_device_switch_warm_spare(self) -> None:
        """Test case for update_device_switch_warm_spare

        Update warm spare configuration for a switch
        """
        pass

    def test_update_network_switch_access_control_lists(self) -> None:
        """Test case for update_network_switch_access_control_lists

        Update the access control lists for a MS network
        """
        pass

    def test_update_network_switch_access_policy(self) -> None:
        """Test case for update_network_switch_access_policy

        Update an access policy for a switch network
        """
        pass

    def test_update_network_switch_alternate_management_interface(self) -> None:
        """Test case for update_network_switch_alternate_management_interface

        Update the switch alternate management interface for the network
        """
        pass

    def test_update_network_switch_dhcp_server_policy(self) -> None:
        """Test case for update_network_switch_dhcp_server_policy

        Update the DHCP server settings
        """
        pass

    def test_update_network_switch_dhcp_server_policy_arp_inspection_trusted_server(self) -> None:
        """Test case for update_network_switch_dhcp_server_policy_arp_inspection_trusted_server

        Update a server that is trusted by Dynamic ARP Inspection on this network
        """
        pass

    def test_update_network_switch_dscp_to_cos_mappings(self) -> None:
        """Test case for update_network_switch_dscp_to_cos_mappings

        Update the DSCP to CoS mappings
        """
        pass

    def test_update_network_switch_link_aggregation(self) -> None:
        """Test case for update_network_switch_link_aggregation

        Update a link aggregation group
        """
        pass

    def test_update_network_switch_mtu(self) -> None:
        """Test case for update_network_switch_mtu

        Update the MTU configuration
        """
        pass

    def test_update_network_switch_port_schedule(self) -> None:
        """Test case for update_network_switch_port_schedule

        Update a switch port schedule
        """
        pass

    def test_update_network_switch_qos_rule(self) -> None:
        """Test case for update_network_switch_qos_rule

        Update a quality of service rule
        """
        pass

    def test_update_network_switch_qos_rules_order(self) -> None:
        """Test case for update_network_switch_qos_rules_order

        Update the order in which the rules should be processed by the switch
        """
        pass

    def test_update_network_switch_routing_multicast(self) -> None:
        """Test case for update_network_switch_routing_multicast

        Update multicast settings for a network
        """
        pass

    def test_update_network_switch_routing_multicast_rendezvous_point(self) -> None:
        """Test case for update_network_switch_routing_multicast_rendezvous_point

        Update a multicast rendezvous point
        """
        pass

    def test_update_network_switch_routing_ospf(self) -> None:
        """Test case for update_network_switch_routing_ospf

        Update layer 3 OSPF routing configuration
        """
        pass

    def test_update_network_switch_settings(self) -> None:
        """Test case for update_network_switch_settings

        Update switch network settings
        """
        pass

    def test_update_network_switch_stack_routing_interface(self) -> None:
        """Test case for update_network_switch_stack_routing_interface

        Update a layer 3 interface for a switch stack
        """
        pass

    def test_update_network_switch_stack_routing_interface_dhcp(self) -> None:
        """Test case for update_network_switch_stack_routing_interface_dhcp

        Update a layer 3 interface DHCP configuration for a switch stack
        """
        pass

    def test_update_network_switch_stack_routing_static_route(self) -> None:
        """Test case for update_network_switch_stack_routing_static_route

        Update a layer 3 static route for a switch stack
        """
        pass

    def test_update_network_switch_storm_control(self) -> None:
        """Test case for update_network_switch_storm_control

        Update the storm control configuration for a switch network
        """
        pass

    def test_update_network_switch_stp(self) -> None:
        """Test case for update_network_switch_stp

        Updates STP settings
        """
        pass

    def test_update_organization_config_template_switch_profile_port(self) -> None:
        """Test case for update_organization_config_template_switch_profile_port

        Update a switch profile port
        """
        pass


if __name__ == '__main__':
    unittest.main()
