# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.organizations_api import OrganizationsApi


class TestOrganizationsApi(unittest.TestCase):
    """OrganizationsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = OrganizationsApi()

    def tearDown(self) -> None:
        pass

    def test_assign_organization_licenses_seats(self) -> None:
        """Test case for assign_organization_licenses_seats

        Assign SM seats to a network
        """
        pass

    def test_claim_into_organization(self) -> None:
        """Test case for claim_into_organization

        Claim a list of devices, licenses, and/or orders into an organization
        """
        pass

    def test_claim_into_organization_inventory(self) -> None:
        """Test case for claim_into_organization_inventory

        Claim a list of devices, licenses, and/or orders into an organization inventory
        """
        pass

    def test_clone_organization(self) -> None:
        """Test case for clone_organization

        Create a new organization by cloning the addressed organization
        """
        pass

    def test_combine_organization_networks(self) -> None:
        """Test case for combine_organization_networks

        Combine multiple networks into a single network
        """
        pass

    def test_create_organization(self) -> None:
        """Test case for create_organization

        Create a new organization
        """
        pass

    def test_create_organization_action_batch(self) -> None:
        """Test case for create_organization_action_batch

        Create an action batch
        """
        pass

    def test_create_organization_adaptive_policy_acl(self) -> None:
        """Test case for create_organization_adaptive_policy_acl

        Creates new adaptive policy ACL
        """
        pass

    def test_create_organization_adaptive_policy_group(self) -> None:
        """Test case for create_organization_adaptive_policy_group

        Creates a new adaptive policy group
        """
        pass

    def test_create_organization_adaptive_policy_policy(self) -> None:
        """Test case for create_organization_adaptive_policy_policy

        Add an Adaptive Policy
        """
        pass

    def test_create_organization_admin(self) -> None:
        """Test case for create_organization_admin

        Create a new dashboard administrator
        """
        pass

    def test_create_organization_alerts_profile(self) -> None:
        """Test case for create_organization_alerts_profile

        Create an organization-wide alert configuration
        """
        pass

    def test_create_organization_branding_policy(self) -> None:
        """Test case for create_organization_branding_policy

        Add a new branding policy to an organization
        """
        pass

    def test_create_organization_config_template(self) -> None:
        """Test case for create_organization_config_template

        Create a new configuration template
        """
        pass

    def test_create_organization_early_access_features_opt_in(self) -> None:
        """Test case for create_organization_early_access_features_opt_in

        Create a new early access feature opt-in for an organization
        """
        pass

    def test_create_organization_inventory_onboarding_cloud_monitoring_export_event(self) -> None:
        """Test case for create_organization_inventory_onboarding_cloud_monitoring_export_event

        Imports event logs related to the onboarding app into elastisearch
        """
        pass

    def test_create_organization_inventory_onboarding_cloud_monitoring_import(self) -> None:
        """Test case for create_organization_inventory_onboarding_cloud_monitoring_import

        Commits the import operation to complete the onboarding of a device into Dashboard for monitoring.
        """
        pass

    def test_create_organization_inventory_onboarding_cloud_monitoring_prepare(self) -> None:
        """Test case for create_organization_inventory_onboarding_cloud_monitoring_prepare

        Initiates or updates an import session
        """
        pass

    def test_create_organization_network(self) -> None:
        """Test case for create_organization_network

        Create a network
        """
        pass

    def test_create_organization_policy_object(self) -> None:
        """Test case for create_organization_policy_object

        Creates a new Policy Object.
        """
        pass

    def test_create_organization_policy_objects_group(self) -> None:
        """Test case for create_organization_policy_objects_group

        Creates a new Policy Object Group.
        """
        pass

    def test_create_organization_saml_idp(self) -> None:
        """Test case for create_organization_saml_idp

        Create a SAML IdP for your organization.
        """
        pass

    def test_create_organization_saml_role(self) -> None:
        """Test case for create_organization_saml_role

        Create a SAML role
        """
        pass

    def test_delete_organization(self) -> None:
        """Test case for delete_organization

        Delete an organization
        """
        pass

    def test_delete_organization_action_batch(self) -> None:
        """Test case for delete_organization_action_batch

        Delete an action batch
        """
        pass

    def test_delete_organization_adaptive_policy_acl(self) -> None:
        """Test case for delete_organization_adaptive_policy_acl

        Deletes the specified adaptive policy ACL
        """
        pass

    def test_delete_organization_adaptive_policy_group(self) -> None:
        """Test case for delete_organization_adaptive_policy_group

        Deletes the specified adaptive policy group and any associated policies and references
        """
        pass

    def test_delete_organization_adaptive_policy_policy(self) -> None:
        """Test case for delete_organization_adaptive_policy_policy

        Delete an Adaptive Policy
        """
        pass

    def test_delete_organization_admin(self) -> None:
        """Test case for delete_organization_admin

        Revoke all access for a dashboard administrator within this organization
        """
        pass

    def test_delete_organization_alerts_profile(self) -> None:
        """Test case for delete_organization_alerts_profile

        Removes an organization-wide alert config
        """
        pass

    def test_delete_organization_branding_policy(self) -> None:
        """Test case for delete_organization_branding_policy

        Delete a branding policy
        """
        pass

    def test_delete_organization_config_template(self) -> None:
        """Test case for delete_organization_config_template

        Remove a configuration template
        """
        pass

    def test_delete_organization_early_access_features_opt_in(self) -> None:
        """Test case for delete_organization_early_access_features_opt_in

        Delete an early access feature opt-in
        """
        pass

    def test_delete_organization_policy_object(self) -> None:
        """Test case for delete_organization_policy_object

        Deletes a Policy Object.
        """
        pass

    def test_delete_organization_policy_objects_group(self) -> None:
        """Test case for delete_organization_policy_objects_group

        Deletes a Policy Object Group.
        """
        pass

    def test_delete_organization_saml_idp(self) -> None:
        """Test case for delete_organization_saml_idp

        Remove a SAML IdP in your organization.
        """
        pass

    def test_delete_organization_saml_role(self) -> None:
        """Test case for delete_organization_saml_role

        Remove a SAML role
        """
        pass

    def test_delete_organization_user(self) -> None:
        """Test case for delete_organization_user

        Delete a user and all of its authentication methods.
        """
        pass

    def test_get_organization(self) -> None:
        """Test case for get_organization

        Return an organization
        """
        pass

    def test_get_organization_action_batch(self) -> None:
        """Test case for get_organization_action_batch

        Return an action batch
        """
        pass

    def test_get_organization_action_batches(self) -> None:
        """Test case for get_organization_action_batches

        Return the list of action batches in the organization
        """
        pass

    def test_get_organization_adaptive_policy_acl(self) -> None:
        """Test case for get_organization_adaptive_policy_acl

        Returns the adaptive policy ACL information
        """
        pass

    def test_get_organization_adaptive_policy_acls(self) -> None:
        """Test case for get_organization_adaptive_policy_acls

        List adaptive policy ACLs in a organization
        """
        pass

    def test_get_organization_adaptive_policy_group(self) -> None:
        """Test case for get_organization_adaptive_policy_group

        Returns an adaptive policy group
        """
        pass

    def test_get_organization_adaptive_policy_groups(self) -> None:
        """Test case for get_organization_adaptive_policy_groups

        List adaptive policy groups in a organization
        """
        pass

    def test_get_organization_adaptive_policy_overview(self) -> None:
        """Test case for get_organization_adaptive_policy_overview

        Returns adaptive policy aggregate statistics for an organization
        """
        pass

    def test_get_organization_adaptive_policy_policies(self) -> None:
        """Test case for get_organization_adaptive_policy_policies

        List adaptive policies in an organization
        """
        pass

    def test_get_organization_adaptive_policy_policy(self) -> None:
        """Test case for get_organization_adaptive_policy_policy

        Return an adaptive policy
        """
        pass

    def test_get_organization_adaptive_policy_settings(self) -> None:
        """Test case for get_organization_adaptive_policy_settings

        Returns global adaptive policy settings in an organization
        """
        pass

    def test_get_organization_admins(self) -> None:
        """Test case for get_organization_admins

        List the dashboard administrators in this organization
        """
        pass

    def test_get_organization_alerts_profiles(self) -> None:
        """Test case for get_organization_alerts_profiles

        List all organization-wide alert configurations
        """
        pass

    def test_get_organization_api_requests(self) -> None:
        """Test case for get_organization_api_requests

        List the API requests made by an organization
        """
        pass

    def test_get_organization_api_requests_overview(self) -> None:
        """Test case for get_organization_api_requests_overview

        Return an aggregated overview of API requests data
        """
        pass

    def test_get_organization_api_requests_overview_response_codes_by_interval(self) -> None:
        """Test case for get_organization_api_requests_overview_response_codes_by_interval

        Tracks organizations' API requests by response code across a given time period
        """
        pass

    def test_get_organization_branding_policies(self) -> None:
        """Test case for get_organization_branding_policies

        List the branding policies of an organization
        """
        pass

    def test_get_organization_branding_policies_priorities(self) -> None:
        """Test case for get_organization_branding_policies_priorities

        Return the branding policy IDs of an organization in priority order
        """
        pass

    def test_get_organization_branding_policy(self) -> None:
        """Test case for get_organization_branding_policy

        Return a branding policy
        """
        pass

    def test_get_organization_clients_bandwidth_usage_history(self) -> None:
        """Test case for get_organization_clients_bandwidth_usage_history

        Return data usage (in megabits per second) over time for all clients in the given organization within a given time range.
        """
        pass

    def test_get_organization_clients_overview(self) -> None:
        """Test case for get_organization_clients_overview

        Return summary information around client data usage (in mb) across the given organization.
        """
        pass

    def test_get_organization_clients_search(self) -> None:
        """Test case for get_organization_clients_search

        Return the client details in an organization
        """
        pass

    def test_get_organization_config_template(self) -> None:
        """Test case for get_organization_config_template

        Return a single configuration template
        """
        pass

    def test_get_organization_config_templates(self) -> None:
        """Test case for get_organization_config_templates

        List the configuration templates for this organization
        """
        pass

    def test_get_organization_configuration_changes(self) -> None:
        """Test case for get_organization_configuration_changes

        View the Change Log for your organization
        """
        pass

    def test_get_organization_devices(self) -> None:
        """Test case for get_organization_devices

        List the devices in an organization
        """
        pass

    def test_get_organization_devices_availabilities(self) -> None:
        """Test case for get_organization_devices_availabilities

        List the availability information for devices in an organization
        """
        pass

    def test_get_organization_devices_power_modules_statuses_by_device(self) -> None:
        """Test case for get_organization_devices_power_modules_statuses_by_device

        List the power status information for devices in an organization
        """
        pass

    def test_get_organization_devices_statuses(self) -> None:
        """Test case for get_organization_devices_statuses

        List the status of every Meraki device in the organization
        """
        pass

    def test_get_organization_devices_statuses_overview(self) -> None:
        """Test case for get_organization_devices_statuses_overview

        Return an overview of current device statuses
        """
        pass

    def test_get_organization_devices_uplinks_addresses_by_device(self) -> None:
        """Test case for get_organization_devices_uplinks_addresses_by_device

        List the current uplink addresses for devices in an organization.
        """
        pass

    def test_get_organization_devices_uplinks_loss_and_latency(self) -> None:
        """Test case for get_organization_devices_uplinks_loss_and_latency

        Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago
        """
        pass

    def test_get_organization_early_access_features(self) -> None:
        """Test case for get_organization_early_access_features

        List the available early access features for organization
        """
        pass

    def test_get_organization_early_access_features_opt_in(self) -> None:
        """Test case for get_organization_early_access_features_opt_in

        Show an early access feature opt-in for an organization
        """
        pass

    def test_get_organization_early_access_features_opt_ins(self) -> None:
        """Test case for get_organization_early_access_features_opt_ins

        List the early access feature opt-ins for an organization
        """
        pass

    def test_get_organization_firmware_upgrades(self) -> None:
        """Test case for get_organization_firmware_upgrades

        Get firmware upgrade information for an organization
        """
        pass

    def test_get_organization_firmware_upgrades_by_device(self) -> None:
        """Test case for get_organization_firmware_upgrades_by_device

        Get firmware upgrade status for the filtered devices
        """
        pass

    def test_get_organization_inventory_device(self) -> None:
        """Test case for get_organization_inventory_device

        Return a single device from the inventory of an organization
        """
        pass

    def test_get_organization_inventory_devices(self) -> None:
        """Test case for get_organization_inventory_devices

        Return the device inventory for an organization
        """
        pass

    def test_get_organization_inventory_onboarding_cloud_monitoring_imports(self) -> None:
        """Test case for get_organization_inventory_onboarding_cloud_monitoring_imports

        Check the status of a committed Import operation
        """
        pass

    def test_get_organization_inventory_onboarding_cloud_monitoring_networks(self) -> None:
        """Test case for get_organization_inventory_onboarding_cloud_monitoring_networks

        Returns list of networks eligible for adding cloud monitored device
        """
        pass

    def test_get_organization_license(self) -> None:
        """Test case for get_organization_license

        Display a license
        """
        pass

    def test_get_organization_licenses(self) -> None:
        """Test case for get_organization_licenses

        List the licenses for an organization
        """
        pass

    def test_get_organization_licenses_overview(self) -> None:
        """Test case for get_organization_licenses_overview

        Return an overview of the license state for an organization
        """
        pass

    def test_get_organization_login_security(self) -> None:
        """Test case for get_organization_login_security

        Returns the login security settings for an organization.
        """
        pass

    def test_get_organization_networks(self) -> None:
        """Test case for get_organization_networks

        List the networks that the user has privileges on in an organization
        """
        pass

    def test_get_organization_openapi_spec(self) -> None:
        """Test case for get_organization_openapi_spec

        Return the OpenAPI 2.0 Specification of the organization's API documentation in JSON
        """
        pass

    def test_get_organization_policy_object(self) -> None:
        """Test case for get_organization_policy_object

        Shows details of a Policy Object.
        """
        pass

    def test_get_organization_policy_objects(self) -> None:
        """Test case for get_organization_policy_objects

        Lists Policy Objects belonging to the organization.
        """
        pass

    def test_get_organization_policy_objects_group(self) -> None:
        """Test case for get_organization_policy_objects_group

        Shows details of a Policy Object Group.
        """
        pass

    def test_get_organization_policy_objects_groups(self) -> None:
        """Test case for get_organization_policy_objects_groups

        Lists Policy Object Groups belonging to the organization.
        """
        pass

    def test_get_organization_saml(self) -> None:
        """Test case for get_organization_saml

        Returns the SAML SSO enabled settings for an organization.
        """
        pass

    def test_get_organization_saml_idp(self) -> None:
        """Test case for get_organization_saml_idp

        Get a SAML IdP from your organization.
        """
        pass

    def test_get_organization_saml_idps(self) -> None:
        """Test case for get_organization_saml_idps

        List the SAML IdPs in your organization.
        """
        pass

    def test_get_organization_saml_role(self) -> None:
        """Test case for get_organization_saml_role

        Return a SAML role
        """
        pass

    def test_get_organization_saml_roles(self) -> None:
        """Test case for get_organization_saml_roles

        List the SAML roles for this organization
        """
        pass

    def test_get_organization_snmp(self) -> None:
        """Test case for get_organization_snmp

        Return the SNMP settings for an organization
        """
        pass

    def test_get_organization_summary_top_appliances_by_utilization(self) -> None:
        """Test case for get_organization_summary_top_appliances_by_utilization

        Return the top 10 appliances sorted by utilization over given time range.
        """
        pass

    def test_get_organization_summary_top_clients_by_usage(self) -> None:
        """Test case for get_organization_summary_top_clients_by_usage

        Return metrics for organization's top 10 clients by data usage (in mb) over given time range.
        """
        pass

    def test_get_organization_summary_top_clients_manufacturers_by_usage(self) -> None:
        """Test case for get_organization_summary_top_clients_manufacturers_by_usage

        Return metrics for organization's top clients by data usage (in mb) over given time range, grouped by manufacturer.
        """
        pass

    def test_get_organization_summary_top_devices_by_usage(self) -> None:
        """Test case for get_organization_summary_top_devices_by_usage

        Return metrics for organization's top 10 devices sorted by data usage over given time range
        """
        pass

    def test_get_organization_summary_top_devices_models_by_usage(self) -> None:
        """Test case for get_organization_summary_top_devices_models_by_usage

        Return metrics for organization's top 10 device models sorted by data usage over given time range
        """
        pass

    def test_get_organization_summary_top_ssids_by_usage(self) -> None:
        """Test case for get_organization_summary_top_ssids_by_usage

        Return metrics for organization's top 10 ssids by data usage over given time range
        """
        pass

    def test_get_organization_summary_top_switches_by_energy_usage(self) -> None:
        """Test case for get_organization_summary_top_switches_by_energy_usage

        Return metrics for organization's top 10 switches by energy usage over given time range
        """
        pass

    def test_get_organization_uplinks_statuses(self) -> None:
        """Test case for get_organization_uplinks_statuses

        List the uplink status of every Meraki MX, MG and Z series devices in the organization
        """
        pass

    def test_get_organization_webhooks_alert_types(self) -> None:
        """Test case for get_organization_webhooks_alert_types

        Return a list of alert types to be used with managing webhook alerts
        """
        pass

    def test_get_organization_webhooks_logs(self) -> None:
        """Test case for get_organization_webhooks_logs

        Return the log of webhook POSTs sent
        """
        pass

    def test_get_organizations(self) -> None:
        """Test case for get_organizations

        List the organizations that the user has privileges on
        """
        pass

    def test_move_organization_licenses(self) -> None:
        """Test case for move_organization_licenses

        Move licenses to another organization
        """
        pass

    def test_move_organization_licenses_seats(self) -> None:
        """Test case for move_organization_licenses_seats

        Move SM seats to another organization
        """
        pass

    def test_release_from_organization_inventory(self) -> None:
        """Test case for release_from_organization_inventory

        Release a list of claimed devices from an organization.
        """
        pass

    def test_renew_organization_licenses_seats(self) -> None:
        """Test case for renew_organization_licenses_seats

        Renew SM seats of a license
        """
        pass

    def test_update_organization(self) -> None:
        """Test case for update_organization

        Update an organization
        """
        pass

    def test_update_organization_action_batch(self) -> None:
        """Test case for update_organization_action_batch

        Update an action batch
        """
        pass

    def test_update_organization_adaptive_policy_acl(self) -> None:
        """Test case for update_organization_adaptive_policy_acl

        Updates an adaptive policy ACL
        """
        pass

    def test_update_organization_adaptive_policy_group(self) -> None:
        """Test case for update_organization_adaptive_policy_group

        Updates an adaptive policy group
        """
        pass

    def test_update_organization_adaptive_policy_policy(self) -> None:
        """Test case for update_organization_adaptive_policy_policy

        Update an Adaptive Policy
        """
        pass

    def test_update_organization_adaptive_policy_settings(self) -> None:
        """Test case for update_organization_adaptive_policy_settings

        Update global adaptive policy settings
        """
        pass

    def test_update_organization_admin(self) -> None:
        """Test case for update_organization_admin

        Update an administrator
        """
        pass

    def test_update_organization_alerts_profile(self) -> None:
        """Test case for update_organization_alerts_profile

        Update an organization-wide alert config
        """
        pass

    def test_update_organization_branding_policies_priorities(self) -> None:
        """Test case for update_organization_branding_policies_priorities

        Update the priority ordering of an organization's branding policies.
        """
        pass

    def test_update_organization_branding_policy(self) -> None:
        """Test case for update_organization_branding_policy

        Update a branding policy
        """
        pass

    def test_update_organization_config_template(self) -> None:
        """Test case for update_organization_config_template

        Update a configuration template
        """
        pass

    def test_update_organization_early_access_features_opt_in(self) -> None:
        """Test case for update_organization_early_access_features_opt_in

        Update an early access feature opt-in for an organization
        """
        pass

    def test_update_organization_license(self) -> None:
        """Test case for update_organization_license

        Update a license
        """
        pass

    def test_update_organization_login_security(self) -> None:
        """Test case for update_organization_login_security

        Update the login security settings for an organization
        """
        pass

    def test_update_organization_policy_object(self) -> None:
        """Test case for update_organization_policy_object

        Updates a Policy Object.
        """
        pass

    def test_update_organization_policy_objects_group(self) -> None:
        """Test case for update_organization_policy_objects_group

        Updates a Policy Object Group.
        """
        pass

    def test_update_organization_saml(self) -> None:
        """Test case for update_organization_saml

        Updates the SAML SSO enabled settings for an organization.
        """
        pass

    def test_update_organization_saml_idp(self) -> None:
        """Test case for update_organization_saml_idp

        Update a SAML IdP in your organization
        """
        pass

    def test_update_organization_saml_role(self) -> None:
        """Test case for update_organization_saml_role

        Update a SAML role
        """
        pass

    def test_update_organization_snmp(self) -> None:
        """Test case for update_organization_snmp

        Update the SNMP settings for an organization
        """
        pass


if __name__ == '__main__':
    unittest.main()
