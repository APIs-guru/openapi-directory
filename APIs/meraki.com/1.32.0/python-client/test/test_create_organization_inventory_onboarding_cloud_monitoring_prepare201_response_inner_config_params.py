# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_organization_inventory_onboarding_cloud_monitoring_prepare201_response_inner_config_params import CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams

class TestCreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams(unittest.TestCase):
    """CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams:
        """Test CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams`
        """
        model = CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams()
        if include_optional:
            return CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams(
                cloud_static_ip = '',
                tunnel = openapi_client.models.create_organization_inventory_onboarding_cloud_monitoring_prepare_201_response_inner_config_params_tunnel.createOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_tunnel(
                    host = '', 
                    mode = '', 
                    name = '', 
                    port = '', 
                    root_certificate = openapi_client.models.create_organization_inventory_onboarding_cloud_monitoring_prepare_201_response_inner_config_params_tunnel_root_certificate.createOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_tunnel_rootCertificate(
                        content = '', 
                        name = '', ), ),
                user = openapi_client.models.create_organization_inventory_onboarding_cloud_monitoring_prepare_201_response_inner_config_params_user.createOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user(
                    public_key = '', 
                    secret = openapi_client.models.create_organization_inventory_onboarding_cloud_monitoring_prepare_201_response_inner_config_params_user_secret.createOrganizationInventoryOnboardingCloudMonitoringPrepare_201_response_inner_configParams_user_secret(
                        hash = '', ), 
                    username = '', )
            )
        else:
            return CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams(
        )
        """

    def testCreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams(self):
        """Test CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInnerConfigParams"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
