# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_network_wireless_ssid_vpn_request import UpdateNetworkWirelessSsidVpnRequest

class TestUpdateNetworkWirelessSsidVpnRequest(unittest.TestCase):
    """UpdateNetworkWirelessSsidVpnRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateNetworkWirelessSsidVpnRequest:
        """Test UpdateNetworkWirelessSsidVpnRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateNetworkWirelessSsidVpnRequest`
        """
        model = UpdateNetworkWirelessSsidVpnRequest()
        if include_optional:
            return UpdateNetworkWirelessSsidVpnRequest(
                concentrator = openapi_client.models.update_network_wireless_ssid_vpn_request_concentrator.updateNetworkWirelessSsidVpn_request_concentrator(
                    network_id = '', 
                    vlan_id = 56, ),
                failover = openapi_client.models.update_network_wireless_ssid_vpn_request_failover.updateNetworkWirelessSsidVpn_request_failover(
                    heartbeat_interval = 56, 
                    idle_timeout = 56, 
                    request_ip = '', ),
                split_tunnel = openapi_client.models.update_network_wireless_ssid_vpn_request_split_tunnel.updateNetworkWirelessSsidVpn_request_splitTunnel(
                    enabled = True, 
                    rules = [
                        openapi_client.models.update_network_wireless_ssid_vpn_request_split_tunnel_rules_inner.updateNetworkWirelessSsidVpn_request_splitTunnel_rules_inner(
                            comment = '', 
                            dest_cidr = '', 
                            dest_port = '', 
                            policy = '', 
                            protocol = 'Any', )
                        ], )
            )
        else:
            return UpdateNetworkWirelessSsidVpnRequest(
        )
        """

    def testUpdateNetworkWirelessSsidVpnRequest(self):
        """Test UpdateNetworkWirelessSsidVpnRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
