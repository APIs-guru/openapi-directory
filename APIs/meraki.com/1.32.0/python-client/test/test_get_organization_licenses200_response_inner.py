# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_organization_licenses200_response_inner import GetOrganizationLicenses200ResponseInner

class TestGetOrganizationLicenses200ResponseInner(unittest.TestCase):
    """GetOrganizationLicenses200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetOrganizationLicenses200ResponseInner:
        """Test GetOrganizationLicenses200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetOrganizationLicenses200ResponseInner`
        """
        model = GetOrganizationLicenses200ResponseInner()
        if include_optional:
            return GetOrganizationLicenses200ResponseInner(
                activation_date = '',
                claim_date = '',
                device_serial = '',
                duration_in_days = 56,
                expiration_date = '',
                head_license_id = '',
                id = '',
                license_key = '',
                license_type = '',
                network_id = '',
                order_number = '',
                permanently_queued_licenses = [
                    openapi_client.models.get_organization_licenses_200_response_inner_permanently_queued_licenses_inner.getOrganizationLicenses_200_response_inner_permanentlyQueuedLicenses_inner(
                        duration_in_days = 56, 
                        id = '', 
                        license_key = '', 
                        license_type = '', 
                        order_number = '', )
                    ],
                seat_count = 56,
                state = 'active',
                total_duration_in_days = 56
            )
        else:
            return GetOrganizationLicenses200ResponseInner(
        )
        """

    def testGetOrganizationLicenses200ResponseInner(self):
        """Test GetOrganizationLicenses200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
