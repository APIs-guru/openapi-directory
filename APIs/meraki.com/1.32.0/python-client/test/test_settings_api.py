# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.settings_api import SettingsApi


class TestSettingsApi(unittest.TestCase):
    """SettingsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = SettingsApi()

    def tearDown(self) -> None:
        pass

    def test_get_device_appliance_uplinks_settings_2(self) -> None:
        """Test case for get_device_appliance_uplinks_settings_2

        Return the uplink settings for an MX appliance
        """
        pass

    def test_get_device_camera_video_settings_2(self) -> None:
        """Test case for get_device_camera_video_settings_2

        Returns video settings for the given camera
        """
        pass

    def test_get_device_wireless_bluetooth_settings_2(self) -> None:
        """Test case for get_device_wireless_bluetooth_settings_2

        Return the bluetooth settings for a wireless device
        """
        pass

    def test_get_device_wireless_radio_settings_2(self) -> None:
        """Test case for get_device_wireless_radio_settings_2

        Return the radio settings of a device
        """
        pass

    def test_get_network_alerts_settings_2(self) -> None:
        """Test case for get_network_alerts_settings_2

        Return the alert configuration for this network
        """
        pass

    def test_get_network_appliance_firewall_settings_2(self) -> None:
        """Test case for get_network_appliance_firewall_settings_2

        Return the firewall settings for this network
        """
        pass

    def test_get_network_appliance_settings_1(self) -> None:
        """Test case for get_network_appliance_settings_1

        Return the appliance settings for a network
        """
        pass

    def test_get_network_appliance_vlans_settings_2(self) -> None:
        """Test case for get_network_appliance_vlans_settings_2

        Returns the enabled status of VLANs for the network
        """
        pass

    def test_get_network_settings_1(self) -> None:
        """Test case for get_network_settings_1

        Return the settings for a network
        """
        pass

    def test_get_network_switch_settings_1(self) -> None:
        """Test case for get_network_switch_settings_1

        Returns the switch network settings
        """
        pass

    def test_get_network_wireless_bluetooth_settings_2(self) -> None:
        """Test case for get_network_wireless_bluetooth_settings_2

        Return the Bluetooth settings for a network. <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network.
        """
        pass

    def test_get_network_wireless_settings_1(self) -> None:
        """Test case for get_network_wireless_settings_1

        Return the wireless settings for a network
        """
        pass

    def test_get_network_wireless_ssid_splash_settings_3(self) -> None:
        """Test case for get_network_wireless_ssid_splash_settings_3

        Display the splash page settings for the given SSID
        """
        pass

    def test_get_organization_adaptive_policy_settings_2(self) -> None:
        """Test case for get_organization_adaptive_policy_settings_2

        Returns global adaptive policy settings in an organization
        """
        pass

    def test_update_device_appliance_uplinks_settings_2(self) -> None:
        """Test case for update_device_appliance_uplinks_settings_2

        Update the uplink settings for an MX appliance
        """
        pass

    def test_update_device_camera_video_settings_2(self) -> None:
        """Test case for update_device_camera_video_settings_2

        Update video settings for the given camera
        """
        pass

    def test_update_device_wireless_bluetooth_settings_2(self) -> None:
        """Test case for update_device_wireless_bluetooth_settings_2

        Update the bluetooth settings for a wireless device
        """
        pass

    def test_update_device_wireless_radio_settings_2(self) -> None:
        """Test case for update_device_wireless_radio_settings_2

        Update the radio settings of a device
        """
        pass

    def test_update_network_alerts_settings_2(self) -> None:
        """Test case for update_network_alerts_settings_2

        Update the alert configuration for this network
        """
        pass

    def test_update_network_appliance_firewall_settings_2(self) -> None:
        """Test case for update_network_appliance_firewall_settings_2

        Update the firewall settings for this network
        """
        pass

    def test_update_network_appliance_settings_1(self) -> None:
        """Test case for update_network_appliance_settings_1

        Update the appliance settings for a network
        """
        pass

    def test_update_network_appliance_vlans_settings_2(self) -> None:
        """Test case for update_network_appliance_vlans_settings_2

        Enable/Disable VLANs for the given network
        """
        pass

    def test_update_network_settings_1(self) -> None:
        """Test case for update_network_settings_1

        Update the settings for a network
        """
        pass

    def test_update_network_switch_settings_1(self) -> None:
        """Test case for update_network_switch_settings_1

        Update switch network settings
        """
        pass

    def test_update_network_wireless_bluetooth_settings_2(self) -> None:
        """Test case for update_network_wireless_bluetooth_settings_2

        Update the Bluetooth settings for a network
        """
        pass

    def test_update_network_wireless_settings_1(self) -> None:
        """Test case for update_network_wireless_settings_1

        Update the wireless settings for a network
        """
        pass

    def test_update_network_wireless_ssid_splash_settings_3(self) -> None:
        """Test case for update_network_wireless_ssid_splash_settings_3

        Modify the splash page settings for the given SSID
        """
        pass

    def test_update_organization_adaptive_policy_settings_2(self) -> None:
        """Test case for update_organization_adaptive_policy_settings_2

        Update global adaptive policy settings
        """
        pass


if __name__ == '__main__':
    unittest.main()
