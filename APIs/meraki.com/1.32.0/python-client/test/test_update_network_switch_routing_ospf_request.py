# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_network_switch_routing_ospf_request import UpdateNetworkSwitchRoutingOspfRequest

class TestUpdateNetworkSwitchRoutingOspfRequest(unittest.TestCase):
    """UpdateNetworkSwitchRoutingOspfRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateNetworkSwitchRoutingOspfRequest:
        """Test UpdateNetworkSwitchRoutingOspfRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateNetworkSwitchRoutingOspfRequest`
        """
        model = UpdateNetworkSwitchRoutingOspfRequest()
        if include_optional:
            return UpdateNetworkSwitchRoutingOspfRequest(
                areas = [
                    openapi_client.models.update_network_switch_routing_ospf_request_areas_inner.updateNetworkSwitchRoutingOspf_request_areas_inner(
                        area_id = '', 
                        area_name = '', 
                        area_type = 'normal', )
                    ],
                dead_timer_in_seconds = 56,
                enabled = True,
                hello_timer_in_seconds = 56,
                md5_authentication_enabled = True,
                md5_authentication_key = openapi_client.models.update_network_switch_routing_ospf_request_md5_authentication_key.updateNetworkSwitchRoutingOspf_request_md5AuthenticationKey(
                    id = 56, 
                    passphrase = '', ),
                v3 = openapi_client.models.update_network_switch_routing_ospf_request_v3.updateNetworkSwitchRoutingOspf_request_v3(
                    areas = [
                        openapi_client.models.update_network_switch_routing_ospf_request_areas_inner.updateNetworkSwitchRoutingOspf_request_areas_inner(
                            area_id = '', 
                            area_name = '', 
                            area_type = 'normal', )
                        ], 
                    dead_timer_in_seconds = 56, 
                    enabled = True, 
                    hello_timer_in_seconds = 56, )
            )
        else:
            return UpdateNetworkSwitchRoutingOspfRequest(
        )
        """

    def testUpdateNetworkSwitchRoutingOspfRequest(self):
        """Test UpdateNetworkSwitchRoutingOspfRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
