# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.groups_api import GroupsApi


class TestGroupsApi(unittest.TestCase):
    """GroupsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = GroupsApi()

    def tearDown(self) -> None:
        pass

    def test_create_network_firmware_upgrades_staged_group_3(self) -> None:
        """Test case for create_network_firmware_upgrades_staged_group_3

        Create a Staged Upgrade Group for a network
        """
        pass

    def test_create_organization_adaptive_policy_group_2(self) -> None:
        """Test case for create_organization_adaptive_policy_group_2

        Creates a new adaptive policy group
        """
        pass

    def test_create_organization_policy_objects_group_2(self) -> None:
        """Test case for create_organization_policy_objects_group_2

        Creates a new Policy Object Group.
        """
        pass

    def test_delete_network_firmware_upgrades_staged_group_3(self) -> None:
        """Test case for delete_network_firmware_upgrades_staged_group_3

        Delete a Staged Upgrade Group
        """
        pass

    def test_delete_organization_adaptive_policy_group_2(self) -> None:
        """Test case for delete_organization_adaptive_policy_group_2

        Deletes the specified adaptive policy group and any associated policies and references
        """
        pass

    def test_delete_organization_policy_objects_group_2(self) -> None:
        """Test case for delete_organization_policy_objects_group_2

        Deletes a Policy Object Group.
        """
        pass

    def test_get_network_firmware_upgrades_staged_group_3(self) -> None:
        """Test case for get_network_firmware_upgrades_staged_group_3

        Get a Staged Upgrade Group from a network
        """
        pass

    def test_get_network_firmware_upgrades_staged_groups_3(self) -> None:
        """Test case for get_network_firmware_upgrades_staged_groups_3

        List of Staged Upgrade Groups in a network
        """
        pass

    def test_get_organization_adaptive_policy_group_2(self) -> None:
        """Test case for get_organization_adaptive_policy_group_2

        Returns an adaptive policy group
        """
        pass

    def test_get_organization_adaptive_policy_groups_2(self) -> None:
        """Test case for get_organization_adaptive_policy_groups_2

        List adaptive policy groups in a organization
        """
        pass

    def test_get_organization_policy_objects_group_2(self) -> None:
        """Test case for get_organization_policy_objects_group_2

        Shows details of a Policy Object Group.
        """
        pass

    def test_get_organization_policy_objects_groups_2(self) -> None:
        """Test case for get_organization_policy_objects_groups_2

        Lists Policy Object Groups belonging to the organization.
        """
        pass

    def test_update_network_firmware_upgrades_staged_group_3(self) -> None:
        """Test case for update_network_firmware_upgrades_staged_group_3

        Update a Staged Upgrade Group for a network
        """
        pass

    def test_update_organization_adaptive_policy_group_2(self) -> None:
        """Test case for update_organization_adaptive_policy_group_2

        Updates an adaptive policy group
        """
        pass

    def test_update_organization_policy_objects_group_2(self) -> None:
        """Test case for update_organization_policy_objects_group_2

        Updates a Policy Object Group.
        """
        pass


if __name__ == '__main__':
    unittest.main()
