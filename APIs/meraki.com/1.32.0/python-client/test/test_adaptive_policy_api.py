# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.adaptive_policy_api import AdaptivePolicyApi


class TestAdaptivePolicyApi(unittest.TestCase):
    """AdaptivePolicyApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AdaptivePolicyApi()

    def tearDown(self) -> None:
        pass

    def test_create_organization_adaptive_policy_acl_1(self) -> None:
        """Test case for create_organization_adaptive_policy_acl_1

        Creates new adaptive policy ACL
        """
        pass

    def test_create_organization_adaptive_policy_group_1(self) -> None:
        """Test case for create_organization_adaptive_policy_group_1

        Creates a new adaptive policy group
        """
        pass

    def test_create_organization_adaptive_policy_policy_1(self) -> None:
        """Test case for create_organization_adaptive_policy_policy_1

        Add an Adaptive Policy
        """
        pass

    def test_delete_organization_adaptive_policy_acl_1(self) -> None:
        """Test case for delete_organization_adaptive_policy_acl_1

        Deletes the specified adaptive policy ACL
        """
        pass

    def test_delete_organization_adaptive_policy_group_1(self) -> None:
        """Test case for delete_organization_adaptive_policy_group_1

        Deletes the specified adaptive policy group and any associated policies and references
        """
        pass

    def test_delete_organization_adaptive_policy_policy_1(self) -> None:
        """Test case for delete_organization_adaptive_policy_policy_1

        Delete an Adaptive Policy
        """
        pass

    def test_get_organization_adaptive_policy_acl_1(self) -> None:
        """Test case for get_organization_adaptive_policy_acl_1

        Returns the adaptive policy ACL information
        """
        pass

    def test_get_organization_adaptive_policy_acls_1(self) -> None:
        """Test case for get_organization_adaptive_policy_acls_1

        List adaptive policy ACLs in a organization
        """
        pass

    def test_get_organization_adaptive_policy_group_1(self) -> None:
        """Test case for get_organization_adaptive_policy_group_1

        Returns an adaptive policy group
        """
        pass

    def test_get_organization_adaptive_policy_groups_1(self) -> None:
        """Test case for get_organization_adaptive_policy_groups_1

        List adaptive policy groups in a organization
        """
        pass

    def test_get_organization_adaptive_policy_overview_1(self) -> None:
        """Test case for get_organization_adaptive_policy_overview_1

        Returns adaptive policy aggregate statistics for an organization
        """
        pass

    def test_get_organization_adaptive_policy_policies_1(self) -> None:
        """Test case for get_organization_adaptive_policy_policies_1

        List adaptive policies in an organization
        """
        pass

    def test_get_organization_adaptive_policy_policy_1(self) -> None:
        """Test case for get_organization_adaptive_policy_policy_1

        Return an adaptive policy
        """
        pass

    def test_get_organization_adaptive_policy_settings_1(self) -> None:
        """Test case for get_organization_adaptive_policy_settings_1

        Returns global adaptive policy settings in an organization
        """
        pass

    def test_update_organization_adaptive_policy_acl_1(self) -> None:
        """Test case for update_organization_adaptive_policy_acl_1

        Updates an adaptive policy ACL
        """
        pass

    def test_update_organization_adaptive_policy_group_1(self) -> None:
        """Test case for update_organization_adaptive_policy_group_1

        Updates an adaptive policy group
        """
        pass

    def test_update_organization_adaptive_policy_policy_1(self) -> None:
        """Test case for update_organization_adaptive_policy_policy_1

        Update an Adaptive Policy
        """
        pass

    def test_update_organization_adaptive_policy_settings_1(self) -> None:
        """Test case for update_organization_adaptive_policy_settings_1

        Update global adaptive policy settings
        """
        pass


if __name__ == '__main__':
    unittest.main()
