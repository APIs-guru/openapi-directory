# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_network_settings200_response import GetNetworkSettings200Response

class TestGetNetworkSettings200Response(unittest.TestCase):
    """GetNetworkSettings200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetNetworkSettings200Response:
        """Test GetNetworkSettings200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetNetworkSettings200Response`
        """
        model = GetNetworkSettings200Response()
        if include_optional:
            return GetNetworkSettings200Response(
                client_privacy = openapi_client.models.get_network_settings_200_response_client_privacy.getNetworkSettings_200_response_clientPrivacy(
                    expire_data_before = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    expire_data_older_than = 56, ),
                fips = openapi_client.models.get_network_settings_200_response_fips.getNetworkSettings_200_response_fips(
                    enabled = True, ),
                local_status_page = openapi_client.models.get_network_settings_200_response_local_status_page.getNetworkSettings_200_response_localStatusPage(
                    authentication = openapi_client.models.get_network_settings_200_response_local_status_page_authentication.getNetworkSettings_200_response_localStatusPage_authentication(
                        enabled = True, 
                        username = '', ), ),
                local_status_page_enabled = True,
                named_vlans = openapi_client.models.get_network_settings_200_response_named_vlans.getNetworkSettings_200_response_namedVlans(
                    enabled = True, ),
                remote_status_page_enabled = True,
                secure_port = openapi_client.models.get_network_settings_200_response_secure_port.getNetworkSettings_200_response_securePort(
                    enabled = True, )
            )
        else:
            return GetNetworkSettings200Response(
        )
        """

    def testGetNetworkSettings200Response(self):
        """Test GetNetworkSettings200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
