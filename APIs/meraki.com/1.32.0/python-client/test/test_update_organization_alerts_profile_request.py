# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_organization_alerts_profile_request import UpdateOrganizationAlertsProfileRequest

class TestUpdateOrganizationAlertsProfileRequest(unittest.TestCase):
    """UpdateOrganizationAlertsProfileRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateOrganizationAlertsProfileRequest:
        """Test UpdateOrganizationAlertsProfileRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateOrganizationAlertsProfileRequest`
        """
        model = UpdateOrganizationAlertsProfileRequest()
        if include_optional:
            return UpdateOrganizationAlertsProfileRequest(
                alert_condition = openapi_client.models.create_organization_alerts_profile_request_alert_condition.createOrganizationAlertsProfile_request_alertCondition(
                    bit_rate_bps = 56, 
                    duration = 56, 
                    interface = 'cellular', 
                    jitter_ms = 56, 
                    latency_ms = 56, 
                    loss_ratio = 1.337, 
                    mos = 1.337, 
                    window = 56, ),
                description = '',
                enabled = True,
                network_tags = [
                    ''
                    ],
                recipients = openapi_client.models.create_organization_alerts_profile_request_recipients.createOrganizationAlertsProfile_request_recipients(
                    emails = [
                        ''
                        ], 
                    http_server_ids = [
                        ''
                        ], ),
                type = 'appOutage'
            )
        else:
            return UpdateOrganizationAlertsProfileRequest(
        )
        """

    def testUpdateOrganizationAlertsProfileRequest(self):
        """Test UpdateOrganizationAlertsProfileRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
