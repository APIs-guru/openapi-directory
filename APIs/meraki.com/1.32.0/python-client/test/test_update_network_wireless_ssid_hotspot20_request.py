# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_network_wireless_ssid_hotspot20_request import UpdateNetworkWirelessSsidHotspot20Request

class TestUpdateNetworkWirelessSsidHotspot20Request(unittest.TestCase):
    """UpdateNetworkWirelessSsidHotspot20Request unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateNetworkWirelessSsidHotspot20Request:
        """Test UpdateNetworkWirelessSsidHotspot20Request
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateNetworkWirelessSsidHotspot20Request`
        """
        model = UpdateNetworkWirelessSsidHotspot20Request()
        if include_optional:
            return UpdateNetworkWirelessSsidHotspot20Request(
                domains = [
                    ''
                    ],
                enabled = True,
                mcc_mncs = [
                    openapi_client.models.update_network_wireless_ssid_hotspot20_request_mcc_mncs_inner.updateNetworkWirelessSsidHotspot20_request_mccMncs_inner(
                        mcc = '', 
                        mnc = '', )
                    ],
                nai_realms = [
                    openapi_client.models.update_network_wireless_ssid_hotspot20_request_nai_realms_inner.updateNetworkWirelessSsidHotspot20_request_naiRealms_inner(
                        format = '0', 
                        methods = [
                            openapi_client.models.update_network_wireless_ssid_hotspot20_request_nai_realms_inner_methods_inner.updateNetworkWirelessSsidHotspot20_request_naiRealms_inner_methods_inner(
                                authentication_types = openapi_client.models.authentication_types.authenticationTypes(), 
                                id = '', )
                            ], 
                        realm = '', )
                    ],
                network_access_type = 'Chargeable public network',
                operator = openapi_client.models.update_network_wireless_ssid_hotspot20_request_operator.updateNetworkWirelessSsidHotspot20_request_operator(
                    name = '', ),
                roam_consort_ois = [
                    ''
                    ],
                venue = openapi_client.models.update_network_wireless_ssid_hotspot20_request_venue.updateNetworkWirelessSsidHotspot20_request_venue(
                    name = '', 
                    type = 'Airplane', )
            )
        else:
            return UpdateNetworkWirelessSsidHotspot20Request(
        )
        """

    def testUpdateNetworkWirelessSsidHotspot20Request(self):
        """Test UpdateNetworkWirelessSsidHotspot20Request"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
