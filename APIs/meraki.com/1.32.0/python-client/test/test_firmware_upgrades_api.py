# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.firmware_upgrades_api import FirmwareUpgradesApi


class TestFirmwareUpgradesApi(unittest.TestCase):
    """FirmwareUpgradesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = FirmwareUpgradesApi()

    def tearDown(self) -> None:
        pass

    def test_create_network_firmware_upgrades_rollback_1(self) -> None:
        """Test case for create_network_firmware_upgrades_rollback_1

        Rollback a Firmware Upgrade For A Network
        """
        pass

    def test_create_network_firmware_upgrades_staged_event_1(self) -> None:
        """Test case for create_network_firmware_upgrades_staged_event_1

        Create a Staged Upgrade Event for a network
        """
        pass

    def test_create_network_firmware_upgrades_staged_group_1(self) -> None:
        """Test case for create_network_firmware_upgrades_staged_group_1

        Create a Staged Upgrade Group for a network
        """
        pass

    def test_defer_network_firmware_upgrades_staged_events_1(self) -> None:
        """Test case for defer_network_firmware_upgrades_staged_events_1

        Postpone by 1 week all pending staged upgrade stages for a network
        """
        pass

    def test_delete_network_firmware_upgrades_staged_group_1(self) -> None:
        """Test case for delete_network_firmware_upgrades_staged_group_1

        Delete a Staged Upgrade Group
        """
        pass

    def test_get_network_firmware_upgrades_1(self) -> None:
        """Test case for get_network_firmware_upgrades_1

        Get firmware upgrade information for a network
        """
        pass

    def test_get_network_firmware_upgrades_staged_events_1(self) -> None:
        """Test case for get_network_firmware_upgrades_staged_events_1

        Get the Staged Upgrade Event from a network
        """
        pass

    def test_get_network_firmware_upgrades_staged_group_1(self) -> None:
        """Test case for get_network_firmware_upgrades_staged_group_1

        Get a Staged Upgrade Group from a network
        """
        pass

    def test_get_network_firmware_upgrades_staged_groups_1(self) -> None:
        """Test case for get_network_firmware_upgrades_staged_groups_1

        List of Staged Upgrade Groups in a network
        """
        pass

    def test_get_network_firmware_upgrades_staged_stages_1(self) -> None:
        """Test case for get_network_firmware_upgrades_staged_stages_1

        Order of Staged Upgrade Groups in a network
        """
        pass

    def test_rollbacks_network_firmware_upgrades_staged_events_1(self) -> None:
        """Test case for rollbacks_network_firmware_upgrades_staged_events_1

        Rollback a Staged Upgrade Event for a network
        """
        pass

    def test_update_network_firmware_upgrades_1(self) -> None:
        """Test case for update_network_firmware_upgrades_1

        Update firmware upgrade information for a network
        """
        pass

    def test_update_network_firmware_upgrades_staged_events_1(self) -> None:
        """Test case for update_network_firmware_upgrades_staged_events_1

        Update the Staged Upgrade Event for a network
        """
        pass

    def test_update_network_firmware_upgrades_staged_group_1(self) -> None:
        """Test case for update_network_firmware_upgrades_staged_group_1

        Update a Staged Upgrade Group for a network
        """
        pass

    def test_update_network_firmware_upgrades_staged_stages_1(self) -> None:
        """Test case for update_network_firmware_upgrades_staged_stages_1

        Assign Staged Upgrade Group order in the sequence.
        """
        pass


if __name__ == '__main__':
    unittest.main()
