# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_network_wireless_settings200_response_named_vlans import GetNetworkWirelessSettings200ResponseNamedVlans

class TestGetNetworkWirelessSettings200ResponseNamedVlans(unittest.TestCase):
    """GetNetworkWirelessSettings200ResponseNamedVlans unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetNetworkWirelessSettings200ResponseNamedVlans:
        """Test GetNetworkWirelessSettings200ResponseNamedVlans
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetNetworkWirelessSettings200ResponseNamedVlans`
        """
        model = GetNetworkWirelessSettings200ResponseNamedVlans()
        if include_optional:
            return GetNetworkWirelessSettings200ResponseNamedVlans(
                pool_dhcp_monitoring = openapi_client.models.get_network_wireless_settings_200_response_named_vlans_pool_dhcp_monitoring.getNetworkWirelessSettings_200_response_namedVlans_poolDhcpMonitoring(
                    duration = 56, 
                    enabled = True, )
            )
        else:
            return GetNetworkWirelessSettings200ResponseNamedVlans(
        )
        """

    def testGetNetworkWirelessSettings200ResponseNamedVlans(self):
        """Test GetNetworkWirelessSettings200ResponseNamedVlans"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
