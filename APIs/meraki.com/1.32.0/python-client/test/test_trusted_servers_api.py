# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.trusted_servers_api import TrustedServersApi


class TestTrustedServersApi(unittest.TestCase):
    """TrustedServersApi unit test stubs"""

    def setUp(self) -> None:
        self.api = TrustedServersApi()

    def tearDown(self) -> None:
        pass

    def test_create_network_switch_dhcp_server_policy_arp_inspection_trusted_server_3(self) -> None:
        """Test case for create_network_switch_dhcp_server_policy_arp_inspection_trusted_server_3

        Add a server to be trusted by Dynamic ARP Inspection on this network
        """
        pass

    def test_delete_network_switch_dhcp_server_policy_arp_inspection_trusted_server_3(self) -> None:
        """Test case for delete_network_switch_dhcp_server_policy_arp_inspection_trusted_server_3

        Remove a server from being trusted by Dynamic ARP Inspection on this network
        """
        pass

    def test_get_network_switch_dhcp_server_policy_arp_inspection_trusted_servers_3(self) -> None:
        """Test case for get_network_switch_dhcp_server_policy_arp_inspection_trusted_servers_3

        Return the list of servers trusted by Dynamic ARP Inspection on this network
        """
        pass

    def test_update_network_switch_dhcp_server_policy_arp_inspection_trusted_server_3(self) -> None:
        """Test case for update_network_switch_dhcp_server_policy_arp_inspection_trusted_server_3

        Update a server that is trusted by Dynamic ARP Inspection on this network
        """
        pass


if __name__ == '__main__':
    unittest.main()
