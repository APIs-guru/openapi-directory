# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_network_alerts_history200_response_inner import GetNetworkAlertsHistory200ResponseInner

class TestGetNetworkAlertsHistory200ResponseInner(unittest.TestCase):
    """GetNetworkAlertsHistory200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetNetworkAlertsHistory200ResponseInner:
        """Test GetNetworkAlertsHistory200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetNetworkAlertsHistory200ResponseInner`
        """
        model = GetNetworkAlertsHistory200ResponseInner()
        if include_optional:
            return GetNetworkAlertsHistory200ResponseInner(
                alert_data = None,
                alert_type = '',
                alert_type_id = '',
                destinations = openapi_client.models.get_network_alerts_history_200_response_inner_destinations.getNetworkAlertsHistory_200_response_inner_destinations(
                    email = openapi_client.models.get_network_alerts_history_200_response_inner_destinations_email.getNetworkAlertsHistory_200_response_inner_destinations_email(
                        sent_at = '', ), 
                    push = openapi_client.models.get_network_alerts_history_200_response_inner_destinations_push.getNetworkAlertsHistory_200_response_inner_destinations_push(
                        sent_at = '', ), 
                    sms = openapi_client.models.get_network_alerts_history_200_response_inner_destinations_sms.getNetworkAlertsHistory_200_response_inner_destinations_sms(
                        sent_at = '', ), 
                    webhook = openapi_client.models.get_network_alerts_history_200_response_inner_destinations_webhook.getNetworkAlertsHistory_200_response_inner_destinations_webhook(
                        sent_at = '', ), ),
                device = openapi_client.models.get_network_alerts_history_200_response_inner_device.getNetworkAlertsHistory_200_response_inner_device(
                    serial = '', ),
                occurred_at = ''
            )
        else:
            return GetNetworkAlertsHistory200ResponseInner(
        )
        """

    def testGetNetworkAlertsHistory200ResponseInner(self):
        """Test GetNetworkAlertsHistory200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
