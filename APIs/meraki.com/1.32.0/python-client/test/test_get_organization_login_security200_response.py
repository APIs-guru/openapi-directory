# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_organization_login_security200_response import GetOrganizationLoginSecurity200Response

class TestGetOrganizationLoginSecurity200Response(unittest.TestCase):
    """GetOrganizationLoginSecurity200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetOrganizationLoginSecurity200Response:
        """Test GetOrganizationLoginSecurity200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetOrganizationLoginSecurity200Response`
        """
        model = GetOrganizationLoginSecurity200Response()
        if include_optional:
            return GetOrganizationLoginSecurity200Response(
                account_lockout_attempts = 56,
                api_authentication = openapi_client.models.get_organization_login_security_200_response_api_authentication.getOrganizationLoginSecurity_200_response_apiAuthentication(
                    ip_restrictions_for_keys = openapi_client.models.get_organization_login_security_200_response_api_authentication_ip_restrictions_for_keys.getOrganizationLoginSecurity_200_response_apiAuthentication_ipRestrictionsForKeys(
                        enabled = True, 
                        ranges = [
                            ''
                            ], ), ),
                enforce_account_lockout = True,
                enforce_different_passwords = True,
                enforce_idle_timeout = True,
                enforce_login_ip_ranges = True,
                enforce_password_expiration = True,
                enforce_strong_passwords = True,
                enforce_two_factor_auth = True,
                idle_timeout_minutes = 56,
                login_ip_ranges = [
                    ''
                    ],
                num_different_passwords = 56,
                password_expiration_days = 56
            )
        else:
            return GetOrganizationLoginSecurity200Response(
        )
        """

    def testGetOrganizationLoginSecurity200Response(self):
        """Test GetOrganizationLoginSecurity200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
