# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_organization_devices_uplinks_addresses_by_device200_response_inner import GetOrganizationDevicesUplinksAddressesByDevice200ResponseInner

class TestGetOrganizationDevicesUplinksAddressesByDevice200ResponseInner(unittest.TestCase):
    """GetOrganizationDevicesUplinksAddressesByDevice200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetOrganizationDevicesUplinksAddressesByDevice200ResponseInner:
        """Test GetOrganizationDevicesUplinksAddressesByDevice200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetOrganizationDevicesUplinksAddressesByDevice200ResponseInner`
        """
        model = GetOrganizationDevicesUplinksAddressesByDevice200ResponseInner()
        if include_optional:
            return GetOrganizationDevicesUplinksAddressesByDevice200ResponseInner(
                mac = '',
                name = '',
                network = openapi_client.models.get_organization_devices_availabilities_200_response_inner_network.getOrganizationDevicesAvailabilities_200_response_inner_network(
                    id = '', ),
                product_type = 'appliance',
                serial = '',
                tags = [
                    ''
                    ],
                uplinks = [
                    openapi_client.models.get_organization_devices_uplinks_addresses_by_device_200_response_inner_uplinks_inner.getOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner(
                        addresses = [
                            openapi_client.models.get_organization_devices_uplinks_addresses_by_device_200_response_inner_uplinks_inner_addresses_inner.getOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner(
                                address = '', 
                                assignment_mode = 'dynamic', 
                                gateway = '', 
                                protocol = 'ipv4', 
                                public = openapi_client.models.get_organization_devices_uplinks_addresses_by_device_200_response_inner_uplinks_inner_addresses_inner_public.getOrganizationDevicesUplinksAddressesByDevice_200_response_inner_uplinks_inner_addresses_inner_public(
                                    address = '', ), )
                            ], 
                        interface = 'cellular', )
                    ]
            )
        else:
            return GetOrganizationDevicesUplinksAddressesByDevice200ResponseInner(
        )
        """

    def testGetOrganizationDevicesUplinksAddressesByDevice200ResponseInner(self):
        """Test GetOrganizationDevicesUplinksAddressesByDevice200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
