# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.wireless_api import WirelessApi


class TestWirelessApi(unittest.TestCase):
    """WirelessApi unit test stubs"""

    def setUp(self) -> None:
        self.api = WirelessApi()

    def tearDown(self) -> None:
        pass

    def test_create_network_wireless_rf_profile(self) -> None:
        """Test case for create_network_wireless_rf_profile

        Creates new RF profile for this network
        """
        pass

    def test_create_network_wireless_ssid_identity_psk(self) -> None:
        """Test case for create_network_wireless_ssid_identity_psk

        Create an Identity PSK
        """
        pass

    def test_delete_network_wireless_rf_profile(self) -> None:
        """Test case for delete_network_wireless_rf_profile

        Delete a RF Profile
        """
        pass

    def test_delete_network_wireless_ssid_identity_psk(self) -> None:
        """Test case for delete_network_wireless_ssid_identity_psk

        Delete an Identity PSK
        """
        pass

    def test_get_device_wireless_bluetooth_settings(self) -> None:
        """Test case for get_device_wireless_bluetooth_settings

        Return the bluetooth settings for a wireless device
        """
        pass

    def test_get_device_wireless_connection_stats(self) -> None:
        """Test case for get_device_wireless_connection_stats

        Aggregated connectivity info for a given AP on this network
        """
        pass

    def test_get_device_wireless_latency_stats(self) -> None:
        """Test case for get_device_wireless_latency_stats

        Aggregated latency info for a given AP on this network
        """
        pass

    def test_get_device_wireless_radio_settings(self) -> None:
        """Test case for get_device_wireless_radio_settings

        Return the radio settings of a device
        """
        pass

    def test_get_device_wireless_status(self) -> None:
        """Test case for get_device_wireless_status

        Return the SSID statuses of an access point
        """
        pass

    def test_get_network_wireless_air_marshal(self) -> None:
        """Test case for get_network_wireless_air_marshal

        List Air Marshal scan results from a network
        """
        pass

    def test_get_network_wireless_alternate_management_interface(self) -> None:
        """Test case for get_network_wireless_alternate_management_interface

        Return alternate management interface and devices with IP assigned
        """
        pass

    def test_get_network_wireless_billing(self) -> None:
        """Test case for get_network_wireless_billing

        Return the billing settings of this network
        """
        pass

    def test_get_network_wireless_bluetooth_settings(self) -> None:
        """Test case for get_network_wireless_bluetooth_settings

        Return the Bluetooth settings for a network. <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network.
        """
        pass

    def test_get_network_wireless_channel_utilization_history(self) -> None:
        """Test case for get_network_wireless_channel_utilization_history

        Return AP channel utilization over time for a device or network client
        """
        pass

    def test_get_network_wireless_client_connection_stats(self) -> None:
        """Test case for get_network_wireless_client_connection_stats

        Aggregated connectivity info for a given client on this network
        """
        pass

    def test_get_network_wireless_client_connectivity_events(self) -> None:
        """Test case for get_network_wireless_client_connectivity_events

        List the wireless connectivity events for a client within a network in the timespan.
        """
        pass

    def test_get_network_wireless_client_count_history(self) -> None:
        """Test case for get_network_wireless_client_count_history

        Return wireless client counts over time for a network, device, or network client
        """
        pass

    def test_get_network_wireless_client_latency_history(self) -> None:
        """Test case for get_network_wireless_client_latency_history

        Return the latency history for a client
        """
        pass

    def test_get_network_wireless_client_latency_stats(self) -> None:
        """Test case for get_network_wireless_client_latency_stats

        Aggregated latency info for a given client on this network
        """
        pass

    def test_get_network_wireless_clients_connection_stats(self) -> None:
        """Test case for get_network_wireless_clients_connection_stats

        Aggregated connectivity info for this network, grouped by clients
        """
        pass

    def test_get_network_wireless_clients_latency_stats(self) -> None:
        """Test case for get_network_wireless_clients_latency_stats

        Aggregated latency info for this network, grouped by clients
        """
        pass

    def test_get_network_wireless_connection_stats(self) -> None:
        """Test case for get_network_wireless_connection_stats

        Aggregated connectivity info for this network
        """
        pass

    def test_get_network_wireless_data_rate_history(self) -> None:
        """Test case for get_network_wireless_data_rate_history

        Return PHY data rates over time for a network, device, or network client
        """
        pass

    def test_get_network_wireless_devices_connection_stats(self) -> None:
        """Test case for get_network_wireless_devices_connection_stats

        Aggregated connectivity info for this network, grouped by node
        """
        pass

    def test_get_network_wireless_devices_latency_stats(self) -> None:
        """Test case for get_network_wireless_devices_latency_stats

        Aggregated latency info for this network, grouped by node
        """
        pass

    def test_get_network_wireless_failed_connections(self) -> None:
        """Test case for get_network_wireless_failed_connections

        List of all failed client connection events on this network in a given time range
        """
        pass

    def test_get_network_wireless_latency_history(self) -> None:
        """Test case for get_network_wireless_latency_history

        Return average wireless latency over time for a network, device, or network client
        """
        pass

    def test_get_network_wireless_latency_stats(self) -> None:
        """Test case for get_network_wireless_latency_stats

        Aggregated latency info for this network
        """
        pass

    def test_get_network_wireless_mesh_statuses(self) -> None:
        """Test case for get_network_wireless_mesh_statuses

        List wireless mesh statuses for repeaters
        """
        pass

    def test_get_network_wireless_rf_profile(self) -> None:
        """Test case for get_network_wireless_rf_profile

        Return a RF profile
        """
        pass

    def test_get_network_wireless_rf_profiles(self) -> None:
        """Test case for get_network_wireless_rf_profiles

        List the non-basic RF profiles for this network
        """
        pass

    def test_get_network_wireless_settings(self) -> None:
        """Test case for get_network_wireless_settings

        Return the wireless settings for a network
        """
        pass

    def test_get_network_wireless_signal_quality_history(self) -> None:
        """Test case for get_network_wireless_signal_quality_history

        Return signal quality (SNR/RSSI) over time for a device or network client
        """
        pass

    def test_get_network_wireless_ssid(self) -> None:
        """Test case for get_network_wireless_ssid

        Return a single MR SSID
        """
        pass

    def test_get_network_wireless_ssid_bonjour_forwarding(self) -> None:
        """Test case for get_network_wireless_ssid_bonjour_forwarding

        List the Bonjour forwarding setting and rules for the SSID
        """
        pass

    def test_get_network_wireless_ssid_device_type_group_policies(self) -> None:
        """Test case for get_network_wireless_ssid_device_type_group_policies

        List the device type group policies for the SSID
        """
        pass

    def test_get_network_wireless_ssid_eap_override(self) -> None:
        """Test case for get_network_wireless_ssid_eap_override

        Return the EAP overridden parameters for an SSID
        """
        pass

    def test_get_network_wireless_ssid_firewall_l3_firewall_rules(self) -> None:
        """Test case for get_network_wireless_ssid_firewall_l3_firewall_rules

        Return the L3 firewall rules for an SSID on an MR network
        """
        pass

    def test_get_network_wireless_ssid_firewall_l7_firewall_rules(self) -> None:
        """Test case for get_network_wireless_ssid_firewall_l7_firewall_rules

        Return the L7 firewall rules for an SSID on an MR network
        """
        pass

    def test_get_network_wireless_ssid_hotspot20(self) -> None:
        """Test case for get_network_wireless_ssid_hotspot20

        Return the Hotspot 2.0 settings for an SSID
        """
        pass

    def test_get_network_wireless_ssid_identity_psk(self) -> None:
        """Test case for get_network_wireless_ssid_identity_psk

        Return an Identity PSK
        """
        pass

    def test_get_network_wireless_ssid_identity_psks(self) -> None:
        """Test case for get_network_wireless_ssid_identity_psks

        List all Identity PSKs in a wireless network
        """
        pass

    def test_get_network_wireless_ssid_schedules(self) -> None:
        """Test case for get_network_wireless_ssid_schedules

        List the outage schedule for the SSID
        """
        pass

    def test_get_network_wireless_ssid_splash_settings(self) -> None:
        """Test case for get_network_wireless_ssid_splash_settings

        Display the splash page settings for the given SSID
        """
        pass

    def test_get_network_wireless_ssid_traffic_shaping_rules(self) -> None:
        """Test case for get_network_wireless_ssid_traffic_shaping_rules

        Display the traffic shaping settings for a SSID on an MR network
        """
        pass

    def test_get_network_wireless_ssid_vpn(self) -> None:
        """Test case for get_network_wireless_ssid_vpn

        List the VPN settings for the SSID.
        """
        pass

    def test_get_network_wireless_ssids(self) -> None:
        """Test case for get_network_wireless_ssids

        List the MR SSIDs in a network
        """
        pass

    def test_get_network_wireless_usage_history(self) -> None:
        """Test case for get_network_wireless_usage_history

        Return AP usage over time for a device or network client
        """
        pass

    def test_get_organization_wireless_devices_ethernet_statuses(self) -> None:
        """Test case for get_organization_wireless_devices_ethernet_statuses

        Endpoint to see power status for wireless devices
        """
        pass

    def test_update_device_wireless_bluetooth_settings(self) -> None:
        """Test case for update_device_wireless_bluetooth_settings

        Update the bluetooth settings for a wireless device
        """
        pass

    def test_update_device_wireless_radio_settings(self) -> None:
        """Test case for update_device_wireless_radio_settings

        Update the radio settings of a device
        """
        pass

    def test_update_network_wireless_alternate_management_interface(self) -> None:
        """Test case for update_network_wireless_alternate_management_interface

        Update alternate management interface and device static IP
        """
        pass

    def test_update_network_wireless_billing(self) -> None:
        """Test case for update_network_wireless_billing

        Update the billing settings
        """
        pass

    def test_update_network_wireless_bluetooth_settings(self) -> None:
        """Test case for update_network_wireless_bluetooth_settings

        Update the Bluetooth settings for a network
        """
        pass

    def test_update_network_wireless_rf_profile(self) -> None:
        """Test case for update_network_wireless_rf_profile

        Updates specified RF profile for this network
        """
        pass

    def test_update_network_wireless_settings(self) -> None:
        """Test case for update_network_wireless_settings

        Update the wireless settings for a network
        """
        pass

    def test_update_network_wireless_ssid(self) -> None:
        """Test case for update_network_wireless_ssid

        Update the attributes of an MR SSID
        """
        pass

    def test_update_network_wireless_ssid_bonjour_forwarding(self) -> None:
        """Test case for update_network_wireless_ssid_bonjour_forwarding

        Update the bonjour forwarding setting and rules for the SSID
        """
        pass

    def test_update_network_wireless_ssid_device_type_group_policies(self) -> None:
        """Test case for update_network_wireless_ssid_device_type_group_policies

        Update the device type group policies for the SSID
        """
        pass

    def test_update_network_wireless_ssid_eap_override(self) -> None:
        """Test case for update_network_wireless_ssid_eap_override

        Update the EAP overridden parameters for an SSID.
        """
        pass

    def test_update_network_wireless_ssid_firewall_l3_firewall_rules(self) -> None:
        """Test case for update_network_wireless_ssid_firewall_l3_firewall_rules

        Update the L3 firewall rules of an SSID on an MR network
        """
        pass

    def test_update_network_wireless_ssid_firewall_l7_firewall_rules(self) -> None:
        """Test case for update_network_wireless_ssid_firewall_l7_firewall_rules

        Update the L7 firewall rules of an SSID on an MR network
        """
        pass

    def test_update_network_wireless_ssid_hotspot20(self) -> None:
        """Test case for update_network_wireless_ssid_hotspot20

        Update the Hotspot 2.0 settings of an SSID
        """
        pass

    def test_update_network_wireless_ssid_identity_psk(self) -> None:
        """Test case for update_network_wireless_ssid_identity_psk

        Update an Identity PSK
        """
        pass

    def test_update_network_wireless_ssid_schedules(self) -> None:
        """Test case for update_network_wireless_ssid_schedules

        Update the outage schedule for the SSID
        """
        pass

    def test_update_network_wireless_ssid_splash_settings(self) -> None:
        """Test case for update_network_wireless_ssid_splash_settings

        Modify the splash page settings for the given SSID
        """
        pass

    def test_update_network_wireless_ssid_traffic_shaping_rules(self) -> None:
        """Test case for update_network_wireless_ssid_traffic_shaping_rules

        Update the traffic shaping settings for an SSID on an MR network
        """
        pass

    def test_update_network_wireless_ssid_vpn(self) -> None:
        """Test case for update_network_wireless_ssid_vpn

        Update the VPN settings for the SSID
        """
        pass


if __name__ == '__main__':
    unittest.main()
