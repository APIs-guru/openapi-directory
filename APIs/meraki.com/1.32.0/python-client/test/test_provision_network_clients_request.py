# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.provision_network_clients_request import ProvisionNetworkClientsRequest

class TestProvisionNetworkClientsRequest(unittest.TestCase):
    """ProvisionNetworkClientsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProvisionNetworkClientsRequest:
        """Test ProvisionNetworkClientsRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProvisionNetworkClientsRequest`
        """
        model = ProvisionNetworkClientsRequest()
        if include_optional:
            return ProvisionNetworkClientsRequest(
                clients = [
                    openapi_client.models.provision_network_clients_request_clients_inner.provisionNetworkClients_request_clients_inner(
                        mac = '', 
                        name = '', )
                    ],
                device_policy = 'Allowed',
                group_policy_id = '',
                policies_by_security_appliance = openapi_client.models.provision_network_clients_request_policies_by_security_appliance.provisionNetworkClients_request_policiesBySecurityAppliance(
                    device_policy = 'Allowed', ),
                policies_by_ssid = openapi_client.models.provision_network_clients_request_policies_by_ssid.provisionNetworkClients_request_policiesBySsid(
                    0 = openapi_client.models.provision_network_clients_request_policies_by_ssid_0.provisionNetworkClients_request_policiesBySsid_0(
                        device_policy = 'Allowed', 
                        group_policy_id = '', ), 
                    1 = openapi_client.models.provision_network_clients_request_policies_by_ssid_0.provisionNetworkClients_request_policiesBySsid_0(
                        device_policy = 'Allowed', 
                        group_policy_id = '', ), 
                    2 = , 
                    3 = , 
                    4 = , 
                    5 = , 
                    6 = , 
                    7 = , 
                    8 = , 
                    9 = , 
                    10 = , 
                    11 = , 
                    12 = , 
                    13 = , 
                    14 = , )
            )
        else:
            return ProvisionNetworkClientsRequest(
                clients = [
                    openapi_client.models.provision_network_clients_request_clients_inner.provisionNetworkClients_request_clients_inner(
                        mac = '', 
                        name = '', )
                    ],
                device_policy = 'Allowed',
        )
        """

    def testProvisionNetworkClientsRequest(self):
        """Test ProvisionNetworkClientsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
