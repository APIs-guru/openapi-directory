# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.live_tools_api import LiveToolsApi


class TestLiveToolsApi(unittest.TestCase):
    """LiveToolsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = LiveToolsApi()

    def tearDown(self) -> None:
        pass

    def test_blink_device_leds_0(self) -> None:
        """Test case for blink_device_leds_0

        Blink the LEDs on a device
        """
        pass

    def test_create_device_live_tools_ping_0(self) -> None:
        """Test case for create_device_live_tools_ping_0

        Enqueue a job to ping a target host from the device
        """
        pass

    def test_create_device_live_tools_ping_device_0(self) -> None:
        """Test case for create_device_live_tools_ping_device_0

        Enqueue a job to check connectivity status to the device
        """
        pass

    def test_cycle_device_switch_ports_0(self) -> None:
        """Test case for cycle_device_switch_ports_0

        Cycle a set of switch ports
        """
        pass

    def test_get_device_live_tools_ping_0(self) -> None:
        """Test case for get_device_live_tools_ping_0

        Return a ping job
        """
        pass

    def test_get_device_live_tools_ping_device_0(self) -> None:
        """Test case for get_device_live_tools_ping_device_0

        Return a ping device job
        """
        pass

    def test_reboot_device_0(self) -> None:
        """Test case for reboot_device_0

        Reboot a device
        """
        pass


if __name__ == '__main__':
    unittest.main()
