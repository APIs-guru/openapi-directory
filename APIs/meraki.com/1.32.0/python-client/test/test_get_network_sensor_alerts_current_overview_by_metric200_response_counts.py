# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 1.32.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_network_sensor_alerts_current_overview_by_metric200_response_counts import GetNetworkSensorAlertsCurrentOverviewByMetric200ResponseCounts

class TestGetNetworkSensorAlertsCurrentOverviewByMetric200ResponseCounts(unittest.TestCase):
    """GetNetworkSensorAlertsCurrentOverviewByMetric200ResponseCounts unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetNetworkSensorAlertsCurrentOverviewByMetric200ResponseCounts:
        """Test GetNetworkSensorAlertsCurrentOverviewByMetric200ResponseCounts
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetNetworkSensorAlertsCurrentOverviewByMetric200ResponseCounts`
        """
        model = GetNetworkSensorAlertsCurrentOverviewByMetric200ResponseCounts()
        if include_optional:
            return GetNetworkSensorAlertsCurrentOverviewByMetric200ResponseCounts(
                door = 56,
                humidity = 56,
                indoor_air_quality = 56,
                noise = openapi_client.models.get_network_sensor_alerts_current_overview_by_metric_200_response_counts_noise.getNetworkSensorAlertsCurrentOverviewByMetric_200_response_counts_noise(
                    ambient = 56, ),
                pm25 = 56,
                temperature = 56,
                tvoc = 56,
                water = 56
            )
        else:
            return GetNetworkSensorAlertsCurrentOverviewByMetric200ResponseCounts(
        )
        """

    def testGetNetworkSensorAlertsCurrentOverviewByMetric200ResponseCounts(self):
        """Test GetNetworkSensorAlertsCurrentOverviewByMetric200ResponseCounts"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
