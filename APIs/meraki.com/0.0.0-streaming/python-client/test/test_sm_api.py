# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 0.0.0-streaming
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.sm_api import SMApi


class TestSMApi(unittest.TestCase):
    """SMApi unit test stubs"""

    def setUp(self) -> None:
        self.api = SMApi()

    def tearDown(self) -> None:
        pass

    def test_create_network_sm_bypass_activation_lock_attempt(self) -> None:
        """Test case for create_network_sm_bypass_activation_lock_attempt

        Bypass activation lock attempt
        """
        pass

    def test_get_network_sm_bypass_activation_lock_attempt(self) -> None:
        """Test case for get_network_sm_bypass_activation_lock_attempt

        Bypass activation lock attempt status
        """
        pass

    def test_get_network_sm_cellular_usage_history(self) -> None:
        """Test case for get_network_sm_cellular_usage_history

        Return the client's daily cellular data usage history
        """
        pass

    def test_get_network_sm_certs(self) -> None:
        """Test case for get_network_sm_certs

        List the certs on a device
        """
        pass

    def test_get_network_sm_connectivity(self) -> None:
        """Test case for get_network_sm_connectivity

        Returns historical connectivity data (whether a device is regularly checking in to Dashboard).
        """
        pass

    def test_get_network_sm_desktop_logs(self) -> None:
        """Test case for get_network_sm_desktop_logs

        Return historical records of various Systems Manager network connection details for desktop devices.
        """
        pass

    def test_get_network_sm_device_command_logs(self) -> None:
        """Test case for get_network_sm_device_command_logs

        Return historical records of commands sent to Systems Manager devices
        """
        pass

    def test_get_network_sm_device_profiles(self) -> None:
        """Test case for get_network_sm_device_profiles

        Get the profiles associated with a device
        """
        pass

    def test_get_network_sm_devices(self) -> None:
        """Test case for get_network_sm_devices

        List the devices enrolled in an SM network with various specified fields and filters
        """
        pass

    def test_get_network_sm_network_adapters(self) -> None:
        """Test case for get_network_sm_network_adapters

        List the network adapters of a device
        """
        pass

    def test_get_network_sm_performance_history(self) -> None:
        """Test case for get_network_sm_performance_history

        Return historical records of various Systems Manager client metrics for desktop devices.
        """
        pass

    def test_get_network_sm_profiles(self) -> None:
        """Test case for get_network_sm_profiles

        List all the profiles in the network
        """
        pass

    def test_get_network_sm_restrictions(self) -> None:
        """Test case for get_network_sm_restrictions

        List the restrictions on a device
        """
        pass

    def test_get_network_sm_security_centers(self) -> None:
        """Test case for get_network_sm_security_centers

        List the security centers on a device
        """
        pass

    def test_get_network_sm_softwares(self) -> None:
        """Test case for get_network_sm_softwares

        Get a list of softwares associated with a device
        """
        pass

    def test_get_network_sm_user_device_profiles(self) -> None:
        """Test case for get_network_sm_user_device_profiles

        Get the profiles associated with a user
        """
        pass

    def test_get_network_sm_user_softwares(self) -> None:
        """Test case for get_network_sm_user_softwares

        Get a list of softwares associated with a user
        """
        pass

    def test_get_network_sm_users(self) -> None:
        """Test case for get_network_sm_users

        List the owners in an SM network with various specified fields and filters
        """
        pass

    def test_get_network_sm_wlan_lists(self) -> None:
        """Test case for get_network_sm_wlan_lists

        List the saved SSID names on a device
        """
        pass

    def test_lock_network_sm_devices(self) -> None:
        """Test case for lock_network_sm_devices

        Lock a set of devices
        """
        pass

    def test_refresh_network_sm_device_details(self) -> None:
        """Test case for refresh_network_sm_device_details

        Refresh the details of a device
        """
        pass

    def test_unenroll_network_sm_device(self) -> None:
        """Test case for unenroll_network_sm_device

        Unenroll a device
        """
        pass

    def test_update_network_sm_device_fields(self) -> None:
        """Test case for update_network_sm_device_fields

        Modify the fields of a device
        """
        pass

    def test_update_network_sm_devices_tags(self) -> None:
        """Test case for update_network_sm_devices_tags

        Add, delete, or update the tags of a set of devices
        """
        pass

    def test_wipe_network_sm_device(self) -> None:
        """Test case for wipe_network_sm_device

        Wipe a device
        """
        pass


if __name__ == '__main__':
    unittest.main()
