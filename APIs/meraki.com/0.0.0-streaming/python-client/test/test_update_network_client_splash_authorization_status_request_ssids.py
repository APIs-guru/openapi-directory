# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 0.0.0-streaming
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_network_client_splash_authorization_status_request_ssids import UpdateNetworkClientSplashAuthorizationStatusRequestSsids

class TestUpdateNetworkClientSplashAuthorizationStatusRequestSsids(unittest.TestCase):
    """UpdateNetworkClientSplashAuthorizationStatusRequestSsids unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateNetworkClientSplashAuthorizationStatusRequestSsids:
        """Test UpdateNetworkClientSplashAuthorizationStatusRequestSsids
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateNetworkClientSplashAuthorizationStatusRequestSsids`
        """
        model = UpdateNetworkClientSplashAuthorizationStatusRequestSsids()
        if include_optional:
            return UpdateNetworkClientSplashAuthorizationStatusRequestSsids(
                var_0 = openapi_client.models.update_network_client_splash_authorization_status_request_ssids_0.updateNetworkClientSplashAuthorizationStatus_request_ssids_0(
                    is_authorized = True, ),
                var_1 = openapi_client.models.update_network_client_splash_authorization_status_request_ssids_1.updateNetworkClientSplashAuthorizationStatus_request_ssids_1(
                    is_authorized = True, ),
                var_2 = openapi_client.models.update_network_client_splash_authorization_status_request_ssids_2.updateNetworkClientSplashAuthorizationStatus_request_ssids_2(
                    is_authorized = True, ),
                var_3 = openapi_client.models.update_network_client_splash_authorization_status_request_ssids_3.updateNetworkClientSplashAuthorizationStatus_request_ssids_3(
                    is_authorized = True, ),
                var_4 = openapi_client.models.update_network_client_splash_authorization_status_request_ssids_4.updateNetworkClientSplashAuthorizationStatus_request_ssids_4(
                    is_authorized = True, ),
                var_5 = openapi_client.models.update_network_client_splash_authorization_status_request_ssids_5.updateNetworkClientSplashAuthorizationStatus_request_ssids_5(
                    is_authorized = True, ),
                var_6 = openapi_client.models.update_network_client_splash_authorization_status_request_ssids_6.updateNetworkClientSplashAuthorizationStatus_request_ssids_6(
                    is_authorized = True, ),
                var_7 = openapi_client.models.update_network_client_splash_authorization_status_request_ssids_7.updateNetworkClientSplashAuthorizationStatus_request_ssids_7(
                    is_authorized = True, ),
                var_8 = openapi_client.models.update_network_client_splash_authorization_status_request_ssids_8.updateNetworkClientSplashAuthorizationStatus_request_ssids_8(
                    is_authorized = True, ),
                var_9 = openapi_client.models.update_network_client_splash_authorization_status_request_ssids_9.updateNetworkClientSplashAuthorizationStatus_request_ssids_9(
                    is_authorized = True, ),
                var_10 = openapi_client.models.update_network_client_splash_authorization_status_request_ssids_10.updateNetworkClientSplashAuthorizationStatus_request_ssids_10(
                    is_authorized = True, ),
                var_11 = openapi_client.models.update_network_client_splash_authorization_status_request_ssids_11.updateNetworkClientSplashAuthorizationStatus_request_ssids_11(
                    is_authorized = True, ),
                var_12 = openapi_client.models.update_network_client_splash_authorization_status_request_ssids_12.updateNetworkClientSplashAuthorizationStatus_request_ssids_12(
                    is_authorized = True, ),
                var_13 = openapi_client.models.update_network_client_splash_authorization_status_request_ssids_13.updateNetworkClientSplashAuthorizationStatus_request_ssids_13(
                    is_authorized = True, ),
                var_14 = openapi_client.models.update_network_client_splash_authorization_status_request_ssids_14.updateNetworkClientSplashAuthorizationStatus_request_ssids_14(
                    is_authorized = True, )
            )
        else:
            return UpdateNetworkClientSplashAuthorizationStatusRequestSsids(
        )
        """

    def testUpdateNetworkClientSplashAuthorizationStatusRequestSsids(self):
        """Test UpdateNetworkClientSplashAuthorizationStatusRequestSsids"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
