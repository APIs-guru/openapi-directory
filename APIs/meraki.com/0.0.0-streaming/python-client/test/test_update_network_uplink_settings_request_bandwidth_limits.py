# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 0.0.0-streaming
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_network_uplink_settings_request_bandwidth_limits import UpdateNetworkUplinkSettingsRequestBandwidthLimits

class TestUpdateNetworkUplinkSettingsRequestBandwidthLimits(unittest.TestCase):
    """UpdateNetworkUplinkSettingsRequestBandwidthLimits unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateNetworkUplinkSettingsRequestBandwidthLimits:
        """Test UpdateNetworkUplinkSettingsRequestBandwidthLimits
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateNetworkUplinkSettingsRequestBandwidthLimits`
        """
        model = UpdateNetworkUplinkSettingsRequestBandwidthLimits()
        if include_optional:
            return UpdateNetworkUplinkSettingsRequestBandwidthLimits(
                cellular = openapi_client.models.update_network_uplink_settings_request_bandwidth_limits_cellular.updateNetworkUplinkSettings_request_bandwidthLimits_cellular(
                    limit_down = 56, 
                    limit_up = 56, ),
                wan1 = openapi_client.models.update_network_uplink_settings_request_bandwidth_limits_wan1.updateNetworkUplinkSettings_request_bandwidthLimits_wan1(
                    limit_down = 56, 
                    limit_up = 56, ),
                wan2 = openapi_client.models.update_network_uplink_settings_request_bandwidth_limits_wan2.updateNetworkUplinkSettings_request_bandwidthLimits_wan2(
                    limit_down = 56, 
                    limit_up = 56, )
            )
        else:
            return UpdateNetworkUplinkSettingsRequestBandwidthLimits(
        )
        """

    def testUpdateNetworkUplinkSettingsRequestBandwidthLimits(self):
        """Test UpdateNetworkUplinkSettingsRequestBandwidthLimits"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
