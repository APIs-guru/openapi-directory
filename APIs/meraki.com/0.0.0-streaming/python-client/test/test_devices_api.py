# coding: utf-8

"""
    Meraki Dashboard API

    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 23 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

    The version of the OpenAPI document: 0.0.0-streaming
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.devices_api import DevicesApi


class TestDevicesApi(unittest.TestCase):
    """DevicesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DevicesApi()

    def tearDown(self) -> None:
        pass

    def test_claim_network_devices(self) -> None:
        """Test case for claim_network_devices

        Claim devices into a network. (Note: for recently claimed devices, it may take a few minutes for API requests against that device to succeed)
        """
        pass

    def test_cycle_device_switch_ports(self) -> None:
        """Test case for cycle_device_switch_ports

        Cycle a set of switch ports
        """
        pass

    def test_get_network_device(self) -> None:
        """Test case for get_network_device

        Return a single device
        """
        pass

    def test_get_network_device_loss_and_latency_history(self) -> None:
        """Test case for get_network_device_loss_and_latency_history

        Get the uplink loss percentage and latency in milliseconds for a wired network device.
        """
        pass

    def test_get_network_device_performance(self) -> None:
        """Test case for get_network_device_performance

        Return the performance score for a single MX
        """
        pass

    def test_get_network_device_uplink(self) -> None:
        """Test case for get_network_device_uplink

        Return the uplink information for a device.
        """
        pass

    def test_get_network_devices(self) -> None:
        """Test case for get_network_devices

        List the devices in a network
        """
        pass

    def test_get_organization_devices(self) -> None:
        """Test case for get_organization_devices

        List the devices in an organization
        """
        pass

    def test_reboot_network_device(self) -> None:
        """Test case for reboot_network_device

        Reboot a device
        """
        pass

    def test_remove_network_device(self) -> None:
        """Test case for remove_network_device

        Remove a single device
        """
        pass

    def test_update_network_device(self) -> None:
        """Test case for update_network_device

        Update the attributes of a device
        """
        pass


if __name__ == '__main__':
    unittest.main()
