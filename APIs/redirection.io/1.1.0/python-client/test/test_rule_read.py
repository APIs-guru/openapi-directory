# coding: utf-8

"""
    redirection.io

    API documentation for redirection.io

    The version of the OpenAPI document: 1.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.rule_read import RuleRead

class TestRuleRead(unittest.TestCase):
    """RuleRead unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RuleRead:
        """Test RuleRead
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RuleRead`
        """
        model = RuleRead()
        if include_optional:
            return RuleRead(
                actions = [
                    ''
                    ],
                changes = [
                    openapi_client.models.rule_change_read.RuleChange-Read(
                        action = '', 
                        actions = [
                            ''
                            ], 
                        author = openapi_client.models.user_read.User-Read(
                            name = '', ), 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        examples = [
                            ''
                            ], 
                        formatted_source = '', 
                        id = '', 
                        markers = [
                            openapi_client.models.marker_read.Marker-Read(
                                maximum_occurrence = 56, 
                                minimum_occurrence = 56, 
                                name = '', 
                                options = [
                                    ''
                                    ], 
                                transformers = [
                                    ''
                                    ], 
                                type = '', )
                            ], 
                        match_on_response_status = 56, 
                        rank = 56, 
                        rule_id = '', 
                        source = '', )
                    ],
                current_change = openapi_client.models.rule_change_read.RuleChange-Read(
                    action = '', 
                    actions = [
                        ''
                        ], 
                    author = openapi_client.models.user_read.User-Read(
                        name = '', ), 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    examples = [
                        ''
                        ], 
                    formatted_source = '', 
                    id = '', 
                    markers = [
                        openapi_client.models.marker_read.Marker-Read(
                            maximum_occurrence = 56, 
                            minimum_occurrence = 56, 
                            name = '', 
                            options = [
                                ''
                                ], 
                            transformers = [
                                ''
                                ], 
                            type = '', )
                        ], 
                    match_on_response_status = 56, 
                    rank = 56, 
                    rule_id = '', 
                    source = '', ),
                examples = [
                    ''
                    ],
                formatted_source = '',
                id = '',
                markers = [
                    openapi_client.models.marker_read.Marker-Read(
                        maximum_occurrence = 56, 
                        minimum_occurrence = 56, 
                        name = '', 
                        options = [
                            ''
                            ], 
                        transformers = [
                            ''
                            ], 
                        type = '', )
                    ],
                match_on_response_status = 56,
                rank = 56,
                source = '',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                view_count = 56
            )
        else:
            return RuleRead(
        )
        """

    def testRuleRead(self):
        """Test RuleRead"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
