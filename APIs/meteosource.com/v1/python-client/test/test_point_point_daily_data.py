# coding: utf-8

"""
    Interactive documentation for your Premium plan

      This interactive documentation is using your API key which is filled in automatically, you can find and change this in [your dashboard](https://www.meteosource.com/client).  Using the `GET` button, open your selected endpoint and read the introduction. You will find a detailed description of available parameters. You can complete the `Parameters` section and hit `Execute` to view a full API response. You can then inspect the JSON response, copy the `curl` command to run it on your machine, or obtain a URL of the request. In this way, you can easily build request command for the data you need. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.point_point_daily_data import PointPointDailyData

class TestPointPointDailyData(unittest.TestCase):
    """PointPointDailyData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PointPointDailyData:
        """Test PointPointDailyData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PointPointDailyData`
        """
        model = PointPointDailyData()
        if include_optional:
            return PointPointDailyData(
                afternoon = openapi_client.models.point_point_daily_afternoon_data.Point_PointDailyAfternoonData(
                    cloud_cover = openapi_client.models.point_point_daily_afternoon_cloud_cover_data.Point_PointDailyAfternoonCloudCoverData(
                        high = 1.337, 
                        low = 1.337, 
                        middle = 1.337, 
                        total = 1.337, ), 
                    dew_point = 1.337, 
                    feels_like = 1.337, 
                    humidity = 56, 
                    icon = 56, 
                    ozone = 1.337, 
                    precipitation = openapi_client.models.point_point_daily_afternoon_precipitation_data.Point_PointDailyAfternoonPrecipitationData(
                        total = 1.337, 
                        type = bytes(b'blah'), ), 
                    pressure = 1.337, 
                    probability = openapi_client.models.point_point_daily_afternoon_prob_data.Point_PointDailyAfternoonProbData(
                        freeze = 1.337, 
                        storm = 1.337, ), 
                    snow_depth = 1.337, 
                    soil_temperature = 1.337, 
                    surface_temperature = 1.337, 
                    temperature = 1.337, 
                    visibility = 1.337, 
                    weather = '', 
                    wind = openapi_client.models.point_point_daily_afternoon_wind_data.Point_PointDailyAfternoonWindData(
                        angle = 1.337, 
                        dir = bytes(b'blah'), 
                        gusts = 1.337, 
                        speed = 1.337, ), 
                    wind_chill = 1.337, ),
                all_day = openapi_client.models.point_point_daily_all_day_data.Point_PointDailyAllDayData(
                    cloud_cover = openapi_client.models.point_point_daily_all_day_cloud_cover_data.Point_PointDailyAllDayCloudCoverData(
                        high = 1.337, 
                        low = 1.337, 
                        middle = 1.337, 
                        total = 1.337, ), 
                    dew_point = 1.337, 
                    dew_point_max = 1.337, 
                    dew_point_min = 1.337, 
                    feels_like = 1.337, 
                    feels_like_max = 1.337, 
                    feels_like_min = 1.337, 
                    humidity = 56, 
                    icon = 56, 
                    ozone = 1.337, 
                    precipitation = openapi_client.models.point_point_daily_all_day_precipitation_data.Point_PointDailyAllDayPrecipitationData(
                        total = 1.337, 
                        type = bytes(b'blah'), ), 
                    pressure = 1.337, 
                    probability = openapi_client.models.point_point_daily_all_day_prob_data.Point_PointDailyAllDayProbData(
                        freeze = 1.337, 
                        storm = 1.337, ), 
                    snow_depth = 1.337, 
                    soil_temperature = 1.337, 
                    soil_temperature_max = 1.337, 
                    soil_temperature_min = 1.337, 
                    surface_temperature = 1.337, 
                    surface_temperature_max = 1.337, 
                    surface_temperature_min = 1.337, 
                    temperature = 1.337, 
                    temperature_max = 1.337, 
                    temperature_min = 1.337, 
                    visibility = 1.337, 
                    weather = '', 
                    wind = openapi_client.models.point_point_daily_all_day_wind_data.Point_PointDailyAllDayWindData(
                        angle = 1.337, 
                        dir = bytes(b'blah'), 
                        gusts = 1.337, 
                        speed = 1.337, ), 
                    wind_chill = 1.337, 
                    wind_chill_max = 1.337, 
                    wind_chill_min = 1.337, ),
                astro = openapi_client.models.point_point_daily_astro_data.Point_PointDailyAstroData(
                    moon = openapi_client.models.point_point_daily_moon_data.Point_PointDailyMoonData(
                        always_down = True, 
                        always_up = True, 
                        phase = bytes(b'blah'), 
                        rise = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        set = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                    sun = openapi_client.models.point_point_daily_sun_data.Point_PointDailySunData(
                        always_down = True, 
                        always_up = True, 
                        rise = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        set = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), ),
                day = bytes(b'blah'),
                evening = openapi_client.models.point_point_daily_evening_data.Point_PointDailyEveningData(
                    cloud_cover = openapi_client.models.point_point_daily_evening_cloud_cover_data.Point_PointDailyEveningCloudCoverData(
                        high = 1.337, 
                        low = 1.337, 
                        middle = 1.337, 
                        total = 1.337, ), 
                    dew_point = 1.337, 
                    feels_like = 1.337, 
                    humidity = 56, 
                    icon = 56, 
                    ozone = 1.337, 
                    precipitation = openapi_client.models.point_point_daily_evening_precipitation_data.Point_PointDailyEveningPrecipitationData(
                        total = 1.337, 
                        type = bytes(b'blah'), ), 
                    pressure = 1.337, 
                    probability = openapi_client.models.point_point_daily_evening_prob_data.Point_PointDailyEveningProbData(
                        freeze = 1.337, 
                        storm = 1.337, ), 
                    snow_depth = 1.337, 
                    soil_temperature = 1.337, 
                    surface_temperature = 1.337, 
                    temperature = 1.337, 
                    visibility = 1.337, 
                    weather = '', 
                    wind = openapi_client.models.point_point_daily_evening_wind_data.Point_PointDailyEveningWindData(
                        angle = 1.337, 
                        dir = bytes(b'blah'), 
                        gusts = 1.337, 
                        speed = 1.337, ), 
                    wind_chill = 1.337, ),
                icon = 56,
                morning = openapi_client.models.point_point_daily_morning_data.Point_PointDailyMorningData(
                    cloud_cover = openapi_client.models.point_point_daily_morning_cloud_cover_data.Point_PointDailyMorningCloudCoverData(
                        high = 1.337, 
                        low = 1.337, 
                        middle = 1.337, 
                        total = 1.337, ), 
                    dew_point = 1.337, 
                    feels_like = 1.337, 
                    humidity = 56, 
                    icon = 56, 
                    ozone = 1.337, 
                    precipitation = openapi_client.models.point_point_daily_morning_precipitation_data.Point_PointDailyMorningPrecipitationData(
                        total = 1.337, 
                        type = bytes(b'blah'), ), 
                    pressure = 1.337, 
                    probability = openapi_client.models.point_point_daily_morning_prob_data.Point_PointDailyMorningProbData(
                        freeze = 1.337, 
                        storm = 1.337, ), 
                    snow_depth = 1.337, 
                    soil_temperature = 1.337, 
                    surface_temperature = 1.337, 
                    temperature = 1.337, 
                    visibility = 1.337, 
                    weather = '', 
                    wind = openapi_client.models.point_point_daily_morning_wind_data.Point_PointDailyMorningWindData(
                        angle = 1.337, 
                        dir = bytes(b'blah'), 
                        gusts = 1.337, 
                        speed = 1.337, ), 
                    wind_chill = 1.337, ),
                predictability = 56,
                statistics = openapi_client.models.point_point_daily_stats_data.Point_PointDailyStatsData(
                    precipitation = openapi_client.models.point_point_daily_stats_precipitation_data.Point_PointDailyStatsPrecipitationData(
                        avg = 1.337, 
                        probability = 56, ), 
                    temperature = openapi_client.models.point_point_daily_stats_temperature_data.Point_PointDailyStatsTemperatureData(
                        avg = 1.337, 
                        avg_max = 1.337, 
                        avg_min = 1.337, 
                        record_max = 1.337, 
                        record_min = 1.337, ), 
                    wind = openapi_client.models.point_point_daily_stats_wind_data.Point_PointDailyStatsWindData(
                        avg_angle = 1.337, 
                        avg_dir = bytes(b'blah'), 
                        avg_speed = 1.337, 
                        max_gust = 1.337, 
                        max_speed = 1.337, ), ),
                summary = '',
                weather = ''
            )
        else:
            return PointPointDailyData(
                all_day = openapi_client.models.point_point_daily_all_day_data.Point_PointDailyAllDayData(
                    cloud_cover = openapi_client.models.point_point_daily_all_day_cloud_cover_data.Point_PointDailyAllDayCloudCoverData(
                        high = 1.337, 
                        low = 1.337, 
                        middle = 1.337, 
                        total = 1.337, ), 
                    dew_point = 1.337, 
                    dew_point_max = 1.337, 
                    dew_point_min = 1.337, 
                    feels_like = 1.337, 
                    feels_like_max = 1.337, 
                    feels_like_min = 1.337, 
                    humidity = 56, 
                    icon = 56, 
                    ozone = 1.337, 
                    precipitation = openapi_client.models.point_point_daily_all_day_precipitation_data.Point_PointDailyAllDayPrecipitationData(
                        total = 1.337, 
                        type = bytes(b'blah'), ), 
                    pressure = 1.337, 
                    probability = openapi_client.models.point_point_daily_all_day_prob_data.Point_PointDailyAllDayProbData(
                        freeze = 1.337, 
                        storm = 1.337, ), 
                    snow_depth = 1.337, 
                    soil_temperature = 1.337, 
                    soil_temperature_max = 1.337, 
                    soil_temperature_min = 1.337, 
                    surface_temperature = 1.337, 
                    surface_temperature_max = 1.337, 
                    surface_temperature_min = 1.337, 
                    temperature = 1.337, 
                    temperature_max = 1.337, 
                    temperature_min = 1.337, 
                    visibility = 1.337, 
                    weather = '', 
                    wind = openapi_client.models.point_point_daily_all_day_wind_data.Point_PointDailyAllDayWindData(
                        angle = 1.337, 
                        dir = bytes(b'blah'), 
                        gusts = 1.337, 
                        speed = 1.337, ), 
                    wind_chill = 1.337, 
                    wind_chill_max = 1.337, 
                    wind_chill_min = 1.337, ),
                astro = openapi_client.models.point_point_daily_astro_data.Point_PointDailyAstroData(
                    moon = openapi_client.models.point_point_daily_moon_data.Point_PointDailyMoonData(
                        always_down = True, 
                        always_up = True, 
                        phase = bytes(b'blah'), 
                        rise = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        set = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                    sun = openapi_client.models.point_point_daily_sun_data.Point_PointDailySunData(
                        always_down = True, 
                        always_up = True, 
                        rise = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        set = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), ),
                statistics = openapi_client.models.point_point_daily_stats_data.Point_PointDailyStatsData(
                    precipitation = openapi_client.models.point_point_daily_stats_precipitation_data.Point_PointDailyStatsPrecipitationData(
                        avg = 1.337, 
                        probability = 56, ), 
                    temperature = openapi_client.models.point_point_daily_stats_temperature_data.Point_PointDailyStatsTemperatureData(
                        avg = 1.337, 
                        avg_max = 1.337, 
                        avg_min = 1.337, 
                        record_max = 1.337, 
                        record_min = 1.337, ), 
                    wind = openapi_client.models.point_point_daily_stats_wind_data.Point_PointDailyStatsWindData(
                        avg_angle = 1.337, 
                        avg_dir = bytes(b'blah'), 
                        avg_speed = 1.337, 
                        max_gust = 1.337, 
                        max_speed = 1.337, ), ),
        )
        """

    def testPointPointDailyData(self):
        """Test PointPointDailyData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
