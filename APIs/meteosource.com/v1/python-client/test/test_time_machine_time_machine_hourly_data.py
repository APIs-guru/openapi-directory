# coding: utf-8

"""
    Interactive documentation for your Premium plan

      This interactive documentation is using your API key which is filled in automatically, you can find and change this in [your dashboard](https://www.meteosource.com/client).  Using the `GET` button, open your selected endpoint and read the introduction. You will find a detailed description of available parameters. You can complete the `Parameters` section and hit `Execute` to view a full API response. You can then inspect the JSON response, copy the `curl` command to run it on your machine, or obtain a URL of the request. In this way, you can easily build request command for the data you need. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.time_machine_time_machine_hourly_data import TimeMachineTimeMachineHourlyData

class TestTimeMachineTimeMachineHourlyData(unittest.TestCase):
    """TimeMachineTimeMachineHourlyData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TimeMachineTimeMachineHourlyData:
        """Test TimeMachineTimeMachineHourlyData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TimeMachineTimeMachineHourlyData`
        """
        model = TimeMachineTimeMachineHourlyData()
        if include_optional:
            return TimeMachineTimeMachineHourlyData(
                cape = 56,
                cloud_cover = openapi_client.models.time_machine_time_machine_cloud_cover_data.TimeMachine_TimeMachineCloudCoverData(
                    high = 56, 
                    low = 56, 
                    middle = 56, 
                    total = 56, ),
                var_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                dew_point = 1.337,
                evaporation = 56,
                feels_like = 1.337,
                humidity = 56,
                icon = 56,
                irradiance = 56,
                ozone = 56,
                precipitation = openapi_client.models.time_machine_time_machine_precipitation_data.TimeMachine_TimeMachinePrecipitationData(
                    total = 1.337, 
                    type = bytes(b'blah'), ),
                pressure = 1.337,
                soil_temperature = 1.337,
                surface_temperature = 1.337,
                temperature = 1.337,
                weather = '',
                wind = openapi_client.models.time_machine_time_machine_wind_data.TimeMachine_TimeMachineWindData(
                    angle = 56, 
                    dir = bytes(b'blah'), 
                    gusts = 56, 
                    speed = 56, ),
                wind_chill = 1.337
            )
        else:
            return TimeMachineTimeMachineHourlyData(
                cloud_cover = openapi_client.models.time_machine_time_machine_cloud_cover_data.TimeMachine_TimeMachineCloudCoverData(
                    high = 56, 
                    low = 56, 
                    middle = 56, 
                    total = 56, ),
                precipitation = openapi_client.models.time_machine_time_machine_precipitation_data.TimeMachine_TimeMachinePrecipitationData(
                    total = 1.337, 
                    type = bytes(b'blah'), ),
                wind = openapi_client.models.time_machine_time_machine_wind_data.TimeMachine_TimeMachineWindData(
                    angle = 56, 
                    dir = bytes(b'blah'), 
                    gusts = 56, 
                    speed = 56, ),
        )
        """

    def testTimeMachineTimeMachineHourlyData(self):
        """Test TimeMachineTimeMachineHourlyData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
