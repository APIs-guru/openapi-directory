# coding: utf-8

"""
    Interactive documentation for your Premium plan

      This interactive documentation is using your API key which is filled in automatically, you can find and change this in [your dashboard](https://www.meteosource.com/client).  Using the `GET` button, open your selected endpoint and read the introduction. You will find a detailed description of available parameters. You can complete the `Parameters` section and hit `Execute` to view a full API response. You can then inspect the JSON response, copy the `curl` command to run it on your machine, or obtain a URL of the request. In this way, you can easily build request command for the data you need. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.air_quality_point_data import AirQualityPointData

class TestAirQualityPointData(unittest.TestCase):
    """AirQualityPointData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AirQualityPointData:
        """Test AirQualityPointData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AirQualityPointData`
        """
        model = AirQualityPointData()
        if include_optional:
            return AirQualityPointData(
                data = [
                    openapi_client.models.air_quality_point_hourly_data.AirQuality_PointHourlyData(
                        aerosol_550 = 1.337, 
                        air_quality = 1.337, 
                        co_surface = 1.337, 
                        date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        dust_550nm = 1.337, 
                        dust_mixing_ratio_05 = 1.337, 
                        no2_surface = 1.337, 
                        no_surface = 1.337, 
                        ozone_surface = 1.337, 
                        ozone_total = 1.337, 
                        pm10 = 1.337, 
                        pm25 = 1.337, 
                        so2_surface = 1.337, )
                    ],
                elevation = 56,
                lat = '',
                lon = '',
                timezone = ''
            )
        else:
            return AirQualityPointData(
                data = [
                    openapi_client.models.air_quality_point_hourly_data.AirQuality_PointHourlyData(
                        aerosol_550 = 1.337, 
                        air_quality = 1.337, 
                        co_surface = 1.337, 
                        date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        dust_550nm = 1.337, 
                        dust_mixing_ratio_05 = 1.337, 
                        no2_surface = 1.337, 
                        no_surface = 1.337, 
                        ozone_surface = 1.337, 
                        ozone_total = 1.337, 
                        pm10 = 1.337, 
                        pm25 = 1.337, 
                        so2_surface = 1.337, )
                    ],
                elevation = 56,
                lat = '',
                lon = '',
        )
        """

    def testAirQualityPointData(self):
        """Test AirQualityPointData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
