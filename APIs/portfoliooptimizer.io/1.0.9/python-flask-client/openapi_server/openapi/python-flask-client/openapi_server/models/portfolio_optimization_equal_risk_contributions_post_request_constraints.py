from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class PortfolioOptimizationEqualRiskContributionsPostRequestConstraints(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, maximum_assets_weights=None, minimum_assets_weights=None):  # noqa: E501
        """PortfolioOptimizationEqualRiskContributionsPostRequestConstraints - a model defined in OpenAPI

        :param maximum_assets_weights: The maximum_assets_weights of this PortfolioOptimizationEqualRiskContributionsPostRequestConstraints.  # noqa: E501
        :type maximum_assets_weights: List[float]
        :param minimum_assets_weights: The minimum_assets_weights of this PortfolioOptimizationEqualRiskContributionsPostRequestConstraints.  # noqa: E501
        :type minimum_assets_weights: List[float]
        """
        self.openapi_types = {
            'maximum_assets_weights': List[float],
            'minimum_assets_weights': List[float]
        }

        self.attribute_map = {
            'maximum_assets_weights': 'maximumAssetsWeights',
            'minimum_assets_weights': 'minimumAssetsWeights'
        }

        self._maximum_assets_weights = maximum_assets_weights
        self._minimum_assets_weights = minimum_assets_weights

    @classmethod
    def from_dict(cls, dikt) -> 'PortfolioOptimizationEqualRiskContributionsPostRequestConstraints':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _portfolio_optimization_equal_risk_contributions_post_request_constraints of this PortfolioOptimizationEqualRiskContributionsPostRequestConstraints.  # noqa: E501
        :rtype: PortfolioOptimizationEqualRiskContributionsPostRequestConstraints
        """
        return util.deserialize_model(dikt, cls)

    @property
    def maximum_assets_weights(self) -> List[float]:
        """Gets the maximum_assets_weights of this PortfolioOptimizationEqualRiskContributionsPostRequestConstraints.

        maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage  # noqa: E501

        :return: The maximum_assets_weights of this PortfolioOptimizationEqualRiskContributionsPostRequestConstraints.
        :rtype: List[float]
        """
        return self._maximum_assets_weights

    @maximum_assets_weights.setter
    def maximum_assets_weights(self, maximum_assets_weights: List[float]):
        """Sets the maximum_assets_weights of this PortfolioOptimizationEqualRiskContributionsPostRequestConstraints.

        maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage  # noqa: E501

        :param maximum_assets_weights: The maximum_assets_weights of this PortfolioOptimizationEqualRiskContributionsPostRequestConstraints.
        :type maximum_assets_weights: List[float]
        """

        self._maximum_assets_weights = maximum_assets_weights

    @property
    def minimum_assets_weights(self) -> List[float]:
        """Gets the minimum_assets_weights of this PortfolioOptimizationEqualRiskContributionsPostRequestConstraints.

        minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage  # noqa: E501

        :return: The minimum_assets_weights of this PortfolioOptimizationEqualRiskContributionsPostRequestConstraints.
        :rtype: List[float]
        """
        return self._minimum_assets_weights

    @minimum_assets_weights.setter
    def minimum_assets_weights(self, minimum_assets_weights: List[float]):
        """Sets the minimum_assets_weights of this PortfolioOptimizationEqualRiskContributionsPostRequestConstraints.

        minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage  # noqa: E501

        :param minimum_assets_weights: The minimum_assets_weights of this PortfolioOptimizationEqualRiskContributionsPostRequestConstraints.
        :type minimum_assets_weights: List[float]
        """

        self._minimum_assets_weights = minimum_assets_weights
