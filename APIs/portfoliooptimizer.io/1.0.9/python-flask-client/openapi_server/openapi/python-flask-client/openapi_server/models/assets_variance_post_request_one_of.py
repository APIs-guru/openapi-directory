from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.assets_variance_post_request_one_of_assets_inner import AssetsVariancePostRequestOneOfAssetsInner
from openapi_server import util

from openapi_server.models.assets_variance_post_request_one_of_assets_inner import AssetsVariancePostRequestOneOfAssetsInner  # noqa: E501

class AssetsVariancePostRequestOneOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assets=None):  # noqa: E501
        """AssetsVariancePostRequestOneOf - a model defined in OpenAPI

        :param assets: The assets of this AssetsVariancePostRequestOneOf.  # noqa: E501
        :type assets: List[AssetsVariancePostRequestOneOfAssetsInner]
        """
        self.openapi_types = {
            'assets': List[AssetsVariancePostRequestOneOfAssetsInner]
        }

        self.attribute_map = {
            'assets': 'assets'
        }

        self._assets = assets

    @classmethod
    def from_dict(cls, dikt) -> 'AssetsVariancePostRequestOneOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _assets_variance_post_request_oneOf of this AssetsVariancePostRequestOneOf.  # noqa: E501
        :rtype: AssetsVariancePostRequestOneOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assets(self) -> List[AssetsVariancePostRequestOneOfAssetsInner]:
        """Gets the assets of this AssetsVariancePostRequestOneOf.


        :return: The assets of this AssetsVariancePostRequestOneOf.
        :rtype: List[AssetsVariancePostRequestOneOfAssetsInner]
        """
        return self._assets

    @assets.setter
    def assets(self, assets: List[AssetsVariancePostRequestOneOfAssetsInner]):
        """Sets the assets of this AssetsVariancePostRequestOneOf.


        :param assets: The assets of this AssetsVariancePostRequestOneOf.
        :type assets: List[AssetsVariancePostRequestOneOfAssetsInner]
        """
        if assets is None:
            raise ValueError("Invalid value for `assets`, must not be `None`")  # noqa: E501
        if assets is not None and len(assets) < 1:
            raise ValueError("Invalid value for `assets`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._assets = assets
