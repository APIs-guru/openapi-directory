from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class PortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthPost200ResponsePortfoliosInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, portfolio_sharpe_ratio_minimum_track_record_length=None):  # noqa: E501
        """PortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthPost200ResponsePortfoliosInner - a model defined in OpenAPI

        :param portfolio_sharpe_ratio_minimum_track_record_length: The portfolio_sharpe_ratio_minimum_track_record_length of this PortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthPost200ResponsePortfoliosInner.  # noqa: E501
        :type portfolio_sharpe_ratio_minimum_track_record_length: float
        """
        self.openapi_types = {
            'portfolio_sharpe_ratio_minimum_track_record_length': float
        }

        self.attribute_map = {
            'portfolio_sharpe_ratio_minimum_track_record_length': 'portfolioSharpeRatioMinimumTrackRecordLength'
        }

        self._portfolio_sharpe_ratio_minimum_track_record_length = portfolio_sharpe_ratio_minimum_track_record_length

    @classmethod
    def from_dict(cls, dikt) -> 'PortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthPost200ResponsePortfoliosInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _portfolio_analysis_sharpe_ratio_probabilistic_minimum_track_record_length_post_200_response_portfolios_inner of this PortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthPost200ResponsePortfoliosInner.  # noqa: E501
        :rtype: PortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthPost200ResponsePortfoliosInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def portfolio_sharpe_ratio_minimum_track_record_length(self) -> float:
        """Gets the portfolio_sharpe_ratio_minimum_track_record_length of this PortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthPost200ResponsePortfoliosInner.

        The minimum track record length of the portfolio, in number of required arithmetic returns, possibly equal to null in case the minimum track record length does not exist  # noqa: E501

        :return: The portfolio_sharpe_ratio_minimum_track_record_length of this PortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthPost200ResponsePortfoliosInner.
        :rtype: float
        """
        return self._portfolio_sharpe_ratio_minimum_track_record_length

    @portfolio_sharpe_ratio_minimum_track_record_length.setter
    def portfolio_sharpe_ratio_minimum_track_record_length(self, portfolio_sharpe_ratio_minimum_track_record_length: float):
        """Sets the portfolio_sharpe_ratio_minimum_track_record_length of this PortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthPost200ResponsePortfoliosInner.

        The minimum track record length of the portfolio, in number of required arithmetic returns, possibly equal to null in case the minimum track record length does not exist  # noqa: E501

        :param portfolio_sharpe_ratio_minimum_track_record_length: The portfolio_sharpe_ratio_minimum_track_record_length of this PortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthPost200ResponsePortfoliosInner.
        :type portfolio_sharpe_ratio_minimum_track_record_length: float
        """
        if portfolio_sharpe_ratio_minimum_track_record_length is None:
            raise ValueError("Invalid value for `portfolio_sharpe_ratio_minimum_track_record_length`, must not be `None`")  # noqa: E501

        self._portfolio_sharpe_ratio_minimum_track_record_length = portfolio_sharpe_ratio_minimum_track_record_length
