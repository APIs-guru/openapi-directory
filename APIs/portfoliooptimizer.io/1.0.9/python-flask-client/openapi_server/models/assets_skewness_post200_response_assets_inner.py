from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class AssetsSkewnessPost200ResponseAssetsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_skewness=None):  # noqa: E501
        """AssetsSkewnessPost200ResponseAssetsInner - a model defined in OpenAPI

        :param asset_skewness: The asset_skewness of this AssetsSkewnessPost200ResponseAssetsInner.  # noqa: E501
        :type asset_skewness: float
        """
        self.openapi_types = {
            'asset_skewness': float
        }

        self.attribute_map = {
            'asset_skewness': 'assetSkewness'
        }

        self._asset_skewness = asset_skewness

    @classmethod
    def from_dict(cls, dikt) -> 'AssetsSkewnessPost200ResponseAssetsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _assets_skewness_post_200_response_assets_inner of this AssetsSkewnessPost200ResponseAssetsInner.  # noqa: E501
        :rtype: AssetsSkewnessPost200ResponseAssetsInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_skewness(self) -> float:
        """Gets the asset_skewness of this AssetsSkewnessPost200ResponseAssetsInner.

        The skewness of the asset  # noqa: E501

        :return: The asset_skewness of this AssetsSkewnessPost200ResponseAssetsInner.
        :rtype: float
        """
        return self._asset_skewness

    @asset_skewness.setter
    def asset_skewness(self, asset_skewness: float):
        """Sets the asset_skewness of this AssetsSkewnessPost200ResponseAssetsInner.

        The skewness of the asset  # noqa: E501

        :param asset_skewness: The asset_skewness of this AssetsSkewnessPost200ResponseAssetsInner.
        :type asset_skewness: float
        """
        if asset_skewness is None:
            raise ValueError("Invalid value for `asset_skewness`, must not be `None`")  # noqa: E501

        self._asset_skewness = asset_skewness
