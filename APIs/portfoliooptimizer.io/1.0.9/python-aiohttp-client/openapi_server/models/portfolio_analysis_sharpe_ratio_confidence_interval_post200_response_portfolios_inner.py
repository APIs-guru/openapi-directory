# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PortfolioAnalysisSharpeRatioConfidenceIntervalPost200ResponsePortfoliosInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, portfolio_sharpe_ratio_confidence_interval: List[float]=None):
        """PortfolioAnalysisSharpeRatioConfidenceIntervalPost200ResponsePortfoliosInner - a model defined in OpenAPI

        :param portfolio_sharpe_ratio_confidence_interval: The portfolio_sharpe_ratio_confidence_interval of this PortfolioAnalysisSharpeRatioConfidenceIntervalPost200ResponsePortfoliosInner.
        """
        self.openapi_types = {
            'portfolio_sharpe_ratio_confidence_interval': List[float]
        }

        self.attribute_map = {
            'portfolio_sharpe_ratio_confidence_interval': 'portfolioSharpeRatioConfidenceInterval'
        }

        self._portfolio_sharpe_ratio_confidence_interval = portfolio_sharpe_ratio_confidence_interval

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PortfolioAnalysisSharpeRatioConfidenceIntervalPost200ResponsePortfoliosInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _portfolio_analysis_sharpe_ratio_confidence_interval_post_200_response_portfolios_inner of this PortfolioAnalysisSharpeRatioConfidenceIntervalPost200ResponsePortfoliosInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def portfolio_sharpe_ratio_confidence_interval(self):
        """Gets the portfolio_sharpe_ratio_confidence_interval of this PortfolioAnalysisSharpeRatioConfidenceIntervalPost200ResponsePortfoliosInner.

        portfolioSharpeRatioConfidenceInterval[0] (resp. portfolioSharpeRatioConfidenceInterval[1]) is the lower (resp. upper) bound of the built confidence interval, possibly equal to null in case of a negative infinite (resp. positive infinite) bound

        :return: The portfolio_sharpe_ratio_confidence_interval of this PortfolioAnalysisSharpeRatioConfidenceIntervalPost200ResponsePortfoliosInner.
        :rtype: List[float]
        """
        return self._portfolio_sharpe_ratio_confidence_interval

    @portfolio_sharpe_ratio_confidence_interval.setter
    def portfolio_sharpe_ratio_confidence_interval(self, portfolio_sharpe_ratio_confidence_interval):
        """Sets the portfolio_sharpe_ratio_confidence_interval of this PortfolioAnalysisSharpeRatioConfidenceIntervalPost200ResponsePortfoliosInner.

        portfolioSharpeRatioConfidenceInterval[0] (resp. portfolioSharpeRatioConfidenceInterval[1]) is the lower (resp. upper) bound of the built confidence interval, possibly equal to null in case of a negative infinite (resp. positive infinite) bound

        :param portfolio_sharpe_ratio_confidence_interval: The portfolio_sharpe_ratio_confidence_interval of this PortfolioAnalysisSharpeRatioConfidenceIntervalPost200ResponsePortfoliosInner.
        :type portfolio_sharpe_ratio_confidence_interval: List[float]
        """
        if portfolio_sharpe_ratio_confidence_interval is None:
            raise ValueError("Invalid value for `portfolio_sharpe_ratio_confidence_interval`, must not be `None`")
        if portfolio_sharpe_ratio_confidence_interval is not None and len(portfolio_sharpe_ratio_confidence_interval) > 2:
            raise ValueError("Invalid value for `portfolio_sharpe_ratio_confidence_interval`, number of items must be less than or equal to `2`")
        if portfolio_sharpe_ratio_confidence_interval is not None and len(portfolio_sharpe_ratio_confidence_interval) < 2:
            raise ValueError("Invalid value for `portfolio_sharpe_ratio_confidence_interval`, number of items must be greater than or equal to `2`")

        self._portfolio_sharpe_ratio_confidence_interval = portfolio_sharpe_ratio_confidence_interval
