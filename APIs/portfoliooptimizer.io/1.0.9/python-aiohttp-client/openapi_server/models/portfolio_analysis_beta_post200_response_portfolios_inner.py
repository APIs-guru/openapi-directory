# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PortfolioAnalysisBetaPost200ResponsePortfoliosInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, portfolio_beta: float=None):
        """PortfolioAnalysisBetaPost200ResponsePortfoliosInner - a model defined in OpenAPI

        :param portfolio_beta: The portfolio_beta of this PortfolioAnalysisBetaPost200ResponsePortfoliosInner.
        """
        self.openapi_types = {
            'portfolio_beta': float
        }

        self.attribute_map = {
            'portfolio_beta': 'portfolioBeta'
        }

        self._portfolio_beta = portfolio_beta

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PortfolioAnalysisBetaPost200ResponsePortfoliosInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _portfolio_analysis_beta_post_200_response_portfolios_inner of this PortfolioAnalysisBetaPost200ResponsePortfoliosInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def portfolio_beta(self):
        """Gets the portfolio_beta of this PortfolioAnalysisBetaPost200ResponsePortfoliosInner.

        The portfolio beta, which correponds to the portfolio systematic risk in the Capital Asset Pricing Model (CAPM)

        :return: The portfolio_beta of this PortfolioAnalysisBetaPost200ResponsePortfoliosInner.
        :rtype: float
        """
        return self._portfolio_beta

    @portfolio_beta.setter
    def portfolio_beta(self, portfolio_beta):
        """Sets the portfolio_beta of this PortfolioAnalysisBetaPost200ResponsePortfoliosInner.

        The portfolio beta, which correponds to the portfolio systematic risk in the Capital Asset Pricing Model (CAPM)

        :param portfolio_beta: The portfolio_beta of this PortfolioAnalysisBetaPost200ResponsePortfoliosInner.
        :type portfolio_beta: float
        """
        if portfolio_beta is None:
            raise ValueError("Invalid value for `portfolio_beta`, must not be `None`")

        self._portfolio_beta = portfolio_beta
