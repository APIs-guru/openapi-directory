# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PortfolioAnalysisTrackingErrorPostRequestPortfoliosInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, portfolio_returns: List[float]=None):
        """PortfolioAnalysisTrackingErrorPostRequestPortfoliosInner - a model defined in OpenAPI

        :param portfolio_returns: The portfolio_returns of this PortfolioAnalysisTrackingErrorPostRequestPortfoliosInner.
        """
        self.openapi_types = {
            'portfolio_returns': List[float]
        }

        self.attribute_map = {
            'portfolio_returns': 'portfolioReturns'
        }

        self._portfolio_returns = portfolio_returns

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PortfolioAnalysisTrackingErrorPostRequestPortfoliosInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _portfolio_analysis_tracking_error_post_request_portfolios_inner of this PortfolioAnalysisTrackingErrorPostRequestPortfoliosInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def portfolio_returns(self):
        """Gets the portfolio_returns of this PortfolioAnalysisTrackingErrorPostRequestPortfoliosInner.

        portfolioReturns[t] is the return of the portfolio at the time t, the portfolioReturns must have the same length as the benchmarkReturns array

        :return: The portfolio_returns of this PortfolioAnalysisTrackingErrorPostRequestPortfoliosInner.
        :rtype: List[float]
        """
        return self._portfolio_returns

    @portfolio_returns.setter
    def portfolio_returns(self, portfolio_returns):
        """Sets the portfolio_returns of this PortfolioAnalysisTrackingErrorPostRequestPortfoliosInner.

        portfolioReturns[t] is the return of the portfolio at the time t, the portfolioReturns must have the same length as the benchmarkReturns array

        :param portfolio_returns: The portfolio_returns of this PortfolioAnalysisTrackingErrorPostRequestPortfoliosInner.
        :type portfolio_returns: List[float]
        """
        if portfolio_returns is None:
            raise ValueError("Invalid value for `portfolio_returns`, must not be `None`")
        if portfolio_returns is not None and len(portfolio_returns) < 2:
            raise ValueError("Invalid value for `portfolio_returns`, number of items must be greater than or equal to `2`")

        self._portfolio_returns = portfolio_returns
