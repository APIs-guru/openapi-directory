# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssetsAnalysisTurbulenceIndexPost200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assets_turbulence_index: float=None):
        """AssetsAnalysisTurbulenceIndexPost200Response - a model defined in OpenAPI

        :param assets_turbulence_index: The assets_turbulence_index of this AssetsAnalysisTurbulenceIndexPost200Response.
        """
        self.openapi_types = {
            'assets_turbulence_index': float
        }

        self.attribute_map = {
            'assets_turbulence_index': 'assetsTurbulenceIndex'
        }

        self._assets_turbulence_index = assets_turbulence_index

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssetsAnalysisTurbulenceIndexPost200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _assets_analysis_turbulence_index_post_200_response of this AssetsAnalysisTurbulenceIndexPost200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assets_turbulence_index(self):
        """Gets the assets_turbulence_index of this AssetsAnalysisTurbulenceIndexPost200Response.

        the turbulence index of the universe of assets

        :return: The assets_turbulence_index of this AssetsAnalysisTurbulenceIndexPost200Response.
        :rtype: float
        """
        return self._assets_turbulence_index

    @assets_turbulence_index.setter
    def assets_turbulence_index(self, assets_turbulence_index):
        """Sets the assets_turbulence_index of this AssetsAnalysisTurbulenceIndexPost200Response.

        the turbulence index of the universe of assets

        :param assets_turbulence_index: The assets_turbulence_index of this AssetsAnalysisTurbulenceIndexPost200Response.
        :type assets_turbulence_index: float
        """
        if assets_turbulence_index is None:
            raise ValueError("Invalid value for `assets_turbulence_index`, must not be `None`")

        self._assets_turbulence_index = assets_turbulence_index
