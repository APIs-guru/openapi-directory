# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssetsPricesAdjustedPostRequestAssetsInnerAssetSplitsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _date: str=None, factor: float=None):
        """AssetsPricesAdjustedPostRequestAssetsInnerAssetSplitsInner - a model defined in OpenAPI

        :param _date: The _date of this AssetsPricesAdjustedPostRequestAssetsInnerAssetSplitsInner.
        :param factor: The factor of this AssetsPricesAdjustedPostRequestAssetsInnerAssetSplitsInner.
        """
        self.openapi_types = {
            '_date': str,
            'factor': float
        }

        self.attribute_map = {
            '_date': 'date',
            'factor': 'factor'
        }

        self.__date = _date
        self._factor = factor

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssetsPricesAdjustedPostRequestAssetsInnerAssetSplitsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _assets_prices_adjusted_post_request_assets_inner_assetSplits_inner of this AssetsPricesAdjustedPostRequestAssetsInnerAssetSplitsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self):
        """Gets the _date of this AssetsPricesAdjustedPostRequestAssetsInnerAssetSplitsInner.

        The date corresponding to the date t in format YYYY-MM-DD, which is usually the ex-distribution date

        :return: The _date of this AssetsPricesAdjustedPostRequestAssetsInnerAssetSplitsInner.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this AssetsPricesAdjustedPostRequestAssetsInnerAssetSplitsInner.

        The date corresponding to the date t in format YYYY-MM-DD, which is usually the ex-distribution date

        :param _date: The _date of this AssetsPricesAdjustedPostRequestAssetsInnerAssetSplitsInner.
        :type _date: str
        """
        if _date is None:
            raise ValueError("Invalid value for `_date`, must not be `None`")

        self.__date = _date

    @property
    def factor(self):
        """Gets the factor of this AssetsPricesAdjustedPostRequestAssetsInnerAssetSplitsInner.

        The split factor of the asset at the date t

        :return: The factor of this AssetsPricesAdjustedPostRequestAssetsInnerAssetSplitsInner.
        :rtype: float
        """
        return self._factor

    @factor.setter
    def factor(self, factor):
        """Sets the factor of this AssetsPricesAdjustedPostRequestAssetsInnerAssetSplitsInner.

        The split factor of the asset at the date t

        :param factor: The factor of this AssetsPricesAdjustedPostRequestAssetsInnerAssetSplitsInner.
        :type factor: float
        """
        if factor is None:
            raise ValueError("Invalid value for `factor`, must not be `None`")
        if factor is not None and factor <= 0:
            raise ValueError("Invalid value for `factor`, must be a value greater than `0`")

        self._factor = factor
