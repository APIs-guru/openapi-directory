# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PortfolioAnalysisEffectiveNumberOfBetsPost200ResponsePortfoliosInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, portfolio_effective_number_of_bets: float=None):
        """PortfolioAnalysisEffectiveNumberOfBetsPost200ResponsePortfoliosInner - a model defined in OpenAPI

        :param portfolio_effective_number_of_bets: The portfolio_effective_number_of_bets of this PortfolioAnalysisEffectiveNumberOfBetsPost200ResponsePortfoliosInner.
        """
        self.openapi_types = {
            'portfolio_effective_number_of_bets': float
        }

        self.attribute_map = {
            'portfolio_effective_number_of_bets': 'portfolioEffectiveNumberOfBets'
        }

        self._portfolio_effective_number_of_bets = portfolio_effective_number_of_bets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PortfolioAnalysisEffectiveNumberOfBetsPost200ResponsePortfoliosInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _portfolio_analysis_effective_number_of_bets_post_200_response_portfolios_inner of this PortfolioAnalysisEffectiveNumberOfBetsPost200ResponsePortfoliosInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def portfolio_effective_number_of_bets(self):
        """Gets the portfolio_effective_number_of_bets of this PortfolioAnalysisEffectiveNumberOfBetsPost200ResponsePortfoliosInner.

        The effective number of bets of the portfolio

        :return: The portfolio_effective_number_of_bets of this PortfolioAnalysisEffectiveNumberOfBetsPost200ResponsePortfoliosInner.
        :rtype: float
        """
        return self._portfolio_effective_number_of_bets

    @portfolio_effective_number_of_bets.setter
    def portfolio_effective_number_of_bets(self, portfolio_effective_number_of_bets):
        """Sets the portfolio_effective_number_of_bets of this PortfolioAnalysisEffectiveNumberOfBetsPost200ResponsePortfoliosInner.

        The effective number of bets of the portfolio

        :param portfolio_effective_number_of_bets: The portfolio_effective_number_of_bets of this PortfolioAnalysisEffectiveNumberOfBetsPost200ResponsePortfoliosInner.
        :type portfolio_effective_number_of_bets: float
        """
        if portfolio_effective_number_of_bets is None:
            raise ValueError("Invalid value for `portfolio_effective_number_of_bets`, must not be `None`")
        if portfolio_effective_number_of_bets is not None and portfolio_effective_number_of_bets < 0:
            raise ValueError("Invalid value for `portfolio_effective_number_of_bets`, must be a value greater than or equal to `0`")

        self._portfolio_effective_number_of_bets = portfolio_effective_number_of_bets
