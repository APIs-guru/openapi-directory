# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PortfolioAnalysisContributionsRiskPost200ResponsePortfoliosInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assets_groups_risk_contributions: List[float]=None, assets_risk_contributions: List[float]=None):
        """PortfolioAnalysisContributionsRiskPost200ResponsePortfoliosInner - a model defined in OpenAPI

        :param assets_groups_risk_contributions: The assets_groups_risk_contributions of this PortfolioAnalysisContributionsRiskPost200ResponsePortfoliosInner.
        :param assets_risk_contributions: The assets_risk_contributions of this PortfolioAnalysisContributionsRiskPost200ResponsePortfoliosInner.
        """
        self.openapi_types = {
            'assets_groups_risk_contributions': List[float],
            'assets_risk_contributions': List[float]
        }

        self.attribute_map = {
            'assets_groups_risk_contributions': 'assetsGroupsRiskContributions',
            'assets_risk_contributions': 'assetsRiskContributions'
        }

        self._assets_groups_risk_contributions = assets_groups_risk_contributions
        self._assets_risk_contributions = assets_risk_contributions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PortfolioAnalysisContributionsRiskPost200ResponsePortfoliosInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _portfolio_analysis_contributions_risk_post_200_response_portfolios_inner of this PortfolioAnalysisContributionsRiskPost200ResponsePortfoliosInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assets_groups_risk_contributions(self):
        """Gets the assets_groups_risk_contributions of this PortfolioAnalysisContributionsRiskPost200ResponsePortfoliosInner.

        assetsGroupsRiskContributions[k] is the risk contribution of the group of assets k to the risk of the portfolio

        :return: The assets_groups_risk_contributions of this PortfolioAnalysisContributionsRiskPost200ResponsePortfoliosInner.
        :rtype: List[float]
        """
        return self._assets_groups_risk_contributions

    @assets_groups_risk_contributions.setter
    def assets_groups_risk_contributions(self, assets_groups_risk_contributions):
        """Sets the assets_groups_risk_contributions of this PortfolioAnalysisContributionsRiskPost200ResponsePortfoliosInner.

        assetsGroupsRiskContributions[k] is the risk contribution of the group of assets k to the risk of the portfolio

        :param assets_groups_risk_contributions: The assets_groups_risk_contributions of this PortfolioAnalysisContributionsRiskPost200ResponsePortfoliosInner.
        :type assets_groups_risk_contributions: List[float]
        """
        if assets_groups_risk_contributions is not None and len(assets_groups_risk_contributions) < 1:
            raise ValueError("Invalid value for `assets_groups_risk_contributions`, number of items must be greater than or equal to `1`")

        self._assets_groups_risk_contributions = assets_groups_risk_contributions

    @property
    def assets_risk_contributions(self):
        """Gets the assets_risk_contributions of this PortfolioAnalysisContributionsRiskPost200ResponsePortfoliosInner.

        assetsRiskContributions[i] is the risk contribution of the asset i to the risk of the portfolio

        :return: The assets_risk_contributions of this PortfolioAnalysisContributionsRiskPost200ResponsePortfoliosInner.
        :rtype: List[float]
        """
        return self._assets_risk_contributions

    @assets_risk_contributions.setter
    def assets_risk_contributions(self, assets_risk_contributions):
        """Sets the assets_risk_contributions of this PortfolioAnalysisContributionsRiskPost200ResponsePortfoliosInner.

        assetsRiskContributions[i] is the risk contribution of the asset i to the risk of the portfolio

        :param assets_risk_contributions: The assets_risk_contributions of this PortfolioAnalysisContributionsRiskPost200ResponsePortfoliosInner.
        :type assets_risk_contributions: List[float]
        """
        if assets_risk_contributions is None:
            raise ValueError("Invalid value for `assets_risk_contributions`, must not be `None`")
        if assets_risk_contributions is not None and len(assets_risk_contributions) < 1:
            raise ValueError("Invalid value for `assets_risk_contributions`, number of items must be greater than or equal to `1`")

        self._assets_risk_contributions = assets_risk_contributions
