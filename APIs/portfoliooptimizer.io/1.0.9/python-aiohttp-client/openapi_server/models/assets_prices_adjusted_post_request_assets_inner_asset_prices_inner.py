# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssetsPricesAdjustedPostRequestAssetsInnerAssetPricesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, close: float=None, _date: str=None):
        """AssetsPricesAdjustedPostRequestAssetsInnerAssetPricesInner - a model defined in OpenAPI

        :param close: The close of this AssetsPricesAdjustedPostRequestAssetsInnerAssetPricesInner.
        :param _date: The _date of this AssetsPricesAdjustedPostRequestAssetsInnerAssetPricesInner.
        """
        self.openapi_types = {
            'close': float,
            '_date': str
        }

        self.attribute_map = {
            'close': 'close',
            '_date': 'date'
        }

        self._close = close
        self.__date = _date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssetsPricesAdjustedPostRequestAssetsInnerAssetPricesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _assets_prices_adjusted_post_request_assets_inner_assetPrices_inner of this AssetsPricesAdjustedPostRequestAssetsInnerAssetPricesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def close(self):
        """Gets the close of this AssetsPricesAdjustedPostRequestAssetsInnerAssetPricesInner.

        The unadjusted close price of the asset at the date t

        :return: The close of this AssetsPricesAdjustedPostRequestAssetsInnerAssetPricesInner.
        :rtype: float
        """
        return self._close

    @close.setter
    def close(self, close):
        """Sets the close of this AssetsPricesAdjustedPostRequestAssetsInnerAssetPricesInner.

        The unadjusted close price of the asset at the date t

        :param close: The close of this AssetsPricesAdjustedPostRequestAssetsInnerAssetPricesInner.
        :type close: float
        """
        if close is None:
            raise ValueError("Invalid value for `close`, must not be `None`")
        if close is not None and close <= 0:
            raise ValueError("Invalid value for `close`, must be a value greater than `0`")

        self._close = close

    @property
    def _date(self):
        """Gets the _date of this AssetsPricesAdjustedPostRequestAssetsInnerAssetPricesInner.

        The date corresponding to the date t in format YYYY-MM-DD

        :return: The _date of this AssetsPricesAdjustedPostRequestAssetsInnerAssetPricesInner.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this AssetsPricesAdjustedPostRequestAssetsInnerAssetPricesInner.

        The date corresponding to the date t in format YYYY-MM-DD

        :param _date: The _date of this AssetsPricesAdjustedPostRequestAssetsInnerAssetPricesInner.
        :type _date: str
        """
        if _date is None:
            raise ValueError("Invalid value for `_date`, must not be `None`")

        self.__date = _date
