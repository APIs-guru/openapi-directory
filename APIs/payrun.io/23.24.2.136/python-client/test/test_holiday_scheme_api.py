# coding: utf-8

"""
    PayRun.IO

    Open, scableable, transparent payroll API.

    The version of the OpenAPI document: 23.24.2.136
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.holiday_scheme_api import HolidaySchemeApi


class TestHolidaySchemeApi(unittest.TestCase):
    """HolidaySchemeApi unit test stubs"""

    def setUp(self) -> None:
        self.api = HolidaySchemeApi()

    def tearDown(self) -> None:
        pass

    def test_delete_holiday_scheme(self) -> None:
        """Test case for delete_holiday_scheme

        Delete an holiday scheme
        """
        pass

    def test_delete_holiday_scheme_revision(self) -> None:
        """Test case for delete_holiday_scheme_revision

        Delete an holiday scheme revision matching the specified revision date.
        """
        pass

    def test_delete_holiday_scheme_revision_by_number(self) -> None:
        """Test case for delete_holiday_scheme_revision_by_number

        Delete an HolidayScheme revision matching the specified revision number.
        """
        pass

    def test_delete_holiday_scheme_tag_0(self) -> None:
        """Test case for delete_holiday_scheme_tag_0

        Delete holiday scheme tag
        """
        pass

    def test_get_all_holiday_scheme_tags_0(self) -> None:
        """Test case for get_all_holiday_scheme_tags_0

        Get all holiday scheme tags
        """
        pass

    def test_get_holiday_scheme_by_effective_date(self) -> None:
        """Test case for get_holiday_scheme_by_effective_date

        Get holiday scheme by effective date.
        """
        pass

    def test_get_holiday_scheme_from_employer(self) -> None:
        """Test case for get_holiday_scheme_from_employer

        Get holiday scheme from employer
        """
        pass

    def test_get_holiday_scheme_revision_by_number(self) -> None:
        """Test case for get_holiday_scheme_revision_by_number

        Gets the holiday scheme revision by revision number
        """
        pass

    def test_get_holiday_scheme_revisions(self) -> None:
        """Test case for get_holiday_scheme_revisions

        Get all holiday scheme revisions
        """
        pass

    def test_get_holiday_schemes_by_effective_date(self) -> None:
        """Test case for get_holiday_schemes_by_effective_date

        Get holiday schemes from employer at a given effective date.
        """
        pass

    def test_get_holiday_schemes_from_employer(self) -> None:
        """Test case for get_holiday_schemes_from_employer

        Get holiday schemes from employer.
        """
        pass

    def test_get_holiday_schemes_with_tag_0(self) -> None:
        """Test case for get_holiday_schemes_with_tag_0

        Get holiday schemes with tag
        """
        pass

    def test_get_tag_from_holiday_scheme_0(self) -> None:
        """Test case for get_tag_from_holiday_scheme_0

        Get holiday scheme tag
        """
        pass

    def test_get_tag_from_holiday_scheme_revision_0(self) -> None:
        """Test case for get_tag_from_holiday_scheme_revision_0

        Get holiday scheme revision tag
        """
        pass

    def test_get_tags_from_holiday_scheme_0(self) -> None:
        """Test case for get_tags_from_holiday_scheme_0

        Get all tags from the holiday scheme
        """
        pass

    def test_get_tags_from_holiday_scheme_revision_0(self) -> None:
        """Test case for get_tags_from_holiday_scheme_revision_0

        Get all holiday scheme revision tags
        """
        pass

    def test_patch_holiday_scheme(self) -> None:
        """Test case for patch_holiday_scheme

        Patches the holiday scheme
        """
        pass

    def test_post_holiday_scheme_into_employer(self) -> None:
        """Test case for post_holiday_scheme_into_employer

        Create a new holiday scheme
        """
        pass

    def test_put_holiday_scheme_into_employer(self) -> None:
        """Test case for put_holiday_scheme_into_employer

        Updates the holiday scheme
        """
        pass

    def test_put_holiday_scheme_tag_0(self) -> None:
        """Test case for put_holiday_scheme_tag_0

        Insert holiday scheme tag
        """
        pass


if __name__ == '__main__':
    unittest.main()
