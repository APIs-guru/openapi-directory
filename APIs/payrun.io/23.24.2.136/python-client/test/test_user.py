# coding: utf-8

"""
    PayRun.IO

    Open, scableable, transparent payroll API.

    The version of the OpenAPI document: 23.24.2.136
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.user import User

class TestUser(unittest.TestCase):
    """User unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> User:
        """Test User
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `User`
        """
        model = User()
        if include_optional:
            return User(
                user = openapi_client.models.user.User(
                    meta_data = openapi_client.models.meta_data.MetaData(), 
                    permissions = openapi_client.models.permission.Permission(
                        permission = [
                            openapi_client.models.sub_contractor_1_sub_contractor_inner.SubContractor_1_SubContractor_inner(
                                @href = '', 
                                @rel = '', 
                                @title = '', )
                            ], ), 
                    roles = openapi_client.models.roles.Roles(
                        role = [
                            ''
                            ], ), 
                    user_identifier = '', )
            )
        else:
            return User(
        )
        """

    def testUser(self):
        """Test User"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
