# coding: utf-8

"""
    PayRun.IO

    Open, scableable, transparent payroll API.

    The version of the OpenAPI document: 23.24.2.136
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.employee_api import EmployeeApi


class TestEmployeeApi(unittest.TestCase):
    """EmployeeApi unit test stubs"""

    def setUp(self) -> None:
        self.api = EmployeeApi()

    def tearDown(self) -> None:
        pass

    def test_delete_employee(self) -> None:
        """Test case for delete_employee

        Delete an Employee
        """
        pass

    def test_delete_employee_revision(self) -> None:
        """Test case for delete_employee_revision

        Delete an Employee revision matching the specified revision date.
        """
        pass

    def test_delete_employee_revision_by_number(self) -> None:
        """Test case for delete_employee_revision_by_number

        Delete an Employee revision matching the specified revision number.
        """
        pass

    def test_delete_employee_secret(self) -> None:
        """Test case for delete_employee_secret

        Deletes employee secret
        """
        pass

    def test_get_ae_assessment_from_employee_0(self) -> None:
        """Test case for get_ae_assessment_from_employee_0

        Get the auto enrolment assessment
        """
        pass

    def test_get_ae_assessments_from_employee_0(self) -> None:
        """Test case for get_ae_assessments_from_employee_0

        Get the auto enrolment assessments
        """
        pass

    def test_get_all_employee_tags_0(self) -> None:
        """Test case for get_all_employee_tags_0

        Get all employee tags
        """
        pass

    def test_get_commentaries_from_employee(self) -> None:
        """Test case for get_commentaries_from_employee

        Get links to all commentaries for the specified employee
        """
        pass

    def test_get_commentary_from_employee(self) -> None:
        """Test case for get_commentary_from_employee

        Get commentary from employee
        """
        pass

    def test_get_commentary_from_pay_run_by_employee(self) -> None:
        """Test case for get_commentary_from_pay_run_by_employee

        Get commentary from payrun by specified employee.
        """
        pass

    def test_get_employee_by_effective_date(self) -> None:
        """Test case for get_employee_by_effective_date

        Get employee by effective date.
        """
        pass

    def test_get_employee_from_employer(self) -> None:
        """Test case for get_employee_from_employer

        Get employee from employer
        """
        pass

    def test_get_employee_revision_by_number(self) -> None:
        """Test case for get_employee_revision_by_number

        Gets the employee by revision number
        """
        pass

    def test_get_employee_revision_summaries(self) -> None:
        """Test case for get_employee_revision_summaries

        Get all employee revision summaries
        """
        pass

    def test_get_employee_revision_summary_by_number(self) -> None:
        """Test case for get_employee_revision_summary_by_number

        Gets the employee summary by revision number
        """
        pass

    def test_get_employee_revisions(self) -> None:
        """Test case for get_employee_revisions

        Get all employee revisions
        """
        pass

    def test_get_employee_secret(self) -> None:
        """Test case for get_employee_secret

        Get employee secret
        """
        pass

    def test_get_employee_secrets(self) -> None:
        """Test case for get_employee_secrets

        Get all employee secret links
        """
        pass

    def test_get_employee_summaries_by_effective_date(self) -> None:
        """Test case for get_employee_summaries_by_effective_date

        Get employee summaries from employer at a given effective date.
        """
        pass

    def test_get_employee_summaries_from_employer(self) -> None:
        """Test case for get_employee_summaries_from_employer

        Get employee summaries from employer.
        """
        pass

    def test_get_employee_summary_by_effective_date(self) -> None:
        """Test case for get_employee_summary_by_effective_date

        Get employee summary by effective date.
        """
        pass

    def test_get_employee_summary_from_employer(self) -> None:
        """Test case for get_employee_summary_from_employer

        Get employee summary from employer
        """
        pass

    def test_get_employees_by_effective_date(self) -> None:
        """Test case for get_employees_by_effective_date

        Get employees from employer at a given effective date.
        """
        pass

    def test_get_employees_from_employer(self) -> None:
        """Test case for get_employees_from_employer

        Get employees from employer.
        """
        pass

    def test_get_employees_from_pay_run(self) -> None:
        """Test case for get_employees_from_pay_run

        Get employees from the pay run
        """
        pass

    def test_get_employees_from_pay_schedule(self) -> None:
        """Test case for get_employees_from_pay_schedule

        Get all employees revisions from a pay schedule.
        """
        pass

    def test_get_employees_from_pay_schedule_on_effective_date(self) -> None:
        """Test case for get_employees_from_pay_schedule_on_effective_date

        Get employees from a pay schedule on effective date.
        """
        pass

    def test_get_employees_with_tag_0(self) -> None:
        """Test case for get_employees_with_tag_0

        Get employees with tag
        """
        pass

    def test_get_pay_runs_from_employee_0(self) -> None:
        """Test case for get_pay_runs_from_employee_0

        Gets the pay runs from the employee
        """
        pass

    def test_patch_employee(self) -> None:
        """Test case for patch_employee

        Patches the employee
        """
        pass

    def test_post_employee_into_employer(self) -> None:
        """Test case for post_employee_into_employer

        Create a new Employee
        """
        pass

    def test_post_employee_secret(self) -> None:
        """Test case for post_employee_secret

        Create a new employee secret
        """
        pass

    def test_put_employee_into_employer(self) -> None:
        """Test case for put_employee_into_employer

        Updates the Employee
        """
        pass

    def test_put_employee_secret(self) -> None:
        """Test case for put_employee_secret

        Create a new employee secret
        """
        pass


if __name__ == '__main__':
    unittest.main()
