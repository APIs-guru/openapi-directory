# coding: utf-8

"""
    PayRun.IO

    Open, scableable, transparent payroll API.

    The version of the OpenAPI document: 23.24.2.136
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.report_definition1 import ReportDefinition1

class TestReportDefinition1(unittest.TestCase):
    """ReportDefinition1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReportDefinition1:
        """Test ReportDefinition1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReportDefinition1`
        """
        model = ReportDefinition1()
        if include_optional:
            return ReportDefinition1(
                active = True,
                readonly = True,
                report_query = openapi_client.models.report_query.ReportQuery(
                    encoding = '', 
                    exclude_null_or_empty_elements = True, 
                    groups = openapi_client.models.group.Group(
                        group = [
                            openapi_client.models.group_group_inner.Group_Group_inner(
                                @group_name = '', 
                                @item_name = '', 
                                @loop_expression = '', 
                                @predicate = '', 
                                @selector = '', 
                                @unique_key_variable = '', 
                                condition = [
                                    openapi_client.models.condition_inner.Condition_inner(
                                        @value_a = '', 
                                        @value_b = '', )
                                    ], 
                                filter = [
                                    openapi_client.models.filter_inner.Filter_inner(
                                        @is_or = True, 
                                        @property = '', 
                                        @value = '', )
                                    ], 
                                order = [
                                    openapi_client.models.order_inner.Order_inner(
                                        @property = '', )
                                    ], 
                                output = [
                                    openapi_client.models.output_inner.Output_inner(
                                        @max_length = '', 
                                        @output = 'Element', )
                                    ], )
                            ], ), 
                    root_node_name = '', 
                    suppress_metric_attributes = True, 
                    variables = openapi_client.models.variable.Variable(
                        variable = [
                            openapi_client.models.variable_variable_inner.Variable_Variable_inner(
                                @name = '', 
                                @value = '', )
                            ], ), ),
                supported_transforms = '',
                title = '',
                version = ''
            )
        else:
            return ReportDefinition1(
        )
        """

    def testReportDefinition1(self):
        """Test ReportDefinition1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
