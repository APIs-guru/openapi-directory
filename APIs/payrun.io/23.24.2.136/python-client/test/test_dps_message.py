# coding: utf-8

"""
    PayRun.IO

    Open, scableable, transparent payroll API.

    The version of the OpenAPI document: 23.24.2.136
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dps_message import DpsMessage

class TestDpsMessage(unittest.TestCase):
    """DpsMessage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DpsMessage:
        """Test DpsMessage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DpsMessage`
        """
        model = DpsMessage()
        if include_optional:
            return DpsMessage(
                dps_message = openapi_client.models.dps_message.DpsMessage(
                    form_type = '', 
                    issue_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    message = '', 
                    message_status = 'Retrieved', 
                    message_type = '', 
                    processing_result = '', 
                    retrieve_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    sequence_number = 56, )
            )
        else:
            return DpsMessage(
        )
        """

    def testDpsMessage(self):
        """Test DpsMessage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
