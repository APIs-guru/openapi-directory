# coding: utf-8

"""
    PayRun.IO

    Open, scableable, transparent payroll API.

    The version of the OpenAPI document: 23.24.2.136
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pension2 import Pension2

class TestPension2(unittest.TestCase):
    """Pension2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Pension2:
        """Test Pension2
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Pension2`
        """
        model = Pension2()
        if include_optional:
            return Pension2(
                ae_compatible = True,
                certification = 'NotSet',
                code = '',
                contribution_deduction_day = 56,
                effective_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                employee_contribution_cash = 1.337,
                employee_contribution_percent = 1.337,
                employer_contribution_cash = 1.337,
                employer_contribution_percent = 1.337,
                employer_ni_saving = True,
                employer_ni_saving_percentage = 1.337,
                group = '',
                lower_threshold = 1.337,
                meta_data = openapi_client.models.meta_data.MetaData(),
                next_revision_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                pensionable_pay_codes = openapi_client.models.pensionable_pay_codes.PensionablePayCodes(
                    pay_code = [
                        ''
                        ], ),
                pro_rata_method = 'NotSet',
                provider_employer_ref = '',
                provider_name = '',
                qualifying_pay_codes = openapi_client.models.qualifying_pay_codes.QualifyingPayCodes(
                    pay_code = [
                        ''
                        ], ),
                ras_rounding_override = 'NotSet',
                revision = 56,
                rounding_option = 'NotSet',
                salary_sacrifice = True,
                scheme_name = '',
                sub_group = '',
                taxation_method = 'NotSet',
                upper_threshold = 1.337,
                use_ae_thresholds = True
            )
        else:
            return Pension2(
        )
        """

    def testPension2(self):
        """Test Pension2"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
