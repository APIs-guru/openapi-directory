# coding: utf-8

"""
    PayRun.IO

    Open, scableable, transparent payroll API.

    The version of the OpenAPI document: 23.24.2.136
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.sub_contractor_api import SubContractorApi


class TestSubContractorApi(unittest.TestCase):
    """SubContractorApi unit test stubs"""

    def setUp(self) -> None:
        self.api = SubContractorApi()

    def tearDown(self) -> None:
        pass

    def test_delete_sub_contractor(self) -> None:
        """Test case for delete_sub_contractor

        Delete an sub contractor
        """
        pass

    def test_delete_sub_contractor_revision(self) -> None:
        """Test case for delete_sub_contractor_revision

        Delete an sub contractor revision matching the specified revision date.
        """
        pass

    def test_delete_sub_contractor_revision_by_number(self) -> None:
        """Test case for delete_sub_contractor_revision_by_number

        Delete an SubContractor revision matching the specified revision number.
        """
        pass

    def test_get_sub_contractor_by_effective_date(self) -> None:
        """Test case for get_sub_contractor_by_effective_date

        Get sub contractor by effective date.
        """
        pass

    def test_get_sub_contractor_from_employer(self) -> None:
        """Test case for get_sub_contractor_from_employer

        Get sub contractor from employer
        """
        pass

    def test_get_sub_contractor_revision_by_number(self) -> None:
        """Test case for get_sub_contractor_revision_by_number

        Gets the sub contractor by revision number
        """
        pass

    def test_get_sub_contractor_revisions(self) -> None:
        """Test case for get_sub_contractor_revisions

        Get all sub contractor revisions
        """
        pass

    def test_get_sub_contractors_by_effective_date(self) -> None:
        """Test case for get_sub_contractors_by_effective_date

        Get sub contractors from employer at a given effective date.
        """
        pass

    def test_get_sub_contractors_from_employer(self) -> None:
        """Test case for get_sub_contractors_from_employer

        Get sub contractors from employer.
        """
        pass

    def test_patch_sub_contractor(self) -> None:
        """Test case for patch_sub_contractor

        Patches the sub contractor
        """
        pass

    def test_post_sub_contractor_into_employer(self) -> None:
        """Test case for post_sub_contractor_into_employer

        Create a new sub contractor
        """
        pass

    def test_put_sub_contractor_into_employer(self) -> None:
        """Test case for put_sub_contractor_into_employer

        Updates the sub contractor
        """
        pass


if __name__ == '__main__':
    unittest.main()
