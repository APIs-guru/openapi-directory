# coding: utf-8

"""
    PayRun.IO

    Open, scableable, transparent payroll API.

    The version of the OpenAPI document: 23.24.2.136
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.journal_line import JournalLine

class TestJournalLine(unittest.TestCase):
    """JournalLine unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JournalLine:
        """Test JournalLine
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JournalLine`
        """
        model = JournalLine()
        if include_optional:
            return JournalLine(
                journal_line = openapi_client.models.journal_line.JournalLine(
                    credit = 1.337, 
                    debit = 1.337, 
                    description = '', 
                    employee = openapi_client.models.employee.Employee(
                        @href = '', 
                        @rel = '', 
                        @title = '', ), 
                    generated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    grouping = '', 
                    ledger_target = '', 
                    nom_code = '', 
                    pay_frequency = 'Weekly', 
                    pay_run = openapi_client.models.pay_run.PayRun(
                        @href = '', 
                        @rel = '', 
                        @title = '', ), 
                    sub_contractor = openapi_client.models.sub_contractor.SubContractor(
                        @href = '', 
                        @rel = '', 
                        @title = '', ), 
                    sub_nom_code = '', 
                    tax_period = 56, 
                    tax_year = 56, )
            )
        else:
            return JournalLine(
        )
        """

    def testJournalLine(self):
        """Test JournalLine"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
