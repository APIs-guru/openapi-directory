# coding: utf-8

"""
    PayRun.IO

    Open, scableable, transparent payroll API.

    The version of the OpenAPI document: 23.24.2.136
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.rti_job_instruction import RtiJobInstruction

class TestRtiJobInstruction(unittest.TestCase):
    """RtiJobInstruction unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RtiJobInstruction:
        """Test RtiJobInstruction
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RtiJobInstruction`
        """
        model = RtiJobInstruction()
        if include_optional:
            return RtiJobInstruction(
                rti_job_instruction = openapi_client.models.rti_job_instruction.RtiJobInstruction(
                    earlier_tax_year = 56, 
                    employer = openapi_client.models.employer.Employer(
                        @href = '', 
                        @rel = '', 
                        @title = '', ), 
                    final_submission_for_year = True, 
                    generate = True, 
                    holding_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    late_reason = 'A', 
                    no_payment_for_period_from = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    no_payment_for_period_to = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    pay_schedule = openapi_client.models.pay_schedule.PaySchedule(
                        @href = '', 
                        @rel = '', 
                        @title = '', ), 
                    payment_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    period_of_inactivity_from = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    period_of_inactivity_to = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    rti_transaction = openapi_client.models.rti_transaction.RtiTransaction(
                        @href = '', 
                        @rel = '', 
                        @title = '', ), 
                    rti_type = '', 
                    scheme_ceased = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    tax_month = 56, 
                    tax_year = 56, 
                    timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    transmit = True, )
            )
        else:
            return RtiJobInstruction(
        )
        """

    def testRtiJobInstruction(self):
        """Test RtiJobInstruction"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
