# coding: utf-8

"""
    PayRun.IO

    Open, scableable, transparent payroll API.

    The version of the OpenAPI document: 23.24.2.136
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ae_assessment import AEAssessment

class TestAEAssessment(unittest.TestCase):
    """AEAssessment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AEAssessment:
        """Test AEAssessment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AEAssessment`
        """
        model = AEAssessment()
        if include_optional:
            return AEAssessment(
                ae_assessment = openapi_client.models.ae_assessment.AEAssessment(
                    age = 56, 
                    assessment_code = 'Excluded', 
                    assessment_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    assessment_event = 'NonEnrolmentEvent', 
                    assessment_override = 'None', 
                    assessment_result = 'Inconclusive', 
                    is_member_of_alternative_pension_scheme = True, 
                    opt_out_window_end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    qualifying_earnings = 1.337, 
                    reenrolment_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    state_pension_age = 56, 
                    state_pension_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    tax_period = 56, 
                    tax_year = 56, )
            )
        else:
            return AEAssessment(
        )
        """

    def testAEAssessment(self):
        """Test AEAssessment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
