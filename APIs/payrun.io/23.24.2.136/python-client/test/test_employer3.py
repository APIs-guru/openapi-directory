# coding: utf-8

"""
    PayRun.IO

    Open, scableable, transparent payroll API.

    The version of the OpenAPI document: 23.24.2.136
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.employer3 import Employer3

class TestEmployer3(unittest.TestCase):
    """Employer3 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Employer3:
        """Test Employer3
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Employer3`
        """
        model = Employer3()
        if include_optional:
            return Employer3(
                address = openapi_client.models.address.Address(
                    address1 = '', 
                    address2 = '', 
                    address3 = '', 
                    address4 = '', 
                    country = '', 
                    postcode = '', ),
                apprenticeship_levy_allowance = 1.337,
                auto_enrolment = openapi_client.models.auto_enrolment.AutoEnrolment(
                    pension = openapi_client.models.pension.Pension(
                        @href = '', 
                        @rel = '', 
                        @title = '', ), 
                    postponement_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    primary_address = openapi_client.models.primary_address.PrimaryAddress(
                        address1 = '', 
                        address2 = '', 
                        address3 = '', 
                        address4 = '', 
                        country = '', 
                        postcode = '', ), 
                    primary_email = '', 
                    primary_first_name = '', 
                    primary_job_title = '', 
                    primary_last_name = '', 
                    primary_telephone = '', 
                    re_enrolment_day_offset = 56, 
                    re_enrolment_month_offset = 56, 
                    recent_opt_out_re_enrolment_excluded = True, 
                    secondary_address = openapi_client.models.secondary_address.SecondaryAddress(
                        address1 = '', 
                        address2 = '', 
                        address3 = '', 
                        address4 = '', 
                        country = '', 
                        postcode = '', ), 
                    secondary_email = '', 
                    secondary_first_name = '', 
                    secondary_job_title = '', 
                    secondary_last_name = '', 
                    secondary_telephone = '', 
                    staging_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                bacs_service_user_number = '',
                bank_account = openapi_client.models.bank_account.BankAccount(
                    account_name = '', 
                    account_number = '', 
                    branch_name = '', 
                    reference = '', 
                    sort_code = '', ),
                calculate_apprenticeship_levy = True,
                claim_employment_allowance = True,
                claim_small_employer_relief = True,
                effective_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                hmrc_settings = openapi_client.models.hmrc_settings.HmrcSettings(
                    accounting_office_ref = '', 
                    cotax_ref = '', 
                    contact_email = '', 
                    contact_fax = '', 
                    contact_first_name = '', 
                    contact_last_name = '', 
                    contact_telephone = '', 
                    employment_allowance_override = 1.337, 
                    password = '', 
                    sautr = '', 
                    sender = 'Employer', 
                    sender_id = '', 
                    state_aid_sector = 'Agriculture', 
                    tax_office_number = '', 
                    tax_office_reference = '', ),
                meta_data = openapi_client.models.meta_data.MetaData(),
                name = '',
                next_revision_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                region = 'NotSet',
                revision = 56,
                rule_exclusions = 'None',
                territory = 'UnitedKingdom'
            )
        else:
            return Employer3(
        )
        """

    def testEmployer3(self):
        """Test Employer3"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
