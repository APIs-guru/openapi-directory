# coding: utf-8

"""
    PayRun.IO

    Open, scableable, transparent payroll API.

    The version of the OpenAPI document: 23.24.2.136
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.employer_api import EmployerApi


class TestEmployerApi(unittest.TestCase):
    """EmployerApi unit test stubs"""

    def setUp(self) -> None:
        self.api = EmployerApi()

    def tearDown(self) -> None:
        pass

    def test_delete_employer(self) -> None:
        """Test case for delete_employer

        Delete an Employer
        """
        pass

    def test_delete_employer_revision(self) -> None:
        """Test case for delete_employer_revision

        Delete an Employer revision matching the specified revision date.
        """
        pass

    def test_delete_employer_revision_by_number(self) -> None:
        """Test case for delete_employer_revision_by_number

        Delete an Employer revision matching the specified revision number.
        """
        pass

    def test_delete_employer_secret(self) -> None:
        """Test case for delete_employer_secret

        Deletes employer secret
        """
        pass

    def test_get_all_employer_tags_0(self) -> None:
        """Test case for get_all_employer_tags_0

        Get all employer tags
        """
        pass

    def test_get_employer(self) -> None:
        """Test case for get_employer

        Gets the employer
        """
        pass

    def test_get_employer_by_effective_date(self) -> None:
        """Test case for get_employer_by_effective_date

        Gets the employer at the specified effective
        """
        pass

    def test_get_employer_revision_by_number(self) -> None:
        """Test case for get_employer_revision_by_number

        Gets the employer by revision number
        """
        pass

    def test_get_employer_revision_summaries(self) -> None:
        """Test case for get_employer_revision_summaries

        Get all employer revision summaries
        """
        pass

    def test_get_employer_revision_summary_by_number(self) -> None:
        """Test case for get_employer_revision_summary_by_number

        Gets the employer summary by revision number
        """
        pass

    def test_get_employer_revisions(self) -> None:
        """Test case for get_employer_revisions

        Gets the employer revisions
        """
        pass

    def test_get_employer_secret(self) -> None:
        """Test case for get_employer_secret

        Get employer secret
        """
        pass

    def test_get_employer_secrets(self) -> None:
        """Test case for get_employer_secrets

        Get all employer secret links
        """
        pass

    def test_get_employer_summaries(self) -> None:
        """Test case for get_employer_summaries

        Get employer summaries.
        """
        pass

    def test_get_employer_summaries_by_effective_date(self) -> None:
        """Test case for get_employer_summaries_by_effective_date

        Get employer summaries at a given effective date.
        """
        pass

    def test_get_employer_summary(self) -> None:
        """Test case for get_employer_summary

        Get employer summary
        """
        pass

    def test_get_employer_summary_by_effective_date(self) -> None:
        """Test case for get_employer_summary_by_effective_date

        Get employer summary by effective date.
        """
        pass

    def test_get_employers(self) -> None:
        """Test case for get_employers

        Gets all employers
        """
        pass

    def test_get_employers_by_effective_date(self) -> None:
        """Test case for get_employers_by_effective_date

        Gets all employers at the specified effective date
        """
        pass

    def test_get_employers_with_tag_0(self) -> None:
        """Test case for get_employers_with_tag_0

        Get employers with tag
        """
        pass

    def test_patch_employer(self) -> None:
        """Test case for patch_employer

        Patches the employer
        """
        pass

    def test_post_employer(self) -> None:
        """Test case for post_employer

        Create a new Employer
        """
        pass

    def test_post_employer_secret(self) -> None:
        """Test case for post_employer_secret

        Create a new employer secret
        """
        pass

    def test_put_employer(self) -> None:
        """Test case for put_employer

        Updates the Employer
        """
        pass

    def test_put_employer_secret(self) -> None:
        """Test case for put_employer_secret

        Create a new employer secret
        """
        pass


if __name__ == '__main__':
    unittest.main()
