# coding: utf-8

"""
    PayRun.IO

    Open, scableable, transparent payroll API.

    The version of the OpenAPI document: 23.24.2.136
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pay_code1 import PayCode1

class TestPayCode1(unittest.TestCase):
    """PayCode1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PayCode1:
        """Test PayCode1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PayCode1`
        """
        model = PayCode1()
        if include_optional:
            return PayCode1(
                benefit = True,
                code = '',
                description = '',
                effective_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                meta_data = openapi_client.models.meta_data.MetaData(),
                next_revision_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                niable = True,
                nominal_code = openapi_client.models.nominal_code.NominalCode(
                    @href = '', 
                    @rel = '', 
                    @title = '', ),
                non_arrestable = True,
                notional = True,
                readonly = True,
                region = 'NotSet',
                revision = 56,
                taxable = True,
                territory = 'UnitedKingdom',
                type = 'NotSet'
            )
        else:
            return PayCode1(
        )
        """

    def testPayCode1(self):
        """Test PayCode1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
