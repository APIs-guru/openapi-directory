# coding: utf-8

"""
    Mux API

    Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.

    The version of the OpenAPI document: v1
    Contact: devex@mux.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.video_view_response import VideoViewResponse

class TestVideoViewResponse(unittest.TestCase):
    """VideoViewResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VideoViewResponse:
        """Test VideoViewResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VideoViewResponse`
        """
        model = VideoViewResponse()
        if include_optional:
            return VideoViewResponse(
                data = openapi_client.models.video_view.VideoView(
                    asn = 56, 
                    asn_name = '', 
                    asset_id = '', 
                    buffering_count = 56, 
                    buffering_duration = 56, 
                    buffering_rate = '', 
                    cdn = '', 
                    city = '', 
                    continent_code = '', 
                    country_code = '', 
                    country_name = '', 
                    custom_1 = '', 
                    custom_10 = '', 
                    custom_2 = '', 
                    custom_3 = '', 
                    custom_4 = '', 
                    custom_5 = '', 
                    custom_6 = '', 
                    custom_7 = '', 
                    custom_8 = '', 
                    custom_9 = '', 
                    environment_id = '', 
                    error_type_id = 56, 
                    events = [
                        openapi_client.models.video_view_event.VideoViewEvent(
                            event_time = 56, 
                            name = '', 
                            playback_time = 56, 
                            viewer_time = 56, )
                        ], 
                    exit_before_video_start = True, 
                    experiment_name = '', 
                    id = '', 
                    inserted_at = '', 
                    isp = '', 
                    latitude = '', 
                    live_stream_id = '', 
                    live_stream_latency = 56, 
                    longitude = '', 
                    metro = '', 
                    mux_api_version = '', 
                    mux_embed = '', 
                    mux_embed_version = '', 
                    mux_viewer_id = '', 
                    page_load_time = 56, 
                    page_type = '', 
                    page_url = '', 
                    platform_description = '', 
                    platform_summary = '', 
                    playback_id = '', 
                    playback_score = '', 
                    player_autoplay = True, 
                    player_error_code = '', 
                    player_error_context = '', 
                    player_error_message = '', 
                    player_height = 56, 
                    player_instance_id = '', 
                    player_language = '', 
                    player_load_time = 56, 
                    player_mux_plugin_name = '', 
                    player_mux_plugin_version = '', 
                    player_name = '', 
                    player_poster = '', 
                    player_preload = True, 
                    player_remote_played = True, 
                    player_software = '', 
                    player_software_version = '', 
                    player_source_domain = '', 
                    player_source_duration = 56, 
                    player_source_height = 56, 
                    player_source_host_name = '', 
                    player_source_stream_type = '', 
                    player_source_type = '', 
                    player_source_url = '', 
                    player_source_width = 56, 
                    player_startup_time = 56, 
                    player_version = '', 
                    player_view_count = 56, 
                    player_width = 56, 
                    preroll_ad_asset_hostname = '', 
                    preroll_ad_tag_hostname = '', 
                    preroll_played = True, 
                    preroll_requested = True, 
                    property_id = 56, 
                    quality_score = '', 
                    rebuffer_percentage = '', 
                    rebuffering_score = '', 
                    region = '', 
                    requests_for_first_preroll = 56, 
                    session_id = '', 
                    short_time = '', 
                    startup_score = '', 
                    sub_property_id = '', 
                    time_to_first_frame = 56, 
                    updated_at = '', 
                    used_fullscreen = True, 
                    video_content_type = '', 
                    video_duration = 56, 
                    video_encoding_variant = '', 
                    video_id = '', 
                    video_language = '', 
                    video_producer = '', 
                    video_series = '', 
                    video_startup_failure = True, 
                    video_startup_preroll_load_time = 56, 
                    video_startup_preroll_request_time = 56, 
                    video_stream_type = '', 
                    video_title = '', 
                    video_variant_id = '', 
                    video_variant_name = '', 
                    view_average_request_latency = 56, 
                    view_average_request_throughput = 56, 
                    view_drm_type = '', 
                    view_dropped_frame_count = 56, 
                    view_end = '', 
                    view_error_id = 56, 
                    view_has_ad = True, 
                    view_id = '', 
                    view_max_downscale_percentage = '', 
                    view_max_playhead_position = '', 
                    view_max_request_latency = 56, 
                    view_max_upscale_percentage = '', 
                    view_playing_time = '', 
                    view_seek_count = 56, 
                    view_seek_duration = 56, 
                    view_session_id = '', 
                    view_start = '', 
                    view_total_content_playback_time = 56, 
                    view_total_downscaling = '', 
                    view_total_upscaling = '', 
                    viewer_application_engine = '', 
                    viewer_application_name = '', 
                    viewer_application_version = '', 
                    viewer_connection_type = '', 
                    viewer_device_category = '', 
                    viewer_device_manufacturer = '', 
                    viewer_device_model = '', 
                    viewer_device_name = '', 
                    viewer_experience_score = '', 
                    viewer_os_architecture = '', 
                    viewer_os_family = '', 
                    viewer_os_version = '', 
                    viewer_user_agent = '', 
                    viewer_user_id = '', 
                    watch_time = 56, 
                    watched = True, 
                    weighted_average_bitrate = 56, ),
                timeframe = [
                    56
                    ]
            )
        else:
            return VideoViewResponse(
        )
        """

    def testVideoViewResponse(self):
        """Test VideoViewResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
