# coding: utf-8

"""
    Mux API

    Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.

    The version of the OpenAPI document: v1
    Contact: devex@mux.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_delivery_usage_response import ListDeliveryUsageResponse

class TestListDeliveryUsageResponse(unittest.TestCase):
    """ListDeliveryUsageResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListDeliveryUsageResponse:
        """Test ListDeliveryUsageResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListDeliveryUsageResponse`
        """
        model = ListDeliveryUsageResponse()
        if include_optional:
            return ListDeliveryUsageResponse(
                data = [
                    openapi_client.models.delivery_report.DeliveryReport(
                        asset_duration = 1.337, 
                        asset_id = '', 
                        asset_resolution_tier = 'audio-only', 
                        asset_state = 'ready', 
                        created_at = '', 
                        deleted_at = '', 
                        delivered_seconds = 1.337, 
                        delivered_seconds_by_resolution = openapi_client.models.delivery_report_delivered_seconds_by_resolution.DeliveryReport_delivered_seconds_by_resolution(
                            tier_1080p = 1.337, 
                            tier_1440p = 1.337, 
                            tier_2160p = 1.337, 
                            tier_720p = 1.337, 
                            tier_audio_only = 1.337, ), 
                        live_stream_id = '', 
                        passthrough = '', )
                    ],
                limit = 56,
                timeframe = [
                    56
                    ],
                total_row_count = 56
            )
        else:
            return ListDeliveryUsageResponse(
        )
        """

    def testListDeliveryUsageResponse(self):
        """Test ListDeliveryUsageResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
