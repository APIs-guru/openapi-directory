# coding: utf-8

"""
    Mux API

    Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.

    The version of the OpenAPI document: v1
    Contact: devex@mux.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_incidents_response import ListIncidentsResponse

class TestListIncidentsResponse(unittest.TestCase):
    """ListIncidentsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListIncidentsResponse:
        """Test ListIncidentsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListIncidentsResponse`
        """
        model = ListIncidentsResponse()
        if include_optional:
            return ListIncidentsResponse(
                data = [
                    openapi_client.models.incident.Incident(
                        affected_views = 56, 
                        affected_views_per_hour = 56, 
                        affected_views_per_hour_on_open = 56, 
                        breakdowns = [
                            openapi_client.models.incident_breakdown.IncidentBreakdown(
                                id = '', 
                                name = '', 
                                value = '', )
                            ], 
                        description = '', 
                        error_description = '', 
                        id = '', 
                        impact = '', 
                        incident_key = '', 
                        measured_value = 1.337, 
                        measured_value_on_close = 1.337, 
                        measurement = '', 
                        notification_rules = [
                            openapi_client.models.incident_notification_rule.IncidentNotificationRule(
                                action = '', 
                                id = '', 
                                property_id = '', 
                                rules = [
                                    openapi_client.models.notification_rule.NotificationRule(
                                        id = '', 
                                        name = '', 
                                        value = '', )
                                    ], 
                                status = '', )
                            ], 
                        notifications = [
                            openapi_client.models.incident_notification.IncidentNotification(
                                attempted_at = '', 
                                id = 56, 
                                queued_at = '', )
                            ], 
                        resolved_at = '', 
                        sample_size = 56, 
                        sample_size_unit = '', 
                        severity = '', 
                        started_at = '', 
                        status = '', 
                        threshold = 1.337, )
                    ],
                timeframe = [
                    56
                    ],
                total_row_count = 56
            )
        else:
            return ListIncidentsResponse(
        )
        """

    def testListIncidentsResponse(self):
        """Test ListIncidentsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
