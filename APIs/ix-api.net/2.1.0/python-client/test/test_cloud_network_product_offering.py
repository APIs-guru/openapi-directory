# coding: utf-8

"""
    IX-API

     This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 

    The version of the OpenAPI document: 2.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cloud_network_product_offering import CloudNetworkProductOffering

class TestCloudNetworkProductOffering(unittest.TestCase):
    """CloudNetworkProductOffering unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CloudNetworkProductOffering:
        """Test CloudNetworkProductOffering
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CloudNetworkProductOffering`
        """
        model = CloudNetworkProductOffering()
        if include_optional:
            return CloudNetworkProductOffering(
                bandwidth_max = 0,
                bandwidth_min = 0,
                delivery_method = 'dedicated',
                display_name = '',
                diversity = 1,
                downgrade_allowed = True,
                handover_metro_area = 'met:29381993:NYC',
                handover_metro_area_network = '191239810',
                id = '',
                name = '',
                physical_port_speed = 0,
                provider_vlans = 'single',
                resource_type = 'network_service',
                service_metro_area = 'met:213913485:LON',
                service_metro_area_network = '9123843',
                service_provider = 'AWS',
                service_provider_pop = 'INX6',
                service_provider_region = 'eu-central-1',
                service_provider_workflow = 'exchange_first',
                type = 'cloud_vc',
                upgrade_allowed = True
            )
        else:
            return CloudNetworkProductOffering(
                bandwidth_max = 0,
                bandwidth_min = 0,
                delivery_method = 'dedicated',
                display_name = '',
                diversity = 1,
                downgrade_allowed = True,
                handover_metro_area = 'met:29381993:NYC',
                handover_metro_area_network = '191239810',
                id = '',
                name = '',
                physical_port_speed = 0,
                provider_vlans = 'single',
                resource_type = 'network_service',
                service_metro_area = 'met:213913485:LON',
                service_metro_area_network = '9123843',
                service_provider = 'AWS',
                service_provider_pop = 'INX6',
                service_provider_region = 'eu-central-1',
                service_provider_workflow = 'exchange_first',
                type = 'cloud_vc',
                upgrade_allowed = True,
        )
        """

    def testCloudNetworkProductOffering(self):
        """Test CloudNetworkProductOffering"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
