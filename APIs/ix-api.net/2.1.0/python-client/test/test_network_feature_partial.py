# coding: utf-8

"""
    IX-API

     This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 

    The version of the OpenAPI document: 2.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.network_feature_partial import NetworkFeaturePartial

class TestNetworkFeaturePartial(unittest.TestCase):
    """NetworkFeaturePartial unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NetworkFeaturePartial:
        """Test NetworkFeaturePartial
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NetworkFeaturePartial`
        """
        model = NetworkFeaturePartial()
        if include_optional:
            return NetworkFeaturePartial(
                address_families = [af_inet],
                asn = 0,
                available_bgp_session_types = [passive],
                flags = [
                    null
                    ],
                fqdn = 'rs1.moon-ix.net',
                id = '',
                ip_v4 = '23.42.0.1',
                ip_v6 = '2001:23:42::1',
                looking_glass_url = 'https://lg.moon-ix.net/rs1',
                name = '',
                network_service = '',
                nfc_required_contact_roles = [
                    ''
                    ],
                required = True,
                session_mode = 'public',
                type = 'route_server'
            )
        else:
            return NetworkFeaturePartial(
                type = 'route_server',
        )
        """

    def testNetworkFeaturePartial(self):
        """Test NetworkFeaturePartial"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
