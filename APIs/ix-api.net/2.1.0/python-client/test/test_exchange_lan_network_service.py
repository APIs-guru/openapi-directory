# coding: utf-8

"""
    IX-API

     This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 

    The version of the OpenAPI document: 2.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.exchange_lan_network_service import ExchangeLanNetworkService

class TestExchangeLanNetworkService(unittest.TestCase):
    """ExchangeLanNetworkService unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExchangeLanNetworkService:
        """Test ExchangeLanNetworkService
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExchangeLanNetworkService`
        """
        model = ExchangeLanNetworkService()
        if include_optional:
            return ExchangeLanNetworkService(
                consuming_account = '2381982',
                external_ref = 'IX:Service:23042',
                id = '',
                ixfdb_ixid = 56,
                managing_account = '238189294',
                metro_area_network = 'man:293225:LON2',
                name = '',
                network_features = [
                    ''
                    ],
                nsc_required_contact_roles = [
                    ''
                    ],
                peeringdb_ixid = 56,
                product_offering = '',
                state = 'requested',
                status = [
                    null
                    ],
                subnet_v4 = '23.142.52.0/21',
                subnet_v6 = '2001:23:42::/48',
                type = 'exchange_lan'
            )
        else:
            return ExchangeLanNetworkService(
                consuming_account = '2381982',
                id = '',
                managing_account = '238189294',
                metro_area_network = 'man:293225:LON2',
                name = '',
                network_features = [
                    ''
                    ],
                state = 'requested',
                subnet_v4 = '23.142.52.0/21',
                subnet_v6 = '2001:23:42::/48',
                type = 'exchange_lan',
        )
        """

    def testExchangeLanNetworkService(self):
        """Test ExchangeLanNetworkService"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
