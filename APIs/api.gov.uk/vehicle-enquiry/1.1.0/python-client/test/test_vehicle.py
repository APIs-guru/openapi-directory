# coding: utf-8

"""
    Vehicle Enquiry API

    Interface specification for the DVLA Vehicle Enquiry API

    The version of the OpenAPI document: 1.1.0
    Contact: DvlaAPIAccess@dvla.gov.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.vehicle import Vehicle

class TestVehicle(unittest.TestCase):
    """Vehicle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Vehicle:
        """Test Vehicle
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Vehicle`
        """
        model = Vehicle()
        if include_optional:
            return Vehicle(
                art_end_date = 'Mon Dec 24 19:00:00 EST 2007',
                co2_emissions = 0,
                colour = 'Blue',
                date_of_last_v5_c_issued = 'Sat Dec 24 19:00:00 EST 2016',
                engine_capacity = 1796,
                euro_status = 'Euro 5',
                fuel_type = 'PETROL',
                make = 'ROVER',
                marked_for_export = True,
                month_of_first_dvla_registration = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                month_of_first_registration = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                mot_expiry_date = 'Wed Dec 24 19:00:00 EST 2008',
                mot_status = 'No details held by DVLA',
                real_driving_emissions = '1',
                registration_number = 'WN67DSO',
                revenue_weight = 1640,
                tax_due_date = 'Sun Dec 24 19:00:00 EST 2017',
                tax_status = 'Untaxed',
                type_approval = 'N1',
                wheelplan = 'NON STANDARD',
                year_of_manufacture = 2004
            )
        else:
            return Vehicle(
                registration_number = 'WN67DSO',
        )
        """

    def testVehicle(self):
        """Test Vehicle"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
