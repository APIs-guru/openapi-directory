# coding: utf-8

"""
    SiriKit Cloud Media

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.add_media_intent_handling_invocation_response import AddMediaIntentHandlingInvocationResponse

class TestAddMediaIntentHandlingInvocationResponse(unittest.TestCase):
    """AddMediaIntentHandlingInvocationResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddMediaIntentHandlingInvocationResponse:
        """Test AddMediaIntentHandlingInvocationResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddMediaIntentHandlingInvocationResponse`
        """
        model = AddMediaIntentHandlingInvocationResponse()
        if include_optional:
            return AddMediaIntentHandlingInvocationResponse(
                method = '',
                result = openapi_client.models.result.result(),
                debug = '',
                metrics = openapi_client.models.execution_metrics.ExecutionMetrics(
                    completed = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    duration = 1.337, 
                    received = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                exception = openapi_client.models.protocol_exception.ProtocolException(
                    code = 56, 
                    method_index = 56, 
                    method_name = '', 
                    reason = 'unsupported', 
                    retry_with_delay = 1.337, 
                    trace = [
                        ''
                        ], )
            )
        else:
            return AddMediaIntentHandlingInvocationResponse(
                method = '',
                result = openapi_client.models.result.result(),
                exception = openapi_client.models.protocol_exception.ProtocolException(
                    code = 56, 
                    method_index = 56, 
                    method_name = '', 
                    reason = 'unsupported', 
                    retry_with_delay = 1.337, 
                    trace = [
                        ''
                        ], ),
        )
        """

    def testAddMediaIntentHandlingInvocationResponse(self):
        """Test AddMediaIntentHandlingInvocationResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
