# coding: utf-8

"""
    SiriKit Cloud Media

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.add_media_media_destination_resolution_result import AddMediaMediaDestinationResolutionResult

class TestAddMediaMediaDestinationResolutionResult(unittest.TestCase):
    """AddMediaMediaDestinationResolutionResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddMediaMediaDestinationResolutionResult:
        """Test AddMediaMediaDestinationResolutionResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddMediaMediaDestinationResolutionResult`
        """
        model = AddMediaMediaDestinationResolutionResult()
        if include_optional:
            return AddMediaMediaDestinationResolutionResult(
                var_class = 'AddMediaMediaDestinationResolutionResult',
                confirmation_required = openapi_client.models.confirmation_required.confirmationRequired(
                    media_destination_to_confirm = openapi_client.models.media_destination.MediaDestination(
                        media_destination_type = 'library', ), ),
                disambiguation = openapi_client.models.disambiguation.disambiguation(
                    media_destinations_to_disambiguate = [
                        openapi_client.models.media_destination.MediaDestination(
                            media_destination_type = 'library', )
                        ], ),
                success = openapi_client.models.success.success(
                    resolved_media_destination = openapi_client.models.media_destination.MediaDestination(
                        media_destination_type = 'library', ), ),
                unsupported = openapi_client.models.unsupported.unsupported(
                    reason = 'playlistNameNotFound', )
            )
        else:
            return AddMediaMediaDestinationResolutionResult(
        )
        """

    def testAddMediaMediaDestinationResolutionResult(self):
        """Test AddMediaMediaDestinationResolutionResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
