# coding: utf-8

"""
    SiriKit Cloud Media

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.extension_config_intent import ExtensionConfigIntent

class TestExtensionConfigIntent(unittest.TestCase):
    """ExtensionConfigIntent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExtensionConfigIntent:
        """Test ExtensionConfigIntent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExtensionConfigIntent`
        """
        model = ExtensionConfigIntent()
        if include_optional:
            return ExtensionConfigIntent(
                add_media = openapi_client.models.extension_config_intent_add_media.ExtensionConfig_intent_addMedia(
                    opt = [
                        'resolveMediaDestination'
                        ], ),
                hdr = {"x-service-affinity":"intent2"},
                play_media = openapi_client.models.extension_config_intent_play_media.ExtensionConfig_intent_playMedia(
                    opt = [
                        'resolvePlayShuffled'
                        ], ),
                update_media_affinity = openapi_client.models.extension_config_intent_update_media_affinity.ExtensionConfig_intent_updateMediaAffinity(
                    opt = [
                        'resolveAffinityType'
                        ], )
            )
        else:
            return ExtensionConfigIntent(
                play_media = openapi_client.models.extension_config_intent_play_media.ExtensionConfig_intent_playMedia(
                    opt = [
                        'resolvePlayShuffled'
                        ], ),
        )
        """

    def testExtensionConfigIntent(self):
        """Test ExtensionConfigIntent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
