# coding: utf-8

"""
    SiriKit Cloud Media

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.play_media_intent_handling_resolve_resume_playback_invocation_response import PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse

class TestPlayMediaIntentHandlingResolveResumePlaybackInvocationResponse(unittest.TestCase):
    """PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse:
        """Test PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse`
        """
        model = PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse()
        if include_optional:
            return PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse(
                method = 'PlayMediaIntentHandling.resolveResumePlayback',
                result = openapi_client.models.result.result(
                    resolution_result = openapi_client.models.boolean_resolution_result.BooleanResolutionResult(
                        class = 'BooleanResolutionResult', 
                        confirmation_required = openapi_client.models.confirmation_required.confirmationRequired(
                            value_to_confirm = True, ), 
                        success = openapi_client.models.success.success(
                            resolved_value = True, ), ), )
            )
        else:
            return PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse(
                method = 'PlayMediaIntentHandling.resolveResumePlayback',
                result = openapi_client.models.result.result(
                    resolution_result = openapi_client.models.boolean_resolution_result.BooleanResolutionResult(
                        class = 'BooleanResolutionResult', 
                        confirmation_required = openapi_client.models.confirmation_required.confirmationRequired(
                            value_to_confirm = True, ), 
                        success = openapi_client.models.success.success(
                            resolved_value = True, ), ), ),
        )
        """

    def testPlayMediaIntentHandlingResolveResumePlaybackInvocationResponse(self):
        """Test PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
