# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_price_tiers_response import AppPriceTiersResponse

class TestAppPriceTiersResponse(unittest.TestCase):
    """AppPriceTiersResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppPriceTiersResponse:
        """Test AppPriceTiersResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppPriceTiersResponse`
        """
        model = AppPriceTiersResponse()
        if include_optional:
            return AppPriceTiersResponse(
                data = [
                    openapi_client.models.app_price_tier.AppPriceTier(
                        id = '', 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), 
                        relationships = openapi_client.models.app_price_tier_relationships.AppPriceTier_relationships(
                            price_points = openapi_client.models.app_price_tier_relationships_price_points.AppPriceTier_relationships_pricePoints(
                                data = [
                                    openapi_client.models.app_price_tier_relationships_price_points_data_inner.AppPriceTier_relationships_pricePoints_data_inner(
                                        id = '', 
                                        type = 'appPricePoints', )
                                    ], 
                                meta = openapi_client.models.paging_information.PagingInformation(
                                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                        limit = 56, 
                                        total = 56, ), ), ), ), 
                        type = 'appPriceTiers', )
                    ],
                included = [
                    openapi_client.models.app_price_point.AppPricePoint(
                        attributes = openapi_client.models.app_price_point_attributes.AppPricePoint_attributes(
                            customer_price = '', 
                            proceeds = '', ), 
                        id = '', 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), 
                        relationships = openapi_client.models.app_price_point_relationships.AppPricePoint_relationships(
                            price_tier = openapi_client.models.app_price_relationships_price_tier.AppPrice_relationships_priceTier(
                                data = openapi_client.models.app_price_relationships_price_tier_data.AppPrice_relationships_priceTier_data(
                                    id = '', 
                                    type = 'appPriceTiers', ), ), 
                            territory = openapi_client.models.app_price_point_relationships_territory.AppPricePoint_relationships_territory(), ), 
                        type = 'appPricePoints', )
                    ],
                links = openapi_client.models.paged_document_links.PagedDocumentLinks(
                    first = '', 
                    next = '', 
                    self = '', ),
                meta = openapi_client.models.paging_information.PagingInformation(
                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                        limit = 56, 
                        total = 56, ), )
            )
        else:
            return AppPriceTiersResponse(
                data = [
                    openapi_client.models.app_price_tier.AppPriceTier(
                        id = '', 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), 
                        relationships = openapi_client.models.app_price_tier_relationships.AppPriceTier_relationships(
                            price_points = openapi_client.models.app_price_tier_relationships_price_points.AppPriceTier_relationships_pricePoints(
                                data = [
                                    openapi_client.models.app_price_tier_relationships_price_points_data_inner.AppPriceTier_relationships_pricePoints_data_inner(
                                        id = '', 
                                        type = 'appPricePoints', )
                                    ], 
                                meta = openapi_client.models.paging_information.PagingInformation(
                                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                        limit = 56, 
                                        total = 56, ), ), ), ), 
                        type = 'appPriceTiers', )
                    ],
                links = openapi_client.models.paged_document_links.PagedDocumentLinks(
                    first = '', 
                    next = '', 
                    self = '', ),
        )
        """

    def testAppPriceTiersResponse(self):
        """Test AppPriceTiersResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
