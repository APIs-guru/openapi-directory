# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.bundle_id_capability_update_request import BundleIdCapabilityUpdateRequest

class TestBundleIdCapabilityUpdateRequest(unittest.TestCase):
    """BundleIdCapabilityUpdateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BundleIdCapabilityUpdateRequest:
        """Test BundleIdCapabilityUpdateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BundleIdCapabilityUpdateRequest`
        """
        model = BundleIdCapabilityUpdateRequest()
        if include_optional:
            return BundleIdCapabilityUpdateRequest(
                data = openapi_client.models.bundle_id_capability_update_request_data.BundleIdCapabilityUpdateRequest_data(
                    attributes = openapi_client.models.bundle_id_capability_attributes.BundleIdCapability_attributes(
                        capability_type = 'ICLOUD', 
                        settings = [
                            openapi_client.models.capability_setting.CapabilitySetting(
                                allowed_instances = 'ENTRY', 
                                description = '', 
                                enabled_by_default = True, 
                                key = 'ICLOUD_VERSION', 
                                min_instances = 56, 
                                name = '', 
                                options = [
                                    openapi_client.models.capability_option.CapabilityOption(
                                        description = '', 
                                        enabled = True, 
                                        enabled_by_default = True, 
                                        key = 'XCODE_5', 
                                        name = '', 
                                        supports_wildcard = True, )
                                    ], 
                                visible = True, )
                            ], ), 
                    id = '', 
                    type = 'bundleIdCapabilities', )
            )
        else:
            return BundleIdCapabilityUpdateRequest(
                data = openapi_client.models.bundle_id_capability_update_request_data.BundleIdCapabilityUpdateRequest_data(
                    attributes = openapi_client.models.bundle_id_capability_attributes.BundleIdCapability_attributes(
                        capability_type = 'ICLOUD', 
                        settings = [
                            openapi_client.models.capability_setting.CapabilitySetting(
                                allowed_instances = 'ENTRY', 
                                description = '', 
                                enabled_by_default = True, 
                                key = 'ICLOUD_VERSION', 
                                min_instances = 56, 
                                name = '', 
                                options = [
                                    openapi_client.models.capability_option.CapabilityOption(
                                        description = '', 
                                        enabled = True, 
                                        enabled_by_default = True, 
                                        key = 'XCODE_5', 
                                        name = '', 
                                        supports_wildcard = True, )
                                    ], 
                                visible = True, )
                            ], ), 
                    id = '', 
                    type = 'bundleIdCapabilities', ),
        )
        """

    def testBundleIdCapabilityUpdateRequest(self):
        """Test BundleIdCapabilityUpdateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
