# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_store_version_localization_relationships import AppStoreVersionLocalizationRelationships

class TestAppStoreVersionLocalizationRelationships(unittest.TestCase):
    """AppStoreVersionLocalizationRelationships unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppStoreVersionLocalizationRelationships:
        """Test AppStoreVersionLocalizationRelationships
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppStoreVersionLocalizationRelationships`
        """
        model = AppStoreVersionLocalizationRelationships()
        if include_optional:
            return AppStoreVersionLocalizationRelationships(
                app_preview_sets = openapi_client.models.app_store_version_localization_relationships_app_preview_sets.AppStoreVersionLocalization_relationships_appPreviewSets(
                    data = [
                        openapi_client.models.app_preview_relationships_app_preview_set_data.AppPreview_relationships_appPreviewSet_data(
                            id = '', 
                            type = 'appPreviewSets', )
                        ], 
                    links = openapi_client.models.app_relationships_app_infos_links.App_relationships_appInfos_links(
                        related = '', 
                        self = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            limit = 56, 
                            total = 56, ), ), ),
                app_screenshot_sets = openapi_client.models.app_store_version_localization_relationships_app_screenshot_sets.AppStoreVersionLocalization_relationships_appScreenshotSets(
                    data = [
                        openapi_client.models.app_screenshot_relationships_app_screenshot_set_data.AppScreenshot_relationships_appScreenshotSet_data(
                            id = '', 
                            type = 'appScreenshotSets', )
                        ], 
                    links = openapi_client.models.app_relationships_app_infos_links.App_relationships_appInfos_links(
                        related = '', 
                        self = '', ), 
                    meta = openapi_client.models.paging_information.PagingInformation(
                        paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                            limit = 56, 
                            total = 56, ), ), ),
                app_store_version = openapi_client.models.app_store_review_detail_relationships_app_store_version.AppStoreReviewDetail_relationships_appStoreVersion(
                    data = openapi_client.models.app_relationships_app_store_versions_data_inner.App_relationships_appStoreVersions_data_inner(
                        id = '', 
                        type = 'appStoreVersions', ), 
                    links = openapi_client.models.app_relationships_app_infos_links.App_relationships_appInfos_links(
                        related = '', 
                        self = '', ), )
            )
        else:
            return AppStoreVersionLocalizationRelationships(
        )
        """

    def testAppStoreVersionLocalizationRelationships(self):
        """Test AppStoreVersionLocalizationRelationships"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
