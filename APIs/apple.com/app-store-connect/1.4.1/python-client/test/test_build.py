# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.build import Build

class TestBuild(unittest.TestCase):
    """Build unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Build:
        """Test Build
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Build`
        """
        model = Build()
        if include_optional:
            return Build(
                attributes = openapi_client.models.build_attributes.Build_attributes(
                    expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    expired = True, 
                    icon_asset_token = openapi_client.models.image_asset.ImageAsset(
                        height = 56, 
                        template_url = '', 
                        width = 56, ), 
                    min_os_version = '', 
                    processing_state = 'PROCESSING', 
                    uploaded_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    uses_non_exempt_encryption = True, 
                    version = '', ),
                id = '',
                links = openapi_client.models.resource_links.ResourceLinks(
                    self = '', ),
                relationships = openapi_client.models.build_relationships.Build_relationships(
                    app = openapi_client.models.app_encryption_declaration_relationships_app.AppEncryptionDeclaration_relationships_app(
                        data = openapi_client.models.app_encryption_declaration_relationships_app_data.AppEncryptionDeclaration_relationships_app_data(
                            id = '', 
                            type = 'apps', ), 
                        links = openapi_client.models.app_relationships_app_infos_links.App_relationships_appInfos_links(
                            related = '', 
                            self = '', ), ), 
                    app_encryption_declaration = openapi_client.models.build_relationships_app_encryption_declaration.Build_relationships_appEncryptionDeclaration(), 
                    app_store_version = openapi_client.models.app_store_review_detail_relationships_app_store_version.AppStoreReviewDetail_relationships_appStoreVersion(), 
                    beta_app_review_submission = openapi_client.models.build_relationships_beta_app_review_submission.Build_relationships_betaAppReviewSubmission(), 
                    beta_build_localizations = openapi_client.models.build_relationships_beta_build_localizations.Build_relationships_betaBuildLocalizations(
                        meta = openapi_client.models.paging_information.PagingInformation(
                            paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                limit = 56, 
                                total = 56, ), ), ), 
                    build_beta_detail = openapi_client.models.build_relationships_build_beta_detail.Build_relationships_buildBetaDetail(), 
                    icons = openapi_client.models.build_relationships_icons.Build_relationships_icons(), 
                    individual_testers = openapi_client.models.beta_group_relationships_beta_testers.BetaGroup_relationships_betaTesters(), 
                    pre_release_version = openapi_client.models.build_relationships_pre_release_version.Build_relationships_preReleaseVersion(), ),
                type = 'builds'
            )
        else:
            return Build(
                id = '',
                links = openapi_client.models.resource_links.ResourceLinks(
                    self = '', ),
                type = 'builds',
        )
        """

    def testBuild(self):
        """Test Build"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
