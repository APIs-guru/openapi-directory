# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.game_center_enabled_versions_response import GameCenterEnabledVersionsResponse

class TestGameCenterEnabledVersionsResponse(unittest.TestCase):
    """GameCenterEnabledVersionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GameCenterEnabledVersionsResponse:
        """Test GameCenterEnabledVersionsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GameCenterEnabledVersionsResponse`
        """
        model = GameCenterEnabledVersionsResponse()
        if include_optional:
            return GameCenterEnabledVersionsResponse(
                data = [
                    openapi_client.models.game_center_enabled_version.GameCenterEnabledVersion(
                        attributes = openapi_client.models.game_center_enabled_version_attributes.GameCenterEnabledVersion_attributes(
                            icon_asset = openapi_client.models.image_asset.ImageAsset(
                                height = 56, 
                                template_url = '', 
                                width = 56, ), 
                            platform = 'IOS', 
                            version_string = '', ), 
                        id = '', 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), 
                        relationships = openapi_client.models.game_center_enabled_version_relationships.GameCenterEnabledVersion_relationships(
                            app = openapi_client.models.app_encryption_declaration_relationships_app.AppEncryptionDeclaration_relationships_app(
                                data = openapi_client.models.app_encryption_declaration_relationships_app_data.AppEncryptionDeclaration_relationships_app_data(
                                    id = '', 
                                    type = 'apps', ), ), 
                            compatible_versions = openapi_client.models.app_relationships_game_center_enabled_versions.App_relationships_gameCenterEnabledVersions(
                                meta = openapi_client.models.paging_information.PagingInformation(
                                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                        limit = 56, 
                                        total = 56, ), ), ), ), 
                        type = 'gameCenterEnabledVersions', )
                    ],
                included = [
                    openapi_client.models.game_center_enabled_version.GameCenterEnabledVersion(
                        attributes = openapi_client.models.game_center_enabled_version_attributes.GameCenterEnabledVersion_attributes(
                            icon_asset = openapi_client.models.image_asset.ImageAsset(
                                height = 56, 
                                template_url = '', 
                                width = 56, ), 
                            platform = 'IOS', 
                            version_string = '', ), 
                        id = '', 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), 
                        relationships = openapi_client.models.game_center_enabled_version_relationships.GameCenterEnabledVersion_relationships(
                            app = openapi_client.models.app_encryption_declaration_relationships_app.AppEncryptionDeclaration_relationships_app(
                                data = openapi_client.models.app_encryption_declaration_relationships_app_data.AppEncryptionDeclaration_relationships_app_data(
                                    id = '', 
                                    type = 'apps', ), ), 
                            compatible_versions = openapi_client.models.app_relationships_game_center_enabled_versions.App_relationships_gameCenterEnabledVersions(
                                meta = openapi_client.models.paging_information.PagingInformation(
                                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                        limit = 56, 
                                        total = 56, ), ), ), ), 
                        type = 'gameCenterEnabledVersions', )
                    ],
                links = openapi_client.models.paged_document_links.PagedDocumentLinks(
                    first = '', 
                    next = '', 
                    self = '', ),
                meta = openapi_client.models.paging_information.PagingInformation(
                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                        limit = 56, 
                        total = 56, ), )
            )
        else:
            return GameCenterEnabledVersionsResponse(
                data = [
                    openapi_client.models.game_center_enabled_version.GameCenterEnabledVersion(
                        attributes = openapi_client.models.game_center_enabled_version_attributes.GameCenterEnabledVersion_attributes(
                            icon_asset = openapi_client.models.image_asset.ImageAsset(
                                height = 56, 
                                template_url = '', 
                                width = 56, ), 
                            platform = 'IOS', 
                            version_string = '', ), 
                        id = '', 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), 
                        relationships = openapi_client.models.game_center_enabled_version_relationships.GameCenterEnabledVersion_relationships(
                            app = openapi_client.models.app_encryption_declaration_relationships_app.AppEncryptionDeclaration_relationships_app(
                                data = openapi_client.models.app_encryption_declaration_relationships_app_data.AppEncryptionDeclaration_relationships_app_data(
                                    id = '', 
                                    type = 'apps', ), ), 
                            compatible_versions = openapi_client.models.app_relationships_game_center_enabled_versions.App_relationships_gameCenterEnabledVersions(
                                meta = openapi_client.models.paging_information.PagingInformation(
                                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                                        limit = 56, 
                                        total = 56, ), ), ), ), 
                        type = 'gameCenterEnabledVersions', )
                    ],
                links = openapi_client.models.paged_document_links.PagedDocumentLinks(
                    first = '', 
                    next = '', 
                    self = '', ),
        )
        """

    def testGameCenterEnabledVersionsResponse(self):
        """Test GameCenterEnabledVersionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
