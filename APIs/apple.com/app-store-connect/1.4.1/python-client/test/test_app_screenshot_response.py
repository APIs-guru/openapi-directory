# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_screenshot_response import AppScreenshotResponse

class TestAppScreenshotResponse(unittest.TestCase):
    """AppScreenshotResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppScreenshotResponse:
        """Test AppScreenshotResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppScreenshotResponse`
        """
        model = AppScreenshotResponse()
        if include_optional:
            return AppScreenshotResponse(
                data = openapi_client.models.app_screenshot.AppScreenshot(
                    attributes = openapi_client.models.app_screenshot_attributes.AppScreenshot_attributes(
                        asset_delivery_state = openapi_client.models.app_media_asset_state.AppMediaAssetState(
                            errors = [
                                openapi_client.models.app_media_state_error.AppMediaStateError(
                                    code = '', 
                                    description = '', )
                                ], 
                            state = 'AWAITING_UPLOAD', 
                            warnings = [
                                openapi_client.models.app_media_state_error.AppMediaStateError(
                                    code = '', 
                                    description = '', )
                                ], ), 
                        asset_token = '', 
                        asset_type = '', 
                        file_name = '', 
                        file_size = 56, 
                        image_asset = openapi_client.models.image_asset.ImageAsset(
                            height = 56, 
                            template_url = '', 
                            width = 56, ), 
                        source_file_checksum = '', 
                        upload_operations = [
                            openapi_client.models.upload_operation.UploadOperation(
                                length = 56, 
                                method = '', 
                                offset = 56, 
                                request_headers = [
                                    openapi_client.models.upload_operation_header.UploadOperationHeader(
                                        name = '', 
                                        value = '', )
                                    ], 
                                url = '', )
                            ], ), 
                    id = '', 
                    links = openapi_client.models.resource_links.ResourceLinks(
                        self = '', ), 
                    relationships = openapi_client.models.app_screenshot_relationships.AppScreenshot_relationships(
                        app_screenshot_set = openapi_client.models.app_screenshot_relationships_app_screenshot_set.AppScreenshot_relationships_appScreenshotSet(
                            data = openapi_client.models.app_screenshot_relationships_app_screenshot_set_data.AppScreenshot_relationships_appScreenshotSet_data(
                                id = '', 
                                type = 'appScreenshotSets', ), ), ), 
                    type = 'appScreenshots', ),
                links = openapi_client.models.document_links.DocumentLinks(
                    self = '', )
            )
        else:
            return AppScreenshotResponse(
                data = openapi_client.models.app_screenshot.AppScreenshot(
                    attributes = openapi_client.models.app_screenshot_attributes.AppScreenshot_attributes(
                        asset_delivery_state = openapi_client.models.app_media_asset_state.AppMediaAssetState(
                            errors = [
                                openapi_client.models.app_media_state_error.AppMediaStateError(
                                    code = '', 
                                    description = '', )
                                ], 
                            state = 'AWAITING_UPLOAD', 
                            warnings = [
                                openapi_client.models.app_media_state_error.AppMediaStateError(
                                    code = '', 
                                    description = '', )
                                ], ), 
                        asset_token = '', 
                        asset_type = '', 
                        file_name = '', 
                        file_size = 56, 
                        image_asset = openapi_client.models.image_asset.ImageAsset(
                            height = 56, 
                            template_url = '', 
                            width = 56, ), 
                        source_file_checksum = '', 
                        upload_operations = [
                            openapi_client.models.upload_operation.UploadOperation(
                                length = 56, 
                                method = '', 
                                offset = 56, 
                                request_headers = [
                                    openapi_client.models.upload_operation_header.UploadOperationHeader(
                                        name = '', 
                                        value = '', )
                                    ], 
                                url = '', )
                            ], ), 
                    id = '', 
                    links = openapi_client.models.resource_links.ResourceLinks(
                        self = '', ), 
                    relationships = openapi_client.models.app_screenshot_relationships.AppScreenshot_relationships(
                        app_screenshot_set = openapi_client.models.app_screenshot_relationships_app_screenshot_set.AppScreenshot_relationships_appScreenshotSet(
                            data = openapi_client.models.app_screenshot_relationships_app_screenshot_set_data.AppScreenshot_relationships_appScreenshotSet_data(
                                id = '', 
                                type = 'appScreenshotSets', ), ), ), 
                    type = 'appScreenshots', ),
                links = openapi_client.models.document_links.DocumentLinks(
                    self = '', ),
        )
        """

    def testAppScreenshotResponse(self):
        """Test AppScreenshotResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
