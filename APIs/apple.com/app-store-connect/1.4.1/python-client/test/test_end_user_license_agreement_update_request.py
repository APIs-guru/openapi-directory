# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.end_user_license_agreement_update_request import EndUserLicenseAgreementUpdateRequest

class TestEndUserLicenseAgreementUpdateRequest(unittest.TestCase):
    """EndUserLicenseAgreementUpdateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EndUserLicenseAgreementUpdateRequest:
        """Test EndUserLicenseAgreementUpdateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EndUserLicenseAgreementUpdateRequest`
        """
        model = EndUserLicenseAgreementUpdateRequest()
        if include_optional:
            return EndUserLicenseAgreementUpdateRequest(
                data = openapi_client.models.end_user_license_agreement_update_request_data.EndUserLicenseAgreementUpdateRequest_data(
                    attributes = openapi_client.models.beta_license_agreement_attributes.BetaLicenseAgreement_attributes(
                        agreement_text = '', ), 
                    id = '', 
                    relationships = openapi_client.models.end_user_license_agreement_update_request_data_relationships.EndUserLicenseAgreementUpdateRequest_data_relationships(
                        territories = openapi_client.models.app_update_request_data_relationships_available_territories.AppUpdateRequest_data_relationships_availableTerritories(
                            data = [
                                openapi_client.models.app_relationships_available_territories_data_inner.App_relationships_availableTerritories_data_inner(
                                    id = '', 
                                    type = 'territories', )
                                ], ), ), 
                    type = 'endUserLicenseAgreements', )
            )
        else:
            return EndUserLicenseAgreementUpdateRequest(
                data = openapi_client.models.end_user_license_agreement_update_request_data.EndUserLicenseAgreementUpdateRequest_data(
                    attributes = openapi_client.models.beta_license_agreement_attributes.BetaLicenseAgreement_attributes(
                        agreement_text = '', ), 
                    id = '', 
                    relationships = openapi_client.models.end_user_license_agreement_update_request_data_relationships.EndUserLicenseAgreementUpdateRequest_data_relationships(
                        territories = openapi_client.models.app_update_request_data_relationships_available_territories.AppUpdateRequest_data_relationships_availableTerritories(
                            data = [
                                openapi_client.models.app_relationships_available_territories_data_inner.App_relationships_availableTerritories_data_inner(
                                    id = '', 
                                    type = 'territories', )
                                ], ), ), 
                    type = 'endUserLicenseAgreements', ),
        )
        """

    def testEndUserLicenseAgreementUpdateRequest(self):
        """Test EndUserLicenseAgreementUpdateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
