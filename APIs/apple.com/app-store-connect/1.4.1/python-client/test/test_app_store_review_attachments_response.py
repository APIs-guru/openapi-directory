# coding: utf-8

"""
    App Store Connect API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.4.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_store_review_attachments_response import AppStoreReviewAttachmentsResponse

class TestAppStoreReviewAttachmentsResponse(unittest.TestCase):
    """AppStoreReviewAttachmentsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppStoreReviewAttachmentsResponse:
        """Test AppStoreReviewAttachmentsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppStoreReviewAttachmentsResponse`
        """
        model = AppStoreReviewAttachmentsResponse()
        if include_optional:
            return AppStoreReviewAttachmentsResponse(
                data = [
                    openapi_client.models.app_store_review_attachment.AppStoreReviewAttachment(
                        attributes = openapi_client.models.app_store_review_attachment_attributes.AppStoreReviewAttachment_attributes(
                            asset_delivery_state = openapi_client.models.app_media_asset_state.AppMediaAssetState(
                                errors = [
                                    openapi_client.models.app_media_state_error.AppMediaStateError(
                                        code = '', 
                                        description = '', )
                                    ], 
                                state = 'AWAITING_UPLOAD', 
                                warnings = [
                                    openapi_client.models.app_media_state_error.AppMediaStateError(
                                        code = '', 
                                        description = '', )
                                    ], ), 
                            file_name = '', 
                            file_size = 56, 
                            source_file_checksum = '', 
                            upload_operations = [
                                openapi_client.models.upload_operation.UploadOperation(
                                    length = 56, 
                                    method = '', 
                                    offset = 56, 
                                    request_headers = [
                                        openapi_client.models.upload_operation_header.UploadOperationHeader(
                                            name = '', 
                                            value = '', )
                                        ], 
                                    url = '', )
                                ], ), 
                        id = '', 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), 
                        relationships = openapi_client.models.app_store_review_attachment_relationships.AppStoreReviewAttachment_relationships(
                            app_store_review_detail = openapi_client.models.app_store_review_attachment_relationships_app_store_review_detail.AppStoreReviewAttachment_relationships_appStoreReviewDetail(
                                data = openapi_client.models.app_store_review_attachment_relationships_app_store_review_detail_data.AppStoreReviewAttachment_relationships_appStoreReviewDetail_data(
                                    id = '', 
                                    type = 'appStoreReviewDetails', ), ), ), 
                        type = 'appStoreReviewAttachments', )
                    ],
                links = openapi_client.models.paged_document_links.PagedDocumentLinks(
                    first = '', 
                    next = '', 
                    self = '', ),
                meta = openapi_client.models.paging_information.PagingInformation(
                    paging = openapi_client.models.paging_information_paging.PagingInformation_paging(
                        limit = 56, 
                        total = 56, ), )
            )
        else:
            return AppStoreReviewAttachmentsResponse(
                data = [
                    openapi_client.models.app_store_review_attachment.AppStoreReviewAttachment(
                        attributes = openapi_client.models.app_store_review_attachment_attributes.AppStoreReviewAttachment_attributes(
                            asset_delivery_state = openapi_client.models.app_media_asset_state.AppMediaAssetState(
                                errors = [
                                    openapi_client.models.app_media_state_error.AppMediaStateError(
                                        code = '', 
                                        description = '', )
                                    ], 
                                state = 'AWAITING_UPLOAD', 
                                warnings = [
                                    openapi_client.models.app_media_state_error.AppMediaStateError(
                                        code = '', 
                                        description = '', )
                                    ], ), 
                            file_name = '', 
                            file_size = 56, 
                            source_file_checksum = '', 
                            upload_operations = [
                                openapi_client.models.upload_operation.UploadOperation(
                                    length = 56, 
                                    method = '', 
                                    offset = 56, 
                                    request_headers = [
                                        openapi_client.models.upload_operation_header.UploadOperationHeader(
                                            name = '', 
                                            value = '', )
                                        ], 
                                    url = '', )
                                ], ), 
                        id = '', 
                        links = openapi_client.models.resource_links.ResourceLinks(
                            self = '', ), 
                        relationships = openapi_client.models.app_store_review_attachment_relationships.AppStoreReviewAttachment_relationships(
                            app_store_review_detail = openapi_client.models.app_store_review_attachment_relationships_app_store_review_detail.AppStoreReviewAttachment_relationships_appStoreReviewDetail(
                                data = openapi_client.models.app_store_review_attachment_relationships_app_store_review_detail_data.AppStoreReviewAttachment_relationships_appStoreReviewDetail_data(
                                    id = '', 
                                    type = 'appStoreReviewDetails', ), ), ), 
                        type = 'appStoreReviewAttachments', )
                    ],
                links = openapi_client.models.paged_document_links.PagedDocumentLinks(
                    first = '', 
                    next = '', 
                    self = '', ),
        )
        """

    def testAppStoreReviewAttachmentsResponse(self):
        """Test AppStoreReviewAttachmentsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
