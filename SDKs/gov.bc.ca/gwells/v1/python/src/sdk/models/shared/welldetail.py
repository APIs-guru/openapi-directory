from dataclasses import dataclass, field
from datetime import datetime
from marshmallow import fields
import dateutil.parser
from typing import List,Optional
from dataclasses_json import dataclass_json
from . import casing
from . import organizationnamelist
from . import decommissiondescription
from . import linerperforation
from . import lithologydescription
from . import personbasic
from . import screen


@dataclass_json
@dataclass
class WellDetail:
    alteration_end_date: Optional[datetime] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'alteration_end_date', 'encoder': datetime.isoformat, 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    alternative_specs_submitted: Optional[bool] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'alternative_specs_submitted' }})
    analytic_solution_type: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'analytic_solution_type' }})
    aquifer: Optional[int] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'aquifer' }})
    aquifer_vulnerability_index: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'aquifer_vulnerability_index' }})
    artesian_flow: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'artesian_flow' }})
    artesian_pressure: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'artesian_pressure' }})
    backfill_depth: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'backfill_depth' }})
    backfill_material: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'backfill_material' }})
    backfill_type: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'backfill_type' }})
    bcgs_id: Optional[int] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'bcgs_id' }})
    bedrock_depth: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'bedrock_depth' }})
    boundary_effect: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'boundary_effect' }})
    casing_set: List[casing.Casing] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'casing_set' }})
    city: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'city' }})
    comments: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'comments' }})
    company_of_person_responsible: organizationnamelist.OrganizationNameList = field(default=None, metadata={'dataclasses_json': { 'field_name': 'company_of_person_responsible' }})
    construction_end_date: Optional[datetime] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'construction_end_date', 'encoder': datetime.isoformat, 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    construction_start_date: Optional[datetime] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'construction_start_date', 'encoder': datetime.isoformat, 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    coordinate_acquisition_code: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'coordinate_acquisition_code' }})
    decommission_description_set: List[decommissiondescription.DecommissionDescription] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'decommission_description_set' }})
    decommission_details: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'decommission_details' }})
    decommission_end_date: Optional[datetime] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'decommission_end_date', 'encoder': datetime.isoformat, 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    decommission_method: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'decommission_method' }})
    decommission_reason: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'decommission_reason' }})
    decommission_start_date: Optional[datetime] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'decommission_start_date', 'encoder': datetime.isoformat, 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    development_hours: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'development_hours' }})
    development_method: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'development_method' }})
    development_notes: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'development_notes' }})
    diameter: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'diameter' }})
    drawdown: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'drawdown' }})
    drilling_company: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'drilling_company' }})
    drilling_method: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'drilling_method' }})
    ems: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'ems' }})
    filter_pack_from: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'filter_pack_from' }})
    filter_pack_material: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'filter_pack_material' }})
    filter_pack_material_size: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'filter_pack_material_size' }})
    filter_pack_thickness: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'filter_pack_thickness' }})
    filter_pack_to: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'filter_pack_to' }})
    final_casing_stick_up: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'final_casing_stick_up' }})
    finished_well_depth: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'finished_well_depth' }})
    ground_elevation: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'ground_elevation' }})
    ground_elevation_method: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'ground_elevation_method' }})
    hydraulic_conductivity: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'hydraulic_conductivity' }})
    hydro_fracturing_performed: Optional[bool] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'hydro_fracturing_performed' }})
    hydro_fracturing_yield_increase: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'hydro_fracturing_yield_increase' }})
    id_plate_attached_by: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'id_plate_attached_by' }})
    identification_plate_number: Optional[int] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'identification_plate_number' }})
    intended_water_use: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'intended_water_use' }})
    land_district: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'land_district' }})
    latitude: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'latitude' }})
    legal_block: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'legal_block' }})
    legal_district_lot: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'legal_district_lot' }})
    legal_lot: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'legal_lot' }})
    legal_pid: Optional[int] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'legal_pid' }})
    legal_plan: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'legal_plan' }})
    legal_range: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'legal_range' }})
    legal_section: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'legal_section' }})
    legal_township: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'legal_township' }})
    licenced_status: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'licenced_status' }})
    liner_diameter: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'liner_diameter' }})
    liner_from: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'liner_from' }})
    liner_material: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'liner_material' }})
    liner_thickness: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'liner_thickness' }})
    liner_to: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'liner_to' }})
    linerperforation_set: List[linerperforation.LinerPerforation] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'linerperforation_set' }})
    lithologydescription_set: List[lithologydescription.LithologyDescription] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'lithologydescription_set' }})
    longitude: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'longitude' }})
    observation_well_number: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'observation_well_number' }})
    observation_well_status: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'observation_well_status' }})
    other_drilling_method: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'other_drilling_method' }})
    other_screen_bottom: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'other_screen_bottom' }})
    other_screen_material: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'other_screen_material' }})
    owner_full_name: str = field(default=None, metadata={'dataclasses_json': { 'field_name': 'owner_full_name' }})
    person_responsible: personbasic.PersonBasic = field(default=None, metadata={'dataclasses_json': { 'field_name': 'person_responsible' }})
    recommended_pump_depth: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'recommended_pump_depth' }})
    recommended_pump_rate: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'recommended_pump_rate' }})
    screen_bottom: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'screen_bottom' }})
    screen_information: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'screen_information' }})
    screen_intake_method: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'screen_intake_method' }})
    screen_material: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'screen_material' }})
    screen_opening: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'screen_opening' }})
    screen_set: List[screen.Screen] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'screen_set' }})
    screen_type: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'screen_type' }})
    sealant_material: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'sealant_material' }})
    specific_storage: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'specific_storage' }})
    specific_yield: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'specific_yield' }})
    static_level_before_test: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'static_level_before_test' }})
    static_water_level: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'static_water_level' }})
    storativity: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'storativity' }})
    street_address: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'street_address' }})
    surface_seal_depth: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'surface_seal_depth' }})
    surface_seal_length: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'surface_seal_length' }})
    surface_seal_material: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'surface_seal_material' }})
    surface_seal_method: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'surface_seal_method' }})
    surface_seal_thickness: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'surface_seal_thickness' }})
    testing_duration: Optional[int] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'testing_duration' }})
    testing_method: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'testing_method' }})
    total_depth_drilled: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'total_depth_drilled' }})
    transmissivity: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'transmissivity' }})
    utm_easting: Optional[int] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'utm_easting' }})
    utm_northing: Optional[int] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'utm_northing' }})
    utm_zone_code: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'utm_zone_code' }})
    water_quality_characteristics: Optional[List[str]] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'water_quality_characteristics' }})
    water_quality_colour: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'water_quality_colour' }})
    water_quality_odour: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'water_quality_odour' }})
    water_supply_system_name: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'water_supply_system_name' }})
    water_supply_system_well_name: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'water_supply_system_well_name' }})
    well: int = field(default=None, metadata={'dataclasses_json': { 'field_name': 'well' }})
    well_cap_type: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'well_cap_type' }})
    well_class: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'well_class' }})
    well_disinfected: Optional[bool] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'well_disinfected' }})
    well_guid: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'well_guid' }})
    well_identification_plate_attached: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'well_identification_plate_attached' }})
    well_location_description: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'well_location_description' }})
    well_orientation: Optional[bool] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'well_orientation' }})
    well_status: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'well_status' }})
    well_subclass: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'well_subclass' }})
    well_tag_number: Optional[int] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'well_tag_number' }})
    well_yield: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'well_yield' }})
    well_yield_unit: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'well_yield_unit' }})
    yield_estimation_duration: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'yield_estimation_duration' }})
    yield_estimation_method: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'yield_estimation_method' }})
    yield_estimation_rate: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'yield_estimation_rate' }})
    
