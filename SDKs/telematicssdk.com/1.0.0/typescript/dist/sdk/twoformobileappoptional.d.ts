import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
export declare class TwoForMobileAppOptional {
    _defaultClient: AxiosInstance;
    _securityClient: AxiosInstance;
    _serverURL: string;
    _language: string;
    _sdkVersion: string;
    _genVersion: string;
    constructor(defaultClient: AxiosInstance, securityClient: AxiosInstance, serverURL: string, language: string, sdkVersion: string, genVersion: string);
    /**
     * tripsTripDetails - Trips - trip details
     *
     * Trips - trip details
    **/
    tripsTripDetails(req: operations.TripsTripDetailsRequest, config?: AxiosRequestConfig): Promise<operations.TripsTripDetailsResponse>;
    /**
     * userSafeScoringAccumulatedValueV1ScoringsIndividual - User safe scoring - Accumulated value - v1/Scorings/individual
     *
     * Safe driving score API. This API is a part of Telematics API that we provide to our clients.
     *
     * Rating description presents the universal approach, developed by our company on the basis of many years of experience; most of the input variables presented in this document could be adopted depending on the needs of the company and the focus on the specific characteristics of clients' driving style.
     * Since 2019 we have moved to the 3rd Generation of the scoring model which allows distinguishing a context of events and add penalty points in accordance with a level of risk generated by an event
     *
     * [More details](https://docs.telematicssdk.com)
    **/
    userSafeScoringAccumulatedValueV1ScoringsIndividual(req: operations.UserSafeScoringAccumulatedValueV1ScoringsIndividualRequest, config?: AxiosRequestConfig): Promise<operations.UserSafeScoringAccumulatedValueV1ScoringsIndividualResponse>;
    /**
     * userSafeScoringDailyValueV1ScoringsIndividualDaily - User safe scoring - daily value - /v1/Scorings/individual/daily
     *
     * User safe scoring - daily value - /v1/Scorings/individual/daily
    **/
    userSafeScoringDailyValueV1ScoringsIndividualDaily(req: operations.UserSafeScoringDailyValueV1ScoringsIndividualDailyRequest, config?: AxiosRequestConfig): Promise<operations.UserSafeScoringDailyValueV1ScoringsIndividualDailyResponse>;
    /**
     * userStatisticeDailyValueV1StatisticsIndividualDaily - User statistice - Daily value - v1/Statistics/individual/daily
     *
     * User statistice - Daily value - v1/Statistics/individual/daily
    **/
    userStatisticeDailyValueV1StatisticsIndividualDaily(req: operations.UserStatisticeDailyValueV1StatisticsIndividualDailyRequest, config?: AxiosRequestConfig): Promise<operations.UserStatisticeDailyValueV1StatisticsIndividualDailyResponse>;
    /**
     * userStatisticsAccumulatedValueV1StatisticsIndividual - User statistics - Accumulated value - /v1/Statistics/individual
     *
     * User statistics - Accumulated value - /v1/Statistics/individual
    **/
    userStatisticsAccumulatedValueV1StatisticsIndividual(req: operations.UserStatisticsAccumulatedValueV1StatisticsIndividualRequest, config?: AxiosRequestConfig): Promise<operations.UserStatisticsAccumulatedValueV1StatisticsIndividualResponse>;
}
