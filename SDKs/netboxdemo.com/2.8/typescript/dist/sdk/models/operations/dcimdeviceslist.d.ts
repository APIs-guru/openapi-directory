import { SpeakeasyBase } from "../../../internal/utils";
import * as shared from "../shared";
export declare class DcimDevicesListQueryParams extends SpeakeasyBase {
    assetTag?: string;
    assetTagIc?: string;
    assetTagIe?: string;
    assetTagIew?: string;
    assetTagIsw?: string;
    assetTagN?: string;
    assetTagNic?: string;
    assetTagNie?: string;
    assetTagNiew?: string;
    assetTagNisw?: string;
    clusterId?: string;
    clusterIdN?: string;
    consolePorts?: string;
    consoleServerPorts?: string;
    created?: string;
    createdGte?: string;
    createdLte?: string;
    deviceBays?: string;
    deviceTypeId?: string;
    deviceTypeIdN?: string;
    face?: string;
    faceN?: string;
    hasPrimaryIp?: string;
    id?: string;
    idGt?: string;
    idGte?: string;
    idLt?: string;
    idLte?: string;
    idN?: string;
    interfaces?: string;
    isFullDepth?: string;
    lastUpdated?: string;
    lastUpdatedGte?: string;
    lastUpdatedLte?: string;
    limit?: number;
    localContextData?: string;
    macAddress?: string;
    macAddressIc?: string;
    macAddressIe?: string;
    macAddressIew?: string;
    macAddressIsw?: string;
    macAddressN?: string;
    macAddressNic?: string;
    macAddressNie?: string;
    macAddressNiew?: string;
    macAddressNisw?: string;
    manufacturer?: string;
    manufacturerN?: string;
    manufacturerId?: string;
    manufacturerIdN?: string;
    model?: string;
    modelN?: string;
    name?: string;
    nameIc?: string;
    nameIe?: string;
    nameIew?: string;
    nameIsw?: string;
    nameN?: string;
    nameNic?: string;
    nameNie?: string;
    nameNiew?: string;
    nameNisw?: string;
    offset?: number;
    passThroughPorts?: string;
    platform?: string;
    platformN?: string;
    platformId?: string;
    platformIdN?: string;
    position?: string;
    positionGt?: string;
    positionGte?: string;
    positionLt?: string;
    positionLte?: string;
    positionN?: string;
    powerOutlets?: string;
    powerPorts?: string;
    q?: string;
    rackGroupId?: string;
    rackGroupIdN?: string;
    rackId?: string;
    rackIdN?: string;
    region?: string;
    regionN?: string;
    regionId?: string;
    regionIdN?: string;
    role?: string;
    roleN?: string;
    roleId?: string;
    roleIdN?: string;
    serial?: string;
    site?: string;
    siteN?: string;
    siteId?: string;
    siteIdN?: string;
    status?: string;
    statusN?: string;
    tag?: string;
    tagN?: string;
    tenant?: string;
    tenantN?: string;
    tenantGroup?: string;
    tenantGroupN?: string;
    tenantGroupId?: string;
    tenantGroupIdN?: string;
    tenantId?: string;
    tenantIdN?: string;
    vcPosition?: string;
    vcPositionGt?: string;
    vcPositionGte?: string;
    vcPositionLt?: string;
    vcPositionLte?: string;
    vcPositionN?: string;
    vcPriority?: string;
    vcPriorityGt?: string;
    vcPriorityGte?: string;
    vcPriorityLt?: string;
    vcPriorityLte?: string;
    vcPriorityN?: string;
    virtualChassisId?: string;
    virtualChassisIdN?: string;
    virtualChassisMember?: string;
}
export declare class DcimDevicesList200ApplicationJson extends SpeakeasyBase {
    count: number;
    next?: string;
    previous?: string;
    results: shared.DeviceWithConfigContext[];
}
export declare class DcimDevicesListRequest extends SpeakeasyBase {
    queryParams: DcimDevicesListQueryParams;
}
export declare class DcimDevicesListResponse extends SpeakeasyBase {
    contentType: string;
    statusCode: number;
    dcimDevicesList200ApplicationJsonObject?: DcimDevicesList200ApplicationJson;
}
