import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    RegistryCreateApi(req: operations.RegistryCreateApiRequest, config?: AxiosRequestConfig): Promise<operations.RegistryCreateApiResponse>;
    RegistryCreateApiSpec(req: operations.RegistryCreateApiSpecRequest, config?: AxiosRequestConfig): Promise<operations.RegistryCreateApiSpecResponse>;
    RegistryCreateApiVersion(req: operations.RegistryCreateApiVersionRequest, config?: AxiosRequestConfig): Promise<operations.RegistryCreateApiVersionResponse>;
    RegistryCreateArtifact(req: operations.RegistryCreateArtifactRequest, config?: AxiosRequestConfig): Promise<operations.RegistryCreateArtifactResponse>;
    RegistryCreateProject(req: operations.RegistryCreateProjectRequest, config?: AxiosRequestConfig): Promise<operations.RegistryCreateProjectResponse>;
    RegistryDeleteApi(req: operations.RegistryDeleteApiRequest, config?: AxiosRequestConfig): Promise<operations.RegistryDeleteApiResponse>;
    RegistryDeleteApiSpec(req: operations.RegistryDeleteApiSpecRequest, config?: AxiosRequestConfig): Promise<operations.RegistryDeleteApiSpecResponse>;
    RegistryDeleteApiSpecRevision(req: operations.RegistryDeleteApiSpecRevisionRequest, config?: AxiosRequestConfig): Promise<operations.RegistryDeleteApiSpecRevisionResponse>;
    RegistryDeleteApiVersion(req: operations.RegistryDeleteApiVersionRequest, config?: AxiosRequestConfig): Promise<operations.RegistryDeleteApiVersionResponse>;
    RegistryDeleteArtifact(req: operations.RegistryDeleteArtifactRequest, config?: AxiosRequestConfig): Promise<operations.RegistryDeleteArtifactResponse>;
    RegistryDeleteProject(req: operations.RegistryDeleteProjectRequest, config?: AxiosRequestConfig): Promise<operations.RegistryDeleteProjectResponse>;
    RegistryGetApi(req: operations.RegistryGetApiRequest, config?: AxiosRequestConfig): Promise<operations.RegistryGetApiResponse>;
    RegistryGetApiSpec(req: operations.RegistryGetApiSpecRequest, config?: AxiosRequestConfig): Promise<operations.RegistryGetApiSpecResponse>;
    RegistryGetApiSpecContents(req: operations.RegistryGetApiSpecContentsRequest, config?: AxiosRequestConfig): Promise<operations.RegistryGetApiSpecContentsResponse>;
    RegistryGetApiVersion(req: operations.RegistryGetApiVersionRequest, config?: AxiosRequestConfig): Promise<operations.RegistryGetApiVersionResponse>;
    RegistryGetArtifact(req: operations.RegistryGetArtifactRequest, config?: AxiosRequestConfig): Promise<operations.RegistryGetArtifactResponse>;
    RegistryGetArtifactContents(req: operations.RegistryGetArtifactContentsRequest, config?: AxiosRequestConfig): Promise<operations.RegistryGetArtifactContentsResponse>;
    RegistryGetProject(req: operations.RegistryGetProjectRequest, config?: AxiosRequestConfig): Promise<operations.RegistryGetProjectResponse>;
    RegistryGetStatus(config?: AxiosRequestConfig): Promise<operations.RegistryGetStatusResponse>;
    RegistryListApiSpecRevisions(req: operations.RegistryListApiSpecRevisionsRequest, config?: AxiosRequestConfig): Promise<operations.RegistryListApiSpecRevisionsResponse>;
    RegistryListApiSpecs(req: operations.RegistryListApiSpecsRequest, config?: AxiosRequestConfig): Promise<operations.RegistryListApiSpecsResponse>;
    RegistryListApiVersions(req: operations.RegistryListApiVersionsRequest, config?: AxiosRequestConfig): Promise<operations.RegistryListApiVersionsResponse>;
    RegistryListApis(req: operations.RegistryListApisRequest, config?: AxiosRequestConfig): Promise<operations.RegistryListApisResponse>;
    RegistryListArtifacts(req: operations.RegistryListArtifactsRequest, config?: AxiosRequestConfig): Promise<operations.RegistryListArtifactsResponse>;
    RegistryListProjects(req: operations.RegistryListProjectsRequest, config?: AxiosRequestConfig): Promise<operations.RegistryListProjectsResponse>;
    RegistryReplaceArtifact(req: operations.RegistryReplaceArtifactRequest, config?: AxiosRequestConfig): Promise<operations.RegistryReplaceArtifactResponse>;
    RegistryRollbackApiSpec(req: operations.RegistryRollbackApiSpecRequest, config?: AxiosRequestConfig): Promise<operations.RegistryRollbackApiSpecResponse>;
    RegistryTagApiSpecRevision(req: operations.RegistryTagApiSpecRevisionRequest, config?: AxiosRequestConfig): Promise<operations.RegistryTagApiSpecRevisionResponse>;
    RegistryUpdateApi(req: operations.RegistryUpdateApiRequest, config?: AxiosRequestConfig): Promise<operations.RegistryUpdateApiResponse>;
    RegistryUpdateApiSpec(req: operations.RegistryUpdateApiSpecRequest, config?: AxiosRequestConfig): Promise<operations.RegistryUpdateApiSpecResponse>;
    RegistryUpdateApiVersion(req: operations.RegistryUpdateApiVersionRequest, config?: AxiosRequestConfig): Promise<operations.RegistryUpdateApiVersionResponse>;
    RegistryUpdateProject(req: operations.RegistryUpdateProjectRequest, config?: AxiosRequestConfig): Promise<operations.RegistryUpdateProjectResponse>;
}
export {};
