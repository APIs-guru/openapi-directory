import { AxiosInstance } from "axios";
import { Security } from "./models/shared";
import { Audit } from "./audit";
import { Candidate } from "./candidate";
import { Committee } from "./committee";
import { CommunicationCost } from "./communicationcost";
import { Dates } from "./dates";
import { Debts } from "./debts";
import { Disbursements } from "./disbursements";
import { Efiling } from "./efiling";
import { Electioneering } from "./electioneering";
import { FilerResources } from "./filerresources";
import { Filings } from "./filings";
import { Financial } from "./financial";
import { IndependentExpenditures } from "./independentexpenditures";
import { Legal } from "./legal";
import { Loans } from "./loans";
import { PartyCoordinatedExpenditures } from "./partycoordinatedexpenditures";
import { Presidential } from "./presidential";
import { Receipts } from "./receipts";
import { Search } from "./search";
type OptsFunc = (sdk: SDK) => void;
export declare const ServerList: readonly ["https://fec.gov/v1"];
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare function WithSecurity(security: Security): OptsFunc;
export declare class SDK {
    audit: Audit;
    candidate: Candidate;
    committee: Committee;
    communicationCost: CommunicationCost;
    dates: Dates;
    debts: Debts;
    disbursements: Disbursements;
    efiling: Efiling;
    electioneering: Electioneering;
    filerResources: FilerResources;
    filings: Filings;
    financial: Financial;
    independentExpenditures: IndependentExpenditures;
    legal: Legal;
    loans: Loans;
    partyCoordinatedExpenditures: PartyCoordinatedExpenditures;
    presidential: Presidential;
    receipts: Receipts;
    search: Search;
    _defaultClient: AxiosInstance;
    _securityClient: AxiosInstance;
    _security?: Security;
    _serverURL: string;
    private _language;
    private _sdkVersion;
    private _genVersion;
    constructor(...opts: OptsFunc[]);
}
export {};
