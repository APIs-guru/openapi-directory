import { AxiosInstance } from "axios";
import { Security } from "./models/shared";
import { Authinfo } from "./authinfo";
import { Blobs } from "./blobs";
import { Events } from "./events";
import { Items } from "./items";
import { Keys } from "./keys";
import { Kvpairs } from "./kvpairs";
import { Locationrules } from "./locationrules";
import { Locations } from "./locations";
import { Presences } from "./presences";
import { Services } from "./services";
import { Sets } from "./sets";
import { Spots } from "./spots";
import { Spotsets } from "./spotsets";
import { Subscriptions } from "./subscriptions";
import { Users } from "./users";
type OptsFunc = (sdk: SDK) => void;
export declare const ServerList: readonly ["https://{protocol}://{customer}.intellifi.{tld}/api"];
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare function WithSecurity(security: Security): OptsFunc;
export declare class SDK {
    authinfo: Authinfo;
    blobs: Blobs;
    events: Events;
    items: Items;
    keys: Keys;
    kvpairs: Kvpairs;
    locationrules: Locationrules;
    locations: Locations;
    presences: Presences;
    services: Services;
    sets: Sets;
    spots: Spots;
    spotsets: Spotsets;
    subscriptions: Subscriptions;
    users: Users;
    _defaultClient: AxiosInstance;
    _securityClient: AxiosInstance;
    _security?: Security;
    _serverURL: string;
    private _language;
    private _sdkVersion;
    private _genVersion;
    constructor(...opts: OptsFunc[]);
}
export {};
