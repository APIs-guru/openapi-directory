import { AxiosInstance } from "axios";
import { AttributeNamespaces } from "./attributenamespaces";
import { Attributes } from "./attributes";
import { Build } from "./build";
import { Configuration } from "./configuration";
import { Distributions } from "./distributions";
import { GeneralInformation } from "./generalinformation";
import { Groups } from "./groups";
import { IssueTrackers } from "./issuetrackers";
import { Person } from "./person";
import { PublishedBinaries } from "./publishedbinaries";
import { Request } from "./request";
import { Workers } from "./workers";
type OptsFunc = (sdk: SDK) => void;
export declare const ServerList: readonly ["https://opensuse.org/"];
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare class SDK {
    attributeNamespaces: AttributeNamespaces;
    attributes: Attributes;
    build: Build;
    configuration: Configuration;
    distributions: Distributions;
    generalInformation: GeneralInformation;
    groups: Groups;
    issueTrackers: IssueTrackers;
    person: Person;
    publishedBinaries: PublishedBinaries;
    request: Request;
    workers: Workers;
    _defaultClient: AxiosInstance;
    _securityClient: AxiosInstance;
    _serverURL: string;
    private _language;
    private _sdkVersion;
    private _genVersion;
    constructor(...opts: OptsFunc[]);
}
export {};
