import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    GetFindInteractions(req: operations.GetFindInteractionsRequest, config?: AxiosRequestConfig): Promise<operations.GetFindInteractionsResponse>;
    GetFindPathwaysByLiterature(req: operations.GetFindPathwaysByLiteratureRequest, config?: AxiosRequestConfig): Promise<operations.GetFindPathwaysByLiteratureResponse>;
    GetFindPathwaysByText(req: operations.GetFindPathwaysByTextRequest, config?: AxiosRequestConfig): Promise<operations.GetFindPathwaysByTextResponse>;
    GetFindPathwaysByXref(req: operations.GetFindPathwaysByXrefRequest, config?: AxiosRequestConfig): Promise<operations.GetFindPathwaysByXrefResponse>;
    GetGetColoredPathway(req: operations.GetGetColoredPathwayRequest, config?: AxiosRequestConfig): Promise<operations.GetGetColoredPathwayResponse>;
    GetGetCurationTagHistory(req: operations.GetGetCurationTagHistoryRequest, config?: AxiosRequestConfig): Promise<operations.GetGetCurationTagHistoryResponse>;
    GetGetCurationTags(req: operations.GetGetCurationTagsRequest, config?: AxiosRequestConfig): Promise<operations.GetGetCurationTagsResponse>;
    GetGetCurationTagsByName(req: operations.GetGetCurationTagsByNameRequest, config?: AxiosRequestConfig): Promise<operations.GetGetCurationTagsByNameResponse>;
    GetGetOntologyTermsByPathway(req: operations.GetGetOntologyTermsByPathwayRequest, config?: AxiosRequestConfig): Promise<operations.GetGetOntologyTermsByPathwayResponse>;
    GetGetPathway(req: operations.GetGetPathwayRequest, config?: AxiosRequestConfig): Promise<operations.GetGetPathwayResponse>;
    GetGetPathwayAs(req: operations.GetGetPathwayAsRequest, config?: AxiosRequestConfig): Promise<operations.GetGetPathwayAsResponse>;
    GetGetPathwayHistory(req: operations.GetGetPathwayHistoryRequest, config?: AxiosRequestConfig): Promise<operations.GetGetPathwayHistoryResponse>;
    GetGetPathwayInfo(req: operations.GetGetPathwayInfoRequest, config?: AxiosRequestConfig): Promise<operations.GetGetPathwayInfoResponse>;
    GetGetPathwaysByOntologyTerm(req: operations.GetGetPathwaysByOntologyTermRequest, config?: AxiosRequestConfig): Promise<operations.GetGetPathwaysByOntologyTermResponse>;
    GetGetPathwaysByParentOntologyTerm(req: operations.GetGetPathwaysByParentOntologyTermRequest, config?: AxiosRequestConfig): Promise<operations.GetGetPathwaysByParentOntologyTermResponse>;
    GetGetRecentChanges(req: operations.GetGetRecentChangesRequest, config?: AxiosRequestConfig): Promise<operations.GetGetRecentChangesResponse>;
    GetGetUserByOrcid(req: operations.GetGetUserByOrcidRequest, config?: AxiosRequestConfig): Promise<operations.GetGetUserByOrcidResponse>;
    GetGetXrefList(req: operations.GetGetXrefListRequest, config?: AxiosRequestConfig): Promise<operations.GetGetXrefListResponse>;
    GetListOrganisms(req: operations.GetListOrganismsRequest, config?: AxiosRequestConfig): Promise<operations.GetListOrganismsResponse>;
    GetListPathways(req: operations.GetListPathwaysRequest, config?: AxiosRequestConfig): Promise<operations.GetListPathwaysResponse>;
    GetLogin(req: operations.GetLoginRequest, config?: AxiosRequestConfig): Promise<operations.GetLoginResponse>;
    GetRemoveCurationTag(req: operations.GetRemoveCurationTagRequest, config?: AxiosRequestConfig): Promise<operations.GetRemoveCurationTagResponse>;
    GetRemoveOntologyTag(req: operations.GetRemoveOntologyTagRequest, config?: AxiosRequestConfig): Promise<operations.GetRemoveOntologyTagResponse>;
    GetSaveCurationTag(req: operations.GetSaveCurationTagRequest, config?: AxiosRequestConfig): Promise<operations.GetSaveCurationTagResponse>;
    GetSaveOntologyTag(req: operations.GetSaveOntologyTagRequest, config?: AxiosRequestConfig): Promise<operations.GetSaveOntologyTagResponse>;
    GetUpdatePathway(req: operations.GetUpdatePathwayRequest, config?: AxiosRequestConfig): Promise<operations.GetUpdatePathwayResponse>;
    PostCreatePathway(req: operations.PostCreatePathwayRequest, config?: AxiosRequestConfig): Promise<operations.PostCreatePathwayResponse>;
}
export {};
