import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
import { Security } from "./models/shared";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare function WithSecurity(security: Security): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    GetAbortEnvironmentUpdate(req: operations.GetAbortEnvironmentUpdateRequest, config?: AxiosRequestConfig): Promise<operations.GetAbortEnvironmentUpdateResponse>;
    GetApplyEnvironmentManagedAction(req: operations.GetApplyEnvironmentManagedActionRequest, config?: AxiosRequestConfig): Promise<operations.GetApplyEnvironmentManagedActionResponse>;
    GetAssociateEnvironmentOperationsRole(req: operations.GetAssociateEnvironmentOperationsRoleRequest, config?: AxiosRequestConfig): Promise<operations.GetAssociateEnvironmentOperationsRoleResponse>;
    GetCheckDnsAvailability(req: operations.GetCheckDnsAvailabilityRequest, config?: AxiosRequestConfig): Promise<operations.GetCheckDnsAvailabilityResponse>;
    GetComposeEnvironments(req: operations.GetComposeEnvironmentsRequest, config?: AxiosRequestConfig): Promise<operations.GetComposeEnvironmentsResponse>;
    GetCreateStorageLocation(req: operations.GetCreateStorageLocationRequest, config?: AxiosRequestConfig): Promise<operations.GetCreateStorageLocationResponse>;
    GetDeleteApplication(req: operations.GetDeleteApplicationRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteApplicationResponse>;
    GetDeleteApplicationVersion(req: operations.GetDeleteApplicationVersionRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteApplicationVersionResponse>;
    GetDeleteConfigurationTemplate(req: operations.GetDeleteConfigurationTemplateRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteConfigurationTemplateResponse>;
    GetDeleteEnvironmentConfiguration(req: operations.GetDeleteEnvironmentConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteEnvironmentConfigurationResponse>;
    GetDeletePlatformVersion(req: operations.GetDeletePlatformVersionRequest, config?: AxiosRequestConfig): Promise<operations.GetDeletePlatformVersionResponse>;
    GetDescribeAccountAttributes(req: operations.GetDescribeAccountAttributesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeAccountAttributesResponse>;
    GetDescribeApplicationVersions(req: operations.GetDescribeApplicationVersionsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeApplicationVersionsResponse>;
    GetDescribeApplications(req: operations.GetDescribeApplicationsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeApplicationsResponse>;
    GetDescribeConfigurationSettings(req: operations.GetDescribeConfigurationSettingsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeConfigurationSettingsResponse>;
    GetDescribeEnvironmentHealth(req: operations.GetDescribeEnvironmentHealthRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeEnvironmentHealthResponse>;
    GetDescribeEnvironmentManagedActionHistory(req: operations.GetDescribeEnvironmentManagedActionHistoryRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeEnvironmentManagedActionHistoryResponse>;
    GetDescribeEnvironmentManagedActions(req: operations.GetDescribeEnvironmentManagedActionsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeEnvironmentManagedActionsResponse>;
    GetDescribeEnvironmentResources(req: operations.GetDescribeEnvironmentResourcesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeEnvironmentResourcesResponse>;
    GetDescribeEnvironments(req: operations.GetDescribeEnvironmentsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeEnvironmentsResponse>;
    GetDescribeEvents(req: operations.GetDescribeEventsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeEventsResponse>;
    GetDescribeInstancesHealth(req: operations.GetDescribeInstancesHealthRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeInstancesHealthResponse>;
    GetDescribePlatformVersion(req: operations.GetDescribePlatformVersionRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribePlatformVersionResponse>;
    GetDisassociateEnvironmentOperationsRole(req: operations.GetDisassociateEnvironmentOperationsRoleRequest, config?: AxiosRequestConfig): Promise<operations.GetDisassociateEnvironmentOperationsRoleResponse>;
    GetListAvailableSolutionStacks(req: operations.GetListAvailableSolutionStacksRequest, config?: AxiosRequestConfig): Promise<operations.GetListAvailableSolutionStacksResponse>;
    GetListTagsForResource(req: operations.GetListTagsForResourceRequest, config?: AxiosRequestConfig): Promise<operations.GetListTagsForResourceResponse>;
    GetRebuildEnvironment(req: operations.GetRebuildEnvironmentRequest, config?: AxiosRequestConfig): Promise<operations.GetRebuildEnvironmentResponse>;
    GetRequestEnvironmentInfo(req: operations.GetRequestEnvironmentInfoRequest, config?: AxiosRequestConfig): Promise<operations.GetRequestEnvironmentInfoResponse>;
    GetRestartAppServer(req: operations.GetRestartAppServerRequest, config?: AxiosRequestConfig): Promise<operations.GetRestartAppServerResponse>;
    GetRetrieveEnvironmentInfo(req: operations.GetRetrieveEnvironmentInfoRequest, config?: AxiosRequestConfig): Promise<operations.GetRetrieveEnvironmentInfoResponse>;
    GetSwapEnvironmentCnamEs(req: operations.GetSwapEnvironmentCnamEsRequest, config?: AxiosRequestConfig): Promise<operations.GetSwapEnvironmentCnamEsResponse>;
    GetTerminateEnvironment(req: operations.GetTerminateEnvironmentRequest, config?: AxiosRequestConfig): Promise<operations.GetTerminateEnvironmentResponse>;
    GetUpdateApplication(req: operations.GetUpdateApplicationRequest, config?: AxiosRequestConfig): Promise<operations.GetUpdateApplicationResponse>;
    GetUpdateApplicationVersion(req: operations.GetUpdateApplicationVersionRequest, config?: AxiosRequestConfig): Promise<operations.GetUpdateApplicationVersionResponse>;
    PostAbortEnvironmentUpdate(req: operations.PostAbortEnvironmentUpdateRequest, config?: AxiosRequestConfig): Promise<operations.PostAbortEnvironmentUpdateResponse>;
    PostApplyEnvironmentManagedAction(req: operations.PostApplyEnvironmentManagedActionRequest, config?: AxiosRequestConfig): Promise<operations.PostApplyEnvironmentManagedActionResponse>;
    PostAssociateEnvironmentOperationsRole(req: operations.PostAssociateEnvironmentOperationsRoleRequest, config?: AxiosRequestConfig): Promise<operations.PostAssociateEnvironmentOperationsRoleResponse>;
    PostCheckDnsAvailability(req: operations.PostCheckDnsAvailabilityRequest, config?: AxiosRequestConfig): Promise<operations.PostCheckDnsAvailabilityResponse>;
    PostComposeEnvironments(req: operations.PostComposeEnvironmentsRequest, config?: AxiosRequestConfig): Promise<operations.PostComposeEnvironmentsResponse>;
    PostCreateApplication(req: operations.PostCreateApplicationRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateApplicationResponse>;
    PostCreateApplicationVersion(req: operations.PostCreateApplicationVersionRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateApplicationVersionResponse>;
    PostCreateConfigurationTemplate(req: operations.PostCreateConfigurationTemplateRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateConfigurationTemplateResponse>;
    PostCreateEnvironment(req: operations.PostCreateEnvironmentRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateEnvironmentResponse>;
    PostCreatePlatformVersion(req: operations.PostCreatePlatformVersionRequest, config?: AxiosRequestConfig): Promise<operations.PostCreatePlatformVersionResponse>;
    PostCreateStorageLocation(req: operations.PostCreateStorageLocationRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateStorageLocationResponse>;
    PostDeleteApplication(req: operations.PostDeleteApplicationRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteApplicationResponse>;
    PostDeleteApplicationVersion(req: operations.PostDeleteApplicationVersionRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteApplicationVersionResponse>;
    PostDeleteConfigurationTemplate(req: operations.PostDeleteConfigurationTemplateRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteConfigurationTemplateResponse>;
    PostDeleteEnvironmentConfiguration(req: operations.PostDeleteEnvironmentConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteEnvironmentConfigurationResponse>;
    PostDeletePlatformVersion(req: operations.PostDeletePlatformVersionRequest, config?: AxiosRequestConfig): Promise<operations.PostDeletePlatformVersionResponse>;
    PostDescribeAccountAttributes(req: operations.PostDescribeAccountAttributesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeAccountAttributesResponse>;
    PostDescribeApplicationVersions(req: operations.PostDescribeApplicationVersionsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeApplicationVersionsResponse>;
    PostDescribeApplications(req: operations.PostDescribeApplicationsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeApplicationsResponse>;
    PostDescribeConfigurationOptions(req: operations.PostDescribeConfigurationOptionsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeConfigurationOptionsResponse>;
    PostDescribeConfigurationSettings(req: operations.PostDescribeConfigurationSettingsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeConfigurationSettingsResponse>;
    PostDescribeEnvironmentHealth(req: operations.PostDescribeEnvironmentHealthRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEnvironmentHealthResponse>;
    PostDescribeEnvironmentManagedActionHistory(req: operations.PostDescribeEnvironmentManagedActionHistoryRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEnvironmentManagedActionHistoryResponse>;
    PostDescribeEnvironmentManagedActions(req: operations.PostDescribeEnvironmentManagedActionsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEnvironmentManagedActionsResponse>;
    PostDescribeEnvironmentResources(req: operations.PostDescribeEnvironmentResourcesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEnvironmentResourcesResponse>;
    PostDescribeEnvironments(req: operations.PostDescribeEnvironmentsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEnvironmentsResponse>;
    PostDescribeEvents(req: operations.PostDescribeEventsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEventsResponse>;
    PostDescribeInstancesHealth(req: operations.PostDescribeInstancesHealthRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeInstancesHealthResponse>;
    PostDescribePlatformVersion(req: operations.PostDescribePlatformVersionRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribePlatformVersionResponse>;
    PostDisassociateEnvironmentOperationsRole(req: operations.PostDisassociateEnvironmentOperationsRoleRequest, config?: AxiosRequestConfig): Promise<operations.PostDisassociateEnvironmentOperationsRoleResponse>;
    PostListAvailableSolutionStacks(req: operations.PostListAvailableSolutionStacksRequest, config?: AxiosRequestConfig): Promise<operations.PostListAvailableSolutionStacksResponse>;
    PostListPlatformBranches(req: operations.PostListPlatformBranchesRequest, config?: AxiosRequestConfig): Promise<operations.PostListPlatformBranchesResponse>;
    PostListPlatformVersions(req: operations.PostListPlatformVersionsRequest, config?: AxiosRequestConfig): Promise<operations.PostListPlatformVersionsResponse>;
    PostListTagsForResource(req: operations.PostListTagsForResourceRequest, config?: AxiosRequestConfig): Promise<operations.PostListTagsForResourceResponse>;
    PostRebuildEnvironment(req: operations.PostRebuildEnvironmentRequest, config?: AxiosRequestConfig): Promise<operations.PostRebuildEnvironmentResponse>;
    PostRequestEnvironmentInfo(req: operations.PostRequestEnvironmentInfoRequest, config?: AxiosRequestConfig): Promise<operations.PostRequestEnvironmentInfoResponse>;
    PostRestartAppServer(req: operations.PostRestartAppServerRequest, config?: AxiosRequestConfig): Promise<operations.PostRestartAppServerResponse>;
    PostRetrieveEnvironmentInfo(req: operations.PostRetrieveEnvironmentInfoRequest, config?: AxiosRequestConfig): Promise<operations.PostRetrieveEnvironmentInfoResponse>;
    PostSwapEnvironmentCnamEs(req: operations.PostSwapEnvironmentCnamEsRequest, config?: AxiosRequestConfig): Promise<operations.PostSwapEnvironmentCnamEsResponse>;
    PostTerminateEnvironment(req: operations.PostTerminateEnvironmentRequest, config?: AxiosRequestConfig): Promise<operations.PostTerminateEnvironmentResponse>;
    PostUpdateApplication(req: operations.PostUpdateApplicationRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateApplicationResponse>;
    PostUpdateApplicationResourceLifecycle(req: operations.PostUpdateApplicationResourceLifecycleRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateApplicationResourceLifecycleResponse>;
    PostUpdateApplicationVersion(req: operations.PostUpdateApplicationVersionRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateApplicationVersionResponse>;
    PostUpdateConfigurationTemplate(req: operations.PostUpdateConfigurationTemplateRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateConfigurationTemplateResponse>;
    PostUpdateEnvironment(req: operations.PostUpdateEnvironmentRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateEnvironmentResponse>;
    PostUpdateTagsForResource(req: operations.PostUpdateTagsForResourceRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateTagsForResourceResponse>;
    PostValidateConfigurationSettings(req: operations.PostValidateConfigurationSettingsRequest, config?: AxiosRequestConfig): Promise<operations.PostValidateConfigurationSettingsResponse>;
}
export {};
