import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
import { Security } from "./models/shared";
type OptsFunc = (sdk: SDK) => void;
export declare const ServerList: readonly ["http://rds.{region}.amazonaws.com", "https://rds.{region}.amazonaws.com", "http://rds.amazonaws.com", "https://rds.amazonaws.com", "http://rds.{region}.amazonaws.com.cn", "https://rds.{region}.amazonaws.com.cn"];
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare function WithSecurity(security: Security): OptsFunc;
export declare class SDK {
    _defaultClient: AxiosInstance;
    _securityClient: AxiosInstance;
    _security?: Security;
    _serverURL: string;
    private _language;
    private _sdkVersion;
    private _genVersion;
    constructor(...opts: OptsFunc[]);
    getAddSourceIdentifierToSubscription(req: operations.GetAddSourceIdentifierToSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.GetAddSourceIdentifierToSubscriptionResponse>;
    getAuthorizeDbSecurityGroupIngress(req: operations.GetAuthorizeDbSecurityGroupIngressRequest, config?: AxiosRequestConfig): Promise<operations.GetAuthorizeDbSecurityGroupIngressResponse>;
    getCopyDbSnapshot(req: operations.GetCopyDbSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.GetCopyDbSnapshotResponse>;
    getCreateDbInstance(req: operations.GetCreateDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.GetCreateDbInstanceResponse>;
    getCreateDbInstanceReadReplica(req: operations.GetCreateDbInstanceReadReplicaRequest, config?: AxiosRequestConfig): Promise<operations.GetCreateDbInstanceReadReplicaResponse>;
    getCreateDbParameterGroup(req: operations.GetCreateDbParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetCreateDbParameterGroupResponse>;
    getCreateDbSecurityGroup(req: operations.GetCreateDbSecurityGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetCreateDbSecurityGroupResponse>;
    getCreateDbSnapshot(req: operations.GetCreateDbSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.GetCreateDbSnapshotResponse>;
    getCreateDbSubnetGroup(req: operations.GetCreateDbSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetCreateDbSubnetGroupResponse>;
    getCreateEventSubscription(req: operations.GetCreateEventSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.GetCreateEventSubscriptionResponse>;
    getCreateOptionGroup(req: operations.GetCreateOptionGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetCreateOptionGroupResponse>;
    getDeleteDbInstance(req: operations.GetDeleteDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbInstanceResponse>;
    getDeleteDbParameterGroup(req: operations.GetDeleteDbParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbParameterGroupResponse>;
    getDeleteDbSecurityGroup(req: operations.GetDeleteDbSecurityGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbSecurityGroupResponse>;
    getDeleteDbSnapshot(req: operations.GetDeleteDbSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbSnapshotResponse>;
    getDeleteDbSubnetGroup(req: operations.GetDeleteDbSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbSubnetGroupResponse>;
    getDeleteEventSubscription(req: operations.GetDeleteEventSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteEventSubscriptionResponse>;
    getDeleteOptionGroup(req: operations.GetDeleteOptionGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteOptionGroupResponse>;
    getDescribeDbEngineVersions(req: operations.GetDescribeDbEngineVersionsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeDbEngineVersionsResponse>;
    getDescribeDbInstances(req: operations.GetDescribeDbInstancesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeDbInstancesResponse>;
    getDescribeDbLogFiles(req: operations.GetDescribeDbLogFilesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeDbLogFilesResponse>;
    getDescribeDbParameterGroups(req: operations.GetDescribeDbParameterGroupsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeDbParameterGroupsResponse>;
    getDescribeDbParameters(req: operations.GetDescribeDbParametersRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeDbParametersResponse>;
    getDescribeDbSecurityGroups(req: operations.GetDescribeDbSecurityGroupsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeDbSecurityGroupsResponse>;
    getDescribeDbSnapshots(req: operations.GetDescribeDbSnapshotsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeDbSnapshotsResponse>;
    getDescribeDbSubnetGroups(req: operations.GetDescribeDbSubnetGroupsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeDbSubnetGroupsResponse>;
    getDescribeEngineDefaultParameters(req: operations.GetDescribeEngineDefaultParametersRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeEngineDefaultParametersResponse>;
    getDescribeEventCategories(req: operations.GetDescribeEventCategoriesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeEventCategoriesResponse>;
    getDescribeEventSubscriptions(req: operations.GetDescribeEventSubscriptionsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeEventSubscriptionsResponse>;
    getDescribeEvents(req: operations.GetDescribeEventsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeEventsResponse>;
    getDescribeOptionGroupOptions(req: operations.GetDescribeOptionGroupOptionsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeOptionGroupOptionsResponse>;
    getDescribeOptionGroups(req: operations.GetDescribeOptionGroupsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeOptionGroupsResponse>;
    getDescribeOrderableDbInstanceOptions(req: operations.GetDescribeOrderableDbInstanceOptionsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeOrderableDbInstanceOptionsResponse>;
    getDescribeReservedDbInstances(req: operations.GetDescribeReservedDbInstancesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeReservedDbInstancesResponse>;
    getDescribeReservedDbInstancesOfferings(req: operations.GetDescribeReservedDbInstancesOfferingsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeReservedDbInstancesOfferingsResponse>;
    getDownloadDbLogFilePortion(req: operations.GetDownloadDbLogFilePortionRequest, config?: AxiosRequestConfig): Promise<operations.GetDownloadDbLogFilePortionResponse>;
    getListTagsForResource(req: operations.GetListTagsForResourceRequest, config?: AxiosRequestConfig): Promise<operations.GetListTagsForResourceResponse>;
    getModifyDbInstance(req: operations.GetModifyDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyDbInstanceResponse>;
    getModifyDbSubnetGroup(req: operations.GetModifyDbSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyDbSubnetGroupResponse>;
    getModifyEventSubscription(req: operations.GetModifyEventSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyEventSubscriptionResponse>;
    getPromoteReadReplica(req: operations.GetPromoteReadReplicaRequest, config?: AxiosRequestConfig): Promise<operations.GetPromoteReadReplicaResponse>;
    getPurchaseReservedDbInstancesOffering(req: operations.GetPurchaseReservedDbInstancesOfferingRequest, config?: AxiosRequestConfig): Promise<operations.GetPurchaseReservedDbInstancesOfferingResponse>;
    getRebootDbInstance(req: operations.GetRebootDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.GetRebootDbInstanceResponse>;
    getRemoveSourceIdentifierFromSubscription(req: operations.GetRemoveSourceIdentifierFromSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.GetRemoveSourceIdentifierFromSubscriptionResponse>;
    getRemoveTagsFromResource(req: operations.GetRemoveTagsFromResourceRequest, config?: AxiosRequestConfig): Promise<operations.GetRemoveTagsFromResourceResponse>;
    getRestoreDbInstanceFromDbSnapshot(req: operations.GetRestoreDbInstanceFromDbSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.GetRestoreDbInstanceFromDbSnapshotResponse>;
    getRestoreDbInstanceToPointInTime(req: operations.GetRestoreDbInstanceToPointInTimeRequest, config?: AxiosRequestConfig): Promise<operations.GetRestoreDbInstanceToPointInTimeResponse>;
    getRevokeDbSecurityGroupIngress(req: operations.GetRevokeDbSecurityGroupIngressRequest, config?: AxiosRequestConfig): Promise<operations.GetRevokeDbSecurityGroupIngressResponse>;
    postAddSourceIdentifierToSubscription(req: operations.PostAddSourceIdentifierToSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.PostAddSourceIdentifierToSubscriptionResponse>;
    postAddTagsToResource(req: operations.PostAddTagsToResourceRequest, config?: AxiosRequestConfig): Promise<operations.PostAddTagsToResourceResponse>;
    postAuthorizeDbSecurityGroupIngress(req: operations.PostAuthorizeDbSecurityGroupIngressRequest, config?: AxiosRequestConfig): Promise<operations.PostAuthorizeDbSecurityGroupIngressResponse>;
    postCopyDbSnapshot(req: operations.PostCopyDbSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.PostCopyDbSnapshotResponse>;
    postCreateDbInstance(req: operations.PostCreateDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbInstanceResponse>;
    postCreateDbInstanceReadReplica(req: operations.PostCreateDbInstanceReadReplicaRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbInstanceReadReplicaResponse>;
    postCreateDbParameterGroup(req: operations.PostCreateDbParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbParameterGroupResponse>;
    postCreateDbSecurityGroup(req: operations.PostCreateDbSecurityGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbSecurityGroupResponse>;
    postCreateDbSnapshot(req: operations.PostCreateDbSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbSnapshotResponse>;
    postCreateDbSubnetGroup(req: operations.PostCreateDbSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbSubnetGroupResponse>;
    postCreateEventSubscription(req: operations.PostCreateEventSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateEventSubscriptionResponse>;
    postCreateOptionGroup(req: operations.PostCreateOptionGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateOptionGroupResponse>;
    postDeleteDbInstance(req: operations.PostDeleteDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbInstanceResponse>;
    postDeleteDbParameterGroup(req: operations.PostDeleteDbParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbParameterGroupResponse>;
    postDeleteDbSecurityGroup(req: operations.PostDeleteDbSecurityGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbSecurityGroupResponse>;
    postDeleteDbSnapshot(req: operations.PostDeleteDbSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbSnapshotResponse>;
    postDeleteDbSubnetGroup(req: operations.PostDeleteDbSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbSubnetGroupResponse>;
    postDeleteEventSubscription(req: operations.PostDeleteEventSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteEventSubscriptionResponse>;
    postDeleteOptionGroup(req: operations.PostDeleteOptionGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteOptionGroupResponse>;
    postDescribeDbEngineVersions(req: operations.PostDescribeDbEngineVersionsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbEngineVersionsResponse>;
    postDescribeDbInstances(req: operations.PostDescribeDbInstancesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbInstancesResponse>;
    postDescribeDbLogFiles(req: operations.PostDescribeDbLogFilesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbLogFilesResponse>;
    postDescribeDbParameterGroups(req: operations.PostDescribeDbParameterGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbParameterGroupsResponse>;
    postDescribeDbParameters(req: operations.PostDescribeDbParametersRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbParametersResponse>;
    postDescribeDbSecurityGroups(req: operations.PostDescribeDbSecurityGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbSecurityGroupsResponse>;
    postDescribeDbSnapshots(req: operations.PostDescribeDbSnapshotsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbSnapshotsResponse>;
    postDescribeDbSubnetGroups(req: operations.PostDescribeDbSubnetGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbSubnetGroupsResponse>;
    postDescribeEngineDefaultParameters(req: operations.PostDescribeEngineDefaultParametersRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEngineDefaultParametersResponse>;
    postDescribeEventCategories(req: operations.PostDescribeEventCategoriesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEventCategoriesResponse>;
    postDescribeEventSubscriptions(req: operations.PostDescribeEventSubscriptionsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEventSubscriptionsResponse>;
    postDescribeEvents(req: operations.PostDescribeEventsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEventsResponse>;
    postDescribeOptionGroupOptions(req: operations.PostDescribeOptionGroupOptionsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeOptionGroupOptionsResponse>;
    postDescribeOptionGroups(req: operations.PostDescribeOptionGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeOptionGroupsResponse>;
    postDescribeOrderableDbInstanceOptions(req: operations.PostDescribeOrderableDbInstanceOptionsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeOrderableDbInstanceOptionsResponse>;
    postDescribeReservedDbInstances(req: operations.PostDescribeReservedDbInstancesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeReservedDbInstancesResponse>;
    postDescribeReservedDbInstancesOfferings(req: operations.PostDescribeReservedDbInstancesOfferingsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeReservedDbInstancesOfferingsResponse>;
    postDownloadDbLogFilePortion(req: operations.PostDownloadDbLogFilePortionRequest, config?: AxiosRequestConfig): Promise<operations.PostDownloadDbLogFilePortionResponse>;
    postListTagsForResource(req: operations.PostListTagsForResourceRequest, config?: AxiosRequestConfig): Promise<operations.PostListTagsForResourceResponse>;
    postModifyDbInstance(req: operations.PostModifyDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyDbInstanceResponse>;
    postModifyDbParameterGroup(req: operations.PostModifyDbParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyDbParameterGroupResponse>;
    postModifyDbSubnetGroup(req: operations.PostModifyDbSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyDbSubnetGroupResponse>;
    postModifyEventSubscription(req: operations.PostModifyEventSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyEventSubscriptionResponse>;
    postModifyOptionGroup(req: operations.PostModifyOptionGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyOptionGroupResponse>;
    postPromoteReadReplica(req: operations.PostPromoteReadReplicaRequest, config?: AxiosRequestConfig): Promise<operations.PostPromoteReadReplicaResponse>;
    postPurchaseReservedDbInstancesOffering(req: operations.PostPurchaseReservedDbInstancesOfferingRequest, config?: AxiosRequestConfig): Promise<operations.PostPurchaseReservedDbInstancesOfferingResponse>;
    postRebootDbInstance(req: operations.PostRebootDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.PostRebootDbInstanceResponse>;
    postRemoveSourceIdentifierFromSubscription(req: operations.PostRemoveSourceIdentifierFromSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.PostRemoveSourceIdentifierFromSubscriptionResponse>;
    postRemoveTagsFromResource(req: operations.PostRemoveTagsFromResourceRequest, config?: AxiosRequestConfig): Promise<operations.PostRemoveTagsFromResourceResponse>;
    postResetDbParameterGroup(req: operations.PostResetDbParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostResetDbParameterGroupResponse>;
    postRestoreDbInstanceFromDbSnapshot(req: operations.PostRestoreDbInstanceFromDbSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.PostRestoreDbInstanceFromDbSnapshotResponse>;
    postRestoreDbInstanceToPointInTime(req: operations.PostRestoreDbInstanceToPointInTimeRequest, config?: AxiosRequestConfig): Promise<operations.PostRestoreDbInstanceToPointInTimeResponse>;
    postRevokeDbSecurityGroupIngress(req: operations.PostRevokeDbSecurityGroupIngressRequest, config?: AxiosRequestConfig): Promise<operations.PostRevokeDbSecurityGroupIngressResponse>;
}
export {};
