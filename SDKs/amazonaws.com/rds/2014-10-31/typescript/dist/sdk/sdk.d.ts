import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
import { Security } from "./models/shared";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare function WithSecurity(security: Security): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    GetAddRoleToDbCluster(req: operations.GetAddRoleToDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetAddRoleToDbClusterResponse>;
    GetAddRoleToDbInstance(req: operations.GetAddRoleToDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.GetAddRoleToDbInstanceResponse>;
    GetAddSourceIdentifierToSubscription(req: operations.GetAddSourceIdentifierToSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.GetAddSourceIdentifierToSubscriptionResponse>;
    GetApplyPendingMaintenanceAction(req: operations.GetApplyPendingMaintenanceActionRequest, config?: AxiosRequestConfig): Promise<operations.GetApplyPendingMaintenanceActionResponse>;
    GetAuthorizeDbSecurityGroupIngress(req: operations.GetAuthorizeDbSecurityGroupIngressRequest, config?: AxiosRequestConfig): Promise<operations.GetAuthorizeDbSecurityGroupIngressResponse>;
    GetBacktrackDbCluster(req: operations.GetBacktrackDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetBacktrackDbClusterResponse>;
    GetCancelExportTask(req: operations.GetCancelExportTaskRequest, config?: AxiosRequestConfig): Promise<operations.GetCancelExportTaskResponse>;
    GetCreateCustomAvailabilityZone(req: operations.GetCreateCustomAvailabilityZoneRequest, config?: AxiosRequestConfig): Promise<operations.GetCreateCustomAvailabilityZoneResponse>;
    GetCreateGlobalCluster(req: operations.GetCreateGlobalClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetCreateGlobalClusterResponse>;
    GetDeleteCustomAvailabilityZone(req: operations.GetDeleteCustomAvailabilityZoneRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteCustomAvailabilityZoneResponse>;
    GetDeleteDbCluster(req: operations.GetDeleteDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbClusterResponse>;
    GetDeleteDbClusterEndpoint(req: operations.GetDeleteDbClusterEndpointRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbClusterEndpointResponse>;
    GetDeleteDbClusterParameterGroup(req: operations.GetDeleteDbClusterParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbClusterParameterGroupResponse>;
    GetDeleteDbClusterSnapshot(req: operations.GetDeleteDbClusterSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbClusterSnapshotResponse>;
    GetDeleteDbInstance(req: operations.GetDeleteDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbInstanceResponse>;
    GetDeleteDbInstanceAutomatedBackup(req: operations.GetDeleteDbInstanceAutomatedBackupRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbInstanceAutomatedBackupResponse>;
    GetDeleteDbParameterGroup(req: operations.GetDeleteDbParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbParameterGroupResponse>;
    GetDeleteDbProxy(req: operations.GetDeleteDbProxyRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbProxyResponse>;
    GetDeleteDbProxyEndpoint(req: operations.GetDeleteDbProxyEndpointRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbProxyEndpointResponse>;
    GetDeleteDbSecurityGroup(req: operations.GetDeleteDbSecurityGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbSecurityGroupResponse>;
    GetDeleteDbSnapshot(req: operations.GetDeleteDbSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbSnapshotResponse>;
    GetDeleteDbSubnetGroup(req: operations.GetDeleteDbSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbSubnetGroupResponse>;
    GetDeleteEventSubscription(req: operations.GetDeleteEventSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteEventSubscriptionResponse>;
    GetDeleteGlobalCluster(req: operations.GetDeleteGlobalClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteGlobalClusterResponse>;
    GetDeleteInstallationMedia(req: operations.GetDeleteInstallationMediaRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteInstallationMediaResponse>;
    GetDeleteOptionGroup(req: operations.GetDeleteOptionGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteOptionGroupResponse>;
    GetDeregisterDbProxyTargets(req: operations.GetDeregisterDbProxyTargetsRequest, config?: AxiosRequestConfig): Promise<operations.GetDeregisterDbProxyTargetsResponse>;
    GetDescribeAccountAttributes(req: operations.GetDescribeAccountAttributesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeAccountAttributesResponse>;
    GetDescribeDbClusterSnapshotAttributes(req: operations.GetDescribeDbClusterSnapshotAttributesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeDbClusterSnapshotAttributesResponse>;
    GetDescribeDbSnapshotAttributes(req: operations.GetDescribeDbSnapshotAttributesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeDbSnapshotAttributesResponse>;
    GetDescribeValidDbInstanceModifications(req: operations.GetDescribeValidDbInstanceModificationsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeValidDbInstanceModificationsResponse>;
    GetDownloadDbLogFilePortion(req: operations.GetDownloadDbLogFilePortionRequest, config?: AxiosRequestConfig): Promise<operations.GetDownloadDbLogFilePortionResponse>;
    GetFailoverDbCluster(req: operations.GetFailoverDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetFailoverDbClusterResponse>;
    GetFailoverGlobalCluster(req: operations.GetFailoverGlobalClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetFailoverGlobalClusterResponse>;
    GetImportInstallationMedia(req: operations.GetImportInstallationMediaRequest, config?: AxiosRequestConfig): Promise<operations.GetImportInstallationMediaResponse>;
    GetModifyCertificates(req: operations.GetModifyCertificatesRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyCertificatesResponse>;
    GetModifyCurrentDbClusterCapacity(req: operations.GetModifyCurrentDbClusterCapacityRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyCurrentDbClusterCapacityResponse>;
    GetModifyDbCluster(req: operations.GetModifyDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyDbClusterResponse>;
    GetModifyDbClusterEndpoint(req: operations.GetModifyDbClusterEndpointRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyDbClusterEndpointResponse>;
    GetModifyDbClusterSnapshotAttribute(req: operations.GetModifyDbClusterSnapshotAttributeRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyDbClusterSnapshotAttributeResponse>;
    GetModifyDbProxyEndpoint(req: operations.GetModifyDbProxyEndpointRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyDbProxyEndpointResponse>;
    GetModifyDbProxyTargetGroup(req: operations.GetModifyDbProxyTargetGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyDbProxyTargetGroupResponse>;
    GetModifyDbSnapshot(req: operations.GetModifyDbSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyDbSnapshotResponse>;
    GetModifyDbSnapshotAttribute(req: operations.GetModifyDbSnapshotAttributeRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyDbSnapshotAttributeResponse>;
    GetModifyDbSubnetGroup(req: operations.GetModifyDbSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyDbSubnetGroupResponse>;
    GetModifyEventSubscription(req: operations.GetModifyEventSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyEventSubscriptionResponse>;
    GetModifyGlobalCluster(req: operations.GetModifyGlobalClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyGlobalClusterResponse>;
    GetPromoteReadReplica(req: operations.GetPromoteReadReplicaRequest, config?: AxiosRequestConfig): Promise<operations.GetPromoteReadReplicaResponse>;
    GetPromoteReadReplicaDbCluster(req: operations.GetPromoteReadReplicaDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetPromoteReadReplicaDbClusterResponse>;
    GetRebootDbInstance(req: operations.GetRebootDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.GetRebootDbInstanceResponse>;
    GetRegisterDbProxyTargets(req: operations.GetRegisterDbProxyTargetsRequest, config?: AxiosRequestConfig): Promise<operations.GetRegisterDbProxyTargetsResponse>;
    GetRemoveFromGlobalCluster(req: operations.GetRemoveFromGlobalClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetRemoveFromGlobalClusterResponse>;
    GetRemoveRoleFromDbCluster(req: operations.GetRemoveRoleFromDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetRemoveRoleFromDbClusterResponse>;
    GetRemoveRoleFromDbInstance(req: operations.GetRemoveRoleFromDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.GetRemoveRoleFromDbInstanceResponse>;
    GetRemoveSourceIdentifierFromSubscription(req: operations.GetRemoveSourceIdentifierFromSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.GetRemoveSourceIdentifierFromSubscriptionResponse>;
    GetRemoveTagsFromResource(req: operations.GetRemoveTagsFromResourceRequest, config?: AxiosRequestConfig): Promise<operations.GetRemoveTagsFromResourceResponse>;
    GetRevokeDbSecurityGroupIngress(req: operations.GetRevokeDbSecurityGroupIngressRequest, config?: AxiosRequestConfig): Promise<operations.GetRevokeDbSecurityGroupIngressResponse>;
    GetStartActivityStream(req: operations.GetStartActivityStreamRequest, config?: AxiosRequestConfig): Promise<operations.GetStartActivityStreamResponse>;
    GetStartDbCluster(req: operations.GetStartDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetStartDbClusterResponse>;
    GetStartDbInstance(req: operations.GetStartDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.GetStartDbInstanceResponse>;
    GetStartDbInstanceAutomatedBackupsReplication(req: operations.GetStartDbInstanceAutomatedBackupsReplicationRequest, config?: AxiosRequestConfig): Promise<operations.GetStartDbInstanceAutomatedBackupsReplicationResponse>;
    GetStartExportTask(req: operations.GetStartExportTaskRequest, config?: AxiosRequestConfig): Promise<operations.GetStartExportTaskResponse>;
    GetStopActivityStream(req: operations.GetStopActivityStreamRequest, config?: AxiosRequestConfig): Promise<operations.GetStopActivityStreamResponse>;
    GetStopDbCluster(req: operations.GetStopDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetStopDbClusterResponse>;
    GetStopDbInstance(req: operations.GetStopDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.GetStopDbInstanceResponse>;
    GetStopDbInstanceAutomatedBackupsReplication(req: operations.GetStopDbInstanceAutomatedBackupsReplicationRequest, config?: AxiosRequestConfig): Promise<operations.GetStopDbInstanceAutomatedBackupsReplicationResponse>;
    PostAddRoleToDbCluster(req: operations.PostAddRoleToDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostAddRoleToDbClusterResponse>;
    PostAddRoleToDbInstance(req: operations.PostAddRoleToDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.PostAddRoleToDbInstanceResponse>;
    PostAddSourceIdentifierToSubscription(req: operations.PostAddSourceIdentifierToSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.PostAddSourceIdentifierToSubscriptionResponse>;
    PostAddTagsToResource(req: operations.PostAddTagsToResourceRequest, config?: AxiosRequestConfig): Promise<operations.PostAddTagsToResourceResponse>;
    PostApplyPendingMaintenanceAction(req: operations.PostApplyPendingMaintenanceActionRequest, config?: AxiosRequestConfig): Promise<operations.PostApplyPendingMaintenanceActionResponse>;
    PostAuthorizeDbSecurityGroupIngress(req: operations.PostAuthorizeDbSecurityGroupIngressRequest, config?: AxiosRequestConfig): Promise<operations.PostAuthorizeDbSecurityGroupIngressResponse>;
    PostBacktrackDbCluster(req: operations.PostBacktrackDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostBacktrackDbClusterResponse>;
    PostCancelExportTask(req: operations.PostCancelExportTaskRequest, config?: AxiosRequestConfig): Promise<operations.PostCancelExportTaskResponse>;
    PostCopyDbClusterParameterGroup(req: operations.PostCopyDbClusterParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCopyDbClusterParameterGroupResponse>;
    PostCopyDbClusterSnapshot(req: operations.PostCopyDbClusterSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.PostCopyDbClusterSnapshotResponse>;
    PostCopyDbParameterGroup(req: operations.PostCopyDbParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCopyDbParameterGroupResponse>;
    PostCopyDbSnapshot(req: operations.PostCopyDbSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.PostCopyDbSnapshotResponse>;
    PostCopyOptionGroup(req: operations.PostCopyOptionGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCopyOptionGroupResponse>;
    PostCreateCustomAvailabilityZone(req: operations.PostCreateCustomAvailabilityZoneRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateCustomAvailabilityZoneResponse>;
    PostCreateDbCluster(req: operations.PostCreateDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbClusterResponse>;
    PostCreateDbClusterEndpoint(req: operations.PostCreateDbClusterEndpointRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbClusterEndpointResponse>;
    PostCreateDbClusterParameterGroup(req: operations.PostCreateDbClusterParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbClusterParameterGroupResponse>;
    PostCreateDbClusterSnapshot(req: operations.PostCreateDbClusterSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbClusterSnapshotResponse>;
    PostCreateDbInstance(req: operations.PostCreateDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbInstanceResponse>;
    PostCreateDbInstanceReadReplica(req: operations.PostCreateDbInstanceReadReplicaRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbInstanceReadReplicaResponse>;
    PostCreateDbParameterGroup(req: operations.PostCreateDbParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbParameterGroupResponse>;
    PostCreateDbProxy(req: operations.PostCreateDbProxyRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbProxyResponse>;
    PostCreateDbProxyEndpoint(req: operations.PostCreateDbProxyEndpointRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbProxyEndpointResponse>;
    PostCreateDbSecurityGroup(req: operations.PostCreateDbSecurityGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbSecurityGroupResponse>;
    PostCreateDbSnapshot(req: operations.PostCreateDbSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbSnapshotResponse>;
    PostCreateDbSubnetGroup(req: operations.PostCreateDbSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbSubnetGroupResponse>;
    PostCreateEventSubscription(req: operations.PostCreateEventSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateEventSubscriptionResponse>;
    PostCreateGlobalCluster(req: operations.PostCreateGlobalClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateGlobalClusterResponse>;
    PostCreateOptionGroup(req: operations.PostCreateOptionGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateOptionGroupResponse>;
    PostDeleteCustomAvailabilityZone(req: operations.PostDeleteCustomAvailabilityZoneRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteCustomAvailabilityZoneResponse>;
    PostDeleteDbCluster(req: operations.PostDeleteDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbClusterResponse>;
    PostDeleteDbClusterEndpoint(req: operations.PostDeleteDbClusterEndpointRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbClusterEndpointResponse>;
    PostDeleteDbClusterParameterGroup(req: operations.PostDeleteDbClusterParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbClusterParameterGroupResponse>;
    PostDeleteDbClusterSnapshot(req: operations.PostDeleteDbClusterSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbClusterSnapshotResponse>;
    PostDeleteDbInstance(req: operations.PostDeleteDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbInstanceResponse>;
    PostDeleteDbInstanceAutomatedBackup(req: operations.PostDeleteDbInstanceAutomatedBackupRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbInstanceAutomatedBackupResponse>;
    PostDeleteDbParameterGroup(req: operations.PostDeleteDbParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbParameterGroupResponse>;
    PostDeleteDbProxy(req: operations.PostDeleteDbProxyRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbProxyResponse>;
    PostDeleteDbProxyEndpoint(req: operations.PostDeleteDbProxyEndpointRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbProxyEndpointResponse>;
    PostDeleteDbSecurityGroup(req: operations.PostDeleteDbSecurityGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbSecurityGroupResponse>;
    PostDeleteDbSnapshot(req: operations.PostDeleteDbSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbSnapshotResponse>;
    PostDeleteDbSubnetGroup(req: operations.PostDeleteDbSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbSubnetGroupResponse>;
    PostDeleteEventSubscription(req: operations.PostDeleteEventSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteEventSubscriptionResponse>;
    PostDeleteGlobalCluster(req: operations.PostDeleteGlobalClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteGlobalClusterResponse>;
    PostDeleteInstallationMedia(req: operations.PostDeleteInstallationMediaRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteInstallationMediaResponse>;
    PostDeleteOptionGroup(req: operations.PostDeleteOptionGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteOptionGroupResponse>;
    PostDeregisterDbProxyTargets(req: operations.PostDeregisterDbProxyTargetsRequest, config?: AxiosRequestConfig): Promise<operations.PostDeregisterDbProxyTargetsResponse>;
    PostDescribeAccountAttributes(req: operations.PostDescribeAccountAttributesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeAccountAttributesResponse>;
    PostDescribeCertificates(req: operations.PostDescribeCertificatesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeCertificatesResponse>;
    PostDescribeCustomAvailabilityZones(req: operations.PostDescribeCustomAvailabilityZonesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeCustomAvailabilityZonesResponse>;
    PostDescribeDbClusterBacktracks(req: operations.PostDescribeDbClusterBacktracksRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbClusterBacktracksResponse>;
    PostDescribeDbClusterEndpoints(req: operations.PostDescribeDbClusterEndpointsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbClusterEndpointsResponse>;
    PostDescribeDbClusterParameterGroups(req: operations.PostDescribeDbClusterParameterGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbClusterParameterGroupsResponse>;
    PostDescribeDbClusterParameters(req: operations.PostDescribeDbClusterParametersRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbClusterParametersResponse>;
    PostDescribeDbClusterSnapshotAttributes(req: operations.PostDescribeDbClusterSnapshotAttributesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbClusterSnapshotAttributesResponse>;
    PostDescribeDbClusterSnapshots(req: operations.PostDescribeDbClusterSnapshotsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbClusterSnapshotsResponse>;
    PostDescribeDbClusters(req: operations.PostDescribeDbClustersRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbClustersResponse>;
    PostDescribeDbEngineVersions(req: operations.PostDescribeDbEngineVersionsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbEngineVersionsResponse>;
    PostDescribeDbInstanceAutomatedBackups(req: operations.PostDescribeDbInstanceAutomatedBackupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbInstanceAutomatedBackupsResponse>;
    PostDescribeDbInstances(req: operations.PostDescribeDbInstancesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbInstancesResponse>;
    PostDescribeDbLogFiles(req: operations.PostDescribeDbLogFilesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbLogFilesResponse>;
    PostDescribeDbParameterGroups(req: operations.PostDescribeDbParameterGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbParameterGroupsResponse>;
    PostDescribeDbParameters(req: operations.PostDescribeDbParametersRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbParametersResponse>;
    PostDescribeDbProxies(req: operations.PostDescribeDbProxiesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbProxiesResponse>;
    PostDescribeDbProxyEndpoints(req: operations.PostDescribeDbProxyEndpointsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbProxyEndpointsResponse>;
    PostDescribeDbProxyTargetGroups(req: operations.PostDescribeDbProxyTargetGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbProxyTargetGroupsResponse>;
    PostDescribeDbProxyTargets(req: operations.PostDescribeDbProxyTargetsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbProxyTargetsResponse>;
    PostDescribeDbSecurityGroups(req: operations.PostDescribeDbSecurityGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbSecurityGroupsResponse>;
    PostDescribeDbSnapshotAttributes(req: operations.PostDescribeDbSnapshotAttributesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbSnapshotAttributesResponse>;
    PostDescribeDbSnapshots(req: operations.PostDescribeDbSnapshotsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbSnapshotsResponse>;
    PostDescribeDbSubnetGroups(req: operations.PostDescribeDbSubnetGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbSubnetGroupsResponse>;
    PostDescribeEngineDefaultClusterParameters(req: operations.PostDescribeEngineDefaultClusterParametersRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEngineDefaultClusterParametersResponse>;
    PostDescribeEngineDefaultParameters(req: operations.PostDescribeEngineDefaultParametersRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEngineDefaultParametersResponse>;
    PostDescribeEventCategories(req: operations.PostDescribeEventCategoriesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEventCategoriesResponse>;
    PostDescribeEventSubscriptions(req: operations.PostDescribeEventSubscriptionsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEventSubscriptionsResponse>;
    PostDescribeEvents(req: operations.PostDescribeEventsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEventsResponse>;
    PostDescribeExportTasks(req: operations.PostDescribeExportTasksRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeExportTasksResponse>;
    PostDescribeGlobalClusters(req: operations.PostDescribeGlobalClustersRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeGlobalClustersResponse>;
    PostDescribeInstallationMedia(req: operations.PostDescribeInstallationMediaRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeInstallationMediaResponse>;
    PostDescribeOptionGroupOptions(req: operations.PostDescribeOptionGroupOptionsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeOptionGroupOptionsResponse>;
    PostDescribeOptionGroups(req: operations.PostDescribeOptionGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeOptionGroupsResponse>;
    PostDescribeOrderableDbInstanceOptions(req: operations.PostDescribeOrderableDbInstanceOptionsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeOrderableDbInstanceOptionsResponse>;
    PostDescribePendingMaintenanceActions(req: operations.PostDescribePendingMaintenanceActionsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribePendingMaintenanceActionsResponse>;
    PostDescribeReservedDbInstances(req: operations.PostDescribeReservedDbInstancesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeReservedDbInstancesResponse>;
    PostDescribeReservedDbInstancesOfferings(req: operations.PostDescribeReservedDbInstancesOfferingsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeReservedDbInstancesOfferingsResponse>;
    PostDescribeSourceRegions(req: operations.PostDescribeSourceRegionsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeSourceRegionsResponse>;
    PostDescribeValidDbInstanceModifications(req: operations.PostDescribeValidDbInstanceModificationsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeValidDbInstanceModificationsResponse>;
    PostDownloadDbLogFilePortion(req: operations.PostDownloadDbLogFilePortionRequest, config?: AxiosRequestConfig): Promise<operations.PostDownloadDbLogFilePortionResponse>;
    PostFailoverDbCluster(req: operations.PostFailoverDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostFailoverDbClusterResponse>;
    PostFailoverGlobalCluster(req: operations.PostFailoverGlobalClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostFailoverGlobalClusterResponse>;
    PostImportInstallationMedia(req: operations.PostImportInstallationMediaRequest, config?: AxiosRequestConfig): Promise<operations.PostImportInstallationMediaResponse>;
    PostListTagsForResource(req: operations.PostListTagsForResourceRequest, config?: AxiosRequestConfig): Promise<operations.PostListTagsForResourceResponse>;
    PostModifyCertificates(req: operations.PostModifyCertificatesRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyCertificatesResponse>;
    PostModifyCurrentDbClusterCapacity(req: operations.PostModifyCurrentDbClusterCapacityRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyCurrentDbClusterCapacityResponse>;
    PostModifyDbCluster(req: operations.PostModifyDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyDbClusterResponse>;
    PostModifyDbClusterEndpoint(req: operations.PostModifyDbClusterEndpointRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyDbClusterEndpointResponse>;
    PostModifyDbClusterParameterGroup(req: operations.PostModifyDbClusterParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyDbClusterParameterGroupResponse>;
    PostModifyDbClusterSnapshotAttribute(req: operations.PostModifyDbClusterSnapshotAttributeRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyDbClusterSnapshotAttributeResponse>;
    PostModifyDbInstance(req: operations.PostModifyDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyDbInstanceResponse>;
    PostModifyDbParameterGroup(req: operations.PostModifyDbParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyDbParameterGroupResponse>;
    PostModifyDbProxy(req: operations.PostModifyDbProxyRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyDbProxyResponse>;
    PostModifyDbProxyEndpoint(req: operations.PostModifyDbProxyEndpointRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyDbProxyEndpointResponse>;
    PostModifyDbProxyTargetGroup(req: operations.PostModifyDbProxyTargetGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyDbProxyTargetGroupResponse>;
    PostModifyDbSnapshot(req: operations.PostModifyDbSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyDbSnapshotResponse>;
    PostModifyDbSnapshotAttribute(req: operations.PostModifyDbSnapshotAttributeRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyDbSnapshotAttributeResponse>;
    PostModifyDbSubnetGroup(req: operations.PostModifyDbSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyDbSubnetGroupResponse>;
    PostModifyEventSubscription(req: operations.PostModifyEventSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyEventSubscriptionResponse>;
    PostModifyGlobalCluster(req: operations.PostModifyGlobalClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyGlobalClusterResponse>;
    PostModifyOptionGroup(req: operations.PostModifyOptionGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyOptionGroupResponse>;
    PostPromoteReadReplica(req: operations.PostPromoteReadReplicaRequest, config?: AxiosRequestConfig): Promise<operations.PostPromoteReadReplicaResponse>;
    PostPromoteReadReplicaDbCluster(req: operations.PostPromoteReadReplicaDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostPromoteReadReplicaDbClusterResponse>;
    PostPurchaseReservedDbInstancesOffering(req: operations.PostPurchaseReservedDbInstancesOfferingRequest, config?: AxiosRequestConfig): Promise<operations.PostPurchaseReservedDbInstancesOfferingResponse>;
    PostRebootDbInstance(req: operations.PostRebootDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.PostRebootDbInstanceResponse>;
    PostRegisterDbProxyTargets(req: operations.PostRegisterDbProxyTargetsRequest, config?: AxiosRequestConfig): Promise<operations.PostRegisterDbProxyTargetsResponse>;
    PostRemoveFromGlobalCluster(req: operations.PostRemoveFromGlobalClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostRemoveFromGlobalClusterResponse>;
    PostRemoveRoleFromDbCluster(req: operations.PostRemoveRoleFromDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostRemoveRoleFromDbClusterResponse>;
    PostRemoveRoleFromDbInstance(req: operations.PostRemoveRoleFromDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.PostRemoveRoleFromDbInstanceResponse>;
    PostRemoveSourceIdentifierFromSubscription(req: operations.PostRemoveSourceIdentifierFromSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.PostRemoveSourceIdentifierFromSubscriptionResponse>;
    PostRemoveTagsFromResource(req: operations.PostRemoveTagsFromResourceRequest, config?: AxiosRequestConfig): Promise<operations.PostRemoveTagsFromResourceResponse>;
    PostResetDbClusterParameterGroup(req: operations.PostResetDbClusterParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostResetDbClusterParameterGroupResponse>;
    PostResetDbParameterGroup(req: operations.PostResetDbParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostResetDbParameterGroupResponse>;
    PostRestoreDbClusterFromS3(req: operations.PostRestoreDbClusterFromS3Request, config?: AxiosRequestConfig): Promise<operations.PostRestoreDbClusterFromS3Response>;
    PostRestoreDbClusterFromSnapshot(req: operations.PostRestoreDbClusterFromSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.PostRestoreDbClusterFromSnapshotResponse>;
    PostRestoreDbClusterToPointInTime(req: operations.PostRestoreDbClusterToPointInTimeRequest, config?: AxiosRequestConfig): Promise<operations.PostRestoreDbClusterToPointInTimeResponse>;
    PostRestoreDbInstanceFromDbSnapshot(req: operations.PostRestoreDbInstanceFromDbSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.PostRestoreDbInstanceFromDbSnapshotResponse>;
    PostRestoreDbInstanceFromS3(req: operations.PostRestoreDbInstanceFromS3Request, config?: AxiosRequestConfig): Promise<operations.PostRestoreDbInstanceFromS3Response>;
    PostRestoreDbInstanceToPointInTime(req: operations.PostRestoreDbInstanceToPointInTimeRequest, config?: AxiosRequestConfig): Promise<operations.PostRestoreDbInstanceToPointInTimeResponse>;
    PostRevokeDbSecurityGroupIngress(req: operations.PostRevokeDbSecurityGroupIngressRequest, config?: AxiosRequestConfig): Promise<operations.PostRevokeDbSecurityGroupIngressResponse>;
    PostStartActivityStream(req: operations.PostStartActivityStreamRequest, config?: AxiosRequestConfig): Promise<operations.PostStartActivityStreamResponse>;
    PostStartDbCluster(req: operations.PostStartDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostStartDbClusterResponse>;
    PostStartDbInstance(req: operations.PostStartDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.PostStartDbInstanceResponse>;
    PostStartDbInstanceAutomatedBackupsReplication(req: operations.PostStartDbInstanceAutomatedBackupsReplicationRequest, config?: AxiosRequestConfig): Promise<operations.PostStartDbInstanceAutomatedBackupsReplicationResponse>;
    PostStartExportTask(req: operations.PostStartExportTaskRequest, config?: AxiosRequestConfig): Promise<operations.PostStartExportTaskResponse>;
    PostStopActivityStream(req: operations.PostStopActivityStreamRequest, config?: AxiosRequestConfig): Promise<operations.PostStopActivityStreamResponse>;
    PostStopDbCluster(req: operations.PostStopDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostStopDbClusterResponse>;
    PostStopDbInstance(req: operations.PostStopDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.PostStopDbInstanceResponse>;
    PostStopDbInstanceAutomatedBackupsReplication(req: operations.PostStopDbInstanceAutomatedBackupsReplicationRequest, config?: AxiosRequestConfig): Promise<operations.PostStopDbInstanceAutomatedBackupsReplicationResponse>;
}
export {};
