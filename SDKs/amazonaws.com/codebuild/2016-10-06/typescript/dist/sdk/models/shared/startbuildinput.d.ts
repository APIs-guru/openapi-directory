import { SpeakeasyBase } from "../../../internal/utils";
import { ProjectArtifacts } from "./projectartifacts";
import { BuildStatusConfig } from "./buildstatusconfig";
import { ProjectCache } from "./projectcache";
import { ComputeTypeEnum } from "./computetypeenum";
import { EnvironmentTypeEnum } from "./environmenttypeenum";
import { EnvironmentVariable } from "./environmentvariable";
import { GitSubmodulesConfig } from "./gitsubmodulesconfig";
import { ImagePullCredentialsTypeEnum } from "./imagepullcredentialstypeenum";
import { LogsConfig } from "./logsconfig";
import { RegistryCredential } from "./registrycredential";
import { ProjectSource } from "./projectsource";
import { ProjectSourceVersion } from "./projectsourceversion";
import { SourceAuth } from "./sourceauth";
import { SourceTypeEnum } from "./sourcetypeenum";
export declare class StartBuildInput extends SpeakeasyBase {
    artifactsOverride?: ProjectArtifacts;
    buildStatusConfigOverride?: BuildStatusConfig;
    buildspecOverride?: string;
    cacheOverride?: ProjectCache;
    certificateOverride?: string;
    computeTypeOverride?: ComputeTypeEnum;
    debugSessionEnabled?: boolean;
    encryptionKeyOverride?: string;
    environmentTypeOverride?: EnvironmentTypeEnum;
    environmentVariablesOverride?: EnvironmentVariable[];
    gitCloneDepthOverride?: number;
    gitSubmodulesConfigOverride?: GitSubmodulesConfig;
    imageOverride?: string;
    imagePullCredentialsTypeOverride?: ImagePullCredentialsTypeEnum;
    insecureSslOverride?: boolean;
    logsConfigOverride?: LogsConfig;
    privilegedModeOverride?: boolean;
    projectName: string;
    queuedTimeoutInMinutesOverride?: number;
    registryCredentialOverride?: RegistryCredential;
    reportBuildStatusOverride?: boolean;
    secondaryArtifactsOverride?: ProjectArtifacts[];
    secondarySourcesOverride?: ProjectSource[];
    secondarySourcesVersionOverride?: ProjectSourceVersion[];
    serviceRoleOverride?: string;
    sourceAuthOverride?: SourceAuth;
    sourceLocationOverride?: string;
    sourceTypeOverride?: SourceTypeEnum;
    sourceVersion?: string;
    timeoutInMinutesOverride?: number;
}
