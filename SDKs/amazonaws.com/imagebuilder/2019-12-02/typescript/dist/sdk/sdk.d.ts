import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
import { Security } from "./models/shared";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare function WithSecurity(security: Security): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    CancelImageCreation(req: operations.CancelImageCreationRequest, config?: AxiosRequestConfig): Promise<operations.CancelImageCreationResponse>;
    CreateComponent(req: operations.CreateComponentRequest, config?: AxiosRequestConfig): Promise<operations.CreateComponentResponse>;
    CreateContainerRecipe(req: operations.CreateContainerRecipeRequest, config?: AxiosRequestConfig): Promise<operations.CreateContainerRecipeResponse>;
    CreateDistributionConfiguration(req: operations.CreateDistributionConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.CreateDistributionConfigurationResponse>;
    CreateImage(req: operations.CreateImageRequest, config?: AxiosRequestConfig): Promise<operations.CreateImageResponse>;
    CreateImagePipeline(req: operations.CreateImagePipelineRequest, config?: AxiosRequestConfig): Promise<operations.CreateImagePipelineResponse>;
    CreateImageRecipe(req: operations.CreateImageRecipeRequest, config?: AxiosRequestConfig): Promise<operations.CreateImageRecipeResponse>;
    CreateInfrastructureConfiguration(req: operations.CreateInfrastructureConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.CreateInfrastructureConfigurationResponse>;
    DeleteComponent(req: operations.DeleteComponentRequest, config?: AxiosRequestConfig): Promise<operations.DeleteComponentResponse>;
    DeleteContainerRecipe(req: operations.DeleteContainerRecipeRequest, config?: AxiosRequestConfig): Promise<operations.DeleteContainerRecipeResponse>;
    DeleteDistributionConfiguration(req: operations.DeleteDistributionConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.DeleteDistributionConfigurationResponse>;
    DeleteImage(req: operations.DeleteImageRequest, config?: AxiosRequestConfig): Promise<operations.DeleteImageResponse>;
    DeleteImagePipeline(req: operations.DeleteImagePipelineRequest, config?: AxiosRequestConfig): Promise<operations.DeleteImagePipelineResponse>;
    DeleteImageRecipe(req: operations.DeleteImageRecipeRequest, config?: AxiosRequestConfig): Promise<operations.DeleteImageRecipeResponse>;
    DeleteInfrastructureConfiguration(req: operations.DeleteInfrastructureConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.DeleteInfrastructureConfigurationResponse>;
    GetComponent(req: operations.GetComponentRequest, config?: AxiosRequestConfig): Promise<operations.GetComponentResponse>;
    GetComponentPolicy(req: operations.GetComponentPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetComponentPolicyResponse>;
    GetContainerRecipe(req: operations.GetContainerRecipeRequest, config?: AxiosRequestConfig): Promise<operations.GetContainerRecipeResponse>;
    GetContainerRecipePolicy(req: operations.GetContainerRecipePolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetContainerRecipePolicyResponse>;
    GetDistributionConfiguration(req: operations.GetDistributionConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.GetDistributionConfigurationResponse>;
    GetImage(req: operations.GetImageRequest, config?: AxiosRequestConfig): Promise<operations.GetImageResponse>;
    GetImagePipeline(req: operations.GetImagePipelineRequest, config?: AxiosRequestConfig): Promise<operations.GetImagePipelineResponse>;
    GetImagePolicy(req: operations.GetImagePolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetImagePolicyResponse>;
    GetImageRecipe(req: operations.GetImageRecipeRequest, config?: AxiosRequestConfig): Promise<operations.GetImageRecipeResponse>;
    GetImageRecipePolicy(req: operations.GetImageRecipePolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetImageRecipePolicyResponse>;
    GetInfrastructureConfiguration(req: operations.GetInfrastructureConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.GetInfrastructureConfigurationResponse>;
    ImportComponent(req: operations.ImportComponentRequest, config?: AxiosRequestConfig): Promise<operations.ImportComponentResponse>;
    ListComponentBuildVersions(req: operations.ListComponentBuildVersionsRequest, config?: AxiosRequestConfig): Promise<operations.ListComponentBuildVersionsResponse>;
    ListComponents(req: operations.ListComponentsRequest, config?: AxiosRequestConfig): Promise<operations.ListComponentsResponse>;
    ListContainerRecipes(req: operations.ListContainerRecipesRequest, config?: AxiosRequestConfig): Promise<operations.ListContainerRecipesResponse>;
    ListDistributionConfigurations(req: operations.ListDistributionConfigurationsRequest, config?: AxiosRequestConfig): Promise<operations.ListDistributionConfigurationsResponse>;
    ListImageBuildVersions(req: operations.ListImageBuildVersionsRequest, config?: AxiosRequestConfig): Promise<operations.ListImageBuildVersionsResponse>;
    ListImagePackages(req: operations.ListImagePackagesRequest, config?: AxiosRequestConfig): Promise<operations.ListImagePackagesResponse>;
    ListImagePipelineImages(req: operations.ListImagePipelineImagesRequest, config?: AxiosRequestConfig): Promise<operations.ListImagePipelineImagesResponse>;
    ListImagePipelines(req: operations.ListImagePipelinesRequest, config?: AxiosRequestConfig): Promise<operations.ListImagePipelinesResponse>;
    ListImageRecipes(req: operations.ListImageRecipesRequest, config?: AxiosRequestConfig): Promise<operations.ListImageRecipesResponse>;
    ListImages(req: operations.ListImagesRequest, config?: AxiosRequestConfig): Promise<operations.ListImagesResponse>;
    ListInfrastructureConfigurations(req: operations.ListInfrastructureConfigurationsRequest, config?: AxiosRequestConfig): Promise<operations.ListInfrastructureConfigurationsResponse>;
    ListTagsForResource(req: operations.ListTagsForResourceRequest, config?: AxiosRequestConfig): Promise<operations.ListTagsForResourceResponse>;
    PutComponentPolicy(req: operations.PutComponentPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PutComponentPolicyResponse>;
    PutContainerRecipePolicy(req: operations.PutContainerRecipePolicyRequest, config?: AxiosRequestConfig): Promise<operations.PutContainerRecipePolicyResponse>;
    PutImagePolicy(req: operations.PutImagePolicyRequest, config?: AxiosRequestConfig): Promise<operations.PutImagePolicyResponse>;
    PutImageRecipePolicy(req: operations.PutImageRecipePolicyRequest, config?: AxiosRequestConfig): Promise<operations.PutImageRecipePolicyResponse>;
    StartImagePipelineExecution(req: operations.StartImagePipelineExecutionRequest, config?: AxiosRequestConfig): Promise<operations.StartImagePipelineExecutionResponse>;
    TagResource(req: operations.TagResourceRequest, config?: AxiosRequestConfig): Promise<operations.TagResourceResponse>;
    UntagResource(req: operations.UntagResourceRequest, config?: AxiosRequestConfig): Promise<operations.UntagResourceResponse>;
    UpdateDistributionConfiguration(req: operations.UpdateDistributionConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.UpdateDistributionConfigurationResponse>;
    UpdateImagePipeline(req: operations.UpdateImagePipelineRequest, config?: AxiosRequestConfig): Promise<operations.UpdateImagePipelineResponse>;
    UpdateInfrastructureConfiguration(req: operations.UpdateInfrastructureConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.UpdateInfrastructureConfigurationResponse>;
}
export {};
