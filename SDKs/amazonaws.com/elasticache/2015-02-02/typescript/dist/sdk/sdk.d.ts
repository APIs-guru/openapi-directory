import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
import { Security } from "./models/shared";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare function WithSecurity(security: Security): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    GetAuthorizeCacheSecurityGroupIngress(req: operations.GetAuthorizeCacheSecurityGroupIngressRequest, config?: AxiosRequestConfig): Promise<operations.GetAuthorizeCacheSecurityGroupIngressResponse>;
    GetBatchApplyUpdateAction(req: operations.GetBatchApplyUpdateActionRequest, config?: AxiosRequestConfig): Promise<operations.GetBatchApplyUpdateActionResponse>;
    GetBatchStopUpdateAction(req: operations.GetBatchStopUpdateActionRequest, config?: AxiosRequestConfig): Promise<operations.GetBatchStopUpdateActionResponse>;
    GetCompleteMigration(req: operations.GetCompleteMigrationRequest, config?: AxiosRequestConfig): Promise<operations.GetCompleteMigrationResponse>;
    GetCreateGlobalReplicationGroup(req: operations.GetCreateGlobalReplicationGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetCreateGlobalReplicationGroupResponse>;
    GetDecreaseNodeGroupsInGlobalReplicationGroup(req: operations.GetDecreaseNodeGroupsInGlobalReplicationGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDecreaseNodeGroupsInGlobalReplicationGroupResponse>;
    GetDeleteCacheCluster(req: operations.GetDeleteCacheClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteCacheClusterResponse>;
    GetDeleteCacheParameterGroup(req: operations.GetDeleteCacheParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteCacheParameterGroupResponse>;
    GetDeleteCacheSecurityGroup(req: operations.GetDeleteCacheSecurityGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteCacheSecurityGroupResponse>;
    GetDeleteCacheSubnetGroup(req: operations.GetDeleteCacheSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteCacheSubnetGroupResponse>;
    GetDeleteGlobalReplicationGroup(req: operations.GetDeleteGlobalReplicationGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteGlobalReplicationGroupResponse>;
    GetDeleteReplicationGroup(req: operations.GetDeleteReplicationGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteReplicationGroupResponse>;
    GetDeleteSnapshot(req: operations.GetDeleteSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteSnapshotResponse>;
    GetDeleteUser(req: operations.GetDeleteUserRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteUserResponse>;
    GetDeleteUserGroup(req: operations.GetDeleteUserGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteUserGroupResponse>;
    GetDescribeCacheClusters(req: operations.GetDescribeCacheClustersRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeCacheClustersResponse>;
    GetDescribeCacheEngineVersions(req: operations.GetDescribeCacheEngineVersionsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeCacheEngineVersionsResponse>;
    GetDescribeCacheParameterGroups(req: operations.GetDescribeCacheParameterGroupsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeCacheParameterGroupsResponse>;
    GetDescribeCacheParameters(req: operations.GetDescribeCacheParametersRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeCacheParametersResponse>;
    GetDescribeCacheSecurityGroups(req: operations.GetDescribeCacheSecurityGroupsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeCacheSecurityGroupsResponse>;
    GetDescribeCacheSubnetGroups(req: operations.GetDescribeCacheSubnetGroupsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeCacheSubnetGroupsResponse>;
    GetDescribeEngineDefaultParameters(req: operations.GetDescribeEngineDefaultParametersRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeEngineDefaultParametersResponse>;
    GetDescribeEvents(req: operations.GetDescribeEventsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeEventsResponse>;
    GetDescribeGlobalReplicationGroups(req: operations.GetDescribeGlobalReplicationGroupsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeGlobalReplicationGroupsResponse>;
    GetDescribeReplicationGroups(req: operations.GetDescribeReplicationGroupsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeReplicationGroupsResponse>;
    GetDescribeReservedCacheNodes(req: operations.GetDescribeReservedCacheNodesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeReservedCacheNodesResponse>;
    GetDescribeReservedCacheNodesOfferings(req: operations.GetDescribeReservedCacheNodesOfferingsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeReservedCacheNodesOfferingsResponse>;
    GetDescribeServiceUpdates(req: operations.GetDescribeServiceUpdatesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeServiceUpdatesResponse>;
    GetDescribeSnapshots(req: operations.GetDescribeSnapshotsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeSnapshotsResponse>;
    GetDescribeUpdateActions(req: operations.GetDescribeUpdateActionsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeUpdateActionsResponse>;
    GetDescribeUserGroups(req: operations.GetDescribeUserGroupsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeUserGroupsResponse>;
    GetDisassociateGlobalReplicationGroup(req: operations.GetDisassociateGlobalReplicationGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDisassociateGlobalReplicationGroupResponse>;
    GetFailoverGlobalReplicationGroup(req: operations.GetFailoverGlobalReplicationGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetFailoverGlobalReplicationGroupResponse>;
    GetListAllowedNodeTypeModifications(req: operations.GetListAllowedNodeTypeModificationsRequest, config?: AxiosRequestConfig): Promise<operations.GetListAllowedNodeTypeModificationsResponse>;
    GetListTagsForResource(req: operations.GetListTagsForResourceRequest, config?: AxiosRequestConfig): Promise<operations.GetListTagsForResourceResponse>;
    GetModifyCacheSubnetGroup(req: operations.GetModifyCacheSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyCacheSubnetGroupResponse>;
    GetModifyGlobalReplicationGroup(req: operations.GetModifyGlobalReplicationGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyGlobalReplicationGroupResponse>;
    GetModifyUser(req: operations.GetModifyUserRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyUserResponse>;
    GetModifyUserGroup(req: operations.GetModifyUserGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyUserGroupResponse>;
    GetRebalanceSlotsInGlobalReplicationGroup(req: operations.GetRebalanceSlotsInGlobalReplicationGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetRebalanceSlotsInGlobalReplicationGroupResponse>;
    GetRebootCacheCluster(req: operations.GetRebootCacheClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetRebootCacheClusterResponse>;
    GetRemoveTagsFromResource(req: operations.GetRemoveTagsFromResourceRequest, config?: AxiosRequestConfig): Promise<operations.GetRemoveTagsFromResourceResponse>;
    GetRevokeCacheSecurityGroupIngress(req: operations.GetRevokeCacheSecurityGroupIngressRequest, config?: AxiosRequestConfig): Promise<operations.GetRevokeCacheSecurityGroupIngressResponse>;
    GetTestFailover(req: operations.GetTestFailoverRequest, config?: AxiosRequestConfig): Promise<operations.GetTestFailoverResponse>;
    PostAddTagsToResource(req: operations.PostAddTagsToResourceRequest, config?: AxiosRequestConfig): Promise<operations.PostAddTagsToResourceResponse>;
    PostAuthorizeCacheSecurityGroupIngress(req: operations.PostAuthorizeCacheSecurityGroupIngressRequest, config?: AxiosRequestConfig): Promise<operations.PostAuthorizeCacheSecurityGroupIngressResponse>;
    PostBatchApplyUpdateAction(req: operations.PostBatchApplyUpdateActionRequest, config?: AxiosRequestConfig): Promise<operations.PostBatchApplyUpdateActionResponse>;
    PostBatchStopUpdateAction(req: operations.PostBatchStopUpdateActionRequest, config?: AxiosRequestConfig): Promise<operations.PostBatchStopUpdateActionResponse>;
    PostCompleteMigration(req: operations.PostCompleteMigrationRequest, config?: AxiosRequestConfig): Promise<operations.PostCompleteMigrationResponse>;
    PostCopySnapshot(req: operations.PostCopySnapshotRequest, config?: AxiosRequestConfig): Promise<operations.PostCopySnapshotResponse>;
    PostCreateCacheCluster(req: operations.PostCreateCacheClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateCacheClusterResponse>;
    PostCreateCacheParameterGroup(req: operations.PostCreateCacheParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateCacheParameterGroupResponse>;
    PostCreateCacheSecurityGroup(req: operations.PostCreateCacheSecurityGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateCacheSecurityGroupResponse>;
    PostCreateCacheSubnetGroup(req: operations.PostCreateCacheSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateCacheSubnetGroupResponse>;
    PostCreateGlobalReplicationGroup(req: operations.PostCreateGlobalReplicationGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateGlobalReplicationGroupResponse>;
    PostCreateReplicationGroup(req: operations.PostCreateReplicationGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateReplicationGroupResponse>;
    PostCreateSnapshot(req: operations.PostCreateSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateSnapshotResponse>;
    PostCreateUser(req: operations.PostCreateUserRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateUserResponse>;
    PostCreateUserGroup(req: operations.PostCreateUserGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateUserGroupResponse>;
    PostDecreaseNodeGroupsInGlobalReplicationGroup(req: operations.PostDecreaseNodeGroupsInGlobalReplicationGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDecreaseNodeGroupsInGlobalReplicationGroupResponse>;
    PostDecreaseReplicaCount(req: operations.PostDecreaseReplicaCountRequest, config?: AxiosRequestConfig): Promise<operations.PostDecreaseReplicaCountResponse>;
    PostDeleteCacheCluster(req: operations.PostDeleteCacheClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteCacheClusterResponse>;
    PostDeleteCacheParameterGroup(req: operations.PostDeleteCacheParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteCacheParameterGroupResponse>;
    PostDeleteCacheSecurityGroup(req: operations.PostDeleteCacheSecurityGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteCacheSecurityGroupResponse>;
    PostDeleteCacheSubnetGroup(req: operations.PostDeleteCacheSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteCacheSubnetGroupResponse>;
    PostDeleteGlobalReplicationGroup(req: operations.PostDeleteGlobalReplicationGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteGlobalReplicationGroupResponse>;
    PostDeleteReplicationGroup(req: operations.PostDeleteReplicationGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteReplicationGroupResponse>;
    PostDeleteSnapshot(req: operations.PostDeleteSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteSnapshotResponse>;
    PostDeleteUser(req: operations.PostDeleteUserRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteUserResponse>;
    PostDeleteUserGroup(req: operations.PostDeleteUserGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteUserGroupResponse>;
    PostDescribeCacheClusters(req: operations.PostDescribeCacheClustersRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeCacheClustersResponse>;
    PostDescribeCacheEngineVersions(req: operations.PostDescribeCacheEngineVersionsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeCacheEngineVersionsResponse>;
    PostDescribeCacheParameterGroups(req: operations.PostDescribeCacheParameterGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeCacheParameterGroupsResponse>;
    PostDescribeCacheParameters(req: operations.PostDescribeCacheParametersRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeCacheParametersResponse>;
    PostDescribeCacheSecurityGroups(req: operations.PostDescribeCacheSecurityGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeCacheSecurityGroupsResponse>;
    PostDescribeCacheSubnetGroups(req: operations.PostDescribeCacheSubnetGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeCacheSubnetGroupsResponse>;
    PostDescribeEngineDefaultParameters(req: operations.PostDescribeEngineDefaultParametersRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEngineDefaultParametersResponse>;
    PostDescribeEvents(req: operations.PostDescribeEventsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEventsResponse>;
    PostDescribeGlobalReplicationGroups(req: operations.PostDescribeGlobalReplicationGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeGlobalReplicationGroupsResponse>;
    PostDescribeReplicationGroups(req: operations.PostDescribeReplicationGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeReplicationGroupsResponse>;
    PostDescribeReservedCacheNodes(req: operations.PostDescribeReservedCacheNodesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeReservedCacheNodesResponse>;
    PostDescribeReservedCacheNodesOfferings(req: operations.PostDescribeReservedCacheNodesOfferingsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeReservedCacheNodesOfferingsResponse>;
    PostDescribeServiceUpdates(req: operations.PostDescribeServiceUpdatesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeServiceUpdatesResponse>;
    PostDescribeSnapshots(req: operations.PostDescribeSnapshotsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeSnapshotsResponse>;
    PostDescribeUpdateActions(req: operations.PostDescribeUpdateActionsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeUpdateActionsResponse>;
    PostDescribeUserGroups(req: operations.PostDescribeUserGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeUserGroupsResponse>;
    PostDescribeUsers(req: operations.PostDescribeUsersRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeUsersResponse>;
    PostDisassociateGlobalReplicationGroup(req: operations.PostDisassociateGlobalReplicationGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDisassociateGlobalReplicationGroupResponse>;
    PostFailoverGlobalReplicationGroup(req: operations.PostFailoverGlobalReplicationGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostFailoverGlobalReplicationGroupResponse>;
    PostIncreaseNodeGroupsInGlobalReplicationGroup(req: operations.PostIncreaseNodeGroupsInGlobalReplicationGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostIncreaseNodeGroupsInGlobalReplicationGroupResponse>;
    PostIncreaseReplicaCount(req: operations.PostIncreaseReplicaCountRequest, config?: AxiosRequestConfig): Promise<operations.PostIncreaseReplicaCountResponse>;
    PostListAllowedNodeTypeModifications(req: operations.PostListAllowedNodeTypeModificationsRequest, config?: AxiosRequestConfig): Promise<operations.PostListAllowedNodeTypeModificationsResponse>;
    PostListTagsForResource(req: operations.PostListTagsForResourceRequest, config?: AxiosRequestConfig): Promise<operations.PostListTagsForResourceResponse>;
    PostModifyCacheCluster(req: operations.PostModifyCacheClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyCacheClusterResponse>;
    PostModifyCacheParameterGroup(req: operations.PostModifyCacheParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyCacheParameterGroupResponse>;
    PostModifyCacheSubnetGroup(req: operations.PostModifyCacheSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyCacheSubnetGroupResponse>;
    PostModifyGlobalReplicationGroup(req: operations.PostModifyGlobalReplicationGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyGlobalReplicationGroupResponse>;
    PostModifyReplicationGroup(req: operations.PostModifyReplicationGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyReplicationGroupResponse>;
    PostModifyReplicationGroupShardConfiguration(req: operations.PostModifyReplicationGroupShardConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyReplicationGroupShardConfigurationResponse>;
    PostModifyUser(req: operations.PostModifyUserRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyUserResponse>;
    PostModifyUserGroup(req: operations.PostModifyUserGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyUserGroupResponse>;
    PostPurchaseReservedCacheNodesOffering(req: operations.PostPurchaseReservedCacheNodesOfferingRequest, config?: AxiosRequestConfig): Promise<operations.PostPurchaseReservedCacheNodesOfferingResponse>;
    PostRebalanceSlotsInGlobalReplicationGroup(req: operations.PostRebalanceSlotsInGlobalReplicationGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostRebalanceSlotsInGlobalReplicationGroupResponse>;
    PostRebootCacheCluster(req: operations.PostRebootCacheClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostRebootCacheClusterResponse>;
    PostRemoveTagsFromResource(req: operations.PostRemoveTagsFromResourceRequest, config?: AxiosRequestConfig): Promise<operations.PostRemoveTagsFromResourceResponse>;
    PostResetCacheParameterGroup(req: operations.PostResetCacheParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostResetCacheParameterGroupResponse>;
    PostRevokeCacheSecurityGroupIngress(req: operations.PostRevokeCacheSecurityGroupIngressRequest, config?: AxiosRequestConfig): Promise<operations.PostRevokeCacheSecurityGroupIngressResponse>;
    PostStartMigration(req: operations.PostStartMigrationRequest, config?: AxiosRequestConfig): Promise<operations.PostStartMigrationResponse>;
    PostTestFailover(req: operations.PostTestFailoverRequest, config?: AxiosRequestConfig): Promise<operations.PostTestFailoverResponse>;
}
export {};
