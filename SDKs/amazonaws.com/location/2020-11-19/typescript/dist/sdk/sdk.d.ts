import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
import { Security } from "./models/shared";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare function WithSecurity(security: Security): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    AssociateTrackerConsumer(req: operations.AssociateTrackerConsumerRequest, config?: AxiosRequestConfig): Promise<operations.AssociateTrackerConsumerResponse>;
    BatchDeleteDevicePositionHistory(req: operations.BatchDeleteDevicePositionHistoryRequest, config?: AxiosRequestConfig): Promise<operations.BatchDeleteDevicePositionHistoryResponse>;
    BatchDeleteGeofence(req: operations.BatchDeleteGeofenceRequest, config?: AxiosRequestConfig): Promise<operations.BatchDeleteGeofenceResponse>;
    BatchEvaluateGeofences(req: operations.BatchEvaluateGeofencesRequest, config?: AxiosRequestConfig): Promise<operations.BatchEvaluateGeofencesResponse>;
    BatchGetDevicePosition(req: operations.BatchGetDevicePositionRequest, config?: AxiosRequestConfig): Promise<operations.BatchGetDevicePositionResponse>;
    BatchPutGeofence(req: operations.BatchPutGeofenceRequest, config?: AxiosRequestConfig): Promise<operations.BatchPutGeofenceResponse>;
    BatchUpdateDevicePosition(req: operations.BatchUpdateDevicePositionRequest, config?: AxiosRequestConfig): Promise<operations.BatchUpdateDevicePositionResponse>;
    CalculateRoute(req: operations.CalculateRouteRequest, config?: AxiosRequestConfig): Promise<operations.CalculateRouteResponse>;
    CreateGeofenceCollection(req: operations.CreateGeofenceCollectionRequest, config?: AxiosRequestConfig): Promise<operations.CreateGeofenceCollectionResponse>;
    CreateMap(req: operations.CreateMapRequest, config?: AxiosRequestConfig): Promise<operations.CreateMapResponse>;
    CreatePlaceIndex(req: operations.CreatePlaceIndexRequest, config?: AxiosRequestConfig): Promise<operations.CreatePlaceIndexResponse>;
    CreateRouteCalculator(req: operations.CreateRouteCalculatorRequest, config?: AxiosRequestConfig): Promise<operations.CreateRouteCalculatorResponse>;
    CreateTracker(req: operations.CreateTrackerRequest, config?: AxiosRequestConfig): Promise<operations.CreateTrackerResponse>;
    DeleteGeofenceCollection(req: operations.DeleteGeofenceCollectionRequest, config?: AxiosRequestConfig): Promise<operations.DeleteGeofenceCollectionResponse>;
    DeleteMap(req: operations.DeleteMapRequest, config?: AxiosRequestConfig): Promise<operations.DeleteMapResponse>;
    DeletePlaceIndex(req: operations.DeletePlaceIndexRequest, config?: AxiosRequestConfig): Promise<operations.DeletePlaceIndexResponse>;
    DeleteRouteCalculator(req: operations.DeleteRouteCalculatorRequest, config?: AxiosRequestConfig): Promise<operations.DeleteRouteCalculatorResponse>;
    DeleteTracker(req: operations.DeleteTrackerRequest, config?: AxiosRequestConfig): Promise<operations.DeleteTrackerResponse>;
    DescribeGeofenceCollection(req: operations.DescribeGeofenceCollectionRequest, config?: AxiosRequestConfig): Promise<operations.DescribeGeofenceCollectionResponse>;
    DescribeMap(req: operations.DescribeMapRequest, config?: AxiosRequestConfig): Promise<operations.DescribeMapResponse>;
    DescribePlaceIndex(req: operations.DescribePlaceIndexRequest, config?: AxiosRequestConfig): Promise<operations.DescribePlaceIndexResponse>;
    DescribeRouteCalculator(req: operations.DescribeRouteCalculatorRequest, config?: AxiosRequestConfig): Promise<operations.DescribeRouteCalculatorResponse>;
    DescribeTracker(req: operations.DescribeTrackerRequest, config?: AxiosRequestConfig): Promise<operations.DescribeTrackerResponse>;
    DisassociateTrackerConsumer(req: operations.DisassociateTrackerConsumerRequest, config?: AxiosRequestConfig): Promise<operations.DisassociateTrackerConsumerResponse>;
    GetDevicePosition(req: operations.GetDevicePositionRequest, config?: AxiosRequestConfig): Promise<operations.GetDevicePositionResponse>;
    GetDevicePositionHistory(req: operations.GetDevicePositionHistoryRequest, config?: AxiosRequestConfig): Promise<operations.GetDevicePositionHistoryResponse>;
    GetGeofence(req: operations.GetGeofenceRequest, config?: AxiosRequestConfig): Promise<operations.GetGeofenceResponse>;
    GetMapGlyphs(req: operations.GetMapGlyphsRequest, config?: AxiosRequestConfig): Promise<operations.GetMapGlyphsResponse>;
    GetMapSprites(req: operations.GetMapSpritesRequest, config?: AxiosRequestConfig): Promise<operations.GetMapSpritesResponse>;
    GetMapStyleDescriptor(req: operations.GetMapStyleDescriptorRequest, config?: AxiosRequestConfig): Promise<operations.GetMapStyleDescriptorResponse>;
    GetMapTile(req: operations.GetMapTileRequest, config?: AxiosRequestConfig): Promise<operations.GetMapTileResponse>;
    ListDevicePositions(req: operations.ListDevicePositionsRequest, config?: AxiosRequestConfig): Promise<operations.ListDevicePositionsResponse>;
    ListGeofenceCollections(req: operations.ListGeofenceCollectionsRequest, config?: AxiosRequestConfig): Promise<operations.ListGeofenceCollectionsResponse>;
    ListGeofences(req: operations.ListGeofencesRequest, config?: AxiosRequestConfig): Promise<operations.ListGeofencesResponse>;
    ListMaps(req: operations.ListMapsRequest, config?: AxiosRequestConfig): Promise<operations.ListMapsResponse>;
    ListPlaceIndexes(req: operations.ListPlaceIndexesRequest, config?: AxiosRequestConfig): Promise<operations.ListPlaceIndexesResponse>;
    ListRouteCalculators(req: operations.ListRouteCalculatorsRequest, config?: AxiosRequestConfig): Promise<operations.ListRouteCalculatorsResponse>;
    ListTagsForResource(req: operations.ListTagsForResourceRequest, config?: AxiosRequestConfig): Promise<operations.ListTagsForResourceResponse>;
    ListTrackerConsumers(req: operations.ListTrackerConsumersRequest, config?: AxiosRequestConfig): Promise<operations.ListTrackerConsumersResponse>;
    ListTrackers(req: operations.ListTrackersRequest, config?: AxiosRequestConfig): Promise<operations.ListTrackersResponse>;
    PutGeofence(req: operations.PutGeofenceRequest, config?: AxiosRequestConfig): Promise<operations.PutGeofenceResponse>;
    SearchPlaceIndexForPosition(req: operations.SearchPlaceIndexForPositionRequest, config?: AxiosRequestConfig): Promise<operations.SearchPlaceIndexForPositionResponse>;
    SearchPlaceIndexForText(req: operations.SearchPlaceIndexForTextRequest, config?: AxiosRequestConfig): Promise<operations.SearchPlaceIndexForTextResponse>;
    TagResource(req: operations.TagResourceRequest, config?: AxiosRequestConfig): Promise<operations.TagResourceResponse>;
    UntagResource(req: operations.UntagResourceRequest, config?: AxiosRequestConfig): Promise<operations.UntagResourceResponse>;
    UpdateGeofenceCollection(req: operations.UpdateGeofenceCollectionRequest, config?: AxiosRequestConfig): Promise<operations.UpdateGeofenceCollectionResponse>;
    UpdateMap(req: operations.UpdateMapRequest, config?: AxiosRequestConfig): Promise<operations.UpdateMapResponse>;
    UpdatePlaceIndex(req: operations.UpdatePlaceIndexRequest, config?: AxiosRequestConfig): Promise<operations.UpdatePlaceIndexResponse>;
    UpdateRouteCalculator(req: operations.UpdateRouteCalculatorRequest, config?: AxiosRequestConfig): Promise<operations.UpdateRouteCalculatorResponse>;
    UpdateTracker(req: operations.UpdateTrackerRequest, config?: AxiosRequestConfig): Promise<operations.UpdateTrackerResponse>;
}
export {};
