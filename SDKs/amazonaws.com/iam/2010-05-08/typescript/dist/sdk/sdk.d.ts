import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
import { Security } from "./models/shared";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare function WithSecurity(security: Security): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    GetAddClientIdToOpenIdConnectProvider(req: operations.GetAddClientIdToOpenIdConnectProviderRequest, config?: AxiosRequestConfig): Promise<operations.GetAddClientIdToOpenIdConnectProviderResponse>;
    GetAddRoleToInstanceProfile(req: operations.GetAddRoleToInstanceProfileRequest, config?: AxiosRequestConfig): Promise<operations.GetAddRoleToInstanceProfileResponse>;
    GetAddUserToGroup(req: operations.GetAddUserToGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetAddUserToGroupResponse>;
    GetAttachGroupPolicy(req: operations.GetAttachGroupPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetAttachGroupPolicyResponse>;
    GetAttachRolePolicy(req: operations.GetAttachRolePolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetAttachRolePolicyResponse>;
    GetAttachUserPolicy(req: operations.GetAttachUserPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetAttachUserPolicyResponse>;
    GetChangePassword(req: operations.GetChangePasswordRequest, config?: AxiosRequestConfig): Promise<operations.GetChangePasswordResponse>;
    GetCreateAccessKey(req: operations.GetCreateAccessKeyRequest, config?: AxiosRequestConfig): Promise<operations.GetCreateAccessKeyResponse>;
    GetCreateAccountAlias(req: operations.GetCreateAccountAliasRequest, config?: AxiosRequestConfig): Promise<operations.GetCreateAccountAliasResponse>;
    GetCreateGroup(req: operations.GetCreateGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetCreateGroupResponse>;
    GetCreateLoginProfile(req: operations.GetCreateLoginProfileRequest, config?: AxiosRequestConfig): Promise<operations.GetCreateLoginProfileResponse>;
    GetCreatePolicyVersion(req: operations.GetCreatePolicyVersionRequest, config?: AxiosRequestConfig): Promise<operations.GetCreatePolicyVersionResponse>;
    GetCreateServiceLinkedRole(req: operations.GetCreateServiceLinkedRoleRequest, config?: AxiosRequestConfig): Promise<operations.GetCreateServiceLinkedRoleResponse>;
    GetCreateServiceSpecificCredential(req: operations.GetCreateServiceSpecificCredentialRequest, config?: AxiosRequestConfig): Promise<operations.GetCreateServiceSpecificCredentialResponse>;
    GetDeactivateMfaDevice(req: operations.GetDeactivateMfaDeviceRequest, config?: AxiosRequestConfig): Promise<operations.GetDeactivateMfaDeviceResponse>;
    GetDeleteAccessKey(req: operations.GetDeleteAccessKeyRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteAccessKeyResponse>;
    GetDeleteAccountAlias(req: operations.GetDeleteAccountAliasRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteAccountAliasResponse>;
    GetDeleteAccountPasswordPolicy(req: operations.GetDeleteAccountPasswordPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteAccountPasswordPolicyResponse>;
    GetDeleteGroup(req: operations.GetDeleteGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteGroupResponse>;
    GetDeleteGroupPolicy(req: operations.GetDeleteGroupPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteGroupPolicyResponse>;
    GetDeleteInstanceProfile(req: operations.GetDeleteInstanceProfileRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteInstanceProfileResponse>;
    GetDeleteLoginProfile(req: operations.GetDeleteLoginProfileRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteLoginProfileResponse>;
    GetDeleteOpenIdConnectProvider(req: operations.GetDeleteOpenIdConnectProviderRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteOpenIdConnectProviderResponse>;
    GetDeletePolicy(req: operations.GetDeletePolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetDeletePolicyResponse>;
    GetDeletePolicyVersion(req: operations.GetDeletePolicyVersionRequest, config?: AxiosRequestConfig): Promise<operations.GetDeletePolicyVersionResponse>;
    GetDeleteRole(req: operations.GetDeleteRoleRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteRoleResponse>;
    GetDeleteRolePermissionsBoundary(req: operations.GetDeleteRolePermissionsBoundaryRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteRolePermissionsBoundaryResponse>;
    GetDeleteRolePolicy(req: operations.GetDeleteRolePolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteRolePolicyResponse>;
    GetDeleteSamlProvider(req: operations.GetDeleteSamlProviderRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteSamlProviderResponse>;
    GetDeleteSshPublicKey(req: operations.GetDeleteSshPublicKeyRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteSshPublicKeyResponse>;
    GetDeleteServerCertificate(req: operations.GetDeleteServerCertificateRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteServerCertificateResponse>;
    GetDeleteServiceLinkedRole(req: operations.GetDeleteServiceLinkedRoleRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteServiceLinkedRoleResponse>;
    GetDeleteServiceSpecificCredential(req: operations.GetDeleteServiceSpecificCredentialRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteServiceSpecificCredentialResponse>;
    GetDeleteSigningCertificate(req: operations.GetDeleteSigningCertificateRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteSigningCertificateResponse>;
    GetDeleteUser(req: operations.GetDeleteUserRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteUserResponse>;
    GetDeleteUserPermissionsBoundary(req: operations.GetDeleteUserPermissionsBoundaryRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteUserPermissionsBoundaryResponse>;
    GetDeleteUserPolicy(req: operations.GetDeleteUserPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteUserPolicyResponse>;
    GetDeleteVirtualMfaDevice(req: operations.GetDeleteVirtualMfaDeviceRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteVirtualMfaDeviceResponse>;
    GetDetachGroupPolicy(req: operations.GetDetachGroupPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetDetachGroupPolicyResponse>;
    GetDetachRolePolicy(req: operations.GetDetachRolePolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetDetachRolePolicyResponse>;
    GetDetachUserPolicy(req: operations.GetDetachUserPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetDetachUserPolicyResponse>;
    GetEnableMfaDevice(req: operations.GetEnableMfaDeviceRequest, config?: AxiosRequestConfig): Promise<operations.GetEnableMfaDeviceResponse>;
    GetGenerateCredentialReport(req: operations.GetGenerateCredentialReportRequest, config?: AxiosRequestConfig): Promise<operations.GetGenerateCredentialReportResponse>;
    GetGenerateOrganizationsAccessReport(req: operations.GetGenerateOrganizationsAccessReportRequest, config?: AxiosRequestConfig): Promise<operations.GetGenerateOrganizationsAccessReportResponse>;
    GetGenerateServiceLastAccessedDetails(req: operations.GetGenerateServiceLastAccessedDetailsRequest, config?: AxiosRequestConfig): Promise<operations.GetGenerateServiceLastAccessedDetailsResponse>;
    GetGetAccessKeyLastUsed(req: operations.GetGetAccessKeyLastUsedRequest, config?: AxiosRequestConfig): Promise<operations.GetGetAccessKeyLastUsedResponse>;
    GetGetAccountAuthorizationDetails(req: operations.GetGetAccountAuthorizationDetailsRequest, config?: AxiosRequestConfig): Promise<operations.GetGetAccountAuthorizationDetailsResponse>;
    GetGetAccountPasswordPolicy(req: operations.GetGetAccountPasswordPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetGetAccountPasswordPolicyResponse>;
    GetGetAccountSummary(req: operations.GetGetAccountSummaryRequest, config?: AxiosRequestConfig): Promise<operations.GetGetAccountSummaryResponse>;
    GetGetContextKeysForCustomPolicy(req: operations.GetGetContextKeysForCustomPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetGetContextKeysForCustomPolicyResponse>;
    GetGetContextKeysForPrincipalPolicy(req: operations.GetGetContextKeysForPrincipalPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetGetContextKeysForPrincipalPolicyResponse>;
    GetGetCredentialReport(req: operations.GetGetCredentialReportRequest, config?: AxiosRequestConfig): Promise<operations.GetGetCredentialReportResponse>;
    GetGetGroup(req: operations.GetGetGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetGetGroupResponse>;
    GetGetGroupPolicy(req: operations.GetGetGroupPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetGetGroupPolicyResponse>;
    GetGetInstanceProfile(req: operations.GetGetInstanceProfileRequest, config?: AxiosRequestConfig): Promise<operations.GetGetInstanceProfileResponse>;
    GetGetLoginProfile(req: operations.GetGetLoginProfileRequest, config?: AxiosRequestConfig): Promise<operations.GetGetLoginProfileResponse>;
    GetGetOpenIdConnectProvider(req: operations.GetGetOpenIdConnectProviderRequest, config?: AxiosRequestConfig): Promise<operations.GetGetOpenIdConnectProviderResponse>;
    GetGetOrganizationsAccessReport(req: operations.GetGetOrganizationsAccessReportRequest, config?: AxiosRequestConfig): Promise<operations.GetGetOrganizationsAccessReportResponse>;
    GetGetPolicy(req: operations.GetGetPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetGetPolicyResponse>;
    GetGetPolicyVersion(req: operations.GetGetPolicyVersionRequest, config?: AxiosRequestConfig): Promise<operations.GetGetPolicyVersionResponse>;
    GetGetRole(req: operations.GetGetRoleRequest, config?: AxiosRequestConfig): Promise<operations.GetGetRoleResponse>;
    GetGetRolePolicy(req: operations.GetGetRolePolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetGetRolePolicyResponse>;
    GetGetSamlProvider(req: operations.GetGetSamlProviderRequest, config?: AxiosRequestConfig): Promise<operations.GetGetSamlProviderResponse>;
    GetGetSshPublicKey(req: operations.GetGetSshPublicKeyRequest, config?: AxiosRequestConfig): Promise<operations.GetGetSshPublicKeyResponse>;
    GetGetServerCertificate(req: operations.GetGetServerCertificateRequest, config?: AxiosRequestConfig): Promise<operations.GetGetServerCertificateResponse>;
    GetGetServiceLastAccessedDetails(req: operations.GetGetServiceLastAccessedDetailsRequest, config?: AxiosRequestConfig): Promise<operations.GetGetServiceLastAccessedDetailsResponse>;
    GetGetServiceLastAccessedDetailsWithEntities(req: operations.GetGetServiceLastAccessedDetailsWithEntitiesRequest, config?: AxiosRequestConfig): Promise<operations.GetGetServiceLastAccessedDetailsWithEntitiesResponse>;
    GetGetServiceLinkedRoleDeletionStatus(req: operations.GetGetServiceLinkedRoleDeletionStatusRequest, config?: AxiosRequestConfig): Promise<operations.GetGetServiceLinkedRoleDeletionStatusResponse>;
    GetGetUser(req: operations.GetGetUserRequest, config?: AxiosRequestConfig): Promise<operations.GetGetUserResponse>;
    GetGetUserPolicy(req: operations.GetGetUserPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetGetUserPolicyResponse>;
    GetListAccessKeys(req: operations.GetListAccessKeysRequest, config?: AxiosRequestConfig): Promise<operations.GetListAccessKeysResponse>;
    GetListAccountAliases(req: operations.GetListAccountAliasesRequest, config?: AxiosRequestConfig): Promise<operations.GetListAccountAliasesResponse>;
    GetListAttachedGroupPolicies(req: operations.GetListAttachedGroupPoliciesRequest, config?: AxiosRequestConfig): Promise<operations.GetListAttachedGroupPoliciesResponse>;
    GetListAttachedRolePolicies(req: operations.GetListAttachedRolePoliciesRequest, config?: AxiosRequestConfig): Promise<operations.GetListAttachedRolePoliciesResponse>;
    GetListAttachedUserPolicies(req: operations.GetListAttachedUserPoliciesRequest, config?: AxiosRequestConfig): Promise<operations.GetListAttachedUserPoliciesResponse>;
    GetListEntitiesForPolicy(req: operations.GetListEntitiesForPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetListEntitiesForPolicyResponse>;
    GetListGroupPolicies(req: operations.GetListGroupPoliciesRequest, config?: AxiosRequestConfig): Promise<operations.GetListGroupPoliciesResponse>;
    GetListGroups(req: operations.GetListGroupsRequest, config?: AxiosRequestConfig): Promise<operations.GetListGroupsResponse>;
    GetListGroupsForUser(req: operations.GetListGroupsForUserRequest, config?: AxiosRequestConfig): Promise<operations.GetListGroupsForUserResponse>;
    GetListInstanceProfileTags(req: operations.GetListInstanceProfileTagsRequest, config?: AxiosRequestConfig): Promise<operations.GetListInstanceProfileTagsResponse>;
    GetListInstanceProfiles(req: operations.GetListInstanceProfilesRequest, config?: AxiosRequestConfig): Promise<operations.GetListInstanceProfilesResponse>;
    GetListInstanceProfilesForRole(req: operations.GetListInstanceProfilesForRoleRequest, config?: AxiosRequestConfig): Promise<operations.GetListInstanceProfilesForRoleResponse>;
    GetListMfaDeviceTags(req: operations.GetListMfaDeviceTagsRequest, config?: AxiosRequestConfig): Promise<operations.GetListMfaDeviceTagsResponse>;
    GetListMfaDevices(req: operations.GetListMfaDevicesRequest, config?: AxiosRequestConfig): Promise<operations.GetListMfaDevicesResponse>;
    GetListOpenIdConnectProviderTags(req: operations.GetListOpenIdConnectProviderTagsRequest, config?: AxiosRequestConfig): Promise<operations.GetListOpenIdConnectProviderTagsResponse>;
    GetListOpenIdConnectProviders(req: operations.GetListOpenIdConnectProvidersRequest, config?: AxiosRequestConfig): Promise<operations.GetListOpenIdConnectProvidersResponse>;
    GetListPolicies(req: operations.GetListPoliciesRequest, config?: AxiosRequestConfig): Promise<operations.GetListPoliciesResponse>;
    GetListPoliciesGrantingServiceAccess(req: operations.GetListPoliciesGrantingServiceAccessRequest, config?: AxiosRequestConfig): Promise<operations.GetListPoliciesGrantingServiceAccessResponse>;
    GetListPolicyTags(req: operations.GetListPolicyTagsRequest, config?: AxiosRequestConfig): Promise<operations.GetListPolicyTagsResponse>;
    GetListPolicyVersions(req: operations.GetListPolicyVersionsRequest, config?: AxiosRequestConfig): Promise<operations.GetListPolicyVersionsResponse>;
    GetListRolePolicies(req: operations.GetListRolePoliciesRequest, config?: AxiosRequestConfig): Promise<operations.GetListRolePoliciesResponse>;
    GetListRoleTags(req: operations.GetListRoleTagsRequest, config?: AxiosRequestConfig): Promise<operations.GetListRoleTagsResponse>;
    GetListRoles(req: operations.GetListRolesRequest, config?: AxiosRequestConfig): Promise<operations.GetListRolesResponse>;
    GetListSamlProviderTags(req: operations.GetListSamlProviderTagsRequest, config?: AxiosRequestConfig): Promise<operations.GetListSamlProviderTagsResponse>;
    GetListSamlProviders(req: operations.GetListSamlProvidersRequest, config?: AxiosRequestConfig): Promise<operations.GetListSamlProvidersResponse>;
    GetListSshPublicKeys(req: operations.GetListSshPublicKeysRequest, config?: AxiosRequestConfig): Promise<operations.GetListSshPublicKeysResponse>;
    GetListServerCertificateTags(req: operations.GetListServerCertificateTagsRequest, config?: AxiosRequestConfig): Promise<operations.GetListServerCertificateTagsResponse>;
    GetListServerCertificates(req: operations.GetListServerCertificatesRequest, config?: AxiosRequestConfig): Promise<operations.GetListServerCertificatesResponse>;
    GetListServiceSpecificCredentials(req: operations.GetListServiceSpecificCredentialsRequest, config?: AxiosRequestConfig): Promise<operations.GetListServiceSpecificCredentialsResponse>;
    GetListSigningCertificates(req: operations.GetListSigningCertificatesRequest, config?: AxiosRequestConfig): Promise<operations.GetListSigningCertificatesResponse>;
    GetListUserPolicies(req: operations.GetListUserPoliciesRequest, config?: AxiosRequestConfig): Promise<operations.GetListUserPoliciesResponse>;
    GetListUserTags(req: operations.GetListUserTagsRequest, config?: AxiosRequestConfig): Promise<operations.GetListUserTagsResponse>;
    GetListUsers(req: operations.GetListUsersRequest, config?: AxiosRequestConfig): Promise<operations.GetListUsersResponse>;
    GetListVirtualMfaDevices(req: operations.GetListVirtualMfaDevicesRequest, config?: AxiosRequestConfig): Promise<operations.GetListVirtualMfaDevicesResponse>;
    GetPutGroupPolicy(req: operations.GetPutGroupPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetPutGroupPolicyResponse>;
    GetPutRolePermissionsBoundary(req: operations.GetPutRolePermissionsBoundaryRequest, config?: AxiosRequestConfig): Promise<operations.GetPutRolePermissionsBoundaryResponse>;
    GetPutRolePolicy(req: operations.GetPutRolePolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetPutRolePolicyResponse>;
    GetPutUserPermissionsBoundary(req: operations.GetPutUserPermissionsBoundaryRequest, config?: AxiosRequestConfig): Promise<operations.GetPutUserPermissionsBoundaryResponse>;
    GetPutUserPolicy(req: operations.GetPutUserPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetPutUserPolicyResponse>;
    GetRemoveClientIdFromOpenIdConnectProvider(req: operations.GetRemoveClientIdFromOpenIdConnectProviderRequest, config?: AxiosRequestConfig): Promise<operations.GetRemoveClientIdFromOpenIdConnectProviderResponse>;
    GetRemoveRoleFromInstanceProfile(req: operations.GetRemoveRoleFromInstanceProfileRequest, config?: AxiosRequestConfig): Promise<operations.GetRemoveRoleFromInstanceProfileResponse>;
    GetRemoveUserFromGroup(req: operations.GetRemoveUserFromGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetRemoveUserFromGroupResponse>;
    GetResetServiceSpecificCredential(req: operations.GetResetServiceSpecificCredentialRequest, config?: AxiosRequestConfig): Promise<operations.GetResetServiceSpecificCredentialResponse>;
    GetResyncMfaDevice(req: operations.GetResyncMfaDeviceRequest, config?: AxiosRequestConfig): Promise<operations.GetResyncMfaDeviceResponse>;
    GetSetDefaultPolicyVersion(req: operations.GetSetDefaultPolicyVersionRequest, config?: AxiosRequestConfig): Promise<operations.GetSetDefaultPolicyVersionResponse>;
    GetSetSecurityTokenServicePreferences(req: operations.GetSetSecurityTokenServicePreferencesRequest, config?: AxiosRequestConfig): Promise<operations.GetSetSecurityTokenServicePreferencesResponse>;
    GetUntagInstanceProfile(req: operations.GetUntagInstanceProfileRequest, config?: AxiosRequestConfig): Promise<operations.GetUntagInstanceProfileResponse>;
    GetUntagMfaDevice(req: operations.GetUntagMfaDeviceRequest, config?: AxiosRequestConfig): Promise<operations.GetUntagMfaDeviceResponse>;
    GetUntagOpenIdConnectProvider(req: operations.GetUntagOpenIdConnectProviderRequest, config?: AxiosRequestConfig): Promise<operations.GetUntagOpenIdConnectProviderResponse>;
    GetUntagPolicy(req: operations.GetUntagPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetUntagPolicyResponse>;
    GetUntagRole(req: operations.GetUntagRoleRequest, config?: AxiosRequestConfig): Promise<operations.GetUntagRoleResponse>;
    GetUntagSamlProvider(req: operations.GetUntagSamlProviderRequest, config?: AxiosRequestConfig): Promise<operations.GetUntagSamlProviderResponse>;
    GetUntagServerCertificate(req: operations.GetUntagServerCertificateRequest, config?: AxiosRequestConfig): Promise<operations.GetUntagServerCertificateResponse>;
    GetUntagUser(req: operations.GetUntagUserRequest, config?: AxiosRequestConfig): Promise<operations.GetUntagUserResponse>;
    GetUpdateAccessKey(req: operations.GetUpdateAccessKeyRequest, config?: AxiosRequestConfig): Promise<operations.GetUpdateAccessKeyResponse>;
    GetUpdateAccountPasswordPolicy(req: operations.GetUpdateAccountPasswordPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetUpdateAccountPasswordPolicyResponse>;
    GetUpdateAssumeRolePolicy(req: operations.GetUpdateAssumeRolePolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetUpdateAssumeRolePolicyResponse>;
    GetUpdateGroup(req: operations.GetUpdateGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetUpdateGroupResponse>;
    GetUpdateLoginProfile(req: operations.GetUpdateLoginProfileRequest, config?: AxiosRequestConfig): Promise<operations.GetUpdateLoginProfileResponse>;
    GetUpdateOpenIdConnectProviderThumbprint(req: operations.GetUpdateOpenIdConnectProviderThumbprintRequest, config?: AxiosRequestConfig): Promise<operations.GetUpdateOpenIdConnectProviderThumbprintResponse>;
    GetUpdateRole(req: operations.GetUpdateRoleRequest, config?: AxiosRequestConfig): Promise<operations.GetUpdateRoleResponse>;
    GetUpdateRoleDescription(req: operations.GetUpdateRoleDescriptionRequest, config?: AxiosRequestConfig): Promise<operations.GetUpdateRoleDescriptionResponse>;
    GetUpdateSamlProvider(req: operations.GetUpdateSamlProviderRequest, config?: AxiosRequestConfig): Promise<operations.GetUpdateSamlProviderResponse>;
    GetUpdateSshPublicKey(req: operations.GetUpdateSshPublicKeyRequest, config?: AxiosRequestConfig): Promise<operations.GetUpdateSshPublicKeyResponse>;
    GetUpdateServerCertificate(req: operations.GetUpdateServerCertificateRequest, config?: AxiosRequestConfig): Promise<operations.GetUpdateServerCertificateResponse>;
    GetUpdateServiceSpecificCredential(req: operations.GetUpdateServiceSpecificCredentialRequest, config?: AxiosRequestConfig): Promise<operations.GetUpdateServiceSpecificCredentialResponse>;
    GetUpdateSigningCertificate(req: operations.GetUpdateSigningCertificateRequest, config?: AxiosRequestConfig): Promise<operations.GetUpdateSigningCertificateResponse>;
    GetUpdateUser(req: operations.GetUpdateUserRequest, config?: AxiosRequestConfig): Promise<operations.GetUpdateUserResponse>;
    GetUploadSshPublicKey(req: operations.GetUploadSshPublicKeyRequest, config?: AxiosRequestConfig): Promise<operations.GetUploadSshPublicKeyResponse>;
    GetUploadSigningCertificate(req: operations.GetUploadSigningCertificateRequest, config?: AxiosRequestConfig): Promise<operations.GetUploadSigningCertificateResponse>;
    PostAddClientIdToOpenIdConnectProvider(req: operations.PostAddClientIdToOpenIdConnectProviderRequest, config?: AxiosRequestConfig): Promise<operations.PostAddClientIdToOpenIdConnectProviderResponse>;
    PostAddRoleToInstanceProfile(req: operations.PostAddRoleToInstanceProfileRequest, config?: AxiosRequestConfig): Promise<operations.PostAddRoleToInstanceProfileResponse>;
    PostAddUserToGroup(req: operations.PostAddUserToGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostAddUserToGroupResponse>;
    PostAttachGroupPolicy(req: operations.PostAttachGroupPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostAttachGroupPolicyResponse>;
    PostAttachRolePolicy(req: operations.PostAttachRolePolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostAttachRolePolicyResponse>;
    PostAttachUserPolicy(req: operations.PostAttachUserPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostAttachUserPolicyResponse>;
    PostChangePassword(req: operations.PostChangePasswordRequest, config?: AxiosRequestConfig): Promise<operations.PostChangePasswordResponse>;
    PostCreateAccessKey(req: operations.PostCreateAccessKeyRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateAccessKeyResponse>;
    PostCreateAccountAlias(req: operations.PostCreateAccountAliasRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateAccountAliasResponse>;
    PostCreateGroup(req: operations.PostCreateGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateGroupResponse>;
    PostCreateInstanceProfile(req: operations.PostCreateInstanceProfileRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateInstanceProfileResponse>;
    PostCreateLoginProfile(req: operations.PostCreateLoginProfileRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateLoginProfileResponse>;
    PostCreateOpenIdConnectProvider(req: operations.PostCreateOpenIdConnectProviderRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateOpenIdConnectProviderResponse>;
    PostCreatePolicy(req: operations.PostCreatePolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostCreatePolicyResponse>;
    PostCreatePolicyVersion(req: operations.PostCreatePolicyVersionRequest, config?: AxiosRequestConfig): Promise<operations.PostCreatePolicyVersionResponse>;
    PostCreateRole(req: operations.PostCreateRoleRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateRoleResponse>;
    PostCreateSamlProvider(req: operations.PostCreateSamlProviderRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateSamlProviderResponse>;
    PostCreateServiceLinkedRole(req: operations.PostCreateServiceLinkedRoleRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateServiceLinkedRoleResponse>;
    PostCreateServiceSpecificCredential(req: operations.PostCreateServiceSpecificCredentialRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateServiceSpecificCredentialResponse>;
    PostCreateUser(req: operations.PostCreateUserRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateUserResponse>;
    PostCreateVirtualMfaDevice(req: operations.PostCreateVirtualMfaDeviceRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateVirtualMfaDeviceResponse>;
    PostDeactivateMfaDevice(req: operations.PostDeactivateMfaDeviceRequest, config?: AxiosRequestConfig): Promise<operations.PostDeactivateMfaDeviceResponse>;
    PostDeleteAccessKey(req: operations.PostDeleteAccessKeyRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteAccessKeyResponse>;
    PostDeleteAccountAlias(req: operations.PostDeleteAccountAliasRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteAccountAliasResponse>;
    PostDeleteAccountPasswordPolicy(req: operations.PostDeleteAccountPasswordPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteAccountPasswordPolicyResponse>;
    PostDeleteGroup(req: operations.PostDeleteGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteGroupResponse>;
    PostDeleteGroupPolicy(req: operations.PostDeleteGroupPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteGroupPolicyResponse>;
    PostDeleteInstanceProfile(req: operations.PostDeleteInstanceProfileRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteInstanceProfileResponse>;
    PostDeleteLoginProfile(req: operations.PostDeleteLoginProfileRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteLoginProfileResponse>;
    PostDeleteOpenIdConnectProvider(req: operations.PostDeleteOpenIdConnectProviderRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteOpenIdConnectProviderResponse>;
    PostDeletePolicy(req: operations.PostDeletePolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostDeletePolicyResponse>;
    PostDeletePolicyVersion(req: operations.PostDeletePolicyVersionRequest, config?: AxiosRequestConfig): Promise<operations.PostDeletePolicyVersionResponse>;
    PostDeleteRole(req: operations.PostDeleteRoleRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteRoleResponse>;
    PostDeleteRolePermissionsBoundary(req: operations.PostDeleteRolePermissionsBoundaryRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteRolePermissionsBoundaryResponse>;
    PostDeleteRolePolicy(req: operations.PostDeleteRolePolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteRolePolicyResponse>;
    PostDeleteSamlProvider(req: operations.PostDeleteSamlProviderRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteSamlProviderResponse>;
    PostDeleteSshPublicKey(req: operations.PostDeleteSshPublicKeyRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteSshPublicKeyResponse>;
    PostDeleteServerCertificate(req: operations.PostDeleteServerCertificateRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteServerCertificateResponse>;
    PostDeleteServiceLinkedRole(req: operations.PostDeleteServiceLinkedRoleRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteServiceLinkedRoleResponse>;
    PostDeleteServiceSpecificCredential(req: operations.PostDeleteServiceSpecificCredentialRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteServiceSpecificCredentialResponse>;
    PostDeleteSigningCertificate(req: operations.PostDeleteSigningCertificateRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteSigningCertificateResponse>;
    PostDeleteUser(req: operations.PostDeleteUserRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteUserResponse>;
    PostDeleteUserPermissionsBoundary(req: operations.PostDeleteUserPermissionsBoundaryRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteUserPermissionsBoundaryResponse>;
    PostDeleteUserPolicy(req: operations.PostDeleteUserPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteUserPolicyResponse>;
    PostDeleteVirtualMfaDevice(req: operations.PostDeleteVirtualMfaDeviceRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteVirtualMfaDeviceResponse>;
    PostDetachGroupPolicy(req: operations.PostDetachGroupPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostDetachGroupPolicyResponse>;
    PostDetachRolePolicy(req: operations.PostDetachRolePolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostDetachRolePolicyResponse>;
    PostDetachUserPolicy(req: operations.PostDetachUserPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostDetachUserPolicyResponse>;
    PostEnableMfaDevice(req: operations.PostEnableMfaDeviceRequest, config?: AxiosRequestConfig): Promise<operations.PostEnableMfaDeviceResponse>;
    PostGenerateCredentialReport(req: operations.PostGenerateCredentialReportRequest, config?: AxiosRequestConfig): Promise<operations.PostGenerateCredentialReportResponse>;
    PostGenerateOrganizationsAccessReport(req: operations.PostGenerateOrganizationsAccessReportRequest, config?: AxiosRequestConfig): Promise<operations.PostGenerateOrganizationsAccessReportResponse>;
    PostGenerateServiceLastAccessedDetails(req: operations.PostGenerateServiceLastAccessedDetailsRequest, config?: AxiosRequestConfig): Promise<operations.PostGenerateServiceLastAccessedDetailsResponse>;
    PostGetAccessKeyLastUsed(req: operations.PostGetAccessKeyLastUsedRequest, config?: AxiosRequestConfig): Promise<operations.PostGetAccessKeyLastUsedResponse>;
    PostGetAccountAuthorizationDetails(req: operations.PostGetAccountAuthorizationDetailsRequest, config?: AxiosRequestConfig): Promise<operations.PostGetAccountAuthorizationDetailsResponse>;
    PostGetAccountPasswordPolicy(req: operations.PostGetAccountPasswordPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostGetAccountPasswordPolicyResponse>;
    PostGetAccountSummary(req: operations.PostGetAccountSummaryRequest, config?: AxiosRequestConfig): Promise<operations.PostGetAccountSummaryResponse>;
    PostGetContextKeysForCustomPolicy(req: operations.PostGetContextKeysForCustomPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostGetContextKeysForCustomPolicyResponse>;
    PostGetContextKeysForPrincipalPolicy(req: operations.PostGetContextKeysForPrincipalPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostGetContextKeysForPrincipalPolicyResponse>;
    PostGetCredentialReport(req: operations.PostGetCredentialReportRequest, config?: AxiosRequestConfig): Promise<operations.PostGetCredentialReportResponse>;
    PostGetGroup(req: operations.PostGetGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostGetGroupResponse>;
    PostGetGroupPolicy(req: operations.PostGetGroupPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostGetGroupPolicyResponse>;
    PostGetInstanceProfile(req: operations.PostGetInstanceProfileRequest, config?: AxiosRequestConfig): Promise<operations.PostGetInstanceProfileResponse>;
    PostGetLoginProfile(req: operations.PostGetLoginProfileRequest, config?: AxiosRequestConfig): Promise<operations.PostGetLoginProfileResponse>;
    PostGetOpenIdConnectProvider(req: operations.PostGetOpenIdConnectProviderRequest, config?: AxiosRequestConfig): Promise<operations.PostGetOpenIdConnectProviderResponse>;
    PostGetOrganizationsAccessReport(req: operations.PostGetOrganizationsAccessReportRequest, config?: AxiosRequestConfig): Promise<operations.PostGetOrganizationsAccessReportResponse>;
    PostGetPolicy(req: operations.PostGetPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostGetPolicyResponse>;
    PostGetPolicyVersion(req: operations.PostGetPolicyVersionRequest, config?: AxiosRequestConfig): Promise<operations.PostGetPolicyVersionResponse>;
    PostGetRole(req: operations.PostGetRoleRequest, config?: AxiosRequestConfig): Promise<operations.PostGetRoleResponse>;
    PostGetRolePolicy(req: operations.PostGetRolePolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostGetRolePolicyResponse>;
    PostGetSamlProvider(req: operations.PostGetSamlProviderRequest, config?: AxiosRequestConfig): Promise<operations.PostGetSamlProviderResponse>;
    PostGetSshPublicKey(req: operations.PostGetSshPublicKeyRequest, config?: AxiosRequestConfig): Promise<operations.PostGetSshPublicKeyResponse>;
    PostGetServerCertificate(req: operations.PostGetServerCertificateRequest, config?: AxiosRequestConfig): Promise<operations.PostGetServerCertificateResponse>;
    PostGetServiceLastAccessedDetails(req: operations.PostGetServiceLastAccessedDetailsRequest, config?: AxiosRequestConfig): Promise<operations.PostGetServiceLastAccessedDetailsResponse>;
    PostGetServiceLastAccessedDetailsWithEntities(req: operations.PostGetServiceLastAccessedDetailsWithEntitiesRequest, config?: AxiosRequestConfig): Promise<operations.PostGetServiceLastAccessedDetailsWithEntitiesResponse>;
    PostGetServiceLinkedRoleDeletionStatus(req: operations.PostGetServiceLinkedRoleDeletionStatusRequest, config?: AxiosRequestConfig): Promise<operations.PostGetServiceLinkedRoleDeletionStatusResponse>;
    PostGetUser(req: operations.PostGetUserRequest, config?: AxiosRequestConfig): Promise<operations.PostGetUserResponse>;
    PostGetUserPolicy(req: operations.PostGetUserPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostGetUserPolicyResponse>;
    PostListAccessKeys(req: operations.PostListAccessKeysRequest, config?: AxiosRequestConfig): Promise<operations.PostListAccessKeysResponse>;
    PostListAccountAliases(req: operations.PostListAccountAliasesRequest, config?: AxiosRequestConfig): Promise<operations.PostListAccountAliasesResponse>;
    PostListAttachedGroupPolicies(req: operations.PostListAttachedGroupPoliciesRequest, config?: AxiosRequestConfig): Promise<operations.PostListAttachedGroupPoliciesResponse>;
    PostListAttachedRolePolicies(req: operations.PostListAttachedRolePoliciesRequest, config?: AxiosRequestConfig): Promise<operations.PostListAttachedRolePoliciesResponse>;
    PostListAttachedUserPolicies(req: operations.PostListAttachedUserPoliciesRequest, config?: AxiosRequestConfig): Promise<operations.PostListAttachedUserPoliciesResponse>;
    PostListEntitiesForPolicy(req: operations.PostListEntitiesForPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostListEntitiesForPolicyResponse>;
    PostListGroupPolicies(req: operations.PostListGroupPoliciesRequest, config?: AxiosRequestConfig): Promise<operations.PostListGroupPoliciesResponse>;
    PostListGroups(req: operations.PostListGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostListGroupsResponse>;
    PostListGroupsForUser(req: operations.PostListGroupsForUserRequest, config?: AxiosRequestConfig): Promise<operations.PostListGroupsForUserResponse>;
    PostListInstanceProfileTags(req: operations.PostListInstanceProfileTagsRequest, config?: AxiosRequestConfig): Promise<operations.PostListInstanceProfileTagsResponse>;
    PostListInstanceProfiles(req: operations.PostListInstanceProfilesRequest, config?: AxiosRequestConfig): Promise<operations.PostListInstanceProfilesResponse>;
    PostListInstanceProfilesForRole(req: operations.PostListInstanceProfilesForRoleRequest, config?: AxiosRequestConfig): Promise<operations.PostListInstanceProfilesForRoleResponse>;
    PostListMfaDeviceTags(req: operations.PostListMfaDeviceTagsRequest, config?: AxiosRequestConfig): Promise<operations.PostListMfaDeviceTagsResponse>;
    PostListMfaDevices(req: operations.PostListMfaDevicesRequest, config?: AxiosRequestConfig): Promise<operations.PostListMfaDevicesResponse>;
    PostListOpenIdConnectProviderTags(req: operations.PostListOpenIdConnectProviderTagsRequest, config?: AxiosRequestConfig): Promise<operations.PostListOpenIdConnectProviderTagsResponse>;
    PostListOpenIdConnectProviders(req: operations.PostListOpenIdConnectProvidersRequest, config?: AxiosRequestConfig): Promise<operations.PostListOpenIdConnectProvidersResponse>;
    PostListPolicies(req: operations.PostListPoliciesRequest, config?: AxiosRequestConfig): Promise<operations.PostListPoliciesResponse>;
    PostListPoliciesGrantingServiceAccess(req: operations.PostListPoliciesGrantingServiceAccessRequest, config?: AxiosRequestConfig): Promise<operations.PostListPoliciesGrantingServiceAccessResponse>;
    PostListPolicyTags(req: operations.PostListPolicyTagsRequest, config?: AxiosRequestConfig): Promise<operations.PostListPolicyTagsResponse>;
    PostListPolicyVersions(req: operations.PostListPolicyVersionsRequest, config?: AxiosRequestConfig): Promise<operations.PostListPolicyVersionsResponse>;
    PostListRolePolicies(req: operations.PostListRolePoliciesRequest, config?: AxiosRequestConfig): Promise<operations.PostListRolePoliciesResponse>;
    PostListRoleTags(req: operations.PostListRoleTagsRequest, config?: AxiosRequestConfig): Promise<operations.PostListRoleTagsResponse>;
    PostListRoles(req: operations.PostListRolesRequest, config?: AxiosRequestConfig): Promise<operations.PostListRolesResponse>;
    PostListSamlProviderTags(req: operations.PostListSamlProviderTagsRequest, config?: AxiosRequestConfig): Promise<operations.PostListSamlProviderTagsResponse>;
    PostListSamlProviders(req: operations.PostListSamlProvidersRequest, config?: AxiosRequestConfig): Promise<operations.PostListSamlProvidersResponse>;
    PostListSshPublicKeys(req: operations.PostListSshPublicKeysRequest, config?: AxiosRequestConfig): Promise<operations.PostListSshPublicKeysResponse>;
    PostListServerCertificateTags(req: operations.PostListServerCertificateTagsRequest, config?: AxiosRequestConfig): Promise<operations.PostListServerCertificateTagsResponse>;
    PostListServerCertificates(req: operations.PostListServerCertificatesRequest, config?: AxiosRequestConfig): Promise<operations.PostListServerCertificatesResponse>;
    PostListServiceSpecificCredentials(req: operations.PostListServiceSpecificCredentialsRequest, config?: AxiosRequestConfig): Promise<operations.PostListServiceSpecificCredentialsResponse>;
    PostListSigningCertificates(req: operations.PostListSigningCertificatesRequest, config?: AxiosRequestConfig): Promise<operations.PostListSigningCertificatesResponse>;
    PostListUserPolicies(req: operations.PostListUserPoliciesRequest, config?: AxiosRequestConfig): Promise<operations.PostListUserPoliciesResponse>;
    PostListUserTags(req: operations.PostListUserTagsRequest, config?: AxiosRequestConfig): Promise<operations.PostListUserTagsResponse>;
    PostListUsers(req: operations.PostListUsersRequest, config?: AxiosRequestConfig): Promise<operations.PostListUsersResponse>;
    PostListVirtualMfaDevices(req: operations.PostListVirtualMfaDevicesRequest, config?: AxiosRequestConfig): Promise<operations.PostListVirtualMfaDevicesResponse>;
    PostPutGroupPolicy(req: operations.PostPutGroupPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostPutGroupPolicyResponse>;
    PostPutRolePermissionsBoundary(req: operations.PostPutRolePermissionsBoundaryRequest, config?: AxiosRequestConfig): Promise<operations.PostPutRolePermissionsBoundaryResponse>;
    PostPutRolePolicy(req: operations.PostPutRolePolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostPutRolePolicyResponse>;
    PostPutUserPermissionsBoundary(req: operations.PostPutUserPermissionsBoundaryRequest, config?: AxiosRequestConfig): Promise<operations.PostPutUserPermissionsBoundaryResponse>;
    PostPutUserPolicy(req: operations.PostPutUserPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostPutUserPolicyResponse>;
    PostRemoveClientIdFromOpenIdConnectProvider(req: operations.PostRemoveClientIdFromOpenIdConnectProviderRequest, config?: AxiosRequestConfig): Promise<operations.PostRemoveClientIdFromOpenIdConnectProviderResponse>;
    PostRemoveRoleFromInstanceProfile(req: operations.PostRemoveRoleFromInstanceProfileRequest, config?: AxiosRequestConfig): Promise<operations.PostRemoveRoleFromInstanceProfileResponse>;
    PostRemoveUserFromGroup(req: operations.PostRemoveUserFromGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostRemoveUserFromGroupResponse>;
    PostResetServiceSpecificCredential(req: operations.PostResetServiceSpecificCredentialRequest, config?: AxiosRequestConfig): Promise<operations.PostResetServiceSpecificCredentialResponse>;
    PostResyncMfaDevice(req: operations.PostResyncMfaDeviceRequest, config?: AxiosRequestConfig): Promise<operations.PostResyncMfaDeviceResponse>;
    PostSetDefaultPolicyVersion(req: operations.PostSetDefaultPolicyVersionRequest, config?: AxiosRequestConfig): Promise<operations.PostSetDefaultPolicyVersionResponse>;
    PostSetSecurityTokenServicePreferences(req: operations.PostSetSecurityTokenServicePreferencesRequest, config?: AxiosRequestConfig): Promise<operations.PostSetSecurityTokenServicePreferencesResponse>;
    PostSimulateCustomPolicy(req: operations.PostSimulateCustomPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostSimulateCustomPolicyResponse>;
    PostSimulatePrincipalPolicy(req: operations.PostSimulatePrincipalPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostSimulatePrincipalPolicyResponse>;
    PostTagInstanceProfile(req: operations.PostTagInstanceProfileRequest, config?: AxiosRequestConfig): Promise<operations.PostTagInstanceProfileResponse>;
    PostTagMfaDevice(req: operations.PostTagMfaDeviceRequest, config?: AxiosRequestConfig): Promise<operations.PostTagMfaDeviceResponse>;
    PostTagOpenIdConnectProvider(req: operations.PostTagOpenIdConnectProviderRequest, config?: AxiosRequestConfig): Promise<operations.PostTagOpenIdConnectProviderResponse>;
    PostTagPolicy(req: operations.PostTagPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostTagPolicyResponse>;
    PostTagRole(req: operations.PostTagRoleRequest, config?: AxiosRequestConfig): Promise<operations.PostTagRoleResponse>;
    PostTagSamlProvider(req: operations.PostTagSamlProviderRequest, config?: AxiosRequestConfig): Promise<operations.PostTagSamlProviderResponse>;
    PostTagServerCertificate(req: operations.PostTagServerCertificateRequest, config?: AxiosRequestConfig): Promise<operations.PostTagServerCertificateResponse>;
    PostTagUser(req: operations.PostTagUserRequest, config?: AxiosRequestConfig): Promise<operations.PostTagUserResponse>;
    PostUntagInstanceProfile(req: operations.PostUntagInstanceProfileRequest, config?: AxiosRequestConfig): Promise<operations.PostUntagInstanceProfileResponse>;
    PostUntagMfaDevice(req: operations.PostUntagMfaDeviceRequest, config?: AxiosRequestConfig): Promise<operations.PostUntagMfaDeviceResponse>;
    PostUntagOpenIdConnectProvider(req: operations.PostUntagOpenIdConnectProviderRequest, config?: AxiosRequestConfig): Promise<operations.PostUntagOpenIdConnectProviderResponse>;
    PostUntagPolicy(req: operations.PostUntagPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostUntagPolicyResponse>;
    PostUntagRole(req: operations.PostUntagRoleRequest, config?: AxiosRequestConfig): Promise<operations.PostUntagRoleResponse>;
    PostUntagSamlProvider(req: operations.PostUntagSamlProviderRequest, config?: AxiosRequestConfig): Promise<operations.PostUntagSamlProviderResponse>;
    PostUntagServerCertificate(req: operations.PostUntagServerCertificateRequest, config?: AxiosRequestConfig): Promise<operations.PostUntagServerCertificateResponse>;
    PostUntagUser(req: operations.PostUntagUserRequest, config?: AxiosRequestConfig): Promise<operations.PostUntagUserResponse>;
    PostUpdateAccessKey(req: operations.PostUpdateAccessKeyRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateAccessKeyResponse>;
    PostUpdateAccountPasswordPolicy(req: operations.PostUpdateAccountPasswordPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateAccountPasswordPolicyResponse>;
    PostUpdateAssumeRolePolicy(req: operations.PostUpdateAssumeRolePolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateAssumeRolePolicyResponse>;
    PostUpdateGroup(req: operations.PostUpdateGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateGroupResponse>;
    PostUpdateLoginProfile(req: operations.PostUpdateLoginProfileRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateLoginProfileResponse>;
    PostUpdateOpenIdConnectProviderThumbprint(req: operations.PostUpdateOpenIdConnectProviderThumbprintRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateOpenIdConnectProviderThumbprintResponse>;
    PostUpdateRole(req: operations.PostUpdateRoleRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateRoleResponse>;
    PostUpdateRoleDescription(req: operations.PostUpdateRoleDescriptionRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateRoleDescriptionResponse>;
    PostUpdateSamlProvider(req: operations.PostUpdateSamlProviderRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateSamlProviderResponse>;
    PostUpdateSshPublicKey(req: operations.PostUpdateSshPublicKeyRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateSshPublicKeyResponse>;
    PostUpdateServerCertificate(req: operations.PostUpdateServerCertificateRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateServerCertificateResponse>;
    PostUpdateServiceSpecificCredential(req: operations.PostUpdateServiceSpecificCredentialRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateServiceSpecificCredentialResponse>;
    PostUpdateSigningCertificate(req: operations.PostUpdateSigningCertificateRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateSigningCertificateResponse>;
    PostUpdateUser(req: operations.PostUpdateUserRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateUserResponse>;
    PostUploadSshPublicKey(req: operations.PostUploadSshPublicKeyRequest, config?: AxiosRequestConfig): Promise<operations.PostUploadSshPublicKeyResponse>;
    PostUploadServerCertificate(req: operations.PostUploadServerCertificateRequest, config?: AxiosRequestConfig): Promise<operations.PostUploadServerCertificateResponse>;
    PostUploadSigningCertificate(req: operations.PostUploadSigningCertificateRequest, config?: AxiosRequestConfig): Promise<operations.PostUploadSigningCertificateResponse>;
}
export {};
