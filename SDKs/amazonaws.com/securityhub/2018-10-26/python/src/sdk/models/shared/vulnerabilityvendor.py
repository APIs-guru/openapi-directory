from dataclasses import dataclass, field
from datetime import date, datetime
from marshmallow import fields
import dateutil.parser
from typing import Optional
from dataclasses_json import dataclass_json
from sdk import utils


@dataclass_json
@dataclass
class VulnerabilityVendor:
    r"""VulnerabilityVendor
    A vendor that generates a vulnerability report.
    """
    
    name: str = field(metadata={'dataclasses_json': { 'letter_case': utils.field_name('Name') }})
    url: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('Url') }})
    vendor_created_at: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('VendorCreatedAt') }})
    vendor_severity: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('VendorSeverity') }})
    vendor_updated_at: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('VendorUpdatedAt') }})
    
