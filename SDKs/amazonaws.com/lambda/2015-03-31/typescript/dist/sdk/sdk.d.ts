import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
import { Security } from "./models/shared";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare function WithSecurity(security: Security): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    AddLayerVersionPermission(req: operations.AddLayerVersionPermissionRequest, config?: AxiosRequestConfig): Promise<operations.AddLayerVersionPermissionResponse>;
    AddPermission(req: operations.AddPermissionRequest, config?: AxiosRequestConfig): Promise<operations.AddPermissionResponse>;
    CreateAlias(req: operations.CreateAliasRequest, config?: AxiosRequestConfig): Promise<operations.CreateAliasResponse>;
    CreateCodeSigningConfig(req: operations.CreateCodeSigningConfigRequest, config?: AxiosRequestConfig): Promise<operations.CreateCodeSigningConfigResponse>;
    CreateEventSourceMapping(req: operations.CreateEventSourceMappingRequest, config?: AxiosRequestConfig): Promise<operations.CreateEventSourceMappingResponse>;
    CreateFunction(req: operations.CreateFunctionRequest, config?: AxiosRequestConfig): Promise<operations.CreateFunctionResponse>;
    DeleteAlias(req: operations.DeleteAliasRequest, config?: AxiosRequestConfig): Promise<operations.DeleteAliasResponse>;
    DeleteCodeSigningConfig(req: operations.DeleteCodeSigningConfigRequest, config?: AxiosRequestConfig): Promise<operations.DeleteCodeSigningConfigResponse>;
    DeleteEventSourceMapping(req: operations.DeleteEventSourceMappingRequest, config?: AxiosRequestConfig): Promise<operations.DeleteEventSourceMappingResponse>;
    DeleteFunction(req: operations.DeleteFunctionRequest, config?: AxiosRequestConfig): Promise<operations.DeleteFunctionResponse>;
    DeleteFunctionCodeSigningConfig(req: operations.DeleteFunctionCodeSigningConfigRequest, config?: AxiosRequestConfig): Promise<operations.DeleteFunctionCodeSigningConfigResponse>;
    DeleteFunctionConcurrency(req: operations.DeleteFunctionConcurrencyRequest, config?: AxiosRequestConfig): Promise<operations.DeleteFunctionConcurrencyResponse>;
    DeleteFunctionEventInvokeConfig(req: operations.DeleteFunctionEventInvokeConfigRequest, config?: AxiosRequestConfig): Promise<operations.DeleteFunctionEventInvokeConfigResponse>;
    DeleteLayerVersion(req: operations.DeleteLayerVersionRequest, config?: AxiosRequestConfig): Promise<operations.DeleteLayerVersionResponse>;
    DeleteProvisionedConcurrencyConfig(req: operations.DeleteProvisionedConcurrencyConfigRequest, config?: AxiosRequestConfig): Promise<operations.DeleteProvisionedConcurrencyConfigResponse>;
    GetAccountSettings(req: operations.GetAccountSettingsRequest, config?: AxiosRequestConfig): Promise<operations.GetAccountSettingsResponse>;
    GetAlias(req: operations.GetAliasRequest, config?: AxiosRequestConfig): Promise<operations.GetAliasResponse>;
    GetCodeSigningConfig(req: operations.GetCodeSigningConfigRequest, config?: AxiosRequestConfig): Promise<operations.GetCodeSigningConfigResponse>;
    GetEventSourceMapping(req: operations.GetEventSourceMappingRequest, config?: AxiosRequestConfig): Promise<operations.GetEventSourceMappingResponse>;
    GetFunction(req: operations.GetFunctionRequest, config?: AxiosRequestConfig): Promise<operations.GetFunctionResponse>;
    GetFunctionCodeSigningConfig(req: operations.GetFunctionCodeSigningConfigRequest, config?: AxiosRequestConfig): Promise<operations.GetFunctionCodeSigningConfigResponse>;
    GetFunctionConcurrency(req: operations.GetFunctionConcurrencyRequest, config?: AxiosRequestConfig): Promise<operations.GetFunctionConcurrencyResponse>;
    GetFunctionConfiguration(req: operations.GetFunctionConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.GetFunctionConfigurationResponse>;
    GetFunctionEventInvokeConfig(req: operations.GetFunctionEventInvokeConfigRequest, config?: AxiosRequestConfig): Promise<operations.GetFunctionEventInvokeConfigResponse>;
    GetLayerVersion(req: operations.GetLayerVersionRequest, config?: AxiosRequestConfig): Promise<operations.GetLayerVersionResponse>;
    GetLayerVersionByArn(req: operations.GetLayerVersionByArnRequest, config?: AxiosRequestConfig): Promise<operations.GetLayerVersionByArnResponse>;
    GetLayerVersionPolicy(req: operations.GetLayerVersionPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetLayerVersionPolicyResponse>;
    GetPolicy(req: operations.GetPolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetPolicyResponse>;
    GetProvisionedConcurrencyConfig(req: operations.GetProvisionedConcurrencyConfigRequest, config?: AxiosRequestConfig): Promise<operations.GetProvisionedConcurrencyConfigResponse>;
    Invoke(req: operations.InvokeRequest, config?: AxiosRequestConfig): Promise<operations.InvokeResponse>;
    InvokeAsync(req: operations.InvokeAsyncRequest, config?: AxiosRequestConfig): Promise<operations.InvokeAsyncResponse>;
    ListAliases(req: operations.ListAliasesRequest, config?: AxiosRequestConfig): Promise<operations.ListAliasesResponse>;
    ListCodeSigningConfigs(req: operations.ListCodeSigningConfigsRequest, config?: AxiosRequestConfig): Promise<operations.ListCodeSigningConfigsResponse>;
    ListEventSourceMappings(req: operations.ListEventSourceMappingsRequest, config?: AxiosRequestConfig): Promise<operations.ListEventSourceMappingsResponse>;
    ListFunctionEventInvokeConfigs(req: operations.ListFunctionEventInvokeConfigsRequest, config?: AxiosRequestConfig): Promise<operations.ListFunctionEventInvokeConfigsResponse>;
    ListFunctions(req: operations.ListFunctionsRequest, config?: AxiosRequestConfig): Promise<operations.ListFunctionsResponse>;
    ListFunctionsByCodeSigningConfig(req: operations.ListFunctionsByCodeSigningConfigRequest, config?: AxiosRequestConfig): Promise<operations.ListFunctionsByCodeSigningConfigResponse>;
    ListLayerVersions(req: operations.ListLayerVersionsRequest, config?: AxiosRequestConfig): Promise<operations.ListLayerVersionsResponse>;
    ListLayers(req: operations.ListLayersRequest, config?: AxiosRequestConfig): Promise<operations.ListLayersResponse>;
    ListProvisionedConcurrencyConfigs(req: operations.ListProvisionedConcurrencyConfigsRequest, config?: AxiosRequestConfig): Promise<operations.ListProvisionedConcurrencyConfigsResponse>;
    ListTags(req: operations.ListTagsRequest, config?: AxiosRequestConfig): Promise<operations.ListTagsResponse>;
    ListVersionsByFunction(req: operations.ListVersionsByFunctionRequest, config?: AxiosRequestConfig): Promise<operations.ListVersionsByFunctionResponse>;
    PublishLayerVersion(req: operations.PublishLayerVersionRequest, config?: AxiosRequestConfig): Promise<operations.PublishLayerVersionResponse>;
    PublishVersion(req: operations.PublishVersionRequest, config?: AxiosRequestConfig): Promise<operations.PublishVersionResponse>;
    PutFunctionCodeSigningConfig(req: operations.PutFunctionCodeSigningConfigRequest, config?: AxiosRequestConfig): Promise<operations.PutFunctionCodeSigningConfigResponse>;
    PutFunctionConcurrency(req: operations.PutFunctionConcurrencyRequest, config?: AxiosRequestConfig): Promise<operations.PutFunctionConcurrencyResponse>;
    PutFunctionEventInvokeConfig(req: operations.PutFunctionEventInvokeConfigRequest, config?: AxiosRequestConfig): Promise<operations.PutFunctionEventInvokeConfigResponse>;
    PutProvisionedConcurrencyConfig(req: operations.PutProvisionedConcurrencyConfigRequest, config?: AxiosRequestConfig): Promise<operations.PutProvisionedConcurrencyConfigResponse>;
    RemoveLayerVersionPermission(req: operations.RemoveLayerVersionPermissionRequest, config?: AxiosRequestConfig): Promise<operations.RemoveLayerVersionPermissionResponse>;
    RemovePermission(req: operations.RemovePermissionRequest, config?: AxiosRequestConfig): Promise<operations.RemovePermissionResponse>;
    TagResource(req: operations.TagResourceRequest, config?: AxiosRequestConfig): Promise<operations.TagResourceResponse>;
    UntagResource(req: operations.UntagResourceRequest, config?: AxiosRequestConfig): Promise<operations.UntagResourceResponse>;
    UpdateAlias(req: operations.UpdateAliasRequest, config?: AxiosRequestConfig): Promise<operations.UpdateAliasResponse>;
    UpdateCodeSigningConfig(req: operations.UpdateCodeSigningConfigRequest, config?: AxiosRequestConfig): Promise<operations.UpdateCodeSigningConfigResponse>;
    UpdateEventSourceMapping(req: operations.UpdateEventSourceMappingRequest, config?: AxiosRequestConfig): Promise<operations.UpdateEventSourceMappingResponse>;
    UpdateFunctionCode(req: operations.UpdateFunctionCodeRequest, config?: AxiosRequestConfig): Promise<operations.UpdateFunctionCodeResponse>;
    UpdateFunctionConfiguration(req: operations.UpdateFunctionConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.UpdateFunctionConfigurationResponse>;
    UpdateFunctionEventInvokeConfig(req: operations.UpdateFunctionEventInvokeConfigRequest, config?: AxiosRequestConfig): Promise<operations.UpdateFunctionEventInvokeConfigResponse>;
}
export {};
