import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
import { Security } from "./models/shared";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare function WithSecurity(security: Security): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    CreateAlarmModel(req: operations.CreateAlarmModelRequest, config?: AxiosRequestConfig): Promise<operations.CreateAlarmModelResponse>;
    CreateDetectorModel(req: operations.CreateDetectorModelRequest, config?: AxiosRequestConfig): Promise<operations.CreateDetectorModelResponse>;
    CreateInput(req: operations.CreateInputRequest, config?: AxiosRequestConfig): Promise<operations.CreateInputResponse>;
    DeleteAlarmModel(req: operations.DeleteAlarmModelRequest, config?: AxiosRequestConfig): Promise<operations.DeleteAlarmModelResponse>;
    DeleteDetectorModel(req: operations.DeleteDetectorModelRequest, config?: AxiosRequestConfig): Promise<operations.DeleteDetectorModelResponse>;
    DeleteInput(req: operations.DeleteInputRequest, config?: AxiosRequestConfig): Promise<operations.DeleteInputResponse>;
    DescribeAlarmModel(req: operations.DescribeAlarmModelRequest, config?: AxiosRequestConfig): Promise<operations.DescribeAlarmModelResponse>;
    DescribeDetectorModel(req: operations.DescribeDetectorModelRequest, config?: AxiosRequestConfig): Promise<operations.DescribeDetectorModelResponse>;
    DescribeDetectorModelAnalysis(req: operations.DescribeDetectorModelAnalysisRequest, config?: AxiosRequestConfig): Promise<operations.DescribeDetectorModelAnalysisResponse>;
    DescribeInput(req: operations.DescribeInputRequest, config?: AxiosRequestConfig): Promise<operations.DescribeInputResponse>;
    DescribeLoggingOptions(req: operations.DescribeLoggingOptionsRequest, config?: AxiosRequestConfig): Promise<operations.DescribeLoggingOptionsResponse>;
    GetDetectorModelAnalysisResults(req: operations.GetDetectorModelAnalysisResultsRequest, config?: AxiosRequestConfig): Promise<operations.GetDetectorModelAnalysisResultsResponse>;
    ListAlarmModelVersions(req: operations.ListAlarmModelVersionsRequest, config?: AxiosRequestConfig): Promise<operations.ListAlarmModelVersionsResponse>;
    ListAlarmModels(req: operations.ListAlarmModelsRequest, config?: AxiosRequestConfig): Promise<operations.ListAlarmModelsResponse>;
    ListDetectorModelVersions(req: operations.ListDetectorModelVersionsRequest, config?: AxiosRequestConfig): Promise<operations.ListDetectorModelVersionsResponse>;
    ListDetectorModels(req: operations.ListDetectorModelsRequest, config?: AxiosRequestConfig): Promise<operations.ListDetectorModelsResponse>;
    ListInputRoutings(req: operations.ListInputRoutingsRequest, config?: AxiosRequestConfig): Promise<operations.ListInputRoutingsResponse>;
    ListInputs(req: operations.ListInputsRequest, config?: AxiosRequestConfig): Promise<operations.ListInputsResponse>;
    ListTagsForResource(req: operations.ListTagsForResourceRequest, config?: AxiosRequestConfig): Promise<operations.ListTagsForResourceResponse>;
    PutLoggingOptions(req: operations.PutLoggingOptionsRequest, config?: AxiosRequestConfig): Promise<operations.PutLoggingOptionsResponse>;
    StartDetectorModelAnalysis(req: operations.StartDetectorModelAnalysisRequest, config?: AxiosRequestConfig): Promise<operations.StartDetectorModelAnalysisResponse>;
    TagResource(req: operations.TagResourceRequest, config?: AxiosRequestConfig): Promise<operations.TagResourceResponse>;
    UntagResource(req: operations.UntagResourceRequest, config?: AxiosRequestConfig): Promise<operations.UntagResourceResponse>;
    UpdateAlarmModel(req: operations.UpdateAlarmModelRequest, config?: AxiosRequestConfig): Promise<operations.UpdateAlarmModelResponse>;
    UpdateDetectorModel(req: operations.UpdateDetectorModelRequest, config?: AxiosRequestConfig): Promise<operations.UpdateDetectorModelResponse>;
    UpdateInput(req: operations.UpdateInputRequest, config?: AxiosRequestConfig): Promise<operations.UpdateInputResponse>;
}
export {};
