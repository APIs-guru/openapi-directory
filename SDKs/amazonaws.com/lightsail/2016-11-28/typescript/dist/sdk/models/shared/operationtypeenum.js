export var OperationTypeEnum;
(function (OperationTypeEnum) {
    OperationTypeEnum["DeleteKnownHostKeys"] = "DeleteKnownHostKeys";
    OperationTypeEnum["DeleteInstance"] = "DeleteInstance";
    OperationTypeEnum["CreateInstance"] = "CreateInstance";
    OperationTypeEnum["StopInstance"] = "StopInstance";
    OperationTypeEnum["StartInstance"] = "StartInstance";
    OperationTypeEnum["RebootInstance"] = "RebootInstance";
    OperationTypeEnum["OpenInstancePublicPorts"] = "OpenInstancePublicPorts";
    OperationTypeEnum["PutInstancePublicPorts"] = "PutInstancePublicPorts";
    OperationTypeEnum["CloseInstancePublicPorts"] = "CloseInstancePublicPorts";
    OperationTypeEnum["AllocateStaticIp"] = "AllocateStaticIp";
    OperationTypeEnum["ReleaseStaticIp"] = "ReleaseStaticIp";
    OperationTypeEnum["AttachStaticIp"] = "AttachStaticIp";
    OperationTypeEnum["DetachStaticIp"] = "DetachStaticIp";
    OperationTypeEnum["UpdateDomainEntry"] = "UpdateDomainEntry";
    OperationTypeEnum["DeleteDomainEntry"] = "DeleteDomainEntry";
    OperationTypeEnum["CreateDomain"] = "CreateDomain";
    OperationTypeEnum["DeleteDomain"] = "DeleteDomain";
    OperationTypeEnum["CreateInstanceSnapshot"] = "CreateInstanceSnapshot";
    OperationTypeEnum["DeleteInstanceSnapshot"] = "DeleteInstanceSnapshot";
    OperationTypeEnum["CreateInstancesFromSnapshot"] = "CreateInstancesFromSnapshot";
    OperationTypeEnum["CreateLoadBalancer"] = "CreateLoadBalancer";
    OperationTypeEnum["DeleteLoadBalancer"] = "DeleteLoadBalancer";
    OperationTypeEnum["AttachInstancesToLoadBalancer"] = "AttachInstancesToLoadBalancer";
    OperationTypeEnum["DetachInstancesFromLoadBalancer"] = "DetachInstancesFromLoadBalancer";
    OperationTypeEnum["UpdateLoadBalancerAttribute"] = "UpdateLoadBalancerAttribute";
    OperationTypeEnum["CreateLoadBalancerTlsCertificate"] = "CreateLoadBalancerTlsCertificate";
    OperationTypeEnum["DeleteLoadBalancerTlsCertificate"] = "DeleteLoadBalancerTlsCertificate";
    OperationTypeEnum["AttachLoadBalancerTlsCertificate"] = "AttachLoadBalancerTlsCertificate";
    OperationTypeEnum["CreateDisk"] = "CreateDisk";
    OperationTypeEnum["DeleteDisk"] = "DeleteDisk";
    OperationTypeEnum["AttachDisk"] = "AttachDisk";
    OperationTypeEnum["DetachDisk"] = "DetachDisk";
    OperationTypeEnum["CreateDiskSnapshot"] = "CreateDiskSnapshot";
    OperationTypeEnum["DeleteDiskSnapshot"] = "DeleteDiskSnapshot";
    OperationTypeEnum["CreateDiskFromSnapshot"] = "CreateDiskFromSnapshot";
    OperationTypeEnum["CreateRelationalDatabase"] = "CreateRelationalDatabase";
    OperationTypeEnum["UpdateRelationalDatabase"] = "UpdateRelationalDatabase";
    OperationTypeEnum["DeleteRelationalDatabase"] = "DeleteRelationalDatabase";
    OperationTypeEnum["CreateRelationalDatabaseFromSnapshot"] = "CreateRelationalDatabaseFromSnapshot";
    OperationTypeEnum["CreateRelationalDatabaseSnapshot"] = "CreateRelationalDatabaseSnapshot";
    OperationTypeEnum["DeleteRelationalDatabaseSnapshot"] = "DeleteRelationalDatabaseSnapshot";
    OperationTypeEnum["UpdateRelationalDatabaseParameters"] = "UpdateRelationalDatabaseParameters";
    OperationTypeEnum["StartRelationalDatabase"] = "StartRelationalDatabase";
    OperationTypeEnum["RebootRelationalDatabase"] = "RebootRelationalDatabase";
    OperationTypeEnum["StopRelationalDatabase"] = "StopRelationalDatabase";
    OperationTypeEnum["EnableAddOn"] = "EnableAddOn";
    OperationTypeEnum["DisableAddOn"] = "DisableAddOn";
    OperationTypeEnum["PutAlarm"] = "PutAlarm";
    OperationTypeEnum["GetAlarms"] = "GetAlarms";
    OperationTypeEnum["DeleteAlarm"] = "DeleteAlarm";
    OperationTypeEnum["TestAlarm"] = "TestAlarm";
    OperationTypeEnum["CreateContactMethod"] = "CreateContactMethod";
    OperationTypeEnum["GetContactMethods"] = "GetContactMethods";
    OperationTypeEnum["SendContactMethodVerification"] = "SendContactMethodVerification";
    OperationTypeEnum["DeleteContactMethod"] = "DeleteContactMethod";
    OperationTypeEnum["CreateDistribution"] = "CreateDistribution";
    OperationTypeEnum["UpdateDistribution"] = "UpdateDistribution";
    OperationTypeEnum["DeleteDistribution"] = "DeleteDistribution";
    OperationTypeEnum["ResetDistributionCache"] = "ResetDistributionCache";
    OperationTypeEnum["AttachCertificateToDistribution"] = "AttachCertificateToDistribution";
    OperationTypeEnum["DetachCertificateFromDistribution"] = "DetachCertificateFromDistribution";
    OperationTypeEnum["UpdateDistributionBundle"] = "UpdateDistributionBundle";
    OperationTypeEnum["SetIpAddressType"] = "SetIpAddressType";
    OperationTypeEnum["CreateCertificate"] = "CreateCertificate";
    OperationTypeEnum["DeleteCertificate"] = "DeleteCertificate";
    OperationTypeEnum["CreateContainerService"] = "CreateContainerService";
    OperationTypeEnum["UpdateContainerService"] = "UpdateContainerService";
    OperationTypeEnum["DeleteContainerService"] = "DeleteContainerService";
    OperationTypeEnum["CreateContainerServiceDeployment"] = "CreateContainerServiceDeployment";
    OperationTypeEnum["CreateContainerServiceRegistryLogin"] = "CreateContainerServiceRegistryLogin";
    OperationTypeEnum["RegisterContainerImage"] = "RegisterContainerImage";
    OperationTypeEnum["DeleteContainerImage"] = "DeleteContainerImage";
    OperationTypeEnum["CreateBucket"] = "CreateBucket";
    OperationTypeEnum["DeleteBucket"] = "DeleteBucket";
    OperationTypeEnum["CreateBucketAccessKey"] = "CreateBucketAccessKey";
    OperationTypeEnum["DeleteBucketAccessKey"] = "DeleteBucketAccessKey";
    OperationTypeEnum["UpdateBucketBundle"] = "UpdateBucketBundle";
    OperationTypeEnum["UpdateBucket"] = "UpdateBucket";
    OperationTypeEnum["SetResourceAccessForBucket"] = "SetResourceAccessForBucket";
})(OperationTypeEnum || (OperationTypeEnum = {}));
