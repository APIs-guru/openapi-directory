import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
import { Security } from "./models/shared";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare function WithSecurity(security: Security): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    AcceptPortfolioShare(req: operations.AcceptPortfolioShareRequest, config?: AxiosRequestConfig): Promise<operations.AcceptPortfolioShareResponse>;
    AssociateBudgetWithResource(req: operations.AssociateBudgetWithResourceRequest, config?: AxiosRequestConfig): Promise<operations.AssociateBudgetWithResourceResponse>;
    AssociatePrincipalWithPortfolio(req: operations.AssociatePrincipalWithPortfolioRequest, config?: AxiosRequestConfig): Promise<operations.AssociatePrincipalWithPortfolioResponse>;
    AssociateProductWithPortfolio(req: operations.AssociateProductWithPortfolioRequest, config?: AxiosRequestConfig): Promise<operations.AssociateProductWithPortfolioResponse>;
    AssociateServiceActionWithProvisioningArtifact(req: operations.AssociateServiceActionWithProvisioningArtifactRequest, config?: AxiosRequestConfig): Promise<operations.AssociateServiceActionWithProvisioningArtifactResponse>;
    AssociateTagOptionWithResource(req: operations.AssociateTagOptionWithResourceRequest, config?: AxiosRequestConfig): Promise<operations.AssociateTagOptionWithResourceResponse>;
    BatchAssociateServiceActionWithProvisioningArtifact(req: operations.BatchAssociateServiceActionWithProvisioningArtifactRequest, config?: AxiosRequestConfig): Promise<operations.BatchAssociateServiceActionWithProvisioningArtifactResponse>;
    BatchDisassociateServiceActionFromProvisioningArtifact(req: operations.BatchDisassociateServiceActionFromProvisioningArtifactRequest, config?: AxiosRequestConfig): Promise<operations.BatchDisassociateServiceActionFromProvisioningArtifactResponse>;
    CopyProduct(req: operations.CopyProductRequest, config?: AxiosRequestConfig): Promise<operations.CopyProductResponse>;
    CreateConstraint(req: operations.CreateConstraintRequest, config?: AxiosRequestConfig): Promise<operations.CreateConstraintResponse>;
    CreatePortfolio(req: operations.CreatePortfolioRequest, config?: AxiosRequestConfig): Promise<operations.CreatePortfolioResponse>;
    CreatePortfolioShare(req: operations.CreatePortfolioShareRequest, config?: AxiosRequestConfig): Promise<operations.CreatePortfolioShareResponse>;
    CreateProduct(req: operations.CreateProductRequest, config?: AxiosRequestConfig): Promise<operations.CreateProductResponse>;
    CreateProvisionedProductPlan(req: operations.CreateProvisionedProductPlanRequest, config?: AxiosRequestConfig): Promise<operations.CreateProvisionedProductPlanResponse>;
    CreateProvisioningArtifact(req: operations.CreateProvisioningArtifactRequest, config?: AxiosRequestConfig): Promise<operations.CreateProvisioningArtifactResponse>;
    CreateServiceAction(req: operations.CreateServiceActionRequest, config?: AxiosRequestConfig): Promise<operations.CreateServiceActionResponse>;
    CreateTagOption(req: operations.CreateTagOptionRequest, config?: AxiosRequestConfig): Promise<operations.CreateTagOptionResponse>;
    DeleteConstraint(req: operations.DeleteConstraintRequest, config?: AxiosRequestConfig): Promise<operations.DeleteConstraintResponse>;
    DeletePortfolio(req: operations.DeletePortfolioRequest, config?: AxiosRequestConfig): Promise<operations.DeletePortfolioResponse>;
    DeletePortfolioShare(req: operations.DeletePortfolioShareRequest, config?: AxiosRequestConfig): Promise<operations.DeletePortfolioShareResponse>;
    DeleteProduct(req: operations.DeleteProductRequest, config?: AxiosRequestConfig): Promise<operations.DeleteProductResponse>;
    DeleteProvisionedProductPlan(req: operations.DeleteProvisionedProductPlanRequest, config?: AxiosRequestConfig): Promise<operations.DeleteProvisionedProductPlanResponse>;
    DeleteProvisioningArtifact(req: operations.DeleteProvisioningArtifactRequest, config?: AxiosRequestConfig): Promise<operations.DeleteProvisioningArtifactResponse>;
    DeleteServiceAction(req: operations.DeleteServiceActionRequest, config?: AxiosRequestConfig): Promise<operations.DeleteServiceActionResponse>;
    DeleteTagOption(req: operations.DeleteTagOptionRequest, config?: AxiosRequestConfig): Promise<operations.DeleteTagOptionResponse>;
    DescribeConstraint(req: operations.DescribeConstraintRequest, config?: AxiosRequestConfig): Promise<operations.DescribeConstraintResponse>;
    DescribeCopyProductStatus(req: operations.DescribeCopyProductStatusRequest, config?: AxiosRequestConfig): Promise<operations.DescribeCopyProductStatusResponse>;
    DescribePortfolio(req: operations.DescribePortfolioRequest, config?: AxiosRequestConfig): Promise<operations.DescribePortfolioResponse>;
    DescribePortfolioShareStatus(req: operations.DescribePortfolioShareStatusRequest, config?: AxiosRequestConfig): Promise<operations.DescribePortfolioShareStatusResponse>;
    DescribePortfolioShares(req: operations.DescribePortfolioSharesRequest, config?: AxiosRequestConfig): Promise<operations.DescribePortfolioSharesResponse>;
    DescribeProduct(req: operations.DescribeProductRequest, config?: AxiosRequestConfig): Promise<operations.DescribeProductResponse>;
    DescribeProductAsAdmin(req: operations.DescribeProductAsAdminRequest, config?: AxiosRequestConfig): Promise<operations.DescribeProductAsAdminResponse>;
    DescribeProductView(req: operations.DescribeProductViewRequest, config?: AxiosRequestConfig): Promise<operations.DescribeProductViewResponse>;
    DescribeProvisionedProduct(req: operations.DescribeProvisionedProductRequest, config?: AxiosRequestConfig): Promise<operations.DescribeProvisionedProductResponse>;
    DescribeProvisionedProductPlan(req: operations.DescribeProvisionedProductPlanRequest, config?: AxiosRequestConfig): Promise<operations.DescribeProvisionedProductPlanResponse>;
    DescribeProvisioningArtifact(req: operations.DescribeProvisioningArtifactRequest, config?: AxiosRequestConfig): Promise<operations.DescribeProvisioningArtifactResponse>;
    DescribeProvisioningParameters(req: operations.DescribeProvisioningParametersRequest, config?: AxiosRequestConfig): Promise<operations.DescribeProvisioningParametersResponse>;
    DescribeRecord(req: operations.DescribeRecordRequest, config?: AxiosRequestConfig): Promise<operations.DescribeRecordResponse>;
    DescribeServiceAction(req: operations.DescribeServiceActionRequest, config?: AxiosRequestConfig): Promise<operations.DescribeServiceActionResponse>;
    DescribeServiceActionExecutionParameters(req: operations.DescribeServiceActionExecutionParametersRequest, config?: AxiosRequestConfig): Promise<operations.DescribeServiceActionExecutionParametersResponse>;
    DescribeTagOption(req: operations.DescribeTagOptionRequest, config?: AxiosRequestConfig): Promise<operations.DescribeTagOptionResponse>;
    DisableAwsOrganizationsAccess(req: operations.DisableAwsOrganizationsAccessRequest, config?: AxiosRequestConfig): Promise<operations.DisableAwsOrganizationsAccessResponse>;
    DisassociateBudgetFromResource(req: operations.DisassociateBudgetFromResourceRequest, config?: AxiosRequestConfig): Promise<operations.DisassociateBudgetFromResourceResponse>;
    DisassociatePrincipalFromPortfolio(req: operations.DisassociatePrincipalFromPortfolioRequest, config?: AxiosRequestConfig): Promise<operations.DisassociatePrincipalFromPortfolioResponse>;
    DisassociateProductFromPortfolio(req: operations.DisassociateProductFromPortfolioRequest, config?: AxiosRequestConfig): Promise<operations.DisassociateProductFromPortfolioResponse>;
    DisassociateServiceActionFromProvisioningArtifact(req: operations.DisassociateServiceActionFromProvisioningArtifactRequest, config?: AxiosRequestConfig): Promise<operations.DisassociateServiceActionFromProvisioningArtifactResponse>;
    DisassociateTagOptionFromResource(req: operations.DisassociateTagOptionFromResourceRequest, config?: AxiosRequestConfig): Promise<operations.DisassociateTagOptionFromResourceResponse>;
    EnableAwsOrganizationsAccess(req: operations.EnableAwsOrganizationsAccessRequest, config?: AxiosRequestConfig): Promise<operations.EnableAwsOrganizationsAccessResponse>;
    ExecuteProvisionedProductPlan(req: operations.ExecuteProvisionedProductPlanRequest, config?: AxiosRequestConfig): Promise<operations.ExecuteProvisionedProductPlanResponse>;
    ExecuteProvisionedProductServiceAction(req: operations.ExecuteProvisionedProductServiceActionRequest, config?: AxiosRequestConfig): Promise<operations.ExecuteProvisionedProductServiceActionResponse>;
    GetAwsOrganizationsAccessStatus(req: operations.GetAwsOrganizationsAccessStatusRequest, config?: AxiosRequestConfig): Promise<operations.GetAwsOrganizationsAccessStatusResponse>;
    GetProvisionedProductOutputs(req: operations.GetProvisionedProductOutputsRequest, config?: AxiosRequestConfig): Promise<operations.GetProvisionedProductOutputsResponse>;
    ImportAsProvisionedProduct(req: operations.ImportAsProvisionedProductRequest, config?: AxiosRequestConfig): Promise<operations.ImportAsProvisionedProductResponse>;
    ListAcceptedPortfolioShares(req: operations.ListAcceptedPortfolioSharesRequest, config?: AxiosRequestConfig): Promise<operations.ListAcceptedPortfolioSharesResponse>;
    ListBudgetsForResource(req: operations.ListBudgetsForResourceRequest, config?: AxiosRequestConfig): Promise<operations.ListBudgetsForResourceResponse>;
    ListConstraintsForPortfolio(req: operations.ListConstraintsForPortfolioRequest, config?: AxiosRequestConfig): Promise<operations.ListConstraintsForPortfolioResponse>;
    ListLaunchPaths(req: operations.ListLaunchPathsRequest, config?: AxiosRequestConfig): Promise<operations.ListLaunchPathsResponse>;
    ListOrganizationPortfolioAccess(req: operations.ListOrganizationPortfolioAccessRequest, config?: AxiosRequestConfig): Promise<operations.ListOrganizationPortfolioAccessResponse>;
    ListPortfolioAccess(req: operations.ListPortfolioAccessRequest, config?: AxiosRequestConfig): Promise<operations.ListPortfolioAccessResponse>;
    ListPortfolios(req: operations.ListPortfoliosRequest, config?: AxiosRequestConfig): Promise<operations.ListPortfoliosResponse>;
    ListPortfoliosForProduct(req: operations.ListPortfoliosForProductRequest, config?: AxiosRequestConfig): Promise<operations.ListPortfoliosForProductResponse>;
    ListPrincipalsForPortfolio(req: operations.ListPrincipalsForPortfolioRequest, config?: AxiosRequestConfig): Promise<operations.ListPrincipalsForPortfolioResponse>;
    ListProvisionedProductPlans(req: operations.ListProvisionedProductPlansRequest, config?: AxiosRequestConfig): Promise<operations.ListProvisionedProductPlansResponse>;
    ListProvisioningArtifacts(req: operations.ListProvisioningArtifactsRequest, config?: AxiosRequestConfig): Promise<operations.ListProvisioningArtifactsResponse>;
    ListProvisioningArtifactsForServiceAction(req: operations.ListProvisioningArtifactsForServiceActionRequest, config?: AxiosRequestConfig): Promise<operations.ListProvisioningArtifactsForServiceActionResponse>;
    ListRecordHistory(req: operations.ListRecordHistoryRequest, config?: AxiosRequestConfig): Promise<operations.ListRecordHistoryResponse>;
    ListResourcesForTagOption(req: operations.ListResourcesForTagOptionRequest, config?: AxiosRequestConfig): Promise<operations.ListResourcesForTagOptionResponse>;
    ListServiceActions(req: operations.ListServiceActionsRequest, config?: AxiosRequestConfig): Promise<operations.ListServiceActionsResponse>;
    ListServiceActionsForProvisioningArtifact(req: operations.ListServiceActionsForProvisioningArtifactRequest, config?: AxiosRequestConfig): Promise<operations.ListServiceActionsForProvisioningArtifactResponse>;
    ListStackInstancesForProvisionedProduct(req: operations.ListStackInstancesForProvisionedProductRequest, config?: AxiosRequestConfig): Promise<operations.ListStackInstancesForProvisionedProductResponse>;
    ListTagOptions(req: operations.ListTagOptionsRequest, config?: AxiosRequestConfig): Promise<operations.ListTagOptionsResponse>;
    ProvisionProduct(req: operations.ProvisionProductRequest, config?: AxiosRequestConfig): Promise<operations.ProvisionProductResponse>;
    RejectPortfolioShare(req: operations.RejectPortfolioShareRequest, config?: AxiosRequestConfig): Promise<operations.RejectPortfolioShareResponse>;
    ScanProvisionedProducts(req: operations.ScanProvisionedProductsRequest, config?: AxiosRequestConfig): Promise<operations.ScanProvisionedProductsResponse>;
    SearchProducts(req: operations.SearchProductsRequest, config?: AxiosRequestConfig): Promise<operations.SearchProductsResponse>;
    SearchProductsAsAdmin(req: operations.SearchProductsAsAdminRequest, config?: AxiosRequestConfig): Promise<operations.SearchProductsAsAdminResponse>;
    SearchProvisionedProducts(req: operations.SearchProvisionedProductsRequest, config?: AxiosRequestConfig): Promise<operations.SearchProvisionedProductsResponse>;
    TerminateProvisionedProduct(req: operations.TerminateProvisionedProductRequest, config?: AxiosRequestConfig): Promise<operations.TerminateProvisionedProductResponse>;
    UpdateConstraint(req: operations.UpdateConstraintRequest, config?: AxiosRequestConfig): Promise<operations.UpdateConstraintResponse>;
    UpdatePortfolio(req: operations.UpdatePortfolioRequest, config?: AxiosRequestConfig): Promise<operations.UpdatePortfolioResponse>;
    UpdatePortfolioShare(req: operations.UpdatePortfolioShareRequest, config?: AxiosRequestConfig): Promise<operations.UpdatePortfolioShareResponse>;
    UpdateProduct(req: operations.UpdateProductRequest, config?: AxiosRequestConfig): Promise<operations.UpdateProductResponse>;
    UpdateProvisionedProduct(req: operations.UpdateProvisionedProductRequest, config?: AxiosRequestConfig): Promise<operations.UpdateProvisionedProductResponse>;
    UpdateProvisionedProductProperties(req: operations.UpdateProvisionedProductPropertiesRequest, config?: AxiosRequestConfig): Promise<operations.UpdateProvisionedProductPropertiesResponse>;
    UpdateProvisioningArtifact(req: operations.UpdateProvisioningArtifactRequest, config?: AxiosRequestConfig): Promise<operations.UpdateProvisioningArtifactResponse>;
    UpdateServiceAction(req: operations.UpdateServiceActionRequest, config?: AxiosRequestConfig): Promise<operations.UpdateServiceActionResponse>;
    UpdateTagOption(req: operations.UpdateTagOptionRequest, config?: AxiosRequestConfig): Promise<operations.UpdateTagOptionResponse>;
}
export {};
