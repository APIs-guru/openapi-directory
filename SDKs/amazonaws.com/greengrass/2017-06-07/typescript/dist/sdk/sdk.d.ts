import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
import { Security } from "./models/shared";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare function WithSecurity(security: Security): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    AssociateRoleToGroup(req: operations.AssociateRoleToGroupRequest, config?: AxiosRequestConfig): Promise<operations.AssociateRoleToGroupResponse>;
    AssociateServiceRoleToAccount(req: operations.AssociateServiceRoleToAccountRequest, config?: AxiosRequestConfig): Promise<operations.AssociateServiceRoleToAccountResponse>;
    CreateConnectorDefinition(req: operations.CreateConnectorDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.CreateConnectorDefinitionResponse>;
    CreateConnectorDefinitionVersion(req: operations.CreateConnectorDefinitionVersionRequest, config?: AxiosRequestConfig): Promise<operations.CreateConnectorDefinitionVersionResponse>;
    CreateCoreDefinition(req: operations.CreateCoreDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.CreateCoreDefinitionResponse>;
    CreateCoreDefinitionVersion(req: operations.CreateCoreDefinitionVersionRequest, config?: AxiosRequestConfig): Promise<operations.CreateCoreDefinitionVersionResponse>;
    CreateDeployment(req: operations.CreateDeploymentRequest, config?: AxiosRequestConfig): Promise<operations.CreateDeploymentResponse>;
    CreateDeviceDefinition(req: operations.CreateDeviceDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.CreateDeviceDefinitionResponse>;
    CreateDeviceDefinitionVersion(req: operations.CreateDeviceDefinitionVersionRequest, config?: AxiosRequestConfig): Promise<operations.CreateDeviceDefinitionVersionResponse>;
    CreateFunctionDefinition(req: operations.CreateFunctionDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.CreateFunctionDefinitionResponse>;
    CreateFunctionDefinitionVersion(req: operations.CreateFunctionDefinitionVersionRequest, config?: AxiosRequestConfig): Promise<operations.CreateFunctionDefinitionVersionResponse>;
    CreateGroup(req: operations.CreateGroupRequest, config?: AxiosRequestConfig): Promise<operations.CreateGroupResponse>;
    CreateGroupCertificateAuthority(req: operations.CreateGroupCertificateAuthorityRequest, config?: AxiosRequestConfig): Promise<operations.CreateGroupCertificateAuthorityResponse>;
    CreateGroupVersion(req: operations.CreateGroupVersionRequest, config?: AxiosRequestConfig): Promise<operations.CreateGroupVersionResponse>;
    CreateLoggerDefinition(req: operations.CreateLoggerDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.CreateLoggerDefinitionResponse>;
    CreateLoggerDefinitionVersion(req: operations.CreateLoggerDefinitionVersionRequest, config?: AxiosRequestConfig): Promise<operations.CreateLoggerDefinitionVersionResponse>;
    CreateResourceDefinition(req: operations.CreateResourceDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.CreateResourceDefinitionResponse>;
    CreateResourceDefinitionVersion(req: operations.CreateResourceDefinitionVersionRequest, config?: AxiosRequestConfig): Promise<operations.CreateResourceDefinitionVersionResponse>;
    CreateSoftwareUpdateJob(req: operations.CreateSoftwareUpdateJobRequest, config?: AxiosRequestConfig): Promise<operations.CreateSoftwareUpdateJobResponse>;
    CreateSubscriptionDefinition(req: operations.CreateSubscriptionDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.CreateSubscriptionDefinitionResponse>;
    CreateSubscriptionDefinitionVersion(req: operations.CreateSubscriptionDefinitionVersionRequest, config?: AxiosRequestConfig): Promise<operations.CreateSubscriptionDefinitionVersionResponse>;
    DeleteConnectorDefinition(req: operations.DeleteConnectorDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.DeleteConnectorDefinitionResponse>;
    DeleteCoreDefinition(req: operations.DeleteCoreDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.DeleteCoreDefinitionResponse>;
    DeleteDeviceDefinition(req: operations.DeleteDeviceDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.DeleteDeviceDefinitionResponse>;
    DeleteFunctionDefinition(req: operations.DeleteFunctionDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.DeleteFunctionDefinitionResponse>;
    DeleteGroup(req: operations.DeleteGroupRequest, config?: AxiosRequestConfig): Promise<operations.DeleteGroupResponse>;
    DeleteLoggerDefinition(req: operations.DeleteLoggerDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.DeleteLoggerDefinitionResponse>;
    DeleteResourceDefinition(req: operations.DeleteResourceDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.DeleteResourceDefinitionResponse>;
    DeleteSubscriptionDefinition(req: operations.DeleteSubscriptionDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.DeleteSubscriptionDefinitionResponse>;
    DisassociateRoleFromGroup(req: operations.DisassociateRoleFromGroupRequest, config?: AxiosRequestConfig): Promise<operations.DisassociateRoleFromGroupResponse>;
    DisassociateServiceRoleFromAccount(req: operations.DisassociateServiceRoleFromAccountRequest, config?: AxiosRequestConfig): Promise<operations.DisassociateServiceRoleFromAccountResponse>;
    GetAssociatedRole(req: operations.GetAssociatedRoleRequest, config?: AxiosRequestConfig): Promise<operations.GetAssociatedRoleResponse>;
    GetBulkDeploymentStatus(req: operations.GetBulkDeploymentStatusRequest, config?: AxiosRequestConfig): Promise<operations.GetBulkDeploymentStatusResponse>;
    GetConnectivityInfo(req: operations.GetConnectivityInfoRequest, config?: AxiosRequestConfig): Promise<operations.GetConnectivityInfoResponse>;
    GetConnectorDefinition(req: operations.GetConnectorDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.GetConnectorDefinitionResponse>;
    GetConnectorDefinitionVersion(req: operations.GetConnectorDefinitionVersionRequest, config?: AxiosRequestConfig): Promise<operations.GetConnectorDefinitionVersionResponse>;
    GetCoreDefinition(req: operations.GetCoreDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.GetCoreDefinitionResponse>;
    GetCoreDefinitionVersion(req: operations.GetCoreDefinitionVersionRequest, config?: AxiosRequestConfig): Promise<operations.GetCoreDefinitionVersionResponse>;
    GetDeploymentStatus(req: operations.GetDeploymentStatusRequest, config?: AxiosRequestConfig): Promise<operations.GetDeploymentStatusResponse>;
    GetDeviceDefinition(req: operations.GetDeviceDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.GetDeviceDefinitionResponse>;
    GetDeviceDefinitionVersion(req: operations.GetDeviceDefinitionVersionRequest, config?: AxiosRequestConfig): Promise<operations.GetDeviceDefinitionVersionResponse>;
    GetFunctionDefinition(req: operations.GetFunctionDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.GetFunctionDefinitionResponse>;
    GetFunctionDefinitionVersion(req: operations.GetFunctionDefinitionVersionRequest, config?: AxiosRequestConfig): Promise<operations.GetFunctionDefinitionVersionResponse>;
    GetGroup(req: operations.GetGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetGroupResponse>;
    GetGroupCertificateAuthority(req: operations.GetGroupCertificateAuthorityRequest, config?: AxiosRequestConfig): Promise<operations.GetGroupCertificateAuthorityResponse>;
    GetGroupCertificateConfiguration(req: operations.GetGroupCertificateConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.GetGroupCertificateConfigurationResponse>;
    GetGroupVersion(req: operations.GetGroupVersionRequest, config?: AxiosRequestConfig): Promise<operations.GetGroupVersionResponse>;
    GetLoggerDefinition(req: operations.GetLoggerDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.GetLoggerDefinitionResponse>;
    GetLoggerDefinitionVersion(req: operations.GetLoggerDefinitionVersionRequest, config?: AxiosRequestConfig): Promise<operations.GetLoggerDefinitionVersionResponse>;
    GetResourceDefinition(req: operations.GetResourceDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.GetResourceDefinitionResponse>;
    GetResourceDefinitionVersion(req: operations.GetResourceDefinitionVersionRequest, config?: AxiosRequestConfig): Promise<operations.GetResourceDefinitionVersionResponse>;
    GetServiceRoleForAccount(req: operations.GetServiceRoleForAccountRequest, config?: AxiosRequestConfig): Promise<operations.GetServiceRoleForAccountResponse>;
    GetSubscriptionDefinition(req: operations.GetSubscriptionDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.GetSubscriptionDefinitionResponse>;
    GetSubscriptionDefinitionVersion(req: operations.GetSubscriptionDefinitionVersionRequest, config?: AxiosRequestConfig): Promise<operations.GetSubscriptionDefinitionVersionResponse>;
    GetThingRuntimeConfiguration(req: operations.GetThingRuntimeConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.GetThingRuntimeConfigurationResponse>;
    ListBulkDeploymentDetailedReports(req: operations.ListBulkDeploymentDetailedReportsRequest, config?: AxiosRequestConfig): Promise<operations.ListBulkDeploymentDetailedReportsResponse>;
    ListBulkDeployments(req: operations.ListBulkDeploymentsRequest, config?: AxiosRequestConfig): Promise<operations.ListBulkDeploymentsResponse>;
    ListConnectorDefinitionVersions(req: operations.ListConnectorDefinitionVersionsRequest, config?: AxiosRequestConfig): Promise<operations.ListConnectorDefinitionVersionsResponse>;
    ListConnectorDefinitions(req: operations.ListConnectorDefinitionsRequest, config?: AxiosRequestConfig): Promise<operations.ListConnectorDefinitionsResponse>;
    ListCoreDefinitionVersions(req: operations.ListCoreDefinitionVersionsRequest, config?: AxiosRequestConfig): Promise<operations.ListCoreDefinitionVersionsResponse>;
    ListCoreDefinitions(req: operations.ListCoreDefinitionsRequest, config?: AxiosRequestConfig): Promise<operations.ListCoreDefinitionsResponse>;
    ListDeployments(req: operations.ListDeploymentsRequest, config?: AxiosRequestConfig): Promise<operations.ListDeploymentsResponse>;
    ListDeviceDefinitionVersions(req: operations.ListDeviceDefinitionVersionsRequest, config?: AxiosRequestConfig): Promise<operations.ListDeviceDefinitionVersionsResponse>;
    ListDeviceDefinitions(req: operations.ListDeviceDefinitionsRequest, config?: AxiosRequestConfig): Promise<operations.ListDeviceDefinitionsResponse>;
    ListFunctionDefinitionVersions(req: operations.ListFunctionDefinitionVersionsRequest, config?: AxiosRequestConfig): Promise<operations.ListFunctionDefinitionVersionsResponse>;
    ListFunctionDefinitions(req: operations.ListFunctionDefinitionsRequest, config?: AxiosRequestConfig): Promise<operations.ListFunctionDefinitionsResponse>;
    ListGroupCertificateAuthorities(req: operations.ListGroupCertificateAuthoritiesRequest, config?: AxiosRequestConfig): Promise<operations.ListGroupCertificateAuthoritiesResponse>;
    ListGroupVersions(req: operations.ListGroupVersionsRequest, config?: AxiosRequestConfig): Promise<operations.ListGroupVersionsResponse>;
    ListGroups(req: operations.ListGroupsRequest, config?: AxiosRequestConfig): Promise<operations.ListGroupsResponse>;
    ListLoggerDefinitionVersions(req: operations.ListLoggerDefinitionVersionsRequest, config?: AxiosRequestConfig): Promise<operations.ListLoggerDefinitionVersionsResponse>;
    ListLoggerDefinitions(req: operations.ListLoggerDefinitionsRequest, config?: AxiosRequestConfig): Promise<operations.ListLoggerDefinitionsResponse>;
    ListResourceDefinitionVersions(req: operations.ListResourceDefinitionVersionsRequest, config?: AxiosRequestConfig): Promise<operations.ListResourceDefinitionVersionsResponse>;
    ListResourceDefinitions(req: operations.ListResourceDefinitionsRequest, config?: AxiosRequestConfig): Promise<operations.ListResourceDefinitionsResponse>;
    ListSubscriptionDefinitionVersions(req: operations.ListSubscriptionDefinitionVersionsRequest, config?: AxiosRequestConfig): Promise<operations.ListSubscriptionDefinitionVersionsResponse>;
    ListSubscriptionDefinitions(req: operations.ListSubscriptionDefinitionsRequest, config?: AxiosRequestConfig): Promise<operations.ListSubscriptionDefinitionsResponse>;
    ListTagsForResource(req: operations.ListTagsForResourceRequest, config?: AxiosRequestConfig): Promise<operations.ListTagsForResourceResponse>;
    ResetDeployments(req: operations.ResetDeploymentsRequest, config?: AxiosRequestConfig): Promise<operations.ResetDeploymentsResponse>;
    StartBulkDeployment(req: operations.StartBulkDeploymentRequest, config?: AxiosRequestConfig): Promise<operations.StartBulkDeploymentResponse>;
    StopBulkDeployment(req: operations.StopBulkDeploymentRequest, config?: AxiosRequestConfig): Promise<operations.StopBulkDeploymentResponse>;
    TagResource(req: operations.TagResourceRequest, config?: AxiosRequestConfig): Promise<operations.TagResourceResponse>;
    UntagResource(req: operations.UntagResourceRequest, config?: AxiosRequestConfig): Promise<operations.UntagResourceResponse>;
    UpdateConnectivityInfo(req: operations.UpdateConnectivityInfoRequest, config?: AxiosRequestConfig): Promise<operations.UpdateConnectivityInfoResponse>;
    UpdateConnectorDefinition(req: operations.UpdateConnectorDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.UpdateConnectorDefinitionResponse>;
    UpdateCoreDefinition(req: operations.UpdateCoreDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.UpdateCoreDefinitionResponse>;
    UpdateDeviceDefinition(req: operations.UpdateDeviceDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.UpdateDeviceDefinitionResponse>;
    UpdateFunctionDefinition(req: operations.UpdateFunctionDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.UpdateFunctionDefinitionResponse>;
    UpdateGroup(req: operations.UpdateGroupRequest, config?: AxiosRequestConfig): Promise<operations.UpdateGroupResponse>;
    UpdateGroupCertificateConfiguration(req: operations.UpdateGroupCertificateConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.UpdateGroupCertificateConfigurationResponse>;
    UpdateLoggerDefinition(req: operations.UpdateLoggerDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.UpdateLoggerDefinitionResponse>;
    UpdateResourceDefinition(req: operations.UpdateResourceDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.UpdateResourceDefinitionResponse>;
    UpdateSubscriptionDefinition(req: operations.UpdateSubscriptionDefinitionRequest, config?: AxiosRequestConfig): Promise<operations.UpdateSubscriptionDefinitionResponse>;
    UpdateThingRuntimeConfiguration(req: operations.UpdateThingRuntimeConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.UpdateThingRuntimeConfigurationResponse>;
}
export {};
