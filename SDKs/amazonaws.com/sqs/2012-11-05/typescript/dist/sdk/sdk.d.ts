import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
import { Security } from "./models/shared";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare function WithSecurity(security: Security): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    GetAddPermission(req: operations.GetAddPermissionRequest, config?: AxiosRequestConfig): Promise<operations.GetAddPermissionResponse>;
    GetChangeMessageVisibility(req: operations.GetChangeMessageVisibilityRequest, config?: AxiosRequestConfig): Promise<operations.GetChangeMessageVisibilityResponse>;
    GetCreateQueue(req: operations.GetCreateQueueRequest, config?: AxiosRequestConfig): Promise<operations.GetCreateQueueResponse>;
    GetDeleteMessage(req: operations.GetDeleteMessageRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteMessageResponse>;
    GetDeleteQueue(req: operations.GetDeleteQueueRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteQueueResponse>;
    GetGetQueueAttributes(req: operations.GetGetQueueAttributesRequest, config?: AxiosRequestConfig): Promise<operations.GetGetQueueAttributesResponse>;
    GetGetQueueUrl(req: operations.GetGetQueueUrlRequest, config?: AxiosRequestConfig): Promise<operations.GetGetQueueUrlResponse>;
    GetListDeadLetterSourceQueues(req: operations.GetListDeadLetterSourceQueuesRequest, config?: AxiosRequestConfig): Promise<operations.GetListDeadLetterSourceQueuesResponse>;
    GetListQueueTags(req: operations.GetListQueueTagsRequest, config?: AxiosRequestConfig): Promise<operations.GetListQueueTagsResponse>;
    GetListQueues(req: operations.GetListQueuesRequest, config?: AxiosRequestConfig): Promise<operations.GetListQueuesResponse>;
    GetPurgeQueue(req: operations.GetPurgeQueueRequest, config?: AxiosRequestConfig): Promise<operations.GetPurgeQueueResponse>;
    GetReceiveMessage(req: operations.GetReceiveMessageRequest, config?: AxiosRequestConfig): Promise<operations.GetReceiveMessageResponse>;
    GetRemovePermission(req: operations.GetRemovePermissionRequest, config?: AxiosRequestConfig): Promise<operations.GetRemovePermissionResponse>;
    GetSetQueueAttributes(req: operations.GetSetQueueAttributesRequest, config?: AxiosRequestConfig): Promise<operations.GetSetQueueAttributesResponse>;
    GetTagQueue(req: operations.GetTagQueueRequest, config?: AxiosRequestConfig): Promise<operations.GetTagQueueResponse>;
    GetUntagQueue(req: operations.GetUntagQueueRequest, config?: AxiosRequestConfig): Promise<operations.GetUntagQueueResponse>;
    PostAddPermission(req: operations.PostAddPermissionRequest, config?: AxiosRequestConfig): Promise<operations.PostAddPermissionResponse>;
    PostChangeMessageVisibility(req: operations.PostChangeMessageVisibilityRequest, config?: AxiosRequestConfig): Promise<operations.PostChangeMessageVisibilityResponse>;
    PostChangeMessageVisibilityBatch(req: operations.PostChangeMessageVisibilityBatchRequest, config?: AxiosRequestConfig): Promise<operations.PostChangeMessageVisibilityBatchResponse>;
    PostCreateQueue(req: operations.PostCreateQueueRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateQueueResponse>;
    PostDeleteMessage(req: operations.PostDeleteMessageRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteMessageResponse>;
    PostDeleteMessageBatch(req: operations.PostDeleteMessageBatchRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteMessageBatchResponse>;
    PostDeleteQueue(req: operations.PostDeleteQueueRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteQueueResponse>;
    PostGetQueueAttributes(req: operations.PostGetQueueAttributesRequest, config?: AxiosRequestConfig): Promise<operations.PostGetQueueAttributesResponse>;
    PostGetQueueUrl(req: operations.PostGetQueueUrlRequest, config?: AxiosRequestConfig): Promise<operations.PostGetQueueUrlResponse>;
    PostListDeadLetterSourceQueues(req: operations.PostListDeadLetterSourceQueuesRequest, config?: AxiosRequestConfig): Promise<operations.PostListDeadLetterSourceQueuesResponse>;
    PostListQueueTags(req: operations.PostListQueueTagsRequest, config?: AxiosRequestConfig): Promise<operations.PostListQueueTagsResponse>;
    PostListQueues(req: operations.PostListQueuesRequest, config?: AxiosRequestConfig): Promise<operations.PostListQueuesResponse>;
    PostPurgeQueue(req: operations.PostPurgeQueueRequest, config?: AxiosRequestConfig): Promise<operations.PostPurgeQueueResponse>;
    PostReceiveMessage(req: operations.PostReceiveMessageRequest, config?: AxiosRequestConfig): Promise<operations.PostReceiveMessageResponse>;
    PostRemovePermission(req: operations.PostRemovePermissionRequest, config?: AxiosRequestConfig): Promise<operations.PostRemovePermissionResponse>;
    PostSendMessage(req: operations.PostSendMessageRequest, config?: AxiosRequestConfig): Promise<operations.PostSendMessageResponse>;
    PostSendMessageBatch(req: operations.PostSendMessageBatchRequest, config?: AxiosRequestConfig): Promise<operations.PostSendMessageBatchResponse>;
    PostSetQueueAttributes(req: operations.PostSetQueueAttributesRequest, config?: AxiosRequestConfig): Promise<operations.PostSetQueueAttributesResponse>;
    PostTagQueue(req: operations.PostTagQueueRequest, config?: AxiosRequestConfig): Promise<operations.PostTagQueueResponse>;
    PostUntagQueue(req: operations.PostUntagQueueRequest, config?: AxiosRequestConfig): Promise<operations.PostUntagQueueResponse>;
}
export {};
