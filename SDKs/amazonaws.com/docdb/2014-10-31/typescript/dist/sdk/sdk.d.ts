import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
import { Security } from "./models/shared";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare function WithSecurity(security: Security): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    GetAddSourceIdentifierToSubscription(req: operations.GetAddSourceIdentifierToSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.GetAddSourceIdentifierToSubscriptionResponse>;
    GetApplyPendingMaintenanceAction(req: operations.GetApplyPendingMaintenanceActionRequest, config?: AxiosRequestConfig): Promise<operations.GetApplyPendingMaintenanceActionResponse>;
    GetCreateGlobalCluster(req: operations.GetCreateGlobalClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetCreateGlobalClusterResponse>;
    GetDeleteDbCluster(req: operations.GetDeleteDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbClusterResponse>;
    GetDeleteDbClusterParameterGroup(req: operations.GetDeleteDbClusterParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbClusterParameterGroupResponse>;
    GetDeleteDbClusterSnapshot(req: operations.GetDeleteDbClusterSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbClusterSnapshotResponse>;
    GetDeleteDbInstance(req: operations.GetDeleteDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbInstanceResponse>;
    GetDeleteDbSubnetGroup(req: operations.GetDeleteDbSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteDbSubnetGroupResponse>;
    GetDeleteEventSubscription(req: operations.GetDeleteEventSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteEventSubscriptionResponse>;
    GetDeleteGlobalCluster(req: operations.GetDeleteGlobalClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteGlobalClusterResponse>;
    GetDescribeDbClusterSnapshotAttributes(req: operations.GetDescribeDbClusterSnapshotAttributesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeDbClusterSnapshotAttributesResponse>;
    GetFailoverDbCluster(req: operations.GetFailoverDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetFailoverDbClusterResponse>;
    GetModifyDbCluster(req: operations.GetModifyDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyDbClusterResponse>;
    GetModifyDbClusterSnapshotAttribute(req: operations.GetModifyDbClusterSnapshotAttributeRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyDbClusterSnapshotAttributeResponse>;
    GetModifyDbInstance(req: operations.GetModifyDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyDbInstanceResponse>;
    GetModifyDbSubnetGroup(req: operations.GetModifyDbSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyDbSubnetGroupResponse>;
    GetModifyEventSubscription(req: operations.GetModifyEventSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyEventSubscriptionResponse>;
    GetModifyGlobalCluster(req: operations.GetModifyGlobalClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetModifyGlobalClusterResponse>;
    GetRebootDbInstance(req: operations.GetRebootDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.GetRebootDbInstanceResponse>;
    GetRemoveFromGlobalCluster(req: operations.GetRemoveFromGlobalClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetRemoveFromGlobalClusterResponse>;
    GetRemoveSourceIdentifierFromSubscription(req: operations.GetRemoveSourceIdentifierFromSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.GetRemoveSourceIdentifierFromSubscriptionResponse>;
    GetRemoveTagsFromResource(req: operations.GetRemoveTagsFromResourceRequest, config?: AxiosRequestConfig): Promise<operations.GetRemoveTagsFromResourceResponse>;
    GetStartDbCluster(req: operations.GetStartDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetStartDbClusterResponse>;
    GetStopDbCluster(req: operations.GetStopDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.GetStopDbClusterResponse>;
    PostAddSourceIdentifierToSubscription(req: operations.PostAddSourceIdentifierToSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.PostAddSourceIdentifierToSubscriptionResponse>;
    PostAddTagsToResource(req: operations.PostAddTagsToResourceRequest, config?: AxiosRequestConfig): Promise<operations.PostAddTagsToResourceResponse>;
    PostApplyPendingMaintenanceAction(req: operations.PostApplyPendingMaintenanceActionRequest, config?: AxiosRequestConfig): Promise<operations.PostApplyPendingMaintenanceActionResponse>;
    PostCopyDbClusterParameterGroup(req: operations.PostCopyDbClusterParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCopyDbClusterParameterGroupResponse>;
    PostCopyDbClusterSnapshot(req: operations.PostCopyDbClusterSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.PostCopyDbClusterSnapshotResponse>;
    PostCreateDbCluster(req: operations.PostCreateDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbClusterResponse>;
    PostCreateDbClusterParameterGroup(req: operations.PostCreateDbClusterParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbClusterParameterGroupResponse>;
    PostCreateDbClusterSnapshot(req: operations.PostCreateDbClusterSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbClusterSnapshotResponse>;
    PostCreateDbInstance(req: operations.PostCreateDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbInstanceResponse>;
    PostCreateDbSubnetGroup(req: operations.PostCreateDbSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateDbSubnetGroupResponse>;
    PostCreateEventSubscription(req: operations.PostCreateEventSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateEventSubscriptionResponse>;
    PostCreateGlobalCluster(req: operations.PostCreateGlobalClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateGlobalClusterResponse>;
    PostDeleteDbCluster(req: operations.PostDeleteDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbClusterResponse>;
    PostDeleteDbClusterParameterGroup(req: operations.PostDeleteDbClusterParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbClusterParameterGroupResponse>;
    PostDeleteDbClusterSnapshot(req: operations.PostDeleteDbClusterSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbClusterSnapshotResponse>;
    PostDeleteDbInstance(req: operations.PostDeleteDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbInstanceResponse>;
    PostDeleteDbSubnetGroup(req: operations.PostDeleteDbSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteDbSubnetGroupResponse>;
    PostDeleteEventSubscription(req: operations.PostDeleteEventSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteEventSubscriptionResponse>;
    PostDeleteGlobalCluster(req: operations.PostDeleteGlobalClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteGlobalClusterResponse>;
    PostDescribeCertificates(req: operations.PostDescribeCertificatesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeCertificatesResponse>;
    PostDescribeDbClusterParameterGroups(req: operations.PostDescribeDbClusterParameterGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbClusterParameterGroupsResponse>;
    PostDescribeDbClusterParameters(req: operations.PostDescribeDbClusterParametersRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbClusterParametersResponse>;
    PostDescribeDbClusterSnapshotAttributes(req: operations.PostDescribeDbClusterSnapshotAttributesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbClusterSnapshotAttributesResponse>;
    PostDescribeDbClusterSnapshots(req: operations.PostDescribeDbClusterSnapshotsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbClusterSnapshotsResponse>;
    PostDescribeDbClusters(req: operations.PostDescribeDbClustersRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbClustersResponse>;
    PostDescribeDbEngineVersions(req: operations.PostDescribeDbEngineVersionsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbEngineVersionsResponse>;
    PostDescribeDbInstances(req: operations.PostDescribeDbInstancesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbInstancesResponse>;
    PostDescribeDbSubnetGroups(req: operations.PostDescribeDbSubnetGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeDbSubnetGroupsResponse>;
    PostDescribeEngineDefaultClusterParameters(req: operations.PostDescribeEngineDefaultClusterParametersRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEngineDefaultClusterParametersResponse>;
    PostDescribeEventCategories(req: operations.PostDescribeEventCategoriesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEventCategoriesResponse>;
    PostDescribeEventSubscriptions(req: operations.PostDescribeEventSubscriptionsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEventSubscriptionsResponse>;
    PostDescribeEvents(req: operations.PostDescribeEventsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeEventsResponse>;
    PostDescribeGlobalClusters(req: operations.PostDescribeGlobalClustersRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeGlobalClustersResponse>;
    PostDescribeOrderableDbInstanceOptions(req: operations.PostDescribeOrderableDbInstanceOptionsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeOrderableDbInstanceOptionsResponse>;
    PostDescribePendingMaintenanceActions(req: operations.PostDescribePendingMaintenanceActionsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribePendingMaintenanceActionsResponse>;
    PostFailoverDbCluster(req: operations.PostFailoverDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostFailoverDbClusterResponse>;
    PostListTagsForResource(req: operations.PostListTagsForResourceRequest, config?: AxiosRequestConfig): Promise<operations.PostListTagsForResourceResponse>;
    PostModifyDbCluster(req: operations.PostModifyDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyDbClusterResponse>;
    PostModifyDbClusterParameterGroup(req: operations.PostModifyDbClusterParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyDbClusterParameterGroupResponse>;
    PostModifyDbClusterSnapshotAttribute(req: operations.PostModifyDbClusterSnapshotAttributeRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyDbClusterSnapshotAttributeResponse>;
    PostModifyDbInstance(req: operations.PostModifyDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyDbInstanceResponse>;
    PostModifyDbSubnetGroup(req: operations.PostModifyDbSubnetGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyDbSubnetGroupResponse>;
    PostModifyEventSubscription(req: operations.PostModifyEventSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyEventSubscriptionResponse>;
    PostModifyGlobalCluster(req: operations.PostModifyGlobalClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostModifyGlobalClusterResponse>;
    PostRebootDbInstance(req: operations.PostRebootDbInstanceRequest, config?: AxiosRequestConfig): Promise<operations.PostRebootDbInstanceResponse>;
    PostRemoveFromGlobalCluster(req: operations.PostRemoveFromGlobalClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostRemoveFromGlobalClusterResponse>;
    PostRemoveSourceIdentifierFromSubscription(req: operations.PostRemoveSourceIdentifierFromSubscriptionRequest, config?: AxiosRequestConfig): Promise<operations.PostRemoveSourceIdentifierFromSubscriptionResponse>;
    PostRemoveTagsFromResource(req: operations.PostRemoveTagsFromResourceRequest, config?: AxiosRequestConfig): Promise<operations.PostRemoveTagsFromResourceResponse>;
    PostResetDbClusterParameterGroup(req: operations.PostResetDbClusterParameterGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostResetDbClusterParameterGroupResponse>;
    PostRestoreDbClusterFromSnapshot(req: operations.PostRestoreDbClusterFromSnapshotRequest, config?: AxiosRequestConfig): Promise<operations.PostRestoreDbClusterFromSnapshotResponse>;
    PostRestoreDbClusterToPointInTime(req: operations.PostRestoreDbClusterToPointInTimeRequest, config?: AxiosRequestConfig): Promise<operations.PostRestoreDbClusterToPointInTimeResponse>;
    PostStartDbCluster(req: operations.PostStartDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostStartDbClusterResponse>;
    PostStopDbCluster(req: operations.PostStopDbClusterRequest, config?: AxiosRequestConfig): Promise<operations.PostStopDbClusterResponse>;
}
export {};
