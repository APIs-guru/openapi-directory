from dataclasses import dataclass, field
from datetime import date, datetime
from marshmallow import fields
import dateutil.parser
from typing import Optional
from enum import Enum
from dataclasses_json import dataclass_json
from sdk import utils
from . import *


@dataclass_json
@dataclass
class HistoryEvent:
    r"""HistoryEvent
    <p>Event within a workflow execution. A history event can be one of these types:</p> <ul> <li> <p> <code>ActivityTaskCancelRequested</code> – A <code>RequestCancelActivityTask</code> decision was received by the system.</p> </li> <li> <p> <code>ActivityTaskCanceled</code> – The activity task was successfully canceled.</p> </li> <li> <p> <code>ActivityTaskCompleted</code> – An activity worker successfully completed an activity task by calling <a>RespondActivityTaskCompleted</a>.</p> </li> <li> <p> <code>ActivityTaskFailed</code> – An activity worker failed an activity task by calling <a>RespondActivityTaskFailed</a>.</p> </li> <li> <p> <code>ActivityTaskScheduled</code> – An activity task was scheduled for execution.</p> </li> <li> <p> <code>ActivityTaskStarted</code> – The scheduled activity task was dispatched to a worker.</p> </li> <li> <p> <code>ActivityTaskTimedOut</code> – The activity task timed out.</p> </li> <li> <p> <code>CancelTimerFailed</code> – Failed to process CancelTimer decision. This happens when the decision isn't configured properly, for example no timer exists with the specified timer Id.</p> </li> <li> <p> <code>CancelWorkflowExecutionFailed</code> – A request to cancel a workflow execution failed.</p> </li> <li> <p> <code>ChildWorkflowExecutionCanceled</code> – A child workflow execution, started by this workflow execution, was canceled and closed.</p> </li> <li> <p> <code>ChildWorkflowExecutionCompleted</code> – A child workflow execution, started by this workflow execution, completed successfully and was closed.</p> </li> <li> <p> <code>ChildWorkflowExecutionFailed</code> – A child workflow execution, started by this workflow execution, failed to complete successfully and was closed.</p> </li> <li> <p> <code>ChildWorkflowExecutionStarted</code> – A child workflow execution was successfully started.</p> </li> <li> <p> <code>ChildWorkflowExecutionTerminated</code> – A child workflow execution, started by this workflow execution, was terminated.</p> </li> <li> <p> <code>ChildWorkflowExecutionTimedOut</code> – A child workflow execution, started by this workflow execution, timed out and was closed.</p> </li> <li> <p> <code>CompleteWorkflowExecutionFailed</code> – The workflow execution failed to complete.</p> </li> <li> <p> <code>ContinueAsNewWorkflowExecutionFailed</code> – The workflow execution failed to complete after being continued as a new workflow execution.</p> </li> <li> <p> <code>DecisionTaskCompleted</code> – The decider successfully completed a decision task by calling <a>RespondDecisionTaskCompleted</a>.</p> </li> <li> <p> <code>DecisionTaskScheduled</code> – A decision task was scheduled for the workflow execution.</p> </li> <li> <p> <code>DecisionTaskStarted</code> – The decision task was dispatched to a decider.</p> </li> <li> <p> <code>DecisionTaskTimedOut</code> – The decision task timed out.</p> </li> <li> <p> <code>ExternalWorkflowExecutionCancelRequested</code> – Request to cancel an external workflow execution was successfully delivered to the target execution.</p> </li> <li> <p> <code>ExternalWorkflowExecutionSignaled</code> – A signal, requested by this workflow execution, was successfully delivered to the target external workflow execution.</p> </li> <li> <p> <code>FailWorkflowExecutionFailed</code> – A request to mark a workflow execution as failed, itself failed.</p> </li> <li> <p> <code>MarkerRecorded</code> – A marker was recorded in the workflow history as the result of a <code>RecordMarker</code> decision.</p> </li> <li> <p> <code>RecordMarkerFailed</code> – A <code>RecordMarker</code> decision was returned as failed.</p> </li> <li> <p> <code>RequestCancelActivityTaskFailed</code> – Failed to process RequestCancelActivityTask decision. This happens when the decision isn't configured properly.</p> </li> <li> <p> <code>RequestCancelExternalWorkflowExecutionFailed</code> – Request to cancel an external workflow execution failed.</p> </li> <li> <p> <code>RequestCancelExternalWorkflowExecutionInitiated</code> – A request was made to request the cancellation of an external workflow execution.</p> </li> <li> <p> <code>ScheduleActivityTaskFailed</code> – Failed to process ScheduleActivityTask decision. This happens when the decision isn't configured properly, for example the activity type specified isn't registered.</p> </li> <li> <p> <code>SignalExternalWorkflowExecutionFailed</code> – The request to signal an external workflow execution failed.</p> </li> <li> <p> <code>SignalExternalWorkflowExecutionInitiated</code> – A request to signal an external workflow was made.</p> </li> <li> <p> <code>StartActivityTaskFailed</code> – A scheduled activity task failed to start.</p> </li> <li> <p> <code>StartChildWorkflowExecutionFailed</code> – Failed to process StartChildWorkflowExecution decision. This happens when the decision isn't configured properly, for example the workflow type specified isn't registered.</p> </li> <li> <p> <code>StartChildWorkflowExecutionInitiated</code> – A request was made to start a child workflow execution.</p> </li> <li> <p> <code>StartTimerFailed</code> – Failed to process StartTimer decision. This happens when the decision isn't configured properly, for example a timer already exists with the specified timer Id.</p> </li> <li> <p> <code>TimerCanceled</code> – A timer, previously started for this workflow execution, was successfully canceled.</p> </li> <li> <p> <code>TimerFired</code> – A timer, previously started for this workflow execution, fired.</p> </li> <li> <p> <code>TimerStarted</code> – A timer was started for the workflow execution due to a <code>StartTimer</code> decision.</p> </li> <li> <p> <code>WorkflowExecutionCancelRequested</code> – A request to cancel this workflow execution was made.</p> </li> <li> <p> <code>WorkflowExecutionCanceled</code> – The workflow execution was successfully canceled and closed.</p> </li> <li> <p> <code>WorkflowExecutionCompleted</code> – The workflow execution was closed due to successful completion.</p> </li> <li> <p> <code>WorkflowExecutionContinuedAsNew</code> – The workflow execution was closed and a new execution of the same type was created with the same workflowId.</p> </li> <li> <p> <code>WorkflowExecutionFailed</code> – The workflow execution closed due to a failure.</p> </li> <li> <p> <code>WorkflowExecutionSignaled</code> – An external signal was received for the workflow execution.</p> </li> <li> <p> <code>WorkflowExecutionStarted</code> – The workflow execution was started.</p> </li> <li> <p> <code>WorkflowExecutionTerminated</code> – The workflow execution was terminated.</p> </li> <li> <p> <code>WorkflowExecutionTimedOut</code> – The workflow execution was closed because a time out was exceeded.</p> </li> </ul>
    """
    
    event_id: int = field(metadata={'dataclasses_json': { 'letter_case': utils.field_name('eventId') }})
    event_timestamp: datetime = field(metadata={'dataclasses_json': { 'letter_case': utils.field_name('eventTimestamp'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    event_type: EventTypeEnum = field(metadata={'dataclasses_json': { 'letter_case': utils.field_name('eventType') }})
    activity_task_cancel_requested_event_attributes: Optional[ActivityTaskCancelRequestedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('activityTaskCancelRequestedEventAttributes') }})
    activity_task_canceled_event_attributes: Optional[ActivityTaskCanceledEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('activityTaskCanceledEventAttributes') }})
    activity_task_completed_event_attributes: Optional[ActivityTaskCompletedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('activityTaskCompletedEventAttributes') }})
    activity_task_failed_event_attributes: Optional[ActivityTaskFailedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('activityTaskFailedEventAttributes') }})
    activity_task_scheduled_event_attributes: Optional[ActivityTaskScheduledEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('activityTaskScheduledEventAttributes') }})
    activity_task_started_event_attributes: Optional[ActivityTaskStartedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('activityTaskStartedEventAttributes') }})
    activity_task_timed_out_event_attributes: Optional[ActivityTaskTimedOutEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('activityTaskTimedOutEventAttributes') }})
    cancel_timer_failed_event_attributes: Optional[CancelTimerFailedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('cancelTimerFailedEventAttributes') }})
    cancel_workflow_execution_failed_event_attributes: Optional[CancelWorkflowExecutionFailedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('cancelWorkflowExecutionFailedEventAttributes') }})
    child_workflow_execution_canceled_event_attributes: Optional[ChildWorkflowExecutionCanceledEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('childWorkflowExecutionCanceledEventAttributes') }})
    child_workflow_execution_completed_event_attributes: Optional[ChildWorkflowExecutionCompletedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('childWorkflowExecutionCompletedEventAttributes') }})
    child_workflow_execution_failed_event_attributes: Optional[ChildWorkflowExecutionFailedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('childWorkflowExecutionFailedEventAttributes') }})
    child_workflow_execution_started_event_attributes: Optional[ChildWorkflowExecutionStartedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('childWorkflowExecutionStartedEventAttributes') }})
    child_workflow_execution_terminated_event_attributes: Optional[ChildWorkflowExecutionTerminatedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('childWorkflowExecutionTerminatedEventAttributes') }})
    child_workflow_execution_timed_out_event_attributes: Optional[ChildWorkflowExecutionTimedOutEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('childWorkflowExecutionTimedOutEventAttributes') }})
    complete_workflow_execution_failed_event_attributes: Optional[CompleteWorkflowExecutionFailedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('completeWorkflowExecutionFailedEventAttributes') }})
    continue_as_new_workflow_execution_failed_event_attributes: Optional[ContinueAsNewWorkflowExecutionFailedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('continueAsNewWorkflowExecutionFailedEventAttributes') }})
    decision_task_completed_event_attributes: Optional[DecisionTaskCompletedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('decisionTaskCompletedEventAttributes') }})
    decision_task_scheduled_event_attributes: Optional[DecisionTaskScheduledEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('decisionTaskScheduledEventAttributes') }})
    decision_task_started_event_attributes: Optional[DecisionTaskStartedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('decisionTaskStartedEventAttributes') }})
    decision_task_timed_out_event_attributes: Optional[DecisionTaskTimedOutEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('decisionTaskTimedOutEventAttributes') }})
    external_workflow_execution_cancel_requested_event_attributes: Optional[ExternalWorkflowExecutionCancelRequestedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('externalWorkflowExecutionCancelRequestedEventAttributes') }})
    external_workflow_execution_signaled_event_attributes: Optional[ExternalWorkflowExecutionSignaledEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('externalWorkflowExecutionSignaledEventAttributes') }})
    fail_workflow_execution_failed_event_attributes: Optional[FailWorkflowExecutionFailedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('failWorkflowExecutionFailedEventAttributes') }})
    lambda_function_completed_event_attributes: Optional[LambdaFunctionCompletedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('lambdaFunctionCompletedEventAttributes') }})
    lambda_function_failed_event_attributes: Optional[LambdaFunctionFailedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('lambdaFunctionFailedEventAttributes') }})
    lambda_function_scheduled_event_attributes: Optional[LambdaFunctionScheduledEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('lambdaFunctionScheduledEventAttributes') }})
    lambda_function_started_event_attributes: Optional[LambdaFunctionStartedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('lambdaFunctionStartedEventAttributes') }})
    lambda_function_timed_out_event_attributes: Optional[LambdaFunctionTimedOutEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('lambdaFunctionTimedOutEventAttributes') }})
    marker_recorded_event_attributes: Optional[MarkerRecordedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('markerRecordedEventAttributes') }})
    record_marker_failed_event_attributes: Optional[RecordMarkerFailedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('recordMarkerFailedEventAttributes') }})
    request_cancel_activity_task_failed_event_attributes: Optional[RequestCancelActivityTaskFailedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('requestCancelActivityTaskFailedEventAttributes') }})
    request_cancel_external_workflow_execution_failed_event_attributes: Optional[RequestCancelExternalWorkflowExecutionFailedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('requestCancelExternalWorkflowExecutionFailedEventAttributes') }})
    request_cancel_external_workflow_execution_initiated_event_attributes: Optional[RequestCancelExternalWorkflowExecutionInitiatedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('requestCancelExternalWorkflowExecutionInitiatedEventAttributes') }})
    schedule_activity_task_failed_event_attributes: Optional[ScheduleActivityTaskFailedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('scheduleActivityTaskFailedEventAttributes') }})
    schedule_lambda_function_failed_event_attributes: Optional[ScheduleLambdaFunctionFailedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('scheduleLambdaFunctionFailedEventAttributes') }})
    signal_external_workflow_execution_failed_event_attributes: Optional[SignalExternalWorkflowExecutionFailedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('signalExternalWorkflowExecutionFailedEventAttributes') }})
    signal_external_workflow_execution_initiated_event_attributes: Optional[SignalExternalWorkflowExecutionInitiatedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('signalExternalWorkflowExecutionInitiatedEventAttributes') }})
    start_child_workflow_execution_failed_event_attributes: Optional[StartChildWorkflowExecutionFailedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('startChildWorkflowExecutionFailedEventAttributes') }})
    start_child_workflow_execution_initiated_event_attributes: Optional[StartChildWorkflowExecutionInitiatedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('startChildWorkflowExecutionInitiatedEventAttributes') }})
    start_lambda_function_failed_event_attributes: Optional[StartLambdaFunctionFailedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('startLambdaFunctionFailedEventAttributes') }})
    start_timer_failed_event_attributes: Optional[StartTimerFailedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('startTimerFailedEventAttributes') }})
    timer_canceled_event_attributes: Optional[TimerCanceledEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('timerCanceledEventAttributes') }})
    timer_fired_event_attributes: Optional[TimerFiredEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('timerFiredEventAttributes') }})
    timer_started_event_attributes: Optional[TimerStartedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('timerStartedEventAttributes') }})
    workflow_execution_cancel_requested_event_attributes: Optional[WorkflowExecutionCancelRequestedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workflowExecutionCancelRequestedEventAttributes') }})
    workflow_execution_canceled_event_attributes: Optional[WorkflowExecutionCanceledEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workflowExecutionCanceledEventAttributes') }})
    workflow_execution_completed_event_attributes: Optional[WorkflowExecutionCompletedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workflowExecutionCompletedEventAttributes') }})
    workflow_execution_continued_as_new_event_attributes: Optional[WorkflowExecutionContinuedAsNewEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workflowExecutionContinuedAsNewEventAttributes') }})
    workflow_execution_failed_event_attributes: Optional[WorkflowExecutionFailedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workflowExecutionFailedEventAttributes') }})
    workflow_execution_signaled_event_attributes: Optional[WorkflowExecutionSignaledEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workflowExecutionSignaledEventAttributes') }})
    workflow_execution_started_event_attributes: Optional[WorkflowExecutionStartedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workflowExecutionStartedEventAttributes') }})
    workflow_execution_terminated_event_attributes: Optional[WorkflowExecutionTerminatedEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workflowExecutionTerminatedEventAttributes') }})
    workflow_execution_timed_out_event_attributes: Optional[WorkflowExecutionTimedOutEventAttributes] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workflowExecutionTimedOutEventAttributes') }})
    
