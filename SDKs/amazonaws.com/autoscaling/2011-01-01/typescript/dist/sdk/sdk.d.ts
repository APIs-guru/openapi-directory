import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
import { Security } from "./models/shared";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare function WithSecurity(security: Security): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    GetAttachInstances(req: operations.GetAttachInstancesRequest, config?: AxiosRequestConfig): Promise<operations.GetAttachInstancesResponse>;
    GetAttachLoadBalancerTargetGroups(req: operations.GetAttachLoadBalancerTargetGroupsRequest, config?: AxiosRequestConfig): Promise<operations.GetAttachLoadBalancerTargetGroupsResponse>;
    GetAttachLoadBalancers(req: operations.GetAttachLoadBalancersRequest, config?: AxiosRequestConfig): Promise<operations.GetAttachLoadBalancersResponse>;
    GetBatchDeleteScheduledAction(req: operations.GetBatchDeleteScheduledActionRequest, config?: AxiosRequestConfig): Promise<operations.GetBatchDeleteScheduledActionResponse>;
    GetCancelInstanceRefresh(req: operations.GetCancelInstanceRefreshRequest, config?: AxiosRequestConfig): Promise<operations.GetCancelInstanceRefreshResponse>;
    GetCompleteLifecycleAction(req: operations.GetCompleteLifecycleActionRequest, config?: AxiosRequestConfig): Promise<operations.GetCompleteLifecycleActionResponse>;
    GetDeleteAutoScalingGroup(req: operations.GetDeleteAutoScalingGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteAutoScalingGroupResponse>;
    GetDeleteLaunchConfiguration(req: operations.GetDeleteLaunchConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteLaunchConfigurationResponse>;
    GetDeleteLifecycleHook(req: operations.GetDeleteLifecycleHookRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteLifecycleHookResponse>;
    GetDeleteNotificationConfiguration(req: operations.GetDeleteNotificationConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteNotificationConfigurationResponse>;
    GetDeletePolicy(req: operations.GetDeletePolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetDeletePolicyResponse>;
    GetDeleteScheduledAction(req: operations.GetDeleteScheduledActionRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteScheduledActionResponse>;
    GetDeleteWarmPool(req: operations.GetDeleteWarmPoolRequest, config?: AxiosRequestConfig): Promise<operations.GetDeleteWarmPoolResponse>;
    GetDescribeAccountLimits(req: operations.GetDescribeAccountLimitsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeAccountLimitsResponse>;
    GetDescribeAdjustmentTypes(req: operations.GetDescribeAdjustmentTypesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeAdjustmentTypesResponse>;
    GetDescribeAutoScalingGroups(req: operations.GetDescribeAutoScalingGroupsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeAutoScalingGroupsResponse>;
    GetDescribeAutoScalingInstances(req: operations.GetDescribeAutoScalingInstancesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeAutoScalingInstancesResponse>;
    GetDescribeAutoScalingNotificationTypes(req: operations.GetDescribeAutoScalingNotificationTypesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeAutoScalingNotificationTypesResponse>;
    GetDescribeInstanceRefreshes(req: operations.GetDescribeInstanceRefreshesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeInstanceRefreshesResponse>;
    GetDescribeLaunchConfigurations(req: operations.GetDescribeLaunchConfigurationsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeLaunchConfigurationsResponse>;
    GetDescribeLifecycleHookTypes(req: operations.GetDescribeLifecycleHookTypesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeLifecycleHookTypesResponse>;
    GetDescribeLifecycleHooks(req: operations.GetDescribeLifecycleHooksRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeLifecycleHooksResponse>;
    GetDescribeLoadBalancerTargetGroups(req: operations.GetDescribeLoadBalancerTargetGroupsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeLoadBalancerTargetGroupsResponse>;
    GetDescribeLoadBalancers(req: operations.GetDescribeLoadBalancersRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeLoadBalancersResponse>;
    GetDescribeMetricCollectionTypes(req: operations.GetDescribeMetricCollectionTypesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeMetricCollectionTypesResponse>;
    GetDescribeNotificationConfigurations(req: operations.GetDescribeNotificationConfigurationsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeNotificationConfigurationsResponse>;
    GetDescribePolicies(req: operations.GetDescribePoliciesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribePoliciesResponse>;
    GetDescribeScalingActivities(req: operations.GetDescribeScalingActivitiesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeScalingActivitiesResponse>;
    GetDescribeScalingProcessTypes(req: operations.GetDescribeScalingProcessTypesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeScalingProcessTypesResponse>;
    GetDescribeScheduledActions(req: operations.GetDescribeScheduledActionsRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeScheduledActionsResponse>;
    GetDescribeTerminationPolicyTypes(req: operations.GetDescribeTerminationPolicyTypesRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeTerminationPolicyTypesResponse>;
    GetDescribeWarmPool(req: operations.GetDescribeWarmPoolRequest, config?: AxiosRequestConfig): Promise<operations.GetDescribeWarmPoolResponse>;
    GetDetachInstances(req: operations.GetDetachInstancesRequest, config?: AxiosRequestConfig): Promise<operations.GetDetachInstancesResponse>;
    GetDetachLoadBalancerTargetGroups(req: operations.GetDetachLoadBalancerTargetGroupsRequest, config?: AxiosRequestConfig): Promise<operations.GetDetachLoadBalancerTargetGroupsResponse>;
    GetDetachLoadBalancers(req: operations.GetDetachLoadBalancersRequest, config?: AxiosRequestConfig): Promise<operations.GetDetachLoadBalancersResponse>;
    GetDisableMetricsCollection(req: operations.GetDisableMetricsCollectionRequest, config?: AxiosRequestConfig): Promise<operations.GetDisableMetricsCollectionResponse>;
    GetEnableMetricsCollection(req: operations.GetEnableMetricsCollectionRequest, config?: AxiosRequestConfig): Promise<operations.GetEnableMetricsCollectionResponse>;
    GetEnterStandby(req: operations.GetEnterStandbyRequest, config?: AxiosRequestConfig): Promise<operations.GetEnterStandbyResponse>;
    GetExecutePolicy(req: operations.GetExecutePolicyRequest, config?: AxiosRequestConfig): Promise<operations.GetExecutePolicyResponse>;
    GetExitStandby(req: operations.GetExitStandbyRequest, config?: AxiosRequestConfig): Promise<operations.GetExitStandbyResponse>;
    GetGetPredictiveScalingForecast(req: operations.GetGetPredictiveScalingForecastRequest, config?: AxiosRequestConfig): Promise<operations.GetGetPredictiveScalingForecastResponse>;
    GetPutLifecycleHook(req: operations.GetPutLifecycleHookRequest, config?: AxiosRequestConfig): Promise<operations.GetPutLifecycleHookResponse>;
    GetPutNotificationConfiguration(req: operations.GetPutNotificationConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.GetPutNotificationConfigurationResponse>;
    GetPutScheduledUpdateGroupAction(req: operations.GetPutScheduledUpdateGroupActionRequest, config?: AxiosRequestConfig): Promise<operations.GetPutScheduledUpdateGroupActionResponse>;
    GetPutWarmPool(req: operations.GetPutWarmPoolRequest, config?: AxiosRequestConfig): Promise<operations.GetPutWarmPoolResponse>;
    GetRecordLifecycleActionHeartbeat(req: operations.GetRecordLifecycleActionHeartbeatRequest, config?: AxiosRequestConfig): Promise<operations.GetRecordLifecycleActionHeartbeatResponse>;
    GetResumeProcesses(req: operations.GetResumeProcessesRequest, config?: AxiosRequestConfig): Promise<operations.GetResumeProcessesResponse>;
    GetSetDesiredCapacity(req: operations.GetSetDesiredCapacityRequest, config?: AxiosRequestConfig): Promise<operations.GetSetDesiredCapacityResponse>;
    GetSetInstanceHealth(req: operations.GetSetInstanceHealthRequest, config?: AxiosRequestConfig): Promise<operations.GetSetInstanceHealthResponse>;
    GetSetInstanceProtection(req: operations.GetSetInstanceProtectionRequest, config?: AxiosRequestConfig): Promise<operations.GetSetInstanceProtectionResponse>;
    GetSuspendProcesses(req: operations.GetSuspendProcessesRequest, config?: AxiosRequestConfig): Promise<operations.GetSuspendProcessesResponse>;
    GetTerminateInstanceInAutoScalingGroup(req: operations.GetTerminateInstanceInAutoScalingGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetTerminateInstanceInAutoScalingGroupResponse>;
    PostAttachInstances(req: operations.PostAttachInstancesRequest, config?: AxiosRequestConfig): Promise<operations.PostAttachInstancesResponse>;
    PostAttachLoadBalancerTargetGroups(req: operations.PostAttachLoadBalancerTargetGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostAttachLoadBalancerTargetGroupsResponse>;
    PostAttachLoadBalancers(req: operations.PostAttachLoadBalancersRequest, config?: AxiosRequestConfig): Promise<operations.PostAttachLoadBalancersResponse>;
    PostBatchDeleteScheduledAction(req: operations.PostBatchDeleteScheduledActionRequest, config?: AxiosRequestConfig): Promise<operations.PostBatchDeleteScheduledActionResponse>;
    PostBatchPutScheduledUpdateGroupAction(req: operations.PostBatchPutScheduledUpdateGroupActionRequest, config?: AxiosRequestConfig): Promise<operations.PostBatchPutScheduledUpdateGroupActionResponse>;
    PostCancelInstanceRefresh(req: operations.PostCancelInstanceRefreshRequest, config?: AxiosRequestConfig): Promise<operations.PostCancelInstanceRefreshResponse>;
    PostCompleteLifecycleAction(req: operations.PostCompleteLifecycleActionRequest, config?: AxiosRequestConfig): Promise<operations.PostCompleteLifecycleActionResponse>;
    PostCreateAutoScalingGroup(req: operations.PostCreateAutoScalingGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateAutoScalingGroupResponse>;
    PostCreateLaunchConfiguration(req: operations.PostCreateLaunchConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateLaunchConfigurationResponse>;
    PostCreateOrUpdateTags(req: operations.PostCreateOrUpdateTagsRequest, config?: AxiosRequestConfig): Promise<operations.PostCreateOrUpdateTagsResponse>;
    PostDeleteAutoScalingGroup(req: operations.PostDeleteAutoScalingGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteAutoScalingGroupResponse>;
    PostDeleteLaunchConfiguration(req: operations.PostDeleteLaunchConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteLaunchConfigurationResponse>;
    PostDeleteLifecycleHook(req: operations.PostDeleteLifecycleHookRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteLifecycleHookResponse>;
    PostDeleteNotificationConfiguration(req: operations.PostDeleteNotificationConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteNotificationConfigurationResponse>;
    PostDeletePolicy(req: operations.PostDeletePolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostDeletePolicyResponse>;
    PostDeleteScheduledAction(req: operations.PostDeleteScheduledActionRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteScheduledActionResponse>;
    PostDeleteTags(req: operations.PostDeleteTagsRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteTagsResponse>;
    PostDeleteWarmPool(req: operations.PostDeleteWarmPoolRequest, config?: AxiosRequestConfig): Promise<operations.PostDeleteWarmPoolResponse>;
    PostDescribeAccountLimits(req: operations.PostDescribeAccountLimitsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeAccountLimitsResponse>;
    PostDescribeAdjustmentTypes(req: operations.PostDescribeAdjustmentTypesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeAdjustmentTypesResponse>;
    PostDescribeAutoScalingGroups(req: operations.PostDescribeAutoScalingGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeAutoScalingGroupsResponse>;
    PostDescribeAutoScalingInstances(req: operations.PostDescribeAutoScalingInstancesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeAutoScalingInstancesResponse>;
    PostDescribeAutoScalingNotificationTypes(req: operations.PostDescribeAutoScalingNotificationTypesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeAutoScalingNotificationTypesResponse>;
    PostDescribeInstanceRefreshes(req: operations.PostDescribeInstanceRefreshesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeInstanceRefreshesResponse>;
    PostDescribeLaunchConfigurations(req: operations.PostDescribeLaunchConfigurationsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeLaunchConfigurationsResponse>;
    PostDescribeLifecycleHookTypes(req: operations.PostDescribeLifecycleHookTypesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeLifecycleHookTypesResponse>;
    PostDescribeLifecycleHooks(req: operations.PostDescribeLifecycleHooksRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeLifecycleHooksResponse>;
    PostDescribeLoadBalancerTargetGroups(req: operations.PostDescribeLoadBalancerTargetGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeLoadBalancerTargetGroupsResponse>;
    PostDescribeLoadBalancers(req: operations.PostDescribeLoadBalancersRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeLoadBalancersResponse>;
    PostDescribeMetricCollectionTypes(req: operations.PostDescribeMetricCollectionTypesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeMetricCollectionTypesResponse>;
    PostDescribeNotificationConfigurations(req: operations.PostDescribeNotificationConfigurationsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeNotificationConfigurationsResponse>;
    PostDescribePolicies(req: operations.PostDescribePoliciesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribePoliciesResponse>;
    PostDescribeScalingActivities(req: operations.PostDescribeScalingActivitiesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeScalingActivitiesResponse>;
    PostDescribeScalingProcessTypes(req: operations.PostDescribeScalingProcessTypesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeScalingProcessTypesResponse>;
    PostDescribeScheduledActions(req: operations.PostDescribeScheduledActionsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeScheduledActionsResponse>;
    PostDescribeTags(req: operations.PostDescribeTagsRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeTagsResponse>;
    PostDescribeTerminationPolicyTypes(req: operations.PostDescribeTerminationPolicyTypesRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeTerminationPolicyTypesResponse>;
    PostDescribeWarmPool(req: operations.PostDescribeWarmPoolRequest, config?: AxiosRequestConfig): Promise<operations.PostDescribeWarmPoolResponse>;
    PostDetachInstances(req: operations.PostDetachInstancesRequest, config?: AxiosRequestConfig): Promise<operations.PostDetachInstancesResponse>;
    PostDetachLoadBalancerTargetGroups(req: operations.PostDetachLoadBalancerTargetGroupsRequest, config?: AxiosRequestConfig): Promise<operations.PostDetachLoadBalancerTargetGroupsResponse>;
    PostDetachLoadBalancers(req: operations.PostDetachLoadBalancersRequest, config?: AxiosRequestConfig): Promise<operations.PostDetachLoadBalancersResponse>;
    PostDisableMetricsCollection(req: operations.PostDisableMetricsCollectionRequest, config?: AxiosRequestConfig): Promise<operations.PostDisableMetricsCollectionResponse>;
    PostEnableMetricsCollection(req: operations.PostEnableMetricsCollectionRequest, config?: AxiosRequestConfig): Promise<operations.PostEnableMetricsCollectionResponse>;
    PostEnterStandby(req: operations.PostEnterStandbyRequest, config?: AxiosRequestConfig): Promise<operations.PostEnterStandbyResponse>;
    PostExecutePolicy(req: operations.PostExecutePolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostExecutePolicyResponse>;
    PostExitStandby(req: operations.PostExitStandbyRequest, config?: AxiosRequestConfig): Promise<operations.PostExitStandbyResponse>;
    PostGetPredictiveScalingForecast(req: operations.PostGetPredictiveScalingForecastRequest, config?: AxiosRequestConfig): Promise<operations.PostGetPredictiveScalingForecastResponse>;
    PostPutLifecycleHook(req: operations.PostPutLifecycleHookRequest, config?: AxiosRequestConfig): Promise<operations.PostPutLifecycleHookResponse>;
    PostPutNotificationConfiguration(req: operations.PostPutNotificationConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.PostPutNotificationConfigurationResponse>;
    PostPutScalingPolicy(req: operations.PostPutScalingPolicyRequest, config?: AxiosRequestConfig): Promise<operations.PostPutScalingPolicyResponse>;
    PostPutScheduledUpdateGroupAction(req: operations.PostPutScheduledUpdateGroupActionRequest, config?: AxiosRequestConfig): Promise<operations.PostPutScheduledUpdateGroupActionResponse>;
    PostPutWarmPool(req: operations.PostPutWarmPoolRequest, config?: AxiosRequestConfig): Promise<operations.PostPutWarmPoolResponse>;
    PostRecordLifecycleActionHeartbeat(req: operations.PostRecordLifecycleActionHeartbeatRequest, config?: AxiosRequestConfig): Promise<operations.PostRecordLifecycleActionHeartbeatResponse>;
    PostResumeProcesses(req: operations.PostResumeProcessesRequest, config?: AxiosRequestConfig): Promise<operations.PostResumeProcessesResponse>;
    PostSetDesiredCapacity(req: operations.PostSetDesiredCapacityRequest, config?: AxiosRequestConfig): Promise<operations.PostSetDesiredCapacityResponse>;
    PostSetInstanceHealth(req: operations.PostSetInstanceHealthRequest, config?: AxiosRequestConfig): Promise<operations.PostSetInstanceHealthResponse>;
    PostSetInstanceProtection(req: operations.PostSetInstanceProtectionRequest, config?: AxiosRequestConfig): Promise<operations.PostSetInstanceProtectionResponse>;
    PostStartInstanceRefresh(req: operations.PostStartInstanceRefreshRequest, config?: AxiosRequestConfig): Promise<operations.PostStartInstanceRefreshResponse>;
    PostSuspendProcesses(req: operations.PostSuspendProcessesRequest, config?: AxiosRequestConfig): Promise<operations.PostSuspendProcessesResponse>;
    PostTerminateInstanceInAutoScalingGroup(req: operations.PostTerminateInstanceInAutoScalingGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostTerminateInstanceInAutoScalingGroupResponse>;
    PostUpdateAutoScalingGroup(req: operations.PostUpdateAutoScalingGroupRequest, config?: AxiosRequestConfig): Promise<operations.PostUpdateAutoScalingGroupResponse>;
}
export {};
