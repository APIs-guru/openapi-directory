import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
import { Security } from "./models/shared";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare function WithSecurity(security: Security): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    AssociateAttributeGroup(req: operations.AssociateAttributeGroupRequest, config?: AxiosRequestConfig): Promise<operations.AssociateAttributeGroupResponse>;
    AssociateResource(req: operations.AssociateResourceRequest, config?: AxiosRequestConfig): Promise<operations.AssociateResourceResponse>;
    CreateApplication(req: operations.CreateApplicationRequest, config?: AxiosRequestConfig): Promise<operations.CreateApplicationResponse>;
    CreateAttributeGroup(req: operations.CreateAttributeGroupRequest, config?: AxiosRequestConfig): Promise<operations.CreateAttributeGroupResponse>;
    DeleteApplication(req: operations.DeleteApplicationRequest, config?: AxiosRequestConfig): Promise<operations.DeleteApplicationResponse>;
    DeleteAttributeGroup(req: operations.DeleteAttributeGroupRequest, config?: AxiosRequestConfig): Promise<operations.DeleteAttributeGroupResponse>;
    DisassociateAttributeGroup(req: operations.DisassociateAttributeGroupRequest, config?: AxiosRequestConfig): Promise<operations.DisassociateAttributeGroupResponse>;
    DisassociateResource(req: operations.DisassociateResourceRequest, config?: AxiosRequestConfig): Promise<operations.DisassociateResourceResponse>;
    GetApplication(req: operations.GetApplicationRequest, config?: AxiosRequestConfig): Promise<operations.GetApplicationResponse>;
    GetAssociatedResource(req: operations.GetAssociatedResourceRequest, config?: AxiosRequestConfig): Promise<operations.GetAssociatedResourceResponse>;
    GetAttributeGroup(req: operations.GetAttributeGroupRequest, config?: AxiosRequestConfig): Promise<operations.GetAttributeGroupResponse>;
    ListApplications(req: operations.ListApplicationsRequest, config?: AxiosRequestConfig): Promise<operations.ListApplicationsResponse>;
    ListAssociatedAttributeGroups(req: operations.ListAssociatedAttributeGroupsRequest, config?: AxiosRequestConfig): Promise<operations.ListAssociatedAttributeGroupsResponse>;
    ListAssociatedResources(req: operations.ListAssociatedResourcesRequest, config?: AxiosRequestConfig): Promise<operations.ListAssociatedResourcesResponse>;
    ListAttributeGroups(req: operations.ListAttributeGroupsRequest, config?: AxiosRequestConfig): Promise<operations.ListAttributeGroupsResponse>;
    ListTagsForResource(req: operations.ListTagsForResourceRequest, config?: AxiosRequestConfig): Promise<operations.ListTagsForResourceResponse>;
    SyncResource(req: operations.SyncResourceRequest, config?: AxiosRequestConfig): Promise<operations.SyncResourceResponse>;
    TagResource(req: operations.TagResourceRequest, config?: AxiosRequestConfig): Promise<operations.TagResourceResponse>;
    UntagResource(req: operations.UntagResourceRequest, config?: AxiosRequestConfig): Promise<operations.UntagResourceResponse>;
    UpdateApplication(req: operations.UpdateApplicationRequest, config?: AxiosRequestConfig): Promise<operations.UpdateApplicationResponse>;
    UpdateAttributeGroup(req: operations.UpdateAttributeGroupRequest, config?: AxiosRequestConfig): Promise<operations.UpdateAttributeGroupResponse>;
}
export {};
