import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
import { Security } from "./models/shared";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare function WithSecurity(security: Security): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    AssociateEntityToThing(req: operations.AssociateEntityToThingRequest, config?: AxiosRequestConfig): Promise<operations.AssociateEntityToThingResponse>;
    CreateFlowTemplate(req: operations.CreateFlowTemplateRequest, config?: AxiosRequestConfig): Promise<operations.CreateFlowTemplateResponse>;
    CreateSystemInstance(req: operations.CreateSystemInstanceRequest, config?: AxiosRequestConfig): Promise<operations.CreateSystemInstanceResponse>;
    CreateSystemTemplate(req: operations.CreateSystemTemplateRequest, config?: AxiosRequestConfig): Promise<operations.CreateSystemTemplateResponse>;
    DeleteFlowTemplate(req: operations.DeleteFlowTemplateRequest, config?: AxiosRequestConfig): Promise<operations.DeleteFlowTemplateResponse>;
    DeleteNamespace(req: operations.DeleteNamespaceRequest, config?: AxiosRequestConfig): Promise<operations.DeleteNamespaceResponse>;
    DeleteSystemInstance(req: operations.DeleteSystemInstanceRequest, config?: AxiosRequestConfig): Promise<operations.DeleteSystemInstanceResponse>;
    DeleteSystemTemplate(req: operations.DeleteSystemTemplateRequest, config?: AxiosRequestConfig): Promise<operations.DeleteSystemTemplateResponse>;
    DeploySystemInstance(req: operations.DeploySystemInstanceRequest, config?: AxiosRequestConfig): Promise<operations.DeploySystemInstanceResponse>;
    DeprecateFlowTemplate(req: operations.DeprecateFlowTemplateRequest, config?: AxiosRequestConfig): Promise<operations.DeprecateFlowTemplateResponse>;
    DeprecateSystemTemplate(req: operations.DeprecateSystemTemplateRequest, config?: AxiosRequestConfig): Promise<operations.DeprecateSystemTemplateResponse>;
    DescribeNamespace(req: operations.DescribeNamespaceRequest, config?: AxiosRequestConfig): Promise<operations.DescribeNamespaceResponse>;
    DissociateEntityFromThing(req: operations.DissociateEntityFromThingRequest, config?: AxiosRequestConfig): Promise<operations.DissociateEntityFromThingResponse>;
    GetEntities(req: operations.GetEntitiesRequest, config?: AxiosRequestConfig): Promise<operations.GetEntitiesResponse>;
    GetFlowTemplate(req: operations.GetFlowTemplateRequest, config?: AxiosRequestConfig): Promise<operations.GetFlowTemplateResponse>;
    GetFlowTemplateRevisions(req: operations.GetFlowTemplateRevisionsRequest, config?: AxiosRequestConfig): Promise<operations.GetFlowTemplateRevisionsResponse>;
    GetNamespaceDeletionStatus(req: operations.GetNamespaceDeletionStatusRequest, config?: AxiosRequestConfig): Promise<operations.GetNamespaceDeletionStatusResponse>;
    GetSystemInstance(req: operations.GetSystemInstanceRequest, config?: AxiosRequestConfig): Promise<operations.GetSystemInstanceResponse>;
    GetSystemTemplate(req: operations.GetSystemTemplateRequest, config?: AxiosRequestConfig): Promise<operations.GetSystemTemplateResponse>;
    GetSystemTemplateRevisions(req: operations.GetSystemTemplateRevisionsRequest, config?: AxiosRequestConfig): Promise<operations.GetSystemTemplateRevisionsResponse>;
    GetUploadStatus(req: operations.GetUploadStatusRequest, config?: AxiosRequestConfig): Promise<operations.GetUploadStatusResponse>;
    ListFlowExecutionMessages(req: operations.ListFlowExecutionMessagesRequest, config?: AxiosRequestConfig): Promise<operations.ListFlowExecutionMessagesResponse>;
    ListTagsForResource(req: operations.ListTagsForResourceRequest, config?: AxiosRequestConfig): Promise<operations.ListTagsForResourceResponse>;
    SearchEntities(req: operations.SearchEntitiesRequest, config?: AxiosRequestConfig): Promise<operations.SearchEntitiesResponse>;
    SearchFlowExecutions(req: operations.SearchFlowExecutionsRequest, config?: AxiosRequestConfig): Promise<operations.SearchFlowExecutionsResponse>;
    SearchFlowTemplates(req: operations.SearchFlowTemplatesRequest, config?: AxiosRequestConfig): Promise<operations.SearchFlowTemplatesResponse>;
    SearchSystemInstances(req: operations.SearchSystemInstancesRequest, config?: AxiosRequestConfig): Promise<operations.SearchSystemInstancesResponse>;
    SearchSystemTemplates(req: operations.SearchSystemTemplatesRequest, config?: AxiosRequestConfig): Promise<operations.SearchSystemTemplatesResponse>;
    SearchThings(req: operations.SearchThingsRequest, config?: AxiosRequestConfig): Promise<operations.SearchThingsResponse>;
    TagResource(req: operations.TagResourceRequest, config?: AxiosRequestConfig): Promise<operations.TagResourceResponse>;
    UndeploySystemInstance(req: operations.UndeploySystemInstanceRequest, config?: AxiosRequestConfig): Promise<operations.UndeploySystemInstanceResponse>;
    UntagResource(req: operations.UntagResourceRequest, config?: AxiosRequestConfig): Promise<operations.UntagResourceResponse>;
    UpdateFlowTemplate(req: operations.UpdateFlowTemplateRequest, config?: AxiosRequestConfig): Promise<operations.UpdateFlowTemplateResponse>;
    UpdateSystemTemplate(req: operations.UpdateSystemTemplateRequest, config?: AxiosRequestConfig): Promise<operations.UpdateSystemTemplateResponse>;
    UploadEntityDefinitions(req: operations.UploadEntityDefinitionsRequest, config?: AxiosRequestConfig): Promise<operations.UploadEntityDefinitionsResponse>;
}
export {};
