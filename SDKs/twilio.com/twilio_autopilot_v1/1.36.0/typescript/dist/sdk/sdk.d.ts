import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    CreateAssistant(req: operations.CreateAssistantRequest, config?: AxiosRequestConfig): Promise<operations.CreateAssistantResponse>;
    CreateField(req: operations.CreateFieldRequest, config?: AxiosRequestConfig): Promise<operations.CreateFieldResponse>;
    CreateFieldType(req: operations.CreateFieldTypeRequest, config?: AxiosRequestConfig): Promise<operations.CreateFieldTypeResponse>;
    CreateFieldValue(req: operations.CreateFieldValueRequest, config?: AxiosRequestConfig): Promise<operations.CreateFieldValueResponse>;
    CreateModelBuild(req: operations.CreateModelBuildRequest, config?: AxiosRequestConfig): Promise<operations.CreateModelBuildResponse>;
    CreateQuery(req: operations.CreateQueryRequest, config?: AxiosRequestConfig): Promise<operations.CreateQueryResponse>;
    CreateSample(req: operations.CreateSampleRequest, config?: AxiosRequestConfig): Promise<operations.CreateSampleResponse>;
    CreateTask(req: operations.CreateTaskRequest, config?: AxiosRequestConfig): Promise<operations.CreateTaskResponse>;
    CreateWebhook(req: operations.CreateWebhookRequest, config?: AxiosRequestConfig): Promise<operations.CreateWebhookResponse>;
    DeleteAssistant(req: operations.DeleteAssistantRequest, config?: AxiosRequestConfig): Promise<operations.DeleteAssistantResponse>;
    DeleteField(req: operations.DeleteFieldRequest, config?: AxiosRequestConfig): Promise<operations.DeleteFieldResponse>;
    DeleteFieldType(req: operations.DeleteFieldTypeRequest, config?: AxiosRequestConfig): Promise<operations.DeleteFieldTypeResponse>;
    DeleteFieldValue(req: operations.DeleteFieldValueRequest, config?: AxiosRequestConfig): Promise<operations.DeleteFieldValueResponse>;
    DeleteModelBuild(req: operations.DeleteModelBuildRequest, config?: AxiosRequestConfig): Promise<operations.DeleteModelBuildResponse>;
    DeleteQuery(req: operations.DeleteQueryRequest, config?: AxiosRequestConfig): Promise<operations.DeleteQueryResponse>;
    DeleteSample(req: operations.DeleteSampleRequest, config?: AxiosRequestConfig): Promise<operations.DeleteSampleResponse>;
    DeleteTask(req: operations.DeleteTaskRequest, config?: AxiosRequestConfig): Promise<operations.DeleteTaskResponse>;
    DeleteWebhook(req: operations.DeleteWebhookRequest, config?: AxiosRequestConfig): Promise<operations.DeleteWebhookResponse>;
    FetchAssistant(req: operations.FetchAssistantRequest, config?: AxiosRequestConfig): Promise<operations.FetchAssistantResponse>;
    FetchDefaults(req: operations.FetchDefaultsRequest, config?: AxiosRequestConfig): Promise<operations.FetchDefaultsResponse>;
    FetchDialogue(req: operations.FetchDialogueRequest, config?: AxiosRequestConfig): Promise<operations.FetchDialogueResponse>;
    FetchField(req: operations.FetchFieldRequest, config?: AxiosRequestConfig): Promise<operations.FetchFieldResponse>;
    FetchFieldType(req: operations.FetchFieldTypeRequest, config?: AxiosRequestConfig): Promise<operations.FetchFieldTypeResponse>;
    FetchFieldValue(req: operations.FetchFieldValueRequest, config?: AxiosRequestConfig): Promise<operations.FetchFieldValueResponse>;
    FetchModelBuild(req: operations.FetchModelBuildRequest, config?: AxiosRequestConfig): Promise<operations.FetchModelBuildResponse>;
    FetchQuery(req: operations.FetchQueryRequest, config?: AxiosRequestConfig): Promise<operations.FetchQueryResponse>;
    FetchSample(req: operations.FetchSampleRequest, config?: AxiosRequestConfig): Promise<operations.FetchSampleResponse>;
    FetchStyleSheet(req: operations.FetchStyleSheetRequest, config?: AxiosRequestConfig): Promise<operations.FetchStyleSheetResponse>;
    FetchTask(req: operations.FetchTaskRequest, config?: AxiosRequestConfig): Promise<operations.FetchTaskResponse>;
    FetchTaskActions(req: operations.FetchTaskActionsRequest, config?: AxiosRequestConfig): Promise<operations.FetchTaskActionsResponse>;
    FetchTaskStatistics(req: operations.FetchTaskStatisticsRequest, config?: AxiosRequestConfig): Promise<operations.FetchTaskStatisticsResponse>;
    FetchWebhook(req: operations.FetchWebhookRequest, config?: AxiosRequestConfig): Promise<operations.FetchWebhookResponse>;
    ListAssistant(req: operations.ListAssistantRequest, config?: AxiosRequestConfig): Promise<operations.ListAssistantResponse>;
    ListField(req: operations.ListFieldRequest, config?: AxiosRequestConfig): Promise<operations.ListFieldResponse>;
    ListFieldType(req: operations.ListFieldTypeRequest, config?: AxiosRequestConfig): Promise<operations.ListFieldTypeResponse>;
    ListFieldValue(req: operations.ListFieldValueRequest, config?: AxiosRequestConfig): Promise<operations.ListFieldValueResponse>;
    ListModelBuild(req: operations.ListModelBuildRequest, config?: AxiosRequestConfig): Promise<operations.ListModelBuildResponse>;
    ListQuery(req: operations.ListQueryRequest, config?: AxiosRequestConfig): Promise<operations.ListQueryResponse>;
    ListSample(req: operations.ListSampleRequest, config?: AxiosRequestConfig): Promise<operations.ListSampleResponse>;
    ListTask(req: operations.ListTaskRequest, config?: AxiosRequestConfig): Promise<operations.ListTaskResponse>;
    ListWebhook(req: operations.ListWebhookRequest, config?: AxiosRequestConfig): Promise<operations.ListWebhookResponse>;
    UpdateAssistant(req: operations.UpdateAssistantRequest, config?: AxiosRequestConfig): Promise<operations.UpdateAssistantResponse>;
    UpdateDefaults(req: operations.UpdateDefaultsRequest, config?: AxiosRequestConfig): Promise<operations.UpdateDefaultsResponse>;
    UpdateFieldType(req: operations.UpdateFieldTypeRequest, config?: AxiosRequestConfig): Promise<operations.UpdateFieldTypeResponse>;
    UpdateModelBuild(req: operations.UpdateModelBuildRequest, config?: AxiosRequestConfig): Promise<operations.UpdateModelBuildResponse>;
    UpdateQuery(req: operations.UpdateQueryRequest, config?: AxiosRequestConfig): Promise<operations.UpdateQueryResponse>;
    UpdateRestoreAssistant(req: operations.UpdateRestoreAssistantRequest, config?: AxiosRequestConfig): Promise<operations.UpdateRestoreAssistantResponse>;
    UpdateSample(req: operations.UpdateSampleRequest, config?: AxiosRequestConfig): Promise<operations.UpdateSampleResponse>;
    UpdateStyleSheet(req: operations.UpdateStyleSheetRequest, config?: AxiosRequestConfig): Promise<operations.UpdateStyleSheetResponse>;
    UpdateTask(req: operations.UpdateTaskRequest, config?: AxiosRequestConfig): Promise<operations.UpdateTaskResponse>;
    UpdateTaskActions(req: operations.UpdateTaskActionsRequest, config?: AxiosRequestConfig): Promise<operations.UpdateTaskActionsResponse>;
    UpdateWebhook(req: operations.UpdateWebhookRequest, config?: AxiosRequestConfig): Promise<operations.UpdateWebhookResponse>;
}
export {};
