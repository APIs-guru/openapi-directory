import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    CreateCustomerProfile(req: operations.CreateCustomerProfileRequest, config?: AxiosRequestConfig): Promise<operations.CreateCustomerProfileResponse>;
    CreateCustomerProfileChannelEndpointAssignment(req: operations.CreateCustomerProfileChannelEndpointAssignmentRequest, config?: AxiosRequestConfig): Promise<operations.CreateCustomerProfileChannelEndpointAssignmentResponse>;
    CreateCustomerProfileEntityAssignment(req: operations.CreateCustomerProfileEntityAssignmentRequest, config?: AxiosRequestConfig): Promise<operations.CreateCustomerProfileEntityAssignmentResponse>;
    CreateCustomerProfileEvaluation(req: operations.CreateCustomerProfileEvaluationRequest, config?: AxiosRequestConfig): Promise<operations.CreateCustomerProfileEvaluationResponse>;
    CreateEndUser(req: operations.CreateEndUserRequest, config?: AxiosRequestConfig): Promise<operations.CreateEndUserResponse>;
    CreateSupportingDocument(req: operations.CreateSupportingDocumentRequest, config?: AxiosRequestConfig): Promise<operations.CreateSupportingDocumentResponse>;
    CreateTrustProduct(req: operations.CreateTrustProductRequest, config?: AxiosRequestConfig): Promise<operations.CreateTrustProductResponse>;
    CreateTrustProductChannelEndpointAssignment(req: operations.CreateTrustProductChannelEndpointAssignmentRequest, config?: AxiosRequestConfig): Promise<operations.CreateTrustProductChannelEndpointAssignmentResponse>;
    CreateTrustProductEntityAssignment(req: operations.CreateTrustProductEntityAssignmentRequest, config?: AxiosRequestConfig): Promise<operations.CreateTrustProductEntityAssignmentResponse>;
    CreateTrustProductEvaluation(req: operations.CreateTrustProductEvaluationRequest, config?: AxiosRequestConfig): Promise<operations.CreateTrustProductEvaluationResponse>;
    DeleteCustomerProfile(req: operations.DeleteCustomerProfileRequest, config?: AxiosRequestConfig): Promise<operations.DeleteCustomerProfileResponse>;
    DeleteCustomerProfileChannelEndpointAssignment(req: operations.DeleteCustomerProfileChannelEndpointAssignmentRequest, config?: AxiosRequestConfig): Promise<operations.DeleteCustomerProfileChannelEndpointAssignmentResponse>;
    DeleteCustomerProfileEntityAssignment(req: operations.DeleteCustomerProfileEntityAssignmentRequest, config?: AxiosRequestConfig): Promise<operations.DeleteCustomerProfileEntityAssignmentResponse>;
    DeleteEndUser(req: operations.DeleteEndUserRequest, config?: AxiosRequestConfig): Promise<operations.DeleteEndUserResponse>;
    DeleteSupportingDocument(req: operations.DeleteSupportingDocumentRequest, config?: AxiosRequestConfig): Promise<operations.DeleteSupportingDocumentResponse>;
    DeleteTrustProduct(req: operations.DeleteTrustProductRequest, config?: AxiosRequestConfig): Promise<operations.DeleteTrustProductResponse>;
    DeleteTrustProductChannelEndpointAssignment(req: operations.DeleteTrustProductChannelEndpointAssignmentRequest, config?: AxiosRequestConfig): Promise<operations.DeleteTrustProductChannelEndpointAssignmentResponse>;
    DeleteTrustProductEntityAssignment(req: operations.DeleteTrustProductEntityAssignmentRequest, config?: AxiosRequestConfig): Promise<operations.DeleteTrustProductEntityAssignmentResponse>;
    FetchCustomerProfile(req: operations.FetchCustomerProfileRequest, config?: AxiosRequestConfig): Promise<operations.FetchCustomerProfileResponse>;
    FetchCustomerProfileChannelEndpointAssignment(req: operations.FetchCustomerProfileChannelEndpointAssignmentRequest, config?: AxiosRequestConfig): Promise<operations.FetchCustomerProfileChannelEndpointAssignmentResponse>;
    FetchCustomerProfileEntityAssignment(req: operations.FetchCustomerProfileEntityAssignmentRequest, config?: AxiosRequestConfig): Promise<operations.FetchCustomerProfileEntityAssignmentResponse>;
    FetchCustomerProfileEvaluation(req: operations.FetchCustomerProfileEvaluationRequest, config?: AxiosRequestConfig): Promise<operations.FetchCustomerProfileEvaluationResponse>;
    FetchEndUser(req: operations.FetchEndUserRequest, config?: AxiosRequestConfig): Promise<operations.FetchEndUserResponse>;
    FetchEndUserType(req: operations.FetchEndUserTypeRequest, config?: AxiosRequestConfig): Promise<operations.FetchEndUserTypeResponse>;
    FetchPolicies(req: operations.FetchPoliciesRequest, config?: AxiosRequestConfig): Promise<operations.FetchPoliciesResponse>;
    FetchSupportingDocument(req: operations.FetchSupportingDocumentRequest, config?: AxiosRequestConfig): Promise<operations.FetchSupportingDocumentResponse>;
    FetchSupportingDocumentType(req: operations.FetchSupportingDocumentTypeRequest, config?: AxiosRequestConfig): Promise<operations.FetchSupportingDocumentTypeResponse>;
    FetchTrustProduct(req: operations.FetchTrustProductRequest, config?: AxiosRequestConfig): Promise<operations.FetchTrustProductResponse>;
    FetchTrustProductChannelEndpointAssignment(req: operations.FetchTrustProductChannelEndpointAssignmentRequest, config?: AxiosRequestConfig): Promise<operations.FetchTrustProductChannelEndpointAssignmentResponse>;
    FetchTrustProductEntityAssignment(req: operations.FetchTrustProductEntityAssignmentRequest, config?: AxiosRequestConfig): Promise<operations.FetchTrustProductEntityAssignmentResponse>;
    FetchTrustProductEvaluation(req: operations.FetchTrustProductEvaluationRequest, config?: AxiosRequestConfig): Promise<operations.FetchTrustProductEvaluationResponse>;
    ListCustomerProfile(req: operations.ListCustomerProfileRequest, config?: AxiosRequestConfig): Promise<operations.ListCustomerProfileResponse>;
    ListCustomerProfileChannelEndpointAssignment(req: operations.ListCustomerProfileChannelEndpointAssignmentRequest, config?: AxiosRequestConfig): Promise<operations.ListCustomerProfileChannelEndpointAssignmentResponse>;
    ListCustomerProfileEntityAssignment(req: operations.ListCustomerProfileEntityAssignmentRequest, config?: AxiosRequestConfig): Promise<operations.ListCustomerProfileEntityAssignmentResponse>;
    ListCustomerProfileEvaluation(req: operations.ListCustomerProfileEvaluationRequest, config?: AxiosRequestConfig): Promise<operations.ListCustomerProfileEvaluationResponse>;
    ListEndUser(req: operations.ListEndUserRequest, config?: AxiosRequestConfig): Promise<operations.ListEndUserResponse>;
    ListEndUserType(req: operations.ListEndUserTypeRequest, config?: AxiosRequestConfig): Promise<operations.ListEndUserTypeResponse>;
    ListPolicies(req: operations.ListPoliciesRequest, config?: AxiosRequestConfig): Promise<operations.ListPoliciesResponse>;
    ListSupportingDocument(req: operations.ListSupportingDocumentRequest, config?: AxiosRequestConfig): Promise<operations.ListSupportingDocumentResponse>;
    ListSupportingDocumentType(req: operations.ListSupportingDocumentTypeRequest, config?: AxiosRequestConfig): Promise<operations.ListSupportingDocumentTypeResponse>;
    ListTrustProduct(req: operations.ListTrustProductRequest, config?: AxiosRequestConfig): Promise<operations.ListTrustProductResponse>;
    ListTrustProductChannelEndpointAssignment(req: operations.ListTrustProductChannelEndpointAssignmentRequest, config?: AxiosRequestConfig): Promise<operations.ListTrustProductChannelEndpointAssignmentResponse>;
    ListTrustProductEntityAssignment(req: operations.ListTrustProductEntityAssignmentRequest, config?: AxiosRequestConfig): Promise<operations.ListTrustProductEntityAssignmentResponse>;
    ListTrustProductEvaluation(req: operations.ListTrustProductEvaluationRequest, config?: AxiosRequestConfig): Promise<operations.ListTrustProductEvaluationResponse>;
    UpdateCustomerProfile(req: operations.UpdateCustomerProfileRequest, config?: AxiosRequestConfig): Promise<operations.UpdateCustomerProfileResponse>;
    UpdateEndUser(req: operations.UpdateEndUserRequest, config?: AxiosRequestConfig): Promise<operations.UpdateEndUserResponse>;
    UpdateSupportingDocument(req: operations.UpdateSupportingDocumentRequest, config?: AxiosRequestConfig): Promise<operations.UpdateSupportingDocumentResponse>;
    UpdateTrustProduct(req: operations.UpdateTrustProductRequest, config?: AxiosRequestConfig): Promise<operations.UpdateTrustProductResponse>;
}
export {};
