import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    CreateAsset(req: operations.CreateAssetRequest, config?: AxiosRequestConfig): Promise<operations.CreateAssetResponse>;
    CreateBuild(req: operations.CreateBuildRequest, config?: AxiosRequestConfig): Promise<operations.CreateBuildResponse>;
    CreateDeployment(req: operations.CreateDeploymentRequest, config?: AxiosRequestConfig): Promise<operations.CreateDeploymentResponse>;
    CreateEnvironment(req: operations.CreateEnvironmentRequest, config?: AxiosRequestConfig): Promise<operations.CreateEnvironmentResponse>;
    CreateFunction(req: operations.CreateFunctionRequest, config?: AxiosRequestConfig): Promise<operations.CreateFunctionResponse>;
    CreateService(req: operations.CreateServiceRequest, config?: AxiosRequestConfig): Promise<operations.CreateServiceResponse>;
    CreateVariable(req: operations.CreateVariableRequest, config?: AxiosRequestConfig): Promise<operations.CreateVariableResponse>;
    DeleteAsset(req: operations.DeleteAssetRequest, config?: AxiosRequestConfig): Promise<operations.DeleteAssetResponse>;
    DeleteBuild(req: operations.DeleteBuildRequest, config?: AxiosRequestConfig): Promise<operations.DeleteBuildResponse>;
    DeleteEnvironment(req: operations.DeleteEnvironmentRequest, config?: AxiosRequestConfig): Promise<operations.DeleteEnvironmentResponse>;
    DeleteFunction(req: operations.DeleteFunctionRequest, config?: AxiosRequestConfig): Promise<operations.DeleteFunctionResponse>;
    DeleteService(req: operations.DeleteServiceRequest, config?: AxiosRequestConfig): Promise<operations.DeleteServiceResponse>;
    DeleteVariable(req: operations.DeleteVariableRequest, config?: AxiosRequestConfig): Promise<operations.DeleteVariableResponse>;
    FetchAsset(req: operations.FetchAssetRequest, config?: AxiosRequestConfig): Promise<operations.FetchAssetResponse>;
    FetchAssetVersion(req: operations.FetchAssetVersionRequest, config?: AxiosRequestConfig): Promise<operations.FetchAssetVersionResponse>;
    FetchBuild(req: operations.FetchBuildRequest, config?: AxiosRequestConfig): Promise<operations.FetchBuildResponse>;
    FetchBuildStatus(req: operations.FetchBuildStatusRequest, config?: AxiosRequestConfig): Promise<operations.FetchBuildStatusResponse>;
    FetchDeployment(req: operations.FetchDeploymentRequest, config?: AxiosRequestConfig): Promise<operations.FetchDeploymentResponse>;
    FetchEnvironment(req: operations.FetchEnvironmentRequest, config?: AxiosRequestConfig): Promise<operations.FetchEnvironmentResponse>;
    FetchFunction(req: operations.FetchFunctionRequest, config?: AxiosRequestConfig): Promise<operations.FetchFunctionResponse>;
    FetchFunctionVersion(req: operations.FetchFunctionVersionRequest, config?: AxiosRequestConfig): Promise<operations.FetchFunctionVersionResponse>;
    FetchFunctionVersionContent(req: operations.FetchFunctionVersionContentRequest, config?: AxiosRequestConfig): Promise<operations.FetchFunctionVersionContentResponse>;
    FetchLog(req: operations.FetchLogRequest, config?: AxiosRequestConfig): Promise<operations.FetchLogResponse>;
    FetchService(req: operations.FetchServiceRequest, config?: AxiosRequestConfig): Promise<operations.FetchServiceResponse>;
    FetchVariable(req: operations.FetchVariableRequest, config?: AxiosRequestConfig): Promise<operations.FetchVariableResponse>;
    ListAsset(req: operations.ListAssetRequest, config?: AxiosRequestConfig): Promise<operations.ListAssetResponse>;
    ListAssetVersion(req: operations.ListAssetVersionRequest, config?: AxiosRequestConfig): Promise<operations.ListAssetVersionResponse>;
    ListBuild(req: operations.ListBuildRequest, config?: AxiosRequestConfig): Promise<operations.ListBuildResponse>;
    ListDeployment(req: operations.ListDeploymentRequest, config?: AxiosRequestConfig): Promise<operations.ListDeploymentResponse>;
    ListEnvironment(req: operations.ListEnvironmentRequest, config?: AxiosRequestConfig): Promise<operations.ListEnvironmentResponse>;
    ListFunction(req: operations.ListFunctionRequest, config?: AxiosRequestConfig): Promise<operations.ListFunctionResponse>;
    ListFunctionVersion(req: operations.ListFunctionVersionRequest, config?: AxiosRequestConfig): Promise<operations.ListFunctionVersionResponse>;
    ListLog(req: operations.ListLogRequest, config?: AxiosRequestConfig): Promise<operations.ListLogResponse>;
    ListService(req: operations.ListServiceRequest, config?: AxiosRequestConfig): Promise<operations.ListServiceResponse>;
    ListVariable(req: operations.ListVariableRequest, config?: AxiosRequestConfig): Promise<operations.ListVariableResponse>;
    UpdateAsset(req: operations.UpdateAssetRequest, config?: AxiosRequestConfig): Promise<operations.UpdateAssetResponse>;
    UpdateFunction(req: operations.UpdateFunctionRequest, config?: AxiosRequestConfig): Promise<operations.UpdateFunctionResponse>;
    UpdateService(req: operations.UpdateServiceRequest, config?: AxiosRequestConfig): Promise<operations.UpdateServiceResponse>;
    UpdateVariable(req: operations.UpdateVariableRequest, config?: AxiosRequestConfig): Promise<operations.UpdateVariableResponse>;
}
export {};
