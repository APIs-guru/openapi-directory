import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    CreateEsimProfile(req: operations.CreateEsimProfileRequest, config?: AxiosRequestConfig): Promise<operations.CreateEsimProfileResponse>;
    CreateFleet(req: operations.CreateFleetRequest, config?: AxiosRequestConfig): Promise<operations.CreateFleetResponse>;
    CreateIpCommand(req: operations.CreateIpCommandRequest, config?: AxiosRequestConfig): Promise<operations.CreateIpCommandResponse>;
    CreateNetworkAccessProfile(req: operations.CreateNetworkAccessProfileRequest, config?: AxiosRequestConfig): Promise<operations.CreateNetworkAccessProfileResponse>;
    CreateNetworkAccessProfileNetwork(req: operations.CreateNetworkAccessProfileNetworkRequest, config?: AxiosRequestConfig): Promise<operations.CreateNetworkAccessProfileNetworkResponse>;
    CreateSim(req: operations.CreateSimRequest, config?: AxiosRequestConfig): Promise<operations.CreateSimResponse>;
    CreateSmsCommand(req: operations.CreateSmsCommandRequest, config?: AxiosRequestConfig): Promise<operations.CreateSmsCommandResponse>;
    DeleteNetworkAccessProfileNetwork(req: operations.DeleteNetworkAccessProfileNetworkRequest, config?: AxiosRequestConfig): Promise<operations.DeleteNetworkAccessProfileNetworkResponse>;
    FetchEsimProfile(req: operations.FetchEsimProfileRequest, config?: AxiosRequestConfig): Promise<operations.FetchEsimProfileResponse>;
    FetchFleet(req: operations.FetchFleetRequest, config?: AxiosRequestConfig): Promise<operations.FetchFleetResponse>;
    FetchIpCommand(req: operations.FetchIpCommandRequest, config?: AxiosRequestConfig): Promise<operations.FetchIpCommandResponse>;
    FetchNetwork(req: operations.FetchNetworkRequest, config?: AxiosRequestConfig): Promise<operations.FetchNetworkResponse>;
    FetchNetworkAccessProfile(req: operations.FetchNetworkAccessProfileRequest, config?: AxiosRequestConfig): Promise<operations.FetchNetworkAccessProfileResponse>;
    FetchNetworkAccessProfileNetwork(req: operations.FetchNetworkAccessProfileNetworkRequest, config?: AxiosRequestConfig): Promise<operations.FetchNetworkAccessProfileNetworkResponse>;
    FetchSim(req: operations.FetchSimRequest, config?: AxiosRequestConfig): Promise<operations.FetchSimResponse>;
    FetchSmsCommand(req: operations.FetchSmsCommandRequest, config?: AxiosRequestConfig): Promise<operations.FetchSmsCommandResponse>;
    ListBillingPeriod(req: operations.ListBillingPeriodRequest, config?: AxiosRequestConfig): Promise<operations.ListBillingPeriodResponse>;
    ListEsimProfile(req: operations.ListEsimProfileRequest, config?: AxiosRequestConfig): Promise<operations.ListEsimProfileResponse>;
    ListFleet(req: operations.ListFleetRequest, config?: AxiosRequestConfig): Promise<operations.ListFleetResponse>;
    ListIpCommand(req: operations.ListIpCommandRequest, config?: AxiosRequestConfig): Promise<operations.ListIpCommandResponse>;
    ListNetwork(req: operations.ListNetworkRequest, config?: AxiosRequestConfig): Promise<operations.ListNetworkResponse>;
    ListNetworkAccessProfile(req: operations.ListNetworkAccessProfileRequest, config?: AxiosRequestConfig): Promise<operations.ListNetworkAccessProfileResponse>;
    ListNetworkAccessProfileNetwork(req: operations.ListNetworkAccessProfileNetworkRequest, config?: AxiosRequestConfig): Promise<operations.ListNetworkAccessProfileNetworkResponse>;
    ListSim(req: operations.ListSimRequest, config?: AxiosRequestConfig): Promise<operations.ListSimResponse>;
    ListSimIpAddress(req: operations.ListSimIpAddressRequest, config?: AxiosRequestConfig): Promise<operations.ListSimIpAddressResponse>;
    ListSmsCommand(req: operations.ListSmsCommandRequest, config?: AxiosRequestConfig): Promise<operations.ListSmsCommandResponse>;
    ListUsageRecord(req: operations.ListUsageRecordRequest, config?: AxiosRequestConfig): Promise<operations.ListUsageRecordResponse>;
    UpdateFleet(req: operations.UpdateFleetRequest, config?: AxiosRequestConfig): Promise<operations.UpdateFleetResponse>;
    UpdateNetworkAccessProfile(req: operations.UpdateNetworkAccessProfileRequest, config?: AxiosRequestConfig): Promise<operations.UpdateNetworkAccessProfileResponse>;
    UpdateSim(req: operations.UpdateSimRequest, config?: AxiosRequestConfig): Promise<operations.UpdateSimResponse>;
}
export {};
