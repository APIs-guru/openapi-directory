import { AxiosInstance } from "axios";
import { Security } from "./models/shared";
import { Auth } from "./auth";
import { Config } from "./config";
import { Downloads } from "./downloads";
import { Eventlog } from "./eventlog";
import { Groups } from "./groups";
import { Nodes } from "./nodes";
import { Provisioning } from "./provisioning";
import { Public } from "./public";
import { Resources } from "./resources";
import { Roles } from "./roles";
import { Settings } from "./settings";
import { Shares } from "./shares";
import { Syslog } from "./syslog";
import { SystemAuthConfig } from "./systemauthconfig";
import { SystemPoliciesConfig } from "./systempoliciesconfig";
import { SystemSettingsConfig } from "./systemsettingsconfig";
import { SystemStorageConfig } from "./systemstorageconfig";
import { Uploads } from "./uploads";
import { User } from "./user";
import { Users } from "./users";
type OptsFunc = (sdk: SDK) => void;
export declare const ServerList: readonly ["https://dracoon.team/api"];
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare function WithSecurity(security: Security): OptsFunc;
export declare class SDK {
    auth: Auth;
    config: Config;
    downloads: Downloads;
    eventlog: Eventlog;
    groups: Groups;
    nodes: Nodes;
    provisioning: Provisioning;
    public: Public;
    resources: Resources;
    roles: Roles;
    settings: Settings;
    shares: Shares;
    syslog: Syslog;
    systemAuthConfig: SystemAuthConfig;
    systemPoliciesConfig: SystemPoliciesConfig;
    systemSettingsConfig: SystemSettingsConfig;
    systemStorageConfig: SystemStorageConfig;
    uploads: Uploads;
    user: User;
    users: Users;
    _defaultClient: AxiosInstance;
    _securityClient: AxiosInstance;
    _security?: Security;
    _serverURL: string;
    private _language;
    private _sdkVersion;
    private _genVersion;
    constructor(...opts: OptsFunc[]);
}
export {};
