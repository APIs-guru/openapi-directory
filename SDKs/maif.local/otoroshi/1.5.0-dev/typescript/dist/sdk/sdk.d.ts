import { AxiosInstance } from "axios";
import { Apikeys } from "./apikeys";
import { AuthConfig } from "./authconfig";
import { Certificates } from "./certificates";
import { Configuration } from "./configuration";
import { DataExporterConfigs } from "./dataexporterconfigs";
import { Environments } from "./environments";
import { Groups } from "./groups";
import { Health } from "./health";
import { Import } from "./import";
import { JwtVerifiers } from "./jwtverifiers";
import { Scripts } from "./scripts";
import { Services } from "./services";
import { Snowmonkey } from "./snowmonkey";
import { Stats } from "./stats";
import { Templates } from "./templates";
import { ValidationAuthorities } from "./validationauthorities";
type OptsFunc = (sdk: SDK) => void;
export declare const ServerList: readonly ["http://otoroshi-api.oto.tools/", "http://maif.local"];
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare class SDK {
    apikeys: Apikeys;
    authConfig: AuthConfig;
    certificates: Certificates;
    configuration: Configuration;
    dataExporterConfigs: DataExporterConfigs;
    environments: Environments;
    groups: Groups;
    health: Health;
    import: Import;
    jwtVerifiers: JwtVerifiers;
    scripts: Scripts;
    services: Services;
    snowmonkey: Snowmonkey;
    stats: Stats;
    templates: Templates;
    validationAuthorities: ValidationAuthorities;
    _defaultClient: AxiosInstance;
    _securityClient: AxiosInstance;
    _serverURL: string;
    private _language;
    private _sdkVersion;
    private _genVersion;
    constructor(...opts: OptsFunc[]);
}
export {};
