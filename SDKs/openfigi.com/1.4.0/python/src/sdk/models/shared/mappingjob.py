from dataclasses import dataclass, field
from datetime import date, datetime
from marshmallow import fields
import dateutil.parser
from typing import Any,List,Optional
from enum import Enum
from dataclasses_json import dataclass_json
from sdk import utils

class MappingJobIDTypeEnum(str, Enum):
    ID_ISIN = "ID_ISIN"
    ID_BB_UNIQUE = "ID_BB_UNIQUE"
    ID_SEDOL = "ID_SEDOL"
    ID_COMMON = "ID_COMMON"
    ID_WERTPAPIER = "ID_WERTPAPIER"
    ID_CUSIP = "ID_CUSIP"
    ID_BB = "ID_BB"
    ID_ITALY = "ID_ITALY"
    ID_EXCH_SYMBOL = "ID_EXCH_SYMBOL"
    ID_FULL_EXCHANGE_SYMBOL = "ID_FULL_EXCHANGE_SYMBOL"
    COMPOSITE_ID_BB_GLOBAL = "COMPOSITE_ID_BB_GLOBAL"
    ID_BB_GLOBAL_SHARE_CLASS_LEVEL = "ID_BB_GLOBAL_SHARE_CLASS_LEVEL"
    ID_BB_SEC_NUM_DES = "ID_BB_SEC_NUM_DES"
    ID_BB_GLOBAL = "ID_BB_GLOBAL"
    TICKER = "TICKER"
    ID_CUSIP_8_CHR = "ID_CUSIP_8_CHR"
    OCC_SYMBOL = "OCC_SYMBOL"
    UNIQUE_ID_FUT_OPT = "UNIQUE_ID_FUT_OPT"
    OPRA_SYMBOL = "OPRA_SYMBOL"
    TRADING_SYSTEM_IDENTIFIER = "TRADING_SYSTEM_IDENTIFIER"
    ID_CINS = "ID_CINS"
    ID_SHORT_CODE = "ID_SHORT_CODE"
    BASE_TICKER = "BASE_TICKER"
    VENDOR_INDEX_CODE = "VENDOR_INDEX_CODE"

class MappingJobOptionTypeEnum(str, Enum):
    PUT = "Put"
    CALL = "Call"

class MappingJobStateCodeEnum(str, Enum):
    AB = "AB"
    AC = "AC"
    AH = "AH"
    AK = "AK"
    AL = "AL"
    AM = "AM"
    AR = "AR"
    AS = "AS"
    AT = "AT"
    AZ = "AZ"
    BC = "BC"
    BJ = "BJ"
    CA = "CA"
    CB = "CB"
    CO = "CO"
    CQ = "CQ"
    CT = "CT"
    CZ = "CZ"
    DC = "DC"
    DE = "DE"
    EH = "EH"
    FH = "FH"
    FI = "FI"
    FJ = "FJ"
    FL = "FL"
    FO = "FO"
    FS = "FS"
    GA = "GA"
    GD = "GD"
    GF = "GF"
    GM = "GM"
    GS = "GS"
    GU = "GU"
    GX = "GX"
    GZ = "GZ"
    HA = "HA"
    HB = "HB"
    HE = "HE"
    HG = "HG"
    HI = "HI"
    HL = "HL"
    HN = "HN"
    HO = "HO"
    HS = "HS"
    IA = "IA"
    ID = "ID"
    IG = "IG"
    IK = "IK"
    IL = "IL"
    IN = "IN"
    IT = "IT"
    JL = "JL"
    JS = "JS"
    JX = "JX"
    KA = "KA"
    KC = "KC"
    KN = "KN"
    KO = "KO"
    KS = "KS"
    KT = "KT"
    KU = "KU"
    KY = "KY"
    LA = "LA"
    LN = "LN"
    MA = "MA"
    MB = "MB"
    MD = "MD"
    ME = "ME"
    MG = "MG"
    MI = "MI"
    MN = "MN"
    MO = "MO"
    MS = "MS"
    MT = "MT"
    MZ = "MZ"
    NB = "NB"
    NC = "NC"
    ND = "ND"
    NE = "NE"
    NG = "NG"
    NH = "NH"
    NJ = "NJ"
    NL = "NL"
    NM = "NM"
    NN = "NN"
    NR = "NR"
    NS = "NS"
    NT = "NT"
    NU = "NU"
    NV = "NV"
    NW = "NW"
    NX = "NX"
    NY = "NY"
    OH = "OH"
    OK = "OK"
    ON = "ON"
    OR = "OR"
    OS = "OS"
    OT = "OT"
    OY = "OY"
    PA = "PA"
    PE = "PE"
    PR = "PR"
    QC = "QC"
    QH = "QH"
    QL = "QL"
    RI = "RI"
    SA = "SA"
    SC = "SC"
    SD = "SD"
    SH = "SH"
    SI = "SI"
    SK = "SK"
    SN = "SN"
    ST = "ST"
    SX = "SX"
    SZ = "SZ"
    TA = "TA"
    TG = "TG"
    TJ = "TJ"
    TK = "TK"
    TN = "TN"
    TS = "TS"
    TT = "TT"
    TX = "TX"
    TY = "TY"
    UT = "UT"
    VA = "VA"
    VI = "VI"
    VT = "VT"
    WA = "WA"
    WI = "WI"
    WK = "WK"
    WV = "WV"
    WY = "WY"
    XJ = "XJ"
    XZ = "XZ"
    YA = "YA"
    YN = "YN"
    YT = "YT"
    YU = "YU"
    ZJ = "ZJ"


@dataclass_json
@dataclass
class MappingJob:
    r"""MappingJob
    For V3: securityType2 is required when idType is BASE_TICKER or ID_EXCH_SYMBOL.  expiration is required when securityType2 is Option or Warrant.  maturity is required when securityType2 is Pool.
    """
    
    id_type: MappingJobIDTypeEnum = field(metadata={'dataclasses_json': { 'letter_case': utils.field_name('idType') }})
    id_value: Any = field(metadata={'dataclasses_json': { 'letter_case': utils.field_name('idValue') }})
    contract_size: Optional[List[float]] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('contractSize') }})
    coupon: Optional[List[float]] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('coupon') }})
    currency: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('currency') }})
    exch_code: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('exchCode') }})
    expiration: Optional[List[date]] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('expiration') }})
    include_unlisted_equities: Optional[bool] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('includeUnlistedEquities') }})
    market_sec_des: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('marketSecDes') }})
    maturity: Optional[List[date]] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('maturity') }})
    mic_code: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('micCode') }})
    option_type: Optional[MappingJobOptionTypeEnum] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('optionType') }})
    security_type: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('securityType') }})
    security_type2: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('securityType2') }})
    state_code: Optional[MappingJobStateCodeEnum] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('stateCode') }})
    strike: Optional[List[float]] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('strike') }})
    
