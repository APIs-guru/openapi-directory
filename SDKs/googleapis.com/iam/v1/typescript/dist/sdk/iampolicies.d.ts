import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
export declare class IamPolicies {
    _defaultClient: AxiosInstance;
    _securityClient: AxiosInstance;
    _serverURL: string;
    _language: string;
    _sdkVersion: string;
    _genVersion: string;
    constructor(defaultClient: AxiosInstance, securityClient: AxiosInstance, serverURL: string, language: string, sdkVersion: string, genVersion: string);
    /**
     * iamIamPoliciesLintPolicy - Lints, or validates, an IAM policy. Currently checks the google.iam.v1.Binding.condition field, which contains a condition expression for a role binding. Successful calls to this method always return an HTTP `200 OK` status code, even if the linter detects an issue in the IAM policy.
    **/
    iamIamPoliciesLintPolicy(req: operations.IamIamPoliciesLintPolicyRequest, config?: AxiosRequestConfig): Promise<operations.IamIamPoliciesLintPolicyResponse>;
    /**
     * iamIamPoliciesQueryAuditableServices - Returns a list of services that allow you to opt into audit logs that are not generated by default. To learn more about audit logs, see the [Logging documentation](https://cloud.google.com/logging/docs/audit).
    **/
    iamIamPoliciesQueryAuditableServices(req: operations.IamIamPoliciesQueryAuditableServicesRequest, config?: AxiosRequestConfig): Promise<operations.IamIamPoliciesQueryAuditableServicesResponse>;
}
