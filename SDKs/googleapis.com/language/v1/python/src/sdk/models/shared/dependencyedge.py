from dataclasses import dataclass, field
from typing import Optional
from enum import Enum
from dataclasses_json import dataclass_json
from sdk import utils

class DependencyEdgeLabelEnum(str, Enum):
    UNKNOWN = "UNKNOWN"
    ABBREV = "ABBREV"
    ACOMP = "ACOMP"
    ADVCL = "ADVCL"
    ADVMOD = "ADVMOD"
    AMOD = "AMOD"
    APPOS = "APPOS"
    ATTR = "ATTR"
    AUX = "AUX"
    AUXPASS = "AUXPASS"
    CC = "CC"
    CCOMP = "CCOMP"
    CONJ = "CONJ"
    CSUBJ = "CSUBJ"
    CSUBJPASS = "CSUBJPASS"
    DEP = "DEP"
    DET = "DET"
    DISCOURSE = "DISCOURSE"
    DOBJ = "DOBJ"
    EXPL = "EXPL"
    GOESWITH = "GOESWITH"
    IOBJ = "IOBJ"
    MARK = "MARK"
    MWE = "MWE"
    MWV = "MWV"
    NEG = "NEG"
    NN = "NN"
    NPADVMOD = "NPADVMOD"
    NSUBJ = "NSUBJ"
    NSUBJPASS = "NSUBJPASS"
    NUM = "NUM"
    NUMBER = "NUMBER"
    P = "P"
    PARATAXIS = "PARATAXIS"
    PARTMOD = "PARTMOD"
    PCOMP = "PCOMP"
    POBJ = "POBJ"
    POSS = "POSS"
    POSTNEG = "POSTNEG"
    PRECOMP = "PRECOMP"
    PRECONJ = "PRECONJ"
    PREDET = "PREDET"
    PREF = "PREF"
    PREP = "PREP"
    PRONL = "PRONL"
    PRT = "PRT"
    PS = "PS"
    QUANTMOD = "QUANTMOD"
    RCMOD = "RCMOD"
    RCMODREL = "RCMODREL"
    RDROP = "RDROP"
    REF = "REF"
    REMNANT = "REMNANT"
    REPARANDUM = "REPARANDUM"
    ROOT = "ROOT"
    SNUM = "SNUM"
    SUFF = "SUFF"
    TMOD = "TMOD"
    TOPIC = "TOPIC"
    VMOD = "VMOD"
    VOCATIVE = "VOCATIVE"
    XCOMP = "XCOMP"
    SUFFIX = "SUFFIX"
    TITLE = "TITLE"
    ADVPHMOD = "ADVPHMOD"
    AUXCAUS = "AUXCAUS"
    AUXVV = "AUXVV"
    DTMOD = "DTMOD"
    FOREIGN = "FOREIGN"
    KW = "KW"
    LIST = "LIST"
    NOMC = "NOMC"
    NOMCSUBJ = "NOMCSUBJ"
    NOMCSUBJPASS = "NOMCSUBJPASS"
    NUMC = "NUMC"
    COP = "COP"
    DISLOCATED = "DISLOCATED"
    ASP = "ASP"
    GMOD = "GMOD"
    GOBJ = "GOBJ"
    INFMOD = "INFMOD"
    MES = "MES"
    NCOMP = "NCOMP"


@dataclass_json
@dataclass
class DependencyEdge:
    r"""DependencyEdge
    Represents dependency parse tree information for a token. (For more information on dependency labels, see http://www.aclweb.org/anthology/P13-2017
    """
    
    head_token_index: Optional[int] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('headTokenIndex') }})
    label: Optional[DependencyEdgeLabelEnum] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('label') }})
    
