import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    FirebaseAvailableProjectsList(req: operations.FirebaseAvailableProjectsListRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseAvailableProjectsListResponse>;
    FirebaseProjectsAddFirebase(req: operations.FirebaseProjectsAddFirebaseRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseProjectsAddFirebaseResponse>;
    FirebaseProjectsAddGoogleAnalytics(req: operations.FirebaseProjectsAddGoogleAnalyticsRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseProjectsAddGoogleAnalyticsResponse>;
    FirebaseProjectsAndroidAppsCreate(req: operations.FirebaseProjectsAndroidAppsCreateRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseProjectsAndroidAppsCreateResponse>;
    FirebaseProjectsAndroidAppsList(req: operations.FirebaseProjectsAndroidAppsListRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseProjectsAndroidAppsListResponse>;
    FirebaseProjectsAndroidAppsShaCreate(req: operations.FirebaseProjectsAndroidAppsShaCreateRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseProjectsAndroidAppsShaCreateResponse>;
    FirebaseProjectsAndroidAppsShaDelete(req: operations.FirebaseProjectsAndroidAppsShaDeleteRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseProjectsAndroidAppsShaDeleteResponse>;
    FirebaseProjectsAndroidAppsShaList(req: operations.FirebaseProjectsAndroidAppsShaListRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseProjectsAndroidAppsShaListResponse>;
    FirebaseProjectsAvailableLocationsList(req: operations.FirebaseProjectsAvailableLocationsListRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseProjectsAvailableLocationsListResponse>;
    FirebaseProjectsDefaultLocationFinalize(req: operations.FirebaseProjectsDefaultLocationFinalizeRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseProjectsDefaultLocationFinalizeResponse>;
    FirebaseProjectsIosAppsCreate(req: operations.FirebaseProjectsIosAppsCreateRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseProjectsIosAppsCreateResponse>;
    FirebaseProjectsIosAppsList(req: operations.FirebaseProjectsIosAppsListRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseProjectsIosAppsListResponse>;
    FirebaseProjectsList(req: operations.FirebaseProjectsListRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseProjectsListResponse>;
    FirebaseProjectsRemoveAnalytics(req: operations.FirebaseProjectsRemoveAnalyticsRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseProjectsRemoveAnalyticsResponse>;
    FirebaseProjectsSearchApps(req: operations.FirebaseProjectsSearchAppsRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseProjectsSearchAppsResponse>;
    FirebaseProjectsWebAppsCreate(req: operations.FirebaseProjectsWebAppsCreateRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseProjectsWebAppsCreateResponse>;
    FirebaseProjectsWebAppsGetConfig(req: operations.FirebaseProjectsWebAppsGetConfigRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseProjectsWebAppsGetConfigResponse>;
    FirebaseProjectsWebAppsList(req: operations.FirebaseProjectsWebAppsListRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseProjectsWebAppsListResponse>;
    FirebaseProjectsWebAppsPatch(req: operations.FirebaseProjectsWebAppsPatchRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseProjectsWebAppsPatchResponse>;
    FirebaseProjectsWebAppsRemove(req: operations.FirebaseProjectsWebAppsRemoveRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseProjectsWebAppsRemoveResponse>;
    FirebaseProjectsWebAppsUndelete(req: operations.FirebaseProjectsWebAppsUndeleteRequest, config?: AxiosRequestConfig): Promise<operations.FirebaseProjectsWebAppsUndeleteResponse>;
}
export {};
