import { Metadata, SpeakeasyBase } from "../../../internal/utils/utils";
import * as shared from "../shared";
import { Value } from "./value";


// DataPoint
/** 
 * Represents a single data point, generated by a particular data source. A data point holds a value for each field, an end timestamp and an optional start time. The exact semantics of each of these attributes are specified in the documentation for the particular data type. A data point can represent an instantaneous measurement, reading or input observation, as well as averages or aggregates over a time interval. Check the data type documentation to determine which is the case for a particular data type. Data points always contain one value for each field of the data type.
**/
export class DataPoint extends SpeakeasyBase {
  @Metadata({ data: "json, name=computationTimeMillis" })
  computationTimeMillis?: string;

  @Metadata({ data: "json, name=dataTypeName" })
  dataTypeName?: string;

  @Metadata({ data: "json, name=endTimeNanos" })
  endTimeNanos?: string;

  @Metadata({ data: "json, name=modifiedTimeMillis" })
  modifiedTimeMillis?: string;

  @Metadata({ data: "json, name=originDataSourceId" })
  originDataSourceId?: string;

  @Metadata({ data: "json, name=rawTimestampNanos" })
  rawTimestampNanos?: string;

  @Metadata({ data: "json, name=startTimeNanos" })
  startTimeNanos?: string;

  @Metadata({ data: "json, name=value", elemType: shared.Value })
  value?: Value[];
}
