import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    CloudresourcemanagerEffectiveTagsList(req: operations.CloudresourcemanagerEffectiveTagsListRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerEffectiveTagsListResponse>;
    CloudresourcemanagerFoldersCreate(req: operations.CloudresourcemanagerFoldersCreateRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerFoldersCreateResponse>;
    CloudresourcemanagerFoldersList(req: operations.CloudresourcemanagerFoldersListRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerFoldersListResponse>;
    CloudresourcemanagerFoldersSearch(req: operations.CloudresourcemanagerFoldersSearchRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerFoldersSearchResponse>;
    CloudresourcemanagerLiensCreate(req: operations.CloudresourcemanagerLiensCreateRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerLiensCreateResponse>;
    CloudresourcemanagerLiensList(req: operations.CloudresourcemanagerLiensListRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerLiensListResponse>;
    CloudresourcemanagerOrganizationsSearch(req: operations.CloudresourcemanagerOrganizationsSearchRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerOrganizationsSearchResponse>;
    CloudresourcemanagerProjectsCreate(req: operations.CloudresourcemanagerProjectsCreateRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerProjectsCreateResponse>;
    CloudresourcemanagerProjectsList(req: operations.CloudresourcemanagerProjectsListRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerProjectsListResponse>;
    CloudresourcemanagerProjectsMove(req: operations.CloudresourcemanagerProjectsMoveRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerProjectsMoveResponse>;
    CloudresourcemanagerProjectsSearch(req: operations.CloudresourcemanagerProjectsSearchRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerProjectsSearchResponse>;
    CloudresourcemanagerProjectsUndelete(req: operations.CloudresourcemanagerProjectsUndeleteRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerProjectsUndeleteResponse>;
    CloudresourcemanagerTagBindingsCreate(req: operations.CloudresourcemanagerTagBindingsCreateRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerTagBindingsCreateResponse>;
    CloudresourcemanagerTagBindingsList(req: operations.CloudresourcemanagerTagBindingsListRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerTagBindingsListResponse>;
    CloudresourcemanagerTagKeysCreate(req: operations.CloudresourcemanagerTagKeysCreateRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerTagKeysCreateResponse>;
    CloudresourcemanagerTagKeysList(req: operations.CloudresourcemanagerTagKeysListRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerTagKeysListResponse>;
    CloudresourcemanagerTagValuesCreate(req: operations.CloudresourcemanagerTagValuesCreateRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerTagValuesCreateResponse>;
    CloudresourcemanagerTagValuesGet(req: operations.CloudresourcemanagerTagValuesGetRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerTagValuesGetResponse>;
    CloudresourcemanagerTagValuesGetIamPolicy(req: operations.CloudresourcemanagerTagValuesGetIamPolicyRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerTagValuesGetIamPolicyResponse>;
    CloudresourcemanagerTagValuesList(req: operations.CloudresourcemanagerTagValuesListRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerTagValuesListResponse>;
    CloudresourcemanagerTagValuesPatch(req: operations.CloudresourcemanagerTagValuesPatchRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerTagValuesPatchResponse>;
    CloudresourcemanagerTagValuesSetIamPolicy(req: operations.CloudresourcemanagerTagValuesSetIamPolicyRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerTagValuesSetIamPolicyResponse>;
    CloudresourcemanagerTagValuesTagHoldsCreate(req: operations.CloudresourcemanagerTagValuesTagHoldsCreateRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerTagValuesTagHoldsCreateResponse>;
    CloudresourcemanagerTagValuesTagHoldsDelete(req: operations.CloudresourcemanagerTagValuesTagHoldsDeleteRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerTagValuesTagHoldsDeleteResponse>;
    CloudresourcemanagerTagValuesTagHoldsList(req: operations.CloudresourcemanagerTagValuesTagHoldsListRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerTagValuesTagHoldsListResponse>;
    CloudresourcemanagerTagValuesTestIamPermissions(req: operations.CloudresourcemanagerTagValuesTestIamPermissionsRequest, config?: AxiosRequestConfig): Promise<operations.CloudresourcemanagerTagValuesTestIamPermissionsResponse>;
}
export {};
