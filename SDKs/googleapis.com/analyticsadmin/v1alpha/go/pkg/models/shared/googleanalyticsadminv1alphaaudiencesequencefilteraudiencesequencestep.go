package shared




type GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStepScopeEnum string

const (
    GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStepScopeEnumAudienceFilterScopeUnspecified GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStepScopeEnum = "AUDIENCE_FILTER_SCOPE_UNSPECIFIED"
GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStepScopeEnumAudienceFilterScopeWithinSameEvent GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStepScopeEnum = "AUDIENCE_FILTER_SCOPE_WITHIN_SAME_EVENT"
GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStepScopeEnumAudienceFilterScopeWithinSameSession GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStepScopeEnum = "AUDIENCE_FILTER_SCOPE_WITHIN_SAME_SESSION"
GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStepScopeEnumAudienceFilterScopeAcrossAllSessions GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStepScopeEnum = "AUDIENCE_FILTER_SCOPE_ACROSS_ALL_SESSIONS"
)


type GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep struct {
    ConstraintDuration *string `json:"constraintDuration,omitempty"`
    FilterExpression *GoogleAnalyticsAdminV1alphaAudienceFilterExpression `json:"filterExpression,omitempty"`
    ImmediatelyFollows *bool `json:"immediatelyFollows,omitempty"`
    Scope *GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStepScopeEnum `json:"scope,omitempty"`
    
}

