var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { SpeakeasyMetadata, SpeakeasyBase } from "../../../internal/utils";
import { FeatureIdProto } from "./featureidproto";
export var GeocodingSummaryFeatureTypeEnum;
(function (GeocodingSummaryFeatureTypeEnum) {
    GeocodingSummaryFeatureTypeEnum["TypeAny"] = "typeAny";
    GeocodingSummaryFeatureTypeEnum["TypeTransportation"] = "typeTransportation";
    GeocodingSummaryFeatureTypeEnum["TypeRoute"] = "typeRoute";
    GeocodingSummaryFeatureTypeEnum["TypeDeprecatedHighwayDoNotUse"] = "typeDeprecatedHighwayDoNotUse";
    GeocodingSummaryFeatureTypeEnum["TypeHighway"] = "typeHighway";
    GeocodingSummaryFeatureTypeEnum["TypeHighway1"] = "typeHighway1";
    GeocodingSummaryFeatureTypeEnum["TypeHighway2"] = "typeHighway2";
    GeocodingSummaryFeatureTypeEnum["TypeHighway3"] = "typeHighway3";
    GeocodingSummaryFeatureTypeEnum["TypeHighway4"] = "typeHighway4";
    GeocodingSummaryFeatureTypeEnum["TypeHighway5"] = "typeHighway5";
    GeocodingSummaryFeatureTypeEnum["TypeHighway6"] = "typeHighway6";
    GeocodingSummaryFeatureTypeEnum["TypeHighway7"] = "typeHighway7";
    GeocodingSummaryFeatureTypeEnum["TypeHighway8"] = "typeHighway8";
    GeocodingSummaryFeatureTypeEnum["TypeHighway9"] = "typeHighway9";
    GeocodingSummaryFeatureTypeEnum["TypeBicycleRoute"] = "typeBicycleRoute";
    GeocodingSummaryFeatureTypeEnum["TypeTrail"] = "typeTrail";
    GeocodingSummaryFeatureTypeEnum["TypeSegment"] = "typeSegment";
    GeocodingSummaryFeatureTypeEnum["TypeRoad"] = "typeRoad";
    GeocodingSummaryFeatureTypeEnum["TypeRailway"] = "typeRailway";
    GeocodingSummaryFeatureTypeEnum["TypeStandardTrack"] = "typeStandardTrack";
    GeocodingSummaryFeatureTypeEnum["TypeJrTrack"] = "typeJrTrack";
    GeocodingSummaryFeatureTypeEnum["TypeNarrowTrack"] = "typeNarrowTrack";
    GeocodingSummaryFeatureTypeEnum["TypeMonorailTrack"] = "typeMonorailTrack";
    GeocodingSummaryFeatureTypeEnum["TypeSubwayTrack"] = "typeSubwayTrack";
    GeocodingSummaryFeatureTypeEnum["TypeLightRailTrack"] = "typeLightRailTrack";
    GeocodingSummaryFeatureTypeEnum["TypeBroadTrack"] = "typeBroadTrack";
    GeocodingSummaryFeatureTypeEnum["TypeHighSpeedRail"] = "typeHighSpeedRail";
    GeocodingSummaryFeatureTypeEnum["TypeTrolleyTrack"] = "typeTrolleyTrack";
    GeocodingSummaryFeatureTypeEnum["TypeFerry"] = "typeFerry";
    GeocodingSummaryFeatureTypeEnum["TypeFerryBoat"] = "typeFerryBoat";
    GeocodingSummaryFeatureTypeEnum["TypeFerryTrain"] = "typeFerryTrain";
    GeocodingSummaryFeatureTypeEnum["TypeVirtualSegment"] = "typeVirtualSegment";
    GeocodingSummaryFeatureTypeEnum["TypeIntersection"] = "typeIntersection";
    GeocodingSummaryFeatureTypeEnum["TypeTransit"] = "typeTransit";
    GeocodingSummaryFeatureTypeEnum["TypeTransitStation"] = "typeTransitStation";
    GeocodingSummaryFeatureTypeEnum["TypeBusStation"] = "typeBusStation";
    GeocodingSummaryFeatureTypeEnum["TypeTramwayStation"] = "typeTramwayStation";
    GeocodingSummaryFeatureTypeEnum["TypeTrainStation"] = "typeTrainStation";
    GeocodingSummaryFeatureTypeEnum["TypeSubwayStation"] = "typeSubwayStation";
    GeocodingSummaryFeatureTypeEnum["TypeFerryTerminal"] = "typeFerryTerminal";
    GeocodingSummaryFeatureTypeEnum["TypeAirport"] = "typeAirport";
    GeocodingSummaryFeatureTypeEnum["TypeAirportCivil"] = "typeAirportCivil";
    GeocodingSummaryFeatureTypeEnum["TypeAirportMilitary"] = "typeAirportMilitary";
    GeocodingSummaryFeatureTypeEnum["TypeAirportMixed"] = "typeAirportMixed";
    GeocodingSummaryFeatureTypeEnum["TypeHeliport"] = "typeHeliport";
    GeocodingSummaryFeatureTypeEnum["TypeSeaplaneBase"] = "typeSeaplaneBase";
    GeocodingSummaryFeatureTypeEnum["TypeAirstrip"] = "typeAirstrip";
    GeocodingSummaryFeatureTypeEnum["TypeCableCarStation"] = "typeCableCarStation";
    GeocodingSummaryFeatureTypeEnum["TypeGondolaLiftStation"] = "typeGondolaLiftStation";
    GeocodingSummaryFeatureTypeEnum["TypeFunicularStation"] = "typeFunicularStation";
    GeocodingSummaryFeatureTypeEnum["TypeSpecialStation"] = "typeSpecialStation";
    GeocodingSummaryFeatureTypeEnum["TypeHorseCarriageStation"] = "typeHorseCarriageStation";
    GeocodingSummaryFeatureTypeEnum["TypeMonorailStation"] = "typeMonorailStation";
    GeocodingSummaryFeatureTypeEnum["TypeSeaport"] = "typeSeaport";
    GeocodingSummaryFeatureTypeEnum["TypeTransitStop"] = "typeTransitStop";
    GeocodingSummaryFeatureTypeEnum["TypeTransitTrip"] = "typeTransitTrip";
    GeocodingSummaryFeatureTypeEnum["TypeTransitDeparture"] = "typeTransitDeparture";
    GeocodingSummaryFeatureTypeEnum["TypeTransitLeg"] = "typeTransitLeg";
    GeocodingSummaryFeatureTypeEnum["TypeTransitLine"] = "typeTransitLine";
    GeocodingSummaryFeatureTypeEnum["TypeTransitAgencyDeprecatedValue"] = "typeTransitAgencyDeprecatedValue";
    GeocodingSummaryFeatureTypeEnum["TypeTransitTransfer"] = "typeTransitTransfer";
    GeocodingSummaryFeatureTypeEnum["TypeSegmentPath"] = "typeSegmentPath";
    GeocodingSummaryFeatureTypeEnum["TypeRoadSign"] = "typeRoadSign";
    GeocodingSummaryFeatureTypeEnum["TypeIntersectionGroup"] = "typeIntersectionGroup";
    GeocodingSummaryFeatureTypeEnum["TypePathway"] = "typePathway";
    GeocodingSummaryFeatureTypeEnum["TypeRestrictionGroup"] = "typeRestrictionGroup";
    GeocodingSummaryFeatureTypeEnum["TypeTollCluster"] = "typeTollCluster";
    GeocodingSummaryFeatureTypeEnum["TypePolitical"] = "typePolitical";
    GeocodingSummaryFeatureTypeEnum["TypeCountry"] = "typeCountry";
    GeocodingSummaryFeatureTypeEnum["TypeAdministrativeArea"] = "typeAdministrativeArea";
    GeocodingSummaryFeatureTypeEnum["TypeAdministrativeArea1"] = "typeAdministrativeArea1";
    GeocodingSummaryFeatureTypeEnum["TypeUsState"] = "typeUsState";
    GeocodingSummaryFeatureTypeEnum["TypeGbCountry"] = "typeGbCountry";
    GeocodingSummaryFeatureTypeEnum["TypeJpTodoufuken"] = "typeJpTodoufuken";
    GeocodingSummaryFeatureTypeEnum["TypeAdministrativeArea2"] = "typeAdministrativeArea2";
    GeocodingSummaryFeatureTypeEnum["TypeGbFormerPostalCounty"] = "typeGbFormerPostalCounty";
    GeocodingSummaryFeatureTypeEnum["TypeGbTraditionalCounty"] = "typeGbTraditionalCounty";
    GeocodingSummaryFeatureTypeEnum["TypeAdministrativeArea3"] = "typeAdministrativeArea3";
    GeocodingSummaryFeatureTypeEnum["TypeAdministrativeArea4"] = "typeAdministrativeArea4";
    GeocodingSummaryFeatureTypeEnum["TypeAdministrativeArea5"] = "typeAdministrativeArea5";
    GeocodingSummaryFeatureTypeEnum["TypeAdministrativeArea6"] = "typeAdministrativeArea6";
    GeocodingSummaryFeatureTypeEnum["TypeAdministrativeArea7"] = "typeAdministrativeArea7";
    GeocodingSummaryFeatureTypeEnum["TypeAdministrativeArea8"] = "typeAdministrativeArea8";
    GeocodingSummaryFeatureTypeEnum["TypeAdministrativeArea9"] = "typeAdministrativeArea9";
    GeocodingSummaryFeatureTypeEnum["TypeColloquialArea"] = "typeColloquialArea";
    GeocodingSummaryFeatureTypeEnum["TypeReservation"] = "typeReservation";
    GeocodingSummaryFeatureTypeEnum["TypeLocality"] = "typeLocality";
    GeocodingSummaryFeatureTypeEnum["TypeGbPostTown"] = "typeGbPostTown";
    GeocodingSummaryFeatureTypeEnum["TypeJpGun"] = "typeJpGun";
    GeocodingSummaryFeatureTypeEnum["TypeJpShikuchouson"] = "typeJpShikuchouson";
    GeocodingSummaryFeatureTypeEnum["TypeJpSubShikuchouson"] = "typeJpSubShikuchouson";
    GeocodingSummaryFeatureTypeEnum["TypeColloquialCity"] = "typeColloquialCity";
    GeocodingSummaryFeatureTypeEnum["TypeSublocality"] = "typeSublocality";
    GeocodingSummaryFeatureTypeEnum["TypeUsBorough"] = "typeUsBorough";
    GeocodingSummaryFeatureTypeEnum["TypeGbDependentLocality"] = "typeGbDependentLocality";
    GeocodingSummaryFeatureTypeEnum["TypeJpOoaza"] = "typeJpOoaza";
    GeocodingSummaryFeatureTypeEnum["TypeJpKoaza"] = "typeJpKoaza";
    GeocodingSummaryFeatureTypeEnum["TypeJpGaiku"] = "typeJpGaiku";
    GeocodingSummaryFeatureTypeEnum["TypeGbDoubleDependentLocality"] = "typeGbDoubleDependentLocality";
    GeocodingSummaryFeatureTypeEnum["TypeJpChiban"] = "typeJpChiban";
    GeocodingSummaryFeatureTypeEnum["TypeJpEdaban"] = "typeJpEdaban";
    GeocodingSummaryFeatureTypeEnum["TypeSublocality1"] = "typeSublocality1";
    GeocodingSummaryFeatureTypeEnum["TypeSublocality2"] = "typeSublocality2";
    GeocodingSummaryFeatureTypeEnum["TypeSublocality3"] = "typeSublocality3";
    GeocodingSummaryFeatureTypeEnum["TypeSublocality4"] = "typeSublocality4";
    GeocodingSummaryFeatureTypeEnum["TypeSublocality5"] = "typeSublocality5";
    GeocodingSummaryFeatureTypeEnum["TypeNeighborhood"] = "typeNeighborhood";
    GeocodingSummaryFeatureTypeEnum["TypeConstituency"] = "typeConstituency";
    GeocodingSummaryFeatureTypeEnum["TypeDesignatedMarketArea"] = "typeDesignatedMarketArea";
    GeocodingSummaryFeatureTypeEnum["TypeSchoolDistrict"] = "typeSchoolDistrict";
    GeocodingSummaryFeatureTypeEnum["TypeLandParcel"] = "typeLandParcel";
    GeocodingSummaryFeatureTypeEnum["TypeDisputedArea"] = "typeDisputedArea";
    GeocodingSummaryFeatureTypeEnum["TypePoliceJurisdiction"] = "typePoliceJurisdiction";
    GeocodingSummaryFeatureTypeEnum["TypeStatisticalArea"] = "typeStatisticalArea";
    GeocodingSummaryFeatureTypeEnum["TypeConstituencyFuture"] = "typeConstituencyFuture";
    GeocodingSummaryFeatureTypeEnum["TypePark"] = "typePark";
    GeocodingSummaryFeatureTypeEnum["TypeGolfCourse"] = "typeGolfCourse";
    GeocodingSummaryFeatureTypeEnum["TypeLocalPark"] = "typeLocalPark";
    GeocodingSummaryFeatureTypeEnum["TypeNationalPark"] = "typeNationalPark";
    GeocodingSummaryFeatureTypeEnum["TypeUsNationalPark"] = "typeUsNationalPark";
    GeocodingSummaryFeatureTypeEnum["TypeUsNationalMonument"] = "typeUsNationalMonument";
    GeocodingSummaryFeatureTypeEnum["TypeNationalForest"] = "typeNationalForest";
    GeocodingSummaryFeatureTypeEnum["TypeProvincialPark"] = "typeProvincialPark";
    GeocodingSummaryFeatureTypeEnum["TypeProvincialForest"] = "typeProvincialForest";
    GeocodingSummaryFeatureTypeEnum["TypeCampgrounds"] = "typeCampgrounds";
    GeocodingSummaryFeatureTypeEnum["TypeHikingArea"] = "typeHikingArea";
    GeocodingSummaryFeatureTypeEnum["TypeBusiness"] = "typeBusiness";
    GeocodingSummaryFeatureTypeEnum["TypeGovernment"] = "typeGovernment";
    GeocodingSummaryFeatureTypeEnum["TypeBorderCrossing"] = "typeBorderCrossing";
    GeocodingSummaryFeatureTypeEnum["TypeCityHall"] = "typeCityHall";
    GeocodingSummaryFeatureTypeEnum["TypeCourthouse"] = "typeCourthouse";
    GeocodingSummaryFeatureTypeEnum["TypeEmbassy"] = "typeEmbassy";
    GeocodingSummaryFeatureTypeEnum["TypeLibrary"] = "typeLibrary";
    GeocodingSummaryFeatureTypeEnum["TypeSchool"] = "typeSchool";
    GeocodingSummaryFeatureTypeEnum["TypeUniversity"] = "typeUniversity";
    GeocodingSummaryFeatureTypeEnum["TypeEmergency"] = "typeEmergency";
    GeocodingSummaryFeatureTypeEnum["TypeHospital"] = "typeHospital";
    GeocodingSummaryFeatureTypeEnum["TypePharmacy"] = "typePharmacy";
    GeocodingSummaryFeatureTypeEnum["TypePolice"] = "typePolice";
    GeocodingSummaryFeatureTypeEnum["TypeFire"] = "typeFire";
    GeocodingSummaryFeatureTypeEnum["TypeDoctor"] = "typeDoctor";
    GeocodingSummaryFeatureTypeEnum["TypeDentist"] = "typeDentist";
    GeocodingSummaryFeatureTypeEnum["TypeVeterinarian"] = "typeVeterinarian";
    GeocodingSummaryFeatureTypeEnum["TypeTravelService"] = "typeTravelService";
    GeocodingSummaryFeatureTypeEnum["TypeLodging"] = "typeLodging";
    GeocodingSummaryFeatureTypeEnum["TypeRestaurant"] = "typeRestaurant";
    GeocodingSummaryFeatureTypeEnum["TypeGasStation"] = "typeGasStation";
    GeocodingSummaryFeatureTypeEnum["TypeParking"] = "typeParking";
    GeocodingSummaryFeatureTypeEnum["TypePostOffice"] = "typePostOffice";
    GeocodingSummaryFeatureTypeEnum["TypeRestArea"] = "typeRestArea";
    GeocodingSummaryFeatureTypeEnum["TypeCashMachine"] = "typeCashMachine";
    GeocodingSummaryFeatureTypeEnum["TypeCarRental"] = "typeCarRental";
    GeocodingSummaryFeatureTypeEnum["TypeCarRepair"] = "typeCarRepair";
    GeocodingSummaryFeatureTypeEnum["TypeShopping"] = "typeShopping";
    GeocodingSummaryFeatureTypeEnum["TypeGrocery"] = "typeGrocery";
    GeocodingSummaryFeatureTypeEnum["TypeTouristDestination"] = "typeTouristDestination";
    GeocodingSummaryFeatureTypeEnum["TypeEcoTouristDestination"] = "typeEcoTouristDestination";
    GeocodingSummaryFeatureTypeEnum["TypeBirdWatching"] = "typeBirdWatching";
    GeocodingSummaryFeatureTypeEnum["TypeFishing"] = "typeFishing";
    GeocodingSummaryFeatureTypeEnum["TypeHunting"] = "typeHunting";
    GeocodingSummaryFeatureTypeEnum["TypeNatureReserve"] = "typeNatureReserve";
    GeocodingSummaryFeatureTypeEnum["TypeTemple"] = "typeTemple";
    GeocodingSummaryFeatureTypeEnum["TypeChurch"] = "typeChurch";
    GeocodingSummaryFeatureTypeEnum["TypeGurudwara"] = "typeGurudwara";
    GeocodingSummaryFeatureTypeEnum["TypeHinduTemple"] = "typeHinduTemple";
    GeocodingSummaryFeatureTypeEnum["TypeMosque"] = "typeMosque";
    GeocodingSummaryFeatureTypeEnum["TypeSynagogue"] = "typeSynagogue";
    GeocodingSummaryFeatureTypeEnum["TypeStadium"] = "typeStadium";
    GeocodingSummaryFeatureTypeEnum["TypeBar"] = "typeBar";
    GeocodingSummaryFeatureTypeEnum["TypeMovieRental"] = "typeMovieRental";
    GeocodingSummaryFeatureTypeEnum["TypeCoffee"] = "typeCoffee";
    GeocodingSummaryFeatureTypeEnum["TypeGolf"] = "typeGolf";
    GeocodingSummaryFeatureTypeEnum["TypeBank"] = "typeBank";
    GeocodingSummaryFeatureTypeEnum["TypeDoodle"] = "typeDoodle";
    GeocodingSummaryFeatureTypeEnum["TypeGrounds"] = "typeGrounds";
    GeocodingSummaryFeatureTypeEnum["TypeAirportGrounds"] = "typeAirportGrounds";
    GeocodingSummaryFeatureTypeEnum["TypeBuildingGrounds"] = "typeBuildingGrounds";
    GeocodingSummaryFeatureTypeEnum["TypeCemetery"] = "typeCemetery";
    GeocodingSummaryFeatureTypeEnum["TypeHospitalGrounds"] = "typeHospitalGrounds";
    GeocodingSummaryFeatureTypeEnum["TypeIndustrial"] = "typeIndustrial";
    GeocodingSummaryFeatureTypeEnum["TypeMilitary"] = "typeMilitary";
    GeocodingSummaryFeatureTypeEnum["TypeShoppingCenter"] = "typeShoppingCenter";
    GeocodingSummaryFeatureTypeEnum["TypeSportsComplex"] = "typeSportsComplex";
    GeocodingSummaryFeatureTypeEnum["TypeUniversityGrounds"] = "typeUniversityGrounds";
    GeocodingSummaryFeatureTypeEnum["TypeDeprecatedTarmac"] = "typeDeprecatedTarmac";
    GeocodingSummaryFeatureTypeEnum["TypeEnclosedTrafficArea"] = "typeEnclosedTrafficArea";
    GeocodingSummaryFeatureTypeEnum["TypeParkingLot"] = "typeParkingLot";
    GeocodingSummaryFeatureTypeEnum["TypeParkingGarage"] = "typeParkingGarage";
    GeocodingSummaryFeatureTypeEnum["TypeOffRoadArea"] = "typeOffRoadArea";
    GeocodingSummaryFeatureTypeEnum["TypeBorder"] = "typeBorder";
    GeocodingSummaryFeatureTypeEnum["TypeBuilding"] = "typeBuilding";
    GeocodingSummaryFeatureTypeEnum["TypeGeocodedAddress"] = "typeGeocodedAddress";
    GeocodingSummaryFeatureTypeEnum["TypeNaturalFeature"] = "typeNaturalFeature";
    GeocodingSummaryFeatureTypeEnum["TypeTerrain"] = "typeTerrain";
    GeocodingSummaryFeatureTypeEnum["TypeSand"] = "typeSand";
    GeocodingSummaryFeatureTypeEnum["TypeBeach"] = "typeBeach";
    GeocodingSummaryFeatureTypeEnum["TypeDune"] = "typeDune";
    GeocodingSummaryFeatureTypeEnum["TypeRocky"] = "typeRocky";
    GeocodingSummaryFeatureTypeEnum["TypeIce"] = "typeIce";
    GeocodingSummaryFeatureTypeEnum["TypeGlacier"] = "typeGlacier";
    GeocodingSummaryFeatureTypeEnum["TypeBuiltUpArea"] = "typeBuiltUpArea";
    GeocodingSummaryFeatureTypeEnum["TypeVegetation"] = "typeVegetation";
    GeocodingSummaryFeatureTypeEnum["TypeShrubbery"] = "typeShrubbery";
    GeocodingSummaryFeatureTypeEnum["TypeWoods"] = "typeWoods";
    GeocodingSummaryFeatureTypeEnum["TypeAgricultural"] = "typeAgricultural";
    GeocodingSummaryFeatureTypeEnum["TypeGrassland"] = "typeGrassland";
    GeocodingSummaryFeatureTypeEnum["TypeTundra"] = "typeTundra";
    GeocodingSummaryFeatureTypeEnum["TypeDesert"] = "typeDesert";
    GeocodingSummaryFeatureTypeEnum["TypeSaltFlat"] = "typeSaltFlat";
    GeocodingSummaryFeatureTypeEnum["TypeWater"] = "typeWater";
    GeocodingSummaryFeatureTypeEnum["TypeOcean"] = "typeOcean";
    GeocodingSummaryFeatureTypeEnum["TypeBay"] = "typeBay";
    GeocodingSummaryFeatureTypeEnum["TypeBight"] = "typeBight";
    GeocodingSummaryFeatureTypeEnum["TypeLagoon"] = "typeLagoon";
    GeocodingSummaryFeatureTypeEnum["TypeSea"] = "typeSea";
    GeocodingSummaryFeatureTypeEnum["TypeStrait"] = "typeStrait";
    GeocodingSummaryFeatureTypeEnum["TypeInlet"] = "typeInlet";
    GeocodingSummaryFeatureTypeEnum["TypeFjord"] = "typeFjord";
    GeocodingSummaryFeatureTypeEnum["TypeLake"] = "typeLake";
    GeocodingSummaryFeatureTypeEnum["TypeSeasonalLake"] = "typeSeasonalLake";
    GeocodingSummaryFeatureTypeEnum["TypeReservoir"] = "typeReservoir";
    GeocodingSummaryFeatureTypeEnum["TypePond"] = "typePond";
    GeocodingSummaryFeatureTypeEnum["TypeRiver"] = "typeRiver";
    GeocodingSummaryFeatureTypeEnum["TypeRapids"] = "typeRapids";
    GeocodingSummaryFeatureTypeEnum["TypeDistributary"] = "typeDistributary";
    GeocodingSummaryFeatureTypeEnum["TypeConfluence"] = "typeConfluence";
    GeocodingSummaryFeatureTypeEnum["TypeWaterfall"] = "typeWaterfall";
    GeocodingSummaryFeatureTypeEnum["TypeSpring"] = "typeSpring";
    GeocodingSummaryFeatureTypeEnum["TypeGeyser"] = "typeGeyser";
    GeocodingSummaryFeatureTypeEnum["TypeHotSpring"] = "typeHotSpring";
    GeocodingSummaryFeatureTypeEnum["TypeSeasonalRiver"] = "typeSeasonalRiver";
    GeocodingSummaryFeatureTypeEnum["TypeWadi"] = "typeWadi";
    GeocodingSummaryFeatureTypeEnum["TypeEstuary"] = "typeEstuary";
    GeocodingSummaryFeatureTypeEnum["TypeWetland"] = "typeWetland";
    GeocodingSummaryFeatureTypeEnum["TypeWaterNavigation"] = "typeWaterNavigation";
    GeocodingSummaryFeatureTypeEnum["TypeFord"] = "typeFord";
    GeocodingSummaryFeatureTypeEnum["TypeCanal"] = "typeCanal";
    GeocodingSummaryFeatureTypeEnum["TypeHarbor"] = "typeHarbor";
    GeocodingSummaryFeatureTypeEnum["TypeChannel"] = "typeChannel";
    GeocodingSummaryFeatureTypeEnum["TypeReef"] = "typeReef";
    GeocodingSummaryFeatureTypeEnum["TypeReefFlat"] = "typeReefFlat";
    GeocodingSummaryFeatureTypeEnum["TypeReefGrowth"] = "typeReefGrowth";
    GeocodingSummaryFeatureTypeEnum["TypeReefExtent"] = "typeReefExtent";
    GeocodingSummaryFeatureTypeEnum["TypeReefRockSubmerged"] = "typeReefRockSubmerged";
    GeocodingSummaryFeatureTypeEnum["TypeIrrigation"] = "typeIrrigation";
    GeocodingSummaryFeatureTypeEnum["TypeDam"] = "typeDam";
    GeocodingSummaryFeatureTypeEnum["TypeDrinkingWater"] = "typeDrinkingWater";
    GeocodingSummaryFeatureTypeEnum["TypeCurrent"] = "typeCurrent";
    GeocodingSummaryFeatureTypeEnum["TypeWateringHole"] = "typeWateringHole";
    GeocodingSummaryFeatureTypeEnum["TypeTectonic"] = "typeTectonic";
    GeocodingSummaryFeatureTypeEnum["TypeWateringHoleDeprecated"] = "typeWateringHoleDeprecated";
    GeocodingSummaryFeatureTypeEnum["TypeVolcano"] = "typeVolcano";
    GeocodingSummaryFeatureTypeEnum["TypeLavaField"] = "typeLavaField";
    GeocodingSummaryFeatureTypeEnum["TypeFissure"] = "typeFissure";
    GeocodingSummaryFeatureTypeEnum["TypeFault"] = "typeFault";
    GeocodingSummaryFeatureTypeEnum["TypeLandMass"] = "typeLandMass";
    GeocodingSummaryFeatureTypeEnum["TypeContinent"] = "typeContinent";
    GeocodingSummaryFeatureTypeEnum["TypeIsland"] = "typeIsland";
    GeocodingSummaryFeatureTypeEnum["TypeAtoll"] = "typeAtoll";
    GeocodingSummaryFeatureTypeEnum["TypeOceanRockExposed"] = "typeOceanRockExposed";
    GeocodingSummaryFeatureTypeEnum["TypeCay"] = "typeCay";
    GeocodingSummaryFeatureTypeEnum["TypePeninsula"] = "typePeninsula";
    GeocodingSummaryFeatureTypeEnum["TypeIsthmus"] = "typeIsthmus";
    GeocodingSummaryFeatureTypeEnum["TypeElevated"] = "typeElevated";
    GeocodingSummaryFeatureTypeEnum["TypePeak"] = "typePeak";
    GeocodingSummaryFeatureTypeEnum["TypeNunatak"] = "typeNunatak";
    GeocodingSummaryFeatureTypeEnum["TypeSpur"] = "typeSpur";
    GeocodingSummaryFeatureTypeEnum["TypePass"] = "typePass";
    GeocodingSummaryFeatureTypeEnum["TypePlateau"] = "typePlateau";
    GeocodingSummaryFeatureTypeEnum["TypeRidge"] = "typeRidge";
    GeocodingSummaryFeatureTypeEnum["TypeRavine"] = "typeRavine";
    GeocodingSummaryFeatureTypeEnum["TypeCrater"] = "typeCrater";
    GeocodingSummaryFeatureTypeEnum["TypeKarst"] = "typeKarst";
    GeocodingSummaryFeatureTypeEnum["TypeCliff"] = "typeCliff";
    GeocodingSummaryFeatureTypeEnum["TypeVista"] = "typeVista";
    GeocodingSummaryFeatureTypeEnum["TypeDigitalElevationModel"] = "typeDigitalElevationModel";
    GeocodingSummaryFeatureTypeEnum["TypeUpland"] = "typeUpland";
    GeocodingSummaryFeatureTypeEnum["TypeTerrace"] = "typeTerrace";
    GeocodingSummaryFeatureTypeEnum["TypeSlope"] = "typeSlope";
    GeocodingSummaryFeatureTypeEnum["TypeContourLine"] = "typeContourLine";
    GeocodingSummaryFeatureTypeEnum["TypePan"] = "typePan";
    GeocodingSummaryFeatureTypeEnum["TypeUnstableHillside"] = "typeUnstableHillside";
    GeocodingSummaryFeatureTypeEnum["TypeMountainRange"] = "typeMountainRange";
    GeocodingSummaryFeatureTypeEnum["TypeUndersea"] = "typeUndersea";
    GeocodingSummaryFeatureTypeEnum["TypeSubmarineSeamount"] = "typeSubmarineSeamount";
    GeocodingSummaryFeatureTypeEnum["TypeSubmarineRidge"] = "typeSubmarineRidge";
    GeocodingSummaryFeatureTypeEnum["TypeSubmarineGap"] = "typeSubmarineGap";
    GeocodingSummaryFeatureTypeEnum["TypeSubmarinePlateau"] = "typeSubmarinePlateau";
    GeocodingSummaryFeatureTypeEnum["TypeSubmarineDeep"] = "typeSubmarineDeep";
    GeocodingSummaryFeatureTypeEnum["TypeSubmarineValley"] = "typeSubmarineValley";
    GeocodingSummaryFeatureTypeEnum["TypeSubmarineBasin"] = "typeSubmarineBasin";
    GeocodingSummaryFeatureTypeEnum["TypeSubmarineSlope"] = "typeSubmarineSlope";
    GeocodingSummaryFeatureTypeEnum["TypeSubmarineCliff"] = "typeSubmarineCliff";
    GeocodingSummaryFeatureTypeEnum["TypeSubmarinePlain"] = "typeSubmarinePlain";
    GeocodingSummaryFeatureTypeEnum["TypeSubmarineFractureZone"] = "typeSubmarineFractureZone";
    GeocodingSummaryFeatureTypeEnum["TypeCave"] = "typeCave";
    GeocodingSummaryFeatureTypeEnum["TypeRock"] = "typeRock";
    GeocodingSummaryFeatureTypeEnum["TypeArchipelago"] = "typeArchipelago";
    GeocodingSummaryFeatureTypeEnum["TypePostal"] = "typePostal";
    GeocodingSummaryFeatureTypeEnum["TypePostalCode"] = "typePostalCode";
    GeocodingSummaryFeatureTypeEnum["TypePostalCodePrefix"] = "typePostalCodePrefix";
    GeocodingSummaryFeatureTypeEnum["TypePremise"] = "typePremise";
    GeocodingSummaryFeatureTypeEnum["TypeSubPremise"] = "typeSubPremise";
    GeocodingSummaryFeatureTypeEnum["TypeSuite"] = "typeSuite";
    GeocodingSummaryFeatureTypeEnum["TypePostTown"] = "typePostTown";
    GeocodingSummaryFeatureTypeEnum["TypePostalRound"] = "typePostalRound";
    GeocodingSummaryFeatureTypeEnum["TypeMetaFeature"] = "typeMetaFeature";
    GeocodingSummaryFeatureTypeEnum["TypeDataSource"] = "typeDataSource";
    GeocodingSummaryFeatureTypeEnum["TypeLocale"] = "typeLocale";
    GeocodingSummaryFeatureTypeEnum["TypeTimezone"] = "typeTimezone";
    GeocodingSummaryFeatureTypeEnum["TypeBusinessChain"] = "typeBusinessChain";
    GeocodingSummaryFeatureTypeEnum["TypePhoneNumberPrefix"] = "typePhoneNumberPrefix";
    GeocodingSummaryFeatureTypeEnum["TypePhoneNumberAreaCode"] = "typePhoneNumberAreaCode";
    GeocodingSummaryFeatureTypeEnum["TypeBusinessCorridor"] = "typeBusinessCorridor";
    GeocodingSummaryFeatureTypeEnum["TypeAddressTemplate"] = "typeAddressTemplate";
    GeocodingSummaryFeatureTypeEnum["TypeTransitAgency"] = "typeTransitAgency";
    GeocodingSummaryFeatureTypeEnum["TypeFutureGeometry"] = "typeFutureGeometry";
    GeocodingSummaryFeatureTypeEnum["TypeEvent"] = "typeEvent";
    GeocodingSummaryFeatureTypeEnum["TypeEarthquake"] = "typeEarthquake";
    GeocodingSummaryFeatureTypeEnum["TypeHurricane"] = "typeHurricane";
    GeocodingSummaryFeatureTypeEnum["TypeWeatherCondition"] = "typeWeatherCondition";
    GeocodingSummaryFeatureTypeEnum["TypeTransient"] = "typeTransient";
    GeocodingSummaryFeatureTypeEnum["TypeEntrance"] = "typeEntrance";
    GeocodingSummaryFeatureTypeEnum["TypeCartographic"] = "typeCartographic";
    GeocodingSummaryFeatureTypeEnum["TypeHighTension"] = "typeHighTension";
    GeocodingSummaryFeatureTypeEnum["TypeSkiTrail"] = "typeSkiTrail";
    GeocodingSummaryFeatureTypeEnum["TypeSkiLift"] = "typeSkiLift";
    GeocodingSummaryFeatureTypeEnum["TypeSkiBoundary"] = "typeSkiBoundary";
    GeocodingSummaryFeatureTypeEnum["TypeWatershedBoundary"] = "typeWatershedBoundary";
    GeocodingSummaryFeatureTypeEnum["TypeTarmac"] = "typeTarmac";
    GeocodingSummaryFeatureTypeEnum["TypeWall"] = "typeWall";
    GeocodingSummaryFeatureTypeEnum["TypePicnicArea"] = "typePicnicArea";
    GeocodingSummaryFeatureTypeEnum["TypePlayGround"] = "typePlayGround";
    GeocodingSummaryFeatureTypeEnum["TypeTrailHead"] = "typeTrailHead";
    GeocodingSummaryFeatureTypeEnum["TypeGolfTeeingGround"] = "typeGolfTeeingGround";
    GeocodingSummaryFeatureTypeEnum["TypeGolfPuttingGreen"] = "typeGolfPuttingGreen";
    GeocodingSummaryFeatureTypeEnum["TypeGolfRough"] = "typeGolfRough";
    GeocodingSummaryFeatureTypeEnum["TypeGolfSandBunker"] = "typeGolfSandBunker";
    GeocodingSummaryFeatureTypeEnum["TypeGolfFairway"] = "typeGolfFairway";
    GeocodingSummaryFeatureTypeEnum["TypeGolfHole"] = "typeGolfHole";
    GeocodingSummaryFeatureTypeEnum["TypeDeprecatedGolfShop"] = "typeDeprecatedGolfShop";
    GeocodingSummaryFeatureTypeEnum["TypeCampingSite"] = "typeCampingSite";
    GeocodingSummaryFeatureTypeEnum["TypeDesignatedBarbecuePit"] = "typeDesignatedBarbecuePit";
    GeocodingSummaryFeatureTypeEnum["TypeDesignatedCookingArea"] = "typeDesignatedCookingArea";
    GeocodingSummaryFeatureTypeEnum["TypeCampfirePit"] = "typeCampfirePit";
    GeocodingSummaryFeatureTypeEnum["TypeWaterFountain"] = "typeWaterFountain";
    GeocodingSummaryFeatureTypeEnum["TypeLitterReceptacle"] = "typeLitterReceptacle";
    GeocodingSummaryFeatureTypeEnum["TypeLockerArea"] = "typeLockerArea";
    GeocodingSummaryFeatureTypeEnum["TypeAnimalEnclosure"] = "typeAnimalEnclosure";
    GeocodingSummaryFeatureTypeEnum["TypeCartographicLine"] = "typeCartographicLine";
    GeocodingSummaryFeatureTypeEnum["TypeEstablishment"] = "typeEstablishment";
    GeocodingSummaryFeatureTypeEnum["TypeEstablishmentGrounds"] = "typeEstablishmentGrounds";
    GeocodingSummaryFeatureTypeEnum["TypeEstablishmentBuilding"] = "typeEstablishmentBuilding";
    GeocodingSummaryFeatureTypeEnum["TypeEstablishmentPoi"] = "typeEstablishmentPoi";
    GeocodingSummaryFeatureTypeEnum["TypeEstablishmentService"] = "typeEstablishmentService";
    GeocodingSummaryFeatureTypeEnum["TypeCelestial"] = "typeCelestial";
    GeocodingSummaryFeatureTypeEnum["TypeRoadMonitor"] = "typeRoadMonitor";
    GeocodingSummaryFeatureTypeEnum["TypePublicSpacesAndMonuments"] = "typePublicSpacesAndMonuments";
    GeocodingSummaryFeatureTypeEnum["TypeStatue"] = "typeStatue";
    GeocodingSummaryFeatureTypeEnum["TypeTownSquare"] = "typeTownSquare";
    GeocodingSummaryFeatureTypeEnum["TypeLevel"] = "typeLevel";
    GeocodingSummaryFeatureTypeEnum["TypeCompound"] = "typeCompound";
    GeocodingSummaryFeatureTypeEnum["TypeCompoundGrounds"] = "typeCompoundGrounds";
    GeocodingSummaryFeatureTypeEnum["TypeCompoundBuilding"] = "typeCompoundBuilding";
    GeocodingSummaryFeatureTypeEnum["TypeCompoundSection"] = "typeCompoundSection";
    GeocodingSummaryFeatureTypeEnum["TypeTerminalPoint"] = "typeTerminalPoint";
    GeocodingSummaryFeatureTypeEnum["TypeRegulatedArea"] = "typeRegulatedArea";
    GeocodingSummaryFeatureTypeEnum["TypeLogicalBorder"] = "typeLogicalBorder";
    GeocodingSummaryFeatureTypeEnum["TypeDoNotUseReservedToCatchGeneratedFiles"] = "typeDoNotUseReservedToCatchGeneratedFiles";
    GeocodingSummaryFeatureTypeEnum["TypeUnknown"] = "typeUnknown";
})(GeocodingSummaryFeatureTypeEnum || (GeocodingSummaryFeatureTypeEnum = {}));
// GeocodingSummary
/**
 * Detailed summary of the result from geocoding an address
**/
var GeocodingSummary = /** @class */ (function (_super) {
    __extends(GeocodingSummary, _super);
    function GeocodingSummary() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        SpeakeasyMetadata({ data: "json, name=addressUnderstood" }),
        __metadata("design:type", Boolean)
    ], GeocodingSummary.prototype, "addressUnderstood", void 0);
    __decorate([
        SpeakeasyMetadata({ data: "json, name=featureId" }),
        __metadata("design:type", FeatureIdProto)
    ], GeocodingSummary.prototype, "featureId", void 0);
    __decorate([
        SpeakeasyMetadata({ data: "json, name=featureType" }),
        __metadata("design:type", String)
    ], GeocodingSummary.prototype, "featureType", void 0);
    __decorate([
        SpeakeasyMetadata({ data: "json, name=positionPrecisionMeters" }),
        __metadata("design:type", Number)
    ], GeocodingSummary.prototype, "positionPrecisionMeters", void 0);
    __decorate([
        SpeakeasyMetadata({ data: "json, name=queryString" }),
        __metadata("design:type", String)
    ], GeocodingSummary.prototype, "queryString", void 0);
    return GeocodingSummary;
}(SpeakeasyBase));
export { GeocodingSummary };
