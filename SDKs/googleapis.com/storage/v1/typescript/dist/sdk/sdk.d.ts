import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    StorageBucketAccessControlsDelete(req: operations.StorageBucketAccessControlsDeleteRequest, config?: AxiosRequestConfig): Promise<operations.StorageBucketAccessControlsDeleteResponse>;
    StorageBucketAccessControlsGet(req: operations.StorageBucketAccessControlsGetRequest, config?: AxiosRequestConfig): Promise<operations.StorageBucketAccessControlsGetResponse>;
    StorageBucketAccessControlsInsert(req: operations.StorageBucketAccessControlsInsertRequest, config?: AxiosRequestConfig): Promise<operations.StorageBucketAccessControlsInsertResponse>;
    StorageBucketAccessControlsList(req: operations.StorageBucketAccessControlsListRequest, config?: AxiosRequestConfig): Promise<operations.StorageBucketAccessControlsListResponse>;
    StorageBucketAccessControlsPatch(req: operations.StorageBucketAccessControlsPatchRequest, config?: AxiosRequestConfig): Promise<operations.StorageBucketAccessControlsPatchResponse>;
    StorageBucketAccessControlsUpdate(req: operations.StorageBucketAccessControlsUpdateRequest, config?: AxiosRequestConfig): Promise<operations.StorageBucketAccessControlsUpdateResponse>;
    StorageBucketsDelete(req: operations.StorageBucketsDeleteRequest, config?: AxiosRequestConfig): Promise<operations.StorageBucketsDeleteResponse>;
    StorageBucketsGet(req: operations.StorageBucketsGetRequest, config?: AxiosRequestConfig): Promise<operations.StorageBucketsGetResponse>;
    StorageBucketsGetIamPolicy(req: operations.StorageBucketsGetIamPolicyRequest, config?: AxiosRequestConfig): Promise<operations.StorageBucketsGetIamPolicyResponse>;
    StorageBucketsInsert(req: operations.StorageBucketsInsertRequest, config?: AxiosRequestConfig): Promise<operations.StorageBucketsInsertResponse>;
    StorageBucketsList(req: operations.StorageBucketsListRequest, config?: AxiosRequestConfig): Promise<operations.StorageBucketsListResponse>;
    StorageBucketsLockRetentionPolicy(req: operations.StorageBucketsLockRetentionPolicyRequest, config?: AxiosRequestConfig): Promise<operations.StorageBucketsLockRetentionPolicyResponse>;
    StorageBucketsPatch(req: operations.StorageBucketsPatchRequest, config?: AxiosRequestConfig): Promise<operations.StorageBucketsPatchResponse>;
    StorageBucketsSetIamPolicy(req: operations.StorageBucketsSetIamPolicyRequest, config?: AxiosRequestConfig): Promise<operations.StorageBucketsSetIamPolicyResponse>;
    StorageBucketsTestIamPermissions(req: operations.StorageBucketsTestIamPermissionsRequest, config?: AxiosRequestConfig): Promise<operations.StorageBucketsTestIamPermissionsResponse>;
    StorageBucketsUpdate(req: operations.StorageBucketsUpdateRequest, config?: AxiosRequestConfig): Promise<operations.StorageBucketsUpdateResponse>;
    StorageChannelsStop(req: operations.StorageChannelsStopRequest, config?: AxiosRequestConfig): Promise<operations.StorageChannelsStopResponse>;
    StorageDefaultObjectAccessControlsDelete(req: operations.StorageDefaultObjectAccessControlsDeleteRequest, config?: AxiosRequestConfig): Promise<operations.StorageDefaultObjectAccessControlsDeleteResponse>;
    StorageDefaultObjectAccessControlsGet(req: operations.StorageDefaultObjectAccessControlsGetRequest, config?: AxiosRequestConfig): Promise<operations.StorageDefaultObjectAccessControlsGetResponse>;
    StorageDefaultObjectAccessControlsInsert(req: operations.StorageDefaultObjectAccessControlsInsertRequest, config?: AxiosRequestConfig): Promise<operations.StorageDefaultObjectAccessControlsInsertResponse>;
    StorageDefaultObjectAccessControlsList(req: operations.StorageDefaultObjectAccessControlsListRequest, config?: AxiosRequestConfig): Promise<operations.StorageDefaultObjectAccessControlsListResponse>;
    StorageDefaultObjectAccessControlsPatch(req: operations.StorageDefaultObjectAccessControlsPatchRequest, config?: AxiosRequestConfig): Promise<operations.StorageDefaultObjectAccessControlsPatchResponse>;
    StorageDefaultObjectAccessControlsUpdate(req: operations.StorageDefaultObjectAccessControlsUpdateRequest, config?: AxiosRequestConfig): Promise<operations.StorageDefaultObjectAccessControlsUpdateResponse>;
    StorageNotificationsDelete(req: operations.StorageNotificationsDeleteRequest, config?: AxiosRequestConfig): Promise<operations.StorageNotificationsDeleteResponse>;
    StorageNotificationsGet(req: operations.StorageNotificationsGetRequest, config?: AxiosRequestConfig): Promise<operations.StorageNotificationsGetResponse>;
    StorageNotificationsInsert(req: operations.StorageNotificationsInsertRequest, config?: AxiosRequestConfig): Promise<operations.StorageNotificationsInsertResponse>;
    StorageNotificationsList(req: operations.StorageNotificationsListRequest, config?: AxiosRequestConfig): Promise<operations.StorageNotificationsListResponse>;
    StorageObjectAccessControlsDelete(req: operations.StorageObjectAccessControlsDeleteRequest, config?: AxiosRequestConfig): Promise<operations.StorageObjectAccessControlsDeleteResponse>;
    StorageObjectAccessControlsGet(req: operations.StorageObjectAccessControlsGetRequest, config?: AxiosRequestConfig): Promise<operations.StorageObjectAccessControlsGetResponse>;
    StorageObjectAccessControlsInsert(req: operations.StorageObjectAccessControlsInsertRequest, config?: AxiosRequestConfig): Promise<operations.StorageObjectAccessControlsInsertResponse>;
    StorageObjectAccessControlsList(req: operations.StorageObjectAccessControlsListRequest, config?: AxiosRequestConfig): Promise<operations.StorageObjectAccessControlsListResponse>;
    StorageObjectAccessControlsPatch(req: operations.StorageObjectAccessControlsPatchRequest, config?: AxiosRequestConfig): Promise<operations.StorageObjectAccessControlsPatchResponse>;
    StorageObjectAccessControlsUpdate(req: operations.StorageObjectAccessControlsUpdateRequest, config?: AxiosRequestConfig): Promise<operations.StorageObjectAccessControlsUpdateResponse>;
    StorageObjectsCompose(req: operations.StorageObjectsComposeRequest, config?: AxiosRequestConfig): Promise<operations.StorageObjectsComposeResponse>;
    StorageObjectsCopy(req: operations.StorageObjectsCopyRequest, config?: AxiosRequestConfig): Promise<operations.StorageObjectsCopyResponse>;
    StorageObjectsDelete(req: operations.StorageObjectsDeleteRequest, config?: AxiosRequestConfig): Promise<operations.StorageObjectsDeleteResponse>;
    StorageObjectsGet(req: operations.StorageObjectsGetRequest, config?: AxiosRequestConfig): Promise<operations.StorageObjectsGetResponse>;
    StorageObjectsGetIamPolicy(req: operations.StorageObjectsGetIamPolicyRequest, config?: AxiosRequestConfig): Promise<operations.StorageObjectsGetIamPolicyResponse>;
    StorageObjectsInsert(req: operations.StorageObjectsInsertRequest, config?: AxiosRequestConfig): Promise<operations.StorageObjectsInsertResponse>;
    StorageObjectsList(req: operations.StorageObjectsListRequest, config?: AxiosRequestConfig): Promise<operations.StorageObjectsListResponse>;
    StorageObjectsPatch(req: operations.StorageObjectsPatchRequest, config?: AxiosRequestConfig): Promise<operations.StorageObjectsPatchResponse>;
    StorageObjectsRewrite(req: operations.StorageObjectsRewriteRequest, config?: AxiosRequestConfig): Promise<operations.StorageObjectsRewriteResponse>;
    StorageObjectsSetIamPolicy(req: operations.StorageObjectsSetIamPolicyRequest, config?: AxiosRequestConfig): Promise<operations.StorageObjectsSetIamPolicyResponse>;
    StorageObjectsTestIamPermissions(req: operations.StorageObjectsTestIamPermissionsRequest, config?: AxiosRequestConfig): Promise<operations.StorageObjectsTestIamPermissionsResponse>;
    StorageObjectsUpdate(req: operations.StorageObjectsUpdateRequest, config?: AxiosRequestConfig): Promise<operations.StorageObjectsUpdateResponse>;
    StorageObjectsWatchAll(req: operations.StorageObjectsWatchAllRequest, config?: AxiosRequestConfig): Promise<operations.StorageObjectsWatchAllResponse>;
    StorageProjectsHmacKeysCreate(req: operations.StorageProjectsHmacKeysCreateRequest, config?: AxiosRequestConfig): Promise<operations.StorageProjectsHmacKeysCreateResponse>;
    StorageProjectsHmacKeysDelete(req: operations.StorageProjectsHmacKeysDeleteRequest, config?: AxiosRequestConfig): Promise<operations.StorageProjectsHmacKeysDeleteResponse>;
    StorageProjectsHmacKeysGet(req: operations.StorageProjectsHmacKeysGetRequest, config?: AxiosRequestConfig): Promise<operations.StorageProjectsHmacKeysGetResponse>;
    StorageProjectsHmacKeysList(req: operations.StorageProjectsHmacKeysListRequest, config?: AxiosRequestConfig): Promise<operations.StorageProjectsHmacKeysListResponse>;
    StorageProjectsHmacKeysUpdate(req: operations.StorageProjectsHmacKeysUpdateRequest, config?: AxiosRequestConfig): Promise<operations.StorageProjectsHmacKeysUpdateResponse>;
    StorageProjectsServiceAccountGet(req: operations.StorageProjectsServiceAccountGetRequest, config?: AxiosRequestConfig): Promise<operations.StorageProjectsServiceAccountGetResponse>;
}
export {};
