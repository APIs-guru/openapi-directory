from dataclasses import dataclass, field
from typing import Optional
from enum import Enum
from dataclasses_json import dataclass_json
from sdk import utils
from . import *

class CheckErrorCodeEnum(str, Enum):
    ERROR_CODE_UNSPECIFIED = "ERROR_CODE_UNSPECIFIED"
    NOT_FOUND = "NOT_FOUND"
    PERMISSION_DENIED = "PERMISSION_DENIED"
    RESOURCE_EXHAUSTED = "RESOURCE_EXHAUSTED"
    BUDGET_EXCEEDED = "BUDGET_EXCEEDED"
    DENIAL_OF_SERVICE_DETECTED = "DENIAL_OF_SERVICE_DETECTED"
    LOAD_SHEDDING = "LOAD_SHEDDING"
    ABUSER_DETECTED = "ABUSER_DETECTED"
    SERVICE_NOT_ACTIVATED = "SERVICE_NOT_ACTIVATED"
    VISIBILITY_DENIED = "VISIBILITY_DENIED"
    BILLING_DISABLED = "BILLING_DISABLED"
    PROJECT_DELETED = "PROJECT_DELETED"
    PROJECT_INVALID = "PROJECT_INVALID"
    CONSUMER_INVALID = "CONSUMER_INVALID"
    IP_ADDRESS_BLOCKED = "IP_ADDRESS_BLOCKED"
    REFERER_BLOCKED = "REFERER_BLOCKED"
    CLIENT_APP_BLOCKED = "CLIENT_APP_BLOCKED"
    API_TARGET_BLOCKED = "API_TARGET_BLOCKED"
    API_KEY_INVALID = "API_KEY_INVALID"
    API_KEY_EXPIRED = "API_KEY_EXPIRED"
    API_KEY_NOT_FOUND = "API_KEY_NOT_FOUND"
    SPATULA_HEADER_INVALID = "SPATULA_HEADER_INVALID"
    LOAS_ROLE_INVALID = "LOAS_ROLE_INVALID"
    NO_LOAS_PROJECT = "NO_LOAS_PROJECT"
    LOAS_PROJECT_DISABLED = "LOAS_PROJECT_DISABLED"
    SECURITY_POLICY_VIOLATED = "SECURITY_POLICY_VIOLATED"
    INVALID_CREDENTIAL = "INVALID_CREDENTIAL"
    LOCATION_POLICY_VIOLATED = "LOCATION_POLICY_VIOLATED"
    NAMESPACE_LOOKUP_UNAVAILABLE = "NAMESPACE_LOOKUP_UNAVAILABLE"
    SERVICE_STATUS_UNAVAILABLE = "SERVICE_STATUS_UNAVAILABLE"
    BILLING_STATUS_UNAVAILABLE = "BILLING_STATUS_UNAVAILABLE"
    QUOTA_CHECK_UNAVAILABLE = "QUOTA_CHECK_UNAVAILABLE"
    LOAS_PROJECT_LOOKUP_UNAVAILABLE = "LOAS_PROJECT_LOOKUP_UNAVAILABLE"
    CLOUD_RESOURCE_MANAGER_BACKEND_UNAVAILABLE = "CLOUD_RESOURCE_MANAGER_BACKEND_UNAVAILABLE"
    SECURITY_POLICY_BACKEND_UNAVAILABLE = "SECURITY_POLICY_BACKEND_UNAVAILABLE"
    LOCATION_POLICY_BACKEND_UNAVAILABLE = "LOCATION_POLICY_BACKEND_UNAVAILABLE"
    INJECTED_ERROR = "INJECTED_ERROR"


@dataclass_json
@dataclass
class CheckError:
    r"""CheckError
    Defines the errors to be returned in google.api.servicecontrol.v1.CheckResponse.check_errors.
    """
    
    code: Optional[CheckErrorCodeEnum] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('code') }})
    detail: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('detail') }})
    status: Optional[Status] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('status') }})
    subject: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subject') }})
    
