package shared




type RelationshipNoteTypeEnum string

const (
    RelationshipNoteTypeEnumRelationshipTypeUnspecified RelationshipNoteTypeEnum = "RELATIONSHIP_TYPE_UNSPECIFIED"
RelationshipNoteTypeEnumDescribes RelationshipNoteTypeEnum = "DESCRIBES"
RelationshipNoteTypeEnumDescribedBy RelationshipNoteTypeEnum = "DESCRIBED_BY"
RelationshipNoteTypeEnumContains RelationshipNoteTypeEnum = "CONTAINS"
RelationshipNoteTypeEnumContainedBy RelationshipNoteTypeEnum = "CONTAINED_BY"
RelationshipNoteTypeEnumDependsOn RelationshipNoteTypeEnum = "DEPENDS_ON"
RelationshipNoteTypeEnumDependencyOf RelationshipNoteTypeEnum = "DEPENDENCY_OF"
RelationshipNoteTypeEnumDependencyManifestOf RelationshipNoteTypeEnum = "DEPENDENCY_MANIFEST_OF"
RelationshipNoteTypeEnumBuildDependencyOf RelationshipNoteTypeEnum = "BUILD_DEPENDENCY_OF"
RelationshipNoteTypeEnumDevDependencyOf RelationshipNoteTypeEnum = "DEV_DEPENDENCY_OF"
RelationshipNoteTypeEnumOptionalDependencyOf RelationshipNoteTypeEnum = "OPTIONAL_DEPENDENCY_OF"
RelationshipNoteTypeEnumProvidedDependencyOf RelationshipNoteTypeEnum = "PROVIDED_DEPENDENCY_OF"
RelationshipNoteTypeEnumTestDependencyOf RelationshipNoteTypeEnum = "TEST_DEPENDENCY_OF"
RelationshipNoteTypeEnumRuntimeDependencyOf RelationshipNoteTypeEnum = "RUNTIME_DEPENDENCY_OF"
RelationshipNoteTypeEnumExampleOf RelationshipNoteTypeEnum = "EXAMPLE_OF"
RelationshipNoteTypeEnumGenerates RelationshipNoteTypeEnum = "GENERATES"
RelationshipNoteTypeEnumGeneratedFrom RelationshipNoteTypeEnum = "GENERATED_FROM"
RelationshipNoteTypeEnumAncestorOf RelationshipNoteTypeEnum = "ANCESTOR_OF"
RelationshipNoteTypeEnumDescendantOf RelationshipNoteTypeEnum = "DESCENDANT_OF"
RelationshipNoteTypeEnumVariantOf RelationshipNoteTypeEnum = "VARIANT_OF"
RelationshipNoteTypeEnumDistributionArtifact RelationshipNoteTypeEnum = "DISTRIBUTION_ARTIFACT"
RelationshipNoteTypeEnumPatchFor RelationshipNoteTypeEnum = "PATCH_FOR"
RelationshipNoteTypeEnumPatchApplied RelationshipNoteTypeEnum = "PATCH_APPLIED"
RelationshipNoteTypeEnumCopyOf RelationshipNoteTypeEnum = "COPY_OF"
RelationshipNoteTypeEnumFileAdded RelationshipNoteTypeEnum = "FILE_ADDED"
RelationshipNoteTypeEnumFileDeleted RelationshipNoteTypeEnum = "FILE_DELETED"
RelationshipNoteTypeEnumFileModified RelationshipNoteTypeEnum = "FILE_MODIFIED"
RelationshipNoteTypeEnumExpandedFromArchive RelationshipNoteTypeEnum = "EXPANDED_FROM_ARCHIVE"
RelationshipNoteTypeEnumDynamicLink RelationshipNoteTypeEnum = "DYNAMIC_LINK"
RelationshipNoteTypeEnumStaticLink RelationshipNoteTypeEnum = "STATIC_LINK"
RelationshipNoteTypeEnumDataFileOf RelationshipNoteTypeEnum = "DATA_FILE_OF"
RelationshipNoteTypeEnumTestCaseOf RelationshipNoteTypeEnum = "TEST_CASE_OF"
RelationshipNoteTypeEnumBuildToolOf RelationshipNoteTypeEnum = "BUILD_TOOL_OF"
RelationshipNoteTypeEnumDevToolOf RelationshipNoteTypeEnum = "DEV_TOOL_OF"
RelationshipNoteTypeEnumTestOf RelationshipNoteTypeEnum = "TEST_OF"
RelationshipNoteTypeEnumTestToolOf RelationshipNoteTypeEnum = "TEST_TOOL_OF"
RelationshipNoteTypeEnumDocumentationOf RelationshipNoteTypeEnum = "DOCUMENTATION_OF"
RelationshipNoteTypeEnumOptionalComponentOf RelationshipNoteTypeEnum = "OPTIONAL_COMPONENT_OF"
RelationshipNoteTypeEnumMetafileOf RelationshipNoteTypeEnum = "METAFILE_OF"
RelationshipNoteTypeEnumPackageOf RelationshipNoteTypeEnum = "PACKAGE_OF"
RelationshipNoteTypeEnumAmends RelationshipNoteTypeEnum = "AMENDS"
RelationshipNoteTypeEnumPrerequisiteFor RelationshipNoteTypeEnum = "PREREQUISITE_FOR"
RelationshipNoteTypeEnumHasPrerequisite RelationshipNoteTypeEnum = "HAS_PREREQUISITE"
RelationshipNoteTypeEnumOther RelationshipNoteTypeEnum = "OTHER"
)


type RelationshipNote struct {
    Type *RelationshipNoteTypeEnum `json:"type,omitempty"`
    
}

