from dataclasses import dataclass, field
from typing import Enum,List,Optional
from dataclasses_json import dataclass_json
from . import cvss
from . import packageissue

class VulnerabilityDetailsEffectiveSeverityEnum(str, Enum):
    SEVERITY_UNSPECIFIED = "SEVERITY_UNSPECIFIED"
    MINIMAL = "MINIMAL"
    LOW = "LOW"
    MEDIUM = "MEDIUM"
    HIGH = "HIGH"
    CRITICAL = "CRITICAL"

class VulnerabilityDetailsSeverityEnum(str, Enum):
    SEVERITY_UNSPECIFIED = "SEVERITY_UNSPECIFIED"
    MINIMAL = "MINIMAL"
    LOW = "LOW"
    MEDIUM = "MEDIUM"
    HIGH = "HIGH"
    CRITICAL = "CRITICAL"


@dataclass_json
@dataclass
class VulnerabilityDetails:
    cvss_score: Optional[float] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'cvssScore' }})
    cvss_v3: Optional[cvss.Cvss] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'cvssV3' }})
    effective_severity: Optional[VulnerabilityDetailsEffectiveSeverityEnum] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'effectiveSeverity' }})
    package_issue: Optional[List[packageissue.PackageIssue]] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'packageIssue' }})
    severity: Optional[VulnerabilityDetailsSeverityEnum] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'severity' }})
    type: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'type' }})
    
