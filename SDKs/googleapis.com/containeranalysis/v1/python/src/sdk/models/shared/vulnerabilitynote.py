from dataclasses import dataclass, field
from datetime import date, datetime
from marshmallow import fields
import dateutil.parser
from typing import List,Optional
from enum import Enum
from dataclasses_json import dataclass_json
from sdk import utils
from . import *

class VulnerabilityNoteCvssVersionEnum(str, Enum):
    CVSS_VERSION_UNSPECIFIED = "CVSS_VERSION_UNSPECIFIED"
    CVSS_VERSION_2 = "CVSS_VERSION_2"
    CVSS_VERSION_3 = "CVSS_VERSION_3"

class VulnerabilityNoteSeverityEnum(str, Enum):
    SEVERITY_UNSPECIFIED = "SEVERITY_UNSPECIFIED"
    MINIMAL = "MINIMAL"
    LOW = "LOW"
    MEDIUM = "MEDIUM"
    HIGH = "HIGH"
    CRITICAL = "CRITICAL"


@dataclass_json
@dataclass
class VulnerabilityNote:
    r"""VulnerabilityNote
    A security vulnerability that can be found in resources.
    """
    
    cvss_score: Optional[float] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('cvssScore') }})
    cvss_v3: Optional[CvsSv3] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('cvssV3') }})
    cvss_version: Optional[VulnerabilityNoteCvssVersionEnum] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('cvssVersion') }})
    details: Optional[List[Detail]] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('details') }})
    severity: Optional[VulnerabilityNoteSeverityEnum] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('severity') }})
    source_update_time: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('sourceUpdateTime') }})
    windows_details: Optional[List[WindowsDetail]] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('windowsDetails') }})
    
