from dataclasses import dataclass, field
from typing import List,Optional
from enum import Enum
from dataclasses_json import dataclass_json
from sdk import utils
from . import *

class GrafeasV1beta1VulnerabilityDetailsCvssVersionEnum(str, Enum):
    CVSS_VERSION_UNSPECIFIED = "CVSS_VERSION_UNSPECIFIED"
    CVSS_VERSION_2 = "CVSS_VERSION_2"
    CVSS_VERSION_3 = "CVSS_VERSION_3"

class GrafeasV1beta1VulnerabilityDetailsEffectiveSeverityEnum(str, Enum):
    SEVERITY_UNSPECIFIED = "SEVERITY_UNSPECIFIED"
    MINIMAL = "MINIMAL"
    LOW = "LOW"
    MEDIUM = "MEDIUM"
    HIGH = "HIGH"
    CRITICAL = "CRITICAL"

class GrafeasV1beta1VulnerabilityDetailsSeverityEnum(str, Enum):
    SEVERITY_UNSPECIFIED = "SEVERITY_UNSPECIFIED"
    MINIMAL = "MINIMAL"
    LOW = "LOW"
    MEDIUM = "MEDIUM"
    HIGH = "HIGH"
    CRITICAL = "CRITICAL"


@dataclass_json
@dataclass
class GrafeasV1beta1VulnerabilityDetailsInput:
    r"""GrafeasV1beta1VulnerabilityDetailsInput
    Details of a vulnerability Occurrence.
    """
    
    cvss_score: Optional[float] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('cvssScore') }})
    cvss_version: Optional[GrafeasV1beta1VulnerabilityDetailsCvssVersionEnum] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('cvssVersion') }})
    effective_severity: Optional[GrafeasV1beta1VulnerabilityDetailsEffectiveSeverityEnum] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('effectiveSeverity') }})
    long_description: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('longDescription') }})
    package_issue: Optional[List[PackageIssueInput]] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('packageIssue') }})
    related_urls: Optional[List[RelatedURL]] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('relatedUrls') }})
    severity: Optional[GrafeasV1beta1VulnerabilityDetailsSeverityEnum] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('severity') }})
    short_description: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('shortDescription') }})
    type: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('type') }})
    

@dataclass_json
@dataclass
class GrafeasV1beta1VulnerabilityDetails:
    r"""GrafeasV1beta1VulnerabilityDetails
    Details of a vulnerability Occurrence.
    """
    
    cvss_score: Optional[float] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('cvssScore') }})
    cvss_version: Optional[GrafeasV1beta1VulnerabilityDetailsCvssVersionEnum] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('cvssVersion') }})
    effective_severity: Optional[GrafeasV1beta1VulnerabilityDetailsEffectiveSeverityEnum] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('effectiveSeverity') }})
    long_description: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('longDescription') }})
    package_issue: Optional[List[PackageIssue]] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('packageIssue') }})
    related_urls: Optional[List[RelatedURL]] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('relatedUrls') }})
    severity: Optional[GrafeasV1beta1VulnerabilityDetailsSeverityEnum] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('severity') }})
    short_description: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('shortDescription') }})
    type: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('type') }})
    
