from dataclasses import dataclass, field
from typing import Enum,Optional
from dataclasses_json import dataclass_json

class TagDataFormatEnum(str, Enum):
    PLACEMENT_TAG_STANDARD = "PLACEMENT_TAG_STANDARD"
    PLACEMENT_TAG_IFRAME_JAVASCRIPT = "PLACEMENT_TAG_IFRAME_JAVASCRIPT"
    PLACEMENT_TAG_IFRAME_ILAYER = "PLACEMENT_TAG_IFRAME_ILAYER"
    PLACEMENT_TAG_INTERNAL_REDIRECT = "PLACEMENT_TAG_INTERNAL_REDIRECT"
    PLACEMENT_TAG_JAVASCRIPT = "PLACEMENT_TAG_JAVASCRIPT"
    PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT = "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT"
    PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT = "PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT"
    PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT = "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT"
    PLACEMENT_TAG_CLICK_COMMANDS = "PLACEMENT_TAG_CLICK_COMMANDS"
    PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH = "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH"
    PLACEMENT_TAG_TRACKING = "PLACEMENT_TAG_TRACKING"
    PLACEMENT_TAG_TRACKING_IFRAME = "PLACEMENT_TAG_TRACKING_IFRAME"
    PLACEMENT_TAG_TRACKING_JAVASCRIPT = "PLACEMENT_TAG_TRACKING_JAVASCRIPT"
    PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_3 = "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_3"
    PLACEMENT_TAG_IFRAME_JAVASCRIPT_LEGACY = "PLACEMENT_TAG_IFRAME_JAVASCRIPT_LEGACY"
    PLACEMENT_TAG_JAVASCRIPT_LEGACY = "PLACEMENT_TAG_JAVASCRIPT_LEGACY"
    PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT_LEGACY = "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT_LEGACY"
    PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT_LEGACY = "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT_LEGACY"
    PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_4 = "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_4"
    PLACEMENT_TAG_TRACKING_THIRD_PARTY_MEASUREMENT = "PLACEMENT_TAG_TRACKING_THIRD_PARTY_MEASUREMENT"


@dataclass_json
@dataclass
class TagData:
    ad_id: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'adId' }})
    click_tag: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'clickTag' }})
    creative_id: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'creativeId' }})
    format: Optional[TagDataFormatEnum] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'format' }})
    impression_tag: Optional[str] = field(default=None, metadata={'dataclasses_json': { 'field_name': 'impressionTag' }})
    
