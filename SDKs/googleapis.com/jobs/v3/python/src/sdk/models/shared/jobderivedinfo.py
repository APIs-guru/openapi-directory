from dataclasses import dataclass, field
from typing import List,Optional
from enum import Enum
from dataclasses_json import dataclass_json
from sdk import utils
from . import *

class JobDerivedInfoJobCategoriesEnum(str, Enum):
    JOB_CATEGORY_UNSPECIFIED = "JOB_CATEGORY_UNSPECIFIED"
    ACCOUNTING_AND_FINANCE = "ACCOUNTING_AND_FINANCE"
    ADMINISTRATIVE_AND_OFFICE = "ADMINISTRATIVE_AND_OFFICE"
    ADVERTISING_AND_MARKETING = "ADVERTISING_AND_MARKETING"
    ANIMAL_CARE = "ANIMAL_CARE"
    ART_FASHION_AND_DESIGN = "ART_FASHION_AND_DESIGN"
    BUSINESS_OPERATIONS = "BUSINESS_OPERATIONS"
    CLEANING_AND_FACILITIES = "CLEANING_AND_FACILITIES"
    COMPUTER_AND_IT = "COMPUTER_AND_IT"
    CONSTRUCTION = "CONSTRUCTION"
    CUSTOMER_SERVICE = "CUSTOMER_SERVICE"
    EDUCATION = "EDUCATION"
    ENTERTAINMENT_AND_TRAVEL = "ENTERTAINMENT_AND_TRAVEL"
    FARMING_AND_OUTDOORS = "FARMING_AND_OUTDOORS"
    HEALTHCARE = "HEALTHCARE"
    HUMAN_RESOURCES = "HUMAN_RESOURCES"
    INSTALLATION_MAINTENANCE_AND_REPAIR = "INSTALLATION_MAINTENANCE_AND_REPAIR"
    LEGAL = "LEGAL"
    MANAGEMENT = "MANAGEMENT"
    MANUFACTURING_AND_WAREHOUSE = "MANUFACTURING_AND_WAREHOUSE"
    MEDIA_COMMUNICATIONS_AND_WRITING = "MEDIA_COMMUNICATIONS_AND_WRITING"
    OIL_GAS_AND_MINING = "OIL_GAS_AND_MINING"
    PERSONAL_CARE_AND_SERVICES = "PERSONAL_CARE_AND_SERVICES"
    PROTECTIVE_SERVICES = "PROTECTIVE_SERVICES"
    REAL_ESTATE = "REAL_ESTATE"
    RESTAURANT_AND_HOSPITALITY = "RESTAURANT_AND_HOSPITALITY"
    SALES_AND_RETAIL = "SALES_AND_RETAIL"
    SCIENCE_AND_ENGINEERING = "SCIENCE_AND_ENGINEERING"
    SOCIAL_SERVICES_AND_NON_PROFIT = "SOCIAL_SERVICES_AND_NON_PROFIT"
    SPORTS_FITNESS_AND_RECREATION = "SPORTS_FITNESS_AND_RECREATION"
    TRANSPORTATION_AND_LOGISTICS = "TRANSPORTATION_AND_LOGISTICS"


@dataclass_json
@dataclass
class JobDerivedInfo:
    r"""JobDerivedInfo
    Output only. Derived details about the job posting.
    """
    
    job_categories: Optional[List[JobDerivedInfoJobCategoriesEnum]] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('jobCategories') }})
    locations: Optional[List[Location]] = field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('locations') }})
    
