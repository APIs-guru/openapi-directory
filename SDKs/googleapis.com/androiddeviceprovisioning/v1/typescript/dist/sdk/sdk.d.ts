import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    AndroiddeviceprovisioningCustomersConfigurationsCreate(req: operations.AndroiddeviceprovisioningCustomersConfigurationsCreateRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningCustomersConfigurationsCreateResponse>;
    AndroiddeviceprovisioningCustomersConfigurationsDelete(req: operations.AndroiddeviceprovisioningCustomersConfigurationsDeleteRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningCustomersConfigurationsDeleteResponse>;
    AndroiddeviceprovisioningCustomersConfigurationsList(req: operations.AndroiddeviceprovisioningCustomersConfigurationsListRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningCustomersConfigurationsListResponse>;
    AndroiddeviceprovisioningCustomersConfigurationsPatch(req: operations.AndroiddeviceprovisioningCustomersConfigurationsPatchRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningCustomersConfigurationsPatchResponse>;
    AndroiddeviceprovisioningCustomersDevicesApplyConfiguration(req: operations.AndroiddeviceprovisioningCustomersDevicesApplyConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningCustomersDevicesApplyConfigurationResponse>;
    AndroiddeviceprovisioningCustomersDevicesList(req: operations.AndroiddeviceprovisioningCustomersDevicesListRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningCustomersDevicesListResponse>;
    AndroiddeviceprovisioningCustomersDevicesRemoveConfiguration(req: operations.AndroiddeviceprovisioningCustomersDevicesRemoveConfigurationRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningCustomersDevicesRemoveConfigurationResponse>;
    AndroiddeviceprovisioningCustomersDevicesUnclaim(req: operations.AndroiddeviceprovisioningCustomersDevicesUnclaimRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningCustomersDevicesUnclaimResponse>;
    AndroiddeviceprovisioningCustomersDpcsList(req: operations.AndroiddeviceprovisioningCustomersDpcsListRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningCustomersDpcsListResponse>;
    AndroiddeviceprovisioningCustomersList(req: operations.AndroiddeviceprovisioningCustomersListRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningCustomersListResponse>;
    AndroiddeviceprovisioningPartnersCustomersCreate(req: operations.AndroiddeviceprovisioningPartnersCustomersCreateRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningPartnersCustomersCreateResponse>;
    AndroiddeviceprovisioningPartnersCustomersList(req: operations.AndroiddeviceprovisioningPartnersCustomersListRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningPartnersCustomersListResponse>;
    AndroiddeviceprovisioningPartnersDevicesClaim(req: operations.AndroiddeviceprovisioningPartnersDevicesClaimRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningPartnersDevicesClaimResponse>;
    AndroiddeviceprovisioningPartnersDevicesClaimAsync(req: operations.AndroiddeviceprovisioningPartnersDevicesClaimAsyncRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningPartnersDevicesClaimAsyncResponse>;
    AndroiddeviceprovisioningPartnersDevicesFindByIdentifier(req: operations.AndroiddeviceprovisioningPartnersDevicesFindByIdentifierRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningPartnersDevicesFindByIdentifierResponse>;
    AndroiddeviceprovisioningPartnersDevicesFindByOwner(req: operations.AndroiddeviceprovisioningPartnersDevicesFindByOwnerRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningPartnersDevicesFindByOwnerResponse>;
    AndroiddeviceprovisioningPartnersDevicesGet(req: operations.AndroiddeviceprovisioningPartnersDevicesGetRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningPartnersDevicesGetResponse>;
    AndroiddeviceprovisioningPartnersDevicesMetadata(req: operations.AndroiddeviceprovisioningPartnersDevicesMetadataRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningPartnersDevicesMetadataResponse>;
    AndroiddeviceprovisioningPartnersDevicesUnclaim(req: operations.AndroiddeviceprovisioningPartnersDevicesUnclaimRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningPartnersDevicesUnclaimResponse>;
    AndroiddeviceprovisioningPartnersDevicesUnclaimAsync(req: operations.AndroiddeviceprovisioningPartnersDevicesUnclaimAsyncRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningPartnersDevicesUnclaimAsyncResponse>;
    AndroiddeviceprovisioningPartnersDevicesUpdateMetadataAsync(req: operations.AndroiddeviceprovisioningPartnersDevicesUpdateMetadataAsyncRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningPartnersDevicesUpdateMetadataAsyncResponse>;
    AndroiddeviceprovisioningPartnersVendorsCustomersList(req: operations.AndroiddeviceprovisioningPartnersVendorsCustomersListRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningPartnersVendorsCustomersListResponse>;
    AndroiddeviceprovisioningPartnersVendorsList(req: operations.AndroiddeviceprovisioningPartnersVendorsListRequest, config?: AxiosRequestConfig): Promise<operations.AndroiddeviceprovisioningPartnersVendorsListResponse>;
}
export {};
