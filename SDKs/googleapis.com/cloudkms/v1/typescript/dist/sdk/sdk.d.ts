import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
declare type OptsFunc = (sdk: SDK) => void;
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare class SDK {
    defaultClient?: AxiosInstance;
    securityClient?: AxiosInstance;
    security?: any;
    serverURL: string;
    constructor(...opts: OptsFunc[]);
    CloudkmsProjectsLocationsEkmConnectionsCreate(req: operations.CloudkmsProjectsLocationsEkmConnectionsCreateRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsEkmConnectionsCreateResponse>;
    CloudkmsProjectsLocationsEkmConnectionsList(req: operations.CloudkmsProjectsLocationsEkmConnectionsListRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsEkmConnectionsListResponse>;
    CloudkmsProjectsLocationsGenerateRandomBytes(req: operations.CloudkmsProjectsLocationsGenerateRandomBytesRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsGenerateRandomBytesResponse>;
    CloudkmsProjectsLocationsKeyRingsCreate(req: operations.CloudkmsProjectsLocationsKeyRingsCreateRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsCreateResponse>;
    CloudkmsProjectsLocationsKeyRingsCryptoKeysCreate(req: operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCreateRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCreateResponse>;
    CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsAsymmetricDecrypt(req: operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsAsymmetricDecryptRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsAsymmetricDecryptResponse>;
    CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsAsymmetricSign(req: operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsAsymmetricSignRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsAsymmetricSignResponse>;
    CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsCreate(req: operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsCreateRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsCreateResponse>;
    CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsDestroy(req: operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsDestroyRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsDestroyResponse>;
    CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsGetPublicKey(req: operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsGetPublicKeyRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsGetPublicKeyResponse>;
    CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsImport(req: operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsImportRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsImportResponse>;
    CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsList(req: operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsListRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsListResponse>;
    CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsMacSign(req: operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsMacSignRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsMacSignResponse>;
    CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsMacVerify(req: operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsMacVerifyRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsMacVerifyResponse>;
    CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsPatch(req: operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsPatchRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsPatchResponse>;
    CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsRestore(req: operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsRestoreRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsRestoreResponse>;
    CloudkmsProjectsLocationsKeyRingsCryptoKeysDecrypt(req: operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysDecryptRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysDecryptResponse>;
    CloudkmsProjectsLocationsKeyRingsCryptoKeysEncrypt(req: operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysEncryptRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysEncryptResponse>;
    CloudkmsProjectsLocationsKeyRingsCryptoKeysList(req: operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysListRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysListResponse>;
    CloudkmsProjectsLocationsKeyRingsCryptoKeysUpdatePrimaryVersion(req: operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysUpdatePrimaryVersionRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsCryptoKeysUpdatePrimaryVersionResponse>;
    CloudkmsProjectsLocationsKeyRingsImportJobsCreate(req: operations.CloudkmsProjectsLocationsKeyRingsImportJobsCreateRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsImportJobsCreateResponse>;
    CloudkmsProjectsLocationsKeyRingsImportJobsGet(req: operations.CloudkmsProjectsLocationsKeyRingsImportJobsGetRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsImportJobsGetResponse>;
    CloudkmsProjectsLocationsKeyRingsImportJobsGetIamPolicy(req: operations.CloudkmsProjectsLocationsKeyRingsImportJobsGetIamPolicyRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsImportJobsGetIamPolicyResponse>;
    CloudkmsProjectsLocationsKeyRingsImportJobsList(req: operations.CloudkmsProjectsLocationsKeyRingsImportJobsListRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsImportJobsListResponse>;
    CloudkmsProjectsLocationsKeyRingsImportJobsSetIamPolicy(req: operations.CloudkmsProjectsLocationsKeyRingsImportJobsSetIamPolicyRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsImportJobsSetIamPolicyResponse>;
    CloudkmsProjectsLocationsKeyRingsImportJobsTestIamPermissions(req: operations.CloudkmsProjectsLocationsKeyRingsImportJobsTestIamPermissionsRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsImportJobsTestIamPermissionsResponse>;
    CloudkmsProjectsLocationsKeyRingsList(req: operations.CloudkmsProjectsLocationsKeyRingsListRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsKeyRingsListResponse>;
    CloudkmsProjectsLocationsList(req: operations.CloudkmsProjectsLocationsListRequest, config?: AxiosRequestConfig): Promise<operations.CloudkmsProjectsLocationsListResponse>;
}
export {};
