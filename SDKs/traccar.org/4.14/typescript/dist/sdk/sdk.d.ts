import { AxiosInstance } from "axios";
import { Security } from "./models/shared";
import { Attributes } from "./attributes";
import { Calendars } from "./calendars";
import { Commands } from "./commands";
import { Devices } from "./devices";
import { Drivers } from "./drivers";
import { Events } from "./events";
import { Geofences } from "./geofences";
import { Groups } from "./groups";
import { Maintenance } from "./maintenance";
import { Notifications } from "./notifications";
import { Permissions } from "./permissions";
import { Positions } from "./positions";
import { Reports } from "./reports";
import { Server } from "./server";
import { Session } from "./session";
import { Statistics } from "./statistics";
import { Users } from "./users";
type OptsFunc = (sdk: SDK) => void;
export declare const ServerList: readonly ["https://demo.traccar.org/api", "https://demo2.traccar.org/api", "https://demo3.traccar.org/api", "https://server.traccar.org/api", "http://{host}:{port}/api"];
export declare function WithServerURL(serverURL: string, params?: Map<string, string>): OptsFunc;
export declare function WithClient(client: AxiosInstance): OptsFunc;
export declare function WithSecurity(security: Security): OptsFunc;
export declare class SDK {
    attributes: Attributes;
    calendars: Calendars;
    commands: Commands;
    devices: Devices;
    drivers: Drivers;
    events: Events;
    geofences: Geofences;
    groups: Groups;
    maintenance: Maintenance;
    notifications: Notifications;
    permissions: Permissions;
    positions: Positions;
    reports: Reports;
    server: Server;
    session: Session;
    statistics: Statistics;
    users: Users;
    _defaultClient: AxiosInstance;
    _securityClient: AxiosInstance;
    _security?: Security;
    _serverURL: string;
    private _language;
    private _sdkVersion;
    private _genVersion;
    constructor(...opts: OptsFunc[]);
}
export {};
